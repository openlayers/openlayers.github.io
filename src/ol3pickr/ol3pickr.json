{
  "symbols": [
    {
      "name": "ol.animation.bounce",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/animation.js",
      "params": [
        {
          "name": "options",
          "types": [
            "olx.animation.BounceOptions"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.PreRenderFunction"
        ]
      },
      "provides": [
        "ol.animation"
      ]
    },
    {
      "name": "ol.animation.pan",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/animation.js",
      "params": [
        {
          "name": "options",
          "types": [
            "olx.animation.PanOptions"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.PreRenderFunction"
        ]
      },
      "provides": [
        "ol.animation"
      ]
    },
    {
      "name": "ol.animation.rotate",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/animation.js",
      "params": [
        {
          "name": "options",
          "types": [
            "olx.animation.RotateOptions"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.PreRenderFunction"
        ]
      },
      "provides": [
        "ol.animation"
      ]
    },
    {
      "name": "ol.animation.zoom",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/animation.js",
      "params": [
        {
          "name": "options",
          "types": [
            "olx.animation.ZoomOptions"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.PreRenderFunction"
        ]
      },
      "provides": [
        "ol.animation"
      ]
    },
    {
      "name": "ol.Attribution",
      "kind": "class",
      "description": "An attribution for a layer source.\n\nExample:\n\n    source: new ol.source.OSM({\n      attributions: [\n        new ol.Attribution({\n          html: 'All maps &copy; ' +\n              '<a href=\"http://www.opencyclemap.org/\">OpenCycleMap</a>'\n        }),\n        ol.source.OSM.ATTRIBUTION\n      ],\n    ..",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/attribution.js",
      "params": [
        {
          "name": "options",
          "types": [
            "olx.AttributionOptions"
          ]
        }
      ],
      "provides": [
        "ol.Attribution"
      ]
    },
    {
      "name": "ol.Attribution#getHTML",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/attribution.js",
      "returns": {
        "types": [
          "string"
        ]
      },
      "provides": [
        "ol.Attribution"
      ]
    },
    {
      "name": "ol.CollectionEvent#element",
      "kind": "member",
      "description": "The element that is added to or removed from the collection.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/collection.js",
      "types": [
        "*"
      ],
      "provides": [
        "ol.Collection",
        "ol.CollectionEvent",
        "ol.CollectionEventType"
      ]
    },
    {
      "name": "ol.Collection",
      "kind": "class",
      "description": "An expanded version of standard JS Array, adding convenience methods for\nmanipulation. Add and remove changes to the Collection trigger a Collection\nevent. Note that this does not cover changes to the objects _within_ the\nCollection; they trigger events on the appropriate object, not on the\nCollection as a whole.\n\nBecause a Collection is itself an {@link ol.Object}, it can be bound to any\nother Object or Collection such that a change in one will automatically be\nreflected in the other.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/collection.js",
      "extends": "ol.Object",
      "params": [
        {
          "name": "opt_array",
          "types": [
            "Array.<T>"
          ],
          "optional": true
        }
      ],
      "template": "T",
      "provides": [
        "ol.Collection",
        "ol.CollectionEvent",
        "ol.CollectionEventType"
      ]
    },
    {
      "name": "ol.Collection#clear",
      "kind": "function",
      "description": "Remove all elements from the collection.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/collection.js",
      "provides": [
        "ol.Collection",
        "ol.CollectionEvent",
        "ol.CollectionEventType"
      ]
    },
    {
      "name": "ol.Collection#extend",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/collection.js",
      "params": [
        {
          "name": "arr",
          "types": [
            "Array.<T>"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.Collection.<T>"
        ]
      },
      "provides": [
        "ol.Collection",
        "ol.CollectionEvent",
        "ol.CollectionEventType"
      ]
    },
    {
      "name": "ol.Collection#forEach",
      "kind": "function",
      "description": "Iterate over each element, calling the provided callback.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/collection.js",
      "params": [
        {
          "name": "f",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "S"
          ],
          "optional": true
        }
      ],
      "template": "S",
      "provides": [
        "ol.Collection",
        "ol.CollectionEvent",
        "ol.CollectionEventType"
      ]
    },
    {
      "name": "ol.Collection#getArray",
      "kind": "function",
      "description": "Get a reference to the underlying Array object. Warning: if the array\nis mutated, no events will be dispatched by the collection, and the\ncollection's \"length\" property won't be in sync with the actual length\nof the array.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/collection.js",
      "returns": {
        "types": [
          "Array.<T>"
        ]
      },
      "provides": [
        "ol.Collection",
        "ol.CollectionEvent",
        "ol.CollectionEventType"
      ]
    },
    {
      "name": "ol.Collection#item",
      "kind": "function",
      "description": "Get the element at the provided index.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/collection.js",
      "params": [
        {
          "name": "index",
          "types": [
            "number"
          ]
        }
      ],
      "returns": {
        "types": [
          "T"
        ]
      },
      "provides": [
        "ol.Collection",
        "ol.CollectionEvent",
        "ol.CollectionEventType"
      ]
    },
    {
      "name": "ol.Collection#getLength",
      "kind": "function",
      "description": "Get the length of this collection.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/collection.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Collection",
        "ol.CollectionEvent",
        "ol.CollectionEventType"
      ]
    },
    {
      "name": "ol.Collection#insertAt",
      "kind": "function",
      "description": "Insert an element at the provided index.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/collection.js",
      "params": [
        {
          "name": "index",
          "types": [
            "number"
          ]
        },
        {
          "name": "elem",
          "types": [
            "T"
          ]
        }
      ],
      "provides": [
        "ol.Collection",
        "ol.CollectionEvent",
        "ol.CollectionEventType"
      ]
    },
    {
      "name": "ol.Collection#pop",
      "kind": "function",
      "description": "Remove the last element of the collection and return it.\nReturn `undefined` if the collection is empty.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/collection.js",
      "returns": {
        "types": [
          "T",
          "undefined"
        ]
      },
      "provides": [
        "ol.Collection",
        "ol.CollectionEvent",
        "ol.CollectionEventType"
      ]
    },
    {
      "name": "ol.Collection#push",
      "kind": "function",
      "description": "Insert the provided element at the end of the collection.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/collection.js",
      "params": [
        {
          "name": "elem",
          "types": [
            "T"
          ]
        }
      ],
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Collection",
        "ol.CollectionEvent",
        "ol.CollectionEventType"
      ]
    },
    {
      "name": "ol.Collection#remove",
      "kind": "function",
      "description": "Removes the first occurence of elem from the collection.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/collection.js",
      "params": [
        {
          "name": "elem",
          "types": [
            "T"
          ]
        }
      ],
      "returns": {
        "types": [
          "T",
          "undefined"
        ]
      },
      "provides": [
        "ol.Collection",
        "ol.CollectionEvent",
        "ol.CollectionEventType"
      ]
    },
    {
      "name": "ol.Collection#removeAt",
      "kind": "function",
      "description": "Remove the element at the provided index and return it.\nReturn `undefined` if the collection does not contain this index.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/collection.js",
      "params": [
        {
          "name": "index",
          "types": [
            "number"
          ]
        }
      ],
      "returns": {
        "types": [
          "T",
          "undefined"
        ]
      },
      "provides": [
        "ol.Collection",
        "ol.CollectionEvent",
        "ol.CollectionEventType"
      ]
    },
    {
      "name": "ol.Collection#setAt",
      "kind": "function",
      "description": "Set the element at the provided index.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/collection.js",
      "params": [
        {
          "name": "index",
          "types": [
            "number"
          ]
        },
        {
          "name": "elem",
          "types": [
            "T"
          ]
        }
      ],
      "provides": [
        "ol.Collection",
        "ol.CollectionEvent",
        "ol.CollectionEventType"
      ]
    },
    {
      "name": "ol.coordinate.add",
      "kind": "function",
      "description": "Add `delta` to `coordinate`. `coordinate` is modified in place and returned\nby the function.\n\nExample:\n\n    var coord = [7.85, 47.983333];\n    ol.coordinate.add(coord, [-2, 4]);\n    // coord is now [5.85, 51.983333]",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/coordinate.js",
      "params": [
        {
          "name": "coordinate",
          "types": [
            "ol.Coordinate"
          ]
        },
        {
          "name": "delta",
          "types": [
            "ol.Coordinate"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.Coordinate"
        ]
      },
      "provides": [
        "ol.Coordinate",
        "ol.CoordinateFormatType",
        "ol.coordinate"
      ]
    },
    {
      "name": "ol.coordinate.createStringXY",
      "kind": "function",
      "description": "Returns a {@link ol.CoordinateFormatType} function that can be used to format\na {ol.Coordinate} to a string.\n\nExample without specifying the fractional digits:\n\n    var coord = [7.85, 47.983333];\n    var stringifyFunc = ol.coordinate.createStringXY();\n    var out = stringifyFunc(coord);\n    // out is now '8, 48'\n\nExample with explicitly specifying 2 fractional digits:\n\n    var coord = [7.85, 47.983333];\n    var stringifyFunc = ol.coordinate.createStringXY(2);\n    var out = stringifyFunc(coord);\n    // out is now '7.85, 47.98'",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/coordinate.js",
      "params": [
        {
          "name": "opt_fractionDigits",
          "types": [
            "number"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.CoordinateFormatType"
        ]
      },
      "provides": [
        "ol.Coordinate",
        "ol.CoordinateFormatType",
        "ol.coordinate"
      ]
    },
    {
      "name": "ol.coordinate.format",
      "kind": "function",
      "description": "Transforms the given {@link ol.Coordinate} to a string using the given string\ntemplate. The strings `{x}` and `{y}` in the template will be replaced with\nthe first and second coordinate values respectively.\n\nExample without specifying the fractional digits:\n\n    var coord = [7.85, 47.983333];\n    var template = 'Coordinate is ({x}|{y}).';\n    var out = ol.coordinate.format(coord, template);\n    // out is now 'Coordinate is (8|48).'\n\nExample explicitly specifying the fractional digits:\n\n    var coord = [7.85, 47.983333];\n    var template = 'Coordinate is ({x}|{y}).';\n    var out = ol.coordinate.format(coord, template, 2);\n    // out is now 'Coordinate is (7.85|47.98).'",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/coordinate.js",
      "params": [
        {
          "name": "coordinate",
          "types": [
            "ol.Coordinate",
            "undefined"
          ]
        },
        {
          "name": "template",
          "types": [
            "string"
          ]
        },
        {
          "name": "opt_fractionDigits",
          "types": [
            "number"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "string"
        ]
      },
      "provides": [
        "ol.Coordinate",
        "ol.CoordinateFormatType",
        "ol.coordinate"
      ]
    },
    {
      "name": "ol.coordinate.rotate",
      "kind": "function",
      "description": "Rotate `coordinate` by `angle`. `coordinate` is modified in place and\nreturned by the function.\n\nExample:\n\n    var coord = [7.85, 47.983333];\n    var rotateRadians = Math.PI / 2; // 90 degrees\n    ol.coordinate.rotate(coord, rotateRadians);\n    // coord is now [-47.983333, 7.85]",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/coordinate.js",
      "params": [
        {
          "name": "coordinate",
          "types": [
            "ol.Coordinate"
          ]
        },
        {
          "name": "angle",
          "types": [
            "number"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.Coordinate"
        ]
      },
      "provides": [
        "ol.Coordinate",
        "ol.CoordinateFormatType",
        "ol.coordinate"
      ]
    },
    {
      "name": "ol.coordinate.toStringHDMS",
      "kind": "function",
      "description": "Example:\n\n    var coord = [7.85, 47.983333];\n    var out = ol.coordinate.toStringHDMS(coord);\n    // out is now '47° 59′ 0″ N 7° 51′ 0″ E'",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/coordinate.js",
      "params": [
        {
          "name": "coordinate",
          "types": [
            "ol.Coordinate",
            "undefined"
          ]
        }
      ],
      "returns": {
        "types": [
          "string"
        ]
      },
      "provides": [
        "ol.Coordinate",
        "ol.CoordinateFormatType",
        "ol.coordinate"
      ]
    },
    {
      "name": "ol.coordinate.toStringXY",
      "kind": "function",
      "description": "Example without specifying fractional digits:\n\n    var coord = [7.85, 47.983333];\n    var out = ol.coordinate.toStringXY(coord);\n    // out is now '8, 48'\n\nExample explicitly specifying 1 fractional digit:\n\n    var coord = [7.85, 47.983333];\n    var out = ol.coordinate.toStringXY(coord, 1);\n    // out is now '7.8, 48.0'",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/coordinate.js",
      "params": [
        {
          "name": "coordinate",
          "types": [
            "ol.Coordinate",
            "undefined"
          ]
        },
        {
          "name": "opt_fractionDigits",
          "types": [
            "number"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "string"
        ]
      },
      "provides": [
        "ol.Coordinate",
        "ol.CoordinateFormatType",
        "ol.coordinate"
      ]
    },
    {
      "name": "ol.DeviceOrientation",
      "kind": "class",
      "description": "The ol.DeviceOrientation class provides access to DeviceOrientation\ninformation and events, see the [HTML 5 DeviceOrientation Specification](\nhttp://www.w3.org/TR/orientation-event/) for more details.\n\nMany new computers, and especially mobile phones\nand tablets, provide hardware support for device orientation. Web\ndevelopers targetting mobile devices will be especially interested in this\nclass.\n\nDevice orientation data are relative to a common starting point. For mobile\ndevices, the starting point is to lay your phone face up on a table with the\ntop of the phone pointing north. This represents the zero state. All\nangles are then relative to this state. For computers, it is the same except\nthe screen is open at 90 degrees.\n\nDevice orientation is reported as three angles - `alpha`, `beta`, and\n`gamma` - relative to the starting position along the three planar axes X, Y\nand Z. The X axis runs from the left edge to the right edge through the\nmiddle of the device. Similarly, the Y axis runs from the bottom to the top\nof the device through the middle. The Z axis runs from the back to the front\nthrough the middle. In the starting position, the X axis points to the\nright, the Y axis points away from you and the Z axis points straight up\nfrom the device lying flat.\n\nThe three angles representing the device orientation are relative to the\nthree axes. `alpha` indicates how much the device has been rotated around the\nZ axis, which is commonly interpreted as the compass heading (see note\nbelow). `beta` indicates how much the device has been rotated around the X\naxis, or how much it is tilted from front to back.  `gamma` indicates how\nmuch the device has been rotated around the Y axis, or how much it is tilted\nfrom left to right.\n\nFor most browsers, the `alpha` value returns the compass heading so if the\ndevice points north, it will be 0.  With Safari on iOS, the 0 value of\n`alpha` is calculated from when device orientation was first requested.\nol.DeviceOrientation provides the `heading` property which normalizes this\nbehavior across all browsers for you.\n\nIt is important to note that the HTML 5 DeviceOrientation specification\nindicates that `alpha`, `beta` and `gamma` are in degrees while the\nequivalent properties in ol.DeviceOrientation are in radians for consistency\nwith all other uses of angles throughout OpenLayers.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/deviceorientation.js",
      "extends": "ol.Object",
      "params": [
        {
          "name": "opt_options",
          "types": [
            "olx.DeviceOrientationOptions"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.DeviceOrientation",
        "ol.DeviceOrientationProperty"
      ]
    },
    {
      "name": "ol.DeviceOrientation#getAlpha",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/deviceorientation.js",
      "returns": {
        "types": [
          "number",
          "undefined"
        ]
      },
      "provides": [
        "ol.DeviceOrientation",
        "ol.DeviceOrientationProperty"
      ]
    },
    {
      "name": "ol.DeviceOrientation#getBeta",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/deviceorientation.js",
      "returns": {
        "types": [
          "number",
          "undefined"
        ]
      },
      "provides": [
        "ol.DeviceOrientation",
        "ol.DeviceOrientationProperty"
      ]
    },
    {
      "name": "ol.DeviceOrientation#getGamma",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/deviceorientation.js",
      "returns": {
        "types": [
          "number",
          "undefined"
        ]
      },
      "provides": [
        "ol.DeviceOrientation",
        "ol.DeviceOrientationProperty"
      ]
    },
    {
      "name": "ol.DeviceOrientation#getHeading",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/deviceorientation.js",
      "returns": {
        "types": [
          "number",
          "undefined"
        ]
      },
      "provides": [
        "ol.DeviceOrientation",
        "ol.DeviceOrientationProperty"
      ]
    },
    {
      "name": "ol.DeviceOrientation#getTracking",
      "kind": "function",
      "description": "Are we tracking the device's orientation?",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/deviceorientation.js",
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.DeviceOrientation",
        "ol.DeviceOrientationProperty"
      ]
    },
    {
      "name": "ol.DeviceOrientation#setTracking",
      "kind": "function",
      "description": "Enable or disable tracking of DeviceOrientation events.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/deviceorientation.js",
      "params": [
        {
          "name": "tracking",
          "types": [
            "boolean"
          ]
        }
      ],
      "provides": [
        "ol.DeviceOrientation",
        "ol.DeviceOrientationProperty"
      ]
    },
    {
      "name": "ol.easing.easeIn",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/easing.js",
      "params": [
        {
          "name": "t",
          "types": [
            "number"
          ]
        }
      ],
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.easing"
      ]
    },
    {
      "name": "ol.easing.easeOut",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/easing.js",
      "params": [
        {
          "name": "t",
          "types": [
            "number"
          ]
        }
      ],
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.easing"
      ]
    },
    {
      "name": "ol.easing.inAndOut",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/easing.js",
      "params": [
        {
          "name": "t",
          "types": [
            "number"
          ]
        }
      ],
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.easing"
      ]
    },
    {
      "name": "ol.easing.linear",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/easing.js",
      "params": [
        {
          "name": "t",
          "types": [
            "number"
          ]
        }
      ],
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.easing"
      ]
    },
    {
      "name": "ol.easing.upAndDown",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/easing.js",
      "params": [
        {
          "name": "t",
          "types": [
            "number"
          ]
        }
      ],
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.easing"
      ]
    },
    {
      "name": "ol.extent.boundingExtent",
      "kind": "function",
      "description": "Builds an extent that includes all given coordinates.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/extent.js",
      "params": [
        {
          "name": "coordinates",
          "types": [
            "Array.<ol.Coordinate>"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.Extent"
        ]
      },
      "provides": [
        "ol.Extent",
        "ol.extent",
        "ol.extent.Corner",
        "ol.extent.Relationship"
      ]
    },
    {
      "name": "ol.extent.buffer",
      "kind": "function",
      "description": "Return extent increased by the provided value.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/extent.js",
      "params": [
        {
          "name": "extent",
          "types": [
            "ol.Extent"
          ]
        },
        {
          "name": "value",
          "types": [
            "number"
          ]
        },
        {
          "name": "opt_extent",
          "types": [
            "ol.Extent"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.Extent"
        ]
      },
      "provides": [
        "ol.Extent",
        "ol.extent",
        "ol.extent.Corner",
        "ol.extent.Relationship"
      ]
    },
    {
      "name": "ol.extent.containsCoordinate",
      "kind": "function",
      "description": "Checks if the passed coordinate is contained or on the edge of the extent.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/extent.js",
      "params": [
        {
          "name": "extent",
          "types": [
            "ol.Extent"
          ]
        },
        {
          "name": "coordinate",
          "types": [
            "ol.Coordinate"
          ]
        }
      ],
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.Extent",
        "ol.extent",
        "ol.extent.Corner",
        "ol.extent.Relationship"
      ]
    },
    {
      "name": "ol.extent.containsExtent",
      "kind": "function",
      "description": "Checks if `extent2` is contained by or on the edge of `extent1`.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/extent.js",
      "params": [
        {
          "name": "extent1",
          "types": [
            "ol.Extent"
          ]
        },
        {
          "name": "extent2",
          "types": [
            "ol.Extent"
          ]
        }
      ],
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.Extent",
        "ol.extent",
        "ol.extent.Corner",
        "ol.extent.Relationship"
      ]
    },
    {
      "name": "ol.extent.containsXY",
      "kind": "function",
      "description": "Checks if the passed coordinate is contained or on the edge of the extent.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/extent.js",
      "params": [
        {
          "name": "extent",
          "types": [
            "ol.Extent"
          ]
        },
        {
          "name": "x",
          "types": [
            "number"
          ]
        },
        {
          "name": "y",
          "types": [
            "number"
          ]
        }
      ],
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.Extent",
        "ol.extent",
        "ol.extent.Corner",
        "ol.extent.Relationship"
      ]
    },
    {
      "name": "ol.extent.createEmpty",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/extent.js",
      "returns": {
        "types": [
          "ol.Extent"
        ]
      },
      "provides": [
        "ol.Extent",
        "ol.extent",
        "ol.extent.Corner",
        "ol.extent.Relationship"
      ]
    },
    {
      "name": "ol.extent.equals",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/extent.js",
      "params": [
        {
          "name": "extent1",
          "types": [
            "ol.Extent"
          ]
        },
        {
          "name": "extent2",
          "types": [
            "ol.Extent"
          ]
        }
      ],
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.Extent",
        "ol.extent",
        "ol.extent.Corner",
        "ol.extent.Relationship"
      ]
    },
    {
      "name": "ol.extent.extend",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/extent.js",
      "params": [
        {
          "name": "extent1",
          "types": [
            "ol.Extent"
          ]
        },
        {
          "name": "extent2",
          "types": [
            "ol.Extent"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.Extent"
        ]
      },
      "provides": [
        "ol.Extent",
        "ol.extent",
        "ol.extent.Corner",
        "ol.extent.Relationship"
      ]
    },
    {
      "name": "ol.extent.getBottomLeft",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/extent.js",
      "params": [
        {
          "name": "extent",
          "types": [
            "ol.Extent"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.Coordinate"
        ]
      },
      "provides": [
        "ol.Extent",
        "ol.extent",
        "ol.extent.Corner",
        "ol.extent.Relationship"
      ]
    },
    {
      "name": "ol.extent.getBottomRight",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/extent.js",
      "params": [
        {
          "name": "extent",
          "types": [
            "ol.Extent"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.Coordinate"
        ]
      },
      "provides": [
        "ol.Extent",
        "ol.extent",
        "ol.extent.Corner",
        "ol.extent.Relationship"
      ]
    },
    {
      "name": "ol.extent.getCenter",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/extent.js",
      "params": [
        {
          "name": "extent",
          "types": [
            "ol.Extent"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.Coordinate"
        ]
      },
      "provides": [
        "ol.Extent",
        "ol.extent",
        "ol.extent.Corner",
        "ol.extent.Relationship"
      ]
    },
    {
      "name": "ol.extent.getHeight",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/extent.js",
      "params": [
        {
          "name": "extent",
          "types": [
            "ol.Extent"
          ]
        }
      ],
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Extent",
        "ol.extent",
        "ol.extent.Corner",
        "ol.extent.Relationship"
      ]
    },
    {
      "name": "ol.extent.getIntersection",
      "kind": "function",
      "description": "Get the intersection of two extents.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/extent.js",
      "params": [
        {
          "name": "extent1",
          "types": [
            "ol.Extent"
          ]
        },
        {
          "name": "extent2",
          "types": [
            "ol.Extent"
          ]
        },
        {
          "name": "opt_extent",
          "types": [
            "ol.Extent"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.Extent"
        ]
      },
      "provides": [
        "ol.Extent",
        "ol.extent",
        "ol.extent.Corner",
        "ol.extent.Relationship"
      ]
    },
    {
      "name": "ol.extent.getSize",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/extent.js",
      "params": [
        {
          "name": "extent",
          "types": [
            "ol.Extent"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.Size"
        ]
      },
      "provides": [
        "ol.Extent",
        "ol.extent",
        "ol.extent.Corner",
        "ol.extent.Relationship"
      ]
    },
    {
      "name": "ol.extent.getTopLeft",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/extent.js",
      "params": [
        {
          "name": "extent",
          "types": [
            "ol.Extent"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.Coordinate"
        ]
      },
      "provides": [
        "ol.Extent",
        "ol.extent",
        "ol.extent.Corner",
        "ol.extent.Relationship"
      ]
    },
    {
      "name": "ol.extent.getTopRight",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/extent.js",
      "params": [
        {
          "name": "extent",
          "types": [
            "ol.Extent"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.Coordinate"
        ]
      },
      "provides": [
        "ol.Extent",
        "ol.extent",
        "ol.extent.Corner",
        "ol.extent.Relationship"
      ]
    },
    {
      "name": "ol.extent.getWidth",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/extent.js",
      "params": [
        {
          "name": "extent",
          "types": [
            "ol.Extent"
          ]
        }
      ],
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Extent",
        "ol.extent",
        "ol.extent.Corner",
        "ol.extent.Relationship"
      ]
    },
    {
      "name": "ol.extent.intersects",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/extent.js",
      "params": [
        {
          "name": "extent1",
          "types": [
            "ol.Extent"
          ]
        },
        {
          "name": "extent2",
          "types": [
            "ol.Extent"
          ]
        }
      ],
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.Extent",
        "ol.extent",
        "ol.extent.Corner",
        "ol.extent.Relationship"
      ]
    },
    {
      "name": "ol.extent.isEmpty",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/extent.js",
      "params": [
        {
          "name": "extent",
          "types": [
            "ol.Extent"
          ]
        }
      ],
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.Extent",
        "ol.extent",
        "ol.extent.Corner",
        "ol.extent.Relationship"
      ]
    },
    {
      "name": "ol.extent.applyTransform",
      "kind": "function",
      "description": "Apply a transform function to the extent.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/extent.js",
      "params": [
        {
          "name": "extent",
          "types": [
            "ol.Extent"
          ]
        },
        {
          "name": "transformFn",
          "types": [
            "ol.TransformFunction"
          ]
        },
        {
          "name": "opt_extent",
          "types": [
            "ol.Extent"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.Extent"
        ]
      },
      "provides": [
        "ol.Extent",
        "ol.extent",
        "ol.extent.Corner",
        "ol.extent.Relationship"
      ]
    },
    {
      "name": "ol.Feature",
      "kind": "class",
      "description": "A vector object for geographic features with a geometry and other\nattribute properties, similar to the features in vector file formats like\nGeoJSON.\n\nFeatures can be styled individually with `setStyle`; otherwise they use the\nstyle of their vector layer or feature overlay.\n\nNote that attribute properties are set as {@link ol.Object} properties on\nthe feature object, so they are observable, and have get/set accessors.\n\nTypically, a feature has a single geometry property. You can set the\ngeometry using the `setGeometry` method and get it with `getGeometry`.\nIt is possible to store more than one geometry on a feature using attribute\nproperties. By default, the geometry used for rendering is identified by\nthe property name `geometry`. If you want to use another geometry property\nfor rendering, use the `setGeometryName` method to change the attribute\nproperty associated with the geometry for the feature.  For example:\n\n```js\nvar feature = new ol.Feature({\n  geometry: new ol.geom.Polygon(polyCoords),\n  labelPoint: new ol.geom.Point(labelCoords),\n  name: 'My Polygon'\n});\n\n// get the polygon geometry\nvar poly = feature.getGeometry();\n\n// Render the feature as a point using the coordinates from labelPoint\nfeature.setGeometryName('labelPoint');\n\n// get the point geometry\nvar point = feature.getGeometry();\n```",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/feature.js",
      "extends": "ol.Object",
      "params": [
        {
          "name": "opt_geometryOrProperties",
          "types": [
            "ol.geom.Geometry",
            "Object.<string, *>="
          ]
        }
      ],
      "provides": [
        "ol.Feature",
        "ol.feature"
      ]
    },
    {
      "name": "ol.Feature#clone",
      "kind": "function",
      "description": "Clone this feature. If the original feature has a geometry it\nis also cloned. The feature id is not set in the clone.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/feature.js",
      "returns": {
        "types": [
          "ol.Feature"
        ]
      },
      "provides": [
        "ol.Feature",
        "ol.feature"
      ]
    },
    {
      "name": "ol.Feature#getGeometry",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/feature.js",
      "returns": {
        "types": [
          "ol.geom.Geometry",
          "undefined"
        ]
      },
      "provides": [
        "ol.Feature",
        "ol.feature"
      ]
    },
    {
      "name": "ol.Feature#getId",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/feature.js",
      "returns": {
        "types": [
          "number",
          "string",
          "undefined"
        ]
      },
      "provides": [
        "ol.Feature",
        "ol.feature"
      ]
    },
    {
      "name": "ol.Feature#getGeometryName",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/feature.js",
      "returns": {
        "types": [
          "string"
        ]
      },
      "provides": [
        "ol.Feature",
        "ol.feature"
      ]
    },
    {
      "name": "ol.Feature#getStyle",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/feature.js",
      "returns": {
        "types": [
          "ol.style.Style",
          "Array.<ol.style.Style>",
          "ol.feature.FeatureStyleFunction"
        ]
      },
      "provides": [
        "ol.Feature",
        "ol.feature"
      ]
    },
    {
      "name": "ol.Feature#getStyleFunction",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/feature.js",
      "returns": {
        "types": [
          "ol.feature.FeatureStyleFunction",
          "undefined"
        ]
      },
      "provides": [
        "ol.Feature",
        "ol.feature"
      ]
    },
    {
      "name": "ol.Feature#setGeometry",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/feature.js",
      "params": [
        {
          "name": "geometry",
          "types": [
            "ol.geom.Geometry",
            "undefined"
          ]
        }
      ],
      "provides": [
        "ol.Feature",
        "ol.feature"
      ]
    },
    {
      "name": "ol.Feature#setStyle",
      "kind": "function",
      "description": "Set the style for the feature.  This can be a single style object, an array\nof styles, or a function that takes a resolution and returns an array of\nstyles. If it is `null` the feature has no style (a `null` style).",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/feature.js",
      "params": [
        {
          "name": "style",
          "types": [
            "ol.style.Style",
            "Array.<ol.style.Style>",
            "ol.feature.FeatureStyleFunction"
          ]
        }
      ],
      "provides": [
        "ol.Feature",
        "ol.feature"
      ]
    },
    {
      "name": "ol.Feature#setId",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/feature.js",
      "params": [
        {
          "name": "id",
          "types": [
            "number",
            "string",
            "undefined"
          ]
        }
      ],
      "provides": [
        "ol.Feature",
        "ol.feature"
      ]
    },
    {
      "name": "ol.Feature#setGeometryName",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/feature.js",
      "params": [
        {
          "name": "name",
          "types": [
            "string"
          ]
        }
      ],
      "provides": [
        "ol.Feature",
        "ol.feature"
      ]
    },
    {
      "name": "ol.FeatureOverlay",
      "kind": "class",
      "description": "A mechanism for changing the style of a small number of features on a\ntemporary basis, for example highlighting. This is necessary with the Canvas\nrenderer, where, unlike in SVG, features cannot be individually referenced.\nSee examples/vector-layers for an example: create a FeatureOverlay with a\ndifferent style, copy the feature(s) you want rendered in this different\nstyle into it, and then remove them again when you're finished.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/featureoverlay.js",
      "params": [
        {
          "name": "opt_options",
          "types": [
            "olx.FeatureOverlayOptions"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.FeatureOverlay"
      ]
    },
    {
      "name": "ol.FeatureOverlay#addFeature",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/featureoverlay.js",
      "params": [
        {
          "name": "feature",
          "types": [
            "ol.Feature"
          ]
        }
      ],
      "provides": [
        "ol.FeatureOverlay"
      ]
    },
    {
      "name": "ol.FeatureOverlay#getFeatures",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/featureoverlay.js",
      "returns": {
        "types": [
          "ol.Collection.<ol.Feature>"
        ]
      },
      "provides": [
        "ol.FeatureOverlay"
      ]
    },
    {
      "name": "ol.FeatureOverlay#getMap",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/featureoverlay.js",
      "returns": {
        "types": [
          "ol.Map"
        ],
        "nullable": true
      },
      "provides": [
        "ol.FeatureOverlay"
      ]
    },
    {
      "name": "ol.FeatureOverlay#removeFeature",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/featureoverlay.js",
      "params": [
        {
          "name": "feature",
          "types": [
            "ol.Feature"
          ]
        }
      ],
      "provides": [
        "ol.FeatureOverlay"
      ]
    },
    {
      "name": "ol.FeatureOverlay#setFeatures",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/featureoverlay.js",
      "params": [
        {
          "name": "features",
          "types": [
            "ol.Collection.<ol.Feature>"
          ]
        }
      ],
      "provides": [
        "ol.FeatureOverlay"
      ]
    },
    {
      "name": "ol.FeatureOverlay#setMap",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/featureoverlay.js",
      "params": [
        {
          "name": "map",
          "types": [
            "ol.Map"
          ]
        }
      ],
      "provides": [
        "ol.FeatureOverlay"
      ]
    },
    {
      "name": "ol.FeatureOverlay#setStyle",
      "kind": "function",
      "description": "Set the style for features.  This can be a single style object, an array\nof styles, or a function that takes a feature and resolution and returns\nan array of styles.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/featureoverlay.js",
      "params": [
        {
          "name": "style",
          "types": [
            "ol.style.Style",
            "Array.<ol.style.Style>",
            "ol.style.StyleFunction"
          ]
        }
      ],
      "provides": [
        "ol.FeatureOverlay"
      ]
    },
    {
      "name": "ol.FeatureOverlay#getStyle",
      "kind": "function",
      "description": "Get the style for features.  This returns whatever was passed to the `style`\noption at construction or to the `setStyle` method.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/featureoverlay.js",
      "returns": {
        "types": [
          "ol.style.Style",
          "Array.<ol.style.Style>",
          "ol.style.StyleFunction"
        ]
      },
      "provides": [
        "ol.FeatureOverlay"
      ]
    },
    {
      "name": "ol.FeatureOverlay#getStyleFunction",
      "kind": "function",
      "description": "Get the style function.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/featureoverlay.js",
      "returns": {
        "types": [
          "ol.style.StyleFunction",
          "undefined"
        ]
      },
      "provides": [
        "ol.FeatureOverlay"
      ]
    },
    {
      "name": "ol.Geolocation",
      "kind": "class",
      "description": "Helper class for providing HTML5 Geolocation capabilities.\nThe [Geolocation API](http://www.w3.org/TR/geolocation-API/)\nis used to locate a user's position.\n\nExample:\n\n    var geolocation = new ol.Geolocation({\n      // take the projection to use from the map's view\n      projection: view.getProjection()\n    });\n    // listen to changes in position\n    geolocation.on('change', function(evt) {\n      window.console.log(geolocation.getPosition());\n    });",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geolocation.js",
      "extends": "ol.Object",
      "params": [
        {
          "name": "opt_options",
          "types": [
            "olx.GeolocationOptions"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Geolocation",
        "ol.GeolocationProperty"
      ]
    },
    {
      "name": "ol.Geolocation#getAccuracy",
      "kind": "function",
      "description": "Get the accuracy of the position in meters.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geolocation.js",
      "returns": {
        "types": [
          "number",
          "undefined"
        ]
      },
      "provides": [
        "ol.Geolocation",
        "ol.GeolocationProperty"
      ]
    },
    {
      "name": "ol.Geolocation#getAccuracyGeometry",
      "kind": "function",
      "description": "Get a geometry of the position accuracy.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geolocation.js",
      "returns": {
        "types": [
          "ol.geom.Geometry"
        ],
        "nullable": true
      },
      "provides": [
        "ol.Geolocation",
        "ol.GeolocationProperty"
      ]
    },
    {
      "name": "ol.Geolocation#getAltitude",
      "kind": "function",
      "description": "Get the altitude associated with the position.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geolocation.js",
      "returns": {
        "types": [
          "number",
          "undefined"
        ]
      },
      "provides": [
        "ol.Geolocation",
        "ol.GeolocationProperty"
      ]
    },
    {
      "name": "ol.Geolocation#getAltitudeAccuracy",
      "kind": "function",
      "description": "Get the altitude accuracy of the position.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geolocation.js",
      "returns": {
        "types": [
          "number",
          "undefined"
        ]
      },
      "provides": [
        "ol.Geolocation",
        "ol.GeolocationProperty"
      ]
    },
    {
      "name": "ol.Geolocation#getHeading",
      "kind": "function",
      "description": "Get the heading as radians clockwise from North.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geolocation.js",
      "returns": {
        "types": [
          "number",
          "undefined"
        ]
      },
      "provides": [
        "ol.Geolocation",
        "ol.GeolocationProperty"
      ]
    },
    {
      "name": "ol.Geolocation#getPosition",
      "kind": "function",
      "description": "Get the position of the device.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geolocation.js",
      "returns": {
        "types": [
          "ol.Coordinate",
          "undefined"
        ]
      },
      "provides": [
        "ol.Geolocation",
        "ol.GeolocationProperty"
      ]
    },
    {
      "name": "ol.Geolocation#getProjection",
      "kind": "function",
      "description": "Get the projection associated with the position.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geolocation.js",
      "returns": {
        "types": [
          "ol.proj.Projection",
          "undefined"
        ]
      },
      "provides": [
        "ol.Geolocation",
        "ol.GeolocationProperty"
      ]
    },
    {
      "name": "ol.Geolocation#getSpeed",
      "kind": "function",
      "description": "Get the speed in meters per second.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geolocation.js",
      "returns": {
        "types": [
          "number",
          "undefined"
        ]
      },
      "provides": [
        "ol.Geolocation",
        "ol.GeolocationProperty"
      ]
    },
    {
      "name": "ol.Geolocation#getTracking",
      "kind": "function",
      "description": "Are we tracking the user's position?",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geolocation.js",
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.Geolocation",
        "ol.GeolocationProperty"
      ]
    },
    {
      "name": "ol.Geolocation#getTrackingOptions",
      "kind": "function",
      "description": "Get the tracking options.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geolocation.js",
      "returns": {
        "types": [
          "GeolocationPositionOptions",
          "undefined"
        ]
      },
      "provides": [
        "ol.Geolocation",
        "ol.GeolocationProperty"
      ]
    },
    {
      "name": "ol.Geolocation#setProjection",
      "kind": "function",
      "description": "Set the projection to use for transforming the coordinates.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geolocation.js",
      "params": [
        {
          "name": "projection",
          "types": [
            "ol.proj.Projection"
          ]
        }
      ],
      "provides": [
        "ol.Geolocation",
        "ol.GeolocationProperty"
      ]
    },
    {
      "name": "ol.Geolocation#setTracking",
      "kind": "function",
      "description": "Enable/disable tracking.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geolocation.js",
      "params": [
        {
          "name": "tracking",
          "types": [
            "boolean"
          ]
        }
      ],
      "provides": [
        "ol.Geolocation",
        "ol.GeolocationProperty"
      ]
    },
    {
      "name": "ol.Geolocation#setTrackingOptions",
      "kind": "function",
      "description": "Set the tracking options.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geolocation.js",
      "params": [
        {
          "name": "options",
          "types": [
            "GeolocationPositionOptions"
          ]
        }
      ],
      "provides": [
        "ol.Geolocation",
        "ol.GeolocationProperty"
      ]
    },
    {
      "name": "ol.Graticule",
      "kind": "class",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/graticule.js",
      "params": [
        {
          "name": "opt_options",
          "types": [
            "olx.GraticuleOptions"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Graticule"
      ]
    },
    {
      "name": "ol.Graticule#getMap",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/graticule.js",
      "returns": {
        "types": [
          "ol.Map"
        ]
      },
      "provides": [
        "ol.Graticule"
      ]
    },
    {
      "name": "ol.Graticule#getMeridians",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/graticule.js",
      "returns": {
        "types": [
          "Array.<ol.geom.LineString>"
        ]
      },
      "provides": [
        "ol.Graticule"
      ]
    },
    {
      "name": "ol.Graticule#getParallels",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/graticule.js",
      "returns": {
        "types": [
          "Array.<ol.geom.LineString>"
        ]
      },
      "provides": [
        "ol.Graticule"
      ]
    },
    {
      "name": "ol.Graticule#setMap",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/graticule.js",
      "params": [
        {
          "name": "map",
          "types": [
            "ol.Map"
          ]
        }
      ],
      "provides": [
        "ol.Graticule"
      ]
    },
    {
      "name": "ol.has.DEVICE_PIXEL_RATIO",
      "kind": "constant",
      "description": "The ratio between physical pixels and device-independent pixels\n(dips) on the device (`window.devicePixelRatio`).",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/has.js",
      "types": [
        "number"
      ],
      "provides": [
        "ol.has"
      ]
    },
    {
      "name": "ol.has.CANVAS",
      "kind": "constant",
      "description": "True if browser supports Canvas.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/has.js",
      "types": [
        "boolean"
      ],
      "provides": [
        "ol.has"
      ]
    },
    {
      "name": "ol.has.DEVICE_ORIENTATION",
      "kind": "constant",
      "description": "Indicates if DeviceOrientation is supported in the user's browser.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/has.js",
      "types": [
        "boolean"
      ],
      "provides": [
        "ol.has"
      ]
    },
    {
      "name": "ol.has.GEOLOCATION",
      "kind": "constant",
      "description": "Is HTML5 geolocation supported in the current browser?",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/has.js",
      "types": [
        "boolean"
      ],
      "provides": [
        "ol.has"
      ]
    },
    {
      "name": "ol.has.TOUCH",
      "kind": "constant",
      "description": "True if browser supports touch events.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/has.js",
      "types": [
        "boolean"
      ],
      "provides": [
        "ol.has"
      ]
    },
    {
      "name": "ol.has.WEBGL",
      "kind": "constant",
      "description": "True if browser supports WebGL.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/has.js",
      "types": [
        "boolean"
      ],
      "provides": [
        "ol.has"
      ]
    },
    {
      "name": "ol.Image#getImage",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/image.js",
      "params": [
        {
          "name": "opt_context",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "HTMLCanvasElement",
          "Image",
          "HTMLVideoElement"
        ]
      },
      "provides": [
        "ol.Image"
      ]
    },
    {
      "name": "ol.ImageTile#getImage",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/imagetile.js",
      "provides": [
        "ol.ImageTile"
      ]
    },
    {
      "name": "ol.Kinetic",
      "kind": "class",
      "description": "Implementation of inertial deceleration for map movement.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/kinetic.js",
      "params": [
        {
          "name": "decay",
          "types": [
            "number"
          ]
        },
        {
          "name": "minVelocity",
          "types": [
            "number"
          ]
        },
        {
          "name": "delay",
          "types": [
            "number"
          ]
        }
      ],
      "provides": [
        "ol.Kinetic"
      ]
    },
    {
      "name": "ol.loadingstrategy.all",
      "kind": "function",
      "description": "Strategy function for loading all features with a single request.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/loadingstrategy.js",
      "params": [
        {
          "name": "extent",
          "types": [
            "ol.Extent"
          ]
        },
        {
          "name": "resolution",
          "types": [
            "number"
          ]
        }
      ],
      "returns": {
        "types": [
          "Array.<ol.Extent>"
        ]
      },
      "provides": [
        "ol.loadingstrategy"
      ]
    },
    {
      "name": "ol.loadingstrategy.bbox",
      "kind": "function",
      "description": "Strategy function for loading features based on the view's extent and\nresolution.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/loadingstrategy.js",
      "params": [
        {
          "name": "extent",
          "types": [
            "ol.Extent"
          ]
        },
        {
          "name": "resolution",
          "types": [
            "number"
          ]
        }
      ],
      "returns": {
        "types": [
          "Array.<ol.Extent>"
        ]
      },
      "provides": [
        "ol.loadingstrategy"
      ]
    },
    {
      "name": "ol.loadingstrategy.createTile",
      "kind": "function",
      "description": "Creates a strategy function for loading features based on a tile grid.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/loadingstrategy.js",
      "params": [
        {
          "name": "tileGrid",
          "types": [
            "ol.tilegrid.TileGrid"
          ]
        }
      ],
      "returns": {
        "types": [
          "Function"
        ]
      },
      "provides": [
        "ol.loadingstrategy"
      ]
    },
    {
      "name": "ol.Map",
      "kind": "class",
      "description": "The map is the core component of OpenLayers. For a map to render, a view,\none or more layers, and a target container are needed:\n\n    var map = new ol.Map({\n      view: new ol.View({\n        center: [0, 0],\n        zoom: 1\n      }),\n      layers: [\n        new ol.layer.Tile({\n          source: new ol.source.MapQuest({layer: 'osm'})\n        })\n      ],\n      target: 'map'\n    });\n\nThe above snippet creates a map using a {@link ol.layer.Tile} to display\n{@link ol.source.MapQuest} OSM data and render it to a DOM element with the\nid `map`.\n\nThe constructor places a viewport container (with CSS class name\n`ol-viewport`) in the target element (see `getViewport()`), and then two\nfurther elements within the viewport: one with CSS class name\n`ol-overlaycontainer-stopevent` for controls and some overlays, and one with\nCSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\noption of {@link ol.Overlay} for the difference). The map itself is placed in\na further element within the viewport, either DOM or Canvas, depending on the\nrenderer.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/map.js",
      "extends": "ol.Object",
      "params": [
        {
          "name": "options",
          "types": [
            "olx.MapOptions"
          ]
        }
      ],
      "provides": [
        "ol.Map",
        "ol.MapProperty"
      ]
    },
    {
      "name": "ol.Map#addControl",
      "kind": "function",
      "description": "Add the given control to the map.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/map.js",
      "params": [
        {
          "name": "control",
          "types": [
            "ol.control.Control"
          ]
        }
      ],
      "provides": [
        "ol.Map",
        "ol.MapProperty"
      ]
    },
    {
      "name": "ol.Map#addInteraction",
      "kind": "function",
      "description": "Add the given interaction to the map.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/map.js",
      "params": [
        {
          "name": "interaction",
          "types": [
            "ol.interaction.Interaction"
          ]
        }
      ],
      "provides": [
        "ol.Map",
        "ol.MapProperty"
      ]
    },
    {
      "name": "ol.Map#addLayer",
      "kind": "function",
      "description": "Adds the given layer to the top of this map.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/map.js",
      "params": [
        {
          "name": "layer",
          "types": [
            "ol.layer.Base"
          ]
        }
      ],
      "provides": [
        "ol.Map",
        "ol.MapProperty"
      ]
    },
    {
      "name": "ol.Map#addOverlay",
      "kind": "function",
      "description": "Add the given overlay to the map.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/map.js",
      "params": [
        {
          "name": "overlay",
          "types": [
            "ol.Overlay"
          ]
        }
      ],
      "provides": [
        "ol.Map",
        "ol.MapProperty"
      ]
    },
    {
      "name": "ol.Map#beforeRender",
      "kind": "function",
      "description": "Add functions to be called before rendering. This can be used for attaching\nanimations before updating the map's view.  The {@link ol.animation}\nnamespace provides several static methods for creating prerender functions.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/map.js",
      "params": [
        {
          "name": "var_args",
          "types": [
            "ol.PreRenderFunction"
          ],
          "variable": true
        }
      ],
      "provides": [
        "ol.Map",
        "ol.MapProperty"
      ]
    },
    {
      "name": "ol.Map#forEachFeatureAtPixel",
      "kind": "function",
      "description": "Detect features that intersect a pixel on the viewport, and execute a\ncallback with each intersecting feature. Layers included in the detection can\nbe configured through `opt_layerFilter`. Feature overlays will always be\nincluded in the detection.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/map.js",
      "params": [
        {
          "name": "pixel",
          "types": [
            "ol.Pixel"
          ]
        },
        {
          "name": "callback",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "S"
          ],
          "optional": true
        },
        {
          "name": "opt_layerFilter",
          "types": [
            "Function"
          ],
          "optional": true
        },
        {
          "name": "opt_this2",
          "types": [
            "U"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "T",
          "undefined"
        ]
      },
      "template": "S,T,U",
      "provides": [
        "ol.Map",
        "ol.MapProperty"
      ]
    },
    {
      "name": "ol.Map#forEachLayerAtPixel",
      "kind": "function",
      "description": "Detect layers that have a color value at a pixel on the viewport, and\nexecute a callback with each matching layer. Layers included in the\ndetection can be configured through `opt_layerFilter`. Feature overlays will\nalways be included in the detection.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/map.js",
      "params": [
        {
          "name": "pixel",
          "types": [
            "ol.Pixel"
          ]
        },
        {
          "name": "callback",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "S"
          ],
          "optional": true
        },
        {
          "name": "opt_layerFilter",
          "types": [
            "Function"
          ],
          "optional": true
        },
        {
          "name": "opt_this2",
          "types": [
            "U"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "T",
          "undefined"
        ]
      },
      "template": "S,T,U",
      "provides": [
        "ol.Map",
        "ol.MapProperty"
      ]
    },
    {
      "name": "ol.Map#hasFeatureAtPixel",
      "kind": "function",
      "description": "Detect if features intersect a pixel on the viewport. Layers included in the\ndetection can be configured through `opt_layerFilter`. Feature overlays will\nalways be included in the detection.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/map.js",
      "params": [
        {
          "name": "pixel",
          "types": [
            "ol.Pixel"
          ]
        },
        {
          "name": "opt_layerFilter",
          "types": [
            "Function"
          ],
          "optional": true
        },
        {
          "name": "opt_this",
          "types": [
            "U"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "template": "U",
      "provides": [
        "ol.Map",
        "ol.MapProperty"
      ]
    },
    {
      "name": "ol.Map#getEventCoordinate",
      "kind": "function",
      "description": "Returns the geographical coordinate for a browser event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/map.js",
      "params": [
        {
          "name": "event",
          "types": [
            "Event"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.Coordinate"
        ]
      },
      "provides": [
        "ol.Map",
        "ol.MapProperty"
      ]
    },
    {
      "name": "ol.Map#getEventPixel",
      "kind": "function",
      "description": "Returns the map pixel position for a browser event relative to the viewport.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/map.js",
      "params": [
        {
          "name": "event",
          "types": [
            "Event"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.Pixel"
        ]
      },
      "provides": [
        "ol.Map",
        "ol.MapProperty"
      ]
    },
    {
      "name": "ol.Map#getTarget",
      "kind": "function",
      "description": "Get the target in which this map is rendered.\nNote that this returns what is entered as an option or in setTarget:\nif that was an element, it returns an element; if a string, it returns that.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/map.js",
      "returns": {
        "types": [
          "Element",
          "string",
          "undefined"
        ]
      },
      "provides": [
        "ol.Map",
        "ol.MapProperty"
      ]
    },
    {
      "name": "ol.Map#getTargetElement",
      "kind": "function",
      "description": "Get the DOM element into which this map is rendered. In contrast to\n`getTarget` this method always return an `Element`, or `null` if the\nmap has no target.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/map.js",
      "returns": {
        "types": [
          "Element"
        ]
      },
      "provides": [
        "ol.Map",
        "ol.MapProperty"
      ]
    },
    {
      "name": "ol.Map#getCoordinateFromPixel",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/map.js",
      "params": [
        {
          "name": "pixel",
          "types": [
            "ol.Pixel"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.Coordinate"
        ]
      },
      "provides": [
        "ol.Map",
        "ol.MapProperty"
      ]
    },
    {
      "name": "ol.Map#getControls",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/map.js",
      "returns": {
        "types": [
          "ol.Collection.<ol.control.Control>"
        ]
      },
      "provides": [
        "ol.Map",
        "ol.MapProperty"
      ]
    },
    {
      "name": "ol.Map#getOverlays",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/map.js",
      "returns": {
        "types": [
          "ol.Collection.<ol.Overlay>"
        ]
      },
      "provides": [
        "ol.Map",
        "ol.MapProperty"
      ]
    },
    {
      "name": "ol.Map#getInteractions",
      "kind": "function",
      "description": "Gets the collection of {@link ol.interaction.Interaction} instances\nassociated with this map. Modifying this collection changes the interactions\nassociated with the map.\n\nInteractions are used for e.g. pan, zoom and rotate.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/map.js",
      "returns": {
        "types": [
          "ol.Collection.<ol.interaction.Interaction>"
        ]
      },
      "provides": [
        "ol.Map",
        "ol.MapProperty"
      ]
    },
    {
      "name": "ol.Map#getLayerGroup",
      "kind": "function",
      "description": "Get the layergroup associated with this map.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/map.js",
      "returns": {
        "types": [
          "ol.layer.Group"
        ]
      },
      "provides": [
        "ol.Map",
        "ol.MapProperty"
      ]
    },
    {
      "name": "ol.Map#getLayers",
      "kind": "function",
      "description": "Get the collection of layers associated with this map.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/map.js",
      "returns": {
        "types": [
          "ol.Collection.<ol.layer.Base>"
        ],
        "nullable": false
      },
      "provides": [
        "ol.Map",
        "ol.MapProperty"
      ]
    },
    {
      "name": "ol.Map#getPixelFromCoordinate",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/map.js",
      "params": [
        {
          "name": "coordinate",
          "types": [
            "ol.Coordinate"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.Pixel"
        ]
      },
      "provides": [
        "ol.Map",
        "ol.MapProperty"
      ]
    },
    {
      "name": "ol.Map#getSize",
      "kind": "function",
      "description": "Get the size of this map.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/map.js",
      "returns": {
        "types": [
          "ol.Size",
          "undefined"
        ]
      },
      "provides": [
        "ol.Map",
        "ol.MapProperty"
      ]
    },
    {
      "name": "ol.Map#getView",
      "kind": "function",
      "description": "Get the view associated with this map. A view manages properties such as\ncenter and resolution.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/map.js",
      "returns": {
        "types": [
          "ol.View"
        ]
      },
      "provides": [
        "ol.Map",
        "ol.MapProperty"
      ]
    },
    {
      "name": "ol.Map#getViewport",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/map.js",
      "returns": {
        "types": [
          "Element"
        ]
      },
      "provides": [
        "ol.Map",
        "ol.MapProperty"
      ]
    },
    {
      "name": "ol.Map#renderSync",
      "kind": "function",
      "description": "Requests an immediate render in a synchronous manner.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/map.js",
      "provides": [
        "ol.Map",
        "ol.MapProperty"
      ]
    },
    {
      "name": "ol.Map#render",
      "kind": "function",
      "description": "Requests a render frame; rendering will effectively occur at the next browser\nanimation frame.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/map.js",
      "provides": [
        "ol.Map",
        "ol.MapProperty"
      ]
    },
    {
      "name": "ol.Map#removeControl",
      "kind": "function",
      "description": "Remove the given control from the map.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/map.js",
      "params": [
        {
          "name": "control",
          "types": [
            "ol.control.Control"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.control.Control",
          "undefined"
        ]
      },
      "provides": [
        "ol.Map",
        "ol.MapProperty"
      ]
    },
    {
      "name": "ol.Map#removeInteraction",
      "kind": "function",
      "description": "Remove the given interaction from the map.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/map.js",
      "params": [
        {
          "name": "interaction",
          "types": [
            "ol.interaction.Interaction"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.interaction.Interaction",
          "undefined"
        ]
      },
      "provides": [
        "ol.Map",
        "ol.MapProperty"
      ]
    },
    {
      "name": "ol.Map#removeLayer",
      "kind": "function",
      "description": "Removes the given layer from the map.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/map.js",
      "params": [
        {
          "name": "layer",
          "types": [
            "ol.layer.Base"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.layer.Base",
          "undefined"
        ]
      },
      "provides": [
        "ol.Map",
        "ol.MapProperty"
      ]
    },
    {
      "name": "ol.Map#removeOverlay",
      "kind": "function",
      "description": "Remove the given overlay from the map.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/map.js",
      "params": [
        {
          "name": "overlay",
          "types": [
            "ol.Overlay"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.Overlay",
          "undefined"
        ]
      },
      "provides": [
        "ol.Map",
        "ol.MapProperty"
      ]
    },
    {
      "name": "ol.Map#setLayerGroup",
      "kind": "function",
      "description": "Sets the layergroup of this map.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/map.js",
      "params": [
        {
          "name": "layerGroup",
          "types": [
            "ol.layer.Group"
          ]
        }
      ],
      "provides": [
        "ol.Map",
        "ol.MapProperty"
      ]
    },
    {
      "name": "ol.Map#setSize",
      "kind": "function",
      "description": "Set the size of this map.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/map.js",
      "params": [
        {
          "name": "size",
          "types": [
            "ol.Size",
            "undefined"
          ]
        }
      ],
      "provides": [
        "ol.Map",
        "ol.MapProperty"
      ]
    },
    {
      "name": "ol.Map#setTarget",
      "kind": "function",
      "description": "Set the target element to render this map into.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/map.js",
      "params": [
        {
          "name": "target",
          "types": [
            "Element",
            "string",
            "undefined"
          ]
        }
      ],
      "provides": [
        "ol.Map",
        "ol.MapProperty"
      ]
    },
    {
      "name": "ol.Map#setView",
      "kind": "function",
      "description": "Set the view for this map.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/map.js",
      "params": [
        {
          "name": "view",
          "types": [
            "ol.View"
          ]
        }
      ],
      "provides": [
        "ol.Map",
        "ol.MapProperty"
      ]
    },
    {
      "name": "ol.Map#updateSize",
      "kind": "function",
      "description": "Force a recalculation of the map viewport size.  This should be called when\nthird-party code changes the size of the map viewport.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/map.js",
      "provides": [
        "ol.Map",
        "ol.MapProperty"
      ]
    },
    {
      "name": "ol.MapBrowserEvent#originalEvent",
      "kind": "constant",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/mapbrowserevent.js",
      "types": [
        "Event"
      ],
      "provides": [
        "ol.MapBrowserEvent",
        "ol.MapBrowserEvent.EventType",
        "ol.MapBrowserEventHandler",
        "ol.MapBrowserPointerEvent"
      ]
    },
    {
      "name": "ol.MapBrowserEvent#pixel",
      "kind": "member",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/mapbrowserevent.js",
      "types": [
        "ol.Pixel"
      ],
      "provides": [
        "ol.MapBrowserEvent",
        "ol.MapBrowserEvent.EventType",
        "ol.MapBrowserEventHandler",
        "ol.MapBrowserPointerEvent"
      ]
    },
    {
      "name": "ol.MapBrowserEvent#coordinate",
      "kind": "member",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/mapbrowserevent.js",
      "types": [
        "ol.Coordinate"
      ],
      "provides": [
        "ol.MapBrowserEvent",
        "ol.MapBrowserEvent.EventType",
        "ol.MapBrowserEventHandler",
        "ol.MapBrowserPointerEvent"
      ]
    },
    {
      "name": "ol.MapBrowserEvent#dragging",
      "kind": "member",
      "description": "Indicates if the map is currently being dragged. Only set for\n`POINTERDRAG` and `POINTERMOVE` events. Default is `false`.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/mapbrowserevent.js",
      "types": [
        "boolean"
      ],
      "provides": [
        "ol.MapBrowserEvent",
        "ol.MapBrowserEvent.EventType",
        "ol.MapBrowserEventHandler",
        "ol.MapBrowserPointerEvent"
      ]
    },
    {
      "name": "ol.MapBrowserEvent#preventDefault",
      "kind": "function",
      "description": "Prevents the default browser action.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/mapbrowserevent.js",
      "provides": [
        "ol.MapBrowserEvent",
        "ol.MapBrowserEvent.EventType",
        "ol.MapBrowserEventHandler",
        "ol.MapBrowserPointerEvent"
      ]
    },
    {
      "name": "ol.MapBrowserEvent#stopPropagation",
      "kind": "function",
      "description": "Prevents further propagation of the current event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/mapbrowserevent.js",
      "provides": [
        "ol.MapBrowserEvent",
        "ol.MapBrowserEvent.EventType",
        "ol.MapBrowserEventHandler",
        "ol.MapBrowserPointerEvent"
      ]
    },
    {
      "name": "ol.MapEvent#map",
      "kind": "member",
      "description": "The map where the event occurred.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/mapevent.js",
      "types": [
        "ol.Map"
      ],
      "provides": [
        "ol.MapEvent",
        "ol.MapEventType"
      ]
    },
    {
      "name": "ol.MapEvent#frameState",
      "kind": "member",
      "description": "The frame state at the time of the event.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/mapevent.js",
      "types": [
        "olx.FrameState"
      ],
      "provides": [
        "ol.MapEvent",
        "ol.MapEventType"
      ]
    },
    {
      "name": "ol.ObjectEvent#key",
      "kind": "member",
      "description": "The name of the property whose value is changing.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "types": [
        "string"
      ],
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.ObjectEvent#oldValue",
      "kind": "member",
      "description": "The old value. To get the new value use `e.target.get(e.key)` where\n`e` is the event object.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "types": [
        "*"
      ],
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.ObjectAccessor#transform",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "from",
          "types": [
            "Function"
          ]
        },
        {
          "name": "to",
          "types": [
            "Function"
          ]
        }
      ],
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.Object",
      "kind": "class",
      "description": "Abstract base class; normally only used for creating subclasses and not\ninstantiated in apps.\nMost non-trivial classes inherit from this.\n\nThis extends {@link ol.Observable} with observable properties, where each\nproperty is observable as well as the object as a whole.\n\nClasses that inherit from this have pre-defined properties, to which you can\nadd your own. The pre-defined properties are listed in this documentation as\n'Observable Properties', and have their own accessors; for example,\n{@link ol.Map} has a `target` property, accessed with `getTarget()`  and\nchanged with `setTarget()`. Not all properties are however settable. There\nare also general-purpose accessors `get()` and `set()`. For example,\n`get('target')` is equivalent to `getTarget()`.\n\nThe `set` accessors trigger a change event, and you can monitor this by\nregistering a listener. For example, {@link ol.View} has a `center`\nproperty, so `view.on('change:center', function(evt) {...});` would call the\nfunction whenever the value of the center property changes. Within the\nfunction, `evt.target` would be the view, so `evt.target.getCenter()` would\nreturn the new center.\n\nYou can add your own observable properties with\n`object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\nYou can listen for changes on that property value with\n`object.on('change:prop', listener)`. You can get a list of all\nproperties with {@link ol.Object#getProperties object.getProperties()}.\n\nNote that the observable properties are separate from standard JS properties.\nYou can, for example, give your map object a title with\n`map.title='New title'` and with `map.set('title', 'Another title')`. The\nfirst will be a `hasOwnProperty`; the second will appear in\n`getProperties()`. Only the second is observable.\n\nThe observable properties also implement a form of Key Value Observing.\nTwo objects can be bound together such that a change in one will\nautomatically be reflected in the other. See `bindTo` method for more\ndetails, and see {@link ol.dom.Input} for the specific case of binding an\nobject with an HTML element.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "extends": "ol.Observable",
      "params": [
        {
          "name": "opt_values",
          "types": [
            "Object.<string, *>"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.Object#bindTo",
      "kind": "function",
      "description": "The bindTo method allows you to set up a two-way binding between a\n`source` and `target` object. The method returns an object with a\n`transform` method that you can use to provide `from` and `to`\nfunctions to transform values on the way from the source to the\ntarget and on the way back.\n\nFor example, if you had two map views (sourceView and targetView)\nand you wanted the target view to have double the resolution of the\nsource view, you could transform the resolution on the way to and\nfrom the target with the following:\n\n    sourceView.bindTo('resolution', targetView)\n      .transform(\n        function(sourceResolution) {\n          // from sourceView.resolution to targetView.resolution\n          return 2 * sourceResolution;\n        },\n        function(targetResolution) {\n          // from targetView.resolution to sourceView.resolution\n          return targetResolution / 2;\n        }\n      );",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "target",
          "types": [
            "ol.Object"
          ]
        },
        {
          "name": "opt_targetKey",
          "types": [
            "string"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.ObjectAccessor"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.Object#get",
      "kind": "function",
      "description": "Gets a value.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "*"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.Object#getKeys",
      "kind": "function",
      "description": "Get a list of object property names.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "returns": {
        "types": [
          "Array.<string>"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.Object#getProperties",
      "kind": "function",
      "description": "Get an object of all property names and values.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "returns": {
        "types": [
          "Object.<string, *>"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.Object#set",
      "kind": "function",
      "description": "Sets a value.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "value",
          "types": [
            "*"
          ]
        }
      ],
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.Object#setProperties",
      "kind": "function",
      "description": "Sets a collection of key-value pairs.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "values",
          "types": [
            "Object.<string, *>"
          ]
        }
      ],
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.Object#unbind",
      "kind": "function",
      "description": "Removes a binding. Unbinding will set the unbound property to the current\n    value. The object will not be notified, as the value has not changed.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.Object#unbindAll",
      "kind": "function",
      "description": "Removes all bindings.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.Observable",
      "kind": "class",
      "description": "Abstract base class; normally only used for creating subclasses and not\ninstantiated in apps.\nAn event target providing convenient methods for listener registration\nand unregistration. A generic `change` event is always available through\n{@link ol.Observable#changed}.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "extends": "goog.events.EventTarget",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Observable.unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "key",
          "types": [
            "goog.events.Key"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Observable#changed",
      "kind": "function",
      "description": "Increases the revision counter and disptches a 'change' event.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Observable#getRevision",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Observable#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Observable#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Observable#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Observable#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.\nNote that using the {@link ol.Observable.unByKey} static function is to\nbe preferred.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "key",
          "types": [
            "goog.events.Key"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.WEBGL_MAX_TEXTURE_SIZE",
      "kind": "constant",
      "description": "The maximum supported WebGL texture size in pixels. If WebGL is not\nsupported, the value is set to `undefined`.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/ol.js",
      "types": [
        "number",
        "undefined"
      ],
      "provides": [
        "ol"
      ]
    },
    {
      "name": "ol.inherits",
      "kind": "function",
      "description": "Inherit the prototype methods from one constructor into another.\n\nUsage:\n\n    function ParentClass(a, b) { }\n    ParentClass.prototype.foo = function(a) { }\n\n    function ChildClass(a, b, c) {\n      // Call parent constructor\n      ParentClass.call(this, a, b);\n    }\n    ol.inherits(ChildClass, ParentClass);\n\n    var child = new ChildClass('a', 'b', 'see');\n    child.foo(); // This works.\n\nIn addition, a superclass' implementation of a method can be invoked as\nfollows:\n\n    ChildClass.prototype.foo = function(a) {\n      ChildClass.base(this, 'foo', a);\n      // Other code here.\n    };",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/ol.js",
      "params": [
        {
          "name": "childCtor",
          "types": [
            "Function"
          ]
        },
        {
          "name": "parentCtor",
          "types": [
            "Function"
          ]
        }
      ],
      "provides": [
        "ol"
      ]
    },
    {
      "name": "ol.Overlay",
      "kind": "class",
      "description": "Like {@link ol.control.Control}, Overlays are visible widgets.\nUnlike Controls, they are not in a fixed position on the screen, but are tied\nto a geographical coordinate, so panning the map will move an Overlay but not\na Control.\n\nExample:\n\n    var popup = new ol.Overlay({\n      element: document.getElementById('popup')\n    });\n    popup.setPosition(coordinate);\n    map.addOverlay(popup);",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/overlay.js",
      "extends": "ol.Object",
      "params": [
        {
          "name": "options",
          "types": [
            "olx.OverlayOptions"
          ]
        }
      ],
      "provides": [
        "ol.Overlay",
        "ol.OverlayPositioning",
        "ol.OverlayProperty"
      ]
    },
    {
      "name": "ol.Overlay#getElement",
      "kind": "function",
      "description": "Get the DOM element of this overlay.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/overlay.js",
      "returns": {
        "types": [
          "Element",
          "undefined"
        ]
      },
      "provides": [
        "ol.Overlay",
        "ol.OverlayPositioning",
        "ol.OverlayProperty"
      ]
    },
    {
      "name": "ol.Overlay#getMap",
      "kind": "function",
      "description": "Get the map associated with this overlay.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/overlay.js",
      "returns": {
        "types": [
          "ol.Map",
          "undefined"
        ]
      },
      "provides": [
        "ol.Overlay",
        "ol.OverlayPositioning",
        "ol.OverlayProperty"
      ]
    },
    {
      "name": "ol.Overlay#getOffset",
      "kind": "function",
      "description": "Get the offset of this overlay.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/overlay.js",
      "returns": {
        "types": [
          "Array.<number>"
        ]
      },
      "provides": [
        "ol.Overlay",
        "ol.OverlayPositioning",
        "ol.OverlayProperty"
      ]
    },
    {
      "name": "ol.Overlay#getPosition",
      "kind": "function",
      "description": "Get the current position of this overlay.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/overlay.js",
      "returns": {
        "types": [
          "ol.Coordinate",
          "undefined"
        ]
      },
      "provides": [
        "ol.Overlay",
        "ol.OverlayPositioning",
        "ol.OverlayProperty"
      ]
    },
    {
      "name": "ol.Overlay#getPositioning",
      "kind": "function",
      "description": "Get the current positioning of this overlay.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/overlay.js",
      "returns": {
        "types": [
          "ol.OverlayPositioning"
        ]
      },
      "provides": [
        "ol.Overlay",
        "ol.OverlayPositioning",
        "ol.OverlayProperty"
      ]
    },
    {
      "name": "ol.Overlay#setElement",
      "kind": "function",
      "description": "Set the DOM element to be associated with this overlay.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/overlay.js",
      "params": [
        {
          "name": "element",
          "types": [
            "Element",
            "undefined"
          ]
        }
      ],
      "provides": [
        "ol.Overlay",
        "ol.OverlayPositioning",
        "ol.OverlayProperty"
      ]
    },
    {
      "name": "ol.Overlay#setMap",
      "kind": "function",
      "description": "Set the map to be associated with this overlay.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/overlay.js",
      "params": [
        {
          "name": "map",
          "types": [
            "ol.Map",
            "undefined"
          ]
        }
      ],
      "provides": [
        "ol.Overlay",
        "ol.OverlayPositioning",
        "ol.OverlayProperty"
      ]
    },
    {
      "name": "ol.Overlay#setOffset",
      "kind": "function",
      "description": "Set the offset for this overlay.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/overlay.js",
      "params": [
        {
          "name": "offset",
          "types": [
            "Array.<number>"
          ]
        }
      ],
      "provides": [
        "ol.Overlay",
        "ol.OverlayPositioning",
        "ol.OverlayProperty"
      ]
    },
    {
      "name": "ol.Overlay#setPosition",
      "kind": "function",
      "description": "Set the position for this overlay. If the position is `undefined` the\noverlay is hidden.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/overlay.js",
      "params": [
        {
          "name": "position",
          "types": [
            "ol.Coordinate",
            "undefined"
          ]
        }
      ],
      "provides": [
        "ol.Overlay",
        "ol.OverlayPositioning",
        "ol.OverlayProperty"
      ]
    },
    {
      "name": "ol.Overlay#setPositioning",
      "kind": "function",
      "description": "Set the positioning for this overlay.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/overlay.js",
      "params": [
        {
          "name": "positioning",
          "types": [
            "ol.OverlayPositioning"
          ]
        }
      ],
      "provides": [
        "ol.Overlay",
        "ol.OverlayPositioning",
        "ol.OverlayProperty"
      ]
    },
    {
      "name": "ol.Tile#getTileCoord",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/tile.js",
      "returns": {
        "types": [
          "ol.TileCoord"
        ]
      },
      "provides": [
        "ol.Tile",
        "ol.TileState"
      ]
    },
    {
      "name": "ol.View",
      "kind": "class",
      "description": "An ol.View object represents a simple 2D view of the map.\n\nThis is the object to act upon to change the center, resolution,\nand rotation of the map.\n\n### The view states\n\nAn `ol.View` is determined by three states: `center`, `resolution`,\nand `rotation`. Each state has a corresponding getter and setter, e.g.\n`getCenter` and `setCenter` for the `center` state.\n\nAn `ol.View` has a `projection`. The projection determines the\ncoordinate system of the center, and its units determine the units of the\nresolution (projection units per pixel). The default projection is\nSpherical Mercator (EPSG:3857).\n\n### The constraints\n\n`setCenter`, `setResolution` and `setRotation` can be used to change the\nstates of the view. Any value can be passed to the setters. And the value\nthat is passed to a setter will effectively be the value set in the view,\nand returned by the corresponding getter.\n\nBut an `ol.View` object also has a *resolution constraint*, a\n*rotation constraint* and a *center constraint*.\n\nAs said above, no constraints are applied when the setters are used to set\nnew states for the view. Applying constraints is done explicitly through\nthe use of the `constrain*` functions (`constrainResolution` and\n`constrainRotation` and `constrainCenter`).\n\nThe main users of the constraints are the interactions and the\ncontrols. For example, double-clicking on the map changes the view to\nthe \"next\" resolution. And releasing the fingers after pinch-zooming\nsnaps to the closest resolution (with an animation).\n\nThe *resolution constraint* snaps to specific resolutions. It is\ndetermined by the following options: `resolutions`, `maxResolution`,\n`maxZoom`, and `zoomFactor`. If `resolutions` is set, the other three\noptions are ignored. See documentation for each option for more\ninformation.\n\nThe *rotation constraint* snaps to specific angles. It is determined\nby the following options: `enableRotation` and `constrainRotation`.\nBy default the rotation value is snapped to zero when approaching the\nhorizontal.\n\nThe *center constraint* is determined by the `extent` option. By\ndefault the center is not constrained at all.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/view.js",
      "extends": "ol.Object",
      "params": [
        {
          "name": "opt_options",
          "types": [
            "olx.ViewOptions"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.View",
        "ol.ViewHint"
      ]
    },
    {
      "name": "ol.View#constrainCenter",
      "kind": "function",
      "description": "Get the constrained center of this view.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/view.js",
      "params": [
        {
          "name": "center",
          "types": [
            "ol.Coordinate",
            "undefined"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.Coordinate",
          "undefined"
        ]
      },
      "provides": [
        "ol.View",
        "ol.ViewHint"
      ]
    },
    {
      "name": "ol.View#constrainResolution",
      "kind": "function",
      "description": "Get the constrained resolution of this view.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/view.js",
      "params": [
        {
          "name": "resolution",
          "types": [
            "number",
            "undefined"
          ]
        },
        {
          "name": "opt_delta",
          "types": [
            "number"
          ],
          "optional": true
        },
        {
          "name": "opt_direction",
          "types": [
            "number"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "number",
          "undefined"
        ]
      },
      "provides": [
        "ol.View",
        "ol.ViewHint"
      ]
    },
    {
      "name": "ol.View#constrainRotation",
      "kind": "function",
      "description": "Get the constrained rotation of this view.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/view.js",
      "params": [
        {
          "name": "rotation",
          "types": [
            "number",
            "undefined"
          ]
        },
        {
          "name": "opt_delta",
          "types": [
            "number"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "number",
          "undefined"
        ]
      },
      "provides": [
        "ol.View",
        "ol.ViewHint"
      ]
    },
    {
      "name": "ol.View#getCenter",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/view.js",
      "returns": {
        "types": [
          "ol.Coordinate",
          "undefined"
        ]
      },
      "provides": [
        "ol.View",
        "ol.ViewHint"
      ]
    },
    {
      "name": "ol.View#calculateExtent",
      "kind": "function",
      "description": "Calculate the extent for the current view state and the passed `size`.\n`size` is the size in pixels of the box into which the calculated extent\nshould fit. In most cases you want to get the extent of the entire map,\nthat is `map.getSize()`.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/view.js",
      "params": [
        {
          "name": "size",
          "types": [
            "ol.Size"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.Extent"
        ]
      },
      "provides": [
        "ol.View",
        "ol.ViewHint"
      ]
    },
    {
      "name": "ol.View#getProjection",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/view.js",
      "returns": {
        "types": [
          "ol.proj.Projection"
        ]
      },
      "provides": [
        "ol.View",
        "ol.ViewHint"
      ]
    },
    {
      "name": "ol.View#getResolution",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/view.js",
      "returns": {
        "types": [
          "number",
          "undefined"
        ]
      },
      "provides": [
        "ol.View",
        "ol.ViewHint"
      ]
    },
    {
      "name": "ol.View#getResolutionForExtent",
      "kind": "function",
      "description": "Get the resolution for a provided extent (in map units) and size (in pixels).",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/view.js",
      "params": [
        {
          "name": "extent",
          "types": [
            "ol.Extent"
          ]
        },
        {
          "name": "size",
          "types": [
            "ol.Size"
          ]
        }
      ],
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.View",
        "ol.ViewHint"
      ]
    },
    {
      "name": "ol.View#getRotation",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/view.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.View",
        "ol.ViewHint"
      ]
    },
    {
      "name": "ol.View#getZoom",
      "kind": "function",
      "description": "Get the current zoom level. Return undefined if the current\nresolution is undefined or not a \"constrained resolution\".",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/view.js",
      "returns": {
        "types": [
          "number",
          "undefined"
        ]
      },
      "provides": [
        "ol.View",
        "ol.ViewHint"
      ]
    },
    {
      "name": "ol.View#fitExtent",
      "kind": "function",
      "description": "Fit the map view to the passed `extent` and `size`. `size` is the size in\npixels of the box to fit the extent into. In most cases you will want to\nuse the map size, that is `map.getSize()`.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/view.js",
      "params": [
        {
          "name": "extent",
          "types": [
            "ol.Extent"
          ]
        },
        {
          "name": "size",
          "types": [
            "ol.Size"
          ]
        }
      ],
      "provides": [
        "ol.View",
        "ol.ViewHint"
      ]
    },
    {
      "name": "ol.View#fitGeometry",
      "kind": "function",
      "description": "Fit the given geometry based on the given map size and border.\nTake care on the map angle.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/view.js",
      "params": [
        {
          "name": "geometry",
          "types": [
            "ol.geom.SimpleGeometry"
          ]
        },
        {
          "name": "size",
          "types": [
            "ol.Size"
          ]
        },
        {
          "name": "opt_options",
          "types": [
            "olx.view.FitGeometryOptions"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.View",
        "ol.ViewHint"
      ]
    },
    {
      "name": "ol.View#centerOn",
      "kind": "function",
      "description": "Center on coordinate and view position.\nTake care on the map angle.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/view.js",
      "params": [
        {
          "name": "coordinate",
          "types": [
            "ol.Coordinate"
          ]
        },
        {
          "name": "size",
          "types": [
            "ol.Size"
          ]
        },
        {
          "name": "position",
          "types": [
            "ol.Pixel"
          ]
        }
      ],
      "provides": [
        "ol.View",
        "ol.ViewHint"
      ]
    },
    {
      "name": "ol.View#rotate",
      "kind": "function",
      "description": "Rotate the view around a given coordinate.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/view.js",
      "params": [
        {
          "name": "rotation",
          "types": [
            "number"
          ]
        },
        {
          "name": "opt_anchor",
          "types": [
            "ol.Coordinate"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.View",
        "ol.ViewHint"
      ]
    },
    {
      "name": "ol.View#setCenter",
      "kind": "function",
      "description": "Set the center of the current view.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/view.js",
      "params": [
        {
          "name": "center",
          "types": [
            "ol.Coordinate",
            "undefined"
          ]
        }
      ],
      "provides": [
        "ol.View",
        "ol.ViewHint"
      ]
    },
    {
      "name": "ol.View#setResolution",
      "kind": "function",
      "description": "Set the resolution for this view.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/view.js",
      "params": [
        {
          "name": "resolution",
          "types": [
            "number",
            "undefined"
          ]
        }
      ],
      "provides": [
        "ol.View",
        "ol.ViewHint"
      ]
    },
    {
      "name": "ol.View#setRotation",
      "kind": "function",
      "description": "Set the rotation for this view.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/view.js",
      "params": [
        {
          "name": "rotation",
          "types": [
            "number"
          ]
        }
      ],
      "provides": [
        "ol.View",
        "ol.ViewHint"
      ]
    },
    {
      "name": "ol.View#setZoom",
      "kind": "function",
      "description": "Zoom to a specific zoom level.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/view.js",
      "params": [
        {
          "name": "zoom",
          "types": [
            "number"
          ]
        }
      ],
      "provides": [
        "ol.View",
        "ol.ViewHint"
      ]
    },
    {
      "name": "ol.xml.getAllTextContent",
      "kind": "function",
      "description": "Recursively grab all text content of child nodes into a single string.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/xml.js",
      "params": [
        {
          "name": "node",
          "types": [
            "Node"
          ]
        },
        {
          "name": "normalizeWhitespace",
          "types": [
            "boolean"
          ]
        }
      ],
      "returns": {
        "types": [
          "string"
        ]
      },
      "provides": [
        "ol.xml"
      ]
    },
    {
      "name": "ol.xml.parse",
      "kind": "function",
      "description": "Parse an XML string to a XML Document",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/xml.js",
      "params": [
        {
          "name": "xml",
          "types": [
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "Document"
        ]
      },
      "provides": [
        "ol.xml"
      ]
    },
    {
      "name": "ol.webgl.Context",
      "kind": "class",
      "description": "A WebGL context for accessing low-level WebGL capabilities.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/webgl/context.js",
      "extends": "goog.events.EventTarget",
      "params": [
        {
          "name": "canvas",
          "types": [
            "HTMLCanvasElement"
          ]
        },
        {
          "name": "gl",
          "types": [
            "WebGLRenderingContext"
          ]
        }
      ],
      "provides": [
        "ol.webgl.Context"
      ]
    },
    {
      "name": "ol.webgl.Context#getGL",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/webgl/context.js",
      "returns": {
        "types": [
          "WebGLRenderingContext"
        ]
      },
      "provides": [
        "ol.webgl.Context"
      ]
    },
    {
      "name": "ol.webgl.Context#getHitDetectionFramebuffer",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/webgl/context.js",
      "returns": {
        "types": [
          "WebGLFramebuffer"
        ]
      },
      "provides": [
        "ol.webgl.Context"
      ]
    },
    {
      "name": "ol.webgl.Context#useProgram",
      "kind": "function",
      "description": "Just return false if that program is used already. Other use\nthat program (call `gl.useProgram`) and make it the \"current\nprogram\".",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/webgl/context.js",
      "params": [
        {
          "name": "program",
          "types": [
            "WebGLProgram"
          ]
        }
      ],
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.webgl.Context"
      ]
    },
    {
      "name": "ol.tilegrid.TileGrid",
      "kind": "class",
      "description": "Base class for setting the grid pattern for sources accessing tiled-image\nservers.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/tilegrid/tilegrid.js",
      "params": [
        {
          "name": "options",
          "types": [
            "olx.tilegrid.TileGridOptions"
          ]
        }
      ],
      "provides": [
        "ol.tilegrid.TileGrid"
      ]
    },
    {
      "name": "ol.tilegrid.TileGrid#getMaxZoom",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/tilegrid/tilegrid.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.tilegrid.TileGrid"
      ]
    },
    {
      "name": "ol.tilegrid.TileGrid#getMinZoom",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/tilegrid/tilegrid.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.tilegrid.TileGrid"
      ]
    },
    {
      "name": "ol.tilegrid.TileGrid#getOrigin",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/tilegrid/tilegrid.js",
      "params": [
        {
          "name": "z",
          "types": [
            "number"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.Coordinate"
        ]
      },
      "provides": [
        "ol.tilegrid.TileGrid"
      ]
    },
    {
      "name": "ol.tilegrid.TileGrid#getResolution",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/tilegrid/tilegrid.js",
      "params": [
        {
          "name": "z",
          "types": [
            "number"
          ]
        }
      ],
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.tilegrid.TileGrid"
      ]
    },
    {
      "name": "ol.tilegrid.TileGrid#getResolutions",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/tilegrid/tilegrid.js",
      "returns": {
        "types": [
          "Array.<number>"
        ]
      },
      "provides": [
        "ol.tilegrid.TileGrid"
      ]
    },
    {
      "name": "ol.tilegrid.TileGrid#getTileCoordForCoordAndResolution",
      "kind": "function",
      "description": "Get the tile coordinate for the given map coordinate and resolution.  This\nmethod considers that coordinates that intersect tile boundaries should be\nassigned the higher tile coordinate.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/tilegrid/tilegrid.js",
      "params": [
        {
          "name": "coordinate",
          "types": [
            "ol.Coordinate"
          ]
        },
        {
          "name": "resolution",
          "types": [
            "number"
          ]
        },
        {
          "name": "opt_tileCoord",
          "types": [
            "ol.TileCoord"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.TileCoord"
        ]
      },
      "provides": [
        "ol.tilegrid.TileGrid"
      ]
    },
    {
      "name": "ol.tilegrid.TileGrid#getTileCoordForCoordAndZ",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/tilegrid/tilegrid.js",
      "params": [
        {
          "name": "coordinate",
          "types": [
            "ol.Coordinate"
          ]
        },
        {
          "name": "z",
          "types": [
            "number"
          ]
        },
        {
          "name": "opt_tileCoord",
          "types": [
            "ol.TileCoord"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.TileCoord"
        ]
      },
      "provides": [
        "ol.tilegrid.TileGrid"
      ]
    },
    {
      "name": "ol.tilegrid.TileGrid#getTileSize",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/tilegrid/tilegrid.js",
      "params": [
        {
          "name": "z",
          "types": [
            "number"
          ]
        }
      ],
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.tilegrid.TileGrid"
      ]
    },
    {
      "name": "ol.tilegrid.WMTS",
      "kind": "class",
      "description": "Set the grid pattern for sources accessing WMTS tiled-image servers.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/tilegrid/wmtstilegrid.js",
      "extends": "ol.tilegrid.TileGrid",
      "params": [
        {
          "name": "options",
          "types": [
            "olx.tilegrid.WMTSOptions"
          ]
        }
      ],
      "provides": [
        "ol.tilegrid.WMTS"
      ]
    },
    {
      "name": "ol.tilegrid.WMTS#getMatrixIds",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/tilegrid/wmtstilegrid.js",
      "returns": {
        "types": [
          "Array.<string>"
        ]
      },
      "provides": [
        "ol.tilegrid.WMTS"
      ]
    },
    {
      "name": "ol.tilegrid.XYZ",
      "kind": "class",
      "description": "Set the grid pattern for sources accessing XYZ tiled-image servers.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/tilegrid/xyztilegrid.js",
      "extends": "ol.tilegrid.TileGrid",
      "params": [
        {
          "name": "options",
          "types": [
            "olx.tilegrid.XYZOptions"
          ]
        }
      ],
      "provides": [
        "ol.tilegrid.XYZ"
      ]
    },
    {
      "name": "ol.tilegrid.Zoomify",
      "kind": "class",
      "description": "Set the grid pattern for sources accessing Zoomify tiled-image servers.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/tilegrid/zoomifytilegrid.js",
      "extends": "ol.tilegrid.TileGrid",
      "params": [
        {
          "name": "opt_options",
          "types": [
            "olx.tilegrid.ZoomifyOptions"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.tilegrid.Zoomify"
      ]
    },
    {
      "name": "ol.style.AtlasManager",
      "kind": "class",
      "description": "Manages the creation of image atlases.\n\nImages added to this manager will be inserted into an atlas, which\nwill be used for rendering.\nThe `size` given in the constructor is the size for the first\natlas. After that, when new atlases are created, they will have\ntwice the size as the latest atlas (until `maxSize` is reached).\n\nIf an application uses many images or very large images, it is recommended\nto set a higher `size` value to avoid the creation of too many atlases.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/style/atlasmanager.js",
      "params": [
        {
          "name": "opt_options",
          "types": [
            "olx.style.AtlasManagerOptions"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.style.Atlas",
        "ol.style.AtlasManager"
      ]
    },
    {
      "name": "ol.style.Circle",
      "kind": "class",
      "description": "Set circle style for vector features.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/style/circlestyle.js",
      "extends": "ol.style.Image",
      "params": [
        {
          "name": "opt_options",
          "types": [
            "olx.style.CircleOptions"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.style.Circle"
      ]
    },
    {
      "name": "ol.style.Circle#getAnchor",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/style/circlestyle.js",
      "provides": [
        "ol.style.Circle"
      ]
    },
    {
      "name": "ol.style.Circle#getFill",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/style/circlestyle.js",
      "returns": {
        "types": [
          "ol.style.Fill"
        ]
      },
      "provides": [
        "ol.style.Circle"
      ]
    },
    {
      "name": "ol.style.Circle#getImage",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/style/circlestyle.js",
      "params": [
        {
          "name": "pixelRatio",
          "types": [
            "number"
          ]
        }
      ],
      "returns": {
        "types": [
          "HTMLCanvasElement"
        ]
      },
      "provides": [
        "ol.style.Circle"
      ]
    },
    {
      "name": "ol.style.Circle#getOrigin",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/style/circlestyle.js",
      "provides": [
        "ol.style.Circle"
      ]
    },
    {
      "name": "ol.style.Circle#getRadius",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/style/circlestyle.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.style.Circle"
      ]
    },
    {
      "name": "ol.style.Circle#getSize",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/style/circlestyle.js",
      "provides": [
        "ol.style.Circle"
      ]
    },
    {
      "name": "ol.style.Circle#getStroke",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/style/circlestyle.js",
      "returns": {
        "types": [
          "ol.style.Stroke"
        ]
      },
      "provides": [
        "ol.style.Circle"
      ]
    },
    {
      "name": "ol.style.Fill",
      "kind": "class",
      "description": "Set fill style for vector features.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/style/fillstyle.js",
      "params": [
        {
          "name": "opt_options",
          "types": [
            "olx.style.FillOptions"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.style.Fill"
      ]
    },
    {
      "name": "ol.style.Fill#getColor",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/style/fillstyle.js",
      "returns": {
        "types": [
          "ol.Color",
          "string"
        ]
      },
      "provides": [
        "ol.style.Fill"
      ]
    },
    {
      "name": "ol.style.Fill#setColor",
      "kind": "function",
      "description": "Set the color.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/style/fillstyle.js",
      "params": [
        {
          "name": "color",
          "types": [
            "ol.Color",
            "string"
          ]
        }
      ],
      "provides": [
        "ol.style.Fill"
      ]
    },
    {
      "name": "ol.style.Icon",
      "kind": "class",
      "description": "Set icon style for vector features.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/style/iconstyle.js",
      "extends": "ol.style.Image",
      "params": [
        {
          "name": "opt_options",
          "types": [
            "olx.style.IconOptions"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.style.Icon",
        "ol.style.IconAnchorUnits",
        "ol.style.IconImageCache",
        "ol.style.IconOrigin"
      ]
    },
    {
      "name": "ol.style.Icon#getAnchor",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/style/iconstyle.js",
      "provides": [
        "ol.style.Icon",
        "ol.style.IconAnchorUnits",
        "ol.style.IconImageCache",
        "ol.style.IconOrigin"
      ]
    },
    {
      "name": "ol.style.Icon#getImage",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/style/iconstyle.js",
      "params": [
        {
          "name": "pixelRatio",
          "types": [
            "number"
          ]
        }
      ],
      "returns": {
        "types": [
          "Image"
        ]
      },
      "provides": [
        "ol.style.Icon",
        "ol.style.IconAnchorUnits",
        "ol.style.IconImageCache",
        "ol.style.IconOrigin"
      ]
    },
    {
      "name": "ol.style.Icon#getOrigin",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/style/iconstyle.js",
      "provides": [
        "ol.style.Icon",
        "ol.style.IconAnchorUnits",
        "ol.style.IconImageCache",
        "ol.style.IconOrigin"
      ]
    },
    {
      "name": "ol.style.Icon#getSrc",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/style/iconstyle.js",
      "returns": {
        "types": [
          "string",
          "undefined"
        ]
      },
      "provides": [
        "ol.style.Icon",
        "ol.style.IconAnchorUnits",
        "ol.style.IconImageCache",
        "ol.style.IconOrigin"
      ]
    },
    {
      "name": "ol.style.Icon#getSize",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/style/iconstyle.js",
      "provides": [
        "ol.style.Icon",
        "ol.style.IconAnchorUnits",
        "ol.style.IconImageCache",
        "ol.style.IconOrigin"
      ]
    },
    {
      "name": "ol.style.Image",
      "kind": "class",
      "description": "Abstract base class; used for creating subclasses and not instantiated in\napps. Base class for {@link ol.style.Icon} and {@link ol.style.Circle}.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/style/imagestyle.js",
      "params": [
        {
          "name": "options",
          "types": [
            "ol.style.ImageOptions"
          ]
        }
      ],
      "provides": [
        "ol.style.Image",
        "ol.style.ImageState"
      ]
    },
    {
      "name": "ol.style.Image#getOpacity",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/style/imagestyle.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.style.Image",
        "ol.style.ImageState"
      ]
    },
    {
      "name": "ol.style.Image#getRotateWithView",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/style/imagestyle.js",
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.style.Image",
        "ol.style.ImageState"
      ]
    },
    {
      "name": "ol.style.Image#getRotation",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/style/imagestyle.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.style.Image",
        "ol.style.ImageState"
      ]
    },
    {
      "name": "ol.style.Image#getScale",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/style/imagestyle.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.style.Image",
        "ol.style.ImageState"
      ]
    },
    {
      "name": "ol.style.Image#getSnapToPixel",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/style/imagestyle.js",
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.style.Image",
        "ol.style.ImageState"
      ]
    },
    {
      "name": "ol.style.Image#getImage",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/style/imagestyle.js",
      "params": [
        {
          "name": "pixelRatio",
          "types": [
            "number"
          ]
        }
      ],
      "returns": {
        "types": [
          "HTMLCanvasElement",
          "HTMLVideoElement",
          "Image"
        ]
      },
      "provides": [
        "ol.style.Image",
        "ol.style.ImageState"
      ]
    },
    {
      "name": "ol.style.Image#setRotation",
      "kind": "function",
      "description": "Set the rotation.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/style/imagestyle.js",
      "params": [
        {
          "name": "rotation",
          "types": [
            "number"
          ]
        }
      ],
      "provides": [
        "ol.style.Image",
        "ol.style.ImageState"
      ]
    },
    {
      "name": "ol.style.Image#setScale",
      "kind": "function",
      "description": "Set the scale.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/style/imagestyle.js",
      "params": [
        {
          "name": "scale",
          "types": [
            "number"
          ]
        }
      ],
      "provides": [
        "ol.style.Image",
        "ol.style.ImageState"
      ]
    },
    {
      "name": "ol.style.RegularShape",
      "kind": "class",
      "description": "Set regular shape style for vector features. The resulting shape will be\na regular polygon when `radius` is provided, or a star when `radius1` and\n`radius2` are provided.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/style/regularshapestyle.js",
      "extends": "ol.style.Image",
      "params": [
        {
          "name": "options",
          "types": [
            "olx.style.RegularShapeOptions"
          ]
        }
      ],
      "provides": [
        "ol.style.RegularShape"
      ]
    },
    {
      "name": "ol.style.RegularShape#getAnchor",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/style/regularshapestyle.js",
      "provides": [
        "ol.style.RegularShape"
      ]
    },
    {
      "name": "ol.style.RegularShape#getAngle",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/style/regularshapestyle.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.style.RegularShape"
      ]
    },
    {
      "name": "ol.style.RegularShape#getFill",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/style/regularshapestyle.js",
      "returns": {
        "types": [
          "ol.style.Fill"
        ]
      },
      "provides": [
        "ol.style.RegularShape"
      ]
    },
    {
      "name": "ol.style.RegularShape#getImage",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/style/regularshapestyle.js",
      "provides": [
        "ol.style.RegularShape"
      ]
    },
    {
      "name": "ol.style.RegularShape#getOrigin",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/style/regularshapestyle.js",
      "provides": [
        "ol.style.RegularShape"
      ]
    },
    {
      "name": "ol.style.RegularShape#getPoints",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/style/regularshapestyle.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.style.RegularShape"
      ]
    },
    {
      "name": "ol.style.RegularShape#getRadius",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/style/regularshapestyle.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.style.RegularShape"
      ]
    },
    {
      "name": "ol.style.RegularShape#getRadius2",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/style/regularshapestyle.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.style.RegularShape"
      ]
    },
    {
      "name": "ol.style.RegularShape#getSize",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/style/regularshapestyle.js",
      "provides": [
        "ol.style.RegularShape"
      ]
    },
    {
      "name": "ol.style.RegularShape#getStroke",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/style/regularshapestyle.js",
      "returns": {
        "types": [
          "ol.style.Stroke"
        ]
      },
      "provides": [
        "ol.style.RegularShape"
      ]
    },
    {
      "name": "ol.style.Stroke",
      "kind": "class",
      "description": "Set stroke style for vector features.\nNote that the defaults given are the Canvas defaults, which will be used if\noption is not defined. The `get` functions return whatever was entered in\nthe options; they will not return the default.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/style/strokestyle.js",
      "params": [
        {
          "name": "opt_options",
          "types": [
            "olx.style.StrokeOptions"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.style.Stroke"
      ]
    },
    {
      "name": "ol.style.Stroke#getColor",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/style/strokestyle.js",
      "returns": {
        "types": [
          "ol.Color",
          "string"
        ]
      },
      "provides": [
        "ol.style.Stroke"
      ]
    },
    {
      "name": "ol.style.Stroke#getLineCap",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/style/strokestyle.js",
      "returns": {
        "types": [
          "string",
          "undefined"
        ]
      },
      "provides": [
        "ol.style.Stroke"
      ]
    },
    {
      "name": "ol.style.Stroke#getLineDash",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/style/strokestyle.js",
      "returns": {
        "types": [
          "Array.<number>"
        ]
      },
      "provides": [
        "ol.style.Stroke"
      ]
    },
    {
      "name": "ol.style.Stroke#getLineJoin",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/style/strokestyle.js",
      "returns": {
        "types": [
          "string",
          "undefined"
        ]
      },
      "provides": [
        "ol.style.Stroke"
      ]
    },
    {
      "name": "ol.style.Stroke#getMiterLimit",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/style/strokestyle.js",
      "returns": {
        "types": [
          "number",
          "undefined"
        ]
      },
      "provides": [
        "ol.style.Stroke"
      ]
    },
    {
      "name": "ol.style.Stroke#getWidth",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/style/strokestyle.js",
      "returns": {
        "types": [
          "number",
          "undefined"
        ]
      },
      "provides": [
        "ol.style.Stroke"
      ]
    },
    {
      "name": "ol.style.Stroke#setColor",
      "kind": "function",
      "description": "Set the color.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/style/strokestyle.js",
      "params": [
        {
          "name": "color",
          "types": [
            "ol.Color",
            "string"
          ]
        }
      ],
      "provides": [
        "ol.style.Stroke"
      ]
    },
    {
      "name": "ol.style.Stroke#setLineCap",
      "kind": "function",
      "description": "Set the line cap.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/style/strokestyle.js",
      "params": [
        {
          "name": "lineCap",
          "types": [
            "string",
            "undefined"
          ]
        }
      ],
      "provides": [
        "ol.style.Stroke"
      ]
    },
    {
      "name": "ol.style.Stroke#setLineDash",
      "kind": "function",
      "description": "Set the line dash.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/style/strokestyle.js",
      "params": [
        {
          "name": "lineDash",
          "types": [
            "Array.<number>"
          ]
        }
      ],
      "provides": [
        "ol.style.Stroke"
      ]
    },
    {
      "name": "ol.style.Stroke#setLineJoin",
      "kind": "function",
      "description": "Set the line join.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/style/strokestyle.js",
      "params": [
        {
          "name": "lineJoin",
          "types": [
            "string",
            "undefined"
          ]
        }
      ],
      "provides": [
        "ol.style.Stroke"
      ]
    },
    {
      "name": "ol.style.Stroke#setMiterLimit",
      "kind": "function",
      "description": "Set the miter limit.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/style/strokestyle.js",
      "params": [
        {
          "name": "miterLimit",
          "types": [
            "number",
            "undefined"
          ]
        }
      ],
      "provides": [
        "ol.style.Stroke"
      ]
    },
    {
      "name": "ol.style.Stroke#setWidth",
      "kind": "function",
      "description": "Set the width.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/style/strokestyle.js",
      "params": [
        {
          "name": "width",
          "types": [
            "number",
            "undefined"
          ]
        }
      ],
      "provides": [
        "ol.style.Stroke"
      ]
    },
    {
      "name": "ol.style.Style",
      "kind": "class",
      "description": "Container for vector feature rendering styles. Any changes made to the style\nor its children through `set*()` methods will not take effect until the\nfeature, layer or FeatureOverlay that uses the style is re-rendered.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/style/style.js",
      "params": [
        {
          "name": "opt_options",
          "types": [
            "olx.style.StyleOptions"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.style.Style",
        "ol.style.defaultGeometryFunction"
      ]
    },
    {
      "name": "ol.style.Style#getGeometry",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/style/style.js",
      "returns": {
        "types": [
          "string",
          "ol.geom.Geometry",
          "ol.style.GeometryFunction"
        ]
      },
      "provides": [
        "ol.style.Style",
        "ol.style.defaultGeometryFunction"
      ]
    },
    {
      "name": "ol.style.Style#getGeometryFunction",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/style/style.js",
      "returns": {
        "types": [
          "ol.style.GeometryFunction"
        ],
        "nullable": false
      },
      "provides": [
        "ol.style.Style",
        "ol.style.defaultGeometryFunction"
      ]
    },
    {
      "name": "ol.style.Style#getFill",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/style/style.js",
      "returns": {
        "types": [
          "ol.style.Fill"
        ]
      },
      "provides": [
        "ol.style.Style",
        "ol.style.defaultGeometryFunction"
      ]
    },
    {
      "name": "ol.style.Style#getImage",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/style/style.js",
      "returns": {
        "types": [
          "ol.style.Image"
        ]
      },
      "provides": [
        "ol.style.Style",
        "ol.style.defaultGeometryFunction"
      ]
    },
    {
      "name": "ol.style.Style#getStroke",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/style/style.js",
      "returns": {
        "types": [
          "ol.style.Stroke"
        ]
      },
      "provides": [
        "ol.style.Style",
        "ol.style.defaultGeometryFunction"
      ]
    },
    {
      "name": "ol.style.Style#getText",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/style/style.js",
      "returns": {
        "types": [
          "ol.style.Text"
        ]
      },
      "provides": [
        "ol.style.Style",
        "ol.style.defaultGeometryFunction"
      ]
    },
    {
      "name": "ol.style.Style#getZIndex",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/style/style.js",
      "returns": {
        "types": [
          "number",
          "undefined"
        ]
      },
      "provides": [
        "ol.style.Style",
        "ol.style.defaultGeometryFunction"
      ]
    },
    {
      "name": "ol.style.Style#setGeometry",
      "kind": "function",
      "description": "Set a geometry that is rendered instead of the feature's geometry.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/style/style.js",
      "params": [
        {
          "name": "geometry",
          "types": [
            "string",
            "ol.geom.Geometry",
            "ol.style.GeometryFunction"
          ]
        }
      ],
      "provides": [
        "ol.style.Style",
        "ol.style.defaultGeometryFunction"
      ]
    },
    {
      "name": "ol.style.Style#setZIndex",
      "kind": "function",
      "description": "Set the zIndex.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/style/style.js",
      "params": [
        {
          "name": "zIndex",
          "types": [
            "number",
            "undefined"
          ]
        }
      ],
      "provides": [
        "ol.style.Style",
        "ol.style.defaultGeometryFunction"
      ]
    },
    {
      "name": "ol.style.Text",
      "kind": "class",
      "description": "Set text style for vector features.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/style/textstyle.js",
      "params": [
        {
          "name": "opt_options",
          "types": [
            "olx.style.TextOptions"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.style.Text"
      ]
    },
    {
      "name": "ol.style.Text#getFont",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/style/textstyle.js",
      "returns": {
        "types": [
          "string",
          "undefined"
        ]
      },
      "provides": [
        "ol.style.Text"
      ]
    },
    {
      "name": "ol.style.Text#getOffsetX",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/style/textstyle.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.style.Text"
      ]
    },
    {
      "name": "ol.style.Text#getOffsetY",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/style/textstyle.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.style.Text"
      ]
    },
    {
      "name": "ol.style.Text#getFill",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/style/textstyle.js",
      "returns": {
        "types": [
          "ol.style.Fill"
        ]
      },
      "provides": [
        "ol.style.Text"
      ]
    },
    {
      "name": "ol.style.Text#getRotation",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/style/textstyle.js",
      "returns": {
        "types": [
          "number",
          "undefined"
        ]
      },
      "provides": [
        "ol.style.Text"
      ]
    },
    {
      "name": "ol.style.Text#getScale",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/style/textstyle.js",
      "returns": {
        "types": [
          "number",
          "undefined"
        ]
      },
      "provides": [
        "ol.style.Text"
      ]
    },
    {
      "name": "ol.style.Text#getStroke",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/style/textstyle.js",
      "returns": {
        "types": [
          "ol.style.Stroke"
        ]
      },
      "provides": [
        "ol.style.Text"
      ]
    },
    {
      "name": "ol.style.Text#getText",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/style/textstyle.js",
      "returns": {
        "types": [
          "string",
          "undefined"
        ]
      },
      "provides": [
        "ol.style.Text"
      ]
    },
    {
      "name": "ol.style.Text#getTextAlign",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/style/textstyle.js",
      "returns": {
        "types": [
          "string",
          "undefined"
        ]
      },
      "provides": [
        "ol.style.Text"
      ]
    },
    {
      "name": "ol.style.Text#getTextBaseline",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/style/textstyle.js",
      "returns": {
        "types": [
          "string",
          "undefined"
        ]
      },
      "provides": [
        "ol.style.Text"
      ]
    },
    {
      "name": "ol.style.Text#setFont",
      "kind": "function",
      "description": "Set the font.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/style/textstyle.js",
      "params": [
        {
          "name": "font",
          "types": [
            "string",
            "undefined"
          ]
        }
      ],
      "provides": [
        "ol.style.Text"
      ]
    },
    {
      "name": "ol.style.Text#setFill",
      "kind": "function",
      "description": "Set the fill.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/style/textstyle.js",
      "params": [
        {
          "name": "fill",
          "types": [
            "ol.style.Fill"
          ]
        }
      ],
      "provides": [
        "ol.style.Text"
      ]
    },
    {
      "name": "ol.style.Text#setRotation",
      "kind": "function",
      "description": "Set the rotation.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/style/textstyle.js",
      "params": [
        {
          "name": "rotation",
          "types": [
            "number",
            "undefined"
          ]
        }
      ],
      "provides": [
        "ol.style.Text"
      ]
    },
    {
      "name": "ol.style.Text#setScale",
      "kind": "function",
      "description": "Set the scale.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/style/textstyle.js",
      "params": [
        {
          "name": "scale",
          "types": [
            "number",
            "undefined"
          ]
        }
      ],
      "provides": [
        "ol.style.Text"
      ]
    },
    {
      "name": "ol.style.Text#setStroke",
      "kind": "function",
      "description": "Set the stroke.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/style/textstyle.js",
      "params": [
        {
          "name": "stroke",
          "types": [
            "ol.style.Stroke"
          ]
        }
      ],
      "provides": [
        "ol.style.Text"
      ]
    },
    {
      "name": "ol.style.Text#setText",
      "kind": "function",
      "description": "Set the text.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/style/textstyle.js",
      "params": [
        {
          "name": "text",
          "types": [
            "string",
            "undefined"
          ]
        }
      ],
      "provides": [
        "ol.style.Text"
      ]
    },
    {
      "name": "ol.style.Text#setTextAlign",
      "kind": "function",
      "description": "Set the text alignment.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/style/textstyle.js",
      "params": [
        {
          "name": "textAlign",
          "types": [
            "string",
            "undefined"
          ]
        }
      ],
      "provides": [
        "ol.style.Text"
      ]
    },
    {
      "name": "ol.style.Text#setTextBaseline",
      "kind": "function",
      "description": "Set the text baseline.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/style/textstyle.js",
      "params": [
        {
          "name": "textBaseline",
          "types": [
            "string",
            "undefined"
          ]
        }
      ],
      "provides": [
        "ol.style.Text"
      ]
    },
    {
      "name": "ol.Sphere",
      "kind": "class",
      "description": "Class to create objects that can be used with {@link\nol.geom.Polygon.circular}.\n\nFor example to create a sphere whose radius is equal to the semi-major\naxis of the WGS84 ellipsoid:\n\n```js\nvar wgs84Sphere= new ol.Sphere(6378137);\n```",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/sphere/sphere.js",
      "params": [
        {
          "name": "radius",
          "types": [
            "number"
          ]
        }
      ],
      "provides": [
        "ol.Sphere"
      ]
    },
    {
      "name": "ol.source.BingMaps",
      "kind": "class",
      "description": "Layer source for Bing Maps tile data.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/bingmapssource.js",
      "extends": "ol.source.TileImage",
      "params": [
        {
          "name": "options",
          "types": [
            "olx.source.BingMapsOptions"
          ]
        }
      ],
      "provides": [
        "ol.source.BingMaps"
      ]
    },
    {
      "name": "ol.source.BingMaps.TOS_ATTRIBUTION",
      "kind": "constant",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/bingmapssource.js",
      "types": [
        "ol.Attribution"
      ],
      "provides": [
        "ol.source.BingMaps"
      ]
    },
    {
      "name": "ol.source.Cluster",
      "kind": "class",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/clustersource.js",
      "extends": "ol.source.Vector",
      "params": [
        {
          "name": "options",
          "types": [
            "olx.source.ClusterOptions"
          ]
        }
      ],
      "provides": [
        "ol.source.Cluster"
      ]
    },
    {
      "name": "ol.source.FormatVector#readFeatures",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/formatvectorsource.js",
      "params": [
        {
          "name": "source",
          "types": [
            "ArrayBuffer",
            "Document",
            "Node",
            "Object",
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "Array.<ol.Feature>"
        ]
      },
      "provides": [
        "ol.source.FormatVector"
      ]
    },
    {
      "name": "ol.source.GeoJSON",
      "kind": "class",
      "description": "Static vector source in GeoJSON format",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/geojsonsource.js",
      "extends": "ol.source.StaticVector",
      "params": [
        {
          "name": "opt_options",
          "types": [
            "olx.source.GeoJSONOptions"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.source.GeoJSON"
      ]
    },
    {
      "name": "ol.source.GPX",
      "kind": "class",
      "description": "Static vector source in GPX format",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/gpxsource.js",
      "extends": "ol.source.StaticVector",
      "params": [
        {
          "name": "opt_options",
          "types": [
            "olx.source.GPXOptions"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.source.GPX"
      ]
    },
    {
      "name": "ol.source.IGC",
      "kind": "class",
      "description": "Static vector source in IGC format",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/igcsource.js",
      "extends": "ol.source.StaticVector",
      "params": [
        {
          "name": "opt_options",
          "types": [
            "olx.source.IGCOptions"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.source.IGC"
      ]
    },
    {
      "name": "ol.source.ImageCanvas",
      "kind": "class",
      "description": "Base class for image sources where a canvas element is the image.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/imagecanvassource.js",
      "extends": "ol.source.Image",
      "params": [
        {
          "name": "options",
          "types": [
            "olx.source.ImageCanvasOptions"
          ]
        }
      ],
      "provides": [
        "ol.source.ImageCanvas"
      ]
    },
    {
      "name": "ol.source.ImageMapGuide",
      "kind": "class",
      "description": "Source for images from Mapguide servers",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/imagemapguidesource.js",
      "extends": "ol.source.Image",
      "params": [
        {
          "name": "options",
          "types": [
            "olx.source.ImageMapGuideOptions"
          ]
        }
      ],
      "provides": [
        "ol.source.ImageMapGuide"
      ]
    },
    {
      "name": "ol.source.ImageMapGuide#getParams",
      "kind": "function",
      "description": "Get the user-provided params, i.e. those passed to the constructor through\nthe \"params\" option, and possibly updated using the updateParams method.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/imagemapguidesource.js",
      "returns": {
        "types": [
          "Object"
        ]
      },
      "provides": [
        "ol.source.ImageMapGuide"
      ]
    },
    {
      "name": "ol.source.ImageMapGuide#getImageLoadFunction",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/imagemapguidesource.js",
      "returns": {
        "types": [
          "ol.ImageLoadFunctionType"
        ]
      },
      "provides": [
        "ol.source.ImageMapGuide"
      ]
    },
    {
      "name": "ol.source.ImageMapGuide#updateParams",
      "kind": "function",
      "description": "Update the user-provided params.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/imagemapguidesource.js",
      "params": [
        {
          "name": "params",
          "types": [
            "Object"
          ]
        }
      ],
      "provides": [
        "ol.source.ImageMapGuide"
      ]
    },
    {
      "name": "ol.source.ImageMapGuide#setImageLoadFunction",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/imagemapguidesource.js",
      "params": [
        {
          "name": "imageLoadFunction",
          "types": [
            "ol.ImageLoadFunctionType"
          ]
        }
      ],
      "provides": [
        "ol.source.ImageMapGuide"
      ]
    },
    {
      "name": "ol.source.Image",
      "kind": "class",
      "description": "Abstract base class; normally only used for creating subclasses and not\ninstantiated in apps.\nBase class for sources providing a single image.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/imagesource.js",
      "extends": "ol.source.Source",
      "params": [
        {
          "name": "options",
          "types": [
            "ol.source.ImageOptions"
          ]
        }
      ],
      "provides": [
        "ol.source.Image"
      ]
    },
    {
      "name": "ol.source.ImageStatic",
      "kind": "class",
      "description": "A layer source for displaying a single, static image.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/imagestaticsource.js",
      "extends": "ol.source.Image",
      "params": [
        {
          "name": "options",
          "types": [
            "olx.source.ImageStaticOptions"
          ]
        }
      ],
      "provides": [
        "ol.source.ImageStatic"
      ]
    },
    {
      "name": "ol.source.ImageVector",
      "kind": "class",
      "description": "An image source whose images are canvas elements into which vector features\nread from a vector source (`ol.source.Vector`) are drawn. An\n`ol.source.ImageVector` object is to be used as the `source` of an image\nlayer (`ol.layer.Image`). Image layers are rotated, scaled, and translated,\nas opposed to being re-rendered, during animations and interactions. So, like\nany other image layer, an image layer configured with an\n`ol.source.ImageVector` will exhibit this behaviour. This is in contrast to a\nvector layer, where vector features are re-drawn during animations and\ninteractions.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/imagevectorsource.js",
      "extends": "ol.source.ImageCanvas",
      "params": [
        {
          "name": "options",
          "types": [
            "olx.source.ImageVectorOptions"
          ]
        }
      ],
      "provides": [
        "ol.source.ImageVector"
      ]
    },
    {
      "name": "ol.source.ImageVector#getSource",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/imagevectorsource.js",
      "returns": {
        "types": [
          "ol.source.Vector"
        ]
      },
      "provides": [
        "ol.source.ImageVector"
      ]
    },
    {
      "name": "ol.source.ImageVector#getStyle",
      "kind": "function",
      "description": "Get the style for features.  This returns whatever was passed to the `style`\noption at construction or to the `setStyle` method.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/imagevectorsource.js",
      "returns": {
        "types": [
          "ol.style.Style",
          "Array.<ol.style.Style>",
          "ol.style.StyleFunction"
        ]
      },
      "provides": [
        "ol.source.ImageVector"
      ]
    },
    {
      "name": "ol.source.ImageVector#getStyleFunction",
      "kind": "function",
      "description": "Get the style function.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/imagevectorsource.js",
      "returns": {
        "types": [
          "ol.style.StyleFunction",
          "undefined"
        ]
      },
      "provides": [
        "ol.source.ImageVector"
      ]
    },
    {
      "name": "ol.source.ImageVector#setStyle",
      "kind": "function",
      "description": "Set the style for features.  This can be a single style object, an array\nof styles, or a function that takes a feature and resolution and returns\nan array of styles. If it is `undefined` the default style is used. If\nit is `null` the layer has no style (a `null` style), so only features\nthat have their own styles will be rendered in the layer. See\n{@link ol.style} for information on the default style.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/imagevectorsource.js",
      "params": [
        {
          "name": "style",
          "types": [
            "ol.style.Style",
            "Array.<ol.style.Style>",
            "ol.style.StyleFunction",
            "undefined"
          ]
        }
      ],
      "provides": [
        "ol.source.ImageVector"
      ]
    },
    {
      "name": "ol.source.ImageWMS",
      "kind": "class",
      "description": "Source for WMS servers providing single, untiled images.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/imagewmssource.js",
      "extends": "ol.source.Image",
      "params": [
        {
          "name": "opt_options",
          "types": [
            "olx.source.ImageWMSOptions"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.source.ImageWMS"
      ]
    },
    {
      "name": "ol.source.ImageWMS#getGetFeatureInfoUrl",
      "kind": "function",
      "description": "Return the GetFeatureInfo URL for the passed coordinate, resolution, and\nprojection. Return `undefined` if the GetFeatureInfo URL cannot be\nconstructed.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/imagewmssource.js",
      "params": [
        {
          "name": "coordinate",
          "types": [
            "ol.Coordinate"
          ]
        },
        {
          "name": "resolution",
          "types": [
            "number"
          ]
        },
        {
          "name": "projection",
          "types": [
            "ol.proj.ProjectionLike"
          ]
        },
        {
          "name": "params",
          "types": [
            "Object"
          ],
          "nullable": false
        }
      ],
      "returns": {
        "types": [
          "string",
          "undefined"
        ]
      },
      "provides": [
        "ol.source.ImageWMS"
      ]
    },
    {
      "name": "ol.source.ImageWMS#getParams",
      "kind": "function",
      "description": "Get the user-provided params, i.e. those passed to the constructor through\nthe \"params\" option, and possibly updated using the updateParams method.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/imagewmssource.js",
      "returns": {
        "types": [
          "Object"
        ]
      },
      "provides": [
        "ol.source.ImageWMS"
      ]
    },
    {
      "name": "ol.source.ImageWMS#getImageLoadFunction",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/imagewmssource.js",
      "returns": {
        "types": [
          "ol.ImageLoadFunctionType"
        ]
      },
      "provides": [
        "ol.source.ImageWMS"
      ]
    },
    {
      "name": "ol.source.ImageWMS#getUrl",
      "kind": "function",
      "description": "Return the URL used for this WMS source.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/imagewmssource.js",
      "returns": {
        "types": [
          "string",
          "undefined"
        ]
      },
      "provides": [
        "ol.source.ImageWMS"
      ]
    },
    {
      "name": "ol.source.ImageWMS#setImageLoadFunction",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/imagewmssource.js",
      "params": [
        {
          "name": "imageLoadFunction",
          "types": [
            "ol.ImageLoadFunctionType"
          ]
        }
      ],
      "provides": [
        "ol.source.ImageWMS"
      ]
    },
    {
      "name": "ol.source.ImageWMS#setUrl",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/imagewmssource.js",
      "params": [
        {
          "name": "url",
          "types": [
            "string",
            "undefined"
          ]
        }
      ],
      "provides": [
        "ol.source.ImageWMS"
      ]
    },
    {
      "name": "ol.source.ImageWMS#updateParams",
      "kind": "function",
      "description": "Update the user-provided params.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/imagewmssource.js",
      "params": [
        {
          "name": "params",
          "types": [
            "Object"
          ]
        }
      ],
      "provides": [
        "ol.source.ImageWMS"
      ]
    },
    {
      "name": "ol.source.KML",
      "kind": "class",
      "description": "Static vector source in KML format",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/kmlsource.js",
      "extends": "ol.source.StaticVector",
      "params": [
        {
          "name": "opt_options",
          "types": [
            "olx.source.KMLOptions"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.source.KML"
      ]
    },
    {
      "name": "ol.source.MapQuest",
      "kind": "class",
      "description": "Layer source for the MapQuest tile server.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/mapquestsource.js",
      "extends": "ol.source.XYZ",
      "params": [
        {
          "name": "opt_options",
          "types": [
            "olx.source.MapQuestOptions"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.source.MapQuest"
      ]
    },
    {
      "name": "ol.source.OSM",
      "kind": "class",
      "description": "Layer source for the OpenStreetMap tile server.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/osmsource.js",
      "extends": "ol.source.XYZ",
      "params": [
        {
          "name": "opt_options",
          "types": [
            "olx.source.OSMOptions"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.source.OSM"
      ]
    },
    {
      "name": "ol.source.OSM.ATTRIBUTION",
      "kind": "constant",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/osmsource.js",
      "types": [
        "ol.Attribution"
      ],
      "provides": [
        "ol.source.OSM"
      ]
    },
    {
      "name": "ol.source.OSMXML",
      "kind": "class",
      "description": "Static vector source in OSMXML format",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/osmxmlsource.js",
      "extends": "ol.source.StaticVector",
      "params": [
        {
          "name": "opt_options",
          "types": [
            "olx.source.OSMXMLOptions"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.source.OSMXML"
      ]
    },
    {
      "name": "ol.source.ServerVector",
      "kind": "class",
      "description": "A vector source in one of the supported formats, using a custom function to\nread in the data from a remote server.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/servervectorsource.js",
      "extends": "ol.source.Vector",
      "params": [
        {
          "name": "options",
          "types": [
            "olx.source.ServerVectorOptions"
          ]
        }
      ],
      "provides": [
        "ol.source.ServerVector"
      ]
    },
    {
      "name": "ol.source.ServerVector#clear",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/servervectorsource.js",
      "provides": [
        "ol.source.ServerVector"
      ]
    },
    {
      "name": "ol.source.ServerVector#readFeatures",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/servervectorsource.js",
      "params": [
        {
          "name": "source",
          "types": [
            "ArrayBuffer",
            "Document",
            "Node",
            "Object",
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "Array.<ol.Feature>"
        ]
      },
      "provides": [
        "ol.source.ServerVector"
      ]
    },
    {
      "name": "ol.source.Source",
      "kind": "class",
      "description": "Abstract base class; normally only used for creating subclasses and not\ninstantiated in apps.\nBase class for {@link ol.layer.Layer} sources.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/source.js",
      "extends": "ol.Observable",
      "params": [
        {
          "name": "options",
          "types": [
            "ol.source.SourceOptions"
          ]
        }
      ],
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.Source#getAttributions",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/source.js",
      "returns": {
        "types": [
          "Array.<ol.Attribution>"
        ]
      },
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.Source#getLogo",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/source.js",
      "returns": {
        "types": [
          "string",
          "olx.LogoOptions",
          "undefined"
        ]
      },
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.Source#getProjection",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/source.js",
      "returns": {
        "types": [
          "ol.proj.Projection"
        ]
      },
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.Source#getState",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/source.js",
      "returns": {
        "types": [
          "ol.source.State"
        ]
      },
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.Stamen",
      "kind": "class",
      "description": "Layer source for the Stamen tile server.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/stamensource.js",
      "extends": "ol.source.XYZ",
      "params": [
        {
          "name": "options",
          "types": [
            "olx.source.StamenOptions"
          ]
        }
      ],
      "provides": [
        "ol.source.Stamen"
      ]
    },
    {
      "name": "ol.source.StaticVector",
      "kind": "class",
      "description": "A vector source that uses one of the supported formats to read the data from\na file or other static source.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/staticvectorsource.js",
      "extends": "ol.source.Vector",
      "params": [
        {
          "name": "options",
          "types": [
            "olx.source.StaticVectorOptions"
          ]
        }
      ],
      "provides": [
        "ol.source.StaticVector"
      ]
    },
    {
      "name": "ol.source.TileDebug",
      "kind": "class",
      "description": "A pseudo tile source, which does not fetch tiles from a server, but renders\na grid outline for the tile grid/projection along with the coordinates for\neach tile. See examples/canvas-tiles for an example.\n\nUses Canvas context2d, so requires Canvas support.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/tiledebugsource.js",
      "extends": "ol.source.Tile",
      "params": [
        {
          "name": "options",
          "types": [
            "olx.source.TileDebugOptions"
          ]
        }
      ],
      "provides": [
        "ol.source.TileDebug"
      ]
    },
    {
      "name": "ol.source.TileImage",
      "kind": "class",
      "description": "Base class for sources providing images divided into a tile grid.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/tileimagesource.js",
      "extends": "ol.source.Tile",
      "params": [
        {
          "name": "options",
          "types": [
            "olx.source.TileImageOptions"
          ]
        }
      ],
      "provides": [
        "ol.source.TileImage"
      ]
    },
    {
      "name": "ol.source.TileImage#getTileLoadFunction",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/tileimagesource.js",
      "returns": {
        "types": [
          "ol.TileLoadFunctionType"
        ]
      },
      "provides": [
        "ol.source.TileImage"
      ]
    },
    {
      "name": "ol.source.TileImage#getTileUrlFunction",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/tileimagesource.js",
      "returns": {
        "types": [
          "ol.TileUrlFunctionType"
        ]
      },
      "provides": [
        "ol.source.TileImage"
      ]
    },
    {
      "name": "ol.source.TileImage#setTileLoadFunction",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/tileimagesource.js",
      "params": [
        {
          "name": "tileLoadFunction",
          "types": [
            "ol.TileLoadFunctionType"
          ]
        }
      ],
      "provides": [
        "ol.source.TileImage"
      ]
    },
    {
      "name": "ol.source.TileImage#setTileUrlFunction",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/tileimagesource.js",
      "params": [
        {
          "name": "tileUrlFunction",
          "types": [
            "ol.TileUrlFunctionType"
          ]
        }
      ],
      "provides": [
        "ol.source.TileImage"
      ]
    },
    {
      "name": "ol.source.TileJSON",
      "kind": "class",
      "description": "Layer source for tile data in TileJSON format.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/tilejsonsource.js",
      "extends": "ol.source.TileImage",
      "params": [
        {
          "name": "options",
          "types": [
            "olx.source.TileJSONOptions"
          ]
        }
      ],
      "provides": [
        "ol.source.TileJSON",
        "ol.tilejson"
      ]
    },
    {
      "name": "ol.source.Tile",
      "kind": "class",
      "description": "Abstract base class; normally only used for creating subclasses and not\ninstantiated in apps.\nBase class for sources providing images divided into a tile grid.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/tilesource.js",
      "extends": "ol.source.Source",
      "params": [
        {
          "name": "options",
          "types": [
            "ol.source.TileOptions"
          ]
        }
      ],
      "provides": [
        "ol.source.Tile",
        "ol.source.TileOptions"
      ]
    },
    {
      "name": "ol.source.Tile#getTileGrid",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/tilesource.js",
      "returns": {
        "types": [
          "ol.tilegrid.TileGrid"
        ]
      },
      "provides": [
        "ol.source.Tile",
        "ol.source.TileOptions"
      ]
    },
    {
      "name": "ol.source.TileUTFGrid",
      "kind": "class",
      "description": "Layer source for UTFGrid interaction data loaded from TileJSON format.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/tileutfgridsource.js",
      "extends": "ol.source.Tile",
      "params": [
        {
          "name": "options",
          "types": [
            "olx.source.TileUTFGridOptions"
          ]
        }
      ],
      "provides": [
        "ol.source.TileUTFGrid"
      ]
    },
    {
      "name": "ol.source.TileUTFGrid#getTemplate",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/tileutfgridsource.js",
      "returns": {
        "types": [
          "string",
          "undefined"
        ]
      },
      "provides": [
        "ol.source.TileUTFGrid"
      ]
    },
    {
      "name": "ol.source.TileUTFGrid#forDataAtCoordinateAndResolution",
      "kind": "function",
      "description": "Calls the callback (synchronously by default) with the available data\nfor given coordinate and resolution (or `null` if not yet loaded or\nin case of an error).",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/tileutfgridsource.js",
      "params": [
        {
          "name": "coordinate",
          "types": [
            "ol.Coordinate"
          ]
        },
        {
          "name": "resolution",
          "types": [
            "number"
          ]
        },
        {
          "name": "callback",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "T"
          ],
          "optional": true
        },
        {
          "name": "opt_request",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "template": "T",
      "provides": [
        "ol.source.TileUTFGrid"
      ]
    },
    {
      "name": "ol.source.TileVector",
      "kind": "class",
      "description": "A vector source in one of the supported formats, where the data is divided\ninto tiles in a fixed grid pattern.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/tilevectorsource.js",
      "extends": "ol.source.Vector",
      "params": [
        {
          "name": "options",
          "types": [
            "olx.source.TileVectorOptions"
          ]
        }
      ],
      "provides": [
        "ol.source.TileVector"
      ]
    },
    {
      "name": "ol.source.TileVector#getFeatures",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/tilevectorsource.js",
      "provides": [
        "ol.source.TileVector"
      ]
    },
    {
      "name": "ol.source.TileVector#getFeaturesAtCoordinateAndResolution",
      "kind": "function",
      "description": "Get all features whose geometry intersects the provided coordinate for the\nprovided resolution.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/tilevectorsource.js",
      "params": [
        {
          "name": "coordinate",
          "types": [
            "ol.Coordinate"
          ]
        },
        {
          "name": "resolution",
          "types": [
            "number"
          ]
        }
      ],
      "returns": {
        "types": [
          "Array.<ol.Feature>"
        ]
      },
      "provides": [
        "ol.source.TileVector"
      ]
    },
    {
      "name": "ol.source.TileWMS",
      "kind": "class",
      "description": "Layer source for tile data from WMS servers.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/tilewmssource.js",
      "extends": "ol.source.TileImage",
      "params": [
        {
          "name": "opt_options",
          "types": [
            "olx.source.TileWMSOptions"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.source.TileWMS"
      ]
    },
    {
      "name": "ol.source.TileWMS#getGetFeatureInfoUrl",
      "kind": "function",
      "description": "Return the GetFeatureInfo URL for the passed coordinate, resolution, and\nprojection. Return `undefined` if the GetFeatureInfo URL cannot be\nconstructed.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/tilewmssource.js",
      "params": [
        {
          "name": "coordinate",
          "types": [
            "ol.Coordinate"
          ]
        },
        {
          "name": "resolution",
          "types": [
            "number"
          ]
        },
        {
          "name": "projection",
          "types": [
            "ol.proj.ProjectionLike"
          ]
        },
        {
          "name": "params",
          "types": [
            "Object"
          ],
          "nullable": false
        }
      ],
      "returns": {
        "types": [
          "string",
          "undefined"
        ]
      },
      "provides": [
        "ol.source.TileWMS"
      ]
    },
    {
      "name": "ol.source.TileWMS#getParams",
      "kind": "function",
      "description": "Get the user-provided params, i.e. those passed to the constructor through\nthe \"params\" option, and possibly updated using the updateParams method.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/tilewmssource.js",
      "returns": {
        "types": [
          "Object"
        ]
      },
      "provides": [
        "ol.source.TileWMS"
      ]
    },
    {
      "name": "ol.source.TileWMS#getUrls",
      "kind": "function",
      "description": "Return the URLs used for this WMS source.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/tilewmssource.js",
      "returns": {
        "types": [
          "Array.<string>"
        ],
        "nullable": false
      },
      "provides": [
        "ol.source.TileWMS"
      ]
    },
    {
      "name": "ol.source.TileWMS#setUrl",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/tilewmssource.js",
      "params": [
        {
          "name": "url",
          "types": [
            "string",
            "undefined"
          ]
        }
      ],
      "provides": [
        "ol.source.TileWMS"
      ]
    },
    {
      "name": "ol.source.TileWMS#setUrls",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/tilewmssource.js",
      "params": [
        {
          "name": "urls",
          "types": [
            "Array.<string>",
            "undefined"
          ]
        }
      ],
      "provides": [
        "ol.source.TileWMS"
      ]
    },
    {
      "name": "ol.source.TileWMS#updateParams",
      "kind": "function",
      "description": "Update the user-provided params.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/tilewmssource.js",
      "params": [
        {
          "name": "params",
          "types": [
            "Object"
          ]
        }
      ],
      "provides": [
        "ol.source.TileWMS"
      ]
    },
    {
      "name": "ol.source.TopoJSON",
      "kind": "class",
      "description": "Static vector source in TopoJSON format",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/topojsonsource.js",
      "extends": "ol.source.StaticVector",
      "params": [
        {
          "name": "opt_options",
          "types": [
            "olx.source.TopoJSONOptions"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.source.TopoJSON"
      ]
    },
    {
      "name": "ol.source.Vector",
      "kind": "class",
      "description": "Provides a source of features for vector layers.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/vectorsource.js",
      "extends": "ol.source.Source",
      "params": [
        {
          "name": "opt_options",
          "types": [
            "olx.source.VectorOptions"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.Vector#addFeature",
      "kind": "function",
      "description": "Add a single feature to the source.  If you want to add a batch of features\nat once, call {@link ol.source.Vector#addFeatures source.addFeatures()}\ninstead.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/vectorsource.js",
      "params": [
        {
          "name": "feature",
          "types": [
            "ol.Feature"
          ]
        }
      ],
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.Vector#addFeatures",
      "kind": "function",
      "description": "Add a batch of features to the source.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/vectorsource.js",
      "params": [
        {
          "name": "features",
          "types": [
            "Array.<ol.Feature>"
          ]
        }
      ],
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.Vector#clear",
      "kind": "function",
      "description": "Remove all features from the source.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/vectorsource.js",
      "params": [
        {
          "name": "opt_fast",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.Vector#forEachFeature",
      "kind": "function",
      "description": "Iterate through all features on the source, calling the provided callback\nwith each one.  If the callback returns any \"truthy\" value, iteration will\nstop and the function will return the same value.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/vectorsource.js",
      "params": [
        {
          "name": "callback",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "T"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "S",
          "undefined"
        ]
      },
      "template": "T,S",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.Vector#forEachFeatureInExtent",
      "kind": "function",
      "description": "Iterate through all features whose bounding box intersects the provided\nextent (note that the feature's geometry may not intersect the extent),\ncalling the callback with each feature.  If the callback returns a \"truthy\"\nvalue, iteration will stop and the function will return the same value.\n\nIf you are interested in features whose geometry intersects an extent, call\nthe {@link ol.source.Vector#forEachFeatureIntersectingExtent\nsource.forEachFeatureIntersectingExtent()} method instead.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/vectorsource.js",
      "params": [
        {
          "name": "extent",
          "types": [
            "ol.Extent"
          ]
        },
        {
          "name": "callback",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "T"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "S",
          "undefined"
        ]
      },
      "template": "T,S",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.Vector#forEachFeatureIntersectingExtent",
      "kind": "function",
      "description": "Iterate through all features whose geometry intersects the provided extent,\ncalling the callback with each feature.  If the callback returns a \"truthy\"\nvalue, iteration will stop and the function will return the same value.\n\nIf you only want to test for bounding box intersection, call the\n{@link ol.source.Vector#forEachFeatureInExtent\nsource.forEachFeatureInExtent()} method instead.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/vectorsource.js",
      "params": [
        {
          "name": "extent",
          "types": [
            "ol.Extent"
          ]
        },
        {
          "name": "callback",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "T"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "S",
          "undefined"
        ]
      },
      "template": "T,S",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.Vector#getFeatures",
      "kind": "function",
      "description": "Get all features on the source.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/vectorsource.js",
      "returns": {
        "types": [
          "Array.<ol.Feature>"
        ]
      },
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.Vector#getFeaturesAtCoordinate",
      "kind": "function",
      "description": "Get all features whose geometry intersects the provided coordinate.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/vectorsource.js",
      "params": [
        {
          "name": "coordinate",
          "types": [
            "ol.Coordinate"
          ]
        }
      ],
      "returns": {
        "types": [
          "Array.<ol.Feature>"
        ]
      },
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.Vector#getClosestFeatureToCoordinate",
      "kind": "function",
      "description": "Get the closest feature to the provided coordinate.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/vectorsource.js",
      "params": [
        {
          "name": "coordinate",
          "types": [
            "ol.Coordinate"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.Feature"
        ]
      },
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.Vector#getExtent",
      "kind": "function",
      "description": "Get the extent of the features currently in the source.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/vectorsource.js",
      "returns": {
        "types": [
          "ol.Extent"
        ]
      },
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.Vector#getFeatureById",
      "kind": "function",
      "description": "Get a feature by its identifier (the value returned by feature.getId()).\nNote that the index treats string and numeric identifiers as the same.  So\n`source.getFeatureById(2)` will return a feature with id `'2'` or `2`.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/vectorsource.js",
      "params": [
        {
          "name": "id",
          "types": [
            "string",
            "number"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.Feature"
        ]
      },
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.Vector#removeFeature",
      "kind": "function",
      "description": "Remove a single feature from the source.  If you want to remove all features\nat once, use the {@link ol.source.Vector#clear source.clear()} method\ninstead.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/vectorsource.js",
      "params": [
        {
          "name": "feature",
          "types": [
            "ol.Feature"
          ]
        }
      ],
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.VectorEvent#feature",
      "kind": "member",
      "description": "The feature being added or removed.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/vectorsource.js",
      "types": [
        "ol.Feature",
        "undefined"
      ],
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.WMTS",
      "kind": "class",
      "description": "Layer source for tile data from WMTS servers.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/wmtssource.js",
      "extends": "ol.source.TileImage",
      "params": [
        {
          "name": "options",
          "types": [
            "olx.source.WMTSOptions"
          ]
        }
      ],
      "provides": [
        "ol.source.WMTS",
        "ol.source.WMTSRequestEncoding"
      ]
    },
    {
      "name": "ol.source.WMTS#getDimensions",
      "kind": "function",
      "description": "Get the dimensions, i.e. those passed to the constructor through the\n\"dimensions\" option, and possibly updated using the updateDimensions\nmethod.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/wmtssource.js",
      "returns": {
        "types": [
          "Object"
        ]
      },
      "provides": [
        "ol.source.WMTS",
        "ol.source.WMTSRequestEncoding"
      ]
    },
    {
      "name": "ol.source.WMTS#updateDimensions",
      "kind": "function",
      "description": "Update the dimensions.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/wmtssource.js",
      "params": [
        {
          "name": "dimensions",
          "types": [
            "Object"
          ]
        }
      ],
      "provides": [
        "ol.source.WMTS",
        "ol.source.WMTSRequestEncoding"
      ]
    },
    {
      "name": "ol.source.XYZ",
      "kind": "class",
      "description": "Layer source for tile data with URLs in a set XYZ format.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/xyzsource.js",
      "extends": "ol.source.TileImage",
      "params": [
        {
          "name": "options",
          "types": [
            "olx.source.XYZOptions"
          ]
        }
      ],
      "provides": [
        "ol.source.XYZ"
      ]
    },
    {
      "name": "ol.source.XYZ#setTileUrlFunction",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/xyzsource.js",
      "provides": [
        "ol.source.XYZ"
      ]
    },
    {
      "name": "ol.source.XYZ#setUrl",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/xyzsource.js",
      "params": [
        {
          "name": "url",
          "types": [
            "string"
          ]
        }
      ],
      "provides": [
        "ol.source.XYZ"
      ]
    },
    {
      "name": "ol.source.Zoomify",
      "kind": "class",
      "description": "Layer source for tile data in Zoomify format.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/zoomifysource.js",
      "extends": "ol.source.TileImage",
      "params": [
        {
          "name": "opt_options",
          "types": [
            "olx.source.ZoomifyOptions"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.source.Zoomify"
      ]
    },
    {
      "name": "ol.render.Event#vectorContext",
      "kind": "member",
      "description": "For canvas, this is an instance of {@link ol.render.canvas.Immediate}.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/render/renderevent.js",
      "types": [
        "ol.render.IVectorContext",
        "undefined"
      ],
      "provides": [
        "ol.render.Event",
        "ol.render.EventType"
      ]
    },
    {
      "name": "ol.render.Event#frameState",
      "kind": "member",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/render/renderevent.js",
      "types": [
        "olx.FrameState",
        "undefined"
      ],
      "provides": [
        "ol.render.Event",
        "ol.render.EventType"
      ]
    },
    {
      "name": "ol.render.Event#context",
      "kind": "member",
      "description": "Canvas context. Only available when a Canvas renderer is used, null\notherwise.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/render/renderevent.js",
      "types": [
        "CanvasRenderingContext2D",
        "null",
        "undefined"
      ],
      "provides": [
        "ol.render.Event",
        "ol.render.EventType"
      ]
    },
    {
      "name": "ol.render.Event#glContext",
      "kind": "member",
      "description": "WebGL context. Only available when a WebGL renderer is used, null\notherwise.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/render/renderevent.js",
      "types": [
        "ol.webgl.Context",
        "null",
        "undefined"
      ],
      "provides": [
        "ol.render.Event",
        "ol.render.EventType"
      ]
    },
    {
      "name": "ol.render.webgl.Immediate#drawAsync",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/render/webgl/webglimmediate.js",
      "params": [
        {
          "name": "zIndex",
          "types": [
            "number"
          ]
        },
        {
          "name": "callback",
          "types": [
            "Function"
          ]
        }
      ],
      "provides": [
        "ol.render.webgl.Immediate"
      ]
    },
    {
      "name": "ol.render.webgl.Immediate#drawCircleGeometry",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/render/webgl/webglimmediate.js",
      "provides": [
        "ol.render.webgl.Immediate"
      ]
    },
    {
      "name": "ol.render.webgl.Immediate#drawFeature",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/render/webgl/webglimmediate.js",
      "provides": [
        "ol.render.webgl.Immediate"
      ]
    },
    {
      "name": "ol.render.webgl.Immediate#drawGeometryCollectionGeometry",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/render/webgl/webglimmediate.js",
      "provides": [
        "ol.render.webgl.Immediate"
      ]
    },
    {
      "name": "ol.render.webgl.Immediate#drawPointGeometry",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/render/webgl/webglimmediate.js",
      "provides": [
        "ol.render.webgl.Immediate"
      ]
    },
    {
      "name": "ol.render.webgl.Immediate#drawLineStringGeometry",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/render/webgl/webglimmediate.js",
      "provides": [
        "ol.render.webgl.Immediate"
      ]
    },
    {
      "name": "ol.render.webgl.Immediate#drawMultiLineStringGeometry",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/render/webgl/webglimmediate.js",
      "provides": [
        "ol.render.webgl.Immediate"
      ]
    },
    {
      "name": "ol.render.webgl.Immediate#drawMultiPointGeometry",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/render/webgl/webglimmediate.js",
      "provides": [
        "ol.render.webgl.Immediate"
      ]
    },
    {
      "name": "ol.render.webgl.Immediate#drawMultiPolygonGeometry",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/render/webgl/webglimmediate.js",
      "provides": [
        "ol.render.webgl.Immediate"
      ]
    },
    {
      "name": "ol.render.webgl.Immediate#drawPolygonGeometry",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/render/webgl/webglimmediate.js",
      "provides": [
        "ol.render.webgl.Immediate"
      ]
    },
    {
      "name": "ol.render.webgl.Immediate#drawText",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/render/webgl/webglimmediate.js",
      "provides": [
        "ol.render.webgl.Immediate"
      ]
    },
    {
      "name": "ol.render.webgl.Immediate#setFillStrokeStyle",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/render/webgl/webglimmediate.js",
      "provides": [
        "ol.render.webgl.Immediate"
      ]
    },
    {
      "name": "ol.render.webgl.Immediate#setImageStyle",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/render/webgl/webglimmediate.js",
      "provides": [
        "ol.render.webgl.Immediate"
      ]
    },
    {
      "name": "ol.render.webgl.Immediate#setTextStyle",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/render/webgl/webglimmediate.js",
      "provides": [
        "ol.render.webgl.Immediate"
      ]
    },
    {
      "name": "ol.render.canvas.Immediate#drawAsync",
      "kind": "function",
      "description": "Register a function to be called for rendering at a given zIndex.  The\nfunction will be called asynchronously.  The callback will receive a\nreference to {@link ol.render.canvas.Immediate} context for drawing.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/render/canvas/canvasimmediate.js",
      "params": [
        {
          "name": "zIndex",
          "types": [
            "number"
          ]
        },
        {
          "name": "callback",
          "types": [
            "Function"
          ]
        }
      ],
      "provides": [
        "ol.render.canvas.Immediate"
      ]
    },
    {
      "name": "ol.render.canvas.Immediate#drawCircleGeometry",
      "kind": "function",
      "description": "Render a circle geometry into the canvas.  Rendering is immediate and uses\nthe current fill and stroke styles.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/render/canvas/canvasimmediate.js",
      "params": [
        {
          "name": "circleGeometry",
          "types": [
            "ol.geom.Circle"
          ]
        },
        {
          "name": "feature",
          "types": [
            "ol.Feature"
          ]
        }
      ],
      "provides": [
        "ol.render.canvas.Immediate"
      ]
    },
    {
      "name": "ol.render.canvas.Immediate#drawFeature",
      "kind": "function",
      "description": "Render a feature into the canvas.  In order to respect the zIndex of the\nstyle this method draws asynchronously and thus *after* calls to\ndrawXxxxGeometry have been finished, effectively drawing the feature\n*on top* of everything else.  You probably should be using\n{@link ol.FeatureOverlay} instead of calling this method directly.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/render/canvas/canvasimmediate.js",
      "params": [
        {
          "name": "feature",
          "types": [
            "ol.Feature"
          ]
        },
        {
          "name": "style",
          "types": [
            "ol.style.Style"
          ]
        }
      ],
      "provides": [
        "ol.render.canvas.Immediate"
      ]
    },
    {
      "name": "ol.render.canvas.Immediate#drawPointGeometry",
      "kind": "function",
      "description": "Render a Point geometry into the canvas.  Rendering is immediate and uses\nthe current style.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/render/canvas/canvasimmediate.js",
      "params": [
        {
          "name": "pointGeometry",
          "types": [
            "ol.geom.Point"
          ]
        },
        {
          "name": "feature",
          "types": [
            "ol.Feature"
          ]
        }
      ],
      "provides": [
        "ol.render.canvas.Immediate"
      ]
    },
    {
      "name": "ol.render.canvas.Immediate#drawMultiPointGeometry",
      "kind": "function",
      "description": "Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\nuses the current style.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/render/canvas/canvasimmediate.js",
      "params": [
        {
          "name": "multiPointGeometry",
          "types": [
            "ol.geom.MultiPoint"
          ]
        },
        {
          "name": "feature",
          "types": [
            "ol.Feature"
          ]
        }
      ],
      "provides": [
        "ol.render.canvas.Immediate"
      ]
    },
    {
      "name": "ol.render.canvas.Immediate#drawLineStringGeometry",
      "kind": "function",
      "description": "Render a LineString into the canvas.  Rendering is immediate and uses\nthe current style.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/render/canvas/canvasimmediate.js",
      "params": [
        {
          "name": "lineStringGeometry",
          "types": [
            "ol.geom.LineString"
          ]
        },
        {
          "name": "feature",
          "types": [
            "ol.Feature"
          ]
        }
      ],
      "provides": [
        "ol.render.canvas.Immediate"
      ]
    },
    {
      "name": "ol.render.canvas.Immediate#drawMultiLineStringGeometry",
      "kind": "function",
      "description": "Render a MultiLineString geometry into the canvas.  Rendering is immediate\nand uses the current style.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/render/canvas/canvasimmediate.js",
      "params": [
        {
          "name": "multiLineStringGeometry",
          "types": [
            "ol.geom.MultiLineString"
          ]
        },
        {
          "name": "feature",
          "types": [
            "ol.Feature"
          ]
        }
      ],
      "provides": [
        "ol.render.canvas.Immediate"
      ]
    },
    {
      "name": "ol.render.canvas.Immediate#drawPolygonGeometry",
      "kind": "function",
      "description": "Render a Polygon geometry into the canvas.  Rendering is immediate and uses\nthe current style.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/render/canvas/canvasimmediate.js",
      "params": [
        {
          "name": "polygonGeometry",
          "types": [
            "ol.geom.Polygon"
          ]
        },
        {
          "name": "feature",
          "types": [
            "ol.Feature"
          ]
        }
      ],
      "provides": [
        "ol.render.canvas.Immediate"
      ]
    },
    {
      "name": "ol.render.canvas.Immediate#drawMultiPolygonGeometry",
      "kind": "function",
      "description": "Render MultiPolygon geometry into the canvas.  Rendering is immediate and\nuses the current style.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/render/canvas/canvasimmediate.js",
      "params": [
        {
          "name": "multiPolygonGeometry",
          "types": [
            "ol.geom.MultiPolygon"
          ]
        },
        {
          "name": "feature",
          "types": [
            "ol.Feature"
          ]
        }
      ],
      "provides": [
        "ol.render.canvas.Immediate"
      ]
    },
    {
      "name": "ol.render.canvas.Immediate#setFillStrokeStyle",
      "kind": "function",
      "description": "Set the fill and stroke style for subsequent draw operations.  To clear\neither fill or stroke styles, pass null for the appropriate parameter.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/render/canvas/canvasimmediate.js",
      "params": [
        {
          "name": "fillStyle",
          "types": [
            "ol.style.Fill"
          ]
        },
        {
          "name": "strokeStyle",
          "types": [
            "ol.style.Stroke"
          ]
        }
      ],
      "provides": [
        "ol.render.canvas.Immediate"
      ]
    },
    {
      "name": "ol.render.canvas.Immediate#setImageStyle",
      "kind": "function",
      "description": "Set the image style for subsequent draw operations.  Pass null to remove\nthe image style.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/render/canvas/canvasimmediate.js",
      "params": [
        {
          "name": "imageStyle",
          "types": [
            "ol.style.Image"
          ]
        }
      ],
      "provides": [
        "ol.render.canvas.Immediate"
      ]
    },
    {
      "name": "ol.render.canvas.Immediate#setTextStyle",
      "kind": "function",
      "description": "Set the text style for subsequent draw operations.  Pass null to\nremove the text style.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/render/canvas/canvasimmediate.js",
      "params": [
        {
          "name": "textStyle",
          "types": [
            "ol.style.Text"
          ]
        }
      ],
      "provides": [
        "ol.render.canvas.Immediate"
      ]
    },
    {
      "name": "ol.proj.common.add",
      "kind": "function",
      "description": "FIXME empty description for jsdoc",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/proj/common.js",
      "provides": [
        "ol.proj.common"
      ]
    },
    {
      "name": "ol.proj.METERS_PER_UNIT",
      "kind": "constant",
      "description": "Meters per unit lookup table.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/proj/proj.js",
      "types": [
        "Object.<ol.proj.Units, number>"
      ],
      "provides": [
        "ol.proj",
        "ol.proj.METERS_PER_UNIT",
        "ol.proj.Projection",
        "ol.proj.ProjectionLike",
        "ol.proj.Units"
      ]
    },
    {
      "name": "ol.proj.Projection",
      "kind": "class",
      "description": "Projection definition class. One of these is created for each projection\nsupported in the application and stored in the {@link ol.proj} namespace.\nYou can use these in applications, but this is not required, as API params\nand options use {@link ol.proj.ProjectionLike} which means the simple string\ncode will suffice.\n\nYou can use {@link ol.proj.get} to retrieve the object for a particular\nprojection.\n\nThe library includes definitions for `EPSG:4326` and `EPSG:3857`, together\nwith the following aliases:\n* `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n    urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n    http://www.opengis.net/gml/srs/epsg.xml#4326,\n    urn:x-ogc:def:crs:EPSG:4326\n* `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n    urn:ogc:def:crs:EPSG:6.18:3:3857,\n    http://www.opengis.net/gml/srs/epsg.xml#3857\n\nIf you use proj4js, aliases can be added using `proj4.defs()`; see\n[documentation](https://github.com/proj4js/proj4js).",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/proj/proj.js",
      "params": [
        {
          "name": "options",
          "types": [
            "olx.ProjectionOptions"
          ]
        }
      ],
      "provides": [
        "ol.proj",
        "ol.proj.METERS_PER_UNIT",
        "ol.proj.Projection",
        "ol.proj.ProjectionLike",
        "ol.proj.Units"
      ]
    },
    {
      "name": "ol.proj.Projection#getCode",
      "kind": "function",
      "description": "Get the code for this projection, e.g. 'EPSG:4326'.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/proj/proj.js",
      "returns": {
        "types": [
          "string"
        ]
      },
      "provides": [
        "ol.proj",
        "ol.proj.METERS_PER_UNIT",
        "ol.proj.Projection",
        "ol.proj.ProjectionLike",
        "ol.proj.Units"
      ]
    },
    {
      "name": "ol.proj.Projection#getExtent",
      "kind": "function",
      "description": "Get the validity extent for this projection.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/proj/proj.js",
      "returns": {
        "types": [
          "ol.Extent"
        ]
      },
      "provides": [
        "ol.proj",
        "ol.proj.METERS_PER_UNIT",
        "ol.proj.Projection",
        "ol.proj.ProjectionLike",
        "ol.proj.Units"
      ]
    },
    {
      "name": "ol.proj.Projection#getUnits",
      "kind": "function",
      "description": "Get the units of this projection.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/proj/proj.js",
      "returns": {
        "types": [
          "ol.proj.Units"
        ]
      },
      "provides": [
        "ol.proj",
        "ol.proj.METERS_PER_UNIT",
        "ol.proj.Projection",
        "ol.proj.ProjectionLike",
        "ol.proj.Units"
      ]
    },
    {
      "name": "ol.proj.Projection#getMetersPerUnit",
      "kind": "function",
      "description": "Get the amount of meters per unit of this projection.  If the projection is\nnot configured with a units identifier, the return is `undefined`.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/proj/proj.js",
      "returns": {
        "types": [
          "number",
          "undefined"
        ]
      },
      "provides": [
        "ol.proj",
        "ol.proj.METERS_PER_UNIT",
        "ol.proj.Projection",
        "ol.proj.ProjectionLike",
        "ol.proj.Units"
      ]
    },
    {
      "name": "ol.proj.Projection#getWorldExtent",
      "kind": "function",
      "description": "Get the world extent for this projection.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/proj/proj.js",
      "returns": {
        "types": [
          "ol.Extent"
        ]
      },
      "provides": [
        "ol.proj",
        "ol.proj.METERS_PER_UNIT",
        "ol.proj.Projection",
        "ol.proj.ProjectionLike",
        "ol.proj.Units"
      ]
    },
    {
      "name": "ol.proj.Projection#isGlobal",
      "kind": "function",
      "description": "Is this projection a global projection which spans the whole world?",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/proj/proj.js",
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.proj",
        "ol.proj.METERS_PER_UNIT",
        "ol.proj.Projection",
        "ol.proj.ProjectionLike",
        "ol.proj.Units"
      ]
    },
    {
      "name": "ol.proj.Projection#setExtent",
      "kind": "function",
      "description": "Set the validity extent for this projection.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/proj/proj.js",
      "params": [
        {
          "name": "extent",
          "types": [
            "ol.Extent"
          ]
        }
      ],
      "provides": [
        "ol.proj",
        "ol.proj.METERS_PER_UNIT",
        "ol.proj.Projection",
        "ol.proj.ProjectionLike",
        "ol.proj.Units"
      ]
    },
    {
      "name": "ol.proj.Projection#setWorldExtent",
      "kind": "function",
      "description": "Set the world extent for this projection.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/proj/proj.js",
      "params": [
        {
          "name": "worldExtent",
          "types": [
            "ol.Extent"
          ]
        }
      ],
      "provides": [
        "ol.proj",
        "ol.proj.METERS_PER_UNIT",
        "ol.proj.Projection",
        "ol.proj.ProjectionLike",
        "ol.proj.Units"
      ]
    },
    {
      "name": "ol.proj.addEquivalentProjections",
      "kind": "function",
      "description": "Registers transformation functions that don't alter coordinates. Those allow\nto transform between projections with equal meaning.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/proj/proj.js",
      "params": [
        {
          "name": "projections",
          "types": [
            "Array.<ol.proj.Projection>"
          ]
        }
      ],
      "provides": [
        "ol.proj",
        "ol.proj.METERS_PER_UNIT",
        "ol.proj.Projection",
        "ol.proj.ProjectionLike",
        "ol.proj.Units"
      ]
    },
    {
      "name": "ol.proj.addProjection",
      "kind": "function",
      "description": "Add a Projection object to the list of supported projections.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/proj/proj.js",
      "params": [
        {
          "name": "projection",
          "types": [
            "ol.proj.Projection"
          ]
        }
      ],
      "provides": [
        "ol.proj",
        "ol.proj.METERS_PER_UNIT",
        "ol.proj.Projection",
        "ol.proj.ProjectionLike",
        "ol.proj.Units"
      ]
    },
    {
      "name": "ol.proj.addCoordinateTransforms",
      "kind": "function",
      "description": "Registers coordinate transform functions to convert coordinates between the\nsource projection and the destination projection.\nThe forward and inverse functions convert coordinate pairs; this function\nconverts these into the functions used internally which also handle\nextents and coordinate arrays.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/proj/proj.js",
      "params": [
        {
          "name": "source",
          "types": [
            "ol.proj.ProjectionLike"
          ]
        },
        {
          "name": "destination",
          "types": [
            "ol.proj.ProjectionLike"
          ]
        },
        {
          "name": "forward",
          "types": [
            "Function"
          ]
        },
        {
          "name": "inverse",
          "types": [
            "Function"
          ]
        }
      ],
      "provides": [
        "ol.proj",
        "ol.proj.METERS_PER_UNIT",
        "ol.proj.Projection",
        "ol.proj.ProjectionLike",
        "ol.proj.Units"
      ]
    },
    {
      "name": "ol.proj.get",
      "kind": "function",
      "description": "Fetches a Projection object for the code specified.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/proj/proj.js",
      "params": [
        {
          "name": "projectionLike",
          "types": [
            "ol.proj.ProjectionLike"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.proj.Projection"
        ]
      },
      "provides": [
        "ol.proj",
        "ol.proj.METERS_PER_UNIT",
        "ol.proj.Projection",
        "ol.proj.ProjectionLike",
        "ol.proj.Units"
      ]
    },
    {
      "name": "ol.proj.getTransform",
      "kind": "function",
      "description": "Given the projection-like objects, searches for a transformation\nfunction to convert a coordinates array from the source projection to the\ndestination projection.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/proj/proj.js",
      "params": [
        {
          "name": "source",
          "types": [
            "ol.proj.ProjectionLike"
          ]
        },
        {
          "name": "destination",
          "types": [
            "ol.proj.ProjectionLike"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.TransformFunction"
        ]
      },
      "provides": [
        "ol.proj",
        "ol.proj.METERS_PER_UNIT",
        "ol.proj.Projection",
        "ol.proj.ProjectionLike",
        "ol.proj.Units"
      ]
    },
    {
      "name": "ol.proj.transform",
      "kind": "function",
      "description": "Transforms a coordinate from source projection to destination projection.\nThis returns a new coordinate (and does not modify the original).\n\nSee {@link ol.proj.transformExtent} for extent transformation.\nSee the transform method of {@link ol.geom.Geometry} and its subclasses for\ngeometry transforms.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/proj/proj.js",
      "params": [
        {
          "name": "coordinate",
          "types": [
            "ol.Coordinate"
          ]
        },
        {
          "name": "source",
          "types": [
            "ol.proj.ProjectionLike"
          ]
        },
        {
          "name": "destination",
          "types": [
            "ol.proj.ProjectionLike"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.Coordinate"
        ]
      },
      "provides": [
        "ol.proj",
        "ol.proj.METERS_PER_UNIT",
        "ol.proj.Projection",
        "ol.proj.ProjectionLike",
        "ol.proj.Units"
      ]
    },
    {
      "name": "ol.proj.transformExtent",
      "kind": "function",
      "description": "Transforms an extent from source projection to destination projection.  This\nreturns a new extent (and does not modify the original).",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/proj/proj.js",
      "params": [
        {
          "name": "extent",
          "types": [
            "ol.Extent"
          ]
        },
        {
          "name": "source",
          "types": [
            "ol.proj.ProjectionLike"
          ]
        },
        {
          "name": "destination",
          "types": [
            "ol.proj.ProjectionLike"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.Extent"
        ]
      },
      "provides": [
        "ol.proj",
        "ol.proj.METERS_PER_UNIT",
        "ol.proj.Projection",
        "ol.proj.ProjectionLike",
        "ol.proj.Units"
      ]
    },
    {
      "name": "ol.layer.Heatmap",
      "kind": "class",
      "description": "Layer for rendering vector data as a heatmap.\nNote that any property set in the options is set as a {@link ol.Object}\nproperty on the layer object; for example, setting `title: 'My Title'` in the\noptions means that `title` is observable, and has get/set accessors.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/heatmaplayer.js",
      "extends": "ol.layer.Vector",
      "params": [
        {
          "name": "opt_options",
          "types": [
            "olx.layer.HeatmapOptions"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.layer.Heatmap"
      ]
    },
    {
      "name": "ol.layer.Heatmap#getGradient",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/heatmaplayer.js",
      "returns": {
        "types": [
          "Array.<string>"
        ]
      },
      "provides": [
        "ol.layer.Heatmap"
      ]
    },
    {
      "name": "ol.layer.Heatmap#setGradient",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/heatmaplayer.js",
      "params": [
        {
          "name": "colors",
          "types": [
            "Array.<string>"
          ]
        }
      ],
      "provides": [
        "ol.layer.Heatmap"
      ]
    },
    {
      "name": "ol.layer.Image",
      "kind": "class",
      "description": "Server-rendered images that are available for arbitrary extents and\nresolutions.\nNote that any property set in the options is set as a {@link ol.Object}\nproperty on the layer object; for example, setting `title: 'My Title'` in the\noptions means that `title` is observable, and has get/set accessors.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/imagelayer.js",
      "extends": "ol.layer.Layer",
      "params": [
        {
          "name": "opt_options",
          "types": [
            "olx.layer.ImageOptions"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.layer.Image"
      ]
    },
    {
      "name": "ol.layer.Image#getSource",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/imagelayer.js",
      "returns": {
        "types": [
          "ol.source.Image"
        ]
      },
      "provides": [
        "ol.layer.Image"
      ]
    },
    {
      "name": "ol.layer.Layer",
      "kind": "class",
      "description": "Abstract base class; normally only used for creating subclasses and not\ninstantiated in apps.\nA visual representation of raster or vector map data.\nLayers group together those properties that pertain to how the data is to be\ndisplayed, irrespective of the source of that data.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/layer.js",
      "extends": "ol.layer.Base",
      "params": [
        {
          "name": "options",
          "types": [
            "olx.layer.LayerOptions"
          ]
        }
      ],
      "provides": [
        "ol.layer.Layer"
      ]
    },
    {
      "name": "ol.layer.Layer#getSource",
      "kind": "function",
      "description": "Get the layer source.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/layer.js",
      "returns": {
        "types": [
          "ol.source.Source"
        ]
      },
      "provides": [
        "ol.layer.Layer"
      ]
    },
    {
      "name": "ol.layer.Layer#setSource",
      "kind": "function",
      "description": "Set the layer source.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/layer.js",
      "params": [
        {
          "name": "source",
          "types": [
            "ol.source.Source"
          ]
        }
      ],
      "provides": [
        "ol.layer.Layer"
      ]
    },
    {
      "name": "ol.layer.Base",
      "kind": "class",
      "description": "Abstract base class; normally only used for creating subclasses and not\ninstantiated in apps.\nNote that with `ol.layer.Base` and all its subclasses, any property set in\nthe options is set as a {@link ol.Object} property on the layer object, so\nis observable, and has get/set accessors.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/layerbase.js",
      "extends": "ol.Object",
      "params": [
        {
          "name": "options",
          "types": [
            "olx.layer.BaseOptions"
          ]
        }
      ],
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Base#getBrightness",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/layerbase.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Base#getContrast",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/layerbase.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Base#getHue",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/layerbase.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Base#getExtent",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/layerbase.js",
      "returns": {
        "types": [
          "ol.Extent",
          "undefined"
        ]
      },
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Base#getMaxResolution",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/layerbase.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Base#getMinResolution",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/layerbase.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Base#getOpacity",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/layerbase.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Base#getSaturation",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/layerbase.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Base#getVisible",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/layerbase.js",
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Base#setBrightness",
      "kind": "function",
      "description": "Adjust the layer brightness.  A value of -1 will render the layer completely\nblack.  A value of 0 will leave the brightness unchanged.  A value of 1 will\nrender the layer completely white.  Other values are linear multipliers on\nthe effect (values are clamped between -1 and 1).\n\nThe filter effects draft [1] says the brightness function is supposed to\nrender 0 black, 1 unchanged, and all other values as a linear multiplier.\n\nThe current WebKit implementation clamps values between -1 (black) and 1\n(white) [2].  There is a bug open to change the filter effect spec [3].\n\nTODO: revisit this if the spec is still unmodified before we release\n\n[1] https://dvcs.w3.org/hg/FXTF/raw-file/tip/filters/index.html\n[2] https://github.com/WebKit/webkit/commit/8f4765e569\n[3] https://www.w3.org/Bugs/Public/show_bug.cgi?id=15647",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/layerbase.js",
      "params": [
        {
          "name": "brightness",
          "types": [
            "number"
          ]
        }
      ],
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Base#setContrast",
      "kind": "function",
      "description": "Adjust the layer contrast.  A value of 0 will render the layer completely\ngrey.  A value of 1 will leave the contrast unchanged.  Other values are\nlinear multipliers on the effect (and values over 1 are permitted).",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/layerbase.js",
      "params": [
        {
          "name": "contrast",
          "types": [
            "number"
          ]
        }
      ],
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Base#setHue",
      "kind": "function",
      "description": "Apply a hue-rotation to the layer.  A value of 0 will leave the hue\nunchanged.  Other values are radians around the color circle.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/layerbase.js",
      "params": [
        {
          "name": "hue",
          "types": [
            "number"
          ]
        }
      ],
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Base#setExtent",
      "kind": "function",
      "description": "Set the extent at which the layer is visible.  If `undefined`, the layer\nwill be visible at all extents.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/layerbase.js",
      "params": [
        {
          "name": "extent",
          "types": [
            "ol.Extent",
            "undefined"
          ]
        }
      ],
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Base#setMaxResolution",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/layerbase.js",
      "params": [
        {
          "name": "maxResolution",
          "types": [
            "number"
          ]
        }
      ],
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Base#setMinResolution",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/layerbase.js",
      "params": [
        {
          "name": "minResolution",
          "types": [
            "number"
          ]
        }
      ],
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Base#setOpacity",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/layerbase.js",
      "params": [
        {
          "name": "opacity",
          "types": [
            "number"
          ]
        }
      ],
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Base#setSaturation",
      "kind": "function",
      "description": "Adjust layer saturation.  A value of 0 will render the layer completely\nunsaturated.  A value of 1 will leave the saturation unchanged.  Other\nvalues are linear multipliers of the effect (and values over 1 are\npermitted).",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/layerbase.js",
      "params": [
        {
          "name": "saturation",
          "types": [
            "number"
          ]
        }
      ],
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Base#setVisible",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/layerbase.js",
      "params": [
        {
          "name": "visible",
          "types": [
            "boolean"
          ]
        }
      ],
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Group",
      "kind": "class",
      "description": "A {@link ol.Collection} of layers that are handled together.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/layergroup.js",
      "extends": "ol.layer.Base",
      "params": [
        {
          "name": "opt_options",
          "types": [
            "olx.layer.GroupOptions"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.layer.Group"
      ]
    },
    {
      "name": "ol.layer.Group#getLayers",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/layergroup.js",
      "returns": {
        "types": [
          "ol.Collection.<ol.layer.Base>"
        ],
        "nullable": false
      },
      "provides": [
        "ol.layer.Group"
      ]
    },
    {
      "name": "ol.layer.Group#setLayers",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/layergroup.js",
      "params": [
        {
          "name": "layers",
          "types": [
            "ol.Collection.<ol.layer.Base>"
          ],
          "nullable": false
        }
      ],
      "provides": [
        "ol.layer.Group"
      ]
    },
    {
      "name": "ol.layer.Tile",
      "kind": "class",
      "description": "For layer sources that provide pre-rendered, tiled images in grids that are\norganized by zoom levels for specific resolutions.\nNote that any property set in the options is set as a {@link ol.Object}\nproperty on the layer object; for example, setting `title: 'My Title'` in the\noptions means that `title` is observable, and has get/set accessors.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/tilelayer.js",
      "extends": "ol.layer.Layer",
      "params": [
        {
          "name": "opt_options",
          "types": [
            "olx.layer.TileOptions"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.layer.Tile"
      ]
    },
    {
      "name": "ol.layer.Tile#getPreload",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/tilelayer.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.layer.Tile"
      ]
    },
    {
      "name": "ol.layer.Tile#getSource",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/tilelayer.js",
      "returns": {
        "types": [
          "ol.source.Tile"
        ]
      },
      "provides": [
        "ol.layer.Tile"
      ]
    },
    {
      "name": "ol.layer.Tile#setPreload",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/tilelayer.js",
      "params": [
        {
          "name": "preload",
          "types": [
            "number"
          ]
        }
      ],
      "provides": [
        "ol.layer.Tile"
      ]
    },
    {
      "name": "ol.layer.Tile#getUseInterimTilesOnError",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/tilelayer.js",
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.layer.Tile"
      ]
    },
    {
      "name": "ol.layer.Tile#setUseInterimTilesOnError",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/tilelayer.js",
      "params": [
        {
          "name": "useInterimTilesOnError",
          "types": [
            "boolean"
          ]
        }
      ],
      "provides": [
        "ol.layer.Tile"
      ]
    },
    {
      "name": "ol.layer.Vector",
      "kind": "class",
      "description": "Vector data that is rendered client-side.\nNote that any property set in the options is set as a {@link ol.Object}\nproperty on the layer object; for example, setting `title: 'My Title'` in the\noptions means that `title` is observable, and has get/set accessors.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/vectorlayer.js",
      "extends": "ol.layer.Layer",
      "params": [
        {
          "name": "opt_options",
          "types": [
            "olx.layer.VectorOptions"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.layer.Vector"
      ]
    },
    {
      "name": "ol.layer.Vector#getSource",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/vectorlayer.js",
      "returns": {
        "types": [
          "ol.source.Vector"
        ]
      },
      "provides": [
        "ol.layer.Vector"
      ]
    },
    {
      "name": "ol.layer.Vector#getStyle",
      "kind": "function",
      "description": "Get the style for features.  This returns whatever was passed to the `style`\noption at construction or to the `setStyle` method.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/vectorlayer.js",
      "returns": {
        "types": [
          "ol.style.Style",
          "Array.<ol.style.Style>",
          "ol.style.StyleFunction"
        ]
      },
      "provides": [
        "ol.layer.Vector"
      ]
    },
    {
      "name": "ol.layer.Vector#getStyleFunction",
      "kind": "function",
      "description": "Get the style function.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/vectorlayer.js",
      "returns": {
        "types": [
          "ol.style.StyleFunction",
          "undefined"
        ]
      },
      "provides": [
        "ol.layer.Vector"
      ]
    },
    {
      "name": "ol.layer.Vector#setStyle",
      "kind": "function",
      "description": "Set the style for features.  This can be a single style object, an array\nof styles, or a function that takes a feature and resolution and returns\nan array of styles. If it is `undefined` the default style is used. If\nit is `null` the layer has no style (a `null` style), so only features\nthat have their own styles will be rendered in the layer. See\n{@link ol.style} for information on the default style.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/vectorlayer.js",
      "params": [
        {
          "name": "style",
          "types": [
            "ol.style.Style",
            "Array.<ol.style.Style>",
            "ol.style.StyleFunction",
            "undefined"
          ]
        }
      ],
      "provides": [
        "ol.layer.Vector"
      ]
    },
    {
      "name": "ol.interaction.DoubleClickZoom",
      "kind": "class",
      "description": "Allows the user to zoom by double-clicking on the map.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/interaction/doubleclickzoominteraction.js",
      "extends": "ol.interaction.Interaction",
      "params": [
        {
          "name": "opt_options",
          "types": [
            "olx.interaction.DoubleClickZoomOptions"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.interaction.DoubleClickZoom"
      ]
    },
    {
      "name": "ol.interaction.DoubleClickZoom.handleEvent",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/interaction/doubleclickzoominteraction.js",
      "params": [
        {
          "name": "mapBrowserEvent",
          "types": [
            "ol.MapBrowserEvent"
          ]
        }
      ],
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.interaction.DoubleClickZoom"
      ]
    },
    {
      "name": "ol.interaction.DragAndDrop",
      "kind": "class",
      "description": "Handles input of vector data by drag and drop.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/interaction/draganddropinteraction.js",
      "extends": "ol.interaction.Interaction",
      "params": [
        {
          "name": "opt_options",
          "types": [
            "olx.interaction.DragAndDropOptions"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.interaction.DragAndDrop",
        "ol.interaction.DragAndDropEvent"
      ]
    },
    {
      "name": "ol.interaction.DragAndDrop.handleEvent",
      "kind": "member",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/interaction/draganddropinteraction.js",
      "params": [
        {
          "name": "mapBrowserEvent",
          "types": [
            "ol.MapBrowserEvent"
          ]
        }
      ],
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.interaction.DragAndDrop",
        "ol.interaction.DragAndDropEvent"
      ]
    },
    {
      "name": "ol.interaction.DragAndDropEvent#features",
      "kind": "member",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/interaction/draganddropinteraction.js",
      "types": [
        "Array.<ol.Feature>",
        "undefined"
      ],
      "provides": [
        "ol.interaction.DragAndDrop",
        "ol.interaction.DragAndDropEvent"
      ]
    },
    {
      "name": "ol.interaction.DragAndDropEvent#file",
      "kind": "member",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/interaction/draganddropinteraction.js",
      "types": [
        "File"
      ],
      "provides": [
        "ol.interaction.DragAndDrop",
        "ol.interaction.DragAndDropEvent"
      ]
    },
    {
      "name": "ol.interaction.DragAndDropEvent#projection",
      "kind": "member",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/interaction/draganddropinteraction.js",
      "types": [
        "ol.proj.Projection",
        "undefined"
      ],
      "provides": [
        "ol.interaction.DragAndDrop",
        "ol.interaction.DragAndDropEvent"
      ]
    },
    {
      "name": "ol.DragBoxEvent#coordinate",
      "kind": "constant",
      "description": "The coordinate of the drag event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/interaction/dragboxinteraction.js",
      "types": [
        "ol.Coordinate"
      ],
      "provides": [
        "ol.DragBoxEvent",
        "ol.interaction.DragBox"
      ]
    },
    {
      "name": "ol.interaction.DragBox",
      "kind": "class",
      "description": "Allows the user to draw a vector box by clicking and dragging on the map,\nnormally combined with an {@link ol.events.condition} that limits\nit to when the shift or other key is held down. This is used, for example,\nfor zooming to a specific area of the map\n(see {@link ol.interaction.DragZoom} and\n{@link ol.interaction.DragRotateAndZoom}).\n\nThis interaction is only supported for mouse devices.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/interaction/dragboxinteraction.js",
      "extends": "ol.interaction.Pointer",
      "params": [
        {
          "name": "opt_options",
          "types": [
            "olx.interaction.DragBoxOptions"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.DragBoxEvent",
        "ol.interaction.DragBox"
      ]
    },
    {
      "name": "ol.interaction.DragBox#getGeometry",
      "kind": "function",
      "description": "Returns geometry of last drawn box.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/interaction/dragboxinteraction.js",
      "returns": {
        "types": [
          "ol.geom.Polygon"
        ]
      },
      "provides": [
        "ol.DragBoxEvent",
        "ol.interaction.DragBox"
      ]
    },
    {
      "name": "ol.interaction.DragPan",
      "kind": "class",
      "description": "Allows the user to pan the map by dragging the map.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/interaction/dragpaninteraction.js",
      "extends": "ol.interaction.Pointer",
      "params": [
        {
          "name": "opt_options",
          "types": [
            "olx.interaction.DragPanOptions"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.interaction.DragPan"
      ]
    },
    {
      "name": "ol.interaction.DragRotateAndZoom",
      "kind": "class",
      "description": "Allows the user to zoom and rotate the map by clicking and dragging\non the map.  By default, this interaction is limited to when the shift\nkey is held down.\n\nThis interaction is only supported for mouse devices.\n\nAnd this interaction is not included in the default interactions.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/interaction/dragrotateandzoominteraction.js",
      "extends": "ol.interaction.Pointer",
      "params": [
        {
          "name": "opt_options",
          "types": [
            "olx.interaction.DragRotateAndZoomOptions"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.interaction.DragRotateAndZoom"
      ]
    },
    {
      "name": "ol.interaction.DragRotate",
      "kind": "class",
      "description": "Allows the user to rotate the map by clicking and dragging on the map,\nnormally combined with an {@link ol.events.condition} that limits\nit to when the alt and shift keys are held down.\n\nThis interaction is only supported for mouse devices.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/interaction/dragrotateinteraction.js",
      "extends": "ol.interaction.Pointer",
      "params": [
        {
          "name": "opt_options",
          "types": [
            "olx.interaction.DragRotateOptions"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.interaction.DragRotate"
      ]
    },
    {
      "name": "ol.interaction.DragZoom",
      "kind": "class",
      "description": "Allows the user to zoom the map by clicking and dragging on the map,\nnormally combined with an {@link ol.events.condition} that limits\nit to when a key, shift by default, is held down.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/interaction/dragzoominteraction.js",
      "extends": "ol.interaction.DragBox",
      "params": [
        {
          "name": "opt_options",
          "types": [
            "olx.interaction.DragZoomOptions"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.interaction.DragZoom"
      ]
    },
    {
      "name": "ol.DrawEvent#feature",
      "kind": "member",
      "description": "The feature being drawn.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/interaction/drawinteraction.js",
      "types": [
        "ol.Feature"
      ],
      "provides": [
        "ol.DrawEvent",
        "ol.interaction.Draw"
      ]
    },
    {
      "name": "ol.interaction.Draw",
      "kind": "class",
      "description": "Interaction that allows drawing geometries.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/interaction/drawinteraction.js",
      "extends": "ol.interaction.Pointer",
      "params": [
        {
          "name": "options",
          "types": [
            "olx.interaction.DrawOptions"
          ]
        }
      ],
      "provides": [
        "ol.DrawEvent",
        "ol.interaction.Draw"
      ]
    },
    {
      "name": "ol.interaction.Draw.handleEvent",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/interaction/drawinteraction.js",
      "params": [
        {
          "name": "mapBrowserEvent",
          "types": [
            "ol.MapBrowserEvent"
          ]
        }
      ],
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.DrawEvent",
        "ol.interaction.Draw"
      ]
    },
    {
      "name": "ol.interaction.Draw#finishDrawing",
      "kind": "function",
      "description": "Stop drawing and add the sketch feature to the target layer.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/interaction/drawinteraction.js",
      "provides": [
        "ol.DrawEvent",
        "ol.interaction.Draw"
      ]
    },
    {
      "name": "ol.interaction.Interaction",
      "kind": "class",
      "description": "Abstract base class; normally only used for creating subclasses and not\ninstantiated in apps.\nUser actions that change the state of the map. Some are similar to controls,\nbut are not associated with a DOM element.\nFor example, {@link ol.interaction.KeyboardZoom} is functionally the same as\n{@link ol.control.Zoom}, but triggered by a keyboard event not a button\nelement event.\nAlthough interactions do not have a DOM element, some of them do render\nvectors and so are visible on the screen.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/interaction/interaction.js",
      "extends": "ol.Object",
      "params": [
        {
          "name": "options",
          "types": [
            "olx.interaction.InteractionOptions"
          ]
        }
      ],
      "provides": [
        "ol.interaction.Interaction",
        "ol.interaction.InteractionProperty"
      ]
    },
    {
      "name": "ol.interaction.Interaction#getActive",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/interaction/interaction.js",
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.interaction.Interaction",
        "ol.interaction.InteractionProperty"
      ]
    },
    {
      "name": "ol.interaction.Interaction#setActive",
      "kind": "function",
      "description": "Activate or deactivate the interaction.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/interaction/interaction.js",
      "params": [
        {
          "name": "active",
          "types": [
            "boolean"
          ]
        }
      ],
      "provides": [
        "ol.interaction.Interaction",
        "ol.interaction.InteractionProperty"
      ]
    },
    {
      "name": "ol.interaction.defaults",
      "kind": "function",
      "description": "Set of interactions included in maps by default. Specific interactions can be\nexcluded by setting the appropriate option to false in the constructor\noptions, but the order of the interactions is fixed.  If you want to specify\na different order for interactions, you will need to create your own\n{@link ol.interaction.Interaction} instances and insert them into a\n{@link ol.Collection} in the order you want before creating your\n{@link ol.Map} instance. The default set of interactions, in sequence, is:\n* {@link ol.interaction.DragRotate}\n* {@link ol.interaction.DoubleClickZoom}\n* {@link ol.interaction.DragPan}\n* {@link ol.interaction.PinchRotate}\n* {@link ol.interaction.PinchZoom}\n* {@link ol.interaction.KeyboardPan}\n* {@link ol.interaction.KeyboardZoom}\n* {@link ol.interaction.MouseWheelZoom}\n* {@link ol.interaction.DragZoom}\n\nNote that DragZoom renders a box as a vector polygon, so this interaction\nshould be excluded if you want a build with no vector support.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/interaction/interactiondefaults.js",
      "params": [
        {
          "name": "opt_options",
          "types": [
            "olx.interaction.DefaultsOptions"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.Collection.<ol.interaction.Interaction>"
        ]
      },
      "provides": [
        "ol.interaction"
      ]
    },
    {
      "name": "ol.interaction.KeyboardPan",
      "kind": "class",
      "description": "Allows the user to pan the map using keyboard arrows.\nNote that, although this interaction is by default included in maps,\nthe keys can only be used when browser focus is on the element to which\nthe keyboard events are attached. By default, this is the map div,\nthough you can change this with the `keyboardEventTarget` in\n{@link ol.Map}. `document` never loses focus but, for any other element,\nfocus will have to be on, and returned to, this element if the keys are to\nfunction.\nSee also {@link ol.interaction.KeyboardZoom}.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/interaction/keyboardpaninteraction.js",
      "extends": "ol.interaction.Interaction",
      "params": [
        {
          "name": "opt_options",
          "types": [
            "olx.interaction.KeyboardPanOptions"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.interaction.KeyboardPan"
      ]
    },
    {
      "name": "ol.interaction.KeyboardPan.handleEvent",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/interaction/keyboardpaninteraction.js",
      "params": [
        {
          "name": "mapBrowserEvent",
          "types": [
            "ol.MapBrowserEvent"
          ]
        }
      ],
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.interaction.KeyboardPan"
      ]
    },
    {
      "name": "ol.interaction.KeyboardZoom",
      "kind": "class",
      "description": "Allows the user to zoom the map using keyboard + and -.\nNote that, although this interaction is by default included in maps,\nthe keys can only be used when browser focus is on the element to which\nthe keyboard events are attached. By default, this is the map div,\nthough you can change this with the `keyboardEventTarget` in\n{@link ol.Map}. `document` never loses focus but, for any other element,\nfocus will have to be on, and returned to, this element if the keys are to\nfunction.\nSee also {@link ol.interaction.KeyboardPan}.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/interaction/keyboardzoominteraction.js",
      "extends": "ol.interaction.Interaction",
      "params": [
        {
          "name": "opt_options",
          "types": [
            "olx.interaction.KeyboardZoomOptions"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.interaction.KeyboardZoom"
      ]
    },
    {
      "name": "ol.interaction.KeyboardZoom.handleEvent",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/interaction/keyboardzoominteraction.js",
      "params": [
        {
          "name": "mapBrowserEvent",
          "types": [
            "ol.MapBrowserEvent"
          ]
        }
      ],
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.interaction.KeyboardZoom"
      ]
    },
    {
      "name": "ol.interaction.Modify",
      "kind": "class",
      "description": "Interaction for modifying vector data.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/interaction/modifyinteraction.js",
      "extends": "ol.interaction.Pointer",
      "params": [
        {
          "name": "options",
          "types": [
            "olx.interaction.ModifyOptions"
          ]
        }
      ],
      "provides": [
        "ol.interaction.Modify"
      ]
    },
    {
      "name": "ol.interaction.Modify.handleEvent",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/interaction/modifyinteraction.js",
      "params": [
        {
          "name": "mapBrowserEvent",
          "types": [
            "ol.MapBrowserEvent"
          ]
        }
      ],
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.interaction.Modify"
      ]
    },
    {
      "name": "ol.interaction.MouseWheelZoom",
      "kind": "class",
      "description": "Allows the user to zoom the map by scrolling the mouse wheel.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/interaction/mousewheelzoominteraction.js",
      "extends": "ol.interaction.Interaction",
      "params": [
        {
          "name": "opt_options",
          "types": [
            "olx.interaction.MouseWheelZoomOptions"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.interaction.MouseWheelZoom"
      ]
    },
    {
      "name": "ol.interaction.MouseWheelZoom.handleEvent",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/interaction/mousewheelzoominteraction.js",
      "params": [
        {
          "name": "mapBrowserEvent",
          "types": [
            "ol.MapBrowserEvent"
          ]
        }
      ],
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.interaction.MouseWheelZoom"
      ]
    },
    {
      "name": "ol.interaction.PinchRotate",
      "kind": "class",
      "description": "Allows the user to rotate the map by twisting with two fingers\non a touch screen.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/interaction/pinchrotateinteraction.js",
      "extends": "ol.interaction.Pointer",
      "params": [
        {
          "name": "opt_options",
          "types": [
            "olx.interaction.PinchRotateOptions"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.interaction.PinchRotate"
      ]
    },
    {
      "name": "ol.interaction.PinchZoom",
      "kind": "class",
      "description": "Allows the user to zoom the map by pinching with two fingers\non a touch screen.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/interaction/pinchzoominteraction.js",
      "extends": "ol.interaction.Pointer",
      "params": [
        {
          "name": "opt_options",
          "types": [
            "olx.interaction.PinchZoomOptions"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.interaction.PinchZoom"
      ]
    },
    {
      "name": "ol.interaction.Pointer",
      "kind": "class",
      "description": "Base class that calls user-defined functions on `down`, `move` and `up`\nevents. This class also manages \"drag sequences\".\n\nWhen the `handleDownEvent` user function returns `true` a drag sequence is\nstarted. During a drag sequence the `handleDragEvent` user function is\ncalled on `move` events. The drag sequence ends when the `handleUpEvent`\nuser function is called and returns `false`.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/interaction/pointerinteraction.js",
      "extends": "ol.interaction.Interaction",
      "params": [
        {
          "name": "opt_options",
          "types": [
            "olx.interaction.PointerOptions"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.interaction.Pointer"
      ]
    },
    {
      "name": "ol.interaction.Pointer.handleEvent",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/interaction/pointerinteraction.js",
      "params": [
        {
          "name": "mapBrowserEvent",
          "types": [
            "ol.MapBrowserEvent"
          ]
        }
      ],
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.interaction.Pointer"
      ]
    },
    {
      "name": "ol.interaction.Select",
      "kind": "class",
      "description": "Handles selection of vector data. A {@link ol.FeatureOverlay} is maintained\ninternally to store the selected feature(s). Which features are selected is\ndetermined by the `condition` option, and optionally the `toggle` or\n`add`/`remove` options.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/interaction/selectinteraction.js",
      "extends": "ol.interaction.Interaction",
      "params": [
        {
          "name": "opt_options",
          "types": [
            "olx.interaction.SelectOptions"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.interaction.Select"
      ]
    },
    {
      "name": "ol.interaction.Select#getFeatures",
      "kind": "function",
      "description": "Get the selected features.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/interaction/selectinteraction.js",
      "returns": {
        "types": [
          "ol.Collection.<ol.Feature>"
        ]
      },
      "provides": [
        "ol.interaction.Select"
      ]
    },
    {
      "name": "ol.interaction.Select.handleEvent",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/interaction/selectinteraction.js",
      "params": [
        {
          "name": "mapBrowserEvent",
          "types": [
            "ol.MapBrowserEvent"
          ]
        }
      ],
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.interaction.Select"
      ]
    },
    {
      "name": "ol.interaction.Select#setMap",
      "kind": "function",
      "description": "Remove the interaction from its current map, if any,  and attach it to a new\nmap, if any. Pass `null` to just remove the interaction from the current map.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/interaction/selectinteraction.js",
      "params": [
        {
          "name": "map",
          "types": [
            "ol.Map"
          ]
        }
      ],
      "provides": [
        "ol.interaction.Select"
      ]
    },
    {
      "name": "ol.geom.Circle",
      "kind": "class",
      "description": "Circle geometry.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/circle.js",
      "extends": "ol.geom.SimpleGeometry",
      "params": [
        {
          "name": "center",
          "types": [
            "ol.Coordinate"
          ]
        },
        {
          "name": "opt_radius",
          "types": [
            "number"
          ],
          "optional": true
        },
        {
          "name": "opt_layout",
          "types": [
            "ol.geom.GeometryLayout"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.geom.Circle"
      ]
    },
    {
      "name": "ol.geom.Circle#clone",
      "kind": "function",
      "description": "Make a complete copy of the geometry.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/circle.js",
      "returns": {
        "types": [
          "ol.geom.Circle"
        ],
        "nullable": false
      },
      "provides": [
        "ol.geom.Circle"
      ]
    },
    {
      "name": "ol.geom.Circle#getCenter",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/circle.js",
      "returns": {
        "types": [
          "ol.Coordinate"
        ]
      },
      "provides": [
        "ol.geom.Circle"
      ]
    },
    {
      "name": "ol.geom.Circle#getRadius",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/circle.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.geom.Circle"
      ]
    },
    {
      "name": "ol.geom.Circle#getType",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/circle.js",
      "provides": [
        "ol.geom.Circle"
      ]
    },
    {
      "name": "ol.geom.Circle#setCenter",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/circle.js",
      "params": [
        {
          "name": "center",
          "types": [
            "ol.Coordinate"
          ]
        }
      ],
      "provides": [
        "ol.geom.Circle"
      ]
    },
    {
      "name": "ol.geom.Circle#setCenterAndRadius",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/circle.js",
      "params": [
        {
          "name": "center",
          "types": [
            "ol.Coordinate"
          ]
        },
        {
          "name": "radius",
          "types": [
            "number"
          ]
        },
        {
          "name": "opt_layout",
          "types": [
            "ol.geom.GeometryLayout"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.geom.Circle"
      ]
    },
    {
      "name": "ol.geom.Circle#setRadius",
      "kind": "function",
      "description": "The radius is in the units of the projection.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/circle.js",
      "params": [
        {
          "name": "radius",
          "types": [
            "number"
          ]
        }
      ],
      "provides": [
        "ol.geom.Circle"
      ]
    },
    {
      "name": "ol.geom.Circle#transform",
      "kind": "function",
      "description": "Transform each coordinate of the circle from one coordinate reference system\nto another. The geometry is modified in place.\nIf you do not want the geometry modified in place, first clone() it and\nthen use this function on the clone.\n\nInternally a circle is currently represented by two points: the center of\nthe circle `[cx, cy]`, and the point to the right of the circle\n`[cx + r, cy]`. This `transform` function just transforms these two points.\nSo the resulting geometry is also a circle, and that circle does not\ncorrespond to the shape that would be obtained by transforming every point\nof the original circle.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/circle.js",
      "params": [
        {
          "name": "source",
          "types": [
            "ol.proj.ProjectionLike"
          ]
        },
        {
          "name": "destination",
          "types": [
            "ol.proj.ProjectionLike"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.geom.Circle"
        ]
      },
      "provides": [
        "ol.geom.Circle"
      ]
    },
    {
      "name": "ol.geom.Geometry",
      "kind": "class",
      "description": "Abstract base class; normally only used for creating subclasses and not\ninstantiated in apps.\nBase class for vector geometries.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/geometry.js",
      "extends": "ol.Observable",
      "provides": [
        "ol.geom.Geometry",
        "ol.geom.GeometryType"
      ]
    },
    {
      "name": "ol.geom.Geometry#clone",
      "kind": "function",
      "description": "Make a complete copy of the geometry.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/geometry.js",
      "returns": {
        "types": [
          "ol.geom.Geometry"
        ],
        "nullable": false
      },
      "provides": [
        "ol.geom.Geometry",
        "ol.geom.GeometryType"
      ]
    },
    {
      "name": "ol.geom.Geometry#getClosestPoint",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/geometry.js",
      "params": [
        {
          "name": "point",
          "types": [
            "ol.Coordinate"
          ]
        },
        {
          "name": "opt_closestPoint",
          "types": [
            "ol.Coordinate"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.Coordinate"
        ]
      },
      "provides": [
        "ol.geom.Geometry",
        "ol.geom.GeometryType"
      ]
    },
    {
      "name": "ol.geom.Geometry#getExtent",
      "kind": "function",
      "description": "Get the extent of the geometry.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/geometry.js",
      "params": [
        {
          "name": "opt_extent",
          "types": [
            "ol.Extent"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.Extent"
        ]
      },
      "provides": [
        "ol.geom.Geometry",
        "ol.geom.GeometryType"
      ]
    },
    {
      "name": "ol.geom.Geometry#getType",
      "kind": "function",
      "description": "Get the type of this geometry.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/geometry.js",
      "returns": {
        "types": [
          "ol.geom.GeometryType"
        ]
      },
      "provides": [
        "ol.geom.Geometry",
        "ol.geom.GeometryType"
      ]
    },
    {
      "name": "ol.geom.Geometry#applyTransform",
      "kind": "function",
      "description": "Apply a transform function to each coordinate of the geometry.\nThe geometry is modified in place.\nIf you do not want the geometry modified in place, first clone() it and\nthen use this function on the clone.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/geometry.js",
      "params": [
        {
          "name": "transformFn",
          "types": [
            "ol.TransformFunction"
          ]
        }
      ],
      "provides": [
        "ol.geom.Geometry",
        "ol.geom.GeometryType"
      ]
    },
    {
      "name": "ol.geom.Geometry#intersectsExtent",
      "kind": "function",
      "description": "Test if the geometry and the passed extent intersect.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/geometry.js",
      "params": [
        {
          "name": "extent",
          "types": [
            "ol.Extent"
          ]
        }
      ],
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.geom.Geometry",
        "ol.geom.GeometryType"
      ]
    },
    {
      "name": "ol.geom.Geometry#translate",
      "kind": "function",
      "description": "Translate the geometry.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/geometry.js",
      "params": [
        {
          "name": "deltaX",
          "types": [
            "number"
          ]
        },
        {
          "name": "deltaY",
          "types": [
            "number"
          ]
        }
      ],
      "provides": [
        "ol.geom.Geometry",
        "ol.geom.GeometryType"
      ]
    },
    {
      "name": "ol.geom.Geometry#transform",
      "kind": "function",
      "description": "Transform each coordinate of the geometry from one coordinate reference\nsystem to another. The geometry is modified in place.\nFor example, a line will be transformed to a line and a circle to a circle.\nIf you do not want the geometry modified in place, first clone() it and\nthen use this function on the clone.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/geometry.js",
      "params": [
        {
          "name": "source",
          "types": [
            "ol.proj.ProjectionLike"
          ]
        },
        {
          "name": "destination",
          "types": [
            "ol.proj.ProjectionLike"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.geom.Geometry"
        ]
      },
      "provides": [
        "ol.geom.Geometry",
        "ol.geom.GeometryType"
      ]
    },
    {
      "name": "ol.geom.GeometryCollection",
      "kind": "class",
      "description": "An array of {@link ol.geom.Geometry} objects.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/geometrycollection.js",
      "extends": "ol.geom.Geometry",
      "params": [
        {
          "name": "opt_geometries",
          "types": [
            "Array.<ol.geom.Geometry>"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.geom.GeometryCollection"
      ]
    },
    {
      "name": "ol.geom.GeometryCollection#clone",
      "kind": "function",
      "description": "Make a complete copy of the geometry.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/geometrycollection.js",
      "returns": {
        "types": [
          "ol.geom.GeometryCollection"
        ],
        "nullable": false
      },
      "provides": [
        "ol.geom.GeometryCollection"
      ]
    },
    {
      "name": "ol.geom.GeometryCollection#getGeometries",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/geometrycollection.js",
      "returns": {
        "types": [
          "Array.<ol.geom.Geometry>"
        ]
      },
      "provides": [
        "ol.geom.GeometryCollection"
      ]
    },
    {
      "name": "ol.geom.GeometryCollection#getType",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/geometrycollection.js",
      "provides": [
        "ol.geom.GeometryCollection"
      ]
    },
    {
      "name": "ol.geom.GeometryCollection#intersectsExtent",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/geometrycollection.js",
      "provides": [
        "ol.geom.GeometryCollection"
      ]
    },
    {
      "name": "ol.geom.GeometryCollection#setGeometries",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/geometrycollection.js",
      "params": [
        {
          "name": "geometries",
          "types": [
            "Array.<ol.geom.Geometry>"
          ]
        }
      ],
      "provides": [
        "ol.geom.GeometryCollection"
      ]
    },
    {
      "name": "ol.geom.GeometryCollection#applyTransform",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/geometrycollection.js",
      "provides": [
        "ol.geom.GeometryCollection"
      ]
    },
    {
      "name": "ol.geom.GeometryCollection#translate",
      "kind": "function",
      "description": "Translate the geometry.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/geometrycollection.js",
      "params": [
        {
          "name": "deltaX",
          "types": [
            "number"
          ]
        },
        {
          "name": "deltaY",
          "types": [
            "number"
          ]
        }
      ],
      "provides": [
        "ol.geom.GeometryCollection"
      ]
    },
    {
      "name": "ol.geom.LinearRing",
      "kind": "class",
      "description": "Linear ring geometry. Only used as part of polygon; cannot be rendered\non its own.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/linearring.js",
      "extends": "ol.geom.SimpleGeometry",
      "params": [
        {
          "name": "coordinates",
          "types": [
            "Array.<ol.Coordinate>"
          ]
        },
        {
          "name": "opt_layout",
          "types": [
            "ol.geom.GeometryLayout"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.geom.LinearRing"
      ]
    },
    {
      "name": "ol.geom.LinearRing#clone",
      "kind": "function",
      "description": "Make a complete copy of the geometry.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/linearring.js",
      "returns": {
        "types": [
          "ol.geom.LinearRing"
        ],
        "nullable": false
      },
      "provides": [
        "ol.geom.LinearRing"
      ]
    },
    {
      "name": "ol.geom.LinearRing#getArea",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/linearring.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.geom.LinearRing"
      ]
    },
    {
      "name": "ol.geom.LinearRing#getCoordinates",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/linearring.js",
      "returns": {
        "types": [
          "Array.<ol.Coordinate>"
        ]
      },
      "provides": [
        "ol.geom.LinearRing"
      ]
    },
    {
      "name": "ol.geom.LinearRing#getType",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/linearring.js",
      "provides": [
        "ol.geom.LinearRing"
      ]
    },
    {
      "name": "ol.geom.LinearRing#setCoordinates",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/linearring.js",
      "params": [
        {
          "name": "coordinates",
          "types": [
            "Array.<ol.Coordinate>"
          ]
        },
        {
          "name": "opt_layout",
          "types": [
            "ol.geom.GeometryLayout"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.geom.LinearRing"
      ]
    },
    {
      "name": "ol.geom.LineString",
      "kind": "class",
      "description": "Linestring geometry.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/linestring.js",
      "extends": "ol.geom.SimpleGeometry",
      "params": [
        {
          "name": "coordinates",
          "types": [
            "Array.<ol.Coordinate>"
          ]
        },
        {
          "name": "opt_layout",
          "types": [
            "ol.geom.GeometryLayout"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.geom.LineString"
      ]
    },
    {
      "name": "ol.geom.LineString#appendCoordinate",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/linestring.js",
      "params": [
        {
          "name": "coordinate",
          "types": [
            "ol.Coordinate"
          ]
        }
      ],
      "provides": [
        "ol.geom.LineString"
      ]
    },
    {
      "name": "ol.geom.LineString#clone",
      "kind": "function",
      "description": "Make a complete copy of the geometry.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/linestring.js",
      "returns": {
        "types": [
          "ol.geom.LineString"
        ],
        "nullable": false
      },
      "provides": [
        "ol.geom.LineString"
      ]
    },
    {
      "name": "ol.geom.LineString#getCoordinateAtM",
      "kind": "function",
      "description": "Returns the coordinate at `m` using linear interpolation, or `null` if no\nsuch coordinate exists.\n\n`opt_extrapolate` controls extrapolation beyond the range of Ms in the\nMultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\nM will return the first coordinate and Ms greater than the last M will\nreturn the last coordinate.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/linestring.js",
      "params": [
        {
          "name": "m",
          "types": [
            "number"
          ]
        },
        {
          "name": "opt_extrapolate",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.Coordinate"
        ]
      },
      "provides": [
        "ol.geom.LineString"
      ]
    },
    {
      "name": "ol.geom.LineString#getCoordinates",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/linestring.js",
      "returns": {
        "types": [
          "Array.<ol.Coordinate>"
        ]
      },
      "provides": [
        "ol.geom.LineString"
      ]
    },
    {
      "name": "ol.geom.LineString#getLength",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/linestring.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.geom.LineString"
      ]
    },
    {
      "name": "ol.geom.LineString#getType",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/linestring.js",
      "provides": [
        "ol.geom.LineString"
      ]
    },
    {
      "name": "ol.geom.LineString#intersectsExtent",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/linestring.js",
      "provides": [
        "ol.geom.LineString"
      ]
    },
    {
      "name": "ol.geom.LineString#setCoordinates",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/linestring.js",
      "params": [
        {
          "name": "coordinates",
          "types": [
            "Array.<ol.Coordinate>"
          ]
        },
        {
          "name": "opt_layout",
          "types": [
            "ol.geom.GeometryLayout"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.geom.LineString"
      ]
    },
    {
      "name": "ol.geom.MultiLineString",
      "kind": "class",
      "description": "Multi-linestring geometry.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/multilinestring.js",
      "extends": "ol.geom.SimpleGeometry",
      "params": [
        {
          "name": "coordinates",
          "types": [
            "Array.<Array.<ol.Coordinate>>"
          ]
        },
        {
          "name": "opt_layout",
          "types": [
            "ol.geom.GeometryLayout"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.geom.MultiLineString"
      ]
    },
    {
      "name": "ol.geom.MultiLineString#appendLineString",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/multilinestring.js",
      "params": [
        {
          "name": "lineString",
          "types": [
            "ol.geom.LineString"
          ]
        }
      ],
      "provides": [
        "ol.geom.MultiLineString"
      ]
    },
    {
      "name": "ol.geom.MultiLineString#clone",
      "kind": "function",
      "description": "Make a complete copy of the geometry.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/multilinestring.js",
      "returns": {
        "types": [
          "ol.geom.MultiLineString"
        ],
        "nullable": false
      },
      "provides": [
        "ol.geom.MultiLineString"
      ]
    },
    {
      "name": "ol.geom.MultiLineString#getCoordinateAtM",
      "kind": "function",
      "description": "Returns the coordinate at `m` using linear interpolation, or `null` if no\nsuch coordinate exists.\n\n`opt_extrapolate` controls extrapolation beyond the range of Ms in the\nMultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\nM will return the first coordinate and Ms greater than the last M will\nreturn the last coordinate.\n\n`opt_interpolate` controls interpolation between consecutive LineStrings\nwithin the MultiLineString. If `opt_interpolate` is `true` the coordinates\nwill be linearly interpolated between the last coordinate of one LineString\nand the first coordinate of the next LineString.  If `opt_interpolate` is\n`false` then the function will return `null` for Ms falling between\nLineStrings.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/multilinestring.js",
      "params": [
        {
          "name": "m",
          "types": [
            "number"
          ]
        },
        {
          "name": "opt_extrapolate",
          "types": [
            "boolean"
          ],
          "optional": true
        },
        {
          "name": "opt_interpolate",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.Coordinate"
        ]
      },
      "provides": [
        "ol.geom.MultiLineString"
      ]
    },
    {
      "name": "ol.geom.MultiLineString#getCoordinates",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/multilinestring.js",
      "returns": {
        "types": [
          "Array.<Array.<ol.Coordinate>>"
        ]
      },
      "provides": [
        "ol.geom.MultiLineString"
      ]
    },
    {
      "name": "ol.geom.MultiLineString#getLineString",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/multilinestring.js",
      "params": [
        {
          "name": "index",
          "types": [
            "number"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.geom.LineString"
        ]
      },
      "provides": [
        "ol.geom.MultiLineString"
      ]
    },
    {
      "name": "ol.geom.MultiLineString#getLineStrings",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/multilinestring.js",
      "returns": {
        "types": [
          "Array.<ol.geom.LineString>"
        ]
      },
      "provides": [
        "ol.geom.MultiLineString"
      ]
    },
    {
      "name": "ol.geom.MultiLineString#getType",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/multilinestring.js",
      "provides": [
        "ol.geom.MultiLineString"
      ]
    },
    {
      "name": "ol.geom.MultiLineString#intersectsExtent",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/multilinestring.js",
      "provides": [
        "ol.geom.MultiLineString"
      ]
    },
    {
      "name": "ol.geom.MultiLineString#setCoordinates",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/multilinestring.js",
      "params": [
        {
          "name": "coordinates",
          "types": [
            "Array.<Array.<ol.Coordinate>>"
          ]
        },
        {
          "name": "opt_layout",
          "types": [
            "ol.geom.GeometryLayout"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.geom.MultiLineString"
      ]
    },
    {
      "name": "ol.geom.MultiPoint",
      "kind": "class",
      "description": "Multi-point geometry.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/multipoint.js",
      "extends": "ol.geom.SimpleGeometry",
      "params": [
        {
          "name": "coordinates",
          "types": [
            "Array.<ol.Coordinate>"
          ]
        },
        {
          "name": "opt_layout",
          "types": [
            "ol.geom.GeometryLayout"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.geom.MultiPoint"
      ]
    },
    {
      "name": "ol.geom.MultiPoint#appendPoint",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/multipoint.js",
      "params": [
        {
          "name": "point",
          "types": [
            "ol.geom.Point"
          ]
        }
      ],
      "provides": [
        "ol.geom.MultiPoint"
      ]
    },
    {
      "name": "ol.geom.MultiPoint#clone",
      "kind": "function",
      "description": "Make a complete copy of the geometry.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/multipoint.js",
      "returns": {
        "types": [
          "ol.geom.MultiPoint"
        ],
        "nullable": false
      },
      "provides": [
        "ol.geom.MultiPoint"
      ]
    },
    {
      "name": "ol.geom.MultiPoint#getCoordinates",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/multipoint.js",
      "returns": {
        "types": [
          "Array.<ol.Coordinate>"
        ]
      },
      "provides": [
        "ol.geom.MultiPoint"
      ]
    },
    {
      "name": "ol.geom.MultiPoint#getPoint",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/multipoint.js",
      "params": [
        {
          "name": "index",
          "types": [
            "number"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.geom.Point"
        ]
      },
      "provides": [
        "ol.geom.MultiPoint"
      ]
    },
    {
      "name": "ol.geom.MultiPoint#getPoints",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/multipoint.js",
      "returns": {
        "types": [
          "Array.<ol.geom.Point>"
        ]
      },
      "provides": [
        "ol.geom.MultiPoint"
      ]
    },
    {
      "name": "ol.geom.MultiPoint#getType",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/multipoint.js",
      "provides": [
        "ol.geom.MultiPoint"
      ]
    },
    {
      "name": "ol.geom.MultiPoint#intersectsExtent",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/multipoint.js",
      "provides": [
        "ol.geom.MultiPoint"
      ]
    },
    {
      "name": "ol.geom.MultiPoint#setCoordinates",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/multipoint.js",
      "params": [
        {
          "name": "coordinates",
          "types": [
            "Array.<ol.Coordinate>"
          ]
        },
        {
          "name": "opt_layout",
          "types": [
            "ol.geom.GeometryLayout"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.geom.MultiPoint"
      ]
    },
    {
      "name": "ol.geom.MultiPolygon",
      "kind": "class",
      "description": "Multi-polygon geometry.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/multipolygon.js",
      "extends": "ol.geom.SimpleGeometry",
      "params": [
        {
          "name": "coordinates",
          "types": [
            "Array.<Array.<Array.<ol.Coordinate>>>"
          ]
        },
        {
          "name": "opt_layout",
          "types": [
            "ol.geom.GeometryLayout"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.geom.MultiPolygon"
      ]
    },
    {
      "name": "ol.geom.MultiPolygon#appendPolygon",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/multipolygon.js",
      "params": [
        {
          "name": "polygon",
          "types": [
            "ol.geom.Polygon"
          ]
        }
      ],
      "provides": [
        "ol.geom.MultiPolygon"
      ]
    },
    {
      "name": "ol.geom.MultiPolygon#clone",
      "kind": "function",
      "description": "Make a complete copy of the geometry.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/multipolygon.js",
      "returns": {
        "types": [
          "ol.geom.MultiPolygon"
        ],
        "nullable": false
      },
      "provides": [
        "ol.geom.MultiPolygon"
      ]
    },
    {
      "name": "ol.geom.MultiPolygon#getArea",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/multipolygon.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.geom.MultiPolygon"
      ]
    },
    {
      "name": "ol.geom.MultiPolygon#getCoordinates",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/multipolygon.js",
      "returns": {
        "types": [
          "Array.<Array.<Array.<ol.Coordinate>>>"
        ]
      },
      "provides": [
        "ol.geom.MultiPolygon"
      ]
    },
    {
      "name": "ol.geom.MultiPolygon#getInteriorPoints",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/multipolygon.js",
      "returns": {
        "types": [
          "ol.geom.MultiPoint"
        ]
      },
      "provides": [
        "ol.geom.MultiPolygon"
      ]
    },
    {
      "name": "ol.geom.MultiPolygon#getPolygon",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/multipolygon.js",
      "params": [
        {
          "name": "index",
          "types": [
            "number"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.geom.Polygon"
        ]
      },
      "provides": [
        "ol.geom.MultiPolygon"
      ]
    },
    {
      "name": "ol.geom.MultiPolygon#getPolygons",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/multipolygon.js",
      "returns": {
        "types": [
          "Array.<ol.geom.Polygon>"
        ]
      },
      "provides": [
        "ol.geom.MultiPolygon"
      ]
    },
    {
      "name": "ol.geom.MultiPolygon#getType",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/multipolygon.js",
      "provides": [
        "ol.geom.MultiPolygon"
      ]
    },
    {
      "name": "ol.geom.MultiPolygon#intersectsExtent",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/multipolygon.js",
      "provides": [
        "ol.geom.MultiPolygon"
      ]
    },
    {
      "name": "ol.geom.MultiPolygon#setCoordinates",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/multipolygon.js",
      "params": [
        {
          "name": "coordinates",
          "types": [
            "Array.<Array.<Array.<ol.Coordinate>>>"
          ]
        },
        {
          "name": "opt_layout",
          "types": [
            "ol.geom.GeometryLayout"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.geom.MultiPolygon"
      ]
    },
    {
      "name": "ol.geom.Point",
      "kind": "class",
      "description": "Point geometry.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/point.js",
      "extends": "ol.geom.SimpleGeometry",
      "params": [
        {
          "name": "coordinates",
          "types": [
            "ol.Coordinate"
          ]
        },
        {
          "name": "opt_layout",
          "types": [
            "ol.geom.GeometryLayout"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.geom.Point"
      ]
    },
    {
      "name": "ol.geom.Point#clone",
      "kind": "function",
      "description": "Make a complete copy of the geometry.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/point.js",
      "returns": {
        "types": [
          "ol.geom.Point"
        ],
        "nullable": false
      },
      "provides": [
        "ol.geom.Point"
      ]
    },
    {
      "name": "ol.geom.Point#getCoordinates",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/point.js",
      "returns": {
        "types": [
          "ol.Coordinate"
        ]
      },
      "provides": [
        "ol.geom.Point"
      ]
    },
    {
      "name": "ol.geom.Point#getType",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/point.js",
      "provides": [
        "ol.geom.Point"
      ]
    },
    {
      "name": "ol.geom.Point#intersectsExtent",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/point.js",
      "provides": [
        "ol.geom.Point"
      ]
    },
    {
      "name": "ol.geom.Point#setCoordinates",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/point.js",
      "params": [
        {
          "name": "coordinates",
          "types": [
            "ol.Coordinate"
          ]
        },
        {
          "name": "opt_layout",
          "types": [
            "ol.geom.GeometryLayout"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.geom.Point"
      ]
    },
    {
      "name": "ol.geom.Polygon",
      "kind": "class",
      "description": "Polygon geometry.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/polygon.js",
      "extends": "ol.geom.SimpleGeometry",
      "params": [
        {
          "name": "coordinates",
          "types": [
            "Array.<Array.<ol.Coordinate>>"
          ]
        },
        {
          "name": "opt_layout",
          "types": [
            "ol.geom.GeometryLayout"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.geom.Polygon"
      ]
    },
    {
      "name": "ol.geom.Polygon#appendLinearRing",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/polygon.js",
      "params": [
        {
          "name": "linearRing",
          "types": [
            "ol.geom.LinearRing"
          ]
        }
      ],
      "provides": [
        "ol.geom.Polygon"
      ]
    },
    {
      "name": "ol.geom.Polygon#clone",
      "kind": "function",
      "description": "Make a complete copy of the geometry.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/polygon.js",
      "returns": {
        "types": [
          "ol.geom.Polygon"
        ],
        "nullable": false
      },
      "provides": [
        "ol.geom.Polygon"
      ]
    },
    {
      "name": "ol.geom.Polygon#getArea",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/polygon.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.geom.Polygon"
      ]
    },
    {
      "name": "ol.geom.Polygon#getCoordinates",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/polygon.js",
      "returns": {
        "types": [
          "Array.<Array.<ol.Coordinate>>"
        ]
      },
      "provides": [
        "ol.geom.Polygon"
      ]
    },
    {
      "name": "ol.geom.Polygon#getInteriorPoint",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/polygon.js",
      "returns": {
        "types": [
          "ol.geom.Point"
        ]
      },
      "provides": [
        "ol.geom.Polygon"
      ]
    },
    {
      "name": "ol.geom.Polygon#getLinearRingCount",
      "kind": "function",
      "description": "Return the number of rings of the polygon,  this includes the exterior\nring and any interior rings.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/polygon.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.geom.Polygon"
      ]
    },
    {
      "name": "ol.geom.Polygon#getLinearRing",
      "kind": "function",
      "description": "Return the Nth linear ring of the polygon geometry. Return `null` if the\ngiven index is out of range.\nThe exterior linear ring is available at index `0` and the interior rings\nat index `1` and beyond.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/polygon.js",
      "params": [
        {
          "name": "index",
          "types": [
            "number"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.geom.LinearRing"
        ]
      },
      "provides": [
        "ol.geom.Polygon"
      ]
    },
    {
      "name": "ol.geom.Polygon#getLinearRings",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/polygon.js",
      "returns": {
        "types": [
          "Array.<ol.geom.LinearRing>"
        ]
      },
      "provides": [
        "ol.geom.Polygon"
      ]
    },
    {
      "name": "ol.geom.Polygon#getType",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/polygon.js",
      "provides": [
        "ol.geom.Polygon"
      ]
    },
    {
      "name": "ol.geom.Polygon#intersectsExtent",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/polygon.js",
      "provides": [
        "ol.geom.Polygon"
      ]
    },
    {
      "name": "ol.geom.Polygon#setCoordinates",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/polygon.js",
      "params": [
        {
          "name": "coordinates",
          "types": [
            "Array.<Array.<ol.Coordinate>>"
          ]
        },
        {
          "name": "opt_layout",
          "types": [
            "ol.geom.GeometryLayout"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.geom.Polygon"
      ]
    },
    {
      "name": "ol.geom.Polygon.circular",
      "kind": "function",
      "description": "Create an approximation of a circle on the surface of a sphere.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/polygon.js",
      "params": [
        {
          "name": "sphere",
          "types": [
            "ol.Sphere"
          ]
        },
        {
          "name": "center",
          "types": [
            "ol.Coordinate"
          ]
        },
        {
          "name": "radius",
          "types": [
            "number"
          ]
        },
        {
          "name": "opt_n",
          "types": [
            "number"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.geom.Polygon"
        ]
      },
      "provides": [
        "ol.geom.Polygon"
      ]
    },
    {
      "name": "ol.geom.Polygon.fromExtent",
      "kind": "function",
      "description": "Create a polygon from an extent. The layout used is `XY`.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/polygon.js",
      "params": [
        {
          "name": "extent",
          "types": [
            "ol.Extent"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.geom.Polygon"
        ]
      },
      "provides": [
        "ol.geom.Polygon"
      ]
    },
    {
      "name": "ol.geom.SimpleGeometry",
      "kind": "class",
      "description": "Abstract base class; only used for creating subclasses; do not instantiate\nin apps, as cannot be rendered.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/simplegeometry.js",
      "extends": "ol.geom.Geometry",
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.SimpleGeometry#getFirstCoordinate",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/simplegeometry.js",
      "returns": {
        "types": [
          "ol.Coordinate"
        ]
      },
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.SimpleGeometry#getLastCoordinate",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/simplegeometry.js",
      "returns": {
        "types": [
          "ol.Coordinate"
        ]
      },
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.SimpleGeometry#getLayout",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/simplegeometry.js",
      "returns": {
        "types": [
          "ol.geom.GeometryLayout"
        ]
      },
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.SimpleGeometry#applyTransform",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/simplegeometry.js",
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.SimpleGeometry#translate",
      "kind": "function",
      "description": "Translate the geometry.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/simplegeometry.js",
      "params": [
        {
          "name": "deltaX",
          "types": [
            "number"
          ]
        },
        {
          "name": "deltaY",
          "types": [
            "number"
          ]
        }
      ],
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.format.Feature",
      "kind": "class",
      "description": "Abstract base class; normally only used for creating subclasses and not\ninstantiated in apps.\nBase class for feature formats.\n{ol.format.Feature} subclasses provide the ability to decode and encode\n{@link ol.Feature} objects from a variety of commonly used geospatial\nfile formats.  See the documentation for each format for more details.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/format/featureformat.js",
      "provides": [
        "ol.format.Feature"
      ]
    },
    {
      "name": "ol.format.GeoJSON",
      "kind": "class",
      "description": "Feature format for reading and writing data in the GeoJSON format.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/format/geojsonformat.js",
      "extends": "ol.format.Feature",
      "params": [
        {
          "name": "opt_options",
          "types": [
            "olx.format.GeoJSONOptions"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.format.GeoJSON"
      ]
    },
    {
      "name": "ol.format.GeoJSON#readFeature",
      "kind": "function",
      "description": "Read a feature from a GeoJSON Feature source.  Only works for Feature,\nuse `readFeatures` to read FeatureCollection source.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/format/geojsonformat.js",
      "params": [
        {
          "name": "source",
          "types": [
            "ArrayBuffer",
            "Document",
            "Node",
            "Object",
            "string"
          ]
        },
        {
          "name": "opt_options",
          "types": [
            "olx.format.ReadOptions"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.Feature"
        ]
      },
      "provides": [
        "ol.format.GeoJSON"
      ]
    },
    {
      "name": "ol.format.GeoJSON#readFeatures",
      "kind": "function",
      "description": "Read all features from a GeoJSON source.  Works with both Feature and\nFeatureCollection sources.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/format/geojsonformat.js",
      "params": [
        {
          "name": "source",
          "types": [
            "ArrayBuffer",
            "Document",
            "Node",
            "Object",
            "string"
          ]
        },
        {
          "name": "opt_options",
          "types": [
            "olx.format.ReadOptions"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "Array.<ol.Feature>"
        ]
      },
      "provides": [
        "ol.format.GeoJSON"
      ]
    },
    {
      "name": "ol.format.GeoJSON#readGeometry",
      "kind": "function",
      "description": "Read a geometry from a GeoJSON source.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/format/geojsonformat.js",
      "params": [
        {
          "name": "source",
          "types": [
            "ArrayBuffer",
            "Document",
            "Node",
            "Object",
            "string"
          ]
        },
        {
          "name": "opt_options",
          "types": [
            "olx.format.ReadOptions"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.geom.Geometry"
        ]
      },
      "provides": [
        "ol.format.GeoJSON"
      ]
    },
    {
      "name": "ol.format.GeoJSON#readProjection",
      "kind": "function",
      "description": "Read the projection from a GeoJSON source.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/format/geojsonformat.js",
      "params": [
        {
          "name": "source",
          "types": [
            "ArrayBuffer",
            "Document",
            "Node",
            "Object",
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.proj.Projection"
        ]
      },
      "provides": [
        "ol.format.GeoJSON"
      ]
    },
    {
      "name": "ol.format.GeoJSON#writeFeature",
      "kind": "function",
      "description": "Encode a feature as a GeoJSON Feature string.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/format/geojsonformat.js",
      "params": [
        {
          "name": "feature",
          "types": [
            "ol.Feature"
          ]
        },
        {
          "name": "options",
          "types": [
            "olx.format.WriteOptions"
          ]
        }
      ],
      "returns": {
        "types": [
          "string"
        ]
      },
      "provides": [
        "ol.format.GeoJSON"
      ]
    },
    {
      "name": "ol.format.GeoJSON#writeFeatureObject",
      "kind": "function",
      "description": "Encode a feature as a GeoJSON Feature object.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/format/geojsonformat.js",
      "params": [
        {
          "name": "feature",
          "types": [
            "ol.Feature"
          ]
        },
        {
          "name": "opt_options",
          "types": [
            "olx.format.WriteOptions"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "Object"
        ]
      },
      "provides": [
        "ol.format.GeoJSON"
      ]
    },
    {
      "name": "ol.format.GeoJSON#writeFeatures",
      "kind": "function",
      "description": "Encode an array of features as GeoJSON.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/format/geojsonformat.js",
      "params": [
        {
          "name": "features",
          "types": [
            "Array.<ol.Feature>"
          ]
        },
        {
          "name": "options",
          "types": [
            "olx.format.WriteOptions"
          ]
        }
      ],
      "returns": {
        "types": [
          "string"
        ]
      },
      "provides": [
        "ol.format.GeoJSON"
      ]
    },
    {
      "name": "ol.format.GeoJSON#writeFeaturesObject",
      "kind": "function",
      "description": "Encode an array of features as a GeoJSON object.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/format/geojsonformat.js",
      "params": [
        {
          "name": "features",
          "types": [
            "Array.<ol.Feature>"
          ]
        },
        {
          "name": "opt_options",
          "types": [
            "olx.format.WriteOptions"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "Object"
        ]
      },
      "provides": [
        "ol.format.GeoJSON"
      ]
    },
    {
      "name": "ol.format.GeoJSON#writeGeometry",
      "kind": "function",
      "description": "Encode a geometry as a GeoJSON string.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/format/geojsonformat.js",
      "params": [
        {
          "name": "geometry",
          "types": [
            "ol.geom.Geometry"
          ]
        },
        {
          "name": "options",
          "types": [
            "olx.format.WriteOptions"
          ]
        }
      ],
      "returns": {
        "types": [
          "string"
        ]
      },
      "provides": [
        "ol.format.GeoJSON"
      ]
    },
    {
      "name": "ol.format.GeoJSON#writeGeometryObject",
      "kind": "function",
      "description": "Encode a geometry as a GeoJSON object.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/format/geojsonformat.js",
      "params": [
        {
          "name": "geometry",
          "types": [
            "ol.geom.Geometry"
          ]
        },
        {
          "name": "opt_options",
          "types": [
            "olx.format.WriteOptions"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "GeoJSONGeometry",
          "GeoJSONGeometryCollection"
        ]
      },
      "provides": [
        "ol.format.GeoJSON"
      ]
    },
    {
      "name": "ol.format.GPX",
      "kind": "class",
      "description": "Feature format for reading and writing data in the GPX format.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/format/gpxformat.js",
      "extends": "ol.format.Feature",
      "params": [
        {
          "name": "opt_options",
          "types": [
            "olx.format.GPXOptions"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.format.GPX"
      ]
    },
    {
      "name": "ol.format.GPX#readFeature",
      "kind": "function",
      "description": "Read the first feature from a GPX source.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/format/gpxformat.js",
      "params": [
        {
          "name": "source",
          "types": [
            "ArrayBuffer",
            "Document",
            "Node",
            "Object",
            "string"
          ]
        },
        {
          "name": "opt_options",
          "types": [
            "olx.format.ReadOptions"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.Feature"
        ]
      },
      "provides": [
        "ol.format.GPX"
      ]
    },
    {
      "name": "ol.format.GPX#readFeatures",
      "kind": "function",
      "description": "Read all features from a GPX source.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/format/gpxformat.js",
      "params": [
        {
          "name": "source",
          "types": [
            "ArrayBuffer",
            "Document",
            "Node",
            "Object",
            "string"
          ]
        },
        {
          "name": "opt_options",
          "types": [
            "olx.format.ReadOptions"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "Array.<ol.Feature>"
        ]
      },
      "provides": [
        "ol.format.GPX"
      ]
    },
    {
      "name": "ol.format.GPX#readProjection",
      "kind": "function",
      "description": "Read the projection from a GPX source.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/format/gpxformat.js",
      "params": [
        {
          "name": "source",
          "types": [
            "ArrayBuffer",
            "Document",
            "Node",
            "Object",
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.proj.Projection"
        ]
      },
      "provides": [
        "ol.format.GPX"
      ]
    },
    {
      "name": "ol.format.GPX#writeFeatures",
      "kind": "function",
      "description": "Encode an array of features in the GPX format.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/format/gpxformat.js",
      "params": [
        {
          "name": "features",
          "types": [
            "Array.<ol.Feature>"
          ]
        },
        {
          "name": "opt_options",
          "types": [
            "olx.format.WriteOptions"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "string"
        ]
      },
      "provides": [
        "ol.format.GPX"
      ]
    },
    {
      "name": "ol.format.GPX#writeFeaturesNode",
      "kind": "function",
      "description": "Encode an array of features in the GPX format as an XML node.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/format/gpxformat.js",
      "params": [
        {
          "name": "features",
          "types": [
            "Array.<ol.Feature>"
          ]
        },
        {
          "name": "opt_options",
          "types": [
            "olx.format.WriteOptions"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "Node"
        ]
      },
      "provides": [
        "ol.format.GPX"
      ]
    },
    {
      "name": "ol.format.IGC",
      "kind": "class",
      "description": "Feature format for `*.igc` flight recording files.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/format/igcformat.js",
      "extends": "ol.format.Feature",
      "params": [
        {
          "name": "opt_options",
          "types": [
            "olx.format.IGCOptions"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.format.IGC",
        "ol.format.IGCZ"
      ]
    },
    {
      "name": "ol.format.IGC#readFeature",
      "kind": "function",
      "description": "Read the feature from the IGC source.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/format/igcformat.js",
      "params": [
        {
          "name": "source",
          "types": [
            "ArrayBuffer",
            "Document",
            "Node",
            "Object",
            "string"
          ]
        },
        {
          "name": "opt_options",
          "types": [
            "olx.format.ReadOptions"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.Feature"
        ]
      },
      "provides": [
        "ol.format.IGC",
        "ol.format.IGCZ"
      ]
    },
    {
      "name": "ol.format.IGC#readFeatures",
      "kind": "function",
      "description": "Read the feature from the source. As IGC sources contain a single\nfeature, this will return the feature in an array.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/format/igcformat.js",
      "params": [
        {
          "name": "source",
          "types": [
            "ArrayBuffer",
            "Document",
            "Node",
            "Object",
            "string"
          ]
        },
        {
          "name": "opt_options",
          "types": [
            "olx.format.ReadOptions"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "Array.<ol.Feature>"
        ]
      },
      "provides": [
        "ol.format.IGC",
        "ol.format.IGCZ"
      ]
    },
    {
      "name": "ol.format.IGC#readProjection",
      "kind": "function",
      "description": "Read the projection from the IGC source.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/format/igcformat.js",
      "params": [
        {
          "name": "source",
          "types": [
            "ArrayBuffer",
            "Document",
            "Node",
            "Object",
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.proj.Projection"
        ]
      },
      "provides": [
        "ol.format.IGC",
        "ol.format.IGCZ"
      ]
    },
    {
      "name": "ol.format.KML",
      "kind": "class",
      "description": "Feature format for reading and writing data in the KML format.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/format/kmlformat.js",
      "extends": "ol.format.Feature",
      "params": [
        {
          "name": "opt_options",
          "types": [
            "olx.format.KMLOptions"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.format.KML"
      ]
    },
    {
      "name": "ol.format.KML#readFeature",
      "kind": "function",
      "description": "Read the first feature from a KML source.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/format/kmlformat.js",
      "params": [
        {
          "name": "source",
          "types": [
            "ArrayBuffer",
            "Document",
            "Node",
            "Object",
            "string"
          ]
        },
        {
          "name": "opt_options",
          "types": [
            "olx.format.ReadOptions"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.Feature"
        ]
      },
      "provides": [
        "ol.format.KML"
      ]
    },
    {
      "name": "ol.format.KML#readFeatures",
      "kind": "function",
      "description": "Read all features from a KML source.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/format/kmlformat.js",
      "params": [
        {
          "name": "source",
          "types": [
            "ArrayBuffer",
            "Document",
            "Node",
            "Object",
            "string"
          ]
        },
        {
          "name": "opt_options",
          "types": [
            "olx.format.ReadOptions"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "Array.<ol.Feature>"
        ]
      },
      "provides": [
        "ol.format.KML"
      ]
    },
    {
      "name": "ol.format.KML#readName",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/format/kmlformat.js",
      "params": [
        {
          "name": "source",
          "types": [
            "Document",
            "Node",
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "string",
          "undefined"
        ]
      },
      "provides": [
        "ol.format.KML"
      ]
    },
    {
      "name": "ol.format.KML#readNetworkLinks",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/format/kmlformat.js",
      "params": [
        {
          "name": "source",
          "types": [
            "Document",
            "Node",
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "Array.<Object>"
        ]
      },
      "provides": [
        "ol.format.KML"
      ]
    },
    {
      "name": "ol.format.KML#readProjection",
      "kind": "function",
      "description": "Read the projection from a KML source.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/format/kmlformat.js",
      "params": [
        {
          "name": "source",
          "types": [
            "ArrayBuffer",
            "Document",
            "Node",
            "Object",
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.proj.Projection"
        ]
      },
      "provides": [
        "ol.format.KML"
      ]
    },
    {
      "name": "ol.format.KML#writeFeatures",
      "kind": "function",
      "description": "Encode an array of features in the KML format.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/format/kmlformat.js",
      "params": [
        {
          "name": "features",
          "types": [
            "Array.<ol.Feature>"
          ]
        },
        {
          "name": "opt_options",
          "types": [
            "olx.format.WriteOptions"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "string"
        ]
      },
      "provides": [
        "ol.format.KML"
      ]
    },
    {
      "name": "ol.format.KML#writeFeaturesNode",
      "kind": "function",
      "description": "Encode an array of features in the KML format as an XML node.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/format/kmlformat.js",
      "params": [
        {
          "name": "features",
          "types": [
            "Array.<ol.Feature>"
          ]
        },
        {
          "name": "opt_options",
          "types": [
            "olx.format.WriteOptions"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "Node"
        ]
      },
      "provides": [
        "ol.format.KML"
      ]
    },
    {
      "name": "ol.format.OSMXML",
      "kind": "class",
      "description": "Feature format for reading data in the\n[OSMXML format](http://wiki.openstreetmap.org/wiki/OSM_XML).",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/format/osmxmlformat.js",
      "extends": "ol.format.Feature",
      "provides": [
        "ol.format.OSMXML"
      ]
    },
    {
      "name": "ol.format.OSMXML#readFeatures",
      "kind": "function",
      "description": "Read all features from an OSM source.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/format/osmxmlformat.js",
      "params": [
        {
          "name": "source",
          "types": [
            "ArrayBuffer",
            "Document",
            "Node",
            "Object",
            "string"
          ]
        },
        {
          "name": "opt_options",
          "types": [
            "olx.format.ReadOptions"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "Array.<ol.Feature>"
        ]
      },
      "provides": [
        "ol.format.OSMXML"
      ]
    },
    {
      "name": "ol.format.OSMXML#readProjection",
      "kind": "function",
      "description": "Read the projection from an OSM source.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/format/osmxmlformat.js",
      "params": [
        {
          "name": "source",
          "types": [
            "ArrayBuffer",
            "Document",
            "Node",
            "Object",
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.proj.Projection"
        ]
      },
      "provides": [
        "ol.format.OSMXML"
      ]
    },
    {
      "name": "ol.format.Polyline",
      "kind": "class",
      "description": "Feature format for reading and writing data in the Encoded\nPolyline Algorithm Format.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/format/polylineformat.js",
      "extends": "ol.format.Feature",
      "params": [
        {
          "name": "opt_options",
          "types": [
            "olx.format.PolylineOptions"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.format.Polyline"
      ]
    },
    {
      "name": "ol.format.Polyline.encodeDeltas",
      "kind": "function",
      "description": "Encode a list of n-dimensional points and return an encoded string\n\nAttention: This function will modify the passed array!",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/format/polylineformat.js",
      "params": [
        {
          "name": "numbers",
          "types": [
            "Array.<number>"
          ]
        },
        {
          "name": "stride",
          "types": [
            "number"
          ]
        },
        {
          "name": "opt_factor",
          "types": [
            "number"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "string"
        ]
      },
      "provides": [
        "ol.format.Polyline"
      ]
    },
    {
      "name": "ol.format.Polyline.decodeDeltas",
      "kind": "function",
      "description": "Decode a list of n-dimensional points from an encoded string",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/format/polylineformat.js",
      "params": [
        {
          "name": "encoded",
          "types": [
            "string"
          ]
        },
        {
          "name": "stride",
          "types": [
            "number"
          ]
        },
        {
          "name": "opt_factor",
          "types": [
            "number"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "Array.<number>"
        ]
      },
      "provides": [
        "ol.format.Polyline"
      ]
    },
    {
      "name": "ol.format.Polyline.encodeFloats",
      "kind": "function",
      "description": "Encode a list of floating point numbers and return an encoded string\n\nAttention: This function will modify the passed array!",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/format/polylineformat.js",
      "params": [
        {
          "name": "numbers",
          "types": [
            "Array.<number>"
          ]
        },
        {
          "name": "opt_factor",
          "types": [
            "number"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "string"
        ]
      },
      "provides": [
        "ol.format.Polyline"
      ]
    },
    {
      "name": "ol.format.Polyline.decodeFloats",
      "kind": "function",
      "description": "Decode a list of floating point numbers from an encoded string",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/format/polylineformat.js",
      "params": [
        {
          "name": "encoded",
          "types": [
            "string"
          ]
        },
        {
          "name": "opt_factor",
          "types": [
            "number"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "Array.<number>"
        ]
      },
      "provides": [
        "ol.format.Polyline"
      ]
    },
    {
      "name": "ol.format.Polyline#readFeature",
      "kind": "function",
      "description": "Read the feature from the Polyline source. The coordinates are assumed to be\nin two dimensions and in latitude, longitude order.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/format/polylineformat.js",
      "params": [
        {
          "name": "source",
          "types": [
            "ArrayBuffer",
            "Document",
            "Node",
            "Object",
            "string"
          ]
        },
        {
          "name": "opt_options",
          "types": [
            "olx.format.ReadOptions"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.Feature"
        ]
      },
      "provides": [
        "ol.format.Polyline"
      ]
    },
    {
      "name": "ol.format.Polyline#readFeatures",
      "kind": "function",
      "description": "Read the feature from the source. As Polyline sources contain a single\nfeature, this will return the feature in an array.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/format/polylineformat.js",
      "params": [
        {
          "name": "source",
          "types": [
            "ArrayBuffer",
            "Document",
            "Node",
            "Object",
            "string"
          ]
        },
        {
          "name": "opt_options",
          "types": [
            "olx.format.ReadOptions"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "Array.<ol.Feature>"
        ]
      },
      "provides": [
        "ol.format.Polyline"
      ]
    },
    {
      "name": "ol.format.Polyline#readGeometry",
      "kind": "function",
      "description": "Read the geometry from the source.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/format/polylineformat.js",
      "params": [
        {
          "name": "source",
          "types": [
            "ArrayBuffer",
            "Document",
            "Node",
            "Object",
            "string"
          ]
        },
        {
          "name": "opt_options",
          "types": [
            "olx.format.ReadOptions"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.geom.Geometry"
        ]
      },
      "provides": [
        "ol.format.Polyline"
      ]
    },
    {
      "name": "ol.format.Polyline#readProjection",
      "kind": "function",
      "description": "Read the projection from a Polyline source.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/format/polylineformat.js",
      "params": [
        {
          "name": "source",
          "types": [
            "ArrayBuffer",
            "Document",
            "Node",
            "Object",
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.proj.Projection"
        ]
      },
      "provides": [
        "ol.format.Polyline"
      ]
    },
    {
      "name": "ol.format.Polyline#writeGeometry",
      "kind": "function",
      "description": "Write a single geometry in Polyline format.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/format/polylineformat.js",
      "params": [
        {
          "name": "geometry",
          "types": [
            "ol.geom.Geometry"
          ]
        },
        {
          "name": "opt_options",
          "types": [
            "olx.format.WriteOptions"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "string"
        ]
      },
      "provides": [
        "ol.format.Polyline"
      ]
    },
    {
      "name": "ol.format.TopoJSON",
      "kind": "class",
      "description": "Feature format for reading and writing data in the TopoJSON format.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/format/topojsonformat.js",
      "extends": "ol.format.Feature",
      "params": [
        {
          "name": "opt_options",
          "types": [
            "olx.format.TopoJSONOptions"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.format.TopoJSON"
      ]
    },
    {
      "name": "ol.format.TopoJSON#readFeatures",
      "kind": "function",
      "description": "Read all features from a TopoJSON source.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/format/topojsonformat.js",
      "params": [
        {
          "name": "source",
          "types": [
            "ArrayBuffer",
            "Document",
            "Node",
            "Object",
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "Array.<ol.Feature>"
        ]
      },
      "provides": [
        "ol.format.TopoJSON"
      ]
    },
    {
      "name": "ol.format.TopoJSON#readProjection",
      "kind": "function",
      "description": "Read the projection from a TopoJSON source.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/format/topojsonformat.js",
      "params": [
        {
          "name": "object",
          "types": [
            "ArrayBuffer",
            "Document",
            "Node",
            "Object",
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.proj.Projection"
        ]
      },
      "provides": [
        "ol.format.TopoJSON"
      ]
    },
    {
      "name": "ol.format.WFS",
      "kind": "class",
      "description": "Feature format for reading and writing data in the WFS format.\nBy default, supports WFS version 1.1.0. You can pass a GML format\nas option if you want to read a WFS that contains GML2 (WFS 1.0.0).\nAlso see {@link ol.format.GMLBase} which is used by this format.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/format/wfsformat.js",
      "extends": "ol.format.Feature",
      "params": [
        {
          "name": "opt_options",
          "types": [
            "olx.format.WFSOptions"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.format.WFS"
      ]
    },
    {
      "name": "ol.format.WFS#readFeatures",
      "kind": "function",
      "description": "Read all features from a WFS FeatureCollection.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/format/wfsformat.js",
      "params": [
        {
          "name": "source",
          "types": [
            "ArrayBuffer",
            "Document",
            "Node",
            "Object",
            "string"
          ]
        },
        {
          "name": "opt_options",
          "types": [
            "olx.format.ReadOptions"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "Array.<ol.Feature>"
        ]
      },
      "provides": [
        "ol.format.WFS"
      ]
    },
    {
      "name": "ol.format.WFS#readTransactionResponse",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/format/wfsformat.js",
      "params": [
        {
          "name": "source",
          "types": [
            "ArrayBuffer",
            "Document",
            "Node",
            "Object",
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.format.WFS.TransactionResponse",
          "undefined"
        ]
      },
      "provides": [
        "ol.format.WFS"
      ]
    },
    {
      "name": "ol.format.WFS#readFeatureCollectionMetadata",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/format/wfsformat.js",
      "params": [
        {
          "name": "source",
          "types": [
            "ArrayBuffer",
            "Document",
            "Node",
            "Object",
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.format.WFS.FeatureCollectionMetadata",
          "undefined"
        ]
      },
      "provides": [
        "ol.format.WFS"
      ]
    },
    {
      "name": "ol.format.WFS#writeGetFeature",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/format/wfsformat.js",
      "params": [
        {
          "name": "options",
          "types": [
            "olx.format.WFSWriteGetFeatureOptions"
          ]
        }
      ],
      "returns": {
        "types": [
          "Node"
        ]
      },
      "provides": [
        "ol.format.WFS"
      ]
    },
    {
      "name": "ol.format.WFS#writeTransaction",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/format/wfsformat.js",
      "params": [
        {
          "name": "inserts",
          "types": [
            "Array.<ol.Feature>"
          ]
        },
        {
          "name": "updates",
          "types": [
            "Array.<ol.Feature>"
          ]
        },
        {
          "name": "deletes",
          "types": [
            "Array.<ol.Feature>"
          ]
        },
        {
          "name": "options",
          "types": [
            "olx.format.WFSWriteTransactionOptions"
          ]
        }
      ],
      "returns": {
        "types": [
          "Node"
        ]
      },
      "provides": [
        "ol.format.WFS"
      ]
    },
    {
      "name": "ol.format.WFS#readProjection",
      "kind": "function",
      "description": "Read the projection from a WFS source.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/format/wfsformat.js",
      "params": [
        {
          "name": "source",
          "types": [
            "ArrayBuffer",
            "Document",
            "Node",
            "Object",
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.proj.Projection"
        ],
        "nullable": true
      },
      "provides": [
        "ol.format.WFS"
      ]
    },
    {
      "name": "ol.format.WKT",
      "kind": "class",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/format/wktformat.js",
      "extends": "ol.format.Feature",
      "params": [
        {
          "name": "opt_options",
          "types": [
            "olx.format.WKTOptions"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.format.WKT"
      ]
    },
    {
      "name": "ol.format.WKT#readFeature",
      "kind": "function",
      "description": "Read a feature from a WKT source.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/format/wktformat.js",
      "params": [
        {
          "name": "source",
          "types": [
            "ArrayBuffer",
            "Document",
            "Node",
            "Object",
            "string"
          ]
        },
        {
          "name": "opt_options",
          "types": [
            "olx.format.ReadOptions"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.Feature"
        ]
      },
      "provides": [
        "ol.format.WKT"
      ]
    },
    {
      "name": "ol.format.WKT#readFeatures",
      "kind": "function",
      "description": "Read all features from a WKT source.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/format/wktformat.js",
      "params": [
        {
          "name": "source",
          "types": [
            "ArrayBuffer",
            "Document",
            "Node",
            "Object",
            "string"
          ]
        },
        {
          "name": "opt_options",
          "types": [
            "olx.format.ReadOptions"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "Array.<ol.Feature>"
        ]
      },
      "provides": [
        "ol.format.WKT"
      ]
    },
    {
      "name": "ol.format.WKT#readGeometry",
      "kind": "function",
      "description": "Read a single geometry from a WKT source.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/format/wktformat.js",
      "params": [
        {
          "name": "source",
          "types": [
            "ArrayBuffer",
            "Document",
            "Node",
            "Object",
            "string"
          ]
        },
        {
          "name": "opt_options",
          "types": [
            "olx.format.ReadOptions"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.geom.Geometry"
        ]
      },
      "provides": [
        "ol.format.WKT"
      ]
    },
    {
      "name": "ol.format.WKT#writeFeature",
      "kind": "function",
      "description": "Encode a feature as a WKT string.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/format/wktformat.js",
      "params": [
        {
          "name": "feature",
          "types": [
            "ol.Feature"
          ]
        },
        {
          "name": "opt_options",
          "types": [
            "olx.format.WriteOptions"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "string"
        ]
      },
      "provides": [
        "ol.format.WKT"
      ]
    },
    {
      "name": "ol.format.WKT#writeFeatures",
      "kind": "function",
      "description": "Encode an array of features as a WKT string.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/format/wktformat.js",
      "params": [
        {
          "name": "features",
          "types": [
            "Array.<ol.Feature>"
          ]
        },
        {
          "name": "opt_options",
          "types": [
            "olx.format.WriteOptions"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "string"
        ]
      },
      "provides": [
        "ol.format.WKT"
      ]
    },
    {
      "name": "ol.format.WKT#writeGeometry",
      "kind": "function",
      "description": "Write a single geometry as a WKT string.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/format/wktformat.js",
      "params": [
        {
          "name": "geometry",
          "types": [
            "ol.geom.Geometry"
          ]
        }
      ],
      "returns": {
        "types": [
          "string"
        ]
      },
      "provides": [
        "ol.format.WKT"
      ]
    },
    {
      "name": "ol.format.WMSCapabilities",
      "kind": "class",
      "description": "Format for reading WMS capabilities data",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/format/wmscapabilitiesformat.js",
      "extends": "ol.format.XML",
      "provides": [
        "ol.format.WMSCapabilities"
      ]
    },
    {
      "name": "ol.format.WMSCapabilities#read",
      "kind": "function",
      "description": "Read a WMS capabilities document.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/format/wmscapabilitiesformat.js",
      "params": [
        {
          "name": "source",
          "types": [
            "Document",
            "Node",
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "Object"
        ]
      },
      "provides": [
        "ol.format.WMSCapabilities"
      ]
    },
    {
      "name": "ol.format.WMSGetFeatureInfo",
      "kind": "class",
      "description": "Format for reading WMSGetFeatureInfo format. It uses\n{@link ol.format.GML2} to read features.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/format/wmsgetfeatureinfoformat.js",
      "extends": "ol.format.Feature",
      "provides": [
        "ol.format.WMSGetFeatureInfo"
      ]
    },
    {
      "name": "ol.format.WMSGetFeatureInfo#readFeatures",
      "kind": "function",
      "description": "Read all features from a WMSGetFeatureInfo response.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/format/wmsgetfeatureinfoformat.js",
      "params": [
        {
          "name": "source",
          "types": [
            "ArrayBuffer",
            "Document",
            "Node",
            "Object",
            "string"
          ]
        },
        {
          "name": "opt_options",
          "types": [
            "olx.format.ReadOptions"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "Array.<ol.Feature>"
        ]
      },
      "provides": [
        "ol.format.WMSGetFeatureInfo"
      ]
    },
    {
      "name": "ol.format.WMTSCapabilities",
      "kind": "class",
      "description": "Format for reading WMTS capabilities data.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/format/wmtscapabilitiesformat.js",
      "extends": "ol.format.XML",
      "provides": [
        "ol.format.WMTSCapabilities"
      ]
    },
    {
      "name": "ol.format.WMTSCapabilities#read",
      "kind": "function",
      "description": "Read a WMTS capabilities document.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/format/wmtscapabilitiesformat.js",
      "params": [
        {
          "name": "source",
          "types": [
            "Document",
            "Node",
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "Object"
        ]
      },
      "provides": [
        "ol.format.WMTSCapabilities"
      ]
    },
    {
      "name": "ol.format.GML2",
      "kind": "class",
      "description": "Feature format for reading and writing data in the GML format,\nversion 2.1.2.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/format/gml/gml2format.js",
      "extends": "ol.format.GMLBase",
      "params": [
        {
          "name": "opt_options",
          "types": [
            "olx.format.GMLOptions"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.format.GML2"
      ]
    },
    {
      "name": "ol.format.GML3",
      "kind": "class",
      "description": "Feature format for reading and writing data in the GML format\nversion 3.1.1.\nCurrently only supports GML 3.1.1 Simple Features profile.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/format/gml/gml3format.js",
      "extends": "ol.format.GMLBase",
      "params": [
        {
          "name": "opt_options",
          "types": [
            "olx.format.GMLOptions"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.format.GML",
        "ol.format.GML3"
      ]
    },
    {
      "name": "ol.format.GML3#writeGeometryNode",
      "kind": "function",
      "description": "Encode a geometry in GML 3.1.1 Simple Features.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/format/gml/gml3format.js",
      "params": [
        {
          "name": "geometry",
          "types": [
            "ol.geom.Geometry"
          ]
        },
        {
          "name": "opt_options",
          "types": [
            "olx.format.WriteOptions"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "Node"
        ]
      },
      "provides": [
        "ol.format.GML",
        "ol.format.GML3"
      ]
    },
    {
      "name": "ol.format.GML3#writeFeatures",
      "kind": "function",
      "description": "Encode an array of features in GML 3.1.1 Simple Features.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/format/gml/gml3format.js",
      "params": [
        {
          "name": "features",
          "types": [
            "Array.<ol.Feature>"
          ]
        },
        {
          "name": "opt_options",
          "types": [
            "olx.format.WriteOptions"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "string"
        ]
      },
      "provides": [
        "ol.format.GML",
        "ol.format.GML3"
      ]
    },
    {
      "name": "ol.format.GML3#writeFeaturesNode",
      "kind": "function",
      "description": "Encode an array of features in the GML 3.1.1 format as an XML node.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/format/gml/gml3format.js",
      "params": [
        {
          "name": "features",
          "types": [
            "Array.<ol.Feature>"
          ]
        },
        {
          "name": "opt_options",
          "types": [
            "olx.format.WriteOptions"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "Node"
        ]
      },
      "provides": [
        "ol.format.GML",
        "ol.format.GML3"
      ]
    },
    {
      "name": "ol.format.GML",
      "kind": "class",
      "description": "Feature format for reading and writing data in the GML format\nversion 3.1.1.\nCurrently only supports GML 3.1.1 Simple Features profile.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/format/gml/gml3format.js",
      "extends": "ol.format.GMLBase",
      "params": [
        {
          "name": "opt_options",
          "types": [
            "olx.format.GMLOptions"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.format.GML",
        "ol.format.GML3"
      ]
    },
    {
      "name": "ol.format.GML#writeFeatures",
      "kind": "function",
      "description": "Encode an array of features in GML 3.1.1 Simple Features.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/format/gml/gml3format.js",
      "params": [
        {
          "name": "features",
          "types": [
            "Array.<ol.Feature>"
          ]
        },
        {
          "name": "opt_options",
          "types": [
            "olx.format.WriteOptions"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "string"
        ]
      },
      "provides": [
        "ol.format.GML",
        "ol.format.GML3"
      ]
    },
    {
      "name": "ol.format.GML#writeFeaturesNode",
      "kind": "function",
      "description": "Encode an array of features in the GML 3.1.1 format as an XML node.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/format/gml/gml3format.js",
      "params": [
        {
          "name": "features",
          "types": [
            "Array.<ol.Feature>"
          ]
        },
        {
          "name": "opt_options",
          "types": [
            "olx.format.WriteOptions"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "Node"
        ]
      },
      "provides": [
        "ol.format.GML",
        "ol.format.GML3"
      ]
    },
    {
      "name": "ol.format.GMLBase",
      "kind": "class",
      "description": "Abstract base class; normally only used for creating subclasses and not\ninstantiated in apps.\nFeature base format for reading and writing data in the GML format.\nThis class cannot be instantiate, it contains only base content that\nis shared with versioned format classes ol.format.GML2 and\nol.format.GML3.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/format/gml/gmlbaseformat.js",
      "extends": "ol.format.Feature",
      "params": [
        {
          "name": "opt_options",
          "types": [
            "olx.format.GMLOptions"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.format.GMLBase"
      ]
    },
    {
      "name": "ol.format.GMLBase#readFeatures",
      "kind": "function",
      "description": "Read all features from a GML FeatureCollection.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/format/gml/gmlbaseformat.js",
      "params": [
        {
          "name": "source",
          "types": [
            "ArrayBuffer",
            "Document",
            "Node",
            "Object",
            "string"
          ]
        },
        {
          "name": "opt_options",
          "types": [
            "olx.format.ReadOptions"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "Array.<ol.Feature>"
        ]
      },
      "provides": [
        "ol.format.GMLBase"
      ]
    },
    {
      "name": "ol.events.condition.altKeyOnly",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/events/condition.js",
      "params": [
        {
          "name": "mapBrowserEvent",
          "types": [
            "ol.MapBrowserEvent"
          ]
        }
      ],
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.events.ConditionType",
        "ol.events.condition"
      ]
    },
    {
      "name": "ol.events.condition.altShiftKeysOnly",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/events/condition.js",
      "params": [
        {
          "name": "mapBrowserEvent",
          "types": [
            "ol.MapBrowserEvent"
          ]
        }
      ],
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.events.ConditionType",
        "ol.events.condition"
      ]
    },
    {
      "name": "ol.events.condition.always",
      "kind": "function",
      "description": "Always true.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/events/condition.js",
      "params": [
        {
          "name": "mapBrowserEvent",
          "types": [
            "ol.MapBrowserEvent"
          ]
        }
      ],
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.events.ConditionType",
        "ol.events.condition"
      ]
    },
    {
      "name": "ol.events.condition.click",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/events/condition.js",
      "params": [
        {
          "name": "mapBrowserEvent",
          "types": [
            "ol.MapBrowserEvent"
          ]
        }
      ],
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.events.ConditionType",
        "ol.events.condition"
      ]
    },
    {
      "name": "ol.events.condition.mouseMove",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/events/condition.js",
      "params": [
        {
          "name": "mapBrowserEvent",
          "types": [
            "ol.MapBrowserEvent"
          ]
        }
      ],
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.events.ConditionType",
        "ol.events.condition"
      ]
    },
    {
      "name": "ol.events.condition.never",
      "kind": "function",
      "description": "Always false.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/events/condition.js",
      "params": [
        {
          "name": "mapBrowserEvent",
          "types": [
            "ol.MapBrowserEvent"
          ]
        }
      ],
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.events.ConditionType",
        "ol.events.condition"
      ]
    },
    {
      "name": "ol.events.condition.singleClick",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/events/condition.js",
      "params": [
        {
          "name": "mapBrowserEvent",
          "types": [
            "ol.MapBrowserEvent"
          ]
        }
      ],
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.events.ConditionType",
        "ol.events.condition"
      ]
    },
    {
      "name": "ol.events.condition.noModifierKeys",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/events/condition.js",
      "params": [
        {
          "name": "mapBrowserEvent",
          "types": [
            "ol.MapBrowserEvent"
          ]
        }
      ],
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.events.ConditionType",
        "ol.events.condition"
      ]
    },
    {
      "name": "ol.events.condition.platformModifierKeyOnly",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/events/condition.js",
      "params": [
        {
          "name": "mapBrowserEvent",
          "types": [
            "ol.MapBrowserEvent"
          ]
        }
      ],
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.events.ConditionType",
        "ol.events.condition"
      ]
    },
    {
      "name": "ol.events.condition.shiftKeyOnly",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/events/condition.js",
      "params": [
        {
          "name": "mapBrowserEvent",
          "types": [
            "ol.MapBrowserEvent"
          ]
        }
      ],
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.events.ConditionType",
        "ol.events.condition"
      ]
    },
    {
      "name": "ol.events.condition.targetNotEditable",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/events/condition.js",
      "params": [
        {
          "name": "mapBrowserEvent",
          "types": [
            "ol.MapBrowserEvent"
          ]
        }
      ],
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.events.ConditionType",
        "ol.events.condition"
      ]
    },
    {
      "name": "ol.events.condition.mouseOnly",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/events/condition.js",
      "params": [
        {
          "name": "mapBrowserEvent",
          "types": [
            "ol.MapBrowserEvent"
          ]
        }
      ],
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.events.ConditionType",
        "ol.events.condition"
      ]
    },
    {
      "name": "ol.dom.Input",
      "kind": "class",
      "description": "Helper class for binding HTML input to an {@link ol.Object}.\n\nExample:\n\n    // bind a checkbox with id 'visible' to a layer's visibility\n    var visible = new ol.dom.Input(document.getElementById('visible'));\n    visible.bindTo('checked', layer, 'visible');",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/dom/input.js",
      "extends": "ol.Object",
      "params": [
        {
          "name": "target",
          "types": [
            "Element"
          ]
        }
      ],
      "provides": [
        "ol.dom.Input",
        "ol.dom.InputProperty"
      ]
    },
    {
      "name": "ol.dom.Input#getChecked",
      "kind": "function",
      "description": "If the input is a checkbox, return whether or not the checkbox is checked.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/dom/input.js",
      "returns": {
        "types": [
          "boolean",
          "undefined"
        ]
      },
      "provides": [
        "ol.dom.Input",
        "ol.dom.InputProperty"
      ]
    },
    {
      "name": "ol.dom.Input#getValue",
      "kind": "function",
      "description": "Get the value of the input.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/dom/input.js",
      "returns": {
        "types": [
          "string",
          "undefined"
        ]
      },
      "provides": [
        "ol.dom.Input",
        "ol.dom.InputProperty"
      ]
    },
    {
      "name": "ol.dom.Input#setValue",
      "kind": "function",
      "description": "Sets the value of the input.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/dom/input.js",
      "params": [
        {
          "name": "value",
          "types": [
            "string"
          ]
        }
      ],
      "provides": [
        "ol.dom.Input",
        "ol.dom.InputProperty"
      ]
    },
    {
      "name": "ol.dom.Input#setChecked",
      "kind": "function",
      "description": "Set whether or not a checkbox is checked.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/dom/input.js",
      "params": [
        {
          "name": "checked",
          "types": [
            "boolean"
          ]
        }
      ],
      "provides": [
        "ol.dom.Input",
        "ol.dom.InputProperty"
      ]
    },
    {
      "name": "ol.control.Attribution",
      "kind": "class",
      "description": "Control to show all the attributions associated with the layer sources\nin the map. This control is one of the default controls included in maps.\nBy default it will show in the bottom right portion of the map, but this can\nbe changed by using a css selector for `.ol-attribution`.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/control/attributioncontrol.js",
      "extends": "ol.control.Control",
      "params": [
        {
          "name": "opt_options",
          "types": [
            "olx.control.AttributionOptions"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.control.Attribution"
      ]
    },
    {
      "name": "ol.control.Attribution.render",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/control/attributioncontrol.js",
      "params": [
        {
          "name": "mapEvent",
          "types": [
            "ol.MapEvent"
          ]
        }
      ],
      "provides": [
        "ol.control.Attribution"
      ]
    },
    {
      "name": "ol.control.Attribution#getCollapsible",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/control/attributioncontrol.js",
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.control.Attribution"
      ]
    },
    {
      "name": "ol.control.Attribution#setCollapsible",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/control/attributioncontrol.js",
      "params": [
        {
          "name": "collapsible",
          "types": [
            "boolean"
          ]
        }
      ],
      "provides": [
        "ol.control.Attribution"
      ]
    },
    {
      "name": "ol.control.Attribution#setCollapsed",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/control/attributioncontrol.js",
      "params": [
        {
          "name": "collapsed",
          "types": [
            "boolean"
          ]
        }
      ],
      "provides": [
        "ol.control.Attribution"
      ]
    },
    {
      "name": "ol.control.Attribution#getCollapsed",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/control/attributioncontrol.js",
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.control.Attribution"
      ]
    },
    {
      "name": "ol.control.Control",
      "kind": "class",
      "description": "A control is a visible widget with a DOM element in a fixed position on the\nscreen. They can involve user input (buttons), or be informational only;\nthe position is determined using CSS. By default these are placed in the\ncontainer with CSS class name `ol-overlaycontainer-stopevent`, but can use\nany outside DOM element.\n\nThis is the base class for controls. You can use it for simple custom\ncontrols by creating the element with listeners, creating an instance:\n```js\nvar myControl = new ol.control.Control({element: myElement});\n```\nand then adding this to the map.\n\nThe main advantage of having this as a control rather than a simple separate\nDOM element is that preventing propagation is handled for you. Controls\nwill also be `ol.Object`s in a `ol.Collection`, so you can use their\nmethods.\n\nYou can also extend this base for your own control class. See\nexamples/custom-controls for an example of how to do this.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/control/control.js",
      "extends": "ol.Object",
      "params": [
        {
          "name": "options",
          "types": [
            "olx.control.ControlOptions"
          ]
        }
      ],
      "provides": [
        "ol.control.Control"
      ]
    },
    {
      "name": "ol.control.Control#getMap",
      "kind": "function",
      "description": "Get the map associated with this control.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/control/control.js",
      "returns": {
        "types": [
          "ol.Map"
        ]
      },
      "provides": [
        "ol.control.Control"
      ]
    },
    {
      "name": "ol.control.Control#setMap",
      "kind": "function",
      "description": "Remove the control from its current map and attach it to the new map.\nSubclasses may set up event handlers to get notified about changes to\nthe map here.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/control/control.js",
      "params": [
        {
          "name": "map",
          "types": [
            "ol.Map"
          ]
        }
      ],
      "provides": [
        "ol.control.Control"
      ]
    },
    {
      "name": "ol.control.Control#setTarget",
      "kind": "function",
      "description": "This function is used to set a target element for the control. It has no\neffect if it is called after the control has been added to the map (i.e.\nafter `setMap` is called on the control). If no `target` is set in the\noptions passed to the control constructor and if `setTarget` is not called\nthen the control is added to the map's overlay container.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/control/control.js",
      "params": [
        {
          "name": "target",
          "types": [
            "Element",
            "string"
          ]
        }
      ],
      "provides": [
        "ol.control.Control"
      ]
    },
    {
      "name": "ol.control.defaults",
      "kind": "function",
      "description": "Set of controls included in maps by default. Unless configured otherwise,\nthis returns a collection containing an instance of each of the following\ncontrols:\n* {@link ol.control.Zoom}\n* {@link ol.control.Rotate}\n* {@link ol.control.Attribution}",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/control/controldefaults.js",
      "params": [
        {
          "name": "opt_options",
          "types": [
            "olx.control.DefaultsOptions"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.Collection.<ol.control.Control>"
        ]
      },
      "provides": [
        "ol.control"
      ]
    },
    {
      "name": "ol.control.FullScreen",
      "kind": "class",
      "description": "Provides a button that when clicked fills up the full screen with the map.\nWhen in full screen mode, a close button is shown to exit full screen mode.\nThe [Fullscreen API](http://www.w3.org/TR/fullscreen/) is used to\ntoggle the map in full screen mode.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/control/fullscreencontrol.js",
      "extends": "ol.control.Control",
      "params": [
        {
          "name": "opt_options",
          "types": [
            "olx.control.FullScreenOptions"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.control.FullScreen"
      ]
    },
    {
      "name": "ol.control.MousePosition",
      "kind": "class",
      "description": "A control to show the 2D coordinates of the mouse cursor. By default, these\nare in the view projection, but can be in any supported projection.\nBy default the control is shown in the top right corner of the map, but this\ncan be changed by using the css selector `.ol-mouse-position`.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/control/mousepositioncontrol.js",
      "extends": "ol.control.Control",
      "params": [
        {
          "name": "opt_options",
          "types": [
            "olx.control.MousePositionOptions"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.control.MousePosition"
      ]
    },
    {
      "name": "ol.control.MousePosition.render",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/control/mousepositioncontrol.js",
      "params": [
        {
          "name": "mapEvent",
          "types": [
            "ol.MapEvent"
          ]
        }
      ],
      "provides": [
        "ol.control.MousePosition"
      ]
    },
    {
      "name": "ol.control.MousePosition#getCoordinateFormat",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/control/mousepositioncontrol.js",
      "returns": {
        "types": [
          "ol.CoordinateFormatType",
          "undefined"
        ]
      },
      "provides": [
        "ol.control.MousePosition"
      ]
    },
    {
      "name": "ol.control.MousePosition#getProjection",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/control/mousepositioncontrol.js",
      "returns": {
        "types": [
          "ol.proj.Projection",
          "undefined"
        ]
      },
      "provides": [
        "ol.control.MousePosition"
      ]
    },
    {
      "name": "ol.control.MousePosition#setMap",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/control/mousepositioncontrol.js",
      "provides": [
        "ol.control.MousePosition"
      ]
    },
    {
      "name": "ol.control.MousePosition#setCoordinateFormat",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/control/mousepositioncontrol.js",
      "params": [
        {
          "name": "format",
          "types": [
            "ol.CoordinateFormatType"
          ]
        }
      ],
      "provides": [
        "ol.control.MousePosition"
      ]
    },
    {
      "name": "ol.control.MousePosition#setProjection",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/control/mousepositioncontrol.js",
      "params": [
        {
          "name": "projection",
          "types": [
            "ol.proj.Projection"
          ]
        }
      ],
      "provides": [
        "ol.control.MousePosition"
      ]
    },
    {
      "name": "ol.control.OverviewMap",
      "kind": "class",
      "description": "Create a new control with a map acting as an overview map for an other\ndefined map.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/control/overviewmapcontrol.js",
      "extends": "ol.control.Control",
      "params": [
        {
          "name": "opt_options",
          "types": [
            "olx.control.OverviewMapOptions"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.control.OverviewMap"
      ]
    },
    {
      "name": "ol.control.OverviewMap#setMap",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/control/overviewmapcontrol.js",
      "provides": [
        "ol.control.OverviewMap"
      ]
    },
    {
      "name": "ol.control.OverviewMap.render",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/control/overviewmapcontrol.js",
      "params": [
        {
          "name": "mapEvent",
          "types": [
            "ol.MapEvent"
          ]
        }
      ],
      "provides": [
        "ol.control.OverviewMap"
      ]
    },
    {
      "name": "ol.control.OverviewMap#getCollapsible",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/control/overviewmapcontrol.js",
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.control.OverviewMap"
      ]
    },
    {
      "name": "ol.control.OverviewMap#setCollapsible",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/control/overviewmapcontrol.js",
      "params": [
        {
          "name": "collapsible",
          "types": [
            "boolean"
          ]
        }
      ],
      "provides": [
        "ol.control.OverviewMap"
      ]
    },
    {
      "name": "ol.control.OverviewMap#setCollapsed",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/control/overviewmapcontrol.js",
      "params": [
        {
          "name": "collapsed",
          "types": [
            "boolean"
          ]
        }
      ],
      "provides": [
        "ol.control.OverviewMap"
      ]
    },
    {
      "name": "ol.control.OverviewMap#getCollapsed",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/control/overviewmapcontrol.js",
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.control.OverviewMap"
      ]
    },
    {
      "name": "ol.control.Rotate",
      "kind": "class",
      "description": "A button control to reset rotation to 0.\nTo style this control use css selector `.ol-rotate`. A `.ol-hidden` css\nselector is added to the button when the rotation is 0.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/control/rotatecontrol.js",
      "extends": "ol.control.Control",
      "params": [
        {
          "name": "opt_options",
          "types": [
            "olx.control.RotateOptions"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.control.Rotate"
      ]
    },
    {
      "name": "ol.control.Rotate.render",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/control/rotatecontrol.js",
      "params": [
        {
          "name": "mapEvent",
          "types": [
            "ol.MapEvent"
          ]
        }
      ],
      "provides": [
        "ol.control.Rotate"
      ]
    },
    {
      "name": "ol.control.ScaleLine",
      "kind": "class",
      "description": "A control displaying rough x-axis distances, calculated for the center of the\nviewport.\nNo scale line will be shown when the x-axis distance cannot be calculated in\nthe view projection (e.g. at or beyond the poles in EPSG:4326).\nBy default the scale line will show in the bottom left portion of the map,\nbut this can be changed by using the css selector `.ol-scale-line`.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/control/scalelinecontrol.js",
      "extends": "ol.control.Control",
      "params": [
        {
          "name": "opt_options",
          "types": [
            "olx.control.ScaleLineOptions"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.control.ScaleLine",
        "ol.control.ScaleLineProperty",
        "ol.control.ScaleLineUnits"
      ]
    },
    {
      "name": "ol.control.ScaleLine#getUnits",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/control/scalelinecontrol.js",
      "returns": {
        "types": [
          "ol.control.ScaleLineUnits",
          "undefined"
        ]
      },
      "provides": [
        "ol.control.ScaleLine",
        "ol.control.ScaleLineProperty",
        "ol.control.ScaleLineUnits"
      ]
    },
    {
      "name": "ol.control.ScaleLine.render",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/control/scalelinecontrol.js",
      "params": [
        {
          "name": "mapEvent",
          "types": [
            "ol.MapEvent"
          ]
        }
      ],
      "provides": [
        "ol.control.ScaleLine",
        "ol.control.ScaleLineProperty",
        "ol.control.ScaleLineUnits"
      ]
    },
    {
      "name": "ol.control.ScaleLine#setUnits",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/control/scalelinecontrol.js",
      "params": [
        {
          "name": "units",
          "types": [
            "ol.control.ScaleLineUnits"
          ]
        }
      ],
      "provides": [
        "ol.control.ScaleLine",
        "ol.control.ScaleLineProperty",
        "ol.control.ScaleLineUnits"
      ]
    },
    {
      "name": "ol.control.Zoom",
      "kind": "class",
      "description": "A control with 2 buttons, one for zoom in and one for zoom out.\nThis control is one of the default controls of a map. To style this control\nuse css selectors `.ol-zoom-in` and `.ol-zoom-out`.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/control/zoomcontrol.js",
      "extends": "ol.control.Control",
      "params": [
        {
          "name": "opt_options",
          "types": [
            "olx.control.ZoomOptions"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.control.Zoom"
      ]
    },
    {
      "name": "ol.control.ZoomSlider",
      "kind": "class",
      "description": "A slider type of control for zooming.\n\nExample:\n\n    map.addControl(new ol.control.ZoomSlider());",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/control/zoomslidercontrol.js",
      "extends": "ol.control.Control",
      "params": [
        {
          "name": "opt_options",
          "types": [
            "olx.control.ZoomSliderOptions"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.control.ZoomSlider"
      ]
    },
    {
      "name": "ol.control.ZoomSlider.render",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/control/zoomslidercontrol.js",
      "params": [
        {
          "name": "mapEvent",
          "types": [
            "ol.MapEvent"
          ]
        }
      ],
      "provides": [
        "ol.control.ZoomSlider"
      ]
    },
    {
      "name": "ol.control.ZoomToExtent",
      "kind": "class",
      "description": "A button control which, when pressed, changes the map view to a specific\nextent. To style this control use the css selector `.ol-zoom-extent`.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/control/zoomtoextentcontrol.js",
      "extends": "ol.control.Control",
      "params": [
        {
          "name": "opt_options",
          "types": [
            "olx.control.ZoomToExtentOptions"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.control.ZoomToExtent"
      ]
    },
    {
      "name": "ol.color.asArray",
      "kind": "function",
      "description": "Return the color as an array. This function maintains a cache of calculated\narrays which means the result should not be modified.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/color/color.js",
      "params": [
        {
          "name": "color",
          "types": [
            "ol.Color",
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.Color"
        ]
      },
      "provides": [
        "ol.color"
      ]
    },
    {
      "name": "ol.color.asString",
      "kind": "function",
      "description": "Return the color as an rgba string.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/color/color.js",
      "params": [
        {
          "name": "color",
          "types": [
            "ol.Color",
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "string"
        ]
      },
      "provides": [
        "ol.color"
      ]
    },
    {
      "name": "ol.Object#changed",
      "kind": "function",
      "description": "Increases the revision counter and disptches a 'change' event.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Object#getRevision",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Object#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Object#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Object#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Object#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.\nNote that using the {@link ol.Observable.unByKey} static function is to\nbe preferred.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "key",
          "types": [
            "goog.events.Key"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Collection#bindTo",
      "kind": "function",
      "description": "The bindTo method allows you to set up a two-way binding between a\n`source` and `target` object. The method returns an object with a\n`transform` method that you can use to provide `from` and `to`\nfunctions to transform values on the way from the source to the\ntarget and on the way back.\n\nFor example, if you had two map views (sourceView and targetView)\nand you wanted the target view to have double the resolution of the\nsource view, you could transform the resolution on the way to and\nfrom the target with the following:\n\n    sourceView.bindTo('resolution', targetView)\n      .transform(\n        function(sourceResolution) {\n          // from sourceView.resolution to targetView.resolution\n          return 2 * sourceResolution;\n        },\n        function(targetResolution) {\n          // from targetView.resolution to sourceView.resolution\n          return targetResolution / 2;\n        }\n      );",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "target",
          "types": [
            "ol.Object"
          ]
        },
        {
          "name": "opt_targetKey",
          "types": [
            "string"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.ObjectAccessor"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.Collection#get",
      "kind": "function",
      "description": "Gets a value.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "*"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.Collection#getKeys",
      "kind": "function",
      "description": "Get a list of object property names.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "returns": {
        "types": [
          "Array.<string>"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.Collection#getProperties",
      "kind": "function",
      "description": "Get an object of all property names and values.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "returns": {
        "types": [
          "Object.<string, *>"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.Collection#set",
      "kind": "function",
      "description": "Sets a value.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "value",
          "types": [
            "*"
          ]
        }
      ],
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.Collection#setProperties",
      "kind": "function",
      "description": "Sets a collection of key-value pairs.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "values",
          "types": [
            "Object.<string, *>"
          ]
        }
      ],
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.Collection#unbind",
      "kind": "function",
      "description": "Removes a binding. Unbinding will set the unbound property to the current\n    value. The object will not be notified, as the value has not changed.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.Collection#unbindAll",
      "kind": "function",
      "description": "Removes all bindings.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.Collection#changed",
      "kind": "function",
      "description": "Increases the revision counter and disptches a 'change' event.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Collection#getRevision",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Collection#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Collection#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Collection#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Collection#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.\nNote that using the {@link ol.Observable.unByKey} static function is to\nbe preferred.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "key",
          "types": [
            "goog.events.Key"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.DeviceOrientation#bindTo",
      "kind": "function",
      "description": "The bindTo method allows you to set up a two-way binding between a\n`source` and `target` object. The method returns an object with a\n`transform` method that you can use to provide `from` and `to`\nfunctions to transform values on the way from the source to the\ntarget and on the way back.\n\nFor example, if you had two map views (sourceView and targetView)\nand you wanted the target view to have double the resolution of the\nsource view, you could transform the resolution on the way to and\nfrom the target with the following:\n\n    sourceView.bindTo('resolution', targetView)\n      .transform(\n        function(sourceResolution) {\n          // from sourceView.resolution to targetView.resolution\n          return 2 * sourceResolution;\n        },\n        function(targetResolution) {\n          // from targetView.resolution to sourceView.resolution\n          return targetResolution / 2;\n        }\n      );",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "target",
          "types": [
            "ol.Object"
          ]
        },
        {
          "name": "opt_targetKey",
          "types": [
            "string"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.ObjectAccessor"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.DeviceOrientation#get",
      "kind": "function",
      "description": "Gets a value.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "*"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.DeviceOrientation#getKeys",
      "kind": "function",
      "description": "Get a list of object property names.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "returns": {
        "types": [
          "Array.<string>"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.DeviceOrientation#getProperties",
      "kind": "function",
      "description": "Get an object of all property names and values.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "returns": {
        "types": [
          "Object.<string, *>"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.DeviceOrientation#set",
      "kind": "function",
      "description": "Sets a value.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "value",
          "types": [
            "*"
          ]
        }
      ],
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.DeviceOrientation#setProperties",
      "kind": "function",
      "description": "Sets a collection of key-value pairs.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "values",
          "types": [
            "Object.<string, *>"
          ]
        }
      ],
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.DeviceOrientation#unbind",
      "kind": "function",
      "description": "Removes a binding. Unbinding will set the unbound property to the current\n    value. The object will not be notified, as the value has not changed.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.DeviceOrientation#unbindAll",
      "kind": "function",
      "description": "Removes all bindings.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.DeviceOrientation#changed",
      "kind": "function",
      "description": "Increases the revision counter and disptches a 'change' event.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.DeviceOrientation#getRevision",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.DeviceOrientation#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.DeviceOrientation#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.DeviceOrientation#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.DeviceOrientation#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.\nNote that using the {@link ol.Observable.unByKey} static function is to\nbe preferred.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "key",
          "types": [
            "goog.events.Key"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Feature#bindTo",
      "kind": "function",
      "description": "The bindTo method allows you to set up a two-way binding between a\n`source` and `target` object. The method returns an object with a\n`transform` method that you can use to provide `from` and `to`\nfunctions to transform values on the way from the source to the\ntarget and on the way back.\n\nFor example, if you had two map views (sourceView and targetView)\nand you wanted the target view to have double the resolution of the\nsource view, you could transform the resolution on the way to and\nfrom the target with the following:\n\n    sourceView.bindTo('resolution', targetView)\n      .transform(\n        function(sourceResolution) {\n          // from sourceView.resolution to targetView.resolution\n          return 2 * sourceResolution;\n        },\n        function(targetResolution) {\n          // from targetView.resolution to sourceView.resolution\n          return targetResolution / 2;\n        }\n      );",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "target",
          "types": [
            "ol.Object"
          ]
        },
        {
          "name": "opt_targetKey",
          "types": [
            "string"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.ObjectAccessor"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.Feature#get",
      "kind": "function",
      "description": "Gets a value.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "*"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.Feature#getKeys",
      "kind": "function",
      "description": "Get a list of object property names.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "returns": {
        "types": [
          "Array.<string>"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.Feature#getProperties",
      "kind": "function",
      "description": "Get an object of all property names and values.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "returns": {
        "types": [
          "Object.<string, *>"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.Feature#set",
      "kind": "function",
      "description": "Sets a value.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "value",
          "types": [
            "*"
          ]
        }
      ],
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.Feature#setProperties",
      "kind": "function",
      "description": "Sets a collection of key-value pairs.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "values",
          "types": [
            "Object.<string, *>"
          ]
        }
      ],
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.Feature#unbind",
      "kind": "function",
      "description": "Removes a binding. Unbinding will set the unbound property to the current\n    value. The object will not be notified, as the value has not changed.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.Feature#unbindAll",
      "kind": "function",
      "description": "Removes all bindings.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.Feature#changed",
      "kind": "function",
      "description": "Increases the revision counter and disptches a 'change' event.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Feature#getRevision",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Feature#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Feature#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Feature#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Feature#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.\nNote that using the {@link ol.Observable.unByKey} static function is to\nbe preferred.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "key",
          "types": [
            "goog.events.Key"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Geolocation#bindTo",
      "kind": "function",
      "description": "The bindTo method allows you to set up a two-way binding between a\n`source` and `target` object. The method returns an object with a\n`transform` method that you can use to provide `from` and `to`\nfunctions to transform values on the way from the source to the\ntarget and on the way back.\n\nFor example, if you had two map views (sourceView and targetView)\nand you wanted the target view to have double the resolution of the\nsource view, you could transform the resolution on the way to and\nfrom the target with the following:\n\n    sourceView.bindTo('resolution', targetView)\n      .transform(\n        function(sourceResolution) {\n          // from sourceView.resolution to targetView.resolution\n          return 2 * sourceResolution;\n        },\n        function(targetResolution) {\n          // from targetView.resolution to sourceView.resolution\n          return targetResolution / 2;\n        }\n      );",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "target",
          "types": [
            "ol.Object"
          ]
        },
        {
          "name": "opt_targetKey",
          "types": [
            "string"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.ObjectAccessor"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.Geolocation#get",
      "kind": "function",
      "description": "Gets a value.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "*"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.Geolocation#getKeys",
      "kind": "function",
      "description": "Get a list of object property names.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "returns": {
        "types": [
          "Array.<string>"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.Geolocation#getProperties",
      "kind": "function",
      "description": "Get an object of all property names and values.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "returns": {
        "types": [
          "Object.<string, *>"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.Geolocation#set",
      "kind": "function",
      "description": "Sets a value.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "value",
          "types": [
            "*"
          ]
        }
      ],
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.Geolocation#setProperties",
      "kind": "function",
      "description": "Sets a collection of key-value pairs.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "values",
          "types": [
            "Object.<string, *>"
          ]
        }
      ],
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.Geolocation#unbind",
      "kind": "function",
      "description": "Removes a binding. Unbinding will set the unbound property to the current\n    value. The object will not be notified, as the value has not changed.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.Geolocation#unbindAll",
      "kind": "function",
      "description": "Removes all bindings.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.Geolocation#changed",
      "kind": "function",
      "description": "Increases the revision counter and disptches a 'change' event.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Geolocation#getRevision",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Geolocation#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Geolocation#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Geolocation#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Geolocation#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.\nNote that using the {@link ol.Observable.unByKey} static function is to\nbe preferred.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "key",
          "types": [
            "goog.events.Key"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.ImageTile#getTileCoord",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/tile.js",
      "returns": {
        "types": [
          "ol.TileCoord"
        ]
      },
      "provides": [
        "ol.Tile",
        "ol.TileState"
      ]
    },
    {
      "name": "ol.Map#bindTo",
      "kind": "function",
      "description": "The bindTo method allows you to set up a two-way binding between a\n`source` and `target` object. The method returns an object with a\n`transform` method that you can use to provide `from` and `to`\nfunctions to transform values on the way from the source to the\ntarget and on the way back.\n\nFor example, if you had two map views (sourceView and targetView)\nand you wanted the target view to have double the resolution of the\nsource view, you could transform the resolution on the way to and\nfrom the target with the following:\n\n    sourceView.bindTo('resolution', targetView)\n      .transform(\n        function(sourceResolution) {\n          // from sourceView.resolution to targetView.resolution\n          return 2 * sourceResolution;\n        },\n        function(targetResolution) {\n          // from targetView.resolution to sourceView.resolution\n          return targetResolution / 2;\n        }\n      );",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "target",
          "types": [
            "ol.Object"
          ]
        },
        {
          "name": "opt_targetKey",
          "types": [
            "string"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.ObjectAccessor"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.Map#get",
      "kind": "function",
      "description": "Gets a value.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "*"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.Map#getKeys",
      "kind": "function",
      "description": "Get a list of object property names.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "returns": {
        "types": [
          "Array.<string>"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.Map#getProperties",
      "kind": "function",
      "description": "Get an object of all property names and values.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "returns": {
        "types": [
          "Object.<string, *>"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.Map#set",
      "kind": "function",
      "description": "Sets a value.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "value",
          "types": [
            "*"
          ]
        }
      ],
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.Map#setProperties",
      "kind": "function",
      "description": "Sets a collection of key-value pairs.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "values",
          "types": [
            "Object.<string, *>"
          ]
        }
      ],
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.Map#unbind",
      "kind": "function",
      "description": "Removes a binding. Unbinding will set the unbound property to the current\n    value. The object will not be notified, as the value has not changed.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.Map#unbindAll",
      "kind": "function",
      "description": "Removes all bindings.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.Map#changed",
      "kind": "function",
      "description": "Increases the revision counter and disptches a 'change' event.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Map#getRevision",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Map#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Map#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Map#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Map#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.\nNote that using the {@link ol.Observable.unByKey} static function is to\nbe preferred.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "key",
          "types": [
            "goog.events.Key"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.MapBrowserEvent#map",
      "kind": "member",
      "description": "The map where the event occurred.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/mapevent.js",
      "types": [
        "ol.Map"
      ],
      "provides": [
        "ol.MapEvent",
        "ol.MapEventType"
      ]
    },
    {
      "name": "ol.MapBrowserEvent#frameState",
      "kind": "member",
      "description": "The frame state at the time of the event.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/mapevent.js",
      "types": [
        "olx.FrameState"
      ],
      "provides": [
        "ol.MapEvent",
        "ol.MapEventType"
      ]
    },
    {
      "name": "ol.MapBrowserPointerEvent#originalEvent",
      "kind": "constant",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/mapbrowserevent.js",
      "types": [
        "Event"
      ],
      "provides": [
        "ol.MapBrowserEvent",
        "ol.MapBrowserEvent.EventType",
        "ol.MapBrowserEventHandler",
        "ol.MapBrowserPointerEvent"
      ]
    },
    {
      "name": "ol.MapBrowserPointerEvent#pixel",
      "kind": "member",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/mapbrowserevent.js",
      "types": [
        "ol.Pixel"
      ],
      "provides": [
        "ol.MapBrowserEvent",
        "ol.MapBrowserEvent.EventType",
        "ol.MapBrowserEventHandler",
        "ol.MapBrowserPointerEvent"
      ]
    },
    {
      "name": "ol.MapBrowserPointerEvent#coordinate",
      "kind": "member",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/mapbrowserevent.js",
      "types": [
        "ol.Coordinate"
      ],
      "provides": [
        "ol.MapBrowserEvent",
        "ol.MapBrowserEvent.EventType",
        "ol.MapBrowserEventHandler",
        "ol.MapBrowserPointerEvent"
      ]
    },
    {
      "name": "ol.MapBrowserPointerEvent#dragging",
      "kind": "member",
      "description": "Indicates if the map is currently being dragged. Only set for\n`POINTERDRAG` and `POINTERMOVE` events. Default is `false`.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/mapbrowserevent.js",
      "types": [
        "boolean"
      ],
      "provides": [
        "ol.MapBrowserEvent",
        "ol.MapBrowserEvent.EventType",
        "ol.MapBrowserEventHandler",
        "ol.MapBrowserPointerEvent"
      ]
    },
    {
      "name": "ol.MapBrowserPointerEvent#preventDefault",
      "kind": "function",
      "description": "Prevents the default browser action.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/mapbrowserevent.js",
      "provides": [
        "ol.MapBrowserEvent",
        "ol.MapBrowserEvent.EventType",
        "ol.MapBrowserEventHandler",
        "ol.MapBrowserPointerEvent"
      ]
    },
    {
      "name": "ol.MapBrowserPointerEvent#stopPropagation",
      "kind": "function",
      "description": "Prevents further propagation of the current event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/mapbrowserevent.js",
      "provides": [
        "ol.MapBrowserEvent",
        "ol.MapBrowserEvent.EventType",
        "ol.MapBrowserEventHandler",
        "ol.MapBrowserPointerEvent"
      ]
    },
    {
      "name": "ol.MapBrowserPointerEvent#map",
      "kind": "member",
      "description": "The map where the event occurred.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/mapevent.js",
      "types": [
        "ol.Map"
      ],
      "provides": [
        "ol.MapEvent",
        "ol.MapEventType"
      ]
    },
    {
      "name": "ol.MapBrowserPointerEvent#frameState",
      "kind": "member",
      "description": "The frame state at the time of the event.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/mapevent.js",
      "types": [
        "olx.FrameState"
      ],
      "provides": [
        "ol.MapEvent",
        "ol.MapEventType"
      ]
    },
    {
      "name": "ol.Overlay#bindTo",
      "kind": "function",
      "description": "The bindTo method allows you to set up a two-way binding between a\n`source` and `target` object. The method returns an object with a\n`transform` method that you can use to provide `from` and `to`\nfunctions to transform values on the way from the source to the\ntarget and on the way back.\n\nFor example, if you had two map views (sourceView and targetView)\nand you wanted the target view to have double the resolution of the\nsource view, you could transform the resolution on the way to and\nfrom the target with the following:\n\n    sourceView.bindTo('resolution', targetView)\n      .transform(\n        function(sourceResolution) {\n          // from sourceView.resolution to targetView.resolution\n          return 2 * sourceResolution;\n        },\n        function(targetResolution) {\n          // from targetView.resolution to sourceView.resolution\n          return targetResolution / 2;\n        }\n      );",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "target",
          "types": [
            "ol.Object"
          ]
        },
        {
          "name": "opt_targetKey",
          "types": [
            "string"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.ObjectAccessor"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.Overlay#get",
      "kind": "function",
      "description": "Gets a value.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "*"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.Overlay#getKeys",
      "kind": "function",
      "description": "Get a list of object property names.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "returns": {
        "types": [
          "Array.<string>"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.Overlay#getProperties",
      "kind": "function",
      "description": "Get an object of all property names and values.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "returns": {
        "types": [
          "Object.<string, *>"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.Overlay#set",
      "kind": "function",
      "description": "Sets a value.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "value",
          "types": [
            "*"
          ]
        }
      ],
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.Overlay#setProperties",
      "kind": "function",
      "description": "Sets a collection of key-value pairs.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "values",
          "types": [
            "Object.<string, *>"
          ]
        }
      ],
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.Overlay#unbind",
      "kind": "function",
      "description": "Removes a binding. Unbinding will set the unbound property to the current\n    value. The object will not be notified, as the value has not changed.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.Overlay#unbindAll",
      "kind": "function",
      "description": "Removes all bindings.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.Overlay#changed",
      "kind": "function",
      "description": "Increases the revision counter and disptches a 'change' event.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Overlay#getRevision",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Overlay#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Overlay#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Overlay#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Overlay#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.\nNote that using the {@link ol.Observable.unByKey} static function is to\nbe preferred.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "key",
          "types": [
            "goog.events.Key"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.View#bindTo",
      "kind": "function",
      "description": "The bindTo method allows you to set up a two-way binding between a\n`source` and `target` object. The method returns an object with a\n`transform` method that you can use to provide `from` and `to`\nfunctions to transform values on the way from the source to the\ntarget and on the way back.\n\nFor example, if you had two map views (sourceView and targetView)\nand you wanted the target view to have double the resolution of the\nsource view, you could transform the resolution on the way to and\nfrom the target with the following:\n\n    sourceView.bindTo('resolution', targetView)\n      .transform(\n        function(sourceResolution) {\n          // from sourceView.resolution to targetView.resolution\n          return 2 * sourceResolution;\n        },\n        function(targetResolution) {\n          // from targetView.resolution to sourceView.resolution\n          return targetResolution / 2;\n        }\n      );",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "target",
          "types": [
            "ol.Object"
          ]
        },
        {
          "name": "opt_targetKey",
          "types": [
            "string"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.ObjectAccessor"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.View#get",
      "kind": "function",
      "description": "Gets a value.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "*"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.View#getKeys",
      "kind": "function",
      "description": "Get a list of object property names.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "returns": {
        "types": [
          "Array.<string>"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.View#getProperties",
      "kind": "function",
      "description": "Get an object of all property names and values.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "returns": {
        "types": [
          "Object.<string, *>"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.View#set",
      "kind": "function",
      "description": "Sets a value.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "value",
          "types": [
            "*"
          ]
        }
      ],
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.View#setProperties",
      "kind": "function",
      "description": "Sets a collection of key-value pairs.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "values",
          "types": [
            "Object.<string, *>"
          ]
        }
      ],
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.View#unbind",
      "kind": "function",
      "description": "Removes a binding. Unbinding will set the unbound property to the current\n    value. The object will not be notified, as the value has not changed.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.View#unbindAll",
      "kind": "function",
      "description": "Removes all bindings.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.View#changed",
      "kind": "function",
      "description": "Increases the revision counter and disptches a 'change' event.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.View#getRevision",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.View#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.View#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.View#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.View#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.\nNote that using the {@link ol.Observable.unByKey} static function is to\nbe preferred.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "key",
          "types": [
            "goog.events.Key"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.tilegrid.WMTS#getMaxZoom",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/tilegrid/tilegrid.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.tilegrid.TileGrid"
      ]
    },
    {
      "name": "ol.tilegrid.WMTS#getMinZoom",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/tilegrid/tilegrid.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.tilegrid.TileGrid"
      ]
    },
    {
      "name": "ol.tilegrid.WMTS#getOrigin",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/tilegrid/tilegrid.js",
      "params": [
        {
          "name": "z",
          "types": [
            "number"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.Coordinate"
        ]
      },
      "provides": [
        "ol.tilegrid.TileGrid"
      ]
    },
    {
      "name": "ol.tilegrid.WMTS#getResolution",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/tilegrid/tilegrid.js",
      "params": [
        {
          "name": "z",
          "types": [
            "number"
          ]
        }
      ],
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.tilegrid.TileGrid"
      ]
    },
    {
      "name": "ol.tilegrid.WMTS#getResolutions",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/tilegrid/tilegrid.js",
      "returns": {
        "types": [
          "Array.<number>"
        ]
      },
      "provides": [
        "ol.tilegrid.TileGrid"
      ]
    },
    {
      "name": "ol.tilegrid.WMTS#getTileCoordForCoordAndResolution",
      "kind": "function",
      "description": "Get the tile coordinate for the given map coordinate and resolution.  This\nmethod considers that coordinates that intersect tile boundaries should be\nassigned the higher tile coordinate.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/tilegrid/tilegrid.js",
      "params": [
        {
          "name": "coordinate",
          "types": [
            "ol.Coordinate"
          ]
        },
        {
          "name": "resolution",
          "types": [
            "number"
          ]
        },
        {
          "name": "opt_tileCoord",
          "types": [
            "ol.TileCoord"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.TileCoord"
        ]
      },
      "provides": [
        "ol.tilegrid.TileGrid"
      ]
    },
    {
      "name": "ol.tilegrid.WMTS#getTileCoordForCoordAndZ",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/tilegrid/tilegrid.js",
      "params": [
        {
          "name": "coordinate",
          "types": [
            "ol.Coordinate"
          ]
        },
        {
          "name": "z",
          "types": [
            "number"
          ]
        },
        {
          "name": "opt_tileCoord",
          "types": [
            "ol.TileCoord"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.TileCoord"
        ]
      },
      "provides": [
        "ol.tilegrid.TileGrid"
      ]
    },
    {
      "name": "ol.tilegrid.WMTS#getTileSize",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/tilegrid/tilegrid.js",
      "params": [
        {
          "name": "z",
          "types": [
            "number"
          ]
        }
      ],
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.tilegrid.TileGrid"
      ]
    },
    {
      "name": "ol.tilegrid.XYZ#getMaxZoom",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/tilegrid/tilegrid.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.tilegrid.TileGrid"
      ]
    },
    {
      "name": "ol.tilegrid.XYZ#getMinZoom",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/tilegrid/tilegrid.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.tilegrid.TileGrid"
      ]
    },
    {
      "name": "ol.tilegrid.XYZ#getOrigin",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/tilegrid/tilegrid.js",
      "params": [
        {
          "name": "z",
          "types": [
            "number"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.Coordinate"
        ]
      },
      "provides": [
        "ol.tilegrid.TileGrid"
      ]
    },
    {
      "name": "ol.tilegrid.XYZ#getResolution",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/tilegrid/tilegrid.js",
      "params": [
        {
          "name": "z",
          "types": [
            "number"
          ]
        }
      ],
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.tilegrid.TileGrid"
      ]
    },
    {
      "name": "ol.tilegrid.XYZ#getResolutions",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/tilegrid/tilegrid.js",
      "returns": {
        "types": [
          "Array.<number>"
        ]
      },
      "provides": [
        "ol.tilegrid.TileGrid"
      ]
    },
    {
      "name": "ol.tilegrid.XYZ#getTileCoordForCoordAndResolution",
      "kind": "function",
      "description": "Get the tile coordinate for the given map coordinate and resolution.  This\nmethod considers that coordinates that intersect tile boundaries should be\nassigned the higher tile coordinate.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/tilegrid/tilegrid.js",
      "params": [
        {
          "name": "coordinate",
          "types": [
            "ol.Coordinate"
          ]
        },
        {
          "name": "resolution",
          "types": [
            "number"
          ]
        },
        {
          "name": "opt_tileCoord",
          "types": [
            "ol.TileCoord"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.TileCoord"
        ]
      },
      "provides": [
        "ol.tilegrid.TileGrid"
      ]
    },
    {
      "name": "ol.tilegrid.XYZ#getTileCoordForCoordAndZ",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/tilegrid/tilegrid.js",
      "params": [
        {
          "name": "coordinate",
          "types": [
            "ol.Coordinate"
          ]
        },
        {
          "name": "z",
          "types": [
            "number"
          ]
        },
        {
          "name": "opt_tileCoord",
          "types": [
            "ol.TileCoord"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.TileCoord"
        ]
      },
      "provides": [
        "ol.tilegrid.TileGrid"
      ]
    },
    {
      "name": "ol.tilegrid.XYZ#getTileSize",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/tilegrid/tilegrid.js",
      "params": [
        {
          "name": "z",
          "types": [
            "number"
          ]
        }
      ],
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.tilegrid.TileGrid"
      ]
    },
    {
      "name": "ol.tilegrid.Zoomify#getMaxZoom",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/tilegrid/tilegrid.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.tilegrid.TileGrid"
      ]
    },
    {
      "name": "ol.tilegrid.Zoomify#getMinZoom",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/tilegrid/tilegrid.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.tilegrid.TileGrid"
      ]
    },
    {
      "name": "ol.tilegrid.Zoomify#getOrigin",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/tilegrid/tilegrid.js",
      "params": [
        {
          "name": "z",
          "types": [
            "number"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.Coordinate"
        ]
      },
      "provides": [
        "ol.tilegrid.TileGrid"
      ]
    },
    {
      "name": "ol.tilegrid.Zoomify#getResolution",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/tilegrid/tilegrid.js",
      "params": [
        {
          "name": "z",
          "types": [
            "number"
          ]
        }
      ],
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.tilegrid.TileGrid"
      ]
    },
    {
      "name": "ol.tilegrid.Zoomify#getResolutions",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/tilegrid/tilegrid.js",
      "returns": {
        "types": [
          "Array.<number>"
        ]
      },
      "provides": [
        "ol.tilegrid.TileGrid"
      ]
    },
    {
      "name": "ol.tilegrid.Zoomify#getTileCoordForCoordAndResolution",
      "kind": "function",
      "description": "Get the tile coordinate for the given map coordinate and resolution.  This\nmethod considers that coordinates that intersect tile boundaries should be\nassigned the higher tile coordinate.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/tilegrid/tilegrid.js",
      "params": [
        {
          "name": "coordinate",
          "types": [
            "ol.Coordinate"
          ]
        },
        {
          "name": "resolution",
          "types": [
            "number"
          ]
        },
        {
          "name": "opt_tileCoord",
          "types": [
            "ol.TileCoord"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.TileCoord"
        ]
      },
      "provides": [
        "ol.tilegrid.TileGrid"
      ]
    },
    {
      "name": "ol.tilegrid.Zoomify#getTileCoordForCoordAndZ",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/tilegrid/tilegrid.js",
      "params": [
        {
          "name": "coordinate",
          "types": [
            "ol.Coordinate"
          ]
        },
        {
          "name": "z",
          "types": [
            "number"
          ]
        },
        {
          "name": "opt_tileCoord",
          "types": [
            "ol.TileCoord"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.TileCoord"
        ]
      },
      "provides": [
        "ol.tilegrid.TileGrid"
      ]
    },
    {
      "name": "ol.tilegrid.Zoomify#getTileSize",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/tilegrid/tilegrid.js",
      "params": [
        {
          "name": "z",
          "types": [
            "number"
          ]
        }
      ],
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.tilegrid.TileGrid"
      ]
    },
    {
      "name": "ol.style.Circle#getOpacity",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/style/imagestyle.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.style.Image",
        "ol.style.ImageState"
      ]
    },
    {
      "name": "ol.style.Circle#getRotateWithView",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/style/imagestyle.js",
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.style.Image",
        "ol.style.ImageState"
      ]
    },
    {
      "name": "ol.style.Circle#getRotation",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/style/imagestyle.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.style.Image",
        "ol.style.ImageState"
      ]
    },
    {
      "name": "ol.style.Circle#getScale",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/style/imagestyle.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.style.Image",
        "ol.style.ImageState"
      ]
    },
    {
      "name": "ol.style.Circle#getSnapToPixel",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/style/imagestyle.js",
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.style.Image",
        "ol.style.ImageState"
      ]
    },
    {
      "name": "ol.style.Circle#setRotation",
      "kind": "function",
      "description": "Set the rotation.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/style/imagestyle.js",
      "params": [
        {
          "name": "rotation",
          "types": [
            "number"
          ]
        }
      ],
      "provides": [
        "ol.style.Image",
        "ol.style.ImageState"
      ]
    },
    {
      "name": "ol.style.Circle#setScale",
      "kind": "function",
      "description": "Set the scale.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/style/imagestyle.js",
      "params": [
        {
          "name": "scale",
          "types": [
            "number"
          ]
        }
      ],
      "provides": [
        "ol.style.Image",
        "ol.style.ImageState"
      ]
    },
    {
      "name": "ol.style.Icon#getOpacity",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/style/imagestyle.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.style.Image",
        "ol.style.ImageState"
      ]
    },
    {
      "name": "ol.style.Icon#getRotateWithView",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/style/imagestyle.js",
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.style.Image",
        "ol.style.ImageState"
      ]
    },
    {
      "name": "ol.style.Icon#getRotation",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/style/imagestyle.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.style.Image",
        "ol.style.ImageState"
      ]
    },
    {
      "name": "ol.style.Icon#getScale",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/style/imagestyle.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.style.Image",
        "ol.style.ImageState"
      ]
    },
    {
      "name": "ol.style.Icon#getSnapToPixel",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/style/imagestyle.js",
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.style.Image",
        "ol.style.ImageState"
      ]
    },
    {
      "name": "ol.style.Icon#setRotation",
      "kind": "function",
      "description": "Set the rotation.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/style/imagestyle.js",
      "params": [
        {
          "name": "rotation",
          "types": [
            "number"
          ]
        }
      ],
      "provides": [
        "ol.style.Image",
        "ol.style.ImageState"
      ]
    },
    {
      "name": "ol.style.Icon#setScale",
      "kind": "function",
      "description": "Set the scale.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/style/imagestyle.js",
      "params": [
        {
          "name": "scale",
          "types": [
            "number"
          ]
        }
      ],
      "provides": [
        "ol.style.Image",
        "ol.style.ImageState"
      ]
    },
    {
      "name": "ol.style.RegularShape#getOpacity",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/style/imagestyle.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.style.Image",
        "ol.style.ImageState"
      ]
    },
    {
      "name": "ol.style.RegularShape#getRotateWithView",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/style/imagestyle.js",
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.style.Image",
        "ol.style.ImageState"
      ]
    },
    {
      "name": "ol.style.RegularShape#getRotation",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/style/imagestyle.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.style.Image",
        "ol.style.ImageState"
      ]
    },
    {
      "name": "ol.style.RegularShape#getScale",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/style/imagestyle.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.style.Image",
        "ol.style.ImageState"
      ]
    },
    {
      "name": "ol.style.RegularShape#getSnapToPixel",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/style/imagestyle.js",
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.style.Image",
        "ol.style.ImageState"
      ]
    },
    {
      "name": "ol.style.RegularShape#setRotation",
      "kind": "function",
      "description": "Set the rotation.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/style/imagestyle.js",
      "params": [
        {
          "name": "rotation",
          "types": [
            "number"
          ]
        }
      ],
      "provides": [
        "ol.style.Image",
        "ol.style.ImageState"
      ]
    },
    {
      "name": "ol.style.RegularShape#setScale",
      "kind": "function",
      "description": "Set the scale.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/style/imagestyle.js",
      "params": [
        {
          "name": "scale",
          "types": [
            "number"
          ]
        }
      ],
      "provides": [
        "ol.style.Image",
        "ol.style.ImageState"
      ]
    },
    {
      "name": "ol.source.Source#changed",
      "kind": "function",
      "description": "Increases the revision counter and disptches a 'change' event.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Source#getRevision",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Source#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Source#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Source#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Source#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.\nNote that using the {@link ol.Observable.unByKey} static function is to\nbe preferred.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "key",
          "types": [
            "goog.events.Key"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Tile#getAttributions",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/source.js",
      "returns": {
        "types": [
          "Array.<ol.Attribution>"
        ]
      },
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.Tile#getLogo",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/source.js",
      "returns": {
        "types": [
          "string",
          "olx.LogoOptions",
          "undefined"
        ]
      },
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.Tile#getProjection",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/source.js",
      "returns": {
        "types": [
          "ol.proj.Projection"
        ]
      },
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.Tile#getState",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/source.js",
      "returns": {
        "types": [
          "ol.source.State"
        ]
      },
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.Tile#changed",
      "kind": "function",
      "description": "Increases the revision counter and disptches a 'change' event.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Tile#getRevision",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Tile#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Tile#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Tile#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Tile#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.\nNote that using the {@link ol.Observable.unByKey} static function is to\nbe preferred.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "key",
          "types": [
            "goog.events.Key"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.TileImage#getTileGrid",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/tilesource.js",
      "returns": {
        "types": [
          "ol.tilegrid.TileGrid"
        ]
      },
      "provides": [
        "ol.source.Tile",
        "ol.source.TileOptions"
      ]
    },
    {
      "name": "ol.source.TileImage#getAttributions",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/source.js",
      "returns": {
        "types": [
          "Array.<ol.Attribution>"
        ]
      },
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.TileImage#getLogo",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/source.js",
      "returns": {
        "types": [
          "string",
          "olx.LogoOptions",
          "undefined"
        ]
      },
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.TileImage#getProjection",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/source.js",
      "returns": {
        "types": [
          "ol.proj.Projection"
        ]
      },
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.TileImage#getState",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/source.js",
      "returns": {
        "types": [
          "ol.source.State"
        ]
      },
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.TileImage#changed",
      "kind": "function",
      "description": "Increases the revision counter and disptches a 'change' event.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.TileImage#getRevision",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.TileImage#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.TileImage#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.TileImage#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.TileImage#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.\nNote that using the {@link ol.Observable.unByKey} static function is to\nbe preferred.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "key",
          "types": [
            "goog.events.Key"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.BingMaps#getTileLoadFunction",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/tileimagesource.js",
      "returns": {
        "types": [
          "ol.TileLoadFunctionType"
        ]
      },
      "provides": [
        "ol.source.TileImage"
      ]
    },
    {
      "name": "ol.source.BingMaps#getTileUrlFunction",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/tileimagesource.js",
      "returns": {
        "types": [
          "ol.TileUrlFunctionType"
        ]
      },
      "provides": [
        "ol.source.TileImage"
      ]
    },
    {
      "name": "ol.source.BingMaps#setTileLoadFunction",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/tileimagesource.js",
      "params": [
        {
          "name": "tileLoadFunction",
          "types": [
            "ol.TileLoadFunctionType"
          ]
        }
      ],
      "provides": [
        "ol.source.TileImage"
      ]
    },
    {
      "name": "ol.source.BingMaps#setTileUrlFunction",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/tileimagesource.js",
      "params": [
        {
          "name": "tileUrlFunction",
          "types": [
            "ol.TileUrlFunctionType"
          ]
        }
      ],
      "provides": [
        "ol.source.TileImage"
      ]
    },
    {
      "name": "ol.source.BingMaps#getTileGrid",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/tilesource.js",
      "returns": {
        "types": [
          "ol.tilegrid.TileGrid"
        ]
      },
      "provides": [
        "ol.source.Tile",
        "ol.source.TileOptions"
      ]
    },
    {
      "name": "ol.source.BingMaps#getAttributions",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/source.js",
      "returns": {
        "types": [
          "Array.<ol.Attribution>"
        ]
      },
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.BingMaps#getLogo",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/source.js",
      "returns": {
        "types": [
          "string",
          "olx.LogoOptions",
          "undefined"
        ]
      },
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.BingMaps#getProjection",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/source.js",
      "returns": {
        "types": [
          "ol.proj.Projection"
        ]
      },
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.BingMaps#getState",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/source.js",
      "returns": {
        "types": [
          "ol.source.State"
        ]
      },
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.BingMaps#changed",
      "kind": "function",
      "description": "Increases the revision counter and disptches a 'change' event.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.BingMaps#getRevision",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.BingMaps#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.BingMaps#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.BingMaps#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.BingMaps#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.\nNote that using the {@link ol.Observable.unByKey} static function is to\nbe preferred.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "key",
          "types": [
            "goog.events.Key"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Vector#getAttributions",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/source.js",
      "returns": {
        "types": [
          "Array.<ol.Attribution>"
        ]
      },
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.Vector#getLogo",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/source.js",
      "returns": {
        "types": [
          "string",
          "olx.LogoOptions",
          "undefined"
        ]
      },
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.Vector#getProjection",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/source.js",
      "returns": {
        "types": [
          "ol.proj.Projection"
        ]
      },
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.Vector#getState",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/source.js",
      "returns": {
        "types": [
          "ol.source.State"
        ]
      },
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.Vector#changed",
      "kind": "function",
      "description": "Increases the revision counter and disptches a 'change' event.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Vector#getRevision",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Vector#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Vector#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Vector#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Vector#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.\nNote that using the {@link ol.Observable.unByKey} static function is to\nbe preferred.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "key",
          "types": [
            "goog.events.Key"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Cluster#addFeature",
      "kind": "function",
      "description": "Add a single feature to the source.  If you want to add a batch of features\nat once, call {@link ol.source.Vector#addFeatures source.addFeatures()}\ninstead.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/vectorsource.js",
      "params": [
        {
          "name": "feature",
          "types": [
            "ol.Feature"
          ]
        }
      ],
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.Cluster#addFeatures",
      "kind": "function",
      "description": "Add a batch of features to the source.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/vectorsource.js",
      "params": [
        {
          "name": "features",
          "types": [
            "Array.<ol.Feature>"
          ]
        }
      ],
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.Cluster#clear",
      "kind": "function",
      "description": "Remove all features from the source.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/vectorsource.js",
      "params": [
        {
          "name": "opt_fast",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.Cluster#forEachFeature",
      "kind": "function",
      "description": "Iterate through all features on the source, calling the provided callback\nwith each one.  If the callback returns any \"truthy\" value, iteration will\nstop and the function will return the same value.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/vectorsource.js",
      "params": [
        {
          "name": "callback",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "T"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "S",
          "undefined"
        ]
      },
      "template": "T,S",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.Cluster#forEachFeatureInExtent",
      "kind": "function",
      "description": "Iterate through all features whose bounding box intersects the provided\nextent (note that the feature's geometry may not intersect the extent),\ncalling the callback with each feature.  If the callback returns a \"truthy\"\nvalue, iteration will stop and the function will return the same value.\n\nIf you are interested in features whose geometry intersects an extent, call\nthe {@link ol.source.Vector#forEachFeatureIntersectingExtent\nsource.forEachFeatureIntersectingExtent()} method instead.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/vectorsource.js",
      "params": [
        {
          "name": "extent",
          "types": [
            "ol.Extent"
          ]
        },
        {
          "name": "callback",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "T"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "S",
          "undefined"
        ]
      },
      "template": "T,S",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.Cluster#forEachFeatureIntersectingExtent",
      "kind": "function",
      "description": "Iterate through all features whose geometry intersects the provided extent,\ncalling the callback with each feature.  If the callback returns a \"truthy\"\nvalue, iteration will stop and the function will return the same value.\n\nIf you only want to test for bounding box intersection, call the\n{@link ol.source.Vector#forEachFeatureInExtent\nsource.forEachFeatureInExtent()} method instead.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/vectorsource.js",
      "params": [
        {
          "name": "extent",
          "types": [
            "ol.Extent"
          ]
        },
        {
          "name": "callback",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "T"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "S",
          "undefined"
        ]
      },
      "template": "T,S",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.Cluster#getFeatures",
      "kind": "function",
      "description": "Get all features on the source.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/vectorsource.js",
      "returns": {
        "types": [
          "Array.<ol.Feature>"
        ]
      },
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.Cluster#getFeaturesAtCoordinate",
      "kind": "function",
      "description": "Get all features whose geometry intersects the provided coordinate.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/vectorsource.js",
      "params": [
        {
          "name": "coordinate",
          "types": [
            "ol.Coordinate"
          ]
        }
      ],
      "returns": {
        "types": [
          "Array.<ol.Feature>"
        ]
      },
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.Cluster#getClosestFeatureToCoordinate",
      "kind": "function",
      "description": "Get the closest feature to the provided coordinate.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/vectorsource.js",
      "params": [
        {
          "name": "coordinate",
          "types": [
            "ol.Coordinate"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.Feature"
        ]
      },
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.Cluster#getExtent",
      "kind": "function",
      "description": "Get the extent of the features currently in the source.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/vectorsource.js",
      "returns": {
        "types": [
          "ol.Extent"
        ]
      },
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.Cluster#getFeatureById",
      "kind": "function",
      "description": "Get a feature by its identifier (the value returned by feature.getId()).\nNote that the index treats string and numeric identifiers as the same.  So\n`source.getFeatureById(2)` will return a feature with id `'2'` or `2`.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/vectorsource.js",
      "params": [
        {
          "name": "id",
          "types": [
            "string",
            "number"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.Feature"
        ]
      },
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.Cluster#removeFeature",
      "kind": "function",
      "description": "Remove a single feature from the source.  If you want to remove all features\nat once, use the {@link ol.source.Vector#clear source.clear()} method\ninstead.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/vectorsource.js",
      "params": [
        {
          "name": "feature",
          "types": [
            "ol.Feature"
          ]
        }
      ],
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.Cluster#getAttributions",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/source.js",
      "returns": {
        "types": [
          "Array.<ol.Attribution>"
        ]
      },
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.Cluster#getLogo",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/source.js",
      "returns": {
        "types": [
          "string",
          "olx.LogoOptions",
          "undefined"
        ]
      },
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.Cluster#getProjection",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/source.js",
      "returns": {
        "types": [
          "ol.proj.Projection"
        ]
      },
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.Cluster#getState",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/source.js",
      "returns": {
        "types": [
          "ol.source.State"
        ]
      },
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.Cluster#changed",
      "kind": "function",
      "description": "Increases the revision counter and disptches a 'change' event.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Cluster#getRevision",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Cluster#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Cluster#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Cluster#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Cluster#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.\nNote that using the {@link ol.Observable.unByKey} static function is to\nbe preferred.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "key",
          "types": [
            "goog.events.Key"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.FormatVector#addFeature",
      "kind": "function",
      "description": "Add a single feature to the source.  If you want to add a batch of features\nat once, call {@link ol.source.Vector#addFeatures source.addFeatures()}\ninstead.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/vectorsource.js",
      "params": [
        {
          "name": "feature",
          "types": [
            "ol.Feature"
          ]
        }
      ],
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.FormatVector#addFeatures",
      "kind": "function",
      "description": "Add a batch of features to the source.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/vectorsource.js",
      "params": [
        {
          "name": "features",
          "types": [
            "Array.<ol.Feature>"
          ]
        }
      ],
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.FormatVector#clear",
      "kind": "function",
      "description": "Remove all features from the source.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/vectorsource.js",
      "params": [
        {
          "name": "opt_fast",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.FormatVector#forEachFeature",
      "kind": "function",
      "description": "Iterate through all features on the source, calling the provided callback\nwith each one.  If the callback returns any \"truthy\" value, iteration will\nstop and the function will return the same value.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/vectorsource.js",
      "params": [
        {
          "name": "callback",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "T"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "S",
          "undefined"
        ]
      },
      "template": "T,S",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.FormatVector#forEachFeatureInExtent",
      "kind": "function",
      "description": "Iterate through all features whose bounding box intersects the provided\nextent (note that the feature's geometry may not intersect the extent),\ncalling the callback with each feature.  If the callback returns a \"truthy\"\nvalue, iteration will stop and the function will return the same value.\n\nIf you are interested in features whose geometry intersects an extent, call\nthe {@link ol.source.Vector#forEachFeatureIntersectingExtent\nsource.forEachFeatureIntersectingExtent()} method instead.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/vectorsource.js",
      "params": [
        {
          "name": "extent",
          "types": [
            "ol.Extent"
          ]
        },
        {
          "name": "callback",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "T"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "S",
          "undefined"
        ]
      },
      "template": "T,S",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.FormatVector#forEachFeatureIntersectingExtent",
      "kind": "function",
      "description": "Iterate through all features whose geometry intersects the provided extent,\ncalling the callback with each feature.  If the callback returns a \"truthy\"\nvalue, iteration will stop and the function will return the same value.\n\nIf you only want to test for bounding box intersection, call the\n{@link ol.source.Vector#forEachFeatureInExtent\nsource.forEachFeatureInExtent()} method instead.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/vectorsource.js",
      "params": [
        {
          "name": "extent",
          "types": [
            "ol.Extent"
          ]
        },
        {
          "name": "callback",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "T"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "S",
          "undefined"
        ]
      },
      "template": "T,S",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.FormatVector#getFeatures",
      "kind": "function",
      "description": "Get all features on the source.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/vectorsource.js",
      "returns": {
        "types": [
          "Array.<ol.Feature>"
        ]
      },
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.FormatVector#getFeaturesAtCoordinate",
      "kind": "function",
      "description": "Get all features whose geometry intersects the provided coordinate.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/vectorsource.js",
      "params": [
        {
          "name": "coordinate",
          "types": [
            "ol.Coordinate"
          ]
        }
      ],
      "returns": {
        "types": [
          "Array.<ol.Feature>"
        ]
      },
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.FormatVector#getClosestFeatureToCoordinate",
      "kind": "function",
      "description": "Get the closest feature to the provided coordinate.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/vectorsource.js",
      "params": [
        {
          "name": "coordinate",
          "types": [
            "ol.Coordinate"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.Feature"
        ]
      },
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.FormatVector#getExtent",
      "kind": "function",
      "description": "Get the extent of the features currently in the source.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/vectorsource.js",
      "returns": {
        "types": [
          "ol.Extent"
        ]
      },
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.FormatVector#getFeatureById",
      "kind": "function",
      "description": "Get a feature by its identifier (the value returned by feature.getId()).\nNote that the index treats string and numeric identifiers as the same.  So\n`source.getFeatureById(2)` will return a feature with id `'2'` or `2`.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/vectorsource.js",
      "params": [
        {
          "name": "id",
          "types": [
            "string",
            "number"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.Feature"
        ]
      },
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.FormatVector#removeFeature",
      "kind": "function",
      "description": "Remove a single feature from the source.  If you want to remove all features\nat once, use the {@link ol.source.Vector#clear source.clear()} method\ninstead.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/vectorsource.js",
      "params": [
        {
          "name": "feature",
          "types": [
            "ol.Feature"
          ]
        }
      ],
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.FormatVector#getAttributions",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/source.js",
      "returns": {
        "types": [
          "Array.<ol.Attribution>"
        ]
      },
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.FormatVector#getLogo",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/source.js",
      "returns": {
        "types": [
          "string",
          "olx.LogoOptions",
          "undefined"
        ]
      },
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.FormatVector#getProjection",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/source.js",
      "returns": {
        "types": [
          "ol.proj.Projection"
        ]
      },
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.FormatVector#getState",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/source.js",
      "returns": {
        "types": [
          "ol.source.State"
        ]
      },
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.FormatVector#changed",
      "kind": "function",
      "description": "Increases the revision counter and disptches a 'change' event.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.FormatVector#getRevision",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.FormatVector#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.FormatVector#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.FormatVector#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.FormatVector#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.\nNote that using the {@link ol.Observable.unByKey} static function is to\nbe preferred.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "key",
          "types": [
            "goog.events.Key"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.StaticVector#readFeatures",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/formatvectorsource.js",
      "params": [
        {
          "name": "source",
          "types": [
            "ArrayBuffer",
            "Document",
            "Node",
            "Object",
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "Array.<ol.Feature>"
        ]
      },
      "provides": [
        "ol.source.FormatVector"
      ]
    },
    {
      "name": "ol.source.StaticVector#addFeature",
      "kind": "function",
      "description": "Add a single feature to the source.  If you want to add a batch of features\nat once, call {@link ol.source.Vector#addFeatures source.addFeatures()}\ninstead.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/vectorsource.js",
      "params": [
        {
          "name": "feature",
          "types": [
            "ol.Feature"
          ]
        }
      ],
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.StaticVector#addFeatures",
      "kind": "function",
      "description": "Add a batch of features to the source.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/vectorsource.js",
      "params": [
        {
          "name": "features",
          "types": [
            "Array.<ol.Feature>"
          ]
        }
      ],
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.StaticVector#clear",
      "kind": "function",
      "description": "Remove all features from the source.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/vectorsource.js",
      "params": [
        {
          "name": "opt_fast",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.StaticVector#forEachFeature",
      "kind": "function",
      "description": "Iterate through all features on the source, calling the provided callback\nwith each one.  If the callback returns any \"truthy\" value, iteration will\nstop and the function will return the same value.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/vectorsource.js",
      "params": [
        {
          "name": "callback",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "T"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "S",
          "undefined"
        ]
      },
      "template": "T,S",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.StaticVector#forEachFeatureInExtent",
      "kind": "function",
      "description": "Iterate through all features whose bounding box intersects the provided\nextent (note that the feature's geometry may not intersect the extent),\ncalling the callback with each feature.  If the callback returns a \"truthy\"\nvalue, iteration will stop and the function will return the same value.\n\nIf you are interested in features whose geometry intersects an extent, call\nthe {@link ol.source.Vector#forEachFeatureIntersectingExtent\nsource.forEachFeatureIntersectingExtent()} method instead.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/vectorsource.js",
      "params": [
        {
          "name": "extent",
          "types": [
            "ol.Extent"
          ]
        },
        {
          "name": "callback",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "T"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "S",
          "undefined"
        ]
      },
      "template": "T,S",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.StaticVector#forEachFeatureIntersectingExtent",
      "kind": "function",
      "description": "Iterate through all features whose geometry intersects the provided extent,\ncalling the callback with each feature.  If the callback returns a \"truthy\"\nvalue, iteration will stop and the function will return the same value.\n\nIf you only want to test for bounding box intersection, call the\n{@link ol.source.Vector#forEachFeatureInExtent\nsource.forEachFeatureInExtent()} method instead.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/vectorsource.js",
      "params": [
        {
          "name": "extent",
          "types": [
            "ol.Extent"
          ]
        },
        {
          "name": "callback",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "T"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "S",
          "undefined"
        ]
      },
      "template": "T,S",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.StaticVector#getFeatures",
      "kind": "function",
      "description": "Get all features on the source.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/vectorsource.js",
      "returns": {
        "types": [
          "Array.<ol.Feature>"
        ]
      },
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.StaticVector#getFeaturesAtCoordinate",
      "kind": "function",
      "description": "Get all features whose geometry intersects the provided coordinate.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/vectorsource.js",
      "params": [
        {
          "name": "coordinate",
          "types": [
            "ol.Coordinate"
          ]
        }
      ],
      "returns": {
        "types": [
          "Array.<ol.Feature>"
        ]
      },
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.StaticVector#getClosestFeatureToCoordinate",
      "kind": "function",
      "description": "Get the closest feature to the provided coordinate.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/vectorsource.js",
      "params": [
        {
          "name": "coordinate",
          "types": [
            "ol.Coordinate"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.Feature"
        ]
      },
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.StaticVector#getExtent",
      "kind": "function",
      "description": "Get the extent of the features currently in the source.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/vectorsource.js",
      "returns": {
        "types": [
          "ol.Extent"
        ]
      },
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.StaticVector#getFeatureById",
      "kind": "function",
      "description": "Get a feature by its identifier (the value returned by feature.getId()).\nNote that the index treats string and numeric identifiers as the same.  So\n`source.getFeatureById(2)` will return a feature with id `'2'` or `2`.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/vectorsource.js",
      "params": [
        {
          "name": "id",
          "types": [
            "string",
            "number"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.Feature"
        ]
      },
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.StaticVector#removeFeature",
      "kind": "function",
      "description": "Remove a single feature from the source.  If you want to remove all features\nat once, use the {@link ol.source.Vector#clear source.clear()} method\ninstead.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/vectorsource.js",
      "params": [
        {
          "name": "feature",
          "types": [
            "ol.Feature"
          ]
        }
      ],
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.StaticVector#getAttributions",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/source.js",
      "returns": {
        "types": [
          "Array.<ol.Attribution>"
        ]
      },
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.StaticVector#getLogo",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/source.js",
      "returns": {
        "types": [
          "string",
          "olx.LogoOptions",
          "undefined"
        ]
      },
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.StaticVector#getProjection",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/source.js",
      "returns": {
        "types": [
          "ol.proj.Projection"
        ]
      },
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.StaticVector#getState",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/source.js",
      "returns": {
        "types": [
          "ol.source.State"
        ]
      },
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.StaticVector#changed",
      "kind": "function",
      "description": "Increases the revision counter and disptches a 'change' event.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.StaticVector#getRevision",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.StaticVector#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.StaticVector#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.StaticVector#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.StaticVector#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.\nNote that using the {@link ol.Observable.unByKey} static function is to\nbe preferred.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "key",
          "types": [
            "goog.events.Key"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.GeoJSON#readFeatures",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/formatvectorsource.js",
      "params": [
        {
          "name": "source",
          "types": [
            "ArrayBuffer",
            "Document",
            "Node",
            "Object",
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "Array.<ol.Feature>"
        ]
      },
      "provides": [
        "ol.source.FormatVector"
      ]
    },
    {
      "name": "ol.source.GeoJSON#addFeature",
      "kind": "function",
      "description": "Add a single feature to the source.  If you want to add a batch of features\nat once, call {@link ol.source.Vector#addFeatures source.addFeatures()}\ninstead.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/vectorsource.js",
      "params": [
        {
          "name": "feature",
          "types": [
            "ol.Feature"
          ]
        }
      ],
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.GeoJSON#addFeatures",
      "kind": "function",
      "description": "Add a batch of features to the source.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/vectorsource.js",
      "params": [
        {
          "name": "features",
          "types": [
            "Array.<ol.Feature>"
          ]
        }
      ],
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.GeoJSON#clear",
      "kind": "function",
      "description": "Remove all features from the source.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/vectorsource.js",
      "params": [
        {
          "name": "opt_fast",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.GeoJSON#forEachFeature",
      "kind": "function",
      "description": "Iterate through all features on the source, calling the provided callback\nwith each one.  If the callback returns any \"truthy\" value, iteration will\nstop and the function will return the same value.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/vectorsource.js",
      "params": [
        {
          "name": "callback",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "T"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "S",
          "undefined"
        ]
      },
      "template": "T,S",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.GeoJSON#forEachFeatureInExtent",
      "kind": "function",
      "description": "Iterate through all features whose bounding box intersects the provided\nextent (note that the feature's geometry may not intersect the extent),\ncalling the callback with each feature.  If the callback returns a \"truthy\"\nvalue, iteration will stop and the function will return the same value.\n\nIf you are interested in features whose geometry intersects an extent, call\nthe {@link ol.source.Vector#forEachFeatureIntersectingExtent\nsource.forEachFeatureIntersectingExtent()} method instead.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/vectorsource.js",
      "params": [
        {
          "name": "extent",
          "types": [
            "ol.Extent"
          ]
        },
        {
          "name": "callback",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "T"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "S",
          "undefined"
        ]
      },
      "template": "T,S",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.GeoJSON#forEachFeatureIntersectingExtent",
      "kind": "function",
      "description": "Iterate through all features whose geometry intersects the provided extent,\ncalling the callback with each feature.  If the callback returns a \"truthy\"\nvalue, iteration will stop and the function will return the same value.\n\nIf you only want to test for bounding box intersection, call the\n{@link ol.source.Vector#forEachFeatureInExtent\nsource.forEachFeatureInExtent()} method instead.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/vectorsource.js",
      "params": [
        {
          "name": "extent",
          "types": [
            "ol.Extent"
          ]
        },
        {
          "name": "callback",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "T"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "S",
          "undefined"
        ]
      },
      "template": "T,S",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.GeoJSON#getFeatures",
      "kind": "function",
      "description": "Get all features on the source.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/vectorsource.js",
      "returns": {
        "types": [
          "Array.<ol.Feature>"
        ]
      },
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.GeoJSON#getFeaturesAtCoordinate",
      "kind": "function",
      "description": "Get all features whose geometry intersects the provided coordinate.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/vectorsource.js",
      "params": [
        {
          "name": "coordinate",
          "types": [
            "ol.Coordinate"
          ]
        }
      ],
      "returns": {
        "types": [
          "Array.<ol.Feature>"
        ]
      },
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.GeoJSON#getClosestFeatureToCoordinate",
      "kind": "function",
      "description": "Get the closest feature to the provided coordinate.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/vectorsource.js",
      "params": [
        {
          "name": "coordinate",
          "types": [
            "ol.Coordinate"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.Feature"
        ]
      },
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.GeoJSON#getExtent",
      "kind": "function",
      "description": "Get the extent of the features currently in the source.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/vectorsource.js",
      "returns": {
        "types": [
          "ol.Extent"
        ]
      },
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.GeoJSON#getFeatureById",
      "kind": "function",
      "description": "Get a feature by its identifier (the value returned by feature.getId()).\nNote that the index treats string and numeric identifiers as the same.  So\n`source.getFeatureById(2)` will return a feature with id `'2'` or `2`.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/vectorsource.js",
      "params": [
        {
          "name": "id",
          "types": [
            "string",
            "number"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.Feature"
        ]
      },
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.GeoJSON#removeFeature",
      "kind": "function",
      "description": "Remove a single feature from the source.  If you want to remove all features\nat once, use the {@link ol.source.Vector#clear source.clear()} method\ninstead.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/vectorsource.js",
      "params": [
        {
          "name": "feature",
          "types": [
            "ol.Feature"
          ]
        }
      ],
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.GeoJSON#getAttributions",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/source.js",
      "returns": {
        "types": [
          "Array.<ol.Attribution>"
        ]
      },
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.GeoJSON#getLogo",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/source.js",
      "returns": {
        "types": [
          "string",
          "olx.LogoOptions",
          "undefined"
        ]
      },
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.GeoJSON#getProjection",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/source.js",
      "returns": {
        "types": [
          "ol.proj.Projection"
        ]
      },
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.GeoJSON#getState",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/source.js",
      "returns": {
        "types": [
          "ol.source.State"
        ]
      },
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.GeoJSON#changed",
      "kind": "function",
      "description": "Increases the revision counter and disptches a 'change' event.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.GeoJSON#getRevision",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.GeoJSON#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.GeoJSON#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.GeoJSON#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.GeoJSON#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.\nNote that using the {@link ol.Observable.unByKey} static function is to\nbe preferred.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "key",
          "types": [
            "goog.events.Key"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.GPX#readFeatures",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/formatvectorsource.js",
      "params": [
        {
          "name": "source",
          "types": [
            "ArrayBuffer",
            "Document",
            "Node",
            "Object",
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "Array.<ol.Feature>"
        ]
      },
      "provides": [
        "ol.source.FormatVector"
      ]
    },
    {
      "name": "ol.source.GPX#addFeature",
      "kind": "function",
      "description": "Add a single feature to the source.  If you want to add a batch of features\nat once, call {@link ol.source.Vector#addFeatures source.addFeatures()}\ninstead.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/vectorsource.js",
      "params": [
        {
          "name": "feature",
          "types": [
            "ol.Feature"
          ]
        }
      ],
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.GPX#addFeatures",
      "kind": "function",
      "description": "Add a batch of features to the source.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/vectorsource.js",
      "params": [
        {
          "name": "features",
          "types": [
            "Array.<ol.Feature>"
          ]
        }
      ],
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.GPX#clear",
      "kind": "function",
      "description": "Remove all features from the source.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/vectorsource.js",
      "params": [
        {
          "name": "opt_fast",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.GPX#forEachFeature",
      "kind": "function",
      "description": "Iterate through all features on the source, calling the provided callback\nwith each one.  If the callback returns any \"truthy\" value, iteration will\nstop and the function will return the same value.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/vectorsource.js",
      "params": [
        {
          "name": "callback",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "T"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "S",
          "undefined"
        ]
      },
      "template": "T,S",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.GPX#forEachFeatureInExtent",
      "kind": "function",
      "description": "Iterate through all features whose bounding box intersects the provided\nextent (note that the feature's geometry may not intersect the extent),\ncalling the callback with each feature.  If the callback returns a \"truthy\"\nvalue, iteration will stop and the function will return the same value.\n\nIf you are interested in features whose geometry intersects an extent, call\nthe {@link ol.source.Vector#forEachFeatureIntersectingExtent\nsource.forEachFeatureIntersectingExtent()} method instead.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/vectorsource.js",
      "params": [
        {
          "name": "extent",
          "types": [
            "ol.Extent"
          ]
        },
        {
          "name": "callback",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "T"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "S",
          "undefined"
        ]
      },
      "template": "T,S",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.GPX#forEachFeatureIntersectingExtent",
      "kind": "function",
      "description": "Iterate through all features whose geometry intersects the provided extent,\ncalling the callback with each feature.  If the callback returns a \"truthy\"\nvalue, iteration will stop and the function will return the same value.\n\nIf you only want to test for bounding box intersection, call the\n{@link ol.source.Vector#forEachFeatureInExtent\nsource.forEachFeatureInExtent()} method instead.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/vectorsource.js",
      "params": [
        {
          "name": "extent",
          "types": [
            "ol.Extent"
          ]
        },
        {
          "name": "callback",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "T"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "S",
          "undefined"
        ]
      },
      "template": "T,S",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.GPX#getFeatures",
      "kind": "function",
      "description": "Get all features on the source.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/vectorsource.js",
      "returns": {
        "types": [
          "Array.<ol.Feature>"
        ]
      },
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.GPX#getFeaturesAtCoordinate",
      "kind": "function",
      "description": "Get all features whose geometry intersects the provided coordinate.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/vectorsource.js",
      "params": [
        {
          "name": "coordinate",
          "types": [
            "ol.Coordinate"
          ]
        }
      ],
      "returns": {
        "types": [
          "Array.<ol.Feature>"
        ]
      },
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.GPX#getClosestFeatureToCoordinate",
      "kind": "function",
      "description": "Get the closest feature to the provided coordinate.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/vectorsource.js",
      "params": [
        {
          "name": "coordinate",
          "types": [
            "ol.Coordinate"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.Feature"
        ]
      },
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.GPX#getExtent",
      "kind": "function",
      "description": "Get the extent of the features currently in the source.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/vectorsource.js",
      "returns": {
        "types": [
          "ol.Extent"
        ]
      },
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.GPX#getFeatureById",
      "kind": "function",
      "description": "Get a feature by its identifier (the value returned by feature.getId()).\nNote that the index treats string and numeric identifiers as the same.  So\n`source.getFeatureById(2)` will return a feature with id `'2'` or `2`.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/vectorsource.js",
      "params": [
        {
          "name": "id",
          "types": [
            "string",
            "number"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.Feature"
        ]
      },
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.GPX#removeFeature",
      "kind": "function",
      "description": "Remove a single feature from the source.  If you want to remove all features\nat once, use the {@link ol.source.Vector#clear source.clear()} method\ninstead.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/vectorsource.js",
      "params": [
        {
          "name": "feature",
          "types": [
            "ol.Feature"
          ]
        }
      ],
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.GPX#getAttributions",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/source.js",
      "returns": {
        "types": [
          "Array.<ol.Attribution>"
        ]
      },
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.GPX#getLogo",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/source.js",
      "returns": {
        "types": [
          "string",
          "olx.LogoOptions",
          "undefined"
        ]
      },
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.GPX#getProjection",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/source.js",
      "returns": {
        "types": [
          "ol.proj.Projection"
        ]
      },
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.GPX#getState",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/source.js",
      "returns": {
        "types": [
          "ol.source.State"
        ]
      },
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.GPX#changed",
      "kind": "function",
      "description": "Increases the revision counter and disptches a 'change' event.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.GPX#getRevision",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.GPX#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.GPX#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.GPX#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.GPX#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.\nNote that using the {@link ol.Observable.unByKey} static function is to\nbe preferred.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "key",
          "types": [
            "goog.events.Key"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.IGC#readFeatures",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/formatvectorsource.js",
      "params": [
        {
          "name": "source",
          "types": [
            "ArrayBuffer",
            "Document",
            "Node",
            "Object",
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "Array.<ol.Feature>"
        ]
      },
      "provides": [
        "ol.source.FormatVector"
      ]
    },
    {
      "name": "ol.source.IGC#addFeature",
      "kind": "function",
      "description": "Add a single feature to the source.  If you want to add a batch of features\nat once, call {@link ol.source.Vector#addFeatures source.addFeatures()}\ninstead.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/vectorsource.js",
      "params": [
        {
          "name": "feature",
          "types": [
            "ol.Feature"
          ]
        }
      ],
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.IGC#addFeatures",
      "kind": "function",
      "description": "Add a batch of features to the source.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/vectorsource.js",
      "params": [
        {
          "name": "features",
          "types": [
            "Array.<ol.Feature>"
          ]
        }
      ],
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.IGC#clear",
      "kind": "function",
      "description": "Remove all features from the source.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/vectorsource.js",
      "params": [
        {
          "name": "opt_fast",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.IGC#forEachFeature",
      "kind": "function",
      "description": "Iterate through all features on the source, calling the provided callback\nwith each one.  If the callback returns any \"truthy\" value, iteration will\nstop and the function will return the same value.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/vectorsource.js",
      "params": [
        {
          "name": "callback",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "T"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "S",
          "undefined"
        ]
      },
      "template": "T,S",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.IGC#forEachFeatureInExtent",
      "kind": "function",
      "description": "Iterate through all features whose bounding box intersects the provided\nextent (note that the feature's geometry may not intersect the extent),\ncalling the callback with each feature.  If the callback returns a \"truthy\"\nvalue, iteration will stop and the function will return the same value.\n\nIf you are interested in features whose geometry intersects an extent, call\nthe {@link ol.source.Vector#forEachFeatureIntersectingExtent\nsource.forEachFeatureIntersectingExtent()} method instead.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/vectorsource.js",
      "params": [
        {
          "name": "extent",
          "types": [
            "ol.Extent"
          ]
        },
        {
          "name": "callback",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "T"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "S",
          "undefined"
        ]
      },
      "template": "T,S",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.IGC#forEachFeatureIntersectingExtent",
      "kind": "function",
      "description": "Iterate through all features whose geometry intersects the provided extent,\ncalling the callback with each feature.  If the callback returns a \"truthy\"\nvalue, iteration will stop and the function will return the same value.\n\nIf you only want to test for bounding box intersection, call the\n{@link ol.source.Vector#forEachFeatureInExtent\nsource.forEachFeatureInExtent()} method instead.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/vectorsource.js",
      "params": [
        {
          "name": "extent",
          "types": [
            "ol.Extent"
          ]
        },
        {
          "name": "callback",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "T"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "S",
          "undefined"
        ]
      },
      "template": "T,S",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.IGC#getFeatures",
      "kind": "function",
      "description": "Get all features on the source.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/vectorsource.js",
      "returns": {
        "types": [
          "Array.<ol.Feature>"
        ]
      },
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.IGC#getFeaturesAtCoordinate",
      "kind": "function",
      "description": "Get all features whose geometry intersects the provided coordinate.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/vectorsource.js",
      "params": [
        {
          "name": "coordinate",
          "types": [
            "ol.Coordinate"
          ]
        }
      ],
      "returns": {
        "types": [
          "Array.<ol.Feature>"
        ]
      },
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.IGC#getClosestFeatureToCoordinate",
      "kind": "function",
      "description": "Get the closest feature to the provided coordinate.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/vectorsource.js",
      "params": [
        {
          "name": "coordinate",
          "types": [
            "ol.Coordinate"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.Feature"
        ]
      },
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.IGC#getExtent",
      "kind": "function",
      "description": "Get the extent of the features currently in the source.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/vectorsource.js",
      "returns": {
        "types": [
          "ol.Extent"
        ]
      },
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.IGC#getFeatureById",
      "kind": "function",
      "description": "Get a feature by its identifier (the value returned by feature.getId()).\nNote that the index treats string and numeric identifiers as the same.  So\n`source.getFeatureById(2)` will return a feature with id `'2'` or `2`.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/vectorsource.js",
      "params": [
        {
          "name": "id",
          "types": [
            "string",
            "number"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.Feature"
        ]
      },
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.IGC#removeFeature",
      "kind": "function",
      "description": "Remove a single feature from the source.  If you want to remove all features\nat once, use the {@link ol.source.Vector#clear source.clear()} method\ninstead.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/vectorsource.js",
      "params": [
        {
          "name": "feature",
          "types": [
            "ol.Feature"
          ]
        }
      ],
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.IGC#getAttributions",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/source.js",
      "returns": {
        "types": [
          "Array.<ol.Attribution>"
        ]
      },
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.IGC#getLogo",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/source.js",
      "returns": {
        "types": [
          "string",
          "olx.LogoOptions",
          "undefined"
        ]
      },
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.IGC#getProjection",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/source.js",
      "returns": {
        "types": [
          "ol.proj.Projection"
        ]
      },
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.IGC#getState",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/source.js",
      "returns": {
        "types": [
          "ol.source.State"
        ]
      },
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.IGC#changed",
      "kind": "function",
      "description": "Increases the revision counter and disptches a 'change' event.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.IGC#getRevision",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.IGC#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.IGC#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.IGC#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.IGC#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.\nNote that using the {@link ol.Observable.unByKey} static function is to\nbe preferred.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "key",
          "types": [
            "goog.events.Key"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Image#getAttributions",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/source.js",
      "returns": {
        "types": [
          "Array.<ol.Attribution>"
        ]
      },
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.Image#getLogo",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/source.js",
      "returns": {
        "types": [
          "string",
          "olx.LogoOptions",
          "undefined"
        ]
      },
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.Image#getProjection",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/source.js",
      "returns": {
        "types": [
          "ol.proj.Projection"
        ]
      },
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.Image#getState",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/source.js",
      "returns": {
        "types": [
          "ol.source.State"
        ]
      },
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.Image#changed",
      "kind": "function",
      "description": "Increases the revision counter and disptches a 'change' event.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Image#getRevision",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Image#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Image#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Image#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Image#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.\nNote that using the {@link ol.Observable.unByKey} static function is to\nbe preferred.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "key",
          "types": [
            "goog.events.Key"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.ImageCanvas#getAttributions",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/source.js",
      "returns": {
        "types": [
          "Array.<ol.Attribution>"
        ]
      },
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.ImageCanvas#getLogo",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/source.js",
      "returns": {
        "types": [
          "string",
          "olx.LogoOptions",
          "undefined"
        ]
      },
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.ImageCanvas#getProjection",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/source.js",
      "returns": {
        "types": [
          "ol.proj.Projection"
        ]
      },
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.ImageCanvas#getState",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/source.js",
      "returns": {
        "types": [
          "ol.source.State"
        ]
      },
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.ImageCanvas#changed",
      "kind": "function",
      "description": "Increases the revision counter and disptches a 'change' event.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.ImageCanvas#getRevision",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.ImageCanvas#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.ImageCanvas#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.ImageCanvas#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.ImageCanvas#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.\nNote that using the {@link ol.Observable.unByKey} static function is to\nbe preferred.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "key",
          "types": [
            "goog.events.Key"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.ImageMapGuide#getAttributions",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/source.js",
      "returns": {
        "types": [
          "Array.<ol.Attribution>"
        ]
      },
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.ImageMapGuide#getLogo",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/source.js",
      "returns": {
        "types": [
          "string",
          "olx.LogoOptions",
          "undefined"
        ]
      },
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.ImageMapGuide#getProjection",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/source.js",
      "returns": {
        "types": [
          "ol.proj.Projection"
        ]
      },
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.ImageMapGuide#getState",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/source.js",
      "returns": {
        "types": [
          "ol.source.State"
        ]
      },
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.ImageMapGuide#changed",
      "kind": "function",
      "description": "Increases the revision counter and disptches a 'change' event.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.ImageMapGuide#getRevision",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.ImageMapGuide#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.ImageMapGuide#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.ImageMapGuide#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.ImageMapGuide#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.\nNote that using the {@link ol.Observable.unByKey} static function is to\nbe preferred.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "key",
          "types": [
            "goog.events.Key"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.ImageStatic#getAttributions",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/source.js",
      "returns": {
        "types": [
          "Array.<ol.Attribution>"
        ]
      },
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.ImageStatic#getLogo",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/source.js",
      "returns": {
        "types": [
          "string",
          "olx.LogoOptions",
          "undefined"
        ]
      },
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.ImageStatic#getProjection",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/source.js",
      "returns": {
        "types": [
          "ol.proj.Projection"
        ]
      },
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.ImageStatic#getState",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/source.js",
      "returns": {
        "types": [
          "ol.source.State"
        ]
      },
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.ImageStatic#changed",
      "kind": "function",
      "description": "Increases the revision counter and disptches a 'change' event.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.ImageStatic#getRevision",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.ImageStatic#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.ImageStatic#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.ImageStatic#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.ImageStatic#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.\nNote that using the {@link ol.Observable.unByKey} static function is to\nbe preferred.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "key",
          "types": [
            "goog.events.Key"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.ImageVector#getAttributions",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/source.js",
      "returns": {
        "types": [
          "Array.<ol.Attribution>"
        ]
      },
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.ImageVector#getLogo",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/source.js",
      "returns": {
        "types": [
          "string",
          "olx.LogoOptions",
          "undefined"
        ]
      },
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.ImageVector#getProjection",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/source.js",
      "returns": {
        "types": [
          "ol.proj.Projection"
        ]
      },
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.ImageVector#getState",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/source.js",
      "returns": {
        "types": [
          "ol.source.State"
        ]
      },
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.ImageVector#changed",
      "kind": "function",
      "description": "Increases the revision counter and disptches a 'change' event.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.ImageVector#getRevision",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.ImageVector#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.ImageVector#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.ImageVector#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.ImageVector#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.\nNote that using the {@link ol.Observable.unByKey} static function is to\nbe preferred.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "key",
          "types": [
            "goog.events.Key"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.ImageWMS#getAttributions",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/source.js",
      "returns": {
        "types": [
          "Array.<ol.Attribution>"
        ]
      },
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.ImageWMS#getLogo",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/source.js",
      "returns": {
        "types": [
          "string",
          "olx.LogoOptions",
          "undefined"
        ]
      },
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.ImageWMS#getProjection",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/source.js",
      "returns": {
        "types": [
          "ol.proj.Projection"
        ]
      },
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.ImageWMS#getState",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/source.js",
      "returns": {
        "types": [
          "ol.source.State"
        ]
      },
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.ImageWMS#changed",
      "kind": "function",
      "description": "Increases the revision counter and disptches a 'change' event.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.ImageWMS#getRevision",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.ImageWMS#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.ImageWMS#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.ImageWMS#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.ImageWMS#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.\nNote that using the {@link ol.Observable.unByKey} static function is to\nbe preferred.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "key",
          "types": [
            "goog.events.Key"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.KML#readFeatures",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/formatvectorsource.js",
      "params": [
        {
          "name": "source",
          "types": [
            "ArrayBuffer",
            "Document",
            "Node",
            "Object",
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "Array.<ol.Feature>"
        ]
      },
      "provides": [
        "ol.source.FormatVector"
      ]
    },
    {
      "name": "ol.source.KML#addFeature",
      "kind": "function",
      "description": "Add a single feature to the source.  If you want to add a batch of features\nat once, call {@link ol.source.Vector#addFeatures source.addFeatures()}\ninstead.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/vectorsource.js",
      "params": [
        {
          "name": "feature",
          "types": [
            "ol.Feature"
          ]
        }
      ],
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.KML#addFeatures",
      "kind": "function",
      "description": "Add a batch of features to the source.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/vectorsource.js",
      "params": [
        {
          "name": "features",
          "types": [
            "Array.<ol.Feature>"
          ]
        }
      ],
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.KML#clear",
      "kind": "function",
      "description": "Remove all features from the source.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/vectorsource.js",
      "params": [
        {
          "name": "opt_fast",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.KML#forEachFeature",
      "kind": "function",
      "description": "Iterate through all features on the source, calling the provided callback\nwith each one.  If the callback returns any \"truthy\" value, iteration will\nstop and the function will return the same value.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/vectorsource.js",
      "params": [
        {
          "name": "callback",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "T"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "S",
          "undefined"
        ]
      },
      "template": "T,S",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.KML#forEachFeatureInExtent",
      "kind": "function",
      "description": "Iterate through all features whose bounding box intersects the provided\nextent (note that the feature's geometry may not intersect the extent),\ncalling the callback with each feature.  If the callback returns a \"truthy\"\nvalue, iteration will stop and the function will return the same value.\n\nIf you are interested in features whose geometry intersects an extent, call\nthe {@link ol.source.Vector#forEachFeatureIntersectingExtent\nsource.forEachFeatureIntersectingExtent()} method instead.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/vectorsource.js",
      "params": [
        {
          "name": "extent",
          "types": [
            "ol.Extent"
          ]
        },
        {
          "name": "callback",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "T"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "S",
          "undefined"
        ]
      },
      "template": "T,S",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.KML#forEachFeatureIntersectingExtent",
      "kind": "function",
      "description": "Iterate through all features whose geometry intersects the provided extent,\ncalling the callback with each feature.  If the callback returns a \"truthy\"\nvalue, iteration will stop and the function will return the same value.\n\nIf you only want to test for bounding box intersection, call the\n{@link ol.source.Vector#forEachFeatureInExtent\nsource.forEachFeatureInExtent()} method instead.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/vectorsource.js",
      "params": [
        {
          "name": "extent",
          "types": [
            "ol.Extent"
          ]
        },
        {
          "name": "callback",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "T"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "S",
          "undefined"
        ]
      },
      "template": "T,S",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.KML#getFeatures",
      "kind": "function",
      "description": "Get all features on the source.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/vectorsource.js",
      "returns": {
        "types": [
          "Array.<ol.Feature>"
        ]
      },
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.KML#getFeaturesAtCoordinate",
      "kind": "function",
      "description": "Get all features whose geometry intersects the provided coordinate.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/vectorsource.js",
      "params": [
        {
          "name": "coordinate",
          "types": [
            "ol.Coordinate"
          ]
        }
      ],
      "returns": {
        "types": [
          "Array.<ol.Feature>"
        ]
      },
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.KML#getClosestFeatureToCoordinate",
      "kind": "function",
      "description": "Get the closest feature to the provided coordinate.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/vectorsource.js",
      "params": [
        {
          "name": "coordinate",
          "types": [
            "ol.Coordinate"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.Feature"
        ]
      },
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.KML#getExtent",
      "kind": "function",
      "description": "Get the extent of the features currently in the source.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/vectorsource.js",
      "returns": {
        "types": [
          "ol.Extent"
        ]
      },
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.KML#getFeatureById",
      "kind": "function",
      "description": "Get a feature by its identifier (the value returned by feature.getId()).\nNote that the index treats string and numeric identifiers as the same.  So\n`source.getFeatureById(2)` will return a feature with id `'2'` or `2`.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/vectorsource.js",
      "params": [
        {
          "name": "id",
          "types": [
            "string",
            "number"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.Feature"
        ]
      },
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.KML#removeFeature",
      "kind": "function",
      "description": "Remove a single feature from the source.  If you want to remove all features\nat once, use the {@link ol.source.Vector#clear source.clear()} method\ninstead.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/vectorsource.js",
      "params": [
        {
          "name": "feature",
          "types": [
            "ol.Feature"
          ]
        }
      ],
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.KML#getAttributions",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/source.js",
      "returns": {
        "types": [
          "Array.<ol.Attribution>"
        ]
      },
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.KML#getLogo",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/source.js",
      "returns": {
        "types": [
          "string",
          "olx.LogoOptions",
          "undefined"
        ]
      },
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.KML#getProjection",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/source.js",
      "returns": {
        "types": [
          "ol.proj.Projection"
        ]
      },
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.KML#getState",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/source.js",
      "returns": {
        "types": [
          "ol.source.State"
        ]
      },
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.KML#changed",
      "kind": "function",
      "description": "Increases the revision counter and disptches a 'change' event.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.KML#getRevision",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.KML#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.KML#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.KML#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.KML#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.\nNote that using the {@link ol.Observable.unByKey} static function is to\nbe preferred.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "key",
          "types": [
            "goog.events.Key"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.XYZ#getTileLoadFunction",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/tileimagesource.js",
      "returns": {
        "types": [
          "ol.TileLoadFunctionType"
        ]
      },
      "provides": [
        "ol.source.TileImage"
      ]
    },
    {
      "name": "ol.source.XYZ#getTileUrlFunction",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/tileimagesource.js",
      "returns": {
        "types": [
          "ol.TileUrlFunctionType"
        ]
      },
      "provides": [
        "ol.source.TileImage"
      ]
    },
    {
      "name": "ol.source.XYZ#setTileLoadFunction",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/tileimagesource.js",
      "params": [
        {
          "name": "tileLoadFunction",
          "types": [
            "ol.TileLoadFunctionType"
          ]
        }
      ],
      "provides": [
        "ol.source.TileImage"
      ]
    },
    {
      "name": "ol.source.XYZ#getTileGrid",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/tilesource.js",
      "returns": {
        "types": [
          "ol.tilegrid.TileGrid"
        ]
      },
      "provides": [
        "ol.source.Tile",
        "ol.source.TileOptions"
      ]
    },
    {
      "name": "ol.source.XYZ#getAttributions",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/source.js",
      "returns": {
        "types": [
          "Array.<ol.Attribution>"
        ]
      },
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.XYZ#getLogo",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/source.js",
      "returns": {
        "types": [
          "string",
          "olx.LogoOptions",
          "undefined"
        ]
      },
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.XYZ#getProjection",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/source.js",
      "returns": {
        "types": [
          "ol.proj.Projection"
        ]
      },
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.XYZ#getState",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/source.js",
      "returns": {
        "types": [
          "ol.source.State"
        ]
      },
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.XYZ#changed",
      "kind": "function",
      "description": "Increases the revision counter and disptches a 'change' event.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.XYZ#getRevision",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.XYZ#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.XYZ#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.XYZ#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.XYZ#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.\nNote that using the {@link ol.Observable.unByKey} static function is to\nbe preferred.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "key",
          "types": [
            "goog.events.Key"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.MapQuest#setTileUrlFunction",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/xyzsource.js",
      "provides": [
        "ol.source.XYZ"
      ]
    },
    {
      "name": "ol.source.MapQuest#setUrl",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/xyzsource.js",
      "params": [
        {
          "name": "url",
          "types": [
            "string"
          ]
        }
      ],
      "provides": [
        "ol.source.XYZ"
      ]
    },
    {
      "name": "ol.source.MapQuest#getTileLoadFunction",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/tileimagesource.js",
      "returns": {
        "types": [
          "ol.TileLoadFunctionType"
        ]
      },
      "provides": [
        "ol.source.TileImage"
      ]
    },
    {
      "name": "ol.source.MapQuest#getTileUrlFunction",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/tileimagesource.js",
      "returns": {
        "types": [
          "ol.TileUrlFunctionType"
        ]
      },
      "provides": [
        "ol.source.TileImage"
      ]
    },
    {
      "name": "ol.source.MapQuest#setTileLoadFunction",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/tileimagesource.js",
      "params": [
        {
          "name": "tileLoadFunction",
          "types": [
            "ol.TileLoadFunctionType"
          ]
        }
      ],
      "provides": [
        "ol.source.TileImage"
      ]
    },
    {
      "name": "ol.source.MapQuest#getTileGrid",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/tilesource.js",
      "returns": {
        "types": [
          "ol.tilegrid.TileGrid"
        ]
      },
      "provides": [
        "ol.source.Tile",
        "ol.source.TileOptions"
      ]
    },
    {
      "name": "ol.source.MapQuest#getAttributions",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/source.js",
      "returns": {
        "types": [
          "Array.<ol.Attribution>"
        ]
      },
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.MapQuest#getLogo",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/source.js",
      "returns": {
        "types": [
          "string",
          "olx.LogoOptions",
          "undefined"
        ]
      },
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.MapQuest#getProjection",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/source.js",
      "returns": {
        "types": [
          "ol.proj.Projection"
        ]
      },
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.MapQuest#getState",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/source.js",
      "returns": {
        "types": [
          "ol.source.State"
        ]
      },
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.MapQuest#changed",
      "kind": "function",
      "description": "Increases the revision counter and disptches a 'change' event.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.MapQuest#getRevision",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.MapQuest#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.MapQuest#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.MapQuest#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.MapQuest#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.\nNote that using the {@link ol.Observable.unByKey} static function is to\nbe preferred.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "key",
          "types": [
            "goog.events.Key"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.OSM#setTileUrlFunction",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/xyzsource.js",
      "provides": [
        "ol.source.XYZ"
      ]
    },
    {
      "name": "ol.source.OSM#setUrl",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/xyzsource.js",
      "params": [
        {
          "name": "url",
          "types": [
            "string"
          ]
        }
      ],
      "provides": [
        "ol.source.XYZ"
      ]
    },
    {
      "name": "ol.source.OSM#getTileLoadFunction",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/tileimagesource.js",
      "returns": {
        "types": [
          "ol.TileLoadFunctionType"
        ]
      },
      "provides": [
        "ol.source.TileImage"
      ]
    },
    {
      "name": "ol.source.OSM#getTileUrlFunction",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/tileimagesource.js",
      "returns": {
        "types": [
          "ol.TileUrlFunctionType"
        ]
      },
      "provides": [
        "ol.source.TileImage"
      ]
    },
    {
      "name": "ol.source.OSM#setTileLoadFunction",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/tileimagesource.js",
      "params": [
        {
          "name": "tileLoadFunction",
          "types": [
            "ol.TileLoadFunctionType"
          ]
        }
      ],
      "provides": [
        "ol.source.TileImage"
      ]
    },
    {
      "name": "ol.source.OSM#getTileGrid",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/tilesource.js",
      "returns": {
        "types": [
          "ol.tilegrid.TileGrid"
        ]
      },
      "provides": [
        "ol.source.Tile",
        "ol.source.TileOptions"
      ]
    },
    {
      "name": "ol.source.OSM#getAttributions",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/source.js",
      "returns": {
        "types": [
          "Array.<ol.Attribution>"
        ]
      },
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.OSM#getLogo",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/source.js",
      "returns": {
        "types": [
          "string",
          "olx.LogoOptions",
          "undefined"
        ]
      },
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.OSM#getProjection",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/source.js",
      "returns": {
        "types": [
          "ol.proj.Projection"
        ]
      },
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.OSM#getState",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/source.js",
      "returns": {
        "types": [
          "ol.source.State"
        ]
      },
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.OSM#changed",
      "kind": "function",
      "description": "Increases the revision counter and disptches a 'change' event.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.OSM#getRevision",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.OSM#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.OSM#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.OSM#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.OSM#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.\nNote that using the {@link ol.Observable.unByKey} static function is to\nbe preferred.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "key",
          "types": [
            "goog.events.Key"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.OSMXML#readFeatures",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/formatvectorsource.js",
      "params": [
        {
          "name": "source",
          "types": [
            "ArrayBuffer",
            "Document",
            "Node",
            "Object",
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "Array.<ol.Feature>"
        ]
      },
      "provides": [
        "ol.source.FormatVector"
      ]
    },
    {
      "name": "ol.source.OSMXML#addFeature",
      "kind": "function",
      "description": "Add a single feature to the source.  If you want to add a batch of features\nat once, call {@link ol.source.Vector#addFeatures source.addFeatures()}\ninstead.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/vectorsource.js",
      "params": [
        {
          "name": "feature",
          "types": [
            "ol.Feature"
          ]
        }
      ],
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.OSMXML#addFeatures",
      "kind": "function",
      "description": "Add a batch of features to the source.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/vectorsource.js",
      "params": [
        {
          "name": "features",
          "types": [
            "Array.<ol.Feature>"
          ]
        }
      ],
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.OSMXML#clear",
      "kind": "function",
      "description": "Remove all features from the source.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/vectorsource.js",
      "params": [
        {
          "name": "opt_fast",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.OSMXML#forEachFeature",
      "kind": "function",
      "description": "Iterate through all features on the source, calling the provided callback\nwith each one.  If the callback returns any \"truthy\" value, iteration will\nstop and the function will return the same value.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/vectorsource.js",
      "params": [
        {
          "name": "callback",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "T"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "S",
          "undefined"
        ]
      },
      "template": "T,S",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.OSMXML#forEachFeatureInExtent",
      "kind": "function",
      "description": "Iterate through all features whose bounding box intersects the provided\nextent (note that the feature's geometry may not intersect the extent),\ncalling the callback with each feature.  If the callback returns a \"truthy\"\nvalue, iteration will stop and the function will return the same value.\n\nIf you are interested in features whose geometry intersects an extent, call\nthe {@link ol.source.Vector#forEachFeatureIntersectingExtent\nsource.forEachFeatureIntersectingExtent()} method instead.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/vectorsource.js",
      "params": [
        {
          "name": "extent",
          "types": [
            "ol.Extent"
          ]
        },
        {
          "name": "callback",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "T"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "S",
          "undefined"
        ]
      },
      "template": "T,S",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.OSMXML#forEachFeatureIntersectingExtent",
      "kind": "function",
      "description": "Iterate through all features whose geometry intersects the provided extent,\ncalling the callback with each feature.  If the callback returns a \"truthy\"\nvalue, iteration will stop and the function will return the same value.\n\nIf you only want to test for bounding box intersection, call the\n{@link ol.source.Vector#forEachFeatureInExtent\nsource.forEachFeatureInExtent()} method instead.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/vectorsource.js",
      "params": [
        {
          "name": "extent",
          "types": [
            "ol.Extent"
          ]
        },
        {
          "name": "callback",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "T"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "S",
          "undefined"
        ]
      },
      "template": "T,S",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.OSMXML#getFeatures",
      "kind": "function",
      "description": "Get all features on the source.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/vectorsource.js",
      "returns": {
        "types": [
          "Array.<ol.Feature>"
        ]
      },
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.OSMXML#getFeaturesAtCoordinate",
      "kind": "function",
      "description": "Get all features whose geometry intersects the provided coordinate.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/vectorsource.js",
      "params": [
        {
          "name": "coordinate",
          "types": [
            "ol.Coordinate"
          ]
        }
      ],
      "returns": {
        "types": [
          "Array.<ol.Feature>"
        ]
      },
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.OSMXML#getClosestFeatureToCoordinate",
      "kind": "function",
      "description": "Get the closest feature to the provided coordinate.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/vectorsource.js",
      "params": [
        {
          "name": "coordinate",
          "types": [
            "ol.Coordinate"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.Feature"
        ]
      },
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.OSMXML#getExtent",
      "kind": "function",
      "description": "Get the extent of the features currently in the source.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/vectorsource.js",
      "returns": {
        "types": [
          "ol.Extent"
        ]
      },
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.OSMXML#getFeatureById",
      "kind": "function",
      "description": "Get a feature by its identifier (the value returned by feature.getId()).\nNote that the index treats string and numeric identifiers as the same.  So\n`source.getFeatureById(2)` will return a feature with id `'2'` or `2`.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/vectorsource.js",
      "params": [
        {
          "name": "id",
          "types": [
            "string",
            "number"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.Feature"
        ]
      },
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.OSMXML#removeFeature",
      "kind": "function",
      "description": "Remove a single feature from the source.  If you want to remove all features\nat once, use the {@link ol.source.Vector#clear source.clear()} method\ninstead.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/vectorsource.js",
      "params": [
        {
          "name": "feature",
          "types": [
            "ol.Feature"
          ]
        }
      ],
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.OSMXML#getAttributions",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/source.js",
      "returns": {
        "types": [
          "Array.<ol.Attribution>"
        ]
      },
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.OSMXML#getLogo",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/source.js",
      "returns": {
        "types": [
          "string",
          "olx.LogoOptions",
          "undefined"
        ]
      },
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.OSMXML#getProjection",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/source.js",
      "returns": {
        "types": [
          "ol.proj.Projection"
        ]
      },
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.OSMXML#getState",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/source.js",
      "returns": {
        "types": [
          "ol.source.State"
        ]
      },
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.OSMXML#changed",
      "kind": "function",
      "description": "Increases the revision counter and disptches a 'change' event.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.OSMXML#getRevision",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.OSMXML#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.OSMXML#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.OSMXML#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.OSMXML#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.\nNote that using the {@link ol.Observable.unByKey} static function is to\nbe preferred.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "key",
          "types": [
            "goog.events.Key"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.ServerVector#addFeature",
      "kind": "function",
      "description": "Add a single feature to the source.  If you want to add a batch of features\nat once, call {@link ol.source.Vector#addFeatures source.addFeatures()}\ninstead.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/vectorsource.js",
      "params": [
        {
          "name": "feature",
          "types": [
            "ol.Feature"
          ]
        }
      ],
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.ServerVector#addFeatures",
      "kind": "function",
      "description": "Add a batch of features to the source.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/vectorsource.js",
      "params": [
        {
          "name": "features",
          "types": [
            "Array.<ol.Feature>"
          ]
        }
      ],
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.ServerVector#forEachFeature",
      "kind": "function",
      "description": "Iterate through all features on the source, calling the provided callback\nwith each one.  If the callback returns any \"truthy\" value, iteration will\nstop and the function will return the same value.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/vectorsource.js",
      "params": [
        {
          "name": "callback",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "T"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "S",
          "undefined"
        ]
      },
      "template": "T,S",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.ServerVector#forEachFeatureInExtent",
      "kind": "function",
      "description": "Iterate through all features whose bounding box intersects the provided\nextent (note that the feature's geometry may not intersect the extent),\ncalling the callback with each feature.  If the callback returns a \"truthy\"\nvalue, iteration will stop and the function will return the same value.\n\nIf you are interested in features whose geometry intersects an extent, call\nthe {@link ol.source.Vector#forEachFeatureIntersectingExtent\nsource.forEachFeatureIntersectingExtent()} method instead.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/vectorsource.js",
      "params": [
        {
          "name": "extent",
          "types": [
            "ol.Extent"
          ]
        },
        {
          "name": "callback",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "T"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "S",
          "undefined"
        ]
      },
      "template": "T,S",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.ServerVector#forEachFeatureIntersectingExtent",
      "kind": "function",
      "description": "Iterate through all features whose geometry intersects the provided extent,\ncalling the callback with each feature.  If the callback returns a \"truthy\"\nvalue, iteration will stop and the function will return the same value.\n\nIf you only want to test for bounding box intersection, call the\n{@link ol.source.Vector#forEachFeatureInExtent\nsource.forEachFeatureInExtent()} method instead.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/vectorsource.js",
      "params": [
        {
          "name": "extent",
          "types": [
            "ol.Extent"
          ]
        },
        {
          "name": "callback",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "T"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "S",
          "undefined"
        ]
      },
      "template": "T,S",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.ServerVector#getFeatures",
      "kind": "function",
      "description": "Get all features on the source.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/vectorsource.js",
      "returns": {
        "types": [
          "Array.<ol.Feature>"
        ]
      },
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.ServerVector#getFeaturesAtCoordinate",
      "kind": "function",
      "description": "Get all features whose geometry intersects the provided coordinate.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/vectorsource.js",
      "params": [
        {
          "name": "coordinate",
          "types": [
            "ol.Coordinate"
          ]
        }
      ],
      "returns": {
        "types": [
          "Array.<ol.Feature>"
        ]
      },
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.ServerVector#getClosestFeatureToCoordinate",
      "kind": "function",
      "description": "Get the closest feature to the provided coordinate.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/vectorsource.js",
      "params": [
        {
          "name": "coordinate",
          "types": [
            "ol.Coordinate"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.Feature"
        ]
      },
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.ServerVector#getExtent",
      "kind": "function",
      "description": "Get the extent of the features currently in the source.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/vectorsource.js",
      "returns": {
        "types": [
          "ol.Extent"
        ]
      },
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.ServerVector#getFeatureById",
      "kind": "function",
      "description": "Get a feature by its identifier (the value returned by feature.getId()).\nNote that the index treats string and numeric identifiers as the same.  So\n`source.getFeatureById(2)` will return a feature with id `'2'` or `2`.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/vectorsource.js",
      "params": [
        {
          "name": "id",
          "types": [
            "string",
            "number"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.Feature"
        ]
      },
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.ServerVector#removeFeature",
      "kind": "function",
      "description": "Remove a single feature from the source.  If you want to remove all features\nat once, use the {@link ol.source.Vector#clear source.clear()} method\ninstead.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/vectorsource.js",
      "params": [
        {
          "name": "feature",
          "types": [
            "ol.Feature"
          ]
        }
      ],
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.ServerVector#getAttributions",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/source.js",
      "returns": {
        "types": [
          "Array.<ol.Attribution>"
        ]
      },
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.ServerVector#getLogo",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/source.js",
      "returns": {
        "types": [
          "string",
          "olx.LogoOptions",
          "undefined"
        ]
      },
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.ServerVector#getProjection",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/source.js",
      "returns": {
        "types": [
          "ol.proj.Projection"
        ]
      },
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.ServerVector#getState",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/source.js",
      "returns": {
        "types": [
          "ol.source.State"
        ]
      },
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.ServerVector#changed",
      "kind": "function",
      "description": "Increases the revision counter and disptches a 'change' event.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.ServerVector#getRevision",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.ServerVector#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.ServerVector#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.ServerVector#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.ServerVector#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.\nNote that using the {@link ol.Observable.unByKey} static function is to\nbe preferred.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "key",
          "types": [
            "goog.events.Key"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Stamen#setTileUrlFunction",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/xyzsource.js",
      "provides": [
        "ol.source.XYZ"
      ]
    },
    {
      "name": "ol.source.Stamen#setUrl",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/xyzsource.js",
      "params": [
        {
          "name": "url",
          "types": [
            "string"
          ]
        }
      ],
      "provides": [
        "ol.source.XYZ"
      ]
    },
    {
      "name": "ol.source.Stamen#getTileLoadFunction",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/tileimagesource.js",
      "returns": {
        "types": [
          "ol.TileLoadFunctionType"
        ]
      },
      "provides": [
        "ol.source.TileImage"
      ]
    },
    {
      "name": "ol.source.Stamen#getTileUrlFunction",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/tileimagesource.js",
      "returns": {
        "types": [
          "ol.TileUrlFunctionType"
        ]
      },
      "provides": [
        "ol.source.TileImage"
      ]
    },
    {
      "name": "ol.source.Stamen#setTileLoadFunction",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/tileimagesource.js",
      "params": [
        {
          "name": "tileLoadFunction",
          "types": [
            "ol.TileLoadFunctionType"
          ]
        }
      ],
      "provides": [
        "ol.source.TileImage"
      ]
    },
    {
      "name": "ol.source.Stamen#getTileGrid",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/tilesource.js",
      "returns": {
        "types": [
          "ol.tilegrid.TileGrid"
        ]
      },
      "provides": [
        "ol.source.Tile",
        "ol.source.TileOptions"
      ]
    },
    {
      "name": "ol.source.Stamen#getAttributions",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/source.js",
      "returns": {
        "types": [
          "Array.<ol.Attribution>"
        ]
      },
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.Stamen#getLogo",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/source.js",
      "returns": {
        "types": [
          "string",
          "olx.LogoOptions",
          "undefined"
        ]
      },
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.Stamen#getProjection",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/source.js",
      "returns": {
        "types": [
          "ol.proj.Projection"
        ]
      },
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.Stamen#getState",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/source.js",
      "returns": {
        "types": [
          "ol.source.State"
        ]
      },
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.Stamen#changed",
      "kind": "function",
      "description": "Increases the revision counter and disptches a 'change' event.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Stamen#getRevision",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Stamen#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Stamen#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Stamen#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Stamen#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.\nNote that using the {@link ol.Observable.unByKey} static function is to\nbe preferred.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "key",
          "types": [
            "goog.events.Key"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.TileDebug#getTileGrid",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/tilesource.js",
      "returns": {
        "types": [
          "ol.tilegrid.TileGrid"
        ]
      },
      "provides": [
        "ol.source.Tile",
        "ol.source.TileOptions"
      ]
    },
    {
      "name": "ol.source.TileDebug#getAttributions",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/source.js",
      "returns": {
        "types": [
          "Array.<ol.Attribution>"
        ]
      },
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.TileDebug#getLogo",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/source.js",
      "returns": {
        "types": [
          "string",
          "olx.LogoOptions",
          "undefined"
        ]
      },
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.TileDebug#getProjection",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/source.js",
      "returns": {
        "types": [
          "ol.proj.Projection"
        ]
      },
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.TileDebug#getState",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/source.js",
      "returns": {
        "types": [
          "ol.source.State"
        ]
      },
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.TileDebug#changed",
      "kind": "function",
      "description": "Increases the revision counter and disptches a 'change' event.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.TileDebug#getRevision",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.TileDebug#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.TileDebug#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.TileDebug#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.TileDebug#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.\nNote that using the {@link ol.Observable.unByKey} static function is to\nbe preferred.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "key",
          "types": [
            "goog.events.Key"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.TileJSON#getTileLoadFunction",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/tileimagesource.js",
      "returns": {
        "types": [
          "ol.TileLoadFunctionType"
        ]
      },
      "provides": [
        "ol.source.TileImage"
      ]
    },
    {
      "name": "ol.source.TileJSON#getTileUrlFunction",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/tileimagesource.js",
      "returns": {
        "types": [
          "ol.TileUrlFunctionType"
        ]
      },
      "provides": [
        "ol.source.TileImage"
      ]
    },
    {
      "name": "ol.source.TileJSON#setTileLoadFunction",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/tileimagesource.js",
      "params": [
        {
          "name": "tileLoadFunction",
          "types": [
            "ol.TileLoadFunctionType"
          ]
        }
      ],
      "provides": [
        "ol.source.TileImage"
      ]
    },
    {
      "name": "ol.source.TileJSON#setTileUrlFunction",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/tileimagesource.js",
      "params": [
        {
          "name": "tileUrlFunction",
          "types": [
            "ol.TileUrlFunctionType"
          ]
        }
      ],
      "provides": [
        "ol.source.TileImage"
      ]
    },
    {
      "name": "ol.source.TileJSON#getTileGrid",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/tilesource.js",
      "returns": {
        "types": [
          "ol.tilegrid.TileGrid"
        ]
      },
      "provides": [
        "ol.source.Tile",
        "ol.source.TileOptions"
      ]
    },
    {
      "name": "ol.source.TileJSON#getAttributions",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/source.js",
      "returns": {
        "types": [
          "Array.<ol.Attribution>"
        ]
      },
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.TileJSON#getLogo",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/source.js",
      "returns": {
        "types": [
          "string",
          "olx.LogoOptions",
          "undefined"
        ]
      },
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.TileJSON#getProjection",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/source.js",
      "returns": {
        "types": [
          "ol.proj.Projection"
        ]
      },
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.TileJSON#getState",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/source.js",
      "returns": {
        "types": [
          "ol.source.State"
        ]
      },
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.TileJSON#changed",
      "kind": "function",
      "description": "Increases the revision counter and disptches a 'change' event.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.TileJSON#getRevision",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.TileJSON#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.TileJSON#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.TileJSON#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.TileJSON#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.\nNote that using the {@link ol.Observable.unByKey} static function is to\nbe preferred.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "key",
          "types": [
            "goog.events.Key"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.TileUTFGrid#getTileGrid",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/tilesource.js",
      "returns": {
        "types": [
          "ol.tilegrid.TileGrid"
        ]
      },
      "provides": [
        "ol.source.Tile",
        "ol.source.TileOptions"
      ]
    },
    {
      "name": "ol.source.TileUTFGrid#getAttributions",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/source.js",
      "returns": {
        "types": [
          "Array.<ol.Attribution>"
        ]
      },
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.TileUTFGrid#getLogo",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/source.js",
      "returns": {
        "types": [
          "string",
          "olx.LogoOptions",
          "undefined"
        ]
      },
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.TileUTFGrid#getProjection",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/source.js",
      "returns": {
        "types": [
          "ol.proj.Projection"
        ]
      },
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.TileUTFGrid#getState",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/source.js",
      "returns": {
        "types": [
          "ol.source.State"
        ]
      },
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.TileUTFGrid#changed",
      "kind": "function",
      "description": "Increases the revision counter and disptches a 'change' event.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.TileUTFGrid#getRevision",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.TileUTFGrid#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.TileUTFGrid#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.TileUTFGrid#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.TileUTFGrid#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.\nNote that using the {@link ol.Observable.unByKey} static function is to\nbe preferred.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "key",
          "types": [
            "goog.events.Key"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.TileVector#readFeatures",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/formatvectorsource.js",
      "params": [
        {
          "name": "source",
          "types": [
            "ArrayBuffer",
            "Document",
            "Node",
            "Object",
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "Array.<ol.Feature>"
        ]
      },
      "provides": [
        "ol.source.FormatVector"
      ]
    },
    {
      "name": "ol.source.TileVector#forEachFeatureIntersectingExtent",
      "kind": "function",
      "description": "Iterate through all features whose geometry intersects the provided extent,\ncalling the callback with each feature.  If the callback returns a \"truthy\"\nvalue, iteration will stop and the function will return the same value.\n\nIf you only want to test for bounding box intersection, call the\n{@link ol.source.Vector#forEachFeatureInExtent\nsource.forEachFeatureInExtent()} method instead.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/vectorsource.js",
      "params": [
        {
          "name": "extent",
          "types": [
            "ol.Extent"
          ]
        },
        {
          "name": "callback",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "T"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "S",
          "undefined"
        ]
      },
      "template": "T,S",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.TileVector#getFeaturesAtCoordinate",
      "kind": "function",
      "description": "Get all features whose geometry intersects the provided coordinate.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/vectorsource.js",
      "params": [
        {
          "name": "coordinate",
          "types": [
            "ol.Coordinate"
          ]
        }
      ],
      "returns": {
        "types": [
          "Array.<ol.Feature>"
        ]
      },
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.TileVector#getFeatureById",
      "kind": "function",
      "description": "Get a feature by its identifier (the value returned by feature.getId()).\nNote that the index treats string and numeric identifiers as the same.  So\n`source.getFeatureById(2)` will return a feature with id `'2'` or `2`.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/vectorsource.js",
      "params": [
        {
          "name": "id",
          "types": [
            "string",
            "number"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.Feature"
        ]
      },
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.TileVector#getAttributions",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/source.js",
      "returns": {
        "types": [
          "Array.<ol.Attribution>"
        ]
      },
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.TileVector#getLogo",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/source.js",
      "returns": {
        "types": [
          "string",
          "olx.LogoOptions",
          "undefined"
        ]
      },
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.TileVector#getProjection",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/source.js",
      "returns": {
        "types": [
          "ol.proj.Projection"
        ]
      },
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.TileVector#getState",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/source.js",
      "returns": {
        "types": [
          "ol.source.State"
        ]
      },
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.TileVector#changed",
      "kind": "function",
      "description": "Increases the revision counter and disptches a 'change' event.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.TileVector#getRevision",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.TileVector#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.TileVector#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.TileVector#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.TileVector#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.\nNote that using the {@link ol.Observable.unByKey} static function is to\nbe preferred.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "key",
          "types": [
            "goog.events.Key"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.TileWMS#getTileLoadFunction",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/tileimagesource.js",
      "returns": {
        "types": [
          "ol.TileLoadFunctionType"
        ]
      },
      "provides": [
        "ol.source.TileImage"
      ]
    },
    {
      "name": "ol.source.TileWMS#getTileUrlFunction",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/tileimagesource.js",
      "returns": {
        "types": [
          "ol.TileUrlFunctionType"
        ]
      },
      "provides": [
        "ol.source.TileImage"
      ]
    },
    {
      "name": "ol.source.TileWMS#setTileLoadFunction",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/tileimagesource.js",
      "params": [
        {
          "name": "tileLoadFunction",
          "types": [
            "ol.TileLoadFunctionType"
          ]
        }
      ],
      "provides": [
        "ol.source.TileImage"
      ]
    },
    {
      "name": "ol.source.TileWMS#setTileUrlFunction",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/tileimagesource.js",
      "params": [
        {
          "name": "tileUrlFunction",
          "types": [
            "ol.TileUrlFunctionType"
          ]
        }
      ],
      "provides": [
        "ol.source.TileImage"
      ]
    },
    {
      "name": "ol.source.TileWMS#getTileGrid",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/tilesource.js",
      "returns": {
        "types": [
          "ol.tilegrid.TileGrid"
        ]
      },
      "provides": [
        "ol.source.Tile",
        "ol.source.TileOptions"
      ]
    },
    {
      "name": "ol.source.TileWMS#getAttributions",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/source.js",
      "returns": {
        "types": [
          "Array.<ol.Attribution>"
        ]
      },
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.TileWMS#getLogo",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/source.js",
      "returns": {
        "types": [
          "string",
          "olx.LogoOptions",
          "undefined"
        ]
      },
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.TileWMS#getProjection",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/source.js",
      "returns": {
        "types": [
          "ol.proj.Projection"
        ]
      },
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.TileWMS#getState",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/source.js",
      "returns": {
        "types": [
          "ol.source.State"
        ]
      },
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.TileWMS#changed",
      "kind": "function",
      "description": "Increases the revision counter and disptches a 'change' event.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.TileWMS#getRevision",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.TileWMS#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.TileWMS#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.TileWMS#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.TileWMS#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.\nNote that using the {@link ol.Observable.unByKey} static function is to\nbe preferred.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "key",
          "types": [
            "goog.events.Key"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.TopoJSON#readFeatures",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/formatvectorsource.js",
      "params": [
        {
          "name": "source",
          "types": [
            "ArrayBuffer",
            "Document",
            "Node",
            "Object",
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "Array.<ol.Feature>"
        ]
      },
      "provides": [
        "ol.source.FormatVector"
      ]
    },
    {
      "name": "ol.source.TopoJSON#addFeature",
      "kind": "function",
      "description": "Add a single feature to the source.  If you want to add a batch of features\nat once, call {@link ol.source.Vector#addFeatures source.addFeatures()}\ninstead.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/vectorsource.js",
      "params": [
        {
          "name": "feature",
          "types": [
            "ol.Feature"
          ]
        }
      ],
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.TopoJSON#addFeatures",
      "kind": "function",
      "description": "Add a batch of features to the source.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/vectorsource.js",
      "params": [
        {
          "name": "features",
          "types": [
            "Array.<ol.Feature>"
          ]
        }
      ],
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.TopoJSON#clear",
      "kind": "function",
      "description": "Remove all features from the source.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/vectorsource.js",
      "params": [
        {
          "name": "opt_fast",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.TopoJSON#forEachFeature",
      "kind": "function",
      "description": "Iterate through all features on the source, calling the provided callback\nwith each one.  If the callback returns any \"truthy\" value, iteration will\nstop and the function will return the same value.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/vectorsource.js",
      "params": [
        {
          "name": "callback",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "T"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "S",
          "undefined"
        ]
      },
      "template": "T,S",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.TopoJSON#forEachFeatureInExtent",
      "kind": "function",
      "description": "Iterate through all features whose bounding box intersects the provided\nextent (note that the feature's geometry may not intersect the extent),\ncalling the callback with each feature.  If the callback returns a \"truthy\"\nvalue, iteration will stop and the function will return the same value.\n\nIf you are interested in features whose geometry intersects an extent, call\nthe {@link ol.source.Vector#forEachFeatureIntersectingExtent\nsource.forEachFeatureIntersectingExtent()} method instead.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/vectorsource.js",
      "params": [
        {
          "name": "extent",
          "types": [
            "ol.Extent"
          ]
        },
        {
          "name": "callback",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "T"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "S",
          "undefined"
        ]
      },
      "template": "T,S",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.TopoJSON#forEachFeatureIntersectingExtent",
      "kind": "function",
      "description": "Iterate through all features whose geometry intersects the provided extent,\ncalling the callback with each feature.  If the callback returns a \"truthy\"\nvalue, iteration will stop and the function will return the same value.\n\nIf you only want to test for bounding box intersection, call the\n{@link ol.source.Vector#forEachFeatureInExtent\nsource.forEachFeatureInExtent()} method instead.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/vectorsource.js",
      "params": [
        {
          "name": "extent",
          "types": [
            "ol.Extent"
          ]
        },
        {
          "name": "callback",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "T"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "S",
          "undefined"
        ]
      },
      "template": "T,S",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.TopoJSON#getFeatures",
      "kind": "function",
      "description": "Get all features on the source.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/vectorsource.js",
      "returns": {
        "types": [
          "Array.<ol.Feature>"
        ]
      },
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.TopoJSON#getFeaturesAtCoordinate",
      "kind": "function",
      "description": "Get all features whose geometry intersects the provided coordinate.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/vectorsource.js",
      "params": [
        {
          "name": "coordinate",
          "types": [
            "ol.Coordinate"
          ]
        }
      ],
      "returns": {
        "types": [
          "Array.<ol.Feature>"
        ]
      },
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.TopoJSON#getClosestFeatureToCoordinate",
      "kind": "function",
      "description": "Get the closest feature to the provided coordinate.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/vectorsource.js",
      "params": [
        {
          "name": "coordinate",
          "types": [
            "ol.Coordinate"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.Feature"
        ]
      },
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.TopoJSON#getExtent",
      "kind": "function",
      "description": "Get the extent of the features currently in the source.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/vectorsource.js",
      "returns": {
        "types": [
          "ol.Extent"
        ]
      },
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.TopoJSON#getFeatureById",
      "kind": "function",
      "description": "Get a feature by its identifier (the value returned by feature.getId()).\nNote that the index treats string and numeric identifiers as the same.  So\n`source.getFeatureById(2)` will return a feature with id `'2'` or `2`.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/vectorsource.js",
      "params": [
        {
          "name": "id",
          "types": [
            "string",
            "number"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.Feature"
        ]
      },
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.TopoJSON#removeFeature",
      "kind": "function",
      "description": "Remove a single feature from the source.  If you want to remove all features\nat once, use the {@link ol.source.Vector#clear source.clear()} method\ninstead.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/vectorsource.js",
      "params": [
        {
          "name": "feature",
          "types": [
            "ol.Feature"
          ]
        }
      ],
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.TopoJSON#getAttributions",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/source.js",
      "returns": {
        "types": [
          "Array.<ol.Attribution>"
        ]
      },
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.TopoJSON#getLogo",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/source.js",
      "returns": {
        "types": [
          "string",
          "olx.LogoOptions",
          "undefined"
        ]
      },
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.TopoJSON#getProjection",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/source.js",
      "returns": {
        "types": [
          "ol.proj.Projection"
        ]
      },
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.TopoJSON#getState",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/source.js",
      "returns": {
        "types": [
          "ol.source.State"
        ]
      },
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.TopoJSON#changed",
      "kind": "function",
      "description": "Increases the revision counter and disptches a 'change' event.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.TopoJSON#getRevision",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.TopoJSON#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.TopoJSON#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.TopoJSON#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.TopoJSON#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.\nNote that using the {@link ol.Observable.unByKey} static function is to\nbe preferred.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "key",
          "types": [
            "goog.events.Key"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.WMTS#getTileLoadFunction",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/tileimagesource.js",
      "returns": {
        "types": [
          "ol.TileLoadFunctionType"
        ]
      },
      "provides": [
        "ol.source.TileImage"
      ]
    },
    {
      "name": "ol.source.WMTS#getTileUrlFunction",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/tileimagesource.js",
      "returns": {
        "types": [
          "ol.TileUrlFunctionType"
        ]
      },
      "provides": [
        "ol.source.TileImage"
      ]
    },
    {
      "name": "ol.source.WMTS#setTileLoadFunction",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/tileimagesource.js",
      "params": [
        {
          "name": "tileLoadFunction",
          "types": [
            "ol.TileLoadFunctionType"
          ]
        }
      ],
      "provides": [
        "ol.source.TileImage"
      ]
    },
    {
      "name": "ol.source.WMTS#setTileUrlFunction",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/tileimagesource.js",
      "params": [
        {
          "name": "tileUrlFunction",
          "types": [
            "ol.TileUrlFunctionType"
          ]
        }
      ],
      "provides": [
        "ol.source.TileImage"
      ]
    },
    {
      "name": "ol.source.WMTS#getTileGrid",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/tilesource.js",
      "returns": {
        "types": [
          "ol.tilegrid.TileGrid"
        ]
      },
      "provides": [
        "ol.source.Tile",
        "ol.source.TileOptions"
      ]
    },
    {
      "name": "ol.source.WMTS#getAttributions",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/source.js",
      "returns": {
        "types": [
          "Array.<ol.Attribution>"
        ]
      },
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.WMTS#getLogo",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/source.js",
      "returns": {
        "types": [
          "string",
          "olx.LogoOptions",
          "undefined"
        ]
      },
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.WMTS#getProjection",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/source.js",
      "returns": {
        "types": [
          "ol.proj.Projection"
        ]
      },
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.WMTS#getState",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/source.js",
      "returns": {
        "types": [
          "ol.source.State"
        ]
      },
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.WMTS#changed",
      "kind": "function",
      "description": "Increases the revision counter and disptches a 'change' event.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.WMTS#getRevision",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.WMTS#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.WMTS#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.WMTS#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.WMTS#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.\nNote that using the {@link ol.Observable.unByKey} static function is to\nbe preferred.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "key",
          "types": [
            "goog.events.Key"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Zoomify#getTileLoadFunction",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/tileimagesource.js",
      "returns": {
        "types": [
          "ol.TileLoadFunctionType"
        ]
      },
      "provides": [
        "ol.source.TileImage"
      ]
    },
    {
      "name": "ol.source.Zoomify#getTileUrlFunction",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/tileimagesource.js",
      "returns": {
        "types": [
          "ol.TileUrlFunctionType"
        ]
      },
      "provides": [
        "ol.source.TileImage"
      ]
    },
    {
      "name": "ol.source.Zoomify#setTileLoadFunction",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/tileimagesource.js",
      "params": [
        {
          "name": "tileLoadFunction",
          "types": [
            "ol.TileLoadFunctionType"
          ]
        }
      ],
      "provides": [
        "ol.source.TileImage"
      ]
    },
    {
      "name": "ol.source.Zoomify#setTileUrlFunction",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/tileimagesource.js",
      "params": [
        {
          "name": "tileUrlFunction",
          "types": [
            "ol.TileUrlFunctionType"
          ]
        }
      ],
      "provides": [
        "ol.source.TileImage"
      ]
    },
    {
      "name": "ol.source.Zoomify#getTileGrid",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/tilesource.js",
      "returns": {
        "types": [
          "ol.tilegrid.TileGrid"
        ]
      },
      "provides": [
        "ol.source.Tile",
        "ol.source.TileOptions"
      ]
    },
    {
      "name": "ol.source.Zoomify#getAttributions",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/source.js",
      "returns": {
        "types": [
          "Array.<ol.Attribution>"
        ]
      },
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.Zoomify#getLogo",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/source.js",
      "returns": {
        "types": [
          "string",
          "olx.LogoOptions",
          "undefined"
        ]
      },
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.Zoomify#getProjection",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/source.js",
      "returns": {
        "types": [
          "ol.proj.Projection"
        ]
      },
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.Zoomify#getState",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/source/source.js",
      "returns": {
        "types": [
          "ol.source.State"
        ]
      },
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.Zoomify#changed",
      "kind": "function",
      "description": "Increases the revision counter and disptches a 'change' event.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Zoomify#getRevision",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Zoomify#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Zoomify#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Zoomify#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Zoomify#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.\nNote that using the {@link ol.Observable.unByKey} static function is to\nbe preferred.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "key",
          "types": [
            "goog.events.Key"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Base#bindTo",
      "kind": "function",
      "description": "The bindTo method allows you to set up a two-way binding between a\n`source` and `target` object. The method returns an object with a\n`transform` method that you can use to provide `from` and `to`\nfunctions to transform values on the way from the source to the\ntarget and on the way back.\n\nFor example, if you had two map views (sourceView and targetView)\nand you wanted the target view to have double the resolution of the\nsource view, you could transform the resolution on the way to and\nfrom the target with the following:\n\n    sourceView.bindTo('resolution', targetView)\n      .transform(\n        function(sourceResolution) {\n          // from sourceView.resolution to targetView.resolution\n          return 2 * sourceResolution;\n        },\n        function(targetResolution) {\n          // from targetView.resolution to sourceView.resolution\n          return targetResolution / 2;\n        }\n      );",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "target",
          "types": [
            "ol.Object"
          ]
        },
        {
          "name": "opt_targetKey",
          "types": [
            "string"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.ObjectAccessor"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Base#get",
      "kind": "function",
      "description": "Gets a value.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "*"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Base#getKeys",
      "kind": "function",
      "description": "Get a list of object property names.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "returns": {
        "types": [
          "Array.<string>"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Base#getProperties",
      "kind": "function",
      "description": "Get an object of all property names and values.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "returns": {
        "types": [
          "Object.<string, *>"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Base#set",
      "kind": "function",
      "description": "Sets a value.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "value",
          "types": [
            "*"
          ]
        }
      ],
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Base#setProperties",
      "kind": "function",
      "description": "Sets a collection of key-value pairs.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "values",
          "types": [
            "Object.<string, *>"
          ]
        }
      ],
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Base#unbind",
      "kind": "function",
      "description": "Removes a binding. Unbinding will set the unbound property to the current\n    value. The object will not be notified, as the value has not changed.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Base#unbindAll",
      "kind": "function",
      "description": "Removes all bindings.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Base#changed",
      "kind": "function",
      "description": "Increases the revision counter and disptches a 'change' event.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Base#getRevision",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Base#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Base#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Base#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Base#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.\nNote that using the {@link ol.Observable.unByKey} static function is to\nbe preferred.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "key",
          "types": [
            "goog.events.Key"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Layer#getBrightness",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/layerbase.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Layer#getContrast",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/layerbase.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Layer#getHue",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/layerbase.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Layer#getExtent",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/layerbase.js",
      "returns": {
        "types": [
          "ol.Extent",
          "undefined"
        ]
      },
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Layer#getMaxResolution",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/layerbase.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Layer#getMinResolution",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/layerbase.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Layer#getOpacity",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/layerbase.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Layer#getSaturation",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/layerbase.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Layer#getVisible",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/layerbase.js",
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Layer#setBrightness",
      "kind": "function",
      "description": "Adjust the layer brightness.  A value of -1 will render the layer completely\nblack.  A value of 0 will leave the brightness unchanged.  A value of 1 will\nrender the layer completely white.  Other values are linear multipliers on\nthe effect (values are clamped between -1 and 1).\n\nThe filter effects draft [1] says the brightness function is supposed to\nrender 0 black, 1 unchanged, and all other values as a linear multiplier.\n\nThe current WebKit implementation clamps values between -1 (black) and 1\n(white) [2].  There is a bug open to change the filter effect spec [3].\n\nTODO: revisit this if the spec is still unmodified before we release\n\n[1] https://dvcs.w3.org/hg/FXTF/raw-file/tip/filters/index.html\n[2] https://github.com/WebKit/webkit/commit/8f4765e569\n[3] https://www.w3.org/Bugs/Public/show_bug.cgi?id=15647",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/layerbase.js",
      "params": [
        {
          "name": "brightness",
          "types": [
            "number"
          ]
        }
      ],
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Layer#setContrast",
      "kind": "function",
      "description": "Adjust the layer contrast.  A value of 0 will render the layer completely\ngrey.  A value of 1 will leave the contrast unchanged.  Other values are\nlinear multipliers on the effect (and values over 1 are permitted).",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/layerbase.js",
      "params": [
        {
          "name": "contrast",
          "types": [
            "number"
          ]
        }
      ],
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Layer#setHue",
      "kind": "function",
      "description": "Apply a hue-rotation to the layer.  A value of 0 will leave the hue\nunchanged.  Other values are radians around the color circle.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/layerbase.js",
      "params": [
        {
          "name": "hue",
          "types": [
            "number"
          ]
        }
      ],
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Layer#setExtent",
      "kind": "function",
      "description": "Set the extent at which the layer is visible.  If `undefined`, the layer\nwill be visible at all extents.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/layerbase.js",
      "params": [
        {
          "name": "extent",
          "types": [
            "ol.Extent",
            "undefined"
          ]
        }
      ],
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Layer#setMaxResolution",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/layerbase.js",
      "params": [
        {
          "name": "maxResolution",
          "types": [
            "number"
          ]
        }
      ],
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Layer#setMinResolution",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/layerbase.js",
      "params": [
        {
          "name": "minResolution",
          "types": [
            "number"
          ]
        }
      ],
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Layer#setOpacity",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/layerbase.js",
      "params": [
        {
          "name": "opacity",
          "types": [
            "number"
          ]
        }
      ],
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Layer#setSaturation",
      "kind": "function",
      "description": "Adjust layer saturation.  A value of 0 will render the layer completely\nunsaturated.  A value of 1 will leave the saturation unchanged.  Other\nvalues are linear multipliers of the effect (and values over 1 are\npermitted).",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/layerbase.js",
      "params": [
        {
          "name": "saturation",
          "types": [
            "number"
          ]
        }
      ],
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Layer#setVisible",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/layerbase.js",
      "params": [
        {
          "name": "visible",
          "types": [
            "boolean"
          ]
        }
      ],
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Layer#bindTo",
      "kind": "function",
      "description": "The bindTo method allows you to set up a two-way binding between a\n`source` and `target` object. The method returns an object with a\n`transform` method that you can use to provide `from` and `to`\nfunctions to transform values on the way from the source to the\ntarget and on the way back.\n\nFor example, if you had two map views (sourceView and targetView)\nand you wanted the target view to have double the resolution of the\nsource view, you could transform the resolution on the way to and\nfrom the target with the following:\n\n    sourceView.bindTo('resolution', targetView)\n      .transform(\n        function(sourceResolution) {\n          // from sourceView.resolution to targetView.resolution\n          return 2 * sourceResolution;\n        },\n        function(targetResolution) {\n          // from targetView.resolution to sourceView.resolution\n          return targetResolution / 2;\n        }\n      );",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "target",
          "types": [
            "ol.Object"
          ]
        },
        {
          "name": "opt_targetKey",
          "types": [
            "string"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.ObjectAccessor"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Layer#get",
      "kind": "function",
      "description": "Gets a value.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "*"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Layer#getKeys",
      "kind": "function",
      "description": "Get a list of object property names.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "returns": {
        "types": [
          "Array.<string>"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Layer#getProperties",
      "kind": "function",
      "description": "Get an object of all property names and values.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "returns": {
        "types": [
          "Object.<string, *>"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Layer#set",
      "kind": "function",
      "description": "Sets a value.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "value",
          "types": [
            "*"
          ]
        }
      ],
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Layer#setProperties",
      "kind": "function",
      "description": "Sets a collection of key-value pairs.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "values",
          "types": [
            "Object.<string, *>"
          ]
        }
      ],
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Layer#unbind",
      "kind": "function",
      "description": "Removes a binding. Unbinding will set the unbound property to the current\n    value. The object will not be notified, as the value has not changed.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Layer#unbindAll",
      "kind": "function",
      "description": "Removes all bindings.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Layer#changed",
      "kind": "function",
      "description": "Increases the revision counter and disptches a 'change' event.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Layer#getRevision",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Layer#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Layer#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Layer#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Layer#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.\nNote that using the {@link ol.Observable.unByKey} static function is to\nbe preferred.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "key",
          "types": [
            "goog.events.Key"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Vector#setSource",
      "kind": "function",
      "description": "Set the layer source.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/layer.js",
      "params": [
        {
          "name": "source",
          "types": [
            "ol.source.Source"
          ]
        }
      ],
      "provides": [
        "ol.layer.Layer"
      ]
    },
    {
      "name": "ol.layer.Vector#getBrightness",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/layerbase.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Vector#getContrast",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/layerbase.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Vector#getHue",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/layerbase.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Vector#getExtent",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/layerbase.js",
      "returns": {
        "types": [
          "ol.Extent",
          "undefined"
        ]
      },
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Vector#getMaxResolution",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/layerbase.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Vector#getMinResolution",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/layerbase.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Vector#getOpacity",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/layerbase.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Vector#getSaturation",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/layerbase.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Vector#getVisible",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/layerbase.js",
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Vector#setBrightness",
      "kind": "function",
      "description": "Adjust the layer brightness.  A value of -1 will render the layer completely\nblack.  A value of 0 will leave the brightness unchanged.  A value of 1 will\nrender the layer completely white.  Other values are linear multipliers on\nthe effect (values are clamped between -1 and 1).\n\nThe filter effects draft [1] says the brightness function is supposed to\nrender 0 black, 1 unchanged, and all other values as a linear multiplier.\n\nThe current WebKit implementation clamps values between -1 (black) and 1\n(white) [2].  There is a bug open to change the filter effect spec [3].\n\nTODO: revisit this if the spec is still unmodified before we release\n\n[1] https://dvcs.w3.org/hg/FXTF/raw-file/tip/filters/index.html\n[2] https://github.com/WebKit/webkit/commit/8f4765e569\n[3] https://www.w3.org/Bugs/Public/show_bug.cgi?id=15647",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/layerbase.js",
      "params": [
        {
          "name": "brightness",
          "types": [
            "number"
          ]
        }
      ],
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Vector#setContrast",
      "kind": "function",
      "description": "Adjust the layer contrast.  A value of 0 will render the layer completely\ngrey.  A value of 1 will leave the contrast unchanged.  Other values are\nlinear multipliers on the effect (and values over 1 are permitted).",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/layerbase.js",
      "params": [
        {
          "name": "contrast",
          "types": [
            "number"
          ]
        }
      ],
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Vector#setHue",
      "kind": "function",
      "description": "Apply a hue-rotation to the layer.  A value of 0 will leave the hue\nunchanged.  Other values are radians around the color circle.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/layerbase.js",
      "params": [
        {
          "name": "hue",
          "types": [
            "number"
          ]
        }
      ],
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Vector#setExtent",
      "kind": "function",
      "description": "Set the extent at which the layer is visible.  If `undefined`, the layer\nwill be visible at all extents.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/layerbase.js",
      "params": [
        {
          "name": "extent",
          "types": [
            "ol.Extent",
            "undefined"
          ]
        }
      ],
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Vector#setMaxResolution",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/layerbase.js",
      "params": [
        {
          "name": "maxResolution",
          "types": [
            "number"
          ]
        }
      ],
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Vector#setMinResolution",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/layerbase.js",
      "params": [
        {
          "name": "minResolution",
          "types": [
            "number"
          ]
        }
      ],
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Vector#setOpacity",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/layerbase.js",
      "params": [
        {
          "name": "opacity",
          "types": [
            "number"
          ]
        }
      ],
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Vector#setSaturation",
      "kind": "function",
      "description": "Adjust layer saturation.  A value of 0 will render the layer completely\nunsaturated.  A value of 1 will leave the saturation unchanged.  Other\nvalues are linear multipliers of the effect (and values over 1 are\npermitted).",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/layerbase.js",
      "params": [
        {
          "name": "saturation",
          "types": [
            "number"
          ]
        }
      ],
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Vector#setVisible",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/layerbase.js",
      "params": [
        {
          "name": "visible",
          "types": [
            "boolean"
          ]
        }
      ],
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Vector#bindTo",
      "kind": "function",
      "description": "The bindTo method allows you to set up a two-way binding between a\n`source` and `target` object. The method returns an object with a\n`transform` method that you can use to provide `from` and `to`\nfunctions to transform values on the way from the source to the\ntarget and on the way back.\n\nFor example, if you had two map views (sourceView and targetView)\nand you wanted the target view to have double the resolution of the\nsource view, you could transform the resolution on the way to and\nfrom the target with the following:\n\n    sourceView.bindTo('resolution', targetView)\n      .transform(\n        function(sourceResolution) {\n          // from sourceView.resolution to targetView.resolution\n          return 2 * sourceResolution;\n        },\n        function(targetResolution) {\n          // from targetView.resolution to sourceView.resolution\n          return targetResolution / 2;\n        }\n      );",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "target",
          "types": [
            "ol.Object"
          ]
        },
        {
          "name": "opt_targetKey",
          "types": [
            "string"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.ObjectAccessor"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Vector#get",
      "kind": "function",
      "description": "Gets a value.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "*"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Vector#getKeys",
      "kind": "function",
      "description": "Get a list of object property names.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "returns": {
        "types": [
          "Array.<string>"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Vector#getProperties",
      "kind": "function",
      "description": "Get an object of all property names and values.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "returns": {
        "types": [
          "Object.<string, *>"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Vector#set",
      "kind": "function",
      "description": "Sets a value.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "value",
          "types": [
            "*"
          ]
        }
      ],
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Vector#setProperties",
      "kind": "function",
      "description": "Sets a collection of key-value pairs.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "values",
          "types": [
            "Object.<string, *>"
          ]
        }
      ],
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Vector#unbind",
      "kind": "function",
      "description": "Removes a binding. Unbinding will set the unbound property to the current\n    value. The object will not be notified, as the value has not changed.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Vector#unbindAll",
      "kind": "function",
      "description": "Removes all bindings.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Vector#changed",
      "kind": "function",
      "description": "Increases the revision counter and disptches a 'change' event.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Vector#getRevision",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Vector#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Vector#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Vector#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Vector#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.\nNote that using the {@link ol.Observable.unByKey} static function is to\nbe preferred.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "key",
          "types": [
            "goog.events.Key"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Heatmap#getSource",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/vectorlayer.js",
      "returns": {
        "types": [
          "ol.source.Vector"
        ]
      },
      "provides": [
        "ol.layer.Vector"
      ]
    },
    {
      "name": "ol.layer.Heatmap#getStyle",
      "kind": "function",
      "description": "Get the style for features.  This returns whatever was passed to the `style`\noption at construction or to the `setStyle` method.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/vectorlayer.js",
      "returns": {
        "types": [
          "ol.style.Style",
          "Array.<ol.style.Style>",
          "ol.style.StyleFunction"
        ]
      },
      "provides": [
        "ol.layer.Vector"
      ]
    },
    {
      "name": "ol.layer.Heatmap#getStyleFunction",
      "kind": "function",
      "description": "Get the style function.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/vectorlayer.js",
      "returns": {
        "types": [
          "ol.style.StyleFunction",
          "undefined"
        ]
      },
      "provides": [
        "ol.layer.Vector"
      ]
    },
    {
      "name": "ol.layer.Heatmap#setStyle",
      "kind": "function",
      "description": "Set the style for features.  This can be a single style object, an array\nof styles, or a function that takes a feature and resolution and returns\nan array of styles. If it is `undefined` the default style is used. If\nit is `null` the layer has no style (a `null` style), so only features\nthat have their own styles will be rendered in the layer. See\n{@link ol.style} for information on the default style.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/vectorlayer.js",
      "params": [
        {
          "name": "style",
          "types": [
            "ol.style.Style",
            "Array.<ol.style.Style>",
            "ol.style.StyleFunction",
            "undefined"
          ]
        }
      ],
      "provides": [
        "ol.layer.Vector"
      ]
    },
    {
      "name": "ol.layer.Heatmap#setSource",
      "kind": "function",
      "description": "Set the layer source.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/layer.js",
      "params": [
        {
          "name": "source",
          "types": [
            "ol.source.Source"
          ]
        }
      ],
      "provides": [
        "ol.layer.Layer"
      ]
    },
    {
      "name": "ol.layer.Heatmap#getBrightness",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/layerbase.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Heatmap#getContrast",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/layerbase.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Heatmap#getHue",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/layerbase.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Heatmap#getExtent",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/layerbase.js",
      "returns": {
        "types": [
          "ol.Extent",
          "undefined"
        ]
      },
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Heatmap#getMaxResolution",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/layerbase.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Heatmap#getMinResolution",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/layerbase.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Heatmap#getOpacity",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/layerbase.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Heatmap#getSaturation",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/layerbase.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Heatmap#getVisible",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/layerbase.js",
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Heatmap#setBrightness",
      "kind": "function",
      "description": "Adjust the layer brightness.  A value of -1 will render the layer completely\nblack.  A value of 0 will leave the brightness unchanged.  A value of 1 will\nrender the layer completely white.  Other values are linear multipliers on\nthe effect (values are clamped between -1 and 1).\n\nThe filter effects draft [1] says the brightness function is supposed to\nrender 0 black, 1 unchanged, and all other values as a linear multiplier.\n\nThe current WebKit implementation clamps values between -1 (black) and 1\n(white) [2].  There is a bug open to change the filter effect spec [3].\n\nTODO: revisit this if the spec is still unmodified before we release\n\n[1] https://dvcs.w3.org/hg/FXTF/raw-file/tip/filters/index.html\n[2] https://github.com/WebKit/webkit/commit/8f4765e569\n[3] https://www.w3.org/Bugs/Public/show_bug.cgi?id=15647",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/layerbase.js",
      "params": [
        {
          "name": "brightness",
          "types": [
            "number"
          ]
        }
      ],
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Heatmap#setContrast",
      "kind": "function",
      "description": "Adjust the layer contrast.  A value of 0 will render the layer completely\ngrey.  A value of 1 will leave the contrast unchanged.  Other values are\nlinear multipliers on the effect (and values over 1 are permitted).",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/layerbase.js",
      "params": [
        {
          "name": "contrast",
          "types": [
            "number"
          ]
        }
      ],
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Heatmap#setHue",
      "kind": "function",
      "description": "Apply a hue-rotation to the layer.  A value of 0 will leave the hue\nunchanged.  Other values are radians around the color circle.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/layerbase.js",
      "params": [
        {
          "name": "hue",
          "types": [
            "number"
          ]
        }
      ],
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Heatmap#setExtent",
      "kind": "function",
      "description": "Set the extent at which the layer is visible.  If `undefined`, the layer\nwill be visible at all extents.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/layerbase.js",
      "params": [
        {
          "name": "extent",
          "types": [
            "ol.Extent",
            "undefined"
          ]
        }
      ],
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Heatmap#setMaxResolution",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/layerbase.js",
      "params": [
        {
          "name": "maxResolution",
          "types": [
            "number"
          ]
        }
      ],
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Heatmap#setMinResolution",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/layerbase.js",
      "params": [
        {
          "name": "minResolution",
          "types": [
            "number"
          ]
        }
      ],
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Heatmap#setOpacity",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/layerbase.js",
      "params": [
        {
          "name": "opacity",
          "types": [
            "number"
          ]
        }
      ],
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Heatmap#setSaturation",
      "kind": "function",
      "description": "Adjust layer saturation.  A value of 0 will render the layer completely\nunsaturated.  A value of 1 will leave the saturation unchanged.  Other\nvalues are linear multipliers of the effect (and values over 1 are\npermitted).",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/layerbase.js",
      "params": [
        {
          "name": "saturation",
          "types": [
            "number"
          ]
        }
      ],
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Heatmap#setVisible",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/layerbase.js",
      "params": [
        {
          "name": "visible",
          "types": [
            "boolean"
          ]
        }
      ],
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Heatmap#bindTo",
      "kind": "function",
      "description": "The bindTo method allows you to set up a two-way binding between a\n`source` and `target` object. The method returns an object with a\n`transform` method that you can use to provide `from` and `to`\nfunctions to transform values on the way from the source to the\ntarget and on the way back.\n\nFor example, if you had two map views (sourceView and targetView)\nand you wanted the target view to have double the resolution of the\nsource view, you could transform the resolution on the way to and\nfrom the target with the following:\n\n    sourceView.bindTo('resolution', targetView)\n      .transform(\n        function(sourceResolution) {\n          // from sourceView.resolution to targetView.resolution\n          return 2 * sourceResolution;\n        },\n        function(targetResolution) {\n          // from targetView.resolution to sourceView.resolution\n          return targetResolution / 2;\n        }\n      );",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "target",
          "types": [
            "ol.Object"
          ]
        },
        {
          "name": "opt_targetKey",
          "types": [
            "string"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.ObjectAccessor"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Heatmap#get",
      "kind": "function",
      "description": "Gets a value.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "*"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Heatmap#getKeys",
      "kind": "function",
      "description": "Get a list of object property names.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "returns": {
        "types": [
          "Array.<string>"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Heatmap#getProperties",
      "kind": "function",
      "description": "Get an object of all property names and values.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "returns": {
        "types": [
          "Object.<string, *>"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Heatmap#set",
      "kind": "function",
      "description": "Sets a value.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "value",
          "types": [
            "*"
          ]
        }
      ],
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Heatmap#setProperties",
      "kind": "function",
      "description": "Sets a collection of key-value pairs.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "values",
          "types": [
            "Object.<string, *>"
          ]
        }
      ],
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Heatmap#unbind",
      "kind": "function",
      "description": "Removes a binding. Unbinding will set the unbound property to the current\n    value. The object will not be notified, as the value has not changed.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Heatmap#unbindAll",
      "kind": "function",
      "description": "Removes all bindings.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Heatmap#changed",
      "kind": "function",
      "description": "Increases the revision counter and disptches a 'change' event.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Heatmap#getRevision",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Heatmap#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Heatmap#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Heatmap#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Heatmap#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.\nNote that using the {@link ol.Observable.unByKey} static function is to\nbe preferred.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "key",
          "types": [
            "goog.events.Key"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Image#setSource",
      "kind": "function",
      "description": "Set the layer source.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/layer.js",
      "params": [
        {
          "name": "source",
          "types": [
            "ol.source.Source"
          ]
        }
      ],
      "provides": [
        "ol.layer.Layer"
      ]
    },
    {
      "name": "ol.layer.Image#getBrightness",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/layerbase.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Image#getContrast",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/layerbase.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Image#getHue",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/layerbase.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Image#getExtent",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/layerbase.js",
      "returns": {
        "types": [
          "ol.Extent",
          "undefined"
        ]
      },
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Image#getMaxResolution",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/layerbase.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Image#getMinResolution",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/layerbase.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Image#getOpacity",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/layerbase.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Image#getSaturation",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/layerbase.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Image#getVisible",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/layerbase.js",
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Image#setBrightness",
      "kind": "function",
      "description": "Adjust the layer brightness.  A value of -1 will render the layer completely\nblack.  A value of 0 will leave the brightness unchanged.  A value of 1 will\nrender the layer completely white.  Other values are linear multipliers on\nthe effect (values are clamped between -1 and 1).\n\nThe filter effects draft [1] says the brightness function is supposed to\nrender 0 black, 1 unchanged, and all other values as a linear multiplier.\n\nThe current WebKit implementation clamps values between -1 (black) and 1\n(white) [2].  There is a bug open to change the filter effect spec [3].\n\nTODO: revisit this if the spec is still unmodified before we release\n\n[1] https://dvcs.w3.org/hg/FXTF/raw-file/tip/filters/index.html\n[2] https://github.com/WebKit/webkit/commit/8f4765e569\n[3] https://www.w3.org/Bugs/Public/show_bug.cgi?id=15647",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/layerbase.js",
      "params": [
        {
          "name": "brightness",
          "types": [
            "number"
          ]
        }
      ],
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Image#setContrast",
      "kind": "function",
      "description": "Adjust the layer contrast.  A value of 0 will render the layer completely\ngrey.  A value of 1 will leave the contrast unchanged.  Other values are\nlinear multipliers on the effect (and values over 1 are permitted).",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/layerbase.js",
      "params": [
        {
          "name": "contrast",
          "types": [
            "number"
          ]
        }
      ],
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Image#setHue",
      "kind": "function",
      "description": "Apply a hue-rotation to the layer.  A value of 0 will leave the hue\nunchanged.  Other values are radians around the color circle.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/layerbase.js",
      "params": [
        {
          "name": "hue",
          "types": [
            "number"
          ]
        }
      ],
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Image#setExtent",
      "kind": "function",
      "description": "Set the extent at which the layer is visible.  If `undefined`, the layer\nwill be visible at all extents.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/layerbase.js",
      "params": [
        {
          "name": "extent",
          "types": [
            "ol.Extent",
            "undefined"
          ]
        }
      ],
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Image#setMaxResolution",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/layerbase.js",
      "params": [
        {
          "name": "maxResolution",
          "types": [
            "number"
          ]
        }
      ],
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Image#setMinResolution",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/layerbase.js",
      "params": [
        {
          "name": "minResolution",
          "types": [
            "number"
          ]
        }
      ],
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Image#setOpacity",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/layerbase.js",
      "params": [
        {
          "name": "opacity",
          "types": [
            "number"
          ]
        }
      ],
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Image#setSaturation",
      "kind": "function",
      "description": "Adjust layer saturation.  A value of 0 will render the layer completely\nunsaturated.  A value of 1 will leave the saturation unchanged.  Other\nvalues are linear multipliers of the effect (and values over 1 are\npermitted).",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/layerbase.js",
      "params": [
        {
          "name": "saturation",
          "types": [
            "number"
          ]
        }
      ],
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Image#setVisible",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/layerbase.js",
      "params": [
        {
          "name": "visible",
          "types": [
            "boolean"
          ]
        }
      ],
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Image#bindTo",
      "kind": "function",
      "description": "The bindTo method allows you to set up a two-way binding between a\n`source` and `target` object. The method returns an object with a\n`transform` method that you can use to provide `from` and `to`\nfunctions to transform values on the way from the source to the\ntarget and on the way back.\n\nFor example, if you had two map views (sourceView and targetView)\nand you wanted the target view to have double the resolution of the\nsource view, you could transform the resolution on the way to and\nfrom the target with the following:\n\n    sourceView.bindTo('resolution', targetView)\n      .transform(\n        function(sourceResolution) {\n          // from sourceView.resolution to targetView.resolution\n          return 2 * sourceResolution;\n        },\n        function(targetResolution) {\n          // from targetView.resolution to sourceView.resolution\n          return targetResolution / 2;\n        }\n      );",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "target",
          "types": [
            "ol.Object"
          ]
        },
        {
          "name": "opt_targetKey",
          "types": [
            "string"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.ObjectAccessor"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Image#get",
      "kind": "function",
      "description": "Gets a value.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "*"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Image#getKeys",
      "kind": "function",
      "description": "Get a list of object property names.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "returns": {
        "types": [
          "Array.<string>"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Image#getProperties",
      "kind": "function",
      "description": "Get an object of all property names and values.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "returns": {
        "types": [
          "Object.<string, *>"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Image#set",
      "kind": "function",
      "description": "Sets a value.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "value",
          "types": [
            "*"
          ]
        }
      ],
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Image#setProperties",
      "kind": "function",
      "description": "Sets a collection of key-value pairs.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "values",
          "types": [
            "Object.<string, *>"
          ]
        }
      ],
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Image#unbind",
      "kind": "function",
      "description": "Removes a binding. Unbinding will set the unbound property to the current\n    value. The object will not be notified, as the value has not changed.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Image#unbindAll",
      "kind": "function",
      "description": "Removes all bindings.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Image#changed",
      "kind": "function",
      "description": "Increases the revision counter and disptches a 'change' event.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Image#getRevision",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Image#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Image#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Image#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Image#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.\nNote that using the {@link ol.Observable.unByKey} static function is to\nbe preferred.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "key",
          "types": [
            "goog.events.Key"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Group#getBrightness",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/layerbase.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Group#getContrast",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/layerbase.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Group#getHue",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/layerbase.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Group#getExtent",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/layerbase.js",
      "returns": {
        "types": [
          "ol.Extent",
          "undefined"
        ]
      },
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Group#getMaxResolution",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/layerbase.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Group#getMinResolution",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/layerbase.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Group#getOpacity",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/layerbase.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Group#getSaturation",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/layerbase.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Group#getVisible",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/layerbase.js",
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Group#setBrightness",
      "kind": "function",
      "description": "Adjust the layer brightness.  A value of -1 will render the layer completely\nblack.  A value of 0 will leave the brightness unchanged.  A value of 1 will\nrender the layer completely white.  Other values are linear multipliers on\nthe effect (values are clamped between -1 and 1).\n\nThe filter effects draft [1] says the brightness function is supposed to\nrender 0 black, 1 unchanged, and all other values as a linear multiplier.\n\nThe current WebKit implementation clamps values between -1 (black) and 1\n(white) [2].  There is a bug open to change the filter effect spec [3].\n\nTODO: revisit this if the spec is still unmodified before we release\n\n[1] https://dvcs.w3.org/hg/FXTF/raw-file/tip/filters/index.html\n[2] https://github.com/WebKit/webkit/commit/8f4765e569\n[3] https://www.w3.org/Bugs/Public/show_bug.cgi?id=15647",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/layerbase.js",
      "params": [
        {
          "name": "brightness",
          "types": [
            "number"
          ]
        }
      ],
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Group#setContrast",
      "kind": "function",
      "description": "Adjust the layer contrast.  A value of 0 will render the layer completely\ngrey.  A value of 1 will leave the contrast unchanged.  Other values are\nlinear multipliers on the effect (and values over 1 are permitted).",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/layerbase.js",
      "params": [
        {
          "name": "contrast",
          "types": [
            "number"
          ]
        }
      ],
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Group#setHue",
      "kind": "function",
      "description": "Apply a hue-rotation to the layer.  A value of 0 will leave the hue\nunchanged.  Other values are radians around the color circle.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/layerbase.js",
      "params": [
        {
          "name": "hue",
          "types": [
            "number"
          ]
        }
      ],
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Group#setExtent",
      "kind": "function",
      "description": "Set the extent at which the layer is visible.  If `undefined`, the layer\nwill be visible at all extents.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/layerbase.js",
      "params": [
        {
          "name": "extent",
          "types": [
            "ol.Extent",
            "undefined"
          ]
        }
      ],
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Group#setMaxResolution",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/layerbase.js",
      "params": [
        {
          "name": "maxResolution",
          "types": [
            "number"
          ]
        }
      ],
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Group#setMinResolution",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/layerbase.js",
      "params": [
        {
          "name": "minResolution",
          "types": [
            "number"
          ]
        }
      ],
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Group#setOpacity",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/layerbase.js",
      "params": [
        {
          "name": "opacity",
          "types": [
            "number"
          ]
        }
      ],
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Group#setSaturation",
      "kind": "function",
      "description": "Adjust layer saturation.  A value of 0 will render the layer completely\nunsaturated.  A value of 1 will leave the saturation unchanged.  Other\nvalues are linear multipliers of the effect (and values over 1 are\npermitted).",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/layerbase.js",
      "params": [
        {
          "name": "saturation",
          "types": [
            "number"
          ]
        }
      ],
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Group#setVisible",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/layerbase.js",
      "params": [
        {
          "name": "visible",
          "types": [
            "boolean"
          ]
        }
      ],
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Group#bindTo",
      "kind": "function",
      "description": "The bindTo method allows you to set up a two-way binding between a\n`source` and `target` object. The method returns an object with a\n`transform` method that you can use to provide `from` and `to`\nfunctions to transform values on the way from the source to the\ntarget and on the way back.\n\nFor example, if you had two map views (sourceView and targetView)\nand you wanted the target view to have double the resolution of the\nsource view, you could transform the resolution on the way to and\nfrom the target with the following:\n\n    sourceView.bindTo('resolution', targetView)\n      .transform(\n        function(sourceResolution) {\n          // from sourceView.resolution to targetView.resolution\n          return 2 * sourceResolution;\n        },\n        function(targetResolution) {\n          // from targetView.resolution to sourceView.resolution\n          return targetResolution / 2;\n        }\n      );",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "target",
          "types": [
            "ol.Object"
          ]
        },
        {
          "name": "opt_targetKey",
          "types": [
            "string"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.ObjectAccessor"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Group#get",
      "kind": "function",
      "description": "Gets a value.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "*"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Group#getKeys",
      "kind": "function",
      "description": "Get a list of object property names.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "returns": {
        "types": [
          "Array.<string>"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Group#getProperties",
      "kind": "function",
      "description": "Get an object of all property names and values.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "returns": {
        "types": [
          "Object.<string, *>"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Group#set",
      "kind": "function",
      "description": "Sets a value.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "value",
          "types": [
            "*"
          ]
        }
      ],
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Group#setProperties",
      "kind": "function",
      "description": "Sets a collection of key-value pairs.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "values",
          "types": [
            "Object.<string, *>"
          ]
        }
      ],
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Group#unbind",
      "kind": "function",
      "description": "Removes a binding. Unbinding will set the unbound property to the current\n    value. The object will not be notified, as the value has not changed.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Group#unbindAll",
      "kind": "function",
      "description": "Removes all bindings.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Group#changed",
      "kind": "function",
      "description": "Increases the revision counter and disptches a 'change' event.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Group#getRevision",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Group#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Group#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Group#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Group#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.\nNote that using the {@link ol.Observable.unByKey} static function is to\nbe preferred.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "key",
          "types": [
            "goog.events.Key"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Tile#setSource",
      "kind": "function",
      "description": "Set the layer source.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/layer.js",
      "params": [
        {
          "name": "source",
          "types": [
            "ol.source.Source"
          ]
        }
      ],
      "provides": [
        "ol.layer.Layer"
      ]
    },
    {
      "name": "ol.layer.Tile#getBrightness",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/layerbase.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Tile#getContrast",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/layerbase.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Tile#getHue",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/layerbase.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Tile#getExtent",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/layerbase.js",
      "returns": {
        "types": [
          "ol.Extent",
          "undefined"
        ]
      },
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Tile#getMaxResolution",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/layerbase.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Tile#getMinResolution",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/layerbase.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Tile#getOpacity",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/layerbase.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Tile#getSaturation",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/layerbase.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Tile#getVisible",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/layerbase.js",
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Tile#setBrightness",
      "kind": "function",
      "description": "Adjust the layer brightness.  A value of -1 will render the layer completely\nblack.  A value of 0 will leave the brightness unchanged.  A value of 1 will\nrender the layer completely white.  Other values are linear multipliers on\nthe effect (values are clamped between -1 and 1).\n\nThe filter effects draft [1] says the brightness function is supposed to\nrender 0 black, 1 unchanged, and all other values as a linear multiplier.\n\nThe current WebKit implementation clamps values between -1 (black) and 1\n(white) [2].  There is a bug open to change the filter effect spec [3].\n\nTODO: revisit this if the spec is still unmodified before we release\n\n[1] https://dvcs.w3.org/hg/FXTF/raw-file/tip/filters/index.html\n[2] https://github.com/WebKit/webkit/commit/8f4765e569\n[3] https://www.w3.org/Bugs/Public/show_bug.cgi?id=15647",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/layerbase.js",
      "params": [
        {
          "name": "brightness",
          "types": [
            "number"
          ]
        }
      ],
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Tile#setContrast",
      "kind": "function",
      "description": "Adjust the layer contrast.  A value of 0 will render the layer completely\ngrey.  A value of 1 will leave the contrast unchanged.  Other values are\nlinear multipliers on the effect (and values over 1 are permitted).",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/layerbase.js",
      "params": [
        {
          "name": "contrast",
          "types": [
            "number"
          ]
        }
      ],
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Tile#setHue",
      "kind": "function",
      "description": "Apply a hue-rotation to the layer.  A value of 0 will leave the hue\nunchanged.  Other values are radians around the color circle.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/layerbase.js",
      "params": [
        {
          "name": "hue",
          "types": [
            "number"
          ]
        }
      ],
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Tile#setExtent",
      "kind": "function",
      "description": "Set the extent at which the layer is visible.  If `undefined`, the layer\nwill be visible at all extents.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/layerbase.js",
      "params": [
        {
          "name": "extent",
          "types": [
            "ol.Extent",
            "undefined"
          ]
        }
      ],
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Tile#setMaxResolution",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/layerbase.js",
      "params": [
        {
          "name": "maxResolution",
          "types": [
            "number"
          ]
        }
      ],
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Tile#setMinResolution",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/layerbase.js",
      "params": [
        {
          "name": "minResolution",
          "types": [
            "number"
          ]
        }
      ],
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Tile#setOpacity",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/layerbase.js",
      "params": [
        {
          "name": "opacity",
          "types": [
            "number"
          ]
        }
      ],
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Tile#setSaturation",
      "kind": "function",
      "description": "Adjust layer saturation.  A value of 0 will render the layer completely\nunsaturated.  A value of 1 will leave the saturation unchanged.  Other\nvalues are linear multipliers of the effect (and values over 1 are\npermitted).",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/layerbase.js",
      "params": [
        {
          "name": "saturation",
          "types": [
            "number"
          ]
        }
      ],
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Tile#setVisible",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/layer/layerbase.js",
      "params": [
        {
          "name": "visible",
          "types": [
            "boolean"
          ]
        }
      ],
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Tile#bindTo",
      "kind": "function",
      "description": "The bindTo method allows you to set up a two-way binding between a\n`source` and `target` object. The method returns an object with a\n`transform` method that you can use to provide `from` and `to`\nfunctions to transform values on the way from the source to the\ntarget and on the way back.\n\nFor example, if you had two map views (sourceView and targetView)\nand you wanted the target view to have double the resolution of the\nsource view, you could transform the resolution on the way to and\nfrom the target with the following:\n\n    sourceView.bindTo('resolution', targetView)\n      .transform(\n        function(sourceResolution) {\n          // from sourceView.resolution to targetView.resolution\n          return 2 * sourceResolution;\n        },\n        function(targetResolution) {\n          // from targetView.resolution to sourceView.resolution\n          return targetResolution / 2;\n        }\n      );",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "target",
          "types": [
            "ol.Object"
          ]
        },
        {
          "name": "opt_targetKey",
          "types": [
            "string"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.ObjectAccessor"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Tile#get",
      "kind": "function",
      "description": "Gets a value.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "*"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Tile#getKeys",
      "kind": "function",
      "description": "Get a list of object property names.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "returns": {
        "types": [
          "Array.<string>"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Tile#getProperties",
      "kind": "function",
      "description": "Get an object of all property names and values.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "returns": {
        "types": [
          "Object.<string, *>"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Tile#set",
      "kind": "function",
      "description": "Sets a value.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "value",
          "types": [
            "*"
          ]
        }
      ],
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Tile#setProperties",
      "kind": "function",
      "description": "Sets a collection of key-value pairs.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "values",
          "types": [
            "Object.<string, *>"
          ]
        }
      ],
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Tile#unbind",
      "kind": "function",
      "description": "Removes a binding. Unbinding will set the unbound property to the current\n    value. The object will not be notified, as the value has not changed.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Tile#unbindAll",
      "kind": "function",
      "description": "Removes all bindings.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Tile#changed",
      "kind": "function",
      "description": "Increases the revision counter and disptches a 'change' event.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Tile#getRevision",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Tile#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Tile#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Tile#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Tile#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.\nNote that using the {@link ol.Observable.unByKey} static function is to\nbe preferred.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "key",
          "types": [
            "goog.events.Key"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.Interaction#bindTo",
      "kind": "function",
      "description": "The bindTo method allows you to set up a two-way binding between a\n`source` and `target` object. The method returns an object with a\n`transform` method that you can use to provide `from` and `to`\nfunctions to transform values on the way from the source to the\ntarget and on the way back.\n\nFor example, if you had two map views (sourceView and targetView)\nand you wanted the target view to have double the resolution of the\nsource view, you could transform the resolution on the way to and\nfrom the target with the following:\n\n    sourceView.bindTo('resolution', targetView)\n      .transform(\n        function(sourceResolution) {\n          // from sourceView.resolution to targetView.resolution\n          return 2 * sourceResolution;\n        },\n        function(targetResolution) {\n          // from targetView.resolution to sourceView.resolution\n          return targetResolution / 2;\n        }\n      );",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "target",
          "types": [
            "ol.Object"
          ]
        },
        {
          "name": "opt_targetKey",
          "types": [
            "string"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.ObjectAccessor"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.interaction.Interaction#get",
      "kind": "function",
      "description": "Gets a value.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "*"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.interaction.Interaction#getKeys",
      "kind": "function",
      "description": "Get a list of object property names.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "returns": {
        "types": [
          "Array.<string>"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.interaction.Interaction#getProperties",
      "kind": "function",
      "description": "Get an object of all property names and values.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "returns": {
        "types": [
          "Object.<string, *>"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.interaction.Interaction#set",
      "kind": "function",
      "description": "Sets a value.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "value",
          "types": [
            "*"
          ]
        }
      ],
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.interaction.Interaction#setProperties",
      "kind": "function",
      "description": "Sets a collection of key-value pairs.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "values",
          "types": [
            "Object.<string, *>"
          ]
        }
      ],
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.interaction.Interaction#unbind",
      "kind": "function",
      "description": "Removes a binding. Unbinding will set the unbound property to the current\n    value. The object will not be notified, as the value has not changed.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.interaction.Interaction#unbindAll",
      "kind": "function",
      "description": "Removes all bindings.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.interaction.Interaction#changed",
      "kind": "function",
      "description": "Increases the revision counter and disptches a 'change' event.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.Interaction#getRevision",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.Interaction#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.Interaction#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.Interaction#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.Interaction#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.\nNote that using the {@link ol.Observable.unByKey} static function is to\nbe preferred.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "key",
          "types": [
            "goog.events.Key"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DoubleClickZoom#getActive",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/interaction/interaction.js",
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.interaction.Interaction",
        "ol.interaction.InteractionProperty"
      ]
    },
    {
      "name": "ol.interaction.DoubleClickZoom#setActive",
      "kind": "function",
      "description": "Activate or deactivate the interaction.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/interaction/interaction.js",
      "params": [
        {
          "name": "active",
          "types": [
            "boolean"
          ]
        }
      ],
      "provides": [
        "ol.interaction.Interaction",
        "ol.interaction.InteractionProperty"
      ]
    },
    {
      "name": "ol.interaction.DoubleClickZoom#bindTo",
      "kind": "function",
      "description": "The bindTo method allows you to set up a two-way binding between a\n`source` and `target` object. The method returns an object with a\n`transform` method that you can use to provide `from` and `to`\nfunctions to transform values on the way from the source to the\ntarget and on the way back.\n\nFor example, if you had two map views (sourceView and targetView)\nand you wanted the target view to have double the resolution of the\nsource view, you could transform the resolution on the way to and\nfrom the target with the following:\n\n    sourceView.bindTo('resolution', targetView)\n      .transform(\n        function(sourceResolution) {\n          // from sourceView.resolution to targetView.resolution\n          return 2 * sourceResolution;\n        },\n        function(targetResolution) {\n          // from targetView.resolution to sourceView.resolution\n          return targetResolution / 2;\n        }\n      );",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "target",
          "types": [
            "ol.Object"
          ]
        },
        {
          "name": "opt_targetKey",
          "types": [
            "string"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.ObjectAccessor"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.interaction.DoubleClickZoom#get",
      "kind": "function",
      "description": "Gets a value.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "*"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.interaction.DoubleClickZoom#getKeys",
      "kind": "function",
      "description": "Get a list of object property names.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "returns": {
        "types": [
          "Array.<string>"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.interaction.DoubleClickZoom#getProperties",
      "kind": "function",
      "description": "Get an object of all property names and values.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "returns": {
        "types": [
          "Object.<string, *>"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.interaction.DoubleClickZoom#set",
      "kind": "function",
      "description": "Sets a value.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "value",
          "types": [
            "*"
          ]
        }
      ],
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.interaction.DoubleClickZoom#setProperties",
      "kind": "function",
      "description": "Sets a collection of key-value pairs.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "values",
          "types": [
            "Object.<string, *>"
          ]
        }
      ],
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.interaction.DoubleClickZoom#unbind",
      "kind": "function",
      "description": "Removes a binding. Unbinding will set the unbound property to the current\n    value. The object will not be notified, as the value has not changed.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.interaction.DoubleClickZoom#unbindAll",
      "kind": "function",
      "description": "Removes all bindings.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.interaction.DoubleClickZoom#changed",
      "kind": "function",
      "description": "Increases the revision counter and disptches a 'change' event.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DoubleClickZoom#getRevision",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DoubleClickZoom#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DoubleClickZoom#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DoubleClickZoom#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DoubleClickZoom#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.\nNote that using the {@link ol.Observable.unByKey} static function is to\nbe preferred.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "key",
          "types": [
            "goog.events.Key"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DragAndDrop#getActive",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/interaction/interaction.js",
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.interaction.Interaction",
        "ol.interaction.InteractionProperty"
      ]
    },
    {
      "name": "ol.interaction.DragAndDrop#setActive",
      "kind": "function",
      "description": "Activate or deactivate the interaction.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/interaction/interaction.js",
      "params": [
        {
          "name": "active",
          "types": [
            "boolean"
          ]
        }
      ],
      "provides": [
        "ol.interaction.Interaction",
        "ol.interaction.InteractionProperty"
      ]
    },
    {
      "name": "ol.interaction.DragAndDrop#bindTo",
      "kind": "function",
      "description": "The bindTo method allows you to set up a two-way binding between a\n`source` and `target` object. The method returns an object with a\n`transform` method that you can use to provide `from` and `to`\nfunctions to transform values on the way from the source to the\ntarget and on the way back.\n\nFor example, if you had two map views (sourceView and targetView)\nand you wanted the target view to have double the resolution of the\nsource view, you could transform the resolution on the way to and\nfrom the target with the following:\n\n    sourceView.bindTo('resolution', targetView)\n      .transform(\n        function(sourceResolution) {\n          // from sourceView.resolution to targetView.resolution\n          return 2 * sourceResolution;\n        },\n        function(targetResolution) {\n          // from targetView.resolution to sourceView.resolution\n          return targetResolution / 2;\n        }\n      );",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "target",
          "types": [
            "ol.Object"
          ]
        },
        {
          "name": "opt_targetKey",
          "types": [
            "string"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.ObjectAccessor"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.interaction.DragAndDrop#get",
      "kind": "function",
      "description": "Gets a value.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "*"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.interaction.DragAndDrop#getKeys",
      "kind": "function",
      "description": "Get a list of object property names.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "returns": {
        "types": [
          "Array.<string>"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.interaction.DragAndDrop#getProperties",
      "kind": "function",
      "description": "Get an object of all property names and values.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "returns": {
        "types": [
          "Object.<string, *>"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.interaction.DragAndDrop#set",
      "kind": "function",
      "description": "Sets a value.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "value",
          "types": [
            "*"
          ]
        }
      ],
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.interaction.DragAndDrop#setProperties",
      "kind": "function",
      "description": "Sets a collection of key-value pairs.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "values",
          "types": [
            "Object.<string, *>"
          ]
        }
      ],
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.interaction.DragAndDrop#unbind",
      "kind": "function",
      "description": "Removes a binding. Unbinding will set the unbound property to the current\n    value. The object will not be notified, as the value has not changed.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.interaction.DragAndDrop#unbindAll",
      "kind": "function",
      "description": "Removes all bindings.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.interaction.DragAndDrop#changed",
      "kind": "function",
      "description": "Increases the revision counter and disptches a 'change' event.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DragAndDrop#getRevision",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DragAndDrop#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DragAndDrop#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DragAndDrop#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DragAndDrop#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.\nNote that using the {@link ol.Observable.unByKey} static function is to\nbe preferred.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "key",
          "types": [
            "goog.events.Key"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.Pointer#getActive",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/interaction/interaction.js",
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.interaction.Interaction",
        "ol.interaction.InteractionProperty"
      ]
    },
    {
      "name": "ol.interaction.Pointer#setActive",
      "kind": "function",
      "description": "Activate or deactivate the interaction.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/interaction/interaction.js",
      "params": [
        {
          "name": "active",
          "types": [
            "boolean"
          ]
        }
      ],
      "provides": [
        "ol.interaction.Interaction",
        "ol.interaction.InteractionProperty"
      ]
    },
    {
      "name": "ol.interaction.Pointer#bindTo",
      "kind": "function",
      "description": "The bindTo method allows you to set up a two-way binding between a\n`source` and `target` object. The method returns an object with a\n`transform` method that you can use to provide `from` and `to`\nfunctions to transform values on the way from the source to the\ntarget and on the way back.\n\nFor example, if you had two map views (sourceView and targetView)\nand you wanted the target view to have double the resolution of the\nsource view, you could transform the resolution on the way to and\nfrom the target with the following:\n\n    sourceView.bindTo('resolution', targetView)\n      .transform(\n        function(sourceResolution) {\n          // from sourceView.resolution to targetView.resolution\n          return 2 * sourceResolution;\n        },\n        function(targetResolution) {\n          // from targetView.resolution to sourceView.resolution\n          return targetResolution / 2;\n        }\n      );",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "target",
          "types": [
            "ol.Object"
          ]
        },
        {
          "name": "opt_targetKey",
          "types": [
            "string"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.ObjectAccessor"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.interaction.Pointer#get",
      "kind": "function",
      "description": "Gets a value.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "*"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.interaction.Pointer#getKeys",
      "kind": "function",
      "description": "Get a list of object property names.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "returns": {
        "types": [
          "Array.<string>"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.interaction.Pointer#getProperties",
      "kind": "function",
      "description": "Get an object of all property names and values.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "returns": {
        "types": [
          "Object.<string, *>"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.interaction.Pointer#set",
      "kind": "function",
      "description": "Sets a value.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "value",
          "types": [
            "*"
          ]
        }
      ],
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.interaction.Pointer#setProperties",
      "kind": "function",
      "description": "Sets a collection of key-value pairs.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "values",
          "types": [
            "Object.<string, *>"
          ]
        }
      ],
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.interaction.Pointer#unbind",
      "kind": "function",
      "description": "Removes a binding. Unbinding will set the unbound property to the current\n    value. The object will not be notified, as the value has not changed.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.interaction.Pointer#unbindAll",
      "kind": "function",
      "description": "Removes all bindings.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.interaction.Pointer#changed",
      "kind": "function",
      "description": "Increases the revision counter and disptches a 'change' event.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.Pointer#getRevision",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.Pointer#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.Pointer#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.Pointer#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.Pointer#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.\nNote that using the {@link ol.Observable.unByKey} static function is to\nbe preferred.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "key",
          "types": [
            "goog.events.Key"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DragBox#getActive",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/interaction/interaction.js",
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.interaction.Interaction",
        "ol.interaction.InteractionProperty"
      ]
    },
    {
      "name": "ol.interaction.DragBox#setActive",
      "kind": "function",
      "description": "Activate or deactivate the interaction.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/interaction/interaction.js",
      "params": [
        {
          "name": "active",
          "types": [
            "boolean"
          ]
        }
      ],
      "provides": [
        "ol.interaction.Interaction",
        "ol.interaction.InteractionProperty"
      ]
    },
    {
      "name": "ol.interaction.DragBox#bindTo",
      "kind": "function",
      "description": "The bindTo method allows you to set up a two-way binding between a\n`source` and `target` object. The method returns an object with a\n`transform` method that you can use to provide `from` and `to`\nfunctions to transform values on the way from the source to the\ntarget and on the way back.\n\nFor example, if you had two map views (sourceView and targetView)\nand you wanted the target view to have double the resolution of the\nsource view, you could transform the resolution on the way to and\nfrom the target with the following:\n\n    sourceView.bindTo('resolution', targetView)\n      .transform(\n        function(sourceResolution) {\n          // from sourceView.resolution to targetView.resolution\n          return 2 * sourceResolution;\n        },\n        function(targetResolution) {\n          // from targetView.resolution to sourceView.resolution\n          return targetResolution / 2;\n        }\n      );",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "target",
          "types": [
            "ol.Object"
          ]
        },
        {
          "name": "opt_targetKey",
          "types": [
            "string"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.ObjectAccessor"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.interaction.DragBox#get",
      "kind": "function",
      "description": "Gets a value.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "*"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.interaction.DragBox#getKeys",
      "kind": "function",
      "description": "Get a list of object property names.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "returns": {
        "types": [
          "Array.<string>"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.interaction.DragBox#getProperties",
      "kind": "function",
      "description": "Get an object of all property names and values.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "returns": {
        "types": [
          "Object.<string, *>"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.interaction.DragBox#set",
      "kind": "function",
      "description": "Sets a value.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "value",
          "types": [
            "*"
          ]
        }
      ],
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.interaction.DragBox#setProperties",
      "kind": "function",
      "description": "Sets a collection of key-value pairs.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "values",
          "types": [
            "Object.<string, *>"
          ]
        }
      ],
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.interaction.DragBox#unbind",
      "kind": "function",
      "description": "Removes a binding. Unbinding will set the unbound property to the current\n    value. The object will not be notified, as the value has not changed.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.interaction.DragBox#unbindAll",
      "kind": "function",
      "description": "Removes all bindings.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.interaction.DragBox#changed",
      "kind": "function",
      "description": "Increases the revision counter and disptches a 'change' event.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DragBox#getRevision",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DragBox#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DragBox#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DragBox#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DragBox#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.\nNote that using the {@link ol.Observable.unByKey} static function is to\nbe preferred.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "key",
          "types": [
            "goog.events.Key"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DragPan#getActive",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/interaction/interaction.js",
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.interaction.Interaction",
        "ol.interaction.InteractionProperty"
      ]
    },
    {
      "name": "ol.interaction.DragPan#setActive",
      "kind": "function",
      "description": "Activate or deactivate the interaction.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/interaction/interaction.js",
      "params": [
        {
          "name": "active",
          "types": [
            "boolean"
          ]
        }
      ],
      "provides": [
        "ol.interaction.Interaction",
        "ol.interaction.InteractionProperty"
      ]
    },
    {
      "name": "ol.interaction.DragPan#bindTo",
      "kind": "function",
      "description": "The bindTo method allows you to set up a two-way binding between a\n`source` and `target` object. The method returns an object with a\n`transform` method that you can use to provide `from` and `to`\nfunctions to transform values on the way from the source to the\ntarget and on the way back.\n\nFor example, if you had two map views (sourceView and targetView)\nand you wanted the target view to have double the resolution of the\nsource view, you could transform the resolution on the way to and\nfrom the target with the following:\n\n    sourceView.bindTo('resolution', targetView)\n      .transform(\n        function(sourceResolution) {\n          // from sourceView.resolution to targetView.resolution\n          return 2 * sourceResolution;\n        },\n        function(targetResolution) {\n          // from targetView.resolution to sourceView.resolution\n          return targetResolution / 2;\n        }\n      );",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "target",
          "types": [
            "ol.Object"
          ]
        },
        {
          "name": "opt_targetKey",
          "types": [
            "string"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.ObjectAccessor"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.interaction.DragPan#get",
      "kind": "function",
      "description": "Gets a value.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "*"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.interaction.DragPan#getKeys",
      "kind": "function",
      "description": "Get a list of object property names.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "returns": {
        "types": [
          "Array.<string>"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.interaction.DragPan#getProperties",
      "kind": "function",
      "description": "Get an object of all property names and values.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "returns": {
        "types": [
          "Object.<string, *>"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.interaction.DragPan#set",
      "kind": "function",
      "description": "Sets a value.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "value",
          "types": [
            "*"
          ]
        }
      ],
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.interaction.DragPan#setProperties",
      "kind": "function",
      "description": "Sets a collection of key-value pairs.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "values",
          "types": [
            "Object.<string, *>"
          ]
        }
      ],
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.interaction.DragPan#unbind",
      "kind": "function",
      "description": "Removes a binding. Unbinding will set the unbound property to the current\n    value. The object will not be notified, as the value has not changed.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.interaction.DragPan#unbindAll",
      "kind": "function",
      "description": "Removes all bindings.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.interaction.DragPan#changed",
      "kind": "function",
      "description": "Increases the revision counter and disptches a 'change' event.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DragPan#getRevision",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DragPan#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DragPan#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DragPan#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DragPan#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.\nNote that using the {@link ol.Observable.unByKey} static function is to\nbe preferred.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "key",
          "types": [
            "goog.events.Key"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DragRotateAndZoom#getActive",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/interaction/interaction.js",
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.interaction.Interaction",
        "ol.interaction.InteractionProperty"
      ]
    },
    {
      "name": "ol.interaction.DragRotateAndZoom#setActive",
      "kind": "function",
      "description": "Activate or deactivate the interaction.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/interaction/interaction.js",
      "params": [
        {
          "name": "active",
          "types": [
            "boolean"
          ]
        }
      ],
      "provides": [
        "ol.interaction.Interaction",
        "ol.interaction.InteractionProperty"
      ]
    },
    {
      "name": "ol.interaction.DragRotateAndZoom#bindTo",
      "kind": "function",
      "description": "The bindTo method allows you to set up a two-way binding between a\n`source` and `target` object. The method returns an object with a\n`transform` method that you can use to provide `from` and `to`\nfunctions to transform values on the way from the source to the\ntarget and on the way back.\n\nFor example, if you had two map views (sourceView and targetView)\nand you wanted the target view to have double the resolution of the\nsource view, you could transform the resolution on the way to and\nfrom the target with the following:\n\n    sourceView.bindTo('resolution', targetView)\n      .transform(\n        function(sourceResolution) {\n          // from sourceView.resolution to targetView.resolution\n          return 2 * sourceResolution;\n        },\n        function(targetResolution) {\n          // from targetView.resolution to sourceView.resolution\n          return targetResolution / 2;\n        }\n      );",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "target",
          "types": [
            "ol.Object"
          ]
        },
        {
          "name": "opt_targetKey",
          "types": [
            "string"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.ObjectAccessor"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.interaction.DragRotateAndZoom#get",
      "kind": "function",
      "description": "Gets a value.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "*"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.interaction.DragRotateAndZoom#getKeys",
      "kind": "function",
      "description": "Get a list of object property names.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "returns": {
        "types": [
          "Array.<string>"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.interaction.DragRotateAndZoom#getProperties",
      "kind": "function",
      "description": "Get an object of all property names and values.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "returns": {
        "types": [
          "Object.<string, *>"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.interaction.DragRotateAndZoom#set",
      "kind": "function",
      "description": "Sets a value.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "value",
          "types": [
            "*"
          ]
        }
      ],
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.interaction.DragRotateAndZoom#setProperties",
      "kind": "function",
      "description": "Sets a collection of key-value pairs.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "values",
          "types": [
            "Object.<string, *>"
          ]
        }
      ],
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.interaction.DragRotateAndZoom#unbind",
      "kind": "function",
      "description": "Removes a binding. Unbinding will set the unbound property to the current\n    value. The object will not be notified, as the value has not changed.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.interaction.DragRotateAndZoom#unbindAll",
      "kind": "function",
      "description": "Removes all bindings.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.interaction.DragRotateAndZoom#changed",
      "kind": "function",
      "description": "Increases the revision counter and disptches a 'change' event.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DragRotateAndZoom#getRevision",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DragRotateAndZoom#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DragRotateAndZoom#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DragRotateAndZoom#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DragRotateAndZoom#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.\nNote that using the {@link ol.Observable.unByKey} static function is to\nbe preferred.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "key",
          "types": [
            "goog.events.Key"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DragRotate#getActive",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/interaction/interaction.js",
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.interaction.Interaction",
        "ol.interaction.InteractionProperty"
      ]
    },
    {
      "name": "ol.interaction.DragRotate#setActive",
      "kind": "function",
      "description": "Activate or deactivate the interaction.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/interaction/interaction.js",
      "params": [
        {
          "name": "active",
          "types": [
            "boolean"
          ]
        }
      ],
      "provides": [
        "ol.interaction.Interaction",
        "ol.interaction.InteractionProperty"
      ]
    },
    {
      "name": "ol.interaction.DragRotate#bindTo",
      "kind": "function",
      "description": "The bindTo method allows you to set up a two-way binding between a\n`source` and `target` object. The method returns an object with a\n`transform` method that you can use to provide `from` and `to`\nfunctions to transform values on the way from the source to the\ntarget and on the way back.\n\nFor example, if you had two map views (sourceView and targetView)\nand you wanted the target view to have double the resolution of the\nsource view, you could transform the resolution on the way to and\nfrom the target with the following:\n\n    sourceView.bindTo('resolution', targetView)\n      .transform(\n        function(sourceResolution) {\n          // from sourceView.resolution to targetView.resolution\n          return 2 * sourceResolution;\n        },\n        function(targetResolution) {\n          // from targetView.resolution to sourceView.resolution\n          return targetResolution / 2;\n        }\n      );",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "target",
          "types": [
            "ol.Object"
          ]
        },
        {
          "name": "opt_targetKey",
          "types": [
            "string"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.ObjectAccessor"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.interaction.DragRotate#get",
      "kind": "function",
      "description": "Gets a value.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "*"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.interaction.DragRotate#getKeys",
      "kind": "function",
      "description": "Get a list of object property names.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "returns": {
        "types": [
          "Array.<string>"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.interaction.DragRotate#getProperties",
      "kind": "function",
      "description": "Get an object of all property names and values.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "returns": {
        "types": [
          "Object.<string, *>"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.interaction.DragRotate#set",
      "kind": "function",
      "description": "Sets a value.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "value",
          "types": [
            "*"
          ]
        }
      ],
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.interaction.DragRotate#setProperties",
      "kind": "function",
      "description": "Sets a collection of key-value pairs.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "values",
          "types": [
            "Object.<string, *>"
          ]
        }
      ],
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.interaction.DragRotate#unbind",
      "kind": "function",
      "description": "Removes a binding. Unbinding will set the unbound property to the current\n    value. The object will not be notified, as the value has not changed.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.interaction.DragRotate#unbindAll",
      "kind": "function",
      "description": "Removes all bindings.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.interaction.DragRotate#changed",
      "kind": "function",
      "description": "Increases the revision counter and disptches a 'change' event.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DragRotate#getRevision",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DragRotate#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DragRotate#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DragRotate#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DragRotate#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.\nNote that using the {@link ol.Observable.unByKey} static function is to\nbe preferred.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "key",
          "types": [
            "goog.events.Key"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DragZoom#getGeometry",
      "kind": "function",
      "description": "Returns geometry of last drawn box.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/interaction/dragboxinteraction.js",
      "returns": {
        "types": [
          "ol.geom.Polygon"
        ]
      },
      "provides": [
        "ol.DragBoxEvent",
        "ol.interaction.DragBox"
      ]
    },
    {
      "name": "ol.interaction.DragZoom#getActive",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/interaction/interaction.js",
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.interaction.Interaction",
        "ol.interaction.InteractionProperty"
      ]
    },
    {
      "name": "ol.interaction.DragZoom#setActive",
      "kind": "function",
      "description": "Activate or deactivate the interaction.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/interaction/interaction.js",
      "params": [
        {
          "name": "active",
          "types": [
            "boolean"
          ]
        }
      ],
      "provides": [
        "ol.interaction.Interaction",
        "ol.interaction.InteractionProperty"
      ]
    },
    {
      "name": "ol.interaction.DragZoom#bindTo",
      "kind": "function",
      "description": "The bindTo method allows you to set up a two-way binding between a\n`source` and `target` object. The method returns an object with a\n`transform` method that you can use to provide `from` and `to`\nfunctions to transform values on the way from the source to the\ntarget and on the way back.\n\nFor example, if you had two map views (sourceView and targetView)\nand you wanted the target view to have double the resolution of the\nsource view, you could transform the resolution on the way to and\nfrom the target with the following:\n\n    sourceView.bindTo('resolution', targetView)\n      .transform(\n        function(sourceResolution) {\n          // from sourceView.resolution to targetView.resolution\n          return 2 * sourceResolution;\n        },\n        function(targetResolution) {\n          // from targetView.resolution to sourceView.resolution\n          return targetResolution / 2;\n        }\n      );",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "target",
          "types": [
            "ol.Object"
          ]
        },
        {
          "name": "opt_targetKey",
          "types": [
            "string"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.ObjectAccessor"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.interaction.DragZoom#get",
      "kind": "function",
      "description": "Gets a value.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "*"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.interaction.DragZoom#getKeys",
      "kind": "function",
      "description": "Get a list of object property names.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "returns": {
        "types": [
          "Array.<string>"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.interaction.DragZoom#getProperties",
      "kind": "function",
      "description": "Get an object of all property names and values.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "returns": {
        "types": [
          "Object.<string, *>"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.interaction.DragZoom#set",
      "kind": "function",
      "description": "Sets a value.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "value",
          "types": [
            "*"
          ]
        }
      ],
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.interaction.DragZoom#setProperties",
      "kind": "function",
      "description": "Sets a collection of key-value pairs.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "values",
          "types": [
            "Object.<string, *>"
          ]
        }
      ],
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.interaction.DragZoom#unbind",
      "kind": "function",
      "description": "Removes a binding. Unbinding will set the unbound property to the current\n    value. The object will not be notified, as the value has not changed.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.interaction.DragZoom#unbindAll",
      "kind": "function",
      "description": "Removes all bindings.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.interaction.DragZoom#changed",
      "kind": "function",
      "description": "Increases the revision counter and disptches a 'change' event.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DragZoom#getRevision",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DragZoom#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DragZoom#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DragZoom#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DragZoom#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.\nNote that using the {@link ol.Observable.unByKey} static function is to\nbe preferred.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "key",
          "types": [
            "goog.events.Key"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.Draw#getActive",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/interaction/interaction.js",
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.interaction.Interaction",
        "ol.interaction.InteractionProperty"
      ]
    },
    {
      "name": "ol.interaction.Draw#setActive",
      "kind": "function",
      "description": "Activate or deactivate the interaction.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/interaction/interaction.js",
      "params": [
        {
          "name": "active",
          "types": [
            "boolean"
          ]
        }
      ],
      "provides": [
        "ol.interaction.Interaction",
        "ol.interaction.InteractionProperty"
      ]
    },
    {
      "name": "ol.interaction.Draw#bindTo",
      "kind": "function",
      "description": "The bindTo method allows you to set up a two-way binding between a\n`source` and `target` object. The method returns an object with a\n`transform` method that you can use to provide `from` and `to`\nfunctions to transform values on the way from the source to the\ntarget and on the way back.\n\nFor example, if you had two map views (sourceView and targetView)\nand you wanted the target view to have double the resolution of the\nsource view, you could transform the resolution on the way to and\nfrom the target with the following:\n\n    sourceView.bindTo('resolution', targetView)\n      .transform(\n        function(sourceResolution) {\n          // from sourceView.resolution to targetView.resolution\n          return 2 * sourceResolution;\n        },\n        function(targetResolution) {\n          // from targetView.resolution to sourceView.resolution\n          return targetResolution / 2;\n        }\n      );",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "target",
          "types": [
            "ol.Object"
          ]
        },
        {
          "name": "opt_targetKey",
          "types": [
            "string"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.ObjectAccessor"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.interaction.Draw#get",
      "kind": "function",
      "description": "Gets a value.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "*"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.interaction.Draw#getKeys",
      "kind": "function",
      "description": "Get a list of object property names.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "returns": {
        "types": [
          "Array.<string>"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.interaction.Draw#getProperties",
      "kind": "function",
      "description": "Get an object of all property names and values.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "returns": {
        "types": [
          "Object.<string, *>"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.interaction.Draw#set",
      "kind": "function",
      "description": "Sets a value.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "value",
          "types": [
            "*"
          ]
        }
      ],
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.interaction.Draw#setProperties",
      "kind": "function",
      "description": "Sets a collection of key-value pairs.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "values",
          "types": [
            "Object.<string, *>"
          ]
        }
      ],
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.interaction.Draw#unbind",
      "kind": "function",
      "description": "Removes a binding. Unbinding will set the unbound property to the current\n    value. The object will not be notified, as the value has not changed.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.interaction.Draw#unbindAll",
      "kind": "function",
      "description": "Removes all bindings.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.interaction.Draw#changed",
      "kind": "function",
      "description": "Increases the revision counter and disptches a 'change' event.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.Draw#getRevision",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.Draw#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.Draw#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.Draw#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.Draw#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.\nNote that using the {@link ol.Observable.unByKey} static function is to\nbe preferred.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "key",
          "types": [
            "goog.events.Key"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.KeyboardPan#getActive",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/interaction/interaction.js",
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.interaction.Interaction",
        "ol.interaction.InteractionProperty"
      ]
    },
    {
      "name": "ol.interaction.KeyboardPan#setActive",
      "kind": "function",
      "description": "Activate or deactivate the interaction.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/interaction/interaction.js",
      "params": [
        {
          "name": "active",
          "types": [
            "boolean"
          ]
        }
      ],
      "provides": [
        "ol.interaction.Interaction",
        "ol.interaction.InteractionProperty"
      ]
    },
    {
      "name": "ol.interaction.KeyboardPan#bindTo",
      "kind": "function",
      "description": "The bindTo method allows you to set up a two-way binding between a\n`source` and `target` object. The method returns an object with a\n`transform` method that you can use to provide `from` and `to`\nfunctions to transform values on the way from the source to the\ntarget and on the way back.\n\nFor example, if you had two map views (sourceView and targetView)\nand you wanted the target view to have double the resolution of the\nsource view, you could transform the resolution on the way to and\nfrom the target with the following:\n\n    sourceView.bindTo('resolution', targetView)\n      .transform(\n        function(sourceResolution) {\n          // from sourceView.resolution to targetView.resolution\n          return 2 * sourceResolution;\n        },\n        function(targetResolution) {\n          // from targetView.resolution to sourceView.resolution\n          return targetResolution / 2;\n        }\n      );",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "target",
          "types": [
            "ol.Object"
          ]
        },
        {
          "name": "opt_targetKey",
          "types": [
            "string"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.ObjectAccessor"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.interaction.KeyboardPan#get",
      "kind": "function",
      "description": "Gets a value.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "*"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.interaction.KeyboardPan#getKeys",
      "kind": "function",
      "description": "Get a list of object property names.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "returns": {
        "types": [
          "Array.<string>"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.interaction.KeyboardPan#getProperties",
      "kind": "function",
      "description": "Get an object of all property names and values.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "returns": {
        "types": [
          "Object.<string, *>"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.interaction.KeyboardPan#set",
      "kind": "function",
      "description": "Sets a value.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "value",
          "types": [
            "*"
          ]
        }
      ],
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.interaction.KeyboardPan#setProperties",
      "kind": "function",
      "description": "Sets a collection of key-value pairs.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "values",
          "types": [
            "Object.<string, *>"
          ]
        }
      ],
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.interaction.KeyboardPan#unbind",
      "kind": "function",
      "description": "Removes a binding. Unbinding will set the unbound property to the current\n    value. The object will not be notified, as the value has not changed.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.interaction.KeyboardPan#unbindAll",
      "kind": "function",
      "description": "Removes all bindings.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.interaction.KeyboardPan#changed",
      "kind": "function",
      "description": "Increases the revision counter and disptches a 'change' event.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.KeyboardPan#getRevision",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.KeyboardPan#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.KeyboardPan#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.KeyboardPan#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.KeyboardPan#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.\nNote that using the {@link ol.Observable.unByKey} static function is to\nbe preferred.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "key",
          "types": [
            "goog.events.Key"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.KeyboardZoom#getActive",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/interaction/interaction.js",
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.interaction.Interaction",
        "ol.interaction.InteractionProperty"
      ]
    },
    {
      "name": "ol.interaction.KeyboardZoom#setActive",
      "kind": "function",
      "description": "Activate or deactivate the interaction.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/interaction/interaction.js",
      "params": [
        {
          "name": "active",
          "types": [
            "boolean"
          ]
        }
      ],
      "provides": [
        "ol.interaction.Interaction",
        "ol.interaction.InteractionProperty"
      ]
    },
    {
      "name": "ol.interaction.KeyboardZoom#bindTo",
      "kind": "function",
      "description": "The bindTo method allows you to set up a two-way binding between a\n`source` and `target` object. The method returns an object with a\n`transform` method that you can use to provide `from` and `to`\nfunctions to transform values on the way from the source to the\ntarget and on the way back.\n\nFor example, if you had two map views (sourceView and targetView)\nand you wanted the target view to have double the resolution of the\nsource view, you could transform the resolution on the way to and\nfrom the target with the following:\n\n    sourceView.bindTo('resolution', targetView)\n      .transform(\n        function(sourceResolution) {\n          // from sourceView.resolution to targetView.resolution\n          return 2 * sourceResolution;\n        },\n        function(targetResolution) {\n          // from targetView.resolution to sourceView.resolution\n          return targetResolution / 2;\n        }\n      );",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "target",
          "types": [
            "ol.Object"
          ]
        },
        {
          "name": "opt_targetKey",
          "types": [
            "string"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.ObjectAccessor"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.interaction.KeyboardZoom#get",
      "kind": "function",
      "description": "Gets a value.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "*"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.interaction.KeyboardZoom#getKeys",
      "kind": "function",
      "description": "Get a list of object property names.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "returns": {
        "types": [
          "Array.<string>"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.interaction.KeyboardZoom#getProperties",
      "kind": "function",
      "description": "Get an object of all property names and values.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "returns": {
        "types": [
          "Object.<string, *>"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.interaction.KeyboardZoom#set",
      "kind": "function",
      "description": "Sets a value.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "value",
          "types": [
            "*"
          ]
        }
      ],
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.interaction.KeyboardZoom#setProperties",
      "kind": "function",
      "description": "Sets a collection of key-value pairs.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "values",
          "types": [
            "Object.<string, *>"
          ]
        }
      ],
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.interaction.KeyboardZoom#unbind",
      "kind": "function",
      "description": "Removes a binding. Unbinding will set the unbound property to the current\n    value. The object will not be notified, as the value has not changed.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.interaction.KeyboardZoom#unbindAll",
      "kind": "function",
      "description": "Removes all bindings.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.interaction.KeyboardZoom#changed",
      "kind": "function",
      "description": "Increases the revision counter and disptches a 'change' event.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.KeyboardZoom#getRevision",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.KeyboardZoom#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.KeyboardZoom#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.KeyboardZoom#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.KeyboardZoom#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.\nNote that using the {@link ol.Observable.unByKey} static function is to\nbe preferred.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "key",
          "types": [
            "goog.events.Key"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.Modify#getActive",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/interaction/interaction.js",
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.interaction.Interaction",
        "ol.interaction.InteractionProperty"
      ]
    },
    {
      "name": "ol.interaction.Modify#setActive",
      "kind": "function",
      "description": "Activate or deactivate the interaction.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/interaction/interaction.js",
      "params": [
        {
          "name": "active",
          "types": [
            "boolean"
          ]
        }
      ],
      "provides": [
        "ol.interaction.Interaction",
        "ol.interaction.InteractionProperty"
      ]
    },
    {
      "name": "ol.interaction.Modify#bindTo",
      "kind": "function",
      "description": "The bindTo method allows you to set up a two-way binding between a\n`source` and `target` object. The method returns an object with a\n`transform` method that you can use to provide `from` and `to`\nfunctions to transform values on the way from the source to the\ntarget and on the way back.\n\nFor example, if you had two map views (sourceView and targetView)\nand you wanted the target view to have double the resolution of the\nsource view, you could transform the resolution on the way to and\nfrom the target with the following:\n\n    sourceView.bindTo('resolution', targetView)\n      .transform(\n        function(sourceResolution) {\n          // from sourceView.resolution to targetView.resolution\n          return 2 * sourceResolution;\n        },\n        function(targetResolution) {\n          // from targetView.resolution to sourceView.resolution\n          return targetResolution / 2;\n        }\n      );",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "target",
          "types": [
            "ol.Object"
          ]
        },
        {
          "name": "opt_targetKey",
          "types": [
            "string"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.ObjectAccessor"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.interaction.Modify#get",
      "kind": "function",
      "description": "Gets a value.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "*"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.interaction.Modify#getKeys",
      "kind": "function",
      "description": "Get a list of object property names.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "returns": {
        "types": [
          "Array.<string>"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.interaction.Modify#getProperties",
      "kind": "function",
      "description": "Get an object of all property names and values.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "returns": {
        "types": [
          "Object.<string, *>"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.interaction.Modify#set",
      "kind": "function",
      "description": "Sets a value.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "value",
          "types": [
            "*"
          ]
        }
      ],
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.interaction.Modify#setProperties",
      "kind": "function",
      "description": "Sets a collection of key-value pairs.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "values",
          "types": [
            "Object.<string, *>"
          ]
        }
      ],
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.interaction.Modify#unbind",
      "kind": "function",
      "description": "Removes a binding. Unbinding will set the unbound property to the current\n    value. The object will not be notified, as the value has not changed.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.interaction.Modify#unbindAll",
      "kind": "function",
      "description": "Removes all bindings.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.interaction.Modify#changed",
      "kind": "function",
      "description": "Increases the revision counter and disptches a 'change' event.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.Modify#getRevision",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.Modify#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.Modify#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.Modify#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.Modify#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.\nNote that using the {@link ol.Observable.unByKey} static function is to\nbe preferred.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "key",
          "types": [
            "goog.events.Key"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.MouseWheelZoom#getActive",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/interaction/interaction.js",
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.interaction.Interaction",
        "ol.interaction.InteractionProperty"
      ]
    },
    {
      "name": "ol.interaction.MouseWheelZoom#setActive",
      "kind": "function",
      "description": "Activate or deactivate the interaction.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/interaction/interaction.js",
      "params": [
        {
          "name": "active",
          "types": [
            "boolean"
          ]
        }
      ],
      "provides": [
        "ol.interaction.Interaction",
        "ol.interaction.InteractionProperty"
      ]
    },
    {
      "name": "ol.interaction.MouseWheelZoom#bindTo",
      "kind": "function",
      "description": "The bindTo method allows you to set up a two-way binding between a\n`source` and `target` object. The method returns an object with a\n`transform` method that you can use to provide `from` and `to`\nfunctions to transform values on the way from the source to the\ntarget and on the way back.\n\nFor example, if you had two map views (sourceView and targetView)\nand you wanted the target view to have double the resolution of the\nsource view, you could transform the resolution on the way to and\nfrom the target with the following:\n\n    sourceView.bindTo('resolution', targetView)\n      .transform(\n        function(sourceResolution) {\n          // from sourceView.resolution to targetView.resolution\n          return 2 * sourceResolution;\n        },\n        function(targetResolution) {\n          // from targetView.resolution to sourceView.resolution\n          return targetResolution / 2;\n        }\n      );",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "target",
          "types": [
            "ol.Object"
          ]
        },
        {
          "name": "opt_targetKey",
          "types": [
            "string"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.ObjectAccessor"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.interaction.MouseWheelZoom#get",
      "kind": "function",
      "description": "Gets a value.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "*"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.interaction.MouseWheelZoom#getKeys",
      "kind": "function",
      "description": "Get a list of object property names.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "returns": {
        "types": [
          "Array.<string>"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.interaction.MouseWheelZoom#getProperties",
      "kind": "function",
      "description": "Get an object of all property names and values.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "returns": {
        "types": [
          "Object.<string, *>"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.interaction.MouseWheelZoom#set",
      "kind": "function",
      "description": "Sets a value.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "value",
          "types": [
            "*"
          ]
        }
      ],
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.interaction.MouseWheelZoom#setProperties",
      "kind": "function",
      "description": "Sets a collection of key-value pairs.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "values",
          "types": [
            "Object.<string, *>"
          ]
        }
      ],
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.interaction.MouseWheelZoom#unbind",
      "kind": "function",
      "description": "Removes a binding. Unbinding will set the unbound property to the current\n    value. The object will not be notified, as the value has not changed.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.interaction.MouseWheelZoom#unbindAll",
      "kind": "function",
      "description": "Removes all bindings.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.interaction.MouseWheelZoom#changed",
      "kind": "function",
      "description": "Increases the revision counter and disptches a 'change' event.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.MouseWheelZoom#getRevision",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.MouseWheelZoom#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.MouseWheelZoom#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.MouseWheelZoom#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.MouseWheelZoom#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.\nNote that using the {@link ol.Observable.unByKey} static function is to\nbe preferred.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "key",
          "types": [
            "goog.events.Key"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.PinchRotate#getActive",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/interaction/interaction.js",
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.interaction.Interaction",
        "ol.interaction.InteractionProperty"
      ]
    },
    {
      "name": "ol.interaction.PinchRotate#setActive",
      "kind": "function",
      "description": "Activate or deactivate the interaction.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/interaction/interaction.js",
      "params": [
        {
          "name": "active",
          "types": [
            "boolean"
          ]
        }
      ],
      "provides": [
        "ol.interaction.Interaction",
        "ol.interaction.InteractionProperty"
      ]
    },
    {
      "name": "ol.interaction.PinchRotate#bindTo",
      "kind": "function",
      "description": "The bindTo method allows you to set up a two-way binding between a\n`source` and `target` object. The method returns an object with a\n`transform` method that you can use to provide `from` and `to`\nfunctions to transform values on the way from the source to the\ntarget and on the way back.\n\nFor example, if you had two map views (sourceView and targetView)\nand you wanted the target view to have double the resolution of the\nsource view, you could transform the resolution on the way to and\nfrom the target with the following:\n\n    sourceView.bindTo('resolution', targetView)\n      .transform(\n        function(sourceResolution) {\n          // from sourceView.resolution to targetView.resolution\n          return 2 * sourceResolution;\n        },\n        function(targetResolution) {\n          // from targetView.resolution to sourceView.resolution\n          return targetResolution / 2;\n        }\n      );",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "target",
          "types": [
            "ol.Object"
          ]
        },
        {
          "name": "opt_targetKey",
          "types": [
            "string"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.ObjectAccessor"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.interaction.PinchRotate#get",
      "kind": "function",
      "description": "Gets a value.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "*"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.interaction.PinchRotate#getKeys",
      "kind": "function",
      "description": "Get a list of object property names.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "returns": {
        "types": [
          "Array.<string>"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.interaction.PinchRotate#getProperties",
      "kind": "function",
      "description": "Get an object of all property names and values.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "returns": {
        "types": [
          "Object.<string, *>"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.interaction.PinchRotate#set",
      "kind": "function",
      "description": "Sets a value.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "value",
          "types": [
            "*"
          ]
        }
      ],
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.interaction.PinchRotate#setProperties",
      "kind": "function",
      "description": "Sets a collection of key-value pairs.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "values",
          "types": [
            "Object.<string, *>"
          ]
        }
      ],
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.interaction.PinchRotate#unbind",
      "kind": "function",
      "description": "Removes a binding. Unbinding will set the unbound property to the current\n    value. The object will not be notified, as the value has not changed.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.interaction.PinchRotate#unbindAll",
      "kind": "function",
      "description": "Removes all bindings.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.interaction.PinchRotate#changed",
      "kind": "function",
      "description": "Increases the revision counter and disptches a 'change' event.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.PinchRotate#getRevision",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.PinchRotate#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.PinchRotate#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.PinchRotate#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.PinchRotate#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.\nNote that using the {@link ol.Observable.unByKey} static function is to\nbe preferred.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "key",
          "types": [
            "goog.events.Key"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.PinchZoom#getActive",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/interaction/interaction.js",
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.interaction.Interaction",
        "ol.interaction.InteractionProperty"
      ]
    },
    {
      "name": "ol.interaction.PinchZoom#setActive",
      "kind": "function",
      "description": "Activate or deactivate the interaction.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/interaction/interaction.js",
      "params": [
        {
          "name": "active",
          "types": [
            "boolean"
          ]
        }
      ],
      "provides": [
        "ol.interaction.Interaction",
        "ol.interaction.InteractionProperty"
      ]
    },
    {
      "name": "ol.interaction.PinchZoom#bindTo",
      "kind": "function",
      "description": "The bindTo method allows you to set up a two-way binding between a\n`source` and `target` object. The method returns an object with a\n`transform` method that you can use to provide `from` and `to`\nfunctions to transform values on the way from the source to the\ntarget and on the way back.\n\nFor example, if you had two map views (sourceView and targetView)\nand you wanted the target view to have double the resolution of the\nsource view, you could transform the resolution on the way to and\nfrom the target with the following:\n\n    sourceView.bindTo('resolution', targetView)\n      .transform(\n        function(sourceResolution) {\n          // from sourceView.resolution to targetView.resolution\n          return 2 * sourceResolution;\n        },\n        function(targetResolution) {\n          // from targetView.resolution to sourceView.resolution\n          return targetResolution / 2;\n        }\n      );",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "target",
          "types": [
            "ol.Object"
          ]
        },
        {
          "name": "opt_targetKey",
          "types": [
            "string"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.ObjectAccessor"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.interaction.PinchZoom#get",
      "kind": "function",
      "description": "Gets a value.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "*"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.interaction.PinchZoom#getKeys",
      "kind": "function",
      "description": "Get a list of object property names.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "returns": {
        "types": [
          "Array.<string>"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.interaction.PinchZoom#getProperties",
      "kind": "function",
      "description": "Get an object of all property names and values.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "returns": {
        "types": [
          "Object.<string, *>"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.interaction.PinchZoom#set",
      "kind": "function",
      "description": "Sets a value.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "value",
          "types": [
            "*"
          ]
        }
      ],
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.interaction.PinchZoom#setProperties",
      "kind": "function",
      "description": "Sets a collection of key-value pairs.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "values",
          "types": [
            "Object.<string, *>"
          ]
        }
      ],
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.interaction.PinchZoom#unbind",
      "kind": "function",
      "description": "Removes a binding. Unbinding will set the unbound property to the current\n    value. The object will not be notified, as the value has not changed.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.interaction.PinchZoom#unbindAll",
      "kind": "function",
      "description": "Removes all bindings.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.interaction.PinchZoom#changed",
      "kind": "function",
      "description": "Increases the revision counter and disptches a 'change' event.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.PinchZoom#getRevision",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.PinchZoom#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.PinchZoom#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.PinchZoom#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.PinchZoom#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.\nNote that using the {@link ol.Observable.unByKey} static function is to\nbe preferred.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "key",
          "types": [
            "goog.events.Key"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.Select#getActive",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/interaction/interaction.js",
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.interaction.Interaction",
        "ol.interaction.InteractionProperty"
      ]
    },
    {
      "name": "ol.interaction.Select#setActive",
      "kind": "function",
      "description": "Activate or deactivate the interaction.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/interaction/interaction.js",
      "params": [
        {
          "name": "active",
          "types": [
            "boolean"
          ]
        }
      ],
      "provides": [
        "ol.interaction.Interaction",
        "ol.interaction.InteractionProperty"
      ]
    },
    {
      "name": "ol.interaction.Select#bindTo",
      "kind": "function",
      "description": "The bindTo method allows you to set up a two-way binding between a\n`source` and `target` object. The method returns an object with a\n`transform` method that you can use to provide `from` and `to`\nfunctions to transform values on the way from the source to the\ntarget and on the way back.\n\nFor example, if you had two map views (sourceView and targetView)\nand you wanted the target view to have double the resolution of the\nsource view, you could transform the resolution on the way to and\nfrom the target with the following:\n\n    sourceView.bindTo('resolution', targetView)\n      .transform(\n        function(sourceResolution) {\n          // from sourceView.resolution to targetView.resolution\n          return 2 * sourceResolution;\n        },\n        function(targetResolution) {\n          // from targetView.resolution to sourceView.resolution\n          return targetResolution / 2;\n        }\n      );",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "target",
          "types": [
            "ol.Object"
          ]
        },
        {
          "name": "opt_targetKey",
          "types": [
            "string"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.ObjectAccessor"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.interaction.Select#get",
      "kind": "function",
      "description": "Gets a value.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "*"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.interaction.Select#getKeys",
      "kind": "function",
      "description": "Get a list of object property names.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "returns": {
        "types": [
          "Array.<string>"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.interaction.Select#getProperties",
      "kind": "function",
      "description": "Get an object of all property names and values.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "returns": {
        "types": [
          "Object.<string, *>"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.interaction.Select#set",
      "kind": "function",
      "description": "Sets a value.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "value",
          "types": [
            "*"
          ]
        }
      ],
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.interaction.Select#setProperties",
      "kind": "function",
      "description": "Sets a collection of key-value pairs.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "values",
          "types": [
            "Object.<string, *>"
          ]
        }
      ],
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.interaction.Select#unbind",
      "kind": "function",
      "description": "Removes a binding. Unbinding will set the unbound property to the current\n    value. The object will not be notified, as the value has not changed.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.interaction.Select#unbindAll",
      "kind": "function",
      "description": "Removes all bindings.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.interaction.Select#changed",
      "kind": "function",
      "description": "Increases the revision counter and disptches a 'change' event.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.Select#getRevision",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.Select#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.Select#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.Select#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.Select#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.\nNote that using the {@link ol.Observable.unByKey} static function is to\nbe preferred.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "key",
          "types": [
            "goog.events.Key"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.Geometry#changed",
      "kind": "function",
      "description": "Increases the revision counter and disptches a 'change' event.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.Geometry#getRevision",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.Geometry#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.Geometry#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.Geometry#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.Geometry#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.\nNote that using the {@link ol.Observable.unByKey} static function is to\nbe preferred.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "key",
          "types": [
            "goog.events.Key"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.SimpleGeometry#clone",
      "kind": "function",
      "description": "Make a complete copy of the geometry.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/geometry.js",
      "returns": {
        "types": [
          "ol.geom.Geometry"
        ],
        "nullable": false
      },
      "provides": [
        "ol.geom.Geometry",
        "ol.geom.GeometryType"
      ]
    },
    {
      "name": "ol.geom.SimpleGeometry#getClosestPoint",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/geometry.js",
      "params": [
        {
          "name": "point",
          "types": [
            "ol.Coordinate"
          ]
        },
        {
          "name": "opt_closestPoint",
          "types": [
            "ol.Coordinate"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.Coordinate"
        ]
      },
      "provides": [
        "ol.geom.Geometry",
        "ol.geom.GeometryType"
      ]
    },
    {
      "name": "ol.geom.SimpleGeometry#getExtent",
      "kind": "function",
      "description": "Get the extent of the geometry.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/geometry.js",
      "params": [
        {
          "name": "opt_extent",
          "types": [
            "ol.Extent"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.Extent"
        ]
      },
      "provides": [
        "ol.geom.Geometry",
        "ol.geom.GeometryType"
      ]
    },
    {
      "name": "ol.geom.SimpleGeometry#getType",
      "kind": "function",
      "description": "Get the type of this geometry.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/geometry.js",
      "returns": {
        "types": [
          "ol.geom.GeometryType"
        ]
      },
      "provides": [
        "ol.geom.Geometry",
        "ol.geom.GeometryType"
      ]
    },
    {
      "name": "ol.geom.SimpleGeometry#intersectsExtent",
      "kind": "function",
      "description": "Test if the geometry and the passed extent intersect.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/geometry.js",
      "params": [
        {
          "name": "extent",
          "types": [
            "ol.Extent"
          ]
        }
      ],
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.geom.Geometry",
        "ol.geom.GeometryType"
      ]
    },
    {
      "name": "ol.geom.SimpleGeometry#transform",
      "kind": "function",
      "description": "Transform each coordinate of the geometry from one coordinate reference\nsystem to another. The geometry is modified in place.\nFor example, a line will be transformed to a line and a circle to a circle.\nIf you do not want the geometry modified in place, first clone() it and\nthen use this function on the clone.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/geometry.js",
      "params": [
        {
          "name": "source",
          "types": [
            "ol.proj.ProjectionLike"
          ]
        },
        {
          "name": "destination",
          "types": [
            "ol.proj.ProjectionLike"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.geom.Geometry"
        ]
      },
      "provides": [
        "ol.geom.Geometry",
        "ol.geom.GeometryType"
      ]
    },
    {
      "name": "ol.geom.SimpleGeometry#changed",
      "kind": "function",
      "description": "Increases the revision counter and disptches a 'change' event.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.SimpleGeometry#getRevision",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.SimpleGeometry#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.SimpleGeometry#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.SimpleGeometry#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.SimpleGeometry#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.\nNote that using the {@link ol.Observable.unByKey} static function is to\nbe preferred.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "key",
          "types": [
            "goog.events.Key"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.Circle#getFirstCoordinate",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/simplegeometry.js",
      "returns": {
        "types": [
          "ol.Coordinate"
        ]
      },
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.Circle#getLastCoordinate",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/simplegeometry.js",
      "returns": {
        "types": [
          "ol.Coordinate"
        ]
      },
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.Circle#getLayout",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/simplegeometry.js",
      "returns": {
        "types": [
          "ol.geom.GeometryLayout"
        ]
      },
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.Circle#applyTransform",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/simplegeometry.js",
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.Circle#translate",
      "kind": "function",
      "description": "Translate the geometry.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/simplegeometry.js",
      "params": [
        {
          "name": "deltaX",
          "types": [
            "number"
          ]
        },
        {
          "name": "deltaY",
          "types": [
            "number"
          ]
        }
      ],
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.Circle#getClosestPoint",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/geometry.js",
      "params": [
        {
          "name": "point",
          "types": [
            "ol.Coordinate"
          ]
        },
        {
          "name": "opt_closestPoint",
          "types": [
            "ol.Coordinate"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.Coordinate"
        ]
      },
      "provides": [
        "ol.geom.Geometry",
        "ol.geom.GeometryType"
      ]
    },
    {
      "name": "ol.geom.Circle#getExtent",
      "kind": "function",
      "description": "Get the extent of the geometry.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/geometry.js",
      "params": [
        {
          "name": "opt_extent",
          "types": [
            "ol.Extent"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.Extent"
        ]
      },
      "provides": [
        "ol.geom.Geometry",
        "ol.geom.GeometryType"
      ]
    },
    {
      "name": "ol.geom.Circle#intersectsExtent",
      "kind": "function",
      "description": "Test if the geometry and the passed extent intersect.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/geometry.js",
      "params": [
        {
          "name": "extent",
          "types": [
            "ol.Extent"
          ]
        }
      ],
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.geom.Geometry",
        "ol.geom.GeometryType"
      ]
    },
    {
      "name": "ol.geom.Circle#changed",
      "kind": "function",
      "description": "Increases the revision counter and disptches a 'change' event.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.Circle#getRevision",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.Circle#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.Circle#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.Circle#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.Circle#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.\nNote that using the {@link ol.Observable.unByKey} static function is to\nbe preferred.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "key",
          "types": [
            "goog.events.Key"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.GeometryCollection#getClosestPoint",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/geometry.js",
      "params": [
        {
          "name": "point",
          "types": [
            "ol.Coordinate"
          ]
        },
        {
          "name": "opt_closestPoint",
          "types": [
            "ol.Coordinate"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.Coordinate"
        ]
      },
      "provides": [
        "ol.geom.Geometry",
        "ol.geom.GeometryType"
      ]
    },
    {
      "name": "ol.geom.GeometryCollection#getExtent",
      "kind": "function",
      "description": "Get the extent of the geometry.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/geometry.js",
      "params": [
        {
          "name": "opt_extent",
          "types": [
            "ol.Extent"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.Extent"
        ]
      },
      "provides": [
        "ol.geom.Geometry",
        "ol.geom.GeometryType"
      ]
    },
    {
      "name": "ol.geom.GeometryCollection#transform",
      "kind": "function",
      "description": "Transform each coordinate of the geometry from one coordinate reference\nsystem to another. The geometry is modified in place.\nFor example, a line will be transformed to a line and a circle to a circle.\nIf you do not want the geometry modified in place, first clone() it and\nthen use this function on the clone.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/geometry.js",
      "params": [
        {
          "name": "source",
          "types": [
            "ol.proj.ProjectionLike"
          ]
        },
        {
          "name": "destination",
          "types": [
            "ol.proj.ProjectionLike"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.geom.Geometry"
        ]
      },
      "provides": [
        "ol.geom.Geometry",
        "ol.geom.GeometryType"
      ]
    },
    {
      "name": "ol.geom.GeometryCollection#changed",
      "kind": "function",
      "description": "Increases the revision counter and disptches a 'change' event.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.GeometryCollection#getRevision",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.GeometryCollection#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.GeometryCollection#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.GeometryCollection#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.GeometryCollection#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.\nNote that using the {@link ol.Observable.unByKey} static function is to\nbe preferred.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "key",
          "types": [
            "goog.events.Key"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.LinearRing#getFirstCoordinate",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/simplegeometry.js",
      "returns": {
        "types": [
          "ol.Coordinate"
        ]
      },
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.LinearRing#getLastCoordinate",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/simplegeometry.js",
      "returns": {
        "types": [
          "ol.Coordinate"
        ]
      },
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.LinearRing#getLayout",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/simplegeometry.js",
      "returns": {
        "types": [
          "ol.geom.GeometryLayout"
        ]
      },
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.LinearRing#applyTransform",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/simplegeometry.js",
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.LinearRing#translate",
      "kind": "function",
      "description": "Translate the geometry.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/simplegeometry.js",
      "params": [
        {
          "name": "deltaX",
          "types": [
            "number"
          ]
        },
        {
          "name": "deltaY",
          "types": [
            "number"
          ]
        }
      ],
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.LinearRing#getClosestPoint",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/geometry.js",
      "params": [
        {
          "name": "point",
          "types": [
            "ol.Coordinate"
          ]
        },
        {
          "name": "opt_closestPoint",
          "types": [
            "ol.Coordinate"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.Coordinate"
        ]
      },
      "provides": [
        "ol.geom.Geometry",
        "ol.geom.GeometryType"
      ]
    },
    {
      "name": "ol.geom.LinearRing#getExtent",
      "kind": "function",
      "description": "Get the extent of the geometry.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/geometry.js",
      "params": [
        {
          "name": "opt_extent",
          "types": [
            "ol.Extent"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.Extent"
        ]
      },
      "provides": [
        "ol.geom.Geometry",
        "ol.geom.GeometryType"
      ]
    },
    {
      "name": "ol.geom.LinearRing#intersectsExtent",
      "kind": "function",
      "description": "Test if the geometry and the passed extent intersect.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/geometry.js",
      "params": [
        {
          "name": "extent",
          "types": [
            "ol.Extent"
          ]
        }
      ],
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.geom.Geometry",
        "ol.geom.GeometryType"
      ]
    },
    {
      "name": "ol.geom.LinearRing#transform",
      "kind": "function",
      "description": "Transform each coordinate of the geometry from one coordinate reference\nsystem to another. The geometry is modified in place.\nFor example, a line will be transformed to a line and a circle to a circle.\nIf you do not want the geometry modified in place, first clone() it and\nthen use this function on the clone.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/geometry.js",
      "params": [
        {
          "name": "source",
          "types": [
            "ol.proj.ProjectionLike"
          ]
        },
        {
          "name": "destination",
          "types": [
            "ol.proj.ProjectionLike"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.geom.Geometry"
        ]
      },
      "provides": [
        "ol.geom.Geometry",
        "ol.geom.GeometryType"
      ]
    },
    {
      "name": "ol.geom.LinearRing#changed",
      "kind": "function",
      "description": "Increases the revision counter and disptches a 'change' event.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.LinearRing#getRevision",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.LinearRing#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.LinearRing#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.LinearRing#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.LinearRing#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.\nNote that using the {@link ol.Observable.unByKey} static function is to\nbe preferred.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "key",
          "types": [
            "goog.events.Key"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.LineString#getFirstCoordinate",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/simplegeometry.js",
      "returns": {
        "types": [
          "ol.Coordinate"
        ]
      },
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.LineString#getLastCoordinate",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/simplegeometry.js",
      "returns": {
        "types": [
          "ol.Coordinate"
        ]
      },
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.LineString#getLayout",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/simplegeometry.js",
      "returns": {
        "types": [
          "ol.geom.GeometryLayout"
        ]
      },
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.LineString#applyTransform",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/simplegeometry.js",
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.LineString#translate",
      "kind": "function",
      "description": "Translate the geometry.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/simplegeometry.js",
      "params": [
        {
          "name": "deltaX",
          "types": [
            "number"
          ]
        },
        {
          "name": "deltaY",
          "types": [
            "number"
          ]
        }
      ],
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.LineString#getClosestPoint",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/geometry.js",
      "params": [
        {
          "name": "point",
          "types": [
            "ol.Coordinate"
          ]
        },
        {
          "name": "opt_closestPoint",
          "types": [
            "ol.Coordinate"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.Coordinate"
        ]
      },
      "provides": [
        "ol.geom.Geometry",
        "ol.geom.GeometryType"
      ]
    },
    {
      "name": "ol.geom.LineString#getExtent",
      "kind": "function",
      "description": "Get the extent of the geometry.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/geometry.js",
      "params": [
        {
          "name": "opt_extent",
          "types": [
            "ol.Extent"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.Extent"
        ]
      },
      "provides": [
        "ol.geom.Geometry",
        "ol.geom.GeometryType"
      ]
    },
    {
      "name": "ol.geom.LineString#transform",
      "kind": "function",
      "description": "Transform each coordinate of the geometry from one coordinate reference\nsystem to another. The geometry is modified in place.\nFor example, a line will be transformed to a line and a circle to a circle.\nIf you do not want the geometry modified in place, first clone() it and\nthen use this function on the clone.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/geometry.js",
      "params": [
        {
          "name": "source",
          "types": [
            "ol.proj.ProjectionLike"
          ]
        },
        {
          "name": "destination",
          "types": [
            "ol.proj.ProjectionLike"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.geom.Geometry"
        ]
      },
      "provides": [
        "ol.geom.Geometry",
        "ol.geom.GeometryType"
      ]
    },
    {
      "name": "ol.geom.LineString#changed",
      "kind": "function",
      "description": "Increases the revision counter and disptches a 'change' event.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.LineString#getRevision",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.LineString#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.LineString#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.LineString#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.LineString#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.\nNote that using the {@link ol.Observable.unByKey} static function is to\nbe preferred.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "key",
          "types": [
            "goog.events.Key"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.MultiLineString#getFirstCoordinate",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/simplegeometry.js",
      "returns": {
        "types": [
          "ol.Coordinate"
        ]
      },
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.MultiLineString#getLastCoordinate",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/simplegeometry.js",
      "returns": {
        "types": [
          "ol.Coordinate"
        ]
      },
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.MultiLineString#getLayout",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/simplegeometry.js",
      "returns": {
        "types": [
          "ol.geom.GeometryLayout"
        ]
      },
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.MultiLineString#applyTransform",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/simplegeometry.js",
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.MultiLineString#translate",
      "kind": "function",
      "description": "Translate the geometry.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/simplegeometry.js",
      "params": [
        {
          "name": "deltaX",
          "types": [
            "number"
          ]
        },
        {
          "name": "deltaY",
          "types": [
            "number"
          ]
        }
      ],
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.MultiLineString#getClosestPoint",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/geometry.js",
      "params": [
        {
          "name": "point",
          "types": [
            "ol.Coordinate"
          ]
        },
        {
          "name": "opt_closestPoint",
          "types": [
            "ol.Coordinate"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.Coordinate"
        ]
      },
      "provides": [
        "ol.geom.Geometry",
        "ol.geom.GeometryType"
      ]
    },
    {
      "name": "ol.geom.MultiLineString#getExtent",
      "kind": "function",
      "description": "Get the extent of the geometry.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/geometry.js",
      "params": [
        {
          "name": "opt_extent",
          "types": [
            "ol.Extent"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.Extent"
        ]
      },
      "provides": [
        "ol.geom.Geometry",
        "ol.geom.GeometryType"
      ]
    },
    {
      "name": "ol.geom.MultiLineString#transform",
      "kind": "function",
      "description": "Transform each coordinate of the geometry from one coordinate reference\nsystem to another. The geometry is modified in place.\nFor example, a line will be transformed to a line and a circle to a circle.\nIf you do not want the geometry modified in place, first clone() it and\nthen use this function on the clone.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/geometry.js",
      "params": [
        {
          "name": "source",
          "types": [
            "ol.proj.ProjectionLike"
          ]
        },
        {
          "name": "destination",
          "types": [
            "ol.proj.ProjectionLike"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.geom.Geometry"
        ]
      },
      "provides": [
        "ol.geom.Geometry",
        "ol.geom.GeometryType"
      ]
    },
    {
      "name": "ol.geom.MultiLineString#changed",
      "kind": "function",
      "description": "Increases the revision counter and disptches a 'change' event.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.MultiLineString#getRevision",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.MultiLineString#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.MultiLineString#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.MultiLineString#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.MultiLineString#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.\nNote that using the {@link ol.Observable.unByKey} static function is to\nbe preferred.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "key",
          "types": [
            "goog.events.Key"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.MultiPoint#getFirstCoordinate",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/simplegeometry.js",
      "returns": {
        "types": [
          "ol.Coordinate"
        ]
      },
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.MultiPoint#getLastCoordinate",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/simplegeometry.js",
      "returns": {
        "types": [
          "ol.Coordinate"
        ]
      },
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.MultiPoint#getLayout",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/simplegeometry.js",
      "returns": {
        "types": [
          "ol.geom.GeometryLayout"
        ]
      },
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.MultiPoint#applyTransform",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/simplegeometry.js",
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.MultiPoint#translate",
      "kind": "function",
      "description": "Translate the geometry.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/simplegeometry.js",
      "params": [
        {
          "name": "deltaX",
          "types": [
            "number"
          ]
        },
        {
          "name": "deltaY",
          "types": [
            "number"
          ]
        }
      ],
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.MultiPoint#getClosestPoint",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/geometry.js",
      "params": [
        {
          "name": "point",
          "types": [
            "ol.Coordinate"
          ]
        },
        {
          "name": "opt_closestPoint",
          "types": [
            "ol.Coordinate"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.Coordinate"
        ]
      },
      "provides": [
        "ol.geom.Geometry",
        "ol.geom.GeometryType"
      ]
    },
    {
      "name": "ol.geom.MultiPoint#getExtent",
      "kind": "function",
      "description": "Get the extent of the geometry.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/geometry.js",
      "params": [
        {
          "name": "opt_extent",
          "types": [
            "ol.Extent"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.Extent"
        ]
      },
      "provides": [
        "ol.geom.Geometry",
        "ol.geom.GeometryType"
      ]
    },
    {
      "name": "ol.geom.MultiPoint#transform",
      "kind": "function",
      "description": "Transform each coordinate of the geometry from one coordinate reference\nsystem to another. The geometry is modified in place.\nFor example, a line will be transformed to a line and a circle to a circle.\nIf you do not want the geometry modified in place, first clone() it and\nthen use this function on the clone.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/geometry.js",
      "params": [
        {
          "name": "source",
          "types": [
            "ol.proj.ProjectionLike"
          ]
        },
        {
          "name": "destination",
          "types": [
            "ol.proj.ProjectionLike"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.geom.Geometry"
        ]
      },
      "provides": [
        "ol.geom.Geometry",
        "ol.geom.GeometryType"
      ]
    },
    {
      "name": "ol.geom.MultiPoint#changed",
      "kind": "function",
      "description": "Increases the revision counter and disptches a 'change' event.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.MultiPoint#getRevision",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.MultiPoint#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.MultiPoint#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.MultiPoint#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.MultiPoint#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.\nNote that using the {@link ol.Observable.unByKey} static function is to\nbe preferred.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "key",
          "types": [
            "goog.events.Key"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.MultiPolygon#getFirstCoordinate",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/simplegeometry.js",
      "returns": {
        "types": [
          "ol.Coordinate"
        ]
      },
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.MultiPolygon#getLastCoordinate",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/simplegeometry.js",
      "returns": {
        "types": [
          "ol.Coordinate"
        ]
      },
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.MultiPolygon#getLayout",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/simplegeometry.js",
      "returns": {
        "types": [
          "ol.geom.GeometryLayout"
        ]
      },
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.MultiPolygon#applyTransform",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/simplegeometry.js",
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.MultiPolygon#translate",
      "kind": "function",
      "description": "Translate the geometry.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/simplegeometry.js",
      "params": [
        {
          "name": "deltaX",
          "types": [
            "number"
          ]
        },
        {
          "name": "deltaY",
          "types": [
            "number"
          ]
        }
      ],
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.MultiPolygon#getClosestPoint",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/geometry.js",
      "params": [
        {
          "name": "point",
          "types": [
            "ol.Coordinate"
          ]
        },
        {
          "name": "opt_closestPoint",
          "types": [
            "ol.Coordinate"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.Coordinate"
        ]
      },
      "provides": [
        "ol.geom.Geometry",
        "ol.geom.GeometryType"
      ]
    },
    {
      "name": "ol.geom.MultiPolygon#getExtent",
      "kind": "function",
      "description": "Get the extent of the geometry.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/geometry.js",
      "params": [
        {
          "name": "opt_extent",
          "types": [
            "ol.Extent"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.Extent"
        ]
      },
      "provides": [
        "ol.geom.Geometry",
        "ol.geom.GeometryType"
      ]
    },
    {
      "name": "ol.geom.MultiPolygon#transform",
      "kind": "function",
      "description": "Transform each coordinate of the geometry from one coordinate reference\nsystem to another. The geometry is modified in place.\nFor example, a line will be transformed to a line and a circle to a circle.\nIf you do not want the geometry modified in place, first clone() it and\nthen use this function on the clone.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/geometry.js",
      "params": [
        {
          "name": "source",
          "types": [
            "ol.proj.ProjectionLike"
          ]
        },
        {
          "name": "destination",
          "types": [
            "ol.proj.ProjectionLike"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.geom.Geometry"
        ]
      },
      "provides": [
        "ol.geom.Geometry",
        "ol.geom.GeometryType"
      ]
    },
    {
      "name": "ol.geom.MultiPolygon#changed",
      "kind": "function",
      "description": "Increases the revision counter and disptches a 'change' event.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.MultiPolygon#getRevision",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.MultiPolygon#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.MultiPolygon#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.MultiPolygon#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.MultiPolygon#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.\nNote that using the {@link ol.Observable.unByKey} static function is to\nbe preferred.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "key",
          "types": [
            "goog.events.Key"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.Point#getFirstCoordinate",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/simplegeometry.js",
      "returns": {
        "types": [
          "ol.Coordinate"
        ]
      },
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.Point#getLastCoordinate",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/simplegeometry.js",
      "returns": {
        "types": [
          "ol.Coordinate"
        ]
      },
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.Point#getLayout",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/simplegeometry.js",
      "returns": {
        "types": [
          "ol.geom.GeometryLayout"
        ]
      },
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.Point#applyTransform",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/simplegeometry.js",
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.Point#translate",
      "kind": "function",
      "description": "Translate the geometry.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/simplegeometry.js",
      "params": [
        {
          "name": "deltaX",
          "types": [
            "number"
          ]
        },
        {
          "name": "deltaY",
          "types": [
            "number"
          ]
        }
      ],
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.Point#getClosestPoint",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/geometry.js",
      "params": [
        {
          "name": "point",
          "types": [
            "ol.Coordinate"
          ]
        },
        {
          "name": "opt_closestPoint",
          "types": [
            "ol.Coordinate"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.Coordinate"
        ]
      },
      "provides": [
        "ol.geom.Geometry",
        "ol.geom.GeometryType"
      ]
    },
    {
      "name": "ol.geom.Point#getExtent",
      "kind": "function",
      "description": "Get the extent of the geometry.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/geometry.js",
      "params": [
        {
          "name": "opt_extent",
          "types": [
            "ol.Extent"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.Extent"
        ]
      },
      "provides": [
        "ol.geom.Geometry",
        "ol.geom.GeometryType"
      ]
    },
    {
      "name": "ol.geom.Point#transform",
      "kind": "function",
      "description": "Transform each coordinate of the geometry from one coordinate reference\nsystem to another. The geometry is modified in place.\nFor example, a line will be transformed to a line and a circle to a circle.\nIf you do not want the geometry modified in place, first clone() it and\nthen use this function on the clone.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/geometry.js",
      "params": [
        {
          "name": "source",
          "types": [
            "ol.proj.ProjectionLike"
          ]
        },
        {
          "name": "destination",
          "types": [
            "ol.proj.ProjectionLike"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.geom.Geometry"
        ]
      },
      "provides": [
        "ol.geom.Geometry",
        "ol.geom.GeometryType"
      ]
    },
    {
      "name": "ol.geom.Point#changed",
      "kind": "function",
      "description": "Increases the revision counter and disptches a 'change' event.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.Point#getRevision",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.Point#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.Point#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.Point#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.Point#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.\nNote that using the {@link ol.Observable.unByKey} static function is to\nbe preferred.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "key",
          "types": [
            "goog.events.Key"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.Polygon#getFirstCoordinate",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/simplegeometry.js",
      "returns": {
        "types": [
          "ol.Coordinate"
        ]
      },
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.Polygon#getLastCoordinate",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/simplegeometry.js",
      "returns": {
        "types": [
          "ol.Coordinate"
        ]
      },
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.Polygon#getLayout",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/simplegeometry.js",
      "returns": {
        "types": [
          "ol.geom.GeometryLayout"
        ]
      },
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.Polygon#applyTransform",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/simplegeometry.js",
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.Polygon#translate",
      "kind": "function",
      "description": "Translate the geometry.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/simplegeometry.js",
      "params": [
        {
          "name": "deltaX",
          "types": [
            "number"
          ]
        },
        {
          "name": "deltaY",
          "types": [
            "number"
          ]
        }
      ],
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.Polygon#getClosestPoint",
      "kind": "function",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/geometry.js",
      "params": [
        {
          "name": "point",
          "types": [
            "ol.Coordinate"
          ]
        },
        {
          "name": "opt_closestPoint",
          "types": [
            "ol.Coordinate"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.Coordinate"
        ]
      },
      "provides": [
        "ol.geom.Geometry",
        "ol.geom.GeometryType"
      ]
    },
    {
      "name": "ol.geom.Polygon#getExtent",
      "kind": "function",
      "description": "Get the extent of the geometry.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/geometry.js",
      "params": [
        {
          "name": "opt_extent",
          "types": [
            "ol.Extent"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.Extent"
        ]
      },
      "provides": [
        "ol.geom.Geometry",
        "ol.geom.GeometryType"
      ]
    },
    {
      "name": "ol.geom.Polygon#transform",
      "kind": "function",
      "description": "Transform each coordinate of the geometry from one coordinate reference\nsystem to another. The geometry is modified in place.\nFor example, a line will be transformed to a line and a circle to a circle.\nIf you do not want the geometry modified in place, first clone() it and\nthen use this function on the clone.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/geom/geometry.js",
      "params": [
        {
          "name": "source",
          "types": [
            "ol.proj.ProjectionLike"
          ]
        },
        {
          "name": "destination",
          "types": [
            "ol.proj.ProjectionLike"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.geom.Geometry"
        ]
      },
      "provides": [
        "ol.geom.Geometry",
        "ol.geom.GeometryType"
      ]
    },
    {
      "name": "ol.geom.Polygon#changed",
      "kind": "function",
      "description": "Increases the revision counter and disptches a 'change' event.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.Polygon#getRevision",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.Polygon#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.Polygon#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.Polygon#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.Polygon#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.\nNote that using the {@link ol.Observable.unByKey} static function is to\nbe preferred.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "key",
          "types": [
            "goog.events.Key"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.format.GML2#readFeatures",
      "kind": "function",
      "description": "Read all features from a GML FeatureCollection.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/format/gml/gmlbaseformat.js",
      "params": [
        {
          "name": "source",
          "types": [
            "ArrayBuffer",
            "Document",
            "Node",
            "Object",
            "string"
          ]
        },
        {
          "name": "opt_options",
          "types": [
            "olx.format.ReadOptions"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "Array.<ol.Feature>"
        ]
      },
      "provides": [
        "ol.format.GMLBase"
      ]
    },
    {
      "name": "ol.format.GML3#readFeatures",
      "kind": "function",
      "description": "Read all features from a GML FeatureCollection.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/format/gml/gmlbaseformat.js",
      "params": [
        {
          "name": "source",
          "types": [
            "ArrayBuffer",
            "Document",
            "Node",
            "Object",
            "string"
          ]
        },
        {
          "name": "opt_options",
          "types": [
            "olx.format.ReadOptions"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "Array.<ol.Feature>"
        ]
      },
      "provides": [
        "ol.format.GMLBase"
      ]
    },
    {
      "name": "ol.format.GML#readFeatures",
      "kind": "function",
      "description": "Read all features from a GML FeatureCollection.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/format/gml/gmlbaseformat.js",
      "params": [
        {
          "name": "source",
          "types": [
            "ArrayBuffer",
            "Document",
            "Node",
            "Object",
            "string"
          ]
        },
        {
          "name": "opt_options",
          "types": [
            "olx.format.ReadOptions"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "Array.<ol.Feature>"
        ]
      },
      "provides": [
        "ol.format.GMLBase"
      ]
    },
    {
      "name": "ol.dom.Input#bindTo",
      "kind": "function",
      "description": "The bindTo method allows you to set up a two-way binding between a\n`source` and `target` object. The method returns an object with a\n`transform` method that you can use to provide `from` and `to`\nfunctions to transform values on the way from the source to the\ntarget and on the way back.\n\nFor example, if you had two map views (sourceView and targetView)\nand you wanted the target view to have double the resolution of the\nsource view, you could transform the resolution on the way to and\nfrom the target with the following:\n\n    sourceView.bindTo('resolution', targetView)\n      .transform(\n        function(sourceResolution) {\n          // from sourceView.resolution to targetView.resolution\n          return 2 * sourceResolution;\n        },\n        function(targetResolution) {\n          // from targetView.resolution to sourceView.resolution\n          return targetResolution / 2;\n        }\n      );",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "target",
          "types": [
            "ol.Object"
          ]
        },
        {
          "name": "opt_targetKey",
          "types": [
            "string"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.ObjectAccessor"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.dom.Input#get",
      "kind": "function",
      "description": "Gets a value.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "*"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.dom.Input#getKeys",
      "kind": "function",
      "description": "Get a list of object property names.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "returns": {
        "types": [
          "Array.<string>"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.dom.Input#getProperties",
      "kind": "function",
      "description": "Get an object of all property names and values.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "returns": {
        "types": [
          "Object.<string, *>"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.dom.Input#set",
      "kind": "function",
      "description": "Sets a value.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "value",
          "types": [
            "*"
          ]
        }
      ],
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.dom.Input#setProperties",
      "kind": "function",
      "description": "Sets a collection of key-value pairs.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "values",
          "types": [
            "Object.<string, *>"
          ]
        }
      ],
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.dom.Input#unbind",
      "kind": "function",
      "description": "Removes a binding. Unbinding will set the unbound property to the current\n    value. The object will not be notified, as the value has not changed.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.dom.Input#unbindAll",
      "kind": "function",
      "description": "Removes all bindings.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.dom.Input#changed",
      "kind": "function",
      "description": "Increases the revision counter and disptches a 'change' event.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.dom.Input#getRevision",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.dom.Input#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.dom.Input#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.dom.Input#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.dom.Input#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.\nNote that using the {@link ol.Observable.unByKey} static function is to\nbe preferred.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "key",
          "types": [
            "goog.events.Key"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.Control#bindTo",
      "kind": "function",
      "description": "The bindTo method allows you to set up a two-way binding between a\n`source` and `target` object. The method returns an object with a\n`transform` method that you can use to provide `from` and `to`\nfunctions to transform values on the way from the source to the\ntarget and on the way back.\n\nFor example, if you had two map views (sourceView and targetView)\nand you wanted the target view to have double the resolution of the\nsource view, you could transform the resolution on the way to and\nfrom the target with the following:\n\n    sourceView.bindTo('resolution', targetView)\n      .transform(\n        function(sourceResolution) {\n          // from sourceView.resolution to targetView.resolution\n          return 2 * sourceResolution;\n        },\n        function(targetResolution) {\n          // from targetView.resolution to sourceView.resolution\n          return targetResolution / 2;\n        }\n      );",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "target",
          "types": [
            "ol.Object"
          ]
        },
        {
          "name": "opt_targetKey",
          "types": [
            "string"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.ObjectAccessor"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.Control#get",
      "kind": "function",
      "description": "Gets a value.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "*"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.Control#getKeys",
      "kind": "function",
      "description": "Get a list of object property names.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "returns": {
        "types": [
          "Array.<string>"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.Control#getProperties",
      "kind": "function",
      "description": "Get an object of all property names and values.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "returns": {
        "types": [
          "Object.<string, *>"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.Control#set",
      "kind": "function",
      "description": "Sets a value.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "value",
          "types": [
            "*"
          ]
        }
      ],
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.Control#setProperties",
      "kind": "function",
      "description": "Sets a collection of key-value pairs.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "values",
          "types": [
            "Object.<string, *>"
          ]
        }
      ],
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.Control#unbind",
      "kind": "function",
      "description": "Removes a binding. Unbinding will set the unbound property to the current\n    value. The object will not be notified, as the value has not changed.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.Control#unbindAll",
      "kind": "function",
      "description": "Removes all bindings.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.Control#changed",
      "kind": "function",
      "description": "Increases the revision counter and disptches a 'change' event.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.Control#getRevision",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.Control#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.Control#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.Control#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.Control#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.\nNote that using the {@link ol.Observable.unByKey} static function is to\nbe preferred.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "key",
          "types": [
            "goog.events.Key"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.Attribution#getMap",
      "kind": "function",
      "description": "Get the map associated with this control.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/control/control.js",
      "returns": {
        "types": [
          "ol.Map"
        ]
      },
      "provides": [
        "ol.control.Control"
      ]
    },
    {
      "name": "ol.control.Attribution#setMap",
      "kind": "function",
      "description": "Remove the control from its current map and attach it to the new map.\nSubclasses may set up event handlers to get notified about changes to\nthe map here.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/control/control.js",
      "params": [
        {
          "name": "map",
          "types": [
            "ol.Map"
          ]
        }
      ],
      "provides": [
        "ol.control.Control"
      ]
    },
    {
      "name": "ol.control.Attribution#setTarget",
      "kind": "function",
      "description": "This function is used to set a target element for the control. It has no\neffect if it is called after the control has been added to the map (i.e.\nafter `setMap` is called on the control). If no `target` is set in the\noptions passed to the control constructor and if `setTarget` is not called\nthen the control is added to the map's overlay container.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/control/control.js",
      "params": [
        {
          "name": "target",
          "types": [
            "Element",
            "string"
          ]
        }
      ],
      "provides": [
        "ol.control.Control"
      ]
    },
    {
      "name": "ol.control.Attribution#bindTo",
      "kind": "function",
      "description": "The bindTo method allows you to set up a two-way binding between a\n`source` and `target` object. The method returns an object with a\n`transform` method that you can use to provide `from` and `to`\nfunctions to transform values on the way from the source to the\ntarget and on the way back.\n\nFor example, if you had two map views (sourceView and targetView)\nand you wanted the target view to have double the resolution of the\nsource view, you could transform the resolution on the way to and\nfrom the target with the following:\n\n    sourceView.bindTo('resolution', targetView)\n      .transform(\n        function(sourceResolution) {\n          // from sourceView.resolution to targetView.resolution\n          return 2 * sourceResolution;\n        },\n        function(targetResolution) {\n          // from targetView.resolution to sourceView.resolution\n          return targetResolution / 2;\n        }\n      );",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "target",
          "types": [
            "ol.Object"
          ]
        },
        {
          "name": "opt_targetKey",
          "types": [
            "string"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.ObjectAccessor"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.Attribution#get",
      "kind": "function",
      "description": "Gets a value.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "*"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.Attribution#getKeys",
      "kind": "function",
      "description": "Get a list of object property names.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "returns": {
        "types": [
          "Array.<string>"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.Attribution#getProperties",
      "kind": "function",
      "description": "Get an object of all property names and values.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "returns": {
        "types": [
          "Object.<string, *>"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.Attribution#set",
      "kind": "function",
      "description": "Sets a value.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "value",
          "types": [
            "*"
          ]
        }
      ],
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.Attribution#setProperties",
      "kind": "function",
      "description": "Sets a collection of key-value pairs.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "values",
          "types": [
            "Object.<string, *>"
          ]
        }
      ],
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.Attribution#unbind",
      "kind": "function",
      "description": "Removes a binding. Unbinding will set the unbound property to the current\n    value. The object will not be notified, as the value has not changed.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.Attribution#unbindAll",
      "kind": "function",
      "description": "Removes all bindings.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.Attribution#changed",
      "kind": "function",
      "description": "Increases the revision counter and disptches a 'change' event.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.Attribution#getRevision",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.Attribution#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.Attribution#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.Attribution#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.Attribution#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.\nNote that using the {@link ol.Observable.unByKey} static function is to\nbe preferred.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "key",
          "types": [
            "goog.events.Key"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.FullScreen#getMap",
      "kind": "function",
      "description": "Get the map associated with this control.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/control/control.js",
      "returns": {
        "types": [
          "ol.Map"
        ]
      },
      "provides": [
        "ol.control.Control"
      ]
    },
    {
      "name": "ol.control.FullScreen#setMap",
      "kind": "function",
      "description": "Remove the control from its current map and attach it to the new map.\nSubclasses may set up event handlers to get notified about changes to\nthe map here.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/control/control.js",
      "params": [
        {
          "name": "map",
          "types": [
            "ol.Map"
          ]
        }
      ],
      "provides": [
        "ol.control.Control"
      ]
    },
    {
      "name": "ol.control.FullScreen#setTarget",
      "kind": "function",
      "description": "This function is used to set a target element for the control. It has no\neffect if it is called after the control has been added to the map (i.e.\nafter `setMap` is called on the control). If no `target` is set in the\noptions passed to the control constructor and if `setTarget` is not called\nthen the control is added to the map's overlay container.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/control/control.js",
      "params": [
        {
          "name": "target",
          "types": [
            "Element",
            "string"
          ]
        }
      ],
      "provides": [
        "ol.control.Control"
      ]
    },
    {
      "name": "ol.control.FullScreen#bindTo",
      "kind": "function",
      "description": "The bindTo method allows you to set up a two-way binding between a\n`source` and `target` object. The method returns an object with a\n`transform` method that you can use to provide `from` and `to`\nfunctions to transform values on the way from the source to the\ntarget and on the way back.\n\nFor example, if you had two map views (sourceView and targetView)\nand you wanted the target view to have double the resolution of the\nsource view, you could transform the resolution on the way to and\nfrom the target with the following:\n\n    sourceView.bindTo('resolution', targetView)\n      .transform(\n        function(sourceResolution) {\n          // from sourceView.resolution to targetView.resolution\n          return 2 * sourceResolution;\n        },\n        function(targetResolution) {\n          // from targetView.resolution to sourceView.resolution\n          return targetResolution / 2;\n        }\n      );",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "target",
          "types": [
            "ol.Object"
          ]
        },
        {
          "name": "opt_targetKey",
          "types": [
            "string"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.ObjectAccessor"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.FullScreen#get",
      "kind": "function",
      "description": "Gets a value.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "*"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.FullScreen#getKeys",
      "kind": "function",
      "description": "Get a list of object property names.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "returns": {
        "types": [
          "Array.<string>"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.FullScreen#getProperties",
      "kind": "function",
      "description": "Get an object of all property names and values.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "returns": {
        "types": [
          "Object.<string, *>"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.FullScreen#set",
      "kind": "function",
      "description": "Sets a value.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "value",
          "types": [
            "*"
          ]
        }
      ],
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.FullScreen#setProperties",
      "kind": "function",
      "description": "Sets a collection of key-value pairs.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "values",
          "types": [
            "Object.<string, *>"
          ]
        }
      ],
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.FullScreen#unbind",
      "kind": "function",
      "description": "Removes a binding. Unbinding will set the unbound property to the current\n    value. The object will not be notified, as the value has not changed.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.FullScreen#unbindAll",
      "kind": "function",
      "description": "Removes all bindings.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.FullScreen#changed",
      "kind": "function",
      "description": "Increases the revision counter and disptches a 'change' event.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.FullScreen#getRevision",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.FullScreen#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.FullScreen#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.FullScreen#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.FullScreen#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.\nNote that using the {@link ol.Observable.unByKey} static function is to\nbe preferred.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "key",
          "types": [
            "goog.events.Key"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.MousePosition#getMap",
      "kind": "function",
      "description": "Get the map associated with this control.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/control/control.js",
      "returns": {
        "types": [
          "ol.Map"
        ]
      },
      "provides": [
        "ol.control.Control"
      ]
    },
    {
      "name": "ol.control.MousePosition#setTarget",
      "kind": "function",
      "description": "This function is used to set a target element for the control. It has no\neffect if it is called after the control has been added to the map (i.e.\nafter `setMap` is called on the control). If no `target` is set in the\noptions passed to the control constructor and if `setTarget` is not called\nthen the control is added to the map's overlay container.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/control/control.js",
      "params": [
        {
          "name": "target",
          "types": [
            "Element",
            "string"
          ]
        }
      ],
      "provides": [
        "ol.control.Control"
      ]
    },
    {
      "name": "ol.control.MousePosition#bindTo",
      "kind": "function",
      "description": "The bindTo method allows you to set up a two-way binding between a\n`source` and `target` object. The method returns an object with a\n`transform` method that you can use to provide `from` and `to`\nfunctions to transform values on the way from the source to the\ntarget and on the way back.\n\nFor example, if you had two map views (sourceView and targetView)\nand you wanted the target view to have double the resolution of the\nsource view, you could transform the resolution on the way to and\nfrom the target with the following:\n\n    sourceView.bindTo('resolution', targetView)\n      .transform(\n        function(sourceResolution) {\n          // from sourceView.resolution to targetView.resolution\n          return 2 * sourceResolution;\n        },\n        function(targetResolution) {\n          // from targetView.resolution to sourceView.resolution\n          return targetResolution / 2;\n        }\n      );",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "target",
          "types": [
            "ol.Object"
          ]
        },
        {
          "name": "opt_targetKey",
          "types": [
            "string"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.ObjectAccessor"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.MousePosition#get",
      "kind": "function",
      "description": "Gets a value.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "*"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.MousePosition#getKeys",
      "kind": "function",
      "description": "Get a list of object property names.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "returns": {
        "types": [
          "Array.<string>"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.MousePosition#getProperties",
      "kind": "function",
      "description": "Get an object of all property names and values.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "returns": {
        "types": [
          "Object.<string, *>"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.MousePosition#set",
      "kind": "function",
      "description": "Sets a value.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "value",
          "types": [
            "*"
          ]
        }
      ],
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.MousePosition#setProperties",
      "kind": "function",
      "description": "Sets a collection of key-value pairs.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "values",
          "types": [
            "Object.<string, *>"
          ]
        }
      ],
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.MousePosition#unbind",
      "kind": "function",
      "description": "Removes a binding. Unbinding will set the unbound property to the current\n    value. The object will not be notified, as the value has not changed.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.MousePosition#unbindAll",
      "kind": "function",
      "description": "Removes all bindings.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.MousePosition#changed",
      "kind": "function",
      "description": "Increases the revision counter and disptches a 'change' event.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.MousePosition#getRevision",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.MousePosition#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.MousePosition#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.MousePosition#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.MousePosition#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.\nNote that using the {@link ol.Observable.unByKey} static function is to\nbe preferred.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "key",
          "types": [
            "goog.events.Key"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.OverviewMap#getMap",
      "kind": "function",
      "description": "Get the map associated with this control.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/control/control.js",
      "returns": {
        "types": [
          "ol.Map"
        ]
      },
      "provides": [
        "ol.control.Control"
      ]
    },
    {
      "name": "ol.control.OverviewMap#setTarget",
      "kind": "function",
      "description": "This function is used to set a target element for the control. It has no\neffect if it is called after the control has been added to the map (i.e.\nafter `setMap` is called on the control). If no `target` is set in the\noptions passed to the control constructor and if `setTarget` is not called\nthen the control is added to the map's overlay container.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/control/control.js",
      "params": [
        {
          "name": "target",
          "types": [
            "Element",
            "string"
          ]
        }
      ],
      "provides": [
        "ol.control.Control"
      ]
    },
    {
      "name": "ol.control.OverviewMap#bindTo",
      "kind": "function",
      "description": "The bindTo method allows you to set up a two-way binding between a\n`source` and `target` object. The method returns an object with a\n`transform` method that you can use to provide `from` and `to`\nfunctions to transform values on the way from the source to the\ntarget and on the way back.\n\nFor example, if you had two map views (sourceView and targetView)\nand you wanted the target view to have double the resolution of the\nsource view, you could transform the resolution on the way to and\nfrom the target with the following:\n\n    sourceView.bindTo('resolution', targetView)\n      .transform(\n        function(sourceResolution) {\n          // from sourceView.resolution to targetView.resolution\n          return 2 * sourceResolution;\n        },\n        function(targetResolution) {\n          // from targetView.resolution to sourceView.resolution\n          return targetResolution / 2;\n        }\n      );",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "target",
          "types": [
            "ol.Object"
          ]
        },
        {
          "name": "opt_targetKey",
          "types": [
            "string"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.ObjectAccessor"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.OverviewMap#get",
      "kind": "function",
      "description": "Gets a value.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "*"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.OverviewMap#getKeys",
      "kind": "function",
      "description": "Get a list of object property names.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "returns": {
        "types": [
          "Array.<string>"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.OverviewMap#getProperties",
      "kind": "function",
      "description": "Get an object of all property names and values.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "returns": {
        "types": [
          "Object.<string, *>"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.OverviewMap#set",
      "kind": "function",
      "description": "Sets a value.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "value",
          "types": [
            "*"
          ]
        }
      ],
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.OverviewMap#setProperties",
      "kind": "function",
      "description": "Sets a collection of key-value pairs.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "values",
          "types": [
            "Object.<string, *>"
          ]
        }
      ],
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.OverviewMap#unbind",
      "kind": "function",
      "description": "Removes a binding. Unbinding will set the unbound property to the current\n    value. The object will not be notified, as the value has not changed.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.OverviewMap#unbindAll",
      "kind": "function",
      "description": "Removes all bindings.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.OverviewMap#changed",
      "kind": "function",
      "description": "Increases the revision counter and disptches a 'change' event.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.OverviewMap#getRevision",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.OverviewMap#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.OverviewMap#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.OverviewMap#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.OverviewMap#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.\nNote that using the {@link ol.Observable.unByKey} static function is to\nbe preferred.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "key",
          "types": [
            "goog.events.Key"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.Rotate#getMap",
      "kind": "function",
      "description": "Get the map associated with this control.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/control/control.js",
      "returns": {
        "types": [
          "ol.Map"
        ]
      },
      "provides": [
        "ol.control.Control"
      ]
    },
    {
      "name": "ol.control.Rotate#setMap",
      "kind": "function",
      "description": "Remove the control from its current map and attach it to the new map.\nSubclasses may set up event handlers to get notified about changes to\nthe map here.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/control/control.js",
      "params": [
        {
          "name": "map",
          "types": [
            "ol.Map"
          ]
        }
      ],
      "provides": [
        "ol.control.Control"
      ]
    },
    {
      "name": "ol.control.Rotate#setTarget",
      "kind": "function",
      "description": "This function is used to set a target element for the control. It has no\neffect if it is called after the control has been added to the map (i.e.\nafter `setMap` is called on the control). If no `target` is set in the\noptions passed to the control constructor and if `setTarget` is not called\nthen the control is added to the map's overlay container.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/control/control.js",
      "params": [
        {
          "name": "target",
          "types": [
            "Element",
            "string"
          ]
        }
      ],
      "provides": [
        "ol.control.Control"
      ]
    },
    {
      "name": "ol.control.Rotate#bindTo",
      "kind": "function",
      "description": "The bindTo method allows you to set up a two-way binding between a\n`source` and `target` object. The method returns an object with a\n`transform` method that you can use to provide `from` and `to`\nfunctions to transform values on the way from the source to the\ntarget and on the way back.\n\nFor example, if you had two map views (sourceView and targetView)\nand you wanted the target view to have double the resolution of the\nsource view, you could transform the resolution on the way to and\nfrom the target with the following:\n\n    sourceView.bindTo('resolution', targetView)\n      .transform(\n        function(sourceResolution) {\n          // from sourceView.resolution to targetView.resolution\n          return 2 * sourceResolution;\n        },\n        function(targetResolution) {\n          // from targetView.resolution to sourceView.resolution\n          return targetResolution / 2;\n        }\n      );",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "target",
          "types": [
            "ol.Object"
          ]
        },
        {
          "name": "opt_targetKey",
          "types": [
            "string"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.ObjectAccessor"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.Rotate#get",
      "kind": "function",
      "description": "Gets a value.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "*"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.Rotate#getKeys",
      "kind": "function",
      "description": "Get a list of object property names.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "returns": {
        "types": [
          "Array.<string>"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.Rotate#getProperties",
      "kind": "function",
      "description": "Get an object of all property names and values.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "returns": {
        "types": [
          "Object.<string, *>"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.Rotate#set",
      "kind": "function",
      "description": "Sets a value.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "value",
          "types": [
            "*"
          ]
        }
      ],
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.Rotate#setProperties",
      "kind": "function",
      "description": "Sets a collection of key-value pairs.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "values",
          "types": [
            "Object.<string, *>"
          ]
        }
      ],
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.Rotate#unbind",
      "kind": "function",
      "description": "Removes a binding. Unbinding will set the unbound property to the current\n    value. The object will not be notified, as the value has not changed.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.Rotate#unbindAll",
      "kind": "function",
      "description": "Removes all bindings.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.Rotate#changed",
      "kind": "function",
      "description": "Increases the revision counter and disptches a 'change' event.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.Rotate#getRevision",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.Rotate#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.Rotate#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.Rotate#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.Rotate#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.\nNote that using the {@link ol.Observable.unByKey} static function is to\nbe preferred.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "key",
          "types": [
            "goog.events.Key"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.ScaleLine#getMap",
      "kind": "function",
      "description": "Get the map associated with this control.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/control/control.js",
      "returns": {
        "types": [
          "ol.Map"
        ]
      },
      "provides": [
        "ol.control.Control"
      ]
    },
    {
      "name": "ol.control.ScaleLine#setMap",
      "kind": "function",
      "description": "Remove the control from its current map and attach it to the new map.\nSubclasses may set up event handlers to get notified about changes to\nthe map here.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/control/control.js",
      "params": [
        {
          "name": "map",
          "types": [
            "ol.Map"
          ]
        }
      ],
      "provides": [
        "ol.control.Control"
      ]
    },
    {
      "name": "ol.control.ScaleLine#setTarget",
      "kind": "function",
      "description": "This function is used to set a target element for the control. It has no\neffect if it is called after the control has been added to the map (i.e.\nafter `setMap` is called on the control). If no `target` is set in the\noptions passed to the control constructor and if `setTarget` is not called\nthen the control is added to the map's overlay container.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/control/control.js",
      "params": [
        {
          "name": "target",
          "types": [
            "Element",
            "string"
          ]
        }
      ],
      "provides": [
        "ol.control.Control"
      ]
    },
    {
      "name": "ol.control.ScaleLine#bindTo",
      "kind": "function",
      "description": "The bindTo method allows you to set up a two-way binding between a\n`source` and `target` object. The method returns an object with a\n`transform` method that you can use to provide `from` and `to`\nfunctions to transform values on the way from the source to the\ntarget and on the way back.\n\nFor example, if you had two map views (sourceView and targetView)\nand you wanted the target view to have double the resolution of the\nsource view, you could transform the resolution on the way to and\nfrom the target with the following:\n\n    sourceView.bindTo('resolution', targetView)\n      .transform(\n        function(sourceResolution) {\n          // from sourceView.resolution to targetView.resolution\n          return 2 * sourceResolution;\n        },\n        function(targetResolution) {\n          // from targetView.resolution to sourceView.resolution\n          return targetResolution / 2;\n        }\n      );",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "target",
          "types": [
            "ol.Object"
          ]
        },
        {
          "name": "opt_targetKey",
          "types": [
            "string"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.ObjectAccessor"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.ScaleLine#get",
      "kind": "function",
      "description": "Gets a value.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "*"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.ScaleLine#getKeys",
      "kind": "function",
      "description": "Get a list of object property names.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "returns": {
        "types": [
          "Array.<string>"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.ScaleLine#getProperties",
      "kind": "function",
      "description": "Get an object of all property names and values.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "returns": {
        "types": [
          "Object.<string, *>"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.ScaleLine#set",
      "kind": "function",
      "description": "Sets a value.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "value",
          "types": [
            "*"
          ]
        }
      ],
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.ScaleLine#setProperties",
      "kind": "function",
      "description": "Sets a collection of key-value pairs.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "values",
          "types": [
            "Object.<string, *>"
          ]
        }
      ],
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.ScaleLine#unbind",
      "kind": "function",
      "description": "Removes a binding. Unbinding will set the unbound property to the current\n    value. The object will not be notified, as the value has not changed.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.ScaleLine#unbindAll",
      "kind": "function",
      "description": "Removes all bindings.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.ScaleLine#changed",
      "kind": "function",
      "description": "Increases the revision counter and disptches a 'change' event.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.ScaleLine#getRevision",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.ScaleLine#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.ScaleLine#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.ScaleLine#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.ScaleLine#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.\nNote that using the {@link ol.Observable.unByKey} static function is to\nbe preferred.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "key",
          "types": [
            "goog.events.Key"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.Zoom#getMap",
      "kind": "function",
      "description": "Get the map associated with this control.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/control/control.js",
      "returns": {
        "types": [
          "ol.Map"
        ]
      },
      "provides": [
        "ol.control.Control"
      ]
    },
    {
      "name": "ol.control.Zoom#setMap",
      "kind": "function",
      "description": "Remove the control from its current map and attach it to the new map.\nSubclasses may set up event handlers to get notified about changes to\nthe map here.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/control/control.js",
      "params": [
        {
          "name": "map",
          "types": [
            "ol.Map"
          ]
        }
      ],
      "provides": [
        "ol.control.Control"
      ]
    },
    {
      "name": "ol.control.Zoom#setTarget",
      "kind": "function",
      "description": "This function is used to set a target element for the control. It has no\neffect if it is called after the control has been added to the map (i.e.\nafter `setMap` is called on the control). If no `target` is set in the\noptions passed to the control constructor and if `setTarget` is not called\nthen the control is added to the map's overlay container.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/control/control.js",
      "params": [
        {
          "name": "target",
          "types": [
            "Element",
            "string"
          ]
        }
      ],
      "provides": [
        "ol.control.Control"
      ]
    },
    {
      "name": "ol.control.Zoom#bindTo",
      "kind": "function",
      "description": "The bindTo method allows you to set up a two-way binding between a\n`source` and `target` object. The method returns an object with a\n`transform` method that you can use to provide `from` and `to`\nfunctions to transform values on the way from the source to the\ntarget and on the way back.\n\nFor example, if you had two map views (sourceView and targetView)\nand you wanted the target view to have double the resolution of the\nsource view, you could transform the resolution on the way to and\nfrom the target with the following:\n\n    sourceView.bindTo('resolution', targetView)\n      .transform(\n        function(sourceResolution) {\n          // from sourceView.resolution to targetView.resolution\n          return 2 * sourceResolution;\n        },\n        function(targetResolution) {\n          // from targetView.resolution to sourceView.resolution\n          return targetResolution / 2;\n        }\n      );",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "target",
          "types": [
            "ol.Object"
          ]
        },
        {
          "name": "opt_targetKey",
          "types": [
            "string"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.ObjectAccessor"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.Zoom#get",
      "kind": "function",
      "description": "Gets a value.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "*"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.Zoom#getKeys",
      "kind": "function",
      "description": "Get a list of object property names.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "returns": {
        "types": [
          "Array.<string>"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.Zoom#getProperties",
      "kind": "function",
      "description": "Get an object of all property names and values.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "returns": {
        "types": [
          "Object.<string, *>"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.Zoom#set",
      "kind": "function",
      "description": "Sets a value.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "value",
          "types": [
            "*"
          ]
        }
      ],
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.Zoom#setProperties",
      "kind": "function",
      "description": "Sets a collection of key-value pairs.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "values",
          "types": [
            "Object.<string, *>"
          ]
        }
      ],
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.Zoom#unbind",
      "kind": "function",
      "description": "Removes a binding. Unbinding will set the unbound property to the current\n    value. The object will not be notified, as the value has not changed.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.Zoom#unbindAll",
      "kind": "function",
      "description": "Removes all bindings.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.Zoom#changed",
      "kind": "function",
      "description": "Increases the revision counter and disptches a 'change' event.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.Zoom#getRevision",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.Zoom#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.Zoom#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.Zoom#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.Zoom#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.\nNote that using the {@link ol.Observable.unByKey} static function is to\nbe preferred.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "key",
          "types": [
            "goog.events.Key"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.ZoomSlider#getMap",
      "kind": "function",
      "description": "Get the map associated with this control.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/control/control.js",
      "returns": {
        "types": [
          "ol.Map"
        ]
      },
      "provides": [
        "ol.control.Control"
      ]
    },
    {
      "name": "ol.control.ZoomSlider#setTarget",
      "kind": "function",
      "description": "This function is used to set a target element for the control. It has no\neffect if it is called after the control has been added to the map (i.e.\nafter `setMap` is called on the control). If no `target` is set in the\noptions passed to the control constructor and if `setTarget` is not called\nthen the control is added to the map's overlay container.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/control/control.js",
      "params": [
        {
          "name": "target",
          "types": [
            "Element",
            "string"
          ]
        }
      ],
      "provides": [
        "ol.control.Control"
      ]
    },
    {
      "name": "ol.control.ZoomSlider#bindTo",
      "kind": "function",
      "description": "The bindTo method allows you to set up a two-way binding between a\n`source` and `target` object. The method returns an object with a\n`transform` method that you can use to provide `from` and `to`\nfunctions to transform values on the way from the source to the\ntarget and on the way back.\n\nFor example, if you had two map views (sourceView and targetView)\nand you wanted the target view to have double the resolution of the\nsource view, you could transform the resolution on the way to and\nfrom the target with the following:\n\n    sourceView.bindTo('resolution', targetView)\n      .transform(\n        function(sourceResolution) {\n          // from sourceView.resolution to targetView.resolution\n          return 2 * sourceResolution;\n        },\n        function(targetResolution) {\n          // from targetView.resolution to sourceView.resolution\n          return targetResolution / 2;\n        }\n      );",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "target",
          "types": [
            "ol.Object"
          ]
        },
        {
          "name": "opt_targetKey",
          "types": [
            "string"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.ObjectAccessor"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.ZoomSlider#get",
      "kind": "function",
      "description": "Gets a value.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "*"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.ZoomSlider#getKeys",
      "kind": "function",
      "description": "Get a list of object property names.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "returns": {
        "types": [
          "Array.<string>"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.ZoomSlider#getProperties",
      "kind": "function",
      "description": "Get an object of all property names and values.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "returns": {
        "types": [
          "Object.<string, *>"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.ZoomSlider#set",
      "kind": "function",
      "description": "Sets a value.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "value",
          "types": [
            "*"
          ]
        }
      ],
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.ZoomSlider#setProperties",
      "kind": "function",
      "description": "Sets a collection of key-value pairs.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "values",
          "types": [
            "Object.<string, *>"
          ]
        }
      ],
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.ZoomSlider#unbind",
      "kind": "function",
      "description": "Removes a binding. Unbinding will set the unbound property to the current\n    value. The object will not be notified, as the value has not changed.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.ZoomSlider#unbindAll",
      "kind": "function",
      "description": "Removes all bindings.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.ZoomSlider#changed",
      "kind": "function",
      "description": "Increases the revision counter and disptches a 'change' event.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.ZoomSlider#getRevision",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.ZoomSlider#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.ZoomSlider#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.ZoomSlider#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.ZoomSlider#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.\nNote that using the {@link ol.Observable.unByKey} static function is to\nbe preferred.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "key",
          "types": [
            "goog.events.Key"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.ZoomToExtent#getMap",
      "kind": "function",
      "description": "Get the map associated with this control.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/control/control.js",
      "returns": {
        "types": [
          "ol.Map"
        ]
      },
      "provides": [
        "ol.control.Control"
      ]
    },
    {
      "name": "ol.control.ZoomToExtent#setMap",
      "kind": "function",
      "description": "Remove the control from its current map and attach it to the new map.\nSubclasses may set up event handlers to get notified about changes to\nthe map here.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/control/control.js",
      "params": [
        {
          "name": "map",
          "types": [
            "ol.Map"
          ]
        }
      ],
      "provides": [
        "ol.control.Control"
      ]
    },
    {
      "name": "ol.control.ZoomToExtent#setTarget",
      "kind": "function",
      "description": "This function is used to set a target element for the control. It has no\neffect if it is called after the control has been added to the map (i.e.\nafter `setMap` is called on the control). If no `target` is set in the\noptions passed to the control constructor and if `setTarget` is not called\nthen the control is added to the map's overlay container.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/control/control.js",
      "params": [
        {
          "name": "target",
          "types": [
            "Element",
            "string"
          ]
        }
      ],
      "provides": [
        "ol.control.Control"
      ]
    },
    {
      "name": "ol.control.ZoomToExtent#bindTo",
      "kind": "function",
      "description": "The bindTo method allows you to set up a two-way binding between a\n`source` and `target` object. The method returns an object with a\n`transform` method that you can use to provide `from` and `to`\nfunctions to transform values on the way from the source to the\ntarget and on the way back.\n\nFor example, if you had two map views (sourceView and targetView)\nand you wanted the target view to have double the resolution of the\nsource view, you could transform the resolution on the way to and\nfrom the target with the following:\n\n    sourceView.bindTo('resolution', targetView)\n      .transform(\n        function(sourceResolution) {\n          // from sourceView.resolution to targetView.resolution\n          return 2 * sourceResolution;\n        },\n        function(targetResolution) {\n          // from targetView.resolution to sourceView.resolution\n          return targetResolution / 2;\n        }\n      );",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "target",
          "types": [
            "ol.Object"
          ]
        },
        {
          "name": "opt_targetKey",
          "types": [
            "string"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.ObjectAccessor"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.ZoomToExtent#get",
      "kind": "function",
      "description": "Gets a value.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "*"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.ZoomToExtent#getKeys",
      "kind": "function",
      "description": "Get a list of object property names.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "returns": {
        "types": [
          "Array.<string>"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.ZoomToExtent#getProperties",
      "kind": "function",
      "description": "Get an object of all property names and values.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "returns": {
        "types": [
          "Object.<string, *>"
        ]
      },
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.ZoomToExtent#set",
      "kind": "function",
      "description": "Sets a value.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "value",
          "types": [
            "*"
          ]
        }
      ],
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.ZoomToExtent#setProperties",
      "kind": "function",
      "description": "Sets a collection of key-value pairs.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "values",
          "types": [
            "Object.<string, *>"
          ]
        }
      ],
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.ZoomToExtent#unbind",
      "kind": "function",
      "description": "Removes a binding. Unbinding will set the unbound property to the current\n    value. The object will not be notified, as the value has not changed.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.ZoomToExtent#unbindAll",
      "kind": "function",
      "description": "Removes all bindings.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.ZoomToExtent#changed",
      "kind": "function",
      "description": "Increases the revision counter and disptches a 'change' event.",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.ZoomToExtent#getRevision",
      "kind": "function",
      "stability": "experimental",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.ZoomToExtent#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.ZoomToExtent#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "goog.events.Key"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.ZoomToExtent#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.ZoomToExtent#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.\nNote that using the {@link ol.Observable.unByKey} static function is to\nbe preferred.",
      "stability": "stable",
      "path": "/Users/ahocevar/projects/ol3/src/ol/observable.js",
      "params": [
        {
          "name": "key",
          "types": [
            "goog.events.Key"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    }
  ],
  "defines": [
    {
      "name": "ol.ASSUME_TOUCH",
      "description": "Assume touch.  Default is `false`.",
      "path": "/Users/ahocevar/projects/ol3/src/ol/ol.js",
      "default": false
    },
    {
      "name": "ol.ENABLE_CANVAS",
      "description": "Enable the Canvas renderer.  Default is `true`. Setting\n    this to false at compile time in advanced mode removes all code\n    supporting the Canvas renderer from the build.",
      "path": "/Users/ahocevar/projects/ol3/src/ol/ol.js",
      "default": true
    },
    {
      "name": "ol.ENABLE_DOM",
      "description": "Enable the DOM renderer (used as a fallback where Canvas is\n    not available).  Default is `true`. Setting this to false at compile time\n    in advanced mode removes all code supporting the DOM renderer from the\n    build.",
      "path": "/Users/ahocevar/projects/ol3/src/ol/ol.js",
      "default": true
    },
    {
      "name": "ol.ENABLE_IMAGE",
      "description": "Enable rendering of ol.layer.Image based layers.  Default\n    is `true`. Setting this to false at compile time in advanced mode removes\n    all code supporting Image layers from the build.",
      "path": "/Users/ahocevar/projects/ol3/src/ol/ol.js",
      "default": true
    },
    {
      "name": "ol.ENABLE_NAMED_COLORS",
      "description": "Enable Closure named colors (`goog.color.names`).\n    Enabling these colors adds about 3KB uncompressed / 1.5KB compressed to\n    the final build size.  Default is `false`. This setting has no effect\n    with Canvas renderer, which uses its own names, whether this is true or\n    false.",
      "path": "/Users/ahocevar/projects/ol3/src/ol/ol.js",
      "default": false
    },
    {
      "name": "ol.ENABLE_PROJ4JS",
      "description": "Enable integration with the Proj4js library.  Default is\n    `true`.",
      "path": "/Users/ahocevar/projects/ol3/src/ol/ol.js",
      "default": true
    },
    {
      "name": "ol.ENABLE_TILE",
      "description": "Enable rendering of ol.layer.Tile based layers.  Default is\n    `true`. Setting this to false at compile time in advanced mode removes\n    all code supporting Tile layers from the build.",
      "path": "/Users/ahocevar/projects/ol3/src/ol/ol.js",
      "default": true
    },
    {
      "name": "ol.ENABLE_VECTOR",
      "description": "Enable rendering of ol.layer.Vector based layers.  Default\n    is `true`. Setting this to false at compile time in advanced mode removes\n    all code supporting Vector layers from the build.",
      "path": "/Users/ahocevar/projects/ol3/src/ol/ol.js",
      "default": true
    },
    {
      "name": "ol.ENABLE_WEBGL",
      "description": "Enable the WebGL renderer.  Default is `true`. Setting\n    this to false at compile time in advanced mode removes all code\n    supporting the WebGL renderer from the build.",
      "path": "/Users/ahocevar/projects/ol3/src/ol/ol.js",
      "default": true
    },
    {
      "name": "ol.LEGACY_IE_SUPPORT",
      "description": "Support legacy IE (7-8).  Default is `false`.\n    If set to `true`, `goog.array.ASSUME_NATIVE_FUNCTIONS` must be set\n    to `false` because legacy IE do not support ECMAScript 5 array functions.",
      "path": "/Users/ahocevar/projects/ol3/src/ol/ol.js",
      "default": false
    }
  ],
  "typedefs": [
    {
      "name": "olx.AttributionOptions",
      "types": [
        "{html: (string)}"
      ]
    },
    {
      "name": "olx.DeviceOrientationOptions",
      "types": [
        "{tracking: (boolean|undefined)}"
      ]
    },
    {
      "name": "olx.GeolocationOptions",
      "types": [
        "{tracking: (boolean|undefined), trackingOptions: (GeolocationPositionOptions|undefined), projection: (ol.proj.ProjectionLike)}"
      ]
    },
    {
      "name": "olx.LogoOptions",
      "types": [
        "{href: (string), src: (string)}"
      ]
    },
    {
      "name": "olx.GraticuleOptions",
      "types": [
        "{map: (ol.Map|undefined), maxLines: (number|undefined), strokeStyle: (ol.style.Stroke|undefined), targetSize: (number|undefined)}"
      ]
    },
    {
      "name": "olx.interaction.InteractionOptions",
      "types": [
        "{handleEvent: (Function)}"
      ]
    },
    {
      "name": "olx.MapOptions",
      "types": [
        "{controls: (ol.Collection.<ol.control.Control>|Array.<ol.control.Control>|undefined), pixelRatio: (number|undefined), interactions: (ol.Collection.<ol.interaction.Interaction>|Array.<ol.interaction.Interaction>|undefined), keyboardEventTarget: (Element|Document|string|undefined), layers: (Array.<ol.layer.Base>|ol.Collection.<ol.layer.Base>|undefined), loadTilesWhileAnimating: (boolean|undefined), loadTilesWhileInteracting: (boolean|undefined), logo: (boolean|string|olx.LogoOptions|undefined), overlays: (ol.Collection.<ol.Overlay>|Array.<ol.Overlay>|undefined), renderer: (ol.RendererType|Array.<(ol.RendererType|string)>|string|undefined), target: (Element|string|undefined), view: (ol.View|undefined)}"
      ]
    },
    {
      "name": "olx.OverlayOptions",
      "types": [
        "{element: (Element|undefined), offset: (Array.<number>|undefined), position: (ol.Coordinate|undefined), positioning: (ol.OverlayPositioning|string|undefined), stopEvent: (boolean|undefined), insertFirst: (boolean|undefined)}"
      ]
    },
    {
      "name": "olx.ProjectionOptions",
      "types": [
        "{code: (string), units: (ol.proj.Units|string), extent: (ol.Extent|undefined), axisOrientation: (string|undefined), global: (boolean|undefined), worldExtent: (ol.Extent|undefined)}"
      ]
    },
    {
      "name": "olx.ViewOptions",
      "types": [
        "{center: (ol.Coordinate|undefined), constrainRotation: (boolean|number|undefined), enableRotation: (boolean|undefined), extent: (ol.Extent|undefined), maxResolution: (number|undefined), minResolution: (number|undefined), maxZoom: (number|undefined), minZoom: (number|undefined), projection: (ol.proj.ProjectionLike), resolution: (number|undefined), resolutions: (Array.<number>|undefined), rotation: (number|undefined), zoom: (number|undefined), zoomFactor: (number|undefined), undefined: (Object)}"
      ]
    },
    {
      "name": "olx.animation.BounceOptions",
      "types": [
        "{resolution: (number), start: (number|undefined), duration: (number|undefined), easing: (Function)}"
      ]
    },
    {
      "name": "olx.animation.PanOptions",
      "types": [
        "{source: (ol.Coordinate), start: (number|undefined), duration: (number|undefined), easing: (Function)}"
      ]
    },
    {
      "name": "olx.animation.RotateOptions",
      "types": [
        "{rotation: (number|undefined), anchor: (ol.Coordinate|undefined), start: (number|undefined), duration: (number|undefined), easing: (Function)}"
      ]
    },
    {
      "name": "olx.animation.ZoomOptions",
      "types": [
        "{resolution: (number), start: (number|undefined), duration: (number|undefined), easing: (Function), undefined: (Object)}"
      ]
    },
    {
      "name": "olx.control.AttributionOptions",
      "types": [
        "{className: (string|undefined), target: (Element|undefined), collapsible: (boolean|undefined), collapsed: (boolean|undefined), tipLabel: (string|undefined), label: (string|Node|undefined), collapseLabel: (string|Node|undefined), render: (Function|undefined)}"
      ]
    },
    {
      "name": "olx.control.ControlOptions",
      "types": [
        "{element: (Element|undefined), render: (Function|undefined), target: (Element|string|undefined)}"
      ]
    },
    {
      "name": "olx.control.DefaultsOptions",
      "types": [
        "{attribution: (boolean|undefined), attributionOptions: (olx.control.AttributionOptions|undefined), rotate: (boolean|undefined), rotateOptions: (olx.control.RotateOptions|undefined), zoom: (boolean|undefined), zoomOptions: (olx.control.ZoomOptions|undefined)}"
      ]
    },
    {
      "name": "olx.control.FullScreenOptions",
      "types": [
        "{className: (string|undefined), label: (string|Node|undefined), labelActive: (string|Node|undefined), tipLabel: (string|undefined), keys: (boolean|undefined), target: (Element|undefined)}"
      ]
    },
    {
      "name": "olx.control.MousePositionOptions",
      "types": [
        "{className: (string|undefined), coordinateFormat: (ol.CoordinateFormatType|undefined), projection: (ol.proj.ProjectionLike), render: (Function|undefined), target: (Element|undefined), undefinedHTML: (string|undefined)}"
      ]
    },
    {
      "name": "olx.control.OverviewMapOptions",
      "types": [
        "{collapsed: (boolean|undefined), collapseLabel: (string|Node|undefined), collapsible: (boolean|undefined), label: (string|Node|undefined), layers: (!Array.<ol.layer.Layer>|ol.Collection|undefined), render: (Function|undefined), target: (Element|undefined), tipLabel: (string|undefined)}"
      ]
    },
    {
      "name": "olx.control.ScaleLineOptions",
      "types": [
        "{className: (string|undefined), minWidth: (number|undefined), render: (Function|undefined), target: (Element|undefined), units: (ol.control.ScaleLineUnits|string|undefined)}"
      ]
    },
    {
      "name": "olx.control.RotateOptions",
      "types": [
        "{className: (string|undefined), label: (string|Node|undefined), tipLabel: (string|undefined), duration: (number|undefined), autoHide: (boolean|undefined), render: (Function|undefined), target: (Element|undefined)}"
      ]
    },
    {
      "name": "olx.control.ZoomOptions",
      "types": [
        "{duration: (number|undefined), className: (string|undefined), zoomInLabel: (string|Node|undefined), zoomOutLabel: (string|Node|undefined), zoomInTipLabel: (string|undefined), zoomOutTipLabel: (string|undefined), delta: (number|undefined), target: (Element|undefined)}"
      ]
    },
    {
      "name": "olx.control.ZoomSliderOptions",
      "types": [
        "{className: (string|undefined), maxResolution: (number|undefined), minResolution: (number|undefined), render: (Function|undefined)}"
      ]
    },
    {
      "name": "olx.control.ZoomToExtentOptions",
      "types": [
        "{className: (string|undefined), target: (Element|undefined), label: (string|Node|undefined), tipLabel: (string|undefined), extent: (ol.Extent|undefined), undefined: (Object)}"
      ]
    },
    {
      "name": "olx.format.ReadOptions",
      "types": [
        "{dataProjection: (ol.proj.ProjectionLike), featureProjection: (ol.proj.ProjectionLike)}"
      ]
    },
    {
      "name": "olx.format.WriteOptions",
      "types": [
        "{dataProjection: (ol.proj.ProjectionLike), featureProjection: (ol.proj.ProjectionLike)}"
      ]
    },
    {
      "name": "olx.format.GeoJSONOptions",
      "types": [
        "{defaultDataProjection: (ol.proj.ProjectionLike), geometryName: (string|undefined)}"
      ]
    },
    {
      "name": "olx.format.PolylineOptions",
      "types": [
        "{factor: (number)}"
      ]
    },
    {
      "name": "olx.format.TopoJSONOptions",
      "types": [
        "{defaultDataProjection: (ol.proj.ProjectionLike)}"
      ]
    },
    {
      "name": "olx.format.IGCOptions",
      "types": [
        "{altitudeMode: (ol.format.IGCZ|undefined)}"
      ]
    },
    {
      "name": "olx.format.KMLOptions",
      "types": [
        "{extractStyles: (boolean|undefined), defaultStyle: (Array.<ol.style.Style>|undefined)}"
      ]
    },
    {
      "name": "olx.format.GMLOptions",
      "types": [
        "{featureNS: (string), featureType: (string), srsName: (string), surface: (boolean|undefined), curve: (boolean|undefined), multiCurve: (boolean|undefined), multiSurface: (boolean|undefined), schemaLocation: (string|undefined)}"
      ]
    },
    {
      "name": "olx.format.GPXOptions",
      "types": [
        "{readExtensions: (Function)}"
      ]
    },
    {
      "name": "olx.format.WFSOptions",
      "types": [
        "{featureNS: (string), featureType: (string), gmlFormat: (ol.format.GMLBase|undefined), schemaLocation: (string|undefined)}"
      ]
    },
    {
      "name": "olx.format.WFSWriteGetFeatureOptions",
      "types": [
        "{featureNS: (string), featurePrefix: (string), featureTypes: (Array.<string>), srsName: (string|undefined), handle: (string|undefined), outputFormat: (string|undefined), maxFeatures: (number|undefined), geometryName: (string|undefined), bbox: (ol.Extent|undefined)}"
      ]
    },
    {
      "name": "olx.format.WFSWriteTransactionOptions",
      "types": [
        "{featureNS: (string), featurePrefix: (string), featureType: (string), srsName: (string|undefined), handle: (string|undefined), nativeElements: (Array.<Object>), gmlOptions: (olx.format.GMLOptions|undefined)}"
      ]
    },
    {
      "name": "olx.format.WKTOptions",
      "types": [
        "{splitCollection: (boolean|undefined), undefined: (Object)}"
      ]
    },
    {
      "name": "olx.interaction.DefaultsOptions",
      "types": [
        "{altShiftDragRotate: (boolean|undefined), doubleClickZoom: (boolean|undefined), keyboard: (boolean|undefined), mouseWheelZoom: (boolean|undefined), shiftDragZoom: (boolean|undefined), dragPan: (boolean|undefined), pinchRotate: (boolean|undefined), pinchZoom: (boolean|undefined), zoomDelta: (number|undefined), zoomDuration: (number|undefined)}"
      ]
    },
    {
      "name": "olx.interaction.DoubleClickZoomOptions",
      "types": [
        "{duration: (number|undefined), delta: (number|undefined)}"
      ]
    },
    {
      "name": "olx.interaction.DragAndDropOptions",
      "types": [
        "{formatConstructors: (Array.<function(new:ol.format.Feature)>|undefined), projection: (ol.proj.ProjectionLike)}"
      ]
    },
    {
      "name": "olx.interaction.DragBoxOptions",
      "types": [
        "{condition: (ol.events.ConditionType|undefined), style: (ol.style.Style)}"
      ]
    },
    {
      "name": "olx.interaction.DragPanOptions",
      "types": [
        "{kinetic: (ol.Kinetic|undefined)}"
      ]
    },
    {
      "name": "olx.interaction.DragRotateAndZoomOptions",
      "types": [
        "{condition: (ol.events.ConditionType|undefined)}"
      ]
    },
    {
      "name": "olx.interaction.DragRotateOptions",
      "types": [
        "{condition: (ol.events.ConditionType|undefined)}"
      ]
    },
    {
      "name": "olx.interaction.DragZoomOptions",
      "types": [
        "{condition: (ol.events.ConditionType|undefined), style: (ol.style.Style)}"
      ]
    },
    {
      "name": "olx.interaction.DrawOptions",
      "types": [
        "{features: (ol.Collection.<ol.Feature>|undefined), source: (ol.source.Vector|undefined), snapTolerance: (number|undefined), type: (ol.geom.GeometryType), minPointsPerRing: (number|undefined), style: (ol.style.Style|Array.<ol.style.Style>|ol.style.StyleFunction|undefined), geometryName: (string|undefined), condition: (ol.events.ConditionType|undefined)}"
      ]
    },
    {
      "name": "olx.interaction.KeyboardPanOptions",
      "types": [
        "{condition: (ol.events.ConditionType|undefined), pixelDelta: (number|undefined)}"
      ]
    },
    {
      "name": "olx.interaction.KeyboardZoomOptions",
      "types": [
        "{duration: (number|undefined), condition: (ol.events.ConditionType|undefined), delta: (number|undefined)}"
      ]
    },
    {
      "name": "olx.interaction.ModifyOptions",
      "types": [
        "{deleteCondition: (ol.events.ConditionType|undefined), pixelTolerance: (number|undefined), style: (ol.style.Style|Array.<ol.style.Style>|ol.style.StyleFunction|undefined), features: (ol.Collection.<ol.Feature>)}"
      ]
    },
    {
      "name": "olx.interaction.MouseWheelZoomOptions",
      "types": [
        "{duration: (number|undefined)}"
      ]
    },
    {
      "name": "olx.interaction.PinchRotateOptions",
      "types": [
        "{threshold: (number|undefined)}"
      ]
    },
    {
      "name": "olx.interaction.PinchZoomOptions",
      "types": [
        "{duration: (number|undefined)}"
      ]
    },
    {
      "name": "olx.interaction.PointerOptions",
      "types": [
        "{handleDownEvent: (Function|undefined), handleDragEvent: (Function|undefined), handleEvent: (Function|undefined), handleMoveEvent: (Function|undefined), handleUpEvent: (Function|undefined)}"
      ]
    },
    {
      "name": "olx.interaction.SelectOptions",
      "types": [
        "{addCondition: (ol.events.ConditionType|undefined), condition: (ol.events.ConditionType|undefined), layers: (Array.<ol.layer.Layer>|Function), style: (ol.style.Style|Array.<ol.style.Style>|ol.style.StyleFunction|undefined), removeCondition: (ol.events.ConditionType|undefined), toggleCondition: (ol.events.ConditionType|undefined), multi: (boolean|undefined), undefined: (Object)}"
      ]
    },
    {
      "name": "olx.layer.BaseOptions",
      "types": [
        "{brightness: (number|undefined), contrast: (number|undefined), hue: (number|undefined), opacity: (number|undefined), saturation: (number|undefined), visible: (boolean|undefined), extent: (ol.Extent|undefined), minResolution: (number|undefined), maxResolution: (number|undefined)}"
      ]
    },
    {
      "name": "olx.layer.LayerOptions",
      "types": [
        "{brightness: (number|undefined), contrast: (number|undefined), hue: (number|undefined), opacity: (number|undefined), saturation: (number|undefined), source: (ol.source.Source|undefined), visible: (boolean|undefined), extent: (ol.Extent|undefined), minResolution: (number|undefined), maxResolution: (number|undefined)}"
      ]
    },
    {
      "name": "olx.layer.GroupOptions",
      "types": [
        "{brightness: (number|undefined), contrast: (number|undefined), hue: (number|undefined), opacity: (number|undefined), saturation: (number|undefined), visible: (boolean|undefined), extent: (ol.Extent|undefined), minResolution: (number|undefined), maxResolution: (number|undefined), layers: (Array.<ol.layer.Base>|ol.Collection.<ol.layer.Base>|undefined)}"
      ]
    },
    {
      "name": "olx.layer.HeatmapOptions",
      "types": [
        "{brightness: (number|undefined), contrast: (number|undefined), hue: (number|undefined), gradient: (Array.<string>|undefined), radius: (number|undefined), blur: (number|undefined), shadow: (number|undefined), weight: (string|Function), extent: (ol.Extent|undefined), minResolution: (number|undefined), maxResolution: (number|undefined), opacity: (number|undefined), saturation: (number|undefined), source: (ol.source.Vector), visible: (boolean|undefined)}"
      ]
    },
    {
      "name": "olx.layer.ImageOptions",
      "types": [
        "{brightness: (number|undefined), contrast: (number|undefined), hue: (number|undefined), opacity: (number|undefined), saturation: (number|undefined), source: (ol.source.Image), visible: (boolean|undefined), extent: (ol.Extent|undefined), minResolution: (number|undefined), maxResolution: (number|undefined)}"
      ]
    },
    {
      "name": "olx.layer.TileOptions",
      "types": [
        "{brightness: (number|undefined), contrast: (number|undefined), hue: (number|undefined), opacity: (number|undefined), preload: (number|undefined), saturation: (number|undefined), source: (ol.source.Tile), visible: (boolean|undefined), extent: (ol.Extent|undefined), minResolution: (number|undefined), maxResolution: (number|undefined), useInterimTilesOnError: (boolean|undefined)}"
      ]
    },
    {
      "name": "olx.layer.VectorOptions",
      "types": [
        "{brightness: (number|undefined), contrast: (number|undefined), renderOrder: (Function), hue: (number|undefined), extent: (ol.Extent|undefined), minResolution: (number|undefined), maxResolution: (number|undefined), opacity: (number|undefined), renderBuffer: (number|undefined), saturation: (number|undefined), source: (ol.source.Vector), style: (ol.style.Style|Array.<ol.style.Style>|ol.style.StyleFunction|undefined), updateWhileAnimating: (boolean|undefined), visible: (boolean|undefined)}"
      ]
    },
    {
      "name": "olx.FeatureOverlayOptions",
      "types": [
        "{features: (Array.<ol.Feature>|ol.Collection.<ol.Feature>|undefined), map: (ol.Map|undefined), style: (ol.style.Style|Array.<ol.style.Style>|ol.style.StyleFunction|undefined), undefined: (Object)}"
      ]
    },
    {
      "name": "olx.source.BingMapsOptions",
      "types": [
        "{culture: (string|undefined), key: (string), imagerySet: (string), maxZoom: (number|undefined), tileLoadFunction: (ol.TileLoadFunctionType|undefined), wrapX: (boolean|undefined)}"
      ]
    },
    {
      "name": "olx.source.ClusterOptions",
      "types": [
        "{attributions: (Array.<ol.Attribution>|undefined), distance: (number|undefined), extent: (ol.Extent|undefined), format: (ol.format.Feature|undefined), logo: (string|undefined), projection: (ol.proj.ProjectionLike), source: (ol.source.Vector)}"
      ]
    },
    {
      "name": "olx.source.FormatVectorOptions",
      "types": [
        "{attributions: (Array.<ol.Attribution>|undefined), format: (ol.format.Feature), logo: (string|olx.LogoOptions|undefined), projection: (ol.proj.ProjectionLike)}"
      ]
    },
    {
      "name": "olx.source.GeoJSONOptions",
      "types": [
        "{attributions: (Array.<ol.Attribution>|undefined), defaultProjection: (ol.proj.ProjectionLike), logo: (string|olx.LogoOptions|undefined), object: (GeoJSONFeature|GeoJSONFeatureCollection|undefined), projection: (ol.proj.ProjectionLike), text: (string|undefined), url: (string|undefined), urls: (Array.<string>|undefined)}"
      ]
    },
    {
      "name": "olx.source.GPXOptions",
      "types": [
        "{attributions: (Array.<ol.Attribution>|undefined), doc: (Document|undefined), logo: (string|olx.LogoOptions|undefined), node: (Node|undefined), projection: (ol.proj.ProjectionLike), text: (string|undefined), url: (string|undefined), urls: (Array.<string>|undefined)}"
      ]
    },
    {
      "name": "olx.source.TileUTFGridOptions",
      "types": [
        "{preemptive: (boolean|undefined), url: (string)}"
      ]
    },
    {
      "name": "olx.source.TileImageOptions",
      "types": [
        "{attributions: (Array.<ol.Attribution>|undefined), crossOrigin: (null|string|undefined), logo: (string|olx.LogoOptions|undefined), opaque: (boolean|undefined), projection: (ol.proj.ProjectionLike), state: (ol.source.State|string|undefined), tileClass: (Function|undefined), tileGrid: (ol.tilegrid.TileGrid|undefined), tileLoadFunction: (ol.TileLoadFunctionType|undefined), tilePixelRatio: (number|undefined), tileUrlFunction: (ol.TileUrlFunctionType|undefined)}"
      ]
    },
    {
      "name": "olx.source.TileVectorOptions",
      "types": [
        "{attributions: (Array.<ol.Attribution>|undefined), format: (ol.format.Feature), logo: (string|olx.LogoOptions|undefined), projection: (ol.proj.ProjectionLike), tileGrid: (ol.tilegrid.TileGrid), tileUrlFunction: (ol.TileUrlFunctionType|undefined), url: (string|undefined), urls: (Array.<string>|undefined)}"
      ]
    },
    {
      "name": "olx.source.TopoJSONOptions",
      "types": [
        "{attributions: (Array.<ol.Attribution>|undefined), defaultProjection: (ol.proj.ProjectionLike), logo: (string|olx.LogoOptions|undefined), object: (GeoJSONObject|undefined), projection: (ol.proj.ProjectionLike), text: (string|undefined), url: (string|undefined)}"
      ]
    },
    {
      "name": "olx.source.IGCOptions",
      "types": [
        "{altitudeMode: (ol.format.IGCZ|undefined), projection: (ol.proj.ProjectionLike), text: (string|undefined), url: (string|undefined), urls: (Array.<string>|undefined)}"
      ]
    },
    {
      "name": "olx.source.ImageMapGuideOptions",
      "types": [
        "{url: (string|undefined), displayDpi: (number|undefined), metersPerUnit: (number|undefined), hidpi: (boolean|undefined), useOverlay: (boolean|undefined), projection: (ol.proj.ProjectionLike), ratio: (number|undefined), resolutions: (Array.<number>|undefined), imageLoadFunction: (ol.TileLoadFunctionType|undefined), params: (Object|undefined)}"
      ]
    },
    {
      "name": "olx.source.KMLOptions",
      "types": [
        "{attributions: (Array.<ol.Attribution>|undefined), defaultStyle: (Array.<ol.style.Style>|undefined), doc: (Document|undefined), extractStyles: (boolean|undefined), logo: (string|olx.LogoOptions|undefined), node: (Node|undefined), projection: (ol.proj.ProjectionLike), text: (string|undefined), url: (string|undefined), urls: (Array.<string>|undefined)}"
      ]
    },
    {
      "name": "olx.source.MapQuestOptions",
      "types": [
        "{layer: (string), tileLoadFunction: (ol.TileLoadFunctionType|undefined), url: (string|undefined)}"
      ]
    },
    {
      "name": "olx.source.TileDebugOptions",
      "types": [
        "{projection: (ol.proj.ProjectionLike), tileGrid: (ol.tilegrid.TileGrid|undefined)}"
      ]
    },
    {
      "name": "olx.source.OSMOptions",
      "types": [
        "{attributions: (Array.<ol.Attribution>|undefined), crossOrigin: (null|string|undefined), maxZoom: (number|undefined), tileLoadFunction: (ol.TileLoadFunctionType|undefined), url: (string|undefined), wrapX: (boolean|undefined)}"
      ]
    },
    {
      "name": "olx.source.OSMXMLOptions",
      "types": [
        "{attributions: (Array.<ol.Attribution>|undefined), doc: (Document|undefined), logo: (string|olx.LogoOptions|undefined), node: (Node|undefined), projection: (ol.proj.ProjectionLike), text: (string|undefined), url: (string|undefined), urls: (Array.<string>|undefined)}"
      ]
    },
    {
      "name": "olx.source.ImageCanvasOptions",
      "types": [
        "{attributions: (Array.<ol.Attribution>|undefined), canvasFunction: (ol.CanvasFunctionType), logo: (string|olx.LogoOptions|undefined), projection: (ol.proj.ProjectionLike), ratio: (number|undefined), resolutions: (Array.<number>|undefined), state: (ol.source.State|string|undefined)}"
      ]
    },
    {
      "name": "olx.source.ImageVectorOptions",
      "types": [
        "{attributions: (Array.<ol.Attribution>|undefined), logo: (string|olx.LogoOptions|undefined), projection: (ol.proj.ProjectionLike), ratio: (number|undefined), resolutions: (Array.<number>|undefined), source: (ol.source.Vector), style: (ol.style.Style|Array.<ol.style.Style>|ol.style.StyleFunction|undefined)}"
      ]
    },
    {
      "name": "olx.source.ImageWMSOptions",
      "types": [
        "{attributions: (Array.<ol.Attribution>|undefined), crossOrigin: (null|string|undefined), hidpi: (boolean|undefined), serverType: (ol.source.wms.ServerType|string|undefined), imageLoadFunction: (ol.TileLoadFunctionType|undefined), logo: (string|olx.LogoOptions|undefined), params: (Object.<string, *>), projection: (ol.proj.ProjectionLike), ratio: (number|undefined), resolutions: (Array.<number>|undefined), url: (string|undefined)}"
      ]
    },
    {
      "name": "olx.source.StamenOptions",
      "types": [
        "{layer: (string), minZoom: (number|undefined), maxZoom: (number|undefined), opaque: (boolean|undefined), tileLoadFunction: (ol.TileLoadFunctionType|undefined), url: (string|undefined)}"
      ]
    },
    {
      "name": "olx.source.ImageStaticOptions",
      "types": [
        "{attributions: (Array.<ol.Attribution>|undefined), crossOrigin: (null|string|undefined), imageExtent: (ol.Extent), imageSize: (ol.Size|undefined), imageLoadFunction: (ol.TileLoadFunctionType|undefined), logo: (string|olx.LogoOptions|undefined), projection: (ol.proj.ProjectionLike), url: (string)}"
      ]
    },
    {
      "name": "olx.source.ServerVectorOptions",
      "types": [
        "{attributions: (Array.<ol.Attribution>|undefined), format: (ol.format.Feature), loader: (Function), strategy: (Function), logo: (string|olx.LogoOptions|undefined), projection: (ol.proj.ProjectionLike)}"
      ]
    },
    {
      "name": "olx.source.TileJSONOptions",
      "types": [
        "{crossOrigin: (null|string|undefined), tileLoadFunction: (ol.TileLoadFunctionType|undefined), url: (string), wrapX: (boolean|undefined)}"
      ]
    },
    {
      "name": "olx.source.TileWMSOptions",
      "types": [
        "{attributions: (Array.<ol.Attribution>|undefined), params: (Object.<string, *>), crossOrigin: (null|string|undefined), gutter: (number|undefined), hidpi: (boolean|undefined), logo: (string|olx.LogoOptions|undefined), tileGrid: (ol.tilegrid.TileGrid|undefined), maxZoom: (number|undefined), projection: (ol.proj.ProjectionLike), serverType: (ol.source.wms.ServerType|string|undefined), tileLoadFunction: (ol.TileLoadFunctionType|undefined), url: (string|undefined), urls: (Array.<string>|undefined)}"
      ]
    },
    {
      "name": "olx.source.VectorOptions",
      "types": [
        "{attributions: (Array.<ol.Attribution>|undefined), features: (Array.<ol.Feature>|undefined), logo: (string|olx.LogoOptions|undefined), projection: (ol.proj.ProjectionLike), state: (ol.source.State|string|undefined)}"
      ]
    },
    {
      "name": "olx.source.StaticVectorOptions",
      "types": [
        "{arrayBuffer: (ArrayBuffer|undefined), attributions: (Array.<ol.Attribution>|undefined), doc: (Document|undefined), format: (ol.format.Feature), logo: (string|olx.LogoOptions|undefined), node: (Node|undefined), object: (Object|undefined), projection: (ol.proj.ProjectionLike), text: (string|undefined), url: (string|undefined), urls: (Array.<string>|undefined)}"
      ]
    },
    {
      "name": "olx.source.WMTSOptions",
      "types": [
        "{attributions: (Array.<ol.Attribution>|undefined), crossOrigin: (string|null|undefined), logo: (string|olx.LogoOptions|undefined), tileGrid: (ol.tilegrid.WMTS), projection: (ol.proj.ProjectionLike), requestEncoding: (ol.source.WMTSRequestEncoding|string|undefined), layer: (string), style: (string), tileClass: (Function|undefined), tilePixelRatio: (number|undefined), version: (string|undefined), format: (string|undefined), matrixSet: (string), dimensions: (Object|undefined), url: (string|undefined), maxZoom: (number|undefined), tileLoadFunction: (ol.TileLoadFunctionType|undefined), urls: (Array.<string>|undefined)}"
      ]
    },
    {
      "name": "olx.source.XYZOptions",
      "types": [
        "{attributions: (Array.<ol.Attribution>|undefined), crossOrigin: (null|string|undefined), logo: (string|olx.LogoOptions|undefined), projection: (ol.proj.ProjectionLike), maxZoom: (number|undefined), minZoom: (number|undefined), tileLoadFunction: (ol.TileLoadFunctionType|undefined), tilePixelRatio: (number|undefined), tileSize: (number|undefined), tileUrlFunction: (ol.TileUrlFunctionType|undefined), url: (string|undefined), urls: (Array.<string>|undefined), wrapX: (boolean|undefined)}"
      ]
    },
    {
      "name": "olx.source.ZoomifyOptions",
      "types": [
        "{attributions: (Array.<ol.Attribution>|undefined), crossOrigin: (null|string|undefined), logo: (string|olx.LogoOptions|undefined), url: (string), tierSizeCalculation: (string|undefined), size: (ol.Size), undefined: (Object)}"
      ]
    },
    {
      "name": "olx.style.CircleOptions",
      "types": [
        "{fill: (ol.style.Fill|undefined), radius: (number), snapToPixel: (boolean|undefined), stroke: (ol.style.Stroke|undefined), atlasManager: (ol.style.AtlasManager|undefined)}"
      ]
    },
    {
      "name": "olx.style.FillOptions",
      "types": [
        "{color: (ol.Color|string|undefined)}"
      ]
    },
    {
      "name": "olx.style.IconOptions",
      "types": [
        "{anchor: (Array.<number>|undefined), anchorOrigin: (ol.style.IconOrigin|undefined), anchorXUnits: (ol.style.IconAnchorUnits|undefined), anchorYUnits: (ol.style.IconAnchorUnits|undefined), crossOrigin: (null|string|undefined), img: (Image|undefined), offset: (Array.<number>|undefined), offsetOrigin: (ol.style.IconOrigin|undefined), scale: (number|undefined), snapToPixel: (boolean|undefined), rotateWithView: (boolean|undefined), rotation: (number|undefined), size: (ol.Size|undefined), src: (string)}"
      ]
    },
    {
      "name": "olx.style.RegularShapeOptions",
      "types": [
        "{fill: (ol.style.Fill|undefined), points: (number), radius: (number|undefined), radius1: (number|undefined), radius2: (number|undefined), angle: (number|undefined), snapToPixel: (boolean|undefined), stroke: (ol.style.Stroke|undefined), rotation: (number|undefined), atlasManager: (ol.style.AtlasManager|undefined)}"
      ]
    },
    {
      "name": "olx.style.StrokeOptions",
      "types": [
        "{color: (ol.Color|string|undefined), lineCap: (string|undefined), lineJoin: (string|undefined), lineDash: (Array.<number>|undefined), miterLimit: (number|undefined), width: (number|undefined)}"
      ]
    },
    {
      "name": "olx.style.TextOptions",
      "types": [
        "{font: (string|undefined), offsetX: (number|undefined), offsetY: (number|undefined), scale: (number|undefined), rotation: (number|undefined), text: (string|undefined), textAlign: (string|undefined), textBaseline: (string|undefined), fill: (ol.style.Fill|undefined), stroke: (ol.style.Stroke|undefined)}"
      ]
    },
    {
      "name": "olx.style.StyleOptions",
      "types": [
        "{geometry: (undefined|string|ol.geom.Geometry|ol.style.GeometryFunction), fill: (ol.style.Fill|undefined), image: (ol.style.Image|undefined), stroke: (ol.style.Stroke|undefined), text: (ol.style.Text|undefined), zIndex: (number|undefined), undefined: (Object)}"
      ]
    },
    {
      "name": "olx.tilegrid.TileGridOptions",
      "types": [
        "{minZoom: (number|undefined), origin: (ol.Coordinate|undefined), origins: (Array.<ol.Coordinate>|undefined), resolutions: (Array.<number>), tileSize: (number|undefined), tileSizes: (Array.<number>|undefined)}"
      ]
    },
    {
      "name": "olx.tilegrid.WMTSOptions",
      "types": [
        "{origin: (ol.Coordinate|undefined), origins: (Array.<ol.Coordinate>|undefined), resolutions: (Array.<number>), matrixIds: (Array.<string>), tileSize: (number|undefined), tileSizes: (Array.<number>|undefined)}"
      ]
    },
    {
      "name": "olx.tilegrid.XYZOptions",
      "types": [
        "{extent: (ol.Extent|undefined), maxZoom: (number|undefined), minZoom: (number|undefined), tileSize: (number|undefined)}"
      ]
    },
    {
      "name": "olx.tilegrid.ZoomifyOptions",
      "types": [
        "{resolutions: (Array.<number>), undefined: (Object)}"
      ]
    },
    {
      "name": "olx.view.FitGeometryOptions",
      "types": [
        "{padding: (Array.<number>), constrainResolution: (boolean|undefined), nearest: (boolean|undefined), minResolution: (number|undefined), maxZoom: (number|undefined)}"
      ]
    },
    {
      "name": "olx.FrameState",
      "types": [
        "{pixelRatio: (number), time: (number), viewState: (olx.ViewState)}"
      ]
    },
    {
      "name": "olx.ViewState",
      "types": [
        "{center: (ol.Coordinate), projection: (ol.proj.Projection), resolution: (number), rotation: (number)}"
      ]
    },
    {
      "name": "olx.style.AtlasManagerOptions",
      "types": [
        "{initialSize: (number|undefined), maxSize: (number|undefined), space: (number|undefined)}"
      ]
    },
    {
      "name": "ol.CanvasFunctionType",
      "types": [
        "Function"
      ]
    },
    {
      "name": "ol.CoordinateFormatType",
      "types": [
        "Function"
      ]
    },
    {
      "name": "ol.Coordinate",
      "types": [
        "Array.<number>"
      ]
    },
    {
      "name": "ol.Extent",
      "types": [
        "Array.<number>"
      ]
    },
    {
      "name": "ol.feature.FeatureStyleFunction",
      "types": [
        "Function"
      ]
    },
    {
      "name": "ol.PreRenderFunction",
      "types": [
        "Function"
      ]
    },
    {
      "name": "ol.ImageLoadFunctionType",
      "types": [
        "Function"
      ]
    },
    {
      "name": "ol.OverlayPositioning",
      "types": [
        "string"
      ]
    },
    {
      "name": "ol.Pixel",
      "types": [
        "Array.<number>"
      ]
    },
    {
      "name": "ol.Size",
      "types": [
        "Array.<number>"
      ]
    },
    {
      "name": "ol.TileCoord",
      "types": [
        "Array.<number>"
      ]
    },
    {
      "name": "ol.TileLoadFunctionType",
      "types": [
        "Function"
      ]
    },
    {
      "name": "ol.TileUrlFunctionType",
      "types": [
        "Function"
      ]
    },
    {
      "name": "ol.TransformFunction",
      "types": [
        "Function"
      ]
    },
    {
      "name": "ol.style.IconAnchorUnits",
      "types": [
        "string"
      ]
    },
    {
      "name": "ol.style.IconOrigin",
      "types": [
        "string"
      ]
    },
    {
      "name": "ol.style.StyleFunction",
      "types": [
        "Function"
      ]
    },
    {
      "name": "ol.style.GeometryFunction",
      "types": [
        "Function"
      ]
    },
    {
      "name": "ol.source.State",
      "types": [
        "string"
      ]
    },
    {
      "name": "ol.source.wms.ServerType",
      "types": [
        "string"
      ]
    },
    {
      "name": "ol.source.WMTSRequestEncoding",
      "types": [
        "string"
      ]
    },
    {
      "name": "ol.RendererType",
      "types": [
        "string"
      ]
    },
    {
      "name": "ol.proj.ProjectionLike",
      "types": [
        "ol.proj.Projection",
        "string",
        "undefined"
      ]
    },
    {
      "name": "ol.proj.Units",
      "types": [
        "string"
      ]
    },
    {
      "name": "ol.geom.GeometryType",
      "types": [
        "string"
      ]
    },
    {
      "name": "ol.geom.GeometryLayout",
      "types": [
        "string"
      ]
    },
    {
      "name": "ol.format.IGCZ",
      "types": [
        "string"
      ]
    },
    {
      "name": "ol.format.WFS.FeatureCollectionMetadata",
      "types": [
        "Object"
      ]
    },
    {
      "name": "ol.format.WFS.TransactionResponse",
      "types": [
        "Object"
      ]
    },
    {
      "name": "ol.events.ConditionType",
      "types": [
        "Function"
      ]
    },
    {
      "name": "ol.control.ScaleLineUnits",
      "types": [
        "string"
      ]
    },
    {
      "name": "ol.Color",
      "types": [
        "Array.<number>"
      ]
    }
  ],
  "externs": [
    {
      "name": "olx",
      "kind": "member",
      "path": "/Users/ahocevar/projects/ol3/externs/olx.js",
      "types": [
        "Object"
      ]
    },
    {
      "name": "GeoJSONObject",
      "kind": "class",
      "path": "/Users/ahocevar/projects/ol3/externs/geojson.js"
    },
    {
      "name": "GeoJSONObject#bbox",
      "kind": "member",
      "path": "/Users/ahocevar/projects/ol3/externs/geojson.js",
      "types": [
        "!Array.<number>",
        "undefined"
      ]
    },
    {
      "name": "GeoJSONObject#type",
      "kind": "member",
      "path": "/Users/ahocevar/projects/ol3/externs/geojson.js",
      "types": [
        "string"
      ]
    },
    {
      "name": "GeoJSONObject#crs",
      "kind": "member",
      "path": "/Users/ahocevar/projects/ol3/externs/geojson.js",
      "types": [
        "GeoJSONCRS",
        "undefined"
      ]
    },
    {
      "name": "GeoJSONCRS",
      "kind": "class",
      "path": "/Users/ahocevar/projects/ol3/externs/geojson.js"
    },
    {
      "name": "GeoJSONCRS#type",
      "kind": "member",
      "description": "CRS type. One of `link` or `name`.",
      "path": "/Users/ahocevar/projects/ol3/externs/geojson.js",
      "types": [
        "string"
      ]
    },
    {
      "name": "GeoJSONCRS#properties",
      "kind": "member",
      "description": "TODO: remove GeoJSONCRSCode when http://jira.codehaus.org/browse/GEOS-5996\nis fixed and widely deployed.",
      "path": "/Users/ahocevar/projects/ol3/externs/geojson.js",
      "types": [
        "GeoJSONCRSCode",
        "GeoJSONCRSName",
        "GeoJSONLink"
      ]
    },
    {
      "name": "GeoJSONCRSCode",
      "kind": "class",
      "description": "`GeoJSONCRSCode` is not part of the GeoJSON specification, but is generated\nby GeoServer.\nTODO: remove GeoJSONCRSCode when http://jira.codehaus.org/browse/GEOS-5996\nis fixed and widely deployed.",
      "path": "/Users/ahocevar/projects/ol3/externs/geojson.js"
    },
    {
      "name": "GeoJSONCRSName",
      "kind": "class",
      "path": "/Users/ahocevar/projects/ol3/externs/geojson.js"
    },
    {
      "name": "GeoJSONCRSName#code",
      "kind": "member",
      "description": "TODO: remove this when http://jira.codehaus.org/browse/GEOS-5996 is fixed\nand widely deployed.",
      "path": "/Users/ahocevar/projects/ol3/externs/geojson.js",
      "types": [
        "string"
      ]
    },
    {
      "name": "GeoJSONCRSName#name",
      "kind": "member",
      "path": "/Users/ahocevar/projects/ol3/externs/geojson.js",
      "types": [
        "string"
      ]
    },
    {
      "name": "GeoJSONGeometry",
      "kind": "class",
      "path": "/Users/ahocevar/projects/ol3/externs/geojson.js",
      "extends": "GeoJSONObject"
    },
    {
      "name": "GeoJSONGeometry#coordinates",
      "kind": "member",
      "path": "/Users/ahocevar/projects/ol3/externs/geojson.js",
      "types": [
        "!Array.<number>",
        "!Array.<!Array.<number>>",
        "!Array.<!Array.<!Array.<number>>>"
      ]
    },
    {
      "name": "GeoJSONGeometryCollection",
      "kind": "class",
      "path": "/Users/ahocevar/projects/ol3/externs/geojson.js",
      "extends": "GeoJSONObject"
    },
    {
      "name": "GeoJSONGeometryCollection#geometries",
      "kind": "member",
      "path": "/Users/ahocevar/projects/ol3/externs/geojson.js",
      "types": [
        "Array.<GeoJSONGeometry>"
      ]
    },
    {
      "name": "GeoJSONFeature",
      "kind": "class",
      "path": "/Users/ahocevar/projects/ol3/externs/geojson.js",
      "extends": "GeoJSONObject"
    },
    {
      "name": "GeoJSONFeature#geometry",
      "kind": "member",
      "path": "/Users/ahocevar/projects/ol3/externs/geojson.js",
      "types": [
        "GeoJSONGeometry"
      ]
    },
    {
      "name": "GeoJSONFeature#id",
      "kind": "member",
      "path": "/Users/ahocevar/projects/ol3/externs/geojson.js",
      "types": [
        "number",
        "string",
        "undefined"
      ]
    },
    {
      "name": "GeoJSONFeature#properties",
      "kind": "member",
      "path": "/Users/ahocevar/projects/ol3/externs/geojson.js",
      "types": [
        "Object.<string, *>"
      ]
    },
    {
      "name": "GeoJSONFeatureCollection",
      "kind": "class",
      "path": "/Users/ahocevar/projects/ol3/externs/geojson.js",
      "extends": "GeoJSONObject"
    },
    {
      "name": "GeoJSONFeatureCollection#features",
      "kind": "member",
      "path": "/Users/ahocevar/projects/ol3/externs/geojson.js",
      "types": [
        "Array.<GeoJSONFeature>"
      ]
    },
    {
      "name": "GeoJSONLink",
      "kind": "class",
      "path": "/Users/ahocevar/projects/ol3/externs/geojson.js"
    },
    {
      "name": "GeoJSONLink#href",
      "kind": "member",
      "path": "/Users/ahocevar/projects/ol3/externs/geojson.js",
      "types": [
        "string"
      ]
    },
    {
      "name": "GeoJSONLink#type",
      "kind": "member",
      "path": "/Users/ahocevar/projects/ol3/externs/geojson.js",
      "types": [
        "string"
      ]
    },
    {
      "name": "GeoJSONGeometry#bbox",
      "kind": "member",
      "path": "/Users/ahocevar/projects/ol3/externs/geojson.js",
      "types": [
        "!Array.<number>",
        "undefined"
      ]
    },
    {
      "name": "GeoJSONGeometry#type",
      "kind": "member",
      "path": "/Users/ahocevar/projects/ol3/externs/geojson.js",
      "types": [
        "string"
      ]
    },
    {
      "name": "GeoJSONGeometry#crs",
      "kind": "member",
      "path": "/Users/ahocevar/projects/ol3/externs/geojson.js",
      "types": [
        "GeoJSONCRS",
        "undefined"
      ]
    },
    {
      "name": "GeoJSONGeometryCollection#bbox",
      "kind": "member",
      "path": "/Users/ahocevar/projects/ol3/externs/geojson.js",
      "types": [
        "!Array.<number>",
        "undefined"
      ]
    },
    {
      "name": "GeoJSONGeometryCollection#type",
      "kind": "member",
      "path": "/Users/ahocevar/projects/ol3/externs/geojson.js",
      "types": [
        "string"
      ]
    },
    {
      "name": "GeoJSONGeometryCollection#crs",
      "kind": "member",
      "path": "/Users/ahocevar/projects/ol3/externs/geojson.js",
      "types": [
        "GeoJSONCRS",
        "undefined"
      ]
    },
    {
      "name": "GeoJSONFeature#bbox",
      "kind": "member",
      "path": "/Users/ahocevar/projects/ol3/externs/geojson.js",
      "types": [
        "!Array.<number>",
        "undefined"
      ]
    },
    {
      "name": "GeoJSONFeature#type",
      "kind": "member",
      "path": "/Users/ahocevar/projects/ol3/externs/geojson.js",
      "types": [
        "string"
      ]
    },
    {
      "name": "GeoJSONFeature#crs",
      "kind": "member",
      "path": "/Users/ahocevar/projects/ol3/externs/geojson.js",
      "types": [
        "GeoJSONCRS",
        "undefined"
      ]
    },
    {
      "name": "GeoJSONFeatureCollection#bbox",
      "kind": "member",
      "path": "/Users/ahocevar/projects/ol3/externs/geojson.js",
      "types": [
        "!Array.<number>",
        "undefined"
      ]
    },
    {
      "name": "GeoJSONFeatureCollection#type",
      "kind": "member",
      "path": "/Users/ahocevar/projects/ol3/externs/geojson.js",
      "types": [
        "string"
      ]
    },
    {
      "name": "GeoJSONFeatureCollection#crs",
      "kind": "member",
      "path": "/Users/ahocevar/projects/ol3/externs/geojson.js",
      "types": [
        "GeoJSONCRS",
        "undefined"
      ]
    }
  ],
  "base": [
    {
      "name": "ol.binary.IReader",
      "kind": "class",
      "path": "/Users/ahocevar/projects/ol3/src/ol/binary.js",
      "virtual": true
    },
    {
      "name": "ol.structs.IHasChecksum",
      "kind": "class",
      "path": "/Users/ahocevar/projects/ol3/src/ol/structs/checksum.js",
      "virtual": true
    },
    {
      "name": "ol.render.IReplayGroup",
      "kind": "class",
      "path": "/Users/ahocevar/projects/ol3/src/ol/render/ireplay.js",
      "virtual": true
    },
    {
      "name": "ol.render.IVectorContext",
      "kind": "class",
      "description": "VectorContext interface. Implemented by\n{@link ol.render.canvas.Immediate} and {@link ol.render.webgl.Immediate}.",
      "path": "/Users/ahocevar/projects/ol3/src/ol/render/ivectorcontext.js",
      "virtual": true
    },
    {
      "name": "ol.format.XML",
      "kind": "class",
      "description": "Generic format for reading non-feature XML data",
      "path": "/Users/ahocevar/projects/ol3/src/ol/format/xmlformat.js"
    }
  ]
}
