{"version":3,"file":"sea-level.js","mappings":"4KAyBA,MAAMA,EAAM,oCAKNC,EAAY,IAAI,IAAU,CAG9BC,IACE,sEAAwEF,EAC1EG,SAAU,IACVC,QAAS,GACTC,aAAa,IAGTC,EAAS,IAAI,KAAa,CAC9BC,QAAS,CAACN,GACVO,UAlCF,SAAeC,EAAQC,GACrB,MAAMC,EAAQF,EAAO,GACrB,GAAIE,EAAM,GAAI,CAEoD,IAAzC,IAAXA,EAAM,GAAW,IAAiB,IAAXA,EAAM,GAAWA,EAAM,IAAvD,KACWD,EAAKE,OACjBD,EAAM,GAAK,IACXA,EAAM,GAAK,IACXA,EAAM,GAAK,IACXA,EAAM,GAAK,KAEXA,EAAM,GAAK,CAEf,CACA,OAAOA,CACT,IAsBME,EAAM,IAAI,IAAI,CAClBC,OAAQ,MACRC,OAAQ,CACN,IAAI,IAAU,CACZC,OAAQ,IAAI,IAAU,CACpBC,aAvBN,4LAwBMf,IACE,gEAAkEF,EACpEG,SAAU,IACVC,QAAS,OAGb,IAAI,IAAW,CACbc,QAAS,GACTF,OAAQV,KAGZa,KAAM,IAAI,KAAK,CACbC,QAAQ,QAAW,EAAE,SAAU,UAC/BC,KAAM,OAIJC,EAAUC,SAASC,eAAe,SAClCC,EAASF,SAASC,eAAe,UACvCF,EAAQI,iBAAiB,SAAS,WAChCD,EAAOE,UAAYL,EAAQM,MAC3BtB,EAAOuB,SACT,IACAJ,EAAOE,UAAYL,EAAQM,MAE3BtB,EAAOwB,GAAG,oBAAoB,SAAUC,GACtCA,EAAMrB,KAAKE,MAAQU,EAAQM,KAC7B,IAEA,MAAMI,EAAYT,SAASU,uBAAuB,YAClD,IAAK,IAAIC,EAAI,EAAGC,EAAKH,EAAUI,OAAQF,EAAIC,IAAMD,EAC/CF,EAAUE,GAAGR,iBAAiB,QAASW,GAGzC,SAASA,EAASN,GAChB,MAAMrB,EAAOqB,EAAMjB,OAAOwB,QACpBnB,EAAON,EAAI0B,UACjBpB,EAAKqB,WAAU,QAAW9B,EAAKU,OAAOqB,MAAM,KAAK5B,IAAI6B,UACrDvB,EAAKwB,QAAQD,OAAOhC,EAAKW,MAC3B,C","sources":["webpack:///./sea-level.js"],"sourcesContent":["import Map from '../src/ol/Map.js';\nimport View from '../src/ol/View.js';\nimport ImageLayer from '../src/ol/layer/Image.js';\nimport TileLayer from '../src/ol/layer/Tile.js';\nimport {fromLonLat} from '../src/ol/proj.js';\nimport ImageTile from '../src/ol/source/ImageTile.js';\nimport RasterSource from '../src/ol/source/Raster.js';\n\nfunction flood(pixels, data) {\n  const pixel = pixels[0];\n  if (pixel[3]) {\n    const height =\n      -10000 + (pixel[0] * 256 * 256 + pixel[1] * 256 + pixel[2]) * 0.1;\n    if (height <= data.level) {\n      pixel[0] = 134;\n      pixel[1] = 203;\n      pixel[2] = 249;\n      pixel[3] = 255;\n    } else {\n      pixel[3] = 0;\n    }\n  }\n  return pixel;\n}\n\nconst key = 'get_your_own_D6rA4zTHduk6KOKTXzGB';\nconst attributions =\n  '<a href=\"https://www.maptiler.com/copyright/\" target=\"_blank\">&copy; MapTiler</a> ' +\n  '<a href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\">&copy; OpenStreetMap contributors</a>';\n\nconst elevation = new ImageTile({\n  // The RGB values in the source collectively represent elevation.\n  // Interpolation of individual colors would produce incorrect elevations and is disabled.\n  url:\n    'https://api.maptiler.com/tiles/terrain-rgb-v2/{z}/{x}/{y}.webp?key=' + key,\n  tileSize: 512,\n  maxZoom: 14,\n  interpolate: false,\n});\n\nconst raster = new RasterSource({\n  sources: [elevation],\n  operation: flood,\n});\n\nconst map = new Map({\n  target: 'map',\n  layers: [\n    new TileLayer({\n      source: new ImageTile({\n        attributions: attributions,\n        url:\n          'https://api.maptiler.com/maps/streets-v2/{z}/{x}/{y}.png?key=' + key,\n        tileSize: 512,\n        maxZoom: 22,\n      }),\n    }),\n    new ImageLayer({\n      opacity: 0.6,\n      source: raster,\n    }),\n  ],\n  view: new View({\n    center: fromLonLat([-122.3267, 37.8377]),\n    zoom: 11,\n  }),\n});\n\nconst control = document.getElementById('level');\nconst output = document.getElementById('output');\ncontrol.addEventListener('input', function () {\n  output.innerText = control.value;\n  raster.changed();\n});\noutput.innerText = control.value;\n\nraster.on('beforeoperations', function (event) {\n  event.data.level = control.value;\n});\n\nconst locations = document.getElementsByClassName('location');\nfor (let i = 0, ii = locations.length; i < ii; ++i) {\n  locations[i].addEventListener('click', relocate);\n}\n\nfunction relocate(event) {\n  const data = event.target.dataset;\n  const view = map.getView();\n  view.setCenter(fromLonLat(data.center.split(',').map(Number)));\n  view.setZoom(Number(data.zoom));\n}\n"],"names":["key","elevation","url","tileSize","maxZoom","interpolate","raster","sources","operation","pixels","data","pixel","level","map","target","layers","source","attributions","opacity","view","center","zoom","control","document","getElementById","output","addEventListener","innerText","value","changed","on","event","locations","getElementsByClassName","i","ii","length","relocate","dataset","getView","setCenter","split","Number","setZoom"],"sourceRoot":""}