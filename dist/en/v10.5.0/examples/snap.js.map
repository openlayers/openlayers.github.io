{"version":3,"file":"snap.js","mappings":"0MAWA,MAAMA,EAAS,IAAI,IAAU,CAC3BC,OAAQ,IAAI,MAGRC,EAAS,IAAI,IAAY,CAC7BD,OAAQ,IAAI,IACZE,MAAO,CACL,aAAc,2BACd,eAAgB,UAChB,eAAgB,EAChB,gBAAiB,EACjB,oBAAqB,aAInBC,EAAM,IAAI,IAAI,CAClBC,OAAQ,CAACL,EAAQE,GACjBI,OAAQ,MACRC,KAAM,IAAI,KAAK,CACbC,OAAQ,EAAE,KAAU,MACpBC,KAAM,MAIJC,EAAgB,CACpBC,KAAM,WACJC,KAAKC,OAAS,IAAI,IAClBT,EAAIU,eAAeF,KAAKC,QAExBD,KAAKG,OAAS,IAAI,IAAO,CACvBC,SAAUJ,KAAKC,OAAOI,gBAExBb,EAAIU,eAAeF,KAAKG,QAExBH,KAAKM,WACP,EACAA,UAAW,WACT,MAAMC,EAAmBP,KAAKC,OAAOI,cAErCL,KAAKC,OAAOO,GAAG,iBAAiB,WAC9BD,EAAiBE,SAAQ,SAAUC,GACjCH,EAAiBI,OAAOD,EAC1B,GACF,GACF,EACAE,UAAW,SAAUC,GACnBb,KAAKC,OAAOW,UAAUC,GACtBb,KAAKG,OAAOS,UAAUC,EACxB,GAEFf,EAAcC,OAEd,MAAMe,EAAcC,SAASC,eAAe,gBAEtCC,EAAc,CAClBlB,KAAM,WACJP,EAAIU,eAAeF,KAAKkB,OACxBlB,KAAKkB,MAAMN,WAAU,GACrBpB,EAAIU,eAAeF,KAAKmB,YACxBnB,KAAKmB,WAAWP,WAAU,GAC1BpB,EAAIU,eAAeF,KAAKoB,SACxBpB,KAAKoB,QAAQR,WAAU,GACvBpB,EAAIU,eAAeF,KAAKqB,QACxBrB,KAAKqB,OAAOT,WAAU,EACxB,EACAM,MAAO,IAAI,KAAK,CACd7B,OAAQC,EAAOgC,YACfC,KAAM,UAERJ,WAAY,IAAI,KAAK,CACnB9B,OAAQC,EAAOgC,YACfC,KAAM,eAERH,QAAS,IAAI,KAAK,CAChB/B,OAAQC,EAAOgC,YACfC,KAAM,YAERF,OAAQ,IAAI,KAAK,CACfhC,OAAQC,EAAOgC,YACfC,KAAM,WAERC,WAAY,KACZZ,UAAW,SAAUC,GAKnB,GAJIb,KAAKwB,aACPxB,KAAKwB,WAAWZ,WAAU,GAC1BZ,KAAKwB,WAAa,MAEhBX,EAAQ,CACV,MAAMU,EAAOT,EAAYW,SAAS,aAAaC,MAC/C1B,KAAKwB,WAAaxB,KAAKuB,GACvBvB,KAAKwB,WAAWZ,WAAU,EAC5B,CACF,GAEFK,EAAYlB,OAMZe,EAAYa,SAAW,SAAUC,GAC/B,MAAML,EAAOK,EAAElC,OAAOmC,aAAa,QACnC,GAAY,aAARN,EACFzB,EAAcc,WAAU,GACxBK,EAAYL,WAAU,GACtBE,EAAYW,SAAsB,YAAEC,MAAQ,YACvC,GAAY,eAARH,EAAuB,CAChC,MAAMO,EAAkBF,EAAElC,OAAOgC,MACV,UAAnBI,GACFb,EAAYL,WAAU,GACtBd,EAAcc,WAAU,IACI,QAAnBkB,IACTb,EAAYL,WAAU,GACtBd,EAAcc,WAAU,GAE5B,CACF,EAEAK,EAAYL,WAAU,GACtBd,EAAcc,WAAU,GAKxB,MAAMmB,EAAO,IAAI,IAAK,CACpB1C,OAAQC,EAAOgC,YACfU,cAAc,IAGVC,EAAiBlB,SAASC,eAAe,WAE/Ce,EAAKvB,GAAG,QAAQ,KACdO,SAASC,eAAe,OAAOzB,MAAM2C,OAAS,WAC9CD,EAAeE,UAAY,eAAe,IAG5CJ,EAAKvB,GAAG,UAAU,KAChBO,SAASC,eAAe,OAAOzB,MAAM2C,OAAS,UAC9CD,EAAeE,UAAY,gBAAgB,IAG7C3C,EAAIU,eAAe6B,E","sources":["webpack:///./snap.js"],"sourcesContent":["import Map from '../src/ol/Map.js';\nimport View from '../src/ol/View.js';\nimport Draw from '../src/ol/interaction/Draw.js';\nimport Modify from '../src/ol/interaction/Modify.js';\nimport Select from '../src/ol/interaction/Select.js';\nimport Snap from '../src/ol/interaction/Snap.js';\nimport TileLayer from '../src/ol/layer/Tile.js';\nimport VectorLayer from '../src/ol/layer/Vector.js';\nimport OSM from '../src/ol/source/OSM.js';\nimport VectorSource from '../src/ol/source/Vector.js';\n\nconst raster = new TileLayer({\n  source: new OSM(),\n});\n\nconst vector = new VectorLayer({\n  source: new VectorSource(),\n  style: {\n    'fill-color': 'rgba(255, 255, 255, 0.2)',\n    'stroke-color': '#ffcc33',\n    'stroke-width': 2,\n    'circle-radius': 7,\n    'circle-fill-color': '#ffcc33',\n  },\n});\n\nconst map = new Map({\n  layers: [raster, vector],\n  target: 'map',\n  view: new View({\n    center: [-11000000, 4600000],\n    zoom: 4,\n  }),\n});\n\nconst ExampleModify = {\n  init: function () {\n    this.select = new Select();\n    map.addInteraction(this.select);\n\n    this.modify = new Modify({\n      features: this.select.getFeatures(),\n    });\n    map.addInteraction(this.modify);\n\n    this.setEvents();\n  },\n  setEvents: function () {\n    const selectedFeatures = this.select.getFeatures();\n\n    this.select.on('change:active', function () {\n      selectedFeatures.forEach(function (each) {\n        selectedFeatures.remove(each);\n      });\n    });\n  },\n  setActive: function (active) {\n    this.select.setActive(active);\n    this.modify.setActive(active);\n  },\n};\nExampleModify.init();\n\nconst optionsForm = document.getElementById('options-form');\n\nconst ExampleDraw = {\n  init: function () {\n    map.addInteraction(this.Point);\n    this.Point.setActive(false);\n    map.addInteraction(this.LineString);\n    this.LineString.setActive(false);\n    map.addInteraction(this.Polygon);\n    this.Polygon.setActive(false);\n    map.addInteraction(this.Circle);\n    this.Circle.setActive(false);\n  },\n  Point: new Draw({\n    source: vector.getSource(),\n    type: 'Point',\n  }),\n  LineString: new Draw({\n    source: vector.getSource(),\n    type: 'LineString',\n  }),\n  Polygon: new Draw({\n    source: vector.getSource(),\n    type: 'Polygon',\n  }),\n  Circle: new Draw({\n    source: vector.getSource(),\n    type: 'Circle',\n  }),\n  activeDraw: null,\n  setActive: function (active) {\n    if (this.activeDraw) {\n      this.activeDraw.setActive(false);\n      this.activeDraw = null;\n    }\n    if (active) {\n      const type = optionsForm.elements['draw-type'].value;\n      this.activeDraw = this[type];\n      this.activeDraw.setActive(true);\n    }\n  },\n};\nExampleDraw.init();\n\n/**\n * Let user change the geometry type.\n * @param {Event} e Change event.\n */\noptionsForm.onchange = function (e) {\n  const type = e.target.getAttribute('name');\n  if (type == 'draw-type') {\n    ExampleModify.setActive(false);\n    ExampleDraw.setActive(true);\n    optionsForm.elements['interaction'].value = 'draw';\n  } else if (type == 'interaction') {\n    const interactionType = e.target.value;\n    if (interactionType == 'modify') {\n      ExampleDraw.setActive(false);\n      ExampleModify.setActive(true);\n    } else if (interactionType == 'draw') {\n      ExampleDraw.setActive(true);\n      ExampleModify.setActive(false);\n    }\n  }\n};\n\nExampleDraw.setActive(true);\nExampleModify.setActive(false);\n\n// The snap interaction must be added after the Modify and Draw interactions\n// in order for its map browser event handlers to be fired first. Its handlers\n// are responsible of doing the snapping.\nconst snap = new Snap({\n  source: vector.getSource(),\n  intersection: true,\n});\n\nconst snappedElement = document.getElementById('snapped');\n\nsnap.on('snap', () => {\n  document.getElementById('map').style.cursor = 'grabbing';\n  snappedElement.innerHTML = 'Snapped: true';\n});\n\nsnap.on('unsnap', () => {\n  document.getElementById('map').style.cursor = 'default';\n  snappedElement.innerHTML = 'Snapped: false';\n});\n\nmap.addInteraction(snap);\n"],"names":["raster","source","vector","style","map","layers","target","view","center","zoom","ExampleModify","init","this","select","addInteraction","modify","features","getFeatures","setEvents","selectedFeatures","on","forEach","each","remove","setActive","active","optionsForm","document","getElementById","ExampleDraw","Point","LineString","Polygon","Circle","getSource","type","activeDraw","elements","value","onchange","e","getAttribute","interactionType","snap","intersection","snappedElement","cursor","innerHTML"],"sourceRoot":""}