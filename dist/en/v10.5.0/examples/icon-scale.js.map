{"version":3,"file":"icon-scale.js","mappings":"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","sources":["webpack:///./icon-scale.js"],"sourcesContent":["import Feature from '../src/ol/Feature.js';\nimport Map from '../src/ol/Map.js';\nimport View from '../src/ol/View.js';\nimport Point from '../src/ol/geom/Point.js';\nimport TileLayer from '../src/ol/layer/Tile.js';\nimport VectorLayer from '../src/ol/layer/Vector.js';\nimport OGCMapTile from '../src/ol/source/OGCMapTile.js';\nimport VectorSource from '../src/ol/source/Vector.js';\nimport Circle from '../src/ol/style/Circle.js';\nimport Fill from '../src/ol/style/Fill.js';\nimport Icon from '../src/ol/style/Icon.js';\nimport Stroke from '../src/ol/style/Stroke.js';\nimport Style from '../src/ol/style/Style.js';\nimport Text from '../src/ol/style/Text.js';\n\nconst iconFeature = new Feature({\n  geometry: new Point([0, 0]),\n});\n\nconst iconStyle = new Style({\n  image: new Icon({\n    anchor: [0.5, 1],\n    src: 'data/world.png',\n  }),\n  text: new Text({\n    text: 'World\\nText',\n    font: 'bold 30px Calibri,sans-serif',\n    fill: new Fill({\n      color: 'black',\n    }),\n    stroke: new Stroke({\n      color: 'white',\n      width: 2,\n    }),\n  }),\n});\n\nconst pointStyle = new Style({\n  image: new Circle({\n    radius: 7,\n    fill: new Fill({\n      color: 'black',\n    }),\n    stroke: new Stroke({\n      color: 'white',\n      width: 2,\n    }),\n  }),\n});\n\niconFeature.setStyle([pointStyle, iconStyle]);\n\nconst vectorSource = new VectorSource({\n  features: [iconFeature],\n});\n\nconst vectorLayer = new VectorLayer({\n  source: vectorSource,\n});\n\nconst rasterLayer = new TileLayer({\n  source: new OGCMapTile({\n    url: 'https://maps.gnosis.earth/ogcapi/collections/NaturalEarth:raster:HYP_HR_SR_OB_DR/map/tiles/WebMercatorQuad',\n    crossOrigin: '',\n  }),\n});\n\nconst map = new Map({\n  layers: [rasterLayer, vectorLayer],\n  target: 'map',\n  view: new View({\n    center: [0, 0],\n    zoom: 3,\n  }),\n});\n\nconst textAlignments = ['left', 'center', 'right'];\nconst textBaselines = ['top', 'middle', 'bottom'];\nconst controls = {};\nconst controlIds = [\n  'rotation',\n  'rotateWithView',\n  'scaleX',\n  'scaleY',\n  'anchorX',\n  'anchorY',\n  'displacementX',\n  'displacementY',\n  'textRotation',\n  'textRotateWithView',\n  'textScaleX',\n  'textScaleY',\n  'textAlign',\n  'textBaseline',\n  'textOffsetX',\n  'textOffsetY',\n];\ncontrolIds.forEach(function (id) {\n  const control = document.getElementById(id);\n  const output = document.getElementById(id + 'Out');\n  function setOutput() {\n    const value = parseFloat(control.value);\n    if (control.type === 'checkbox') {\n      output.innerText = String(control.checked);\n    } else if (id === 'textAlign') {\n      output.innerText = textAlignments[value];\n    } else if (id === 'textBaseline') {\n      output.innerText = textBaselines[value];\n    } else {\n      output.innerText = control.step.startsWith('0.')\n        ? value.toFixed(2)\n        : String(value);\n    }\n  }\n  control.addEventListener('input', function () {\n    setOutput();\n    updateStyle();\n  });\n  setOutput();\n  controls[id] = control;\n});\n\nfunction updateStyle() {\n  iconStyle\n    .getImage()\n    .setRotation(parseFloat(controls['rotation'].value) * Math.PI);\n\n  iconStyle.getImage().setRotateWithView(controls['rotateWithView'].checked);\n\n  iconStyle\n    .getImage()\n    .setScale([\n      parseFloat(controls['scaleX'].value),\n      parseFloat(controls['scaleY'].value),\n    ]);\n\n  iconStyle\n    .getImage()\n    .setAnchor([\n      parseFloat(controls['anchorX'].value),\n      parseFloat(controls['anchorY'].value),\n    ]);\n\n  iconStyle\n    .getImage()\n    .setDisplacement([\n      parseFloat(controls['displacementX'].value),\n      parseFloat(controls['displacementY'].value),\n    ]);\n\n  iconStyle\n    .getText()\n    .setRotation(parseFloat(controls['textRotation'].value) * Math.PI);\n\n  iconStyle.getText().setRotateWithView(controls['textRotateWithView'].checked);\n\n  iconStyle\n    .getText()\n    .setScale([\n      parseFloat(controls['textScaleX'].value),\n      parseFloat(controls['textScaleY'].value),\n    ]);\n\n  iconStyle\n    .getText()\n    .setTextAlign(textAlignments[parseFloat(controls['textAlign'].value)]);\n\n  iconStyle\n    .getText()\n    .setTextBaseline(textBaselines[parseFloat(controls['textBaseline'].value)]);\n\n  iconStyle.getText().setOffsetX(parseFloat(controls['textOffsetX'].value));\n  iconStyle.getText().setOffsetY(parseFloat(controls['textOffsetY'].value));\n\n  iconFeature.changed();\n}\nupdateStyle();\n\n// change mouse cursor when over marker\nmap.on('pointermove', function (e) {\n  const hit = map.hasFeatureAtPixel(e.pixel);\n  map.getTargetElement().style.cursor = hit ? 'pointer' : '';\n});\n"],"names":["iconFeature","geometry","iconStyle","image","anchor","src","text","font","fill","color","stroke","width","pointStyle","radius","setStyle","vectorSource","features","vectorLayer","source","rasterLayer","url","crossOrigin","map","layers","target","view","center","zoom","textAlignments","textBaselines","controls","updateStyle","getImage","setRotation","parseFloat","value","Math","PI","setRotateWithView","checked","setScale","setAnchor","setDisplacement","getText","setTextAlign","setTextBaseline","setOffsetX","setOffsetY","changed","forEach","id","control","document","getElementById","output","setOutput","type","innerText","String","step","startsWith","toFixed","addEventListener","on","e","hit","hasFeatureAtPixel","pixel","getTargetElement","style","cursor"],"sourceRoot":""}