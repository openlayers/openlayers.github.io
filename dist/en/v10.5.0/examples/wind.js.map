{"version":3,"file":"wind.js","mappings":"0EAGAA,EAAOC,QAHP,SAAcC,EAAIC,EAAIC,GAClB,OAAOF,GAAI,EAAEE,GAAGD,EAAGC,CACvB,C,4KC8BO,MAAMC,EAAI,CACfC,QAAS,YACTC,iBAAkB,oBAClBC,iBAAkB,oBAClBC,oBAAqB,sBACrBC,UAAW,aACXC,KAAM,SACNC,OAAQ,WACRC,SAAU,YACVC,YAAa,eACbC,aAAc,gBACdC,UAAW,aACXC,eAAgB,iBAChBC,QAAS,YACTC,SAAU,KAAeA,SACzBC,iBAAkB,KAAeA,kBAOtBC,EACD,aADCA,EAEJ,UAOIC,EACD,aAQZ,MAAMC,UAA0B,KAK9B,WAAAC,CAAYC,EAAOC,GACjBC,MAAMF,EAAO,CACXG,aAAcF,EAAQG,iBACtBC,eAAgBJ,EAAQK,mBACxBC,UAAWN,EAAQM,UAGnBC,cAAe,CAAC,CAAC,GACjBC,SAAU,CACR,CAAC7B,EAAEK,WAAYgB,EAAQS,YAQ3BC,KAAKC,6BAA+BX,EAAQY,4BAM5CF,KAAKG,iBAAmB,KAMxBH,KAAKI,mBAAqBd,EAAQe,UAC9BC,KAAKC,KAAKD,KAAKE,KAAKlB,EAAQe,YAC5B,IAMJL,KAAKS,qBAMLT,KAAKU,YAMLV,KAAKW,yBAMLX,KAAKY,8BAAgCtB,EAAQuB,6BAM7Cb,KAAKc,gCACHxB,EAAQyB,+BAMVf,KAAKgB,yBAMLhB,KAAKiB,qBAMLjB,KAAKkB,sBAMLlB,KAAKmB,2BAA6B7B,EAAQ8B,0BAM1CpB,KAAKC,6BAA+BX,EAAQY,4BAM5CF,KAAKqB,gBAMLrB,KAAKsB,qBAAuBhC,EAAQiC,oBAMpCvB,KAAKwB,uBAAyBlC,EAAQmC,sBAMtCzB,KAAK0B,uBAML1B,KAAK2B,mBAML3B,KAAK4B,aAAe,KAMpB5B,KAAK6B,UAAYvC,EAAQS,SAMzBC,KAAK8B,aAAexC,EAAQyC,aAAe,KAM3C/B,KAAKgC,UAAY,KAMjBhC,KAAKiC,cAAgB,IAMrBjC,KAAKkC,UAAY,CAAC,EAAG,GAMrBlC,KAAKmC,eAAiB,EAMtBnC,KAAKoC,gBAAkB,CACzB,CAKA,kBAAAC,GACE9C,MAAM8C,qBACN,MAAMC,EAAStC,KAAKsC,OAEdC,EAAKD,EAAOE,QAClBxC,KAAKyC,aAAeF,EAAGG,oBAEvB,MAAMC,EAAgB3C,KAAKI,mBAAqBJ,KAAKI,mBAC/CwC,EAAkB,IAAIC,aAAaF,GACzC,IAAK,IAAIG,EAAI,EAAGA,EAAIH,IAAiBG,EACnCF,EAAgBE,GAAKA,EAEvB,MAAMC,EAAsB,IAAI,KAAiB,KAAc,MAC/DA,EAAoBC,SAASJ,GAC7BN,EAAOW,gBAAgBF,GACvB/C,KAAKS,qBAAuBsC,EAE5B,MAAMG,EAAc,IAAIL,aAAa,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IACjEM,EAAa,IAAI,KAAiB,KAAc,MACtDA,EAAWH,SAASE,GACpBZ,EAAOW,gBAAgBE,GACvBnD,KAAKU,YAAcyC,EAEnB,MAAMC,EAAoB,IAAIC,WAA2B,EAAhBV,GACzC,IAAK,IAAIG,EAAI,EAAGA,EAAIM,EAAkBE,SAAUR,EAC9CM,EAAkBN,GAAKxC,KAAKiD,MAAsB,IAAhBjD,KAAKkD,UAGzCxD,KAAKgB,yBAA2BsB,EAAOmB,cACrC,CAACzD,KAAKI,mBAAoBJ,KAAKI,oBAC/BgD,EACA,MACA,GAGFpD,KAAKiB,qBAAuBqB,EAAOmB,cACjC,CAACzD,KAAKI,mBAAoBJ,KAAKI,oBAC/BgD,EACA,MACA,GAGFpD,KAAKW,yBAA2B2B,EAAOoB,WACrC1D,KAAKc,gCACLd,KAAKY,+BAGPZ,KAAKkB,sBAAwBoB,EAAOoB,WAClC1D,KAAKC,6BACLD,KAAKmB,4BAGPnB,KAAKqB,gBAAkBiB,EAAOoB,WAC5B1D,KAAKwB,uBACLxB,KAAKsB,qBAET,CAEA,4BAAAqC,GACE,MAAMrB,EAAStC,KAAKsC,OACdC,EAAKD,EAAOE,QACZoB,EAAStB,EAAOuB,YAChBC,EAAcF,EAAOG,MACrBC,EAAeJ,EAAOK,OAEtBC,EAAQ,IAAIb,WAAWS,EAAcE,EAAe,GAEtDhE,KAAK2B,oBACPY,EAAG4B,cAAcnE,KAAK2B,oBAExB3B,KAAK2B,mBAAqBW,EAAOmB,cAC/B,CAACK,EAAaE,GACdE,EACA,MACA,GAGElE,KAAK0B,wBACPa,EAAG4B,cAAcnE,KAAK0B,wBAExB1B,KAAK0B,uBAAyBY,EAAOmB,cACnC,CAACK,EAAaE,GACdE,EACA,MACA,EAEJ,CAMA,cAAAE,CAAeC,GACb,MAAM/B,EAAStC,KAAKsC,OACdC,EAAKD,EAAOE,QACZoB,EAAStB,EAAOuB,YAChBC,EAAcF,EAAOG,MACrBC,EAAeJ,EAAOK,OAG1BjE,KAAKmC,gBAAkB2B,GACvB9D,KAAKoC,iBAAmB4B,GAExBhE,KAAK2D,+BAGP,MAAMW,EAAO,CAACR,EAAaE,GAG3BhE,KAAKG,iBAAmBmC,EAAOmB,cAC7Ba,EACA,KACAtE,KAAKG,kBAEPoC,EAAGgC,eACDhC,EAAGiC,WACH,EACAjC,EAAGkC,KACH,EACA,EACAX,EACAE,EACA,GAGFhE,KAAK0E,oBAAoBL,GACzBrE,KAAK2E,yBAAyBN,GAE9BA,EAAWO,SAAU,EACrB5E,KAAKmC,eAAiB2B,EACtB9D,KAAKoC,gBAAkB4B,CACzB,CAKA,mBAAAU,CAAoBL,GAClB,MAAM/B,EAAStC,KAAKsC,OACdC,EAAKD,EAAOE,QAElBF,EAAOuC,gBAAgB7E,KAAKyC,aAAczC,KAAK2B,oBAE/C3B,KAAK8E,aAAa9E,KAAK0B,uBAAwB1B,KAAK4B,cACpD5B,KAAK+E,mBAAmBV,GAExB/B,EAAO0C,yBACPzC,EAAG0C,WAAW,EAAK,EAAK,EAAK,GAC7B1C,EAAG2C,MAAM3C,EAAG4C,kBAEZ5C,EAAG6C,OAAO7C,EAAG8C,OACb9C,EAAG+C,UAAU/C,EAAGgD,UAAWhD,EAAGiD,qBAC9BxF,KAAK8E,aAAa9E,KAAK2B,mBAAoB,GAC3CY,EAAGkD,QAAQlD,EAAG8C,OAEd,MAAMK,EAAU1F,KAAK2B,mBACrB3B,KAAK2B,mBAAqB3B,KAAK0B,uBAC/B1B,KAAK0B,uBAAyBgE,CAChC,CAMA,YAAAZ,CAAaa,EAASC,GACpB,MAAMtD,EAAStC,KAAKsC,OACdC,EAAKD,EAAOE,QAElBF,EAAOuD,WAAW7F,KAAKqB,iBACvBiB,EAAOwD,YAAYH,EAAS,EAAG1H,EAAEC,SACjCoE,EAAOyD,cAAc/F,KAAKU,YAAazB,EAAY,GACnDe,KAAKsC,OAAO0D,qBAAqB/H,EAAEa,QAAS8G,GAE5CrD,EAAG0D,WAAW1D,EAAG2D,UAAW,EAAG,EACjC,CAKA,kBAAAnB,CAAmBV,GACjB,MAAM/B,EAAStC,KAAKsC,OACdC,EAAKD,EAAOE,QAElBF,EAAOuD,WAAW7F,KAAKkB,uBAEvB,MAAMyB,EAAgB3C,KAAKI,mBAAqBJ,KAAKI,mBAErDkC,EAAOyD,cAAc/F,KAAKS,qBAAsBxB,EAAS,GAEzDqD,EAAOwD,YAAY9F,KAAKgB,yBAA0B,EAAG/C,EAAEG,kBACvDkE,EAAOwD,YAAY9F,KAAKG,iBAAkB,EAAGlC,EAAEE,kBAE/C6B,KAAKsC,OAAO0D,qBACV/H,EAAEI,oBACF2B,KAAKI,oBAGP,MAAM+F,EAAWnG,KAAKkC,UACtBiE,EAAS,GAAK7F,KAAK8F,KAAK/B,EAAWgC,UAAUF,UAC7CA,EAAS,GAAK7F,KAAKgG,KAAKjC,EAAWgC,UAAUF,UAC7CnG,KAAKsC,OAAOiE,oBAAoBtI,EAAEc,SAAUoH,GAE5CnG,KAAKsC,OAAO0D,qBAAqB/H,EAAEK,UAAW0B,KAAK6B,WAEnDU,EAAG0D,WAAW1D,EAAGiE,OAAQ,EAAG7D,EAC9B,CAKA,wBAAAgC,CAAyBN,GACvB,MAAM/B,EAAStC,KAAKsC,OACdC,EAAKD,EAAOE,QAElBF,EAAOuD,WAAW7F,KAAKW,0BACvB4B,EAAGkE,SAAS,EAAG,EAAGzG,KAAKI,mBAAoBJ,KAAKI,oBAChDkC,EAAOuC,gBAAgB7E,KAAKyC,aAAczC,KAAKiB,sBAE/CqB,EAAOwD,YAAY9F,KAAKgB,yBAA0B,EAAG/C,EAAEG,kBACvDkE,EAAOwD,YAAY9F,KAAKG,iBAAkB,EAAGlC,EAAEE,kBAC/CmE,EAAOyD,cAAc/F,KAAKU,YAAazB,EAAY,GAEnDqD,EAAO0D,qBAAqB/H,EAAES,YAAa4B,KAAKkD,UAChDlB,EAAO0D,qBAAqB/H,EAAEU,aAAcqB,KAAK8B,cACjDQ,EAAO0D,qBAAqB/H,EAAEW,UAAWoB,KAAKgC,WAC9CM,EAAO0D,qBAAqB/H,EAAEY,eAAgBmB,KAAKiC,eAEnD,MAAMkE,EAAWnG,KAAKkC,UACtBiE,EAAS,GAAK7F,KAAK8F,KAAK/B,EAAWgC,UAAUF,UAC7CA,EAAS,GAAK7F,KAAKgG,KAAKjC,EAAWgC,UAAUF,UAC7CnG,KAAKsC,OAAOiE,oBAAoBtI,EAAEc,SAAUoH,GAE5C,MAAM7B,EAAOD,EAAWC,KACxBtE,KAAKsC,OAAOiE,oBAAoBtI,EAAEe,iBAAkB,CAACsF,EAAK,GAAIA,EAAK,KAEnE/B,EAAG0D,WAAW1D,EAAG2D,UAAW,EAAG,GAE/B,MAAMR,EAAU1F,KAAKiB,qBACrBjB,KAAKiB,qBAAuBjB,KAAKgB,yBACjChB,KAAKgB,yBAA2B0E,CAClC,EAGF,Q,oBC/aA,MAAMjG,EAAmB,sBACN,KAAGiH,kCACL,KAAGC,oCACF,KAAGC,yCACH,KAAGC,0CACH,KAAGC,wCACH,KAAGC,sCACH,KAAGC,sCACH,KAAGC,iHAME,KAAGP,iDAElB,KAAGK,sBAAsB,KAAGD,wBAAwB,KAAGF,mDACvD,KAAGI,sBAAsB,KAAGF,wBAAwB,KAAGD,uEAE3C,KAAGF,yBAAyB,KAAGD,kBAAkB,KAAGO,sBAIlEtH,EAAqB,oIAOV,KAAGuH,mCACFjJ,EAAEK,mCACE,KAAG6I,4IAOD,KAAGD,8CACH,KAAGA,8CACH,KAAGA,8CACH,KAAGA,qFAKK,KAAGC,oFACMlJ,EAAEK,uBAAuBL,EAAEK,4BAO9D8I,EAAmB,sIAONnI,wBAEFC,8BAGXA,OAAgBD,0CACeA,mBAO/BwC,EAAwB,yIAORxD,EAAEC,6BACND,EAAEa,8BAEHI,qDAGYjB,EAAEC,kBAAkBgB,sDACDjB,EAAEa,4BAQ5CiC,EAAiC,yIAOjB9C,EAAEG,0CACFH,EAAEE,sCACNF,EAAES,iCACFT,EAAEU,kCACFV,EAAEW,+BACFX,EAAEY,mCACHZ,EAAEc,6BACFd,EAAEe,uCAEFE,iSAWoBjB,EAAEG,qBAAqBc,8OAQvBjB,EAAEE,qRAU1BF,EAAEc,qBAAqBd,EAAEc,2BACzBd,EAAEc,qBAAqBd,EAAEc,qIAIZd,EAAEe,wBAAwBf,EAAEe,uFACWf,EAAEU,wOAM7BO,QAAiBjB,EAAES,wIAGlCT,EAAEW,kCAAkCX,EAAEY,4YAkBvDuC,EAA4B,uIAOdnC,6BAEEhB,EAAEG,sCACNH,EAAEI,0CAEHa,6DAITjB,EAAEG,iDAEMa,OAAahB,EAAEI,wCACfY,OAAahB,EAAEI,0BAA0BJ,EAAEI,+CAIrDa,yJAOQA,2BACAA,+CA4Hd,MAAMmI,EAAU,GAUhB,MAAMC,UAAkBC,EAAA,EAItB,WAAAnI,CAAYE,GACV,MAAMkI,EAAcC,OAAOC,OAAO,CAAC,EAAGpI,GAYtC,UAXOkI,EAAYzH,gBACZyH,EAAYzF,mBACZyF,EAAYnH,UACnBd,MAAMiI,GAMNxH,KAAK2H,OAASrI,EAAQsI,OAAS,CAAC,IAE1BtI,EAAQS,SAAW,GACvB,MAAM,IAAI8H,MAAM,wBAMlB7H,KAAK6B,UAAYvC,EAAQS,SAMzBC,KAAK8B,aAAexC,EAAQyC,YAM5B/B,KAAK8H,WAAaxI,EAAQe,UAM1BL,KAAK+H,gBAAkB/H,KAAK2H,OAAOK,WAAa,CAAC,EAEjDhI,KAAKiI,kBAAkB,IAAcC,OAAQlI,KAAKmI,oBACpD,CAKA,mBAAAA,GACMnI,KAAKoI,eACPpI,KAAKqI,cAAcC,YAEvB,CAMA,oBAAAC,CAAqBP,GACnBP,OAAOC,OAAO1H,KAAK+H,gBAAiBC,GACpChI,KAAKwI,SACP,CAQA,UAAAC,CAAWC,EAAQC,GACjB,MAAMC,EAAS5I,KAAK6I,YAEpB,OADAxB,EAAQ,GAAKuB,EACNvB,CACT,CAKA,cAAAyB,GACE,MAAMC,EAhMV,SAAoBnB,GAClB,MAAMoB,GAAU,UACVC,EAAW,GAEjB,QAAoBC,IAAhBtB,EAAMuB,MAAqB,CAC7B,MAAMA,GAAQ,QAAiBH,EAASpB,EAAMuB,MAAO,MACrDF,EAASG,KAAK,WAAWD,KAC3B,CAEA,MAAME,EAAgB5B,OAAO6B,KAAKN,EAAQhB,WAC1C,GAAIqB,EAAc/F,OAAS,IAAMsE,EAAMI,UACrC,MAAM,IAAIH,MACR,wCAAwCmB,EAAQhB,cAKpD,MAAMlI,EAAW,CAAC,EAElB,IAAK,MAAMyJ,KAAgBF,EAAe,CACxC,KAAME,KAAgB3B,EAAMI,WAC1B,MAAM,IAAIH,MAAM,YAAY0B,yBAI9BzJ,GADoB,QAAuByJ,IACnB,WACtB,IAAIC,EAAQ5B,EAAMI,UAAUuB,GAI5B,MAHqB,iBAAVC,IACTA,GAAQ,QAA0BA,SAEnBN,IAAVM,EAAsBA,GAAS,OACxC,CACF,CAEA,MAAMC,EAAsBhC,OAAO6B,KAAKxJ,GAAU4J,KAAI,SAAUC,GAC9D,MAAO,iBAAiBA,IAC1B,IAEMC,EAAqBnC,OAAO6B,KAAKN,EAAQa,WAAWH,KACxD,SAAUC,GACR,OAAOX,EAAQa,UAAUF,EAC3B,IAGIzJ,EAA8B,qJAOdjC,EAAEE,wCACNF,EAAEK,gCACHL,EAAEc,oBAEf0K,EAAoBK,KAAK,6BAEZ5K,iBAEb0K,EAAmBE,KAAK,oEAGS7L,EAAEE,qBAAqBe,gCAEtCjB,EAAEK,cAAcL,EAAEK,uDAClBL,EAAEK,cAAcL,EAAEK,6EAG3BL,EAAEc,qBAAqBd,EAAEc,6BACzBd,EAAEc,qBAAqBd,EAAEc,sGAOhCkK,EAASa,KAAK,4GAUpB,MAAO,CACLrK,mBACAE,qBACAyB,4BACAlB,8BACAW,6BAA8BuG,EAC9BrG,iCACAQ,oBAAqB6F,EACrB3F,wBAEJ,CAgGwBsI,CAAW/J,KAAK2H,QAEpC,OAAO,IAAI,EAAkB3H,KAAM,IAC9B+I,EACHnJ,UAAWI,KAAKgK,eAChBjK,SAAUC,KAAK6B,UACfE,YAAa/B,KAAK8B,aAClBzB,UAAWL,KAAK8H,YAEpB,EAOFR,EAAU2C,UAAUC,QAEpB,Q,uDC3eA,MAAMC,EAAW,IAAIC,SAAQ,CAACC,EAASC,KACrC,MAAMC,EAAQ,IAAIC,MAClBD,EAAME,OAAS,KACb,MAAM7G,EAAS8G,SAASC,cAAc,UAChC5G,EAAQwG,EAAMxG,MACdE,EAASsG,EAAMtG,OACrBL,EAAOG,MAAQA,EACfH,EAAOK,OAASA,EAEhB,MAAM+E,EAAUpF,EAAOgH,WAAW,MAClC5B,EAAQ6B,UAAUN,EAAO,EAAG,GAC5B,MAAMO,EAAO9B,EAAQ+B,aAAa,EAAG,EAAGhH,EAAOE,GAAQ6G,KACvDT,EAAQ,CAACS,OAAM/G,QAAOE,UAAQ,EAEhCsG,EAAMS,QAAU,KACdV,EAAO,IAAIzC,MAAM,kBAAkB,EAErC0C,EAAMU,IAAM,iBAAiB,IAW/B,SAASC,EAAkBC,EAAQC,EAAQC,EAAKC,EAAKC,EAAKC,GACxD,OAAOH,EAAI3B,KAAI,CAAC+B,EAAG3I,IATrB,SAA+BqI,EAAQC,EAAQM,EAAKC,EAAKC,EAAKC,GAK5D,OAJa,EAAIV,IAAW,EAAIC,GAAUM,EAC9BP,GAAU,EAAIC,GAAUO,GACvB,EAAIR,GAAUC,EAASQ,EACxBT,EAASC,EAASS,CAEhC,CAIIC,CAAsBX,EAAQC,EAAQC,EAAIvI,GAAIwI,EAAIxI,GAAIyI,EAAIzI,GAAI0I,EAAI1I,KAEtE,CAEA,MAAMiJ,GAAe,UACfC,EAAe,IAEfC,GAAuB,QAAc,aACrCC,GAAqB,QAAc,aAOnCC,GAAQ,MAERC,EADO,KACSD,EAChBE,GAAQ,MAIRC,EAAO,IAAIC,EAAA,EAAe,CAE9BC,WAAY,EACZC,OAAO,EACP,YAAMC,CAAOC,EAAGC,EAAGC,GACjB,MACE/B,KAAMgC,EACN/I,MAAOgJ,EACP9I,OAAQ+I,SACA7C,EAEJ8C,GAAY,QAAMlB,EAAc,CAACY,EAAGC,EAAGC,GAAIX,GAC3CxD,EAASqD,EAAamB,mBAAmBD,GACzCtE,EAAaoD,EAAaoB,cAAcR,GACxC7B,EAAO,IAAIjI,aAAamJ,QAC9B,IAAK,IAAIoB,EAAM,EAAGA,EAAMpB,IAAgBoB,EAAK,CAC3C,IAAIC,EAASD,EAAMpB,EA3BP,EA4BZ,MAAMsB,EAAO5E,EAAO,GAAK0E,EAAMzE,EAC/B,IAAK,IAAI4E,EAAM,EAAGA,EAAMvB,IAAgBuB,EAAK,CAC3C,MAAMC,EAAO9E,EAAO,GAAK6E,EAAM5E,GACxB8E,EAAKC,IAAO,QACjB,CAACF,EAAMF,GACPpB,EACAD,GAGIW,EAAKG,GAAcU,EAAM,KAAQ,IACvC,IAAIE,EAAKrN,KAAKiD,MAAMqJ,GAChBgB,EAAKtN,KAAKC,KAAKqM,GACnB,MAAMzB,EAASyB,EAAIe,EACfA,EAAK,IACPA,GAAMZ,GAEJa,GAAMb,IACRa,GAAMb,GAGR,MAAMF,EAAKG,GAAe,GAAKU,GAAQ,IACvC,IAAIG,EAAKvN,KAAKiD,MAAMsJ,GAChBiB,EAAKxN,KAAKC,KAAKsM,GACnB,MAAMzB,EAASyB,EAAIgB,EACfA,EAAK,IACPA,EAAK,GAEHC,GAAMd,IACRc,EAAKd,EAAc,GAGrB,MAYMe,EAAe7C,EAAkBC,EAAQC,KAZ/B,CACd,CAACuC,EAAIE,GACL,CAACD,EAAIC,GACL,CAACF,EAAIG,GACL,CAACF,EAAIE,IAGgBpE,KAAI,EAAEsE,EAAIC,MAC/B,MAAMC,EApEG,GAoEiB,IAALD,EAAWD,GAChC,MAAO,CAAClB,EAAUoB,GAAcpB,EAAUoB,EAAc,GAAG,KAIvDC,EAAIhC,EAAQC,EAAS2B,EAAa,GAAM,IACxCK,EAAI/B,EAhEHgC,MAgEoBN,EAAa,GAAM,IAE9CjD,EAAKuC,GAAUc,EACfrD,EAAKuC,EAAS,GAAKe,EACnBf,GA7EU,CA8EZ,CACF,CACA,OAAOvC,CACT,IAIIwD,EAASC,EAAS,CACtBA,SAAU,UACVC,QAAS,GACTC,MAAO,IACPC,OAAQ,SAEJC,EAAa,GACnB,IAAK,IAAI7L,EAAI,EAAGA,EAAIwL,EAAOhL,SAAUR,EACnC6L,EAAWvF,KATI,GASEtG,GAAiBwL,EAAOhL,OAAS,IAClDqL,EAAWvF,KAAKkF,EAAOxL,IAGb,IAAI8L,EAAA,EAAI,CAClBC,OAAQ,MACRC,WAAYxO,KAAKyO,IAAI,KAAoB,GACzCC,OAAQ,CACN,IAAIC,EAAA,EAAiB,CACnBrG,OAAQ,IAAIsG,EAAA,EAAa,CACvBC,IAAK,gDACLT,OAAQ,IAAIU,EAAA,IAEdxH,MAAO,CACL,aAAc,aAGlB,IAAIyH,EAAK,CACPzG,OAAQ0D,EACRvM,SA5BW,GA6BX6H,MAAO,CACLuB,MAAO,CAAC,cAAe,CAAC,UAAW,CAAC,MAAO,YAAawF,OAI9DW,KAAM,IAAIC,EAAA,GAAK,CACbC,OAAQ,CAAC,EAAG,GACZC,KAAM,K,oBC7KV7R,EAAOC,QAAQ,CACd,IAAM,CAAC,CAAC,MAAQ,EAAE,IAAM,CAAC,EAAE,EAAE,MAAM,CAAC,MAAQ,KAAM,IAAM,CAAC,EAAE,GAAG,MAAM,CAAC,MAAQ,KAAM,IAAM,CAAC,EAAE,IAAI,MAAM,CAAC,MAAQ,KAAM,IAAM,CAAC,IAAI,IAAI,IAAI,CAAC,MAAQ,KAAM,IAAM,CAAC,IAAI,EAAE,IAAI,CAAC,MAAQ,EAAE,IAAM,CAAC,IAAI,EAAE,KAEhM,IAAM,CAAC,CAAC,MAAQ,EAAE,IAAM,CAAC,IAAI,EAAE,IAAI,CAAC,MAAQ,KAAM,IAAM,CAAC,IAAI,IAAI,IAAI,CAAC,MAAQ,KAAM,IAAM,CAAC,IAAI,IAAI,IAAI,CAAC,MAAQ,KAAM,IAAM,CAAC,EAAE,IAAI,IAAI,CAAC,MAAQ,KAAM,IAAM,CAAC,EAAE,IAAI,KAAK,CAAC,MAAQ,KAAM,IAAM,CAAC,EAAE,IAAI,MAAM,CAAC,MAAQ,KAAM,IAAM,CAAC,EAAE,EAAE,MAAM,CAAC,MAAQ,KAAM,IAAM,CAAC,EAAE,EAAE,MAAM,CAAC,MAAQ,KAAM,IAAM,CAAC,IAAI,EAAE,MAAM,CAAC,MAAQ,KAAM,IAAM,CAAC,IAAI,EAAE,MAAM,CAAC,MAAQ,EAAE,IAAM,CAAC,IAAI,EAAE,KAEtW,IAAM,CAAC,CAAC,MAAQ,EAAE,IAAM,CAAC,EAAE,EAAE,IAAI,CAAC,MAAQ,GAAI,IAAM,CAAC,IAAI,EAAE,IAAI,CAAC,MAAQ,GAAI,IAAM,CAAC,IAAI,IAAI,IAAI,CAAC,MAAQ,EAAE,IAAM,CAAC,IAAI,IAAI,OAEzH,OAAS,CAAC,CAAC,MAAQ,EAAE,IAAM,CAAC,IAAI,EAAE,MAAM,CAAC,MAAQ,EAAE,IAAM,CAAC,IAAI,IAAI,KAElE,OAAS,CAAC,CAAC,MAAQ,EAAE,IAAM,CAAC,EAAE,IAAI,MAAM,CAAC,MAAQ,EAAE,IAAM,CAAC,IAAI,IAAI,OAElE,OAAS,CAAC,CAAC,MAAQ,EAAE,IAAM,CAAC,IAAI,EAAE,IAAI,CAAC,MAAQ,EAAE,IAAM,CAAC,IAAI,IAAI,KAEhE,OAAS,CAAC,CAAC,MAAQ,EAAE,IAAM,CAAC,EAAE,EAAE,MAAM,CAAC,MAAQ,EAAE,IAAM,CAAC,EAAE,IAAI,OAE9D,KAAO,CAAC,CAAC,MAAQ,EAAE,IAAM,CAAC,EAAE,EAAE,IAAI,CAAC,MAAQ,KAAM,IAAM,CAAC,GAAG,GAAG,MAAM,CAAC,MAAQ,KAAM,IAAM,CAAC,IAAI,IAAI,MAAM,CAAC,MAAQ,EAAE,IAAM,CAAC,IAAI,IAAI,OAElI,OAAS,CAAC,CAAC,MAAQ,EAAE,IAAM,CAAC,EAAE,EAAE,IAAI,CAAC,MAAQ,KAAM,IAAM,CAAC,IAAI,IAAI,MAAM,CAAC,MAAQ,EAAE,IAAM,CAAC,IAAI,IAAI,OAElG,MAAQ,CAAC,CAAC,MAAQ,EAAE,IAAM,CAAC,EAAE,EAAE,IAAI,CAAC,MAAQ,EAAE,IAAM,CAAC,IAAI,IAAI,OAE7D,OAAS,CAAC,CAAC,MAAQ,EAAE,IAAM,CAAC,EAAE,GAAG,KAAK,CAAC,MAAQ,KAAM,IAAM,CAAC,GAAG,GAAG,MAAM,CAAC,MAAQ,IAAK,IAAM,CAAC,GAAG,GAAG,MAAM,CAAC,MAAQ,KAAM,IAAM,CAAC,GAAG,IAAI,MAAM,CAAC,MAAQ,GAAI,IAAM,CAAC,GAAG,IAAI,MAAM,CAAC,MAAQ,KAAM,IAAM,CAAC,IAAI,IAAI,MAAM,CAAC,MAAQ,IAAK,IAAM,CAAC,IAAI,IAAI,MAAM,CAAC,MAAQ,KAAM,IAAM,CAAC,IAAI,IAAI,MAAM,CAAC,MAAQ,EAAE,IAAM,CAAC,IAAI,IAAI,OAElT,OAAS,CAAC,CAAC,MAAQ,EAAE,IAAM,CAAC,EAAE,GAAG,KAAK,CAAC,MAAQ,KAAM,IAAM,CAAC,EAAE,IAAI,KAAK,CAAC,MAAQ,IAAK,IAAM,CAAC,GAAG,IAAI,KAAK,CAAC,MAAQ,KAAM,IAAM,CAAC,GAAG,IAAI,KAAK,CAAC,MAAQ,GAAI,IAAM,CAAC,IAAI,IAAI,MAAM,CAAC,MAAQ,KAAM,IAAM,CAAC,IAAI,IAAI,MAAM,CAAC,MAAQ,IAAK,IAAM,CAAC,IAAI,IAAI,MAAM,CAAC,MAAQ,KAAM,IAAM,CAAC,IAAI,IAAI,MAAM,CAAC,MAAQ,EAAE,IAAM,CAAC,IAAI,IAAI,OAEjT,OAAS,CAAC,CAAC,MAAQ,EAAE,IAAM,CAAC,IAAI,EAAE,KAAK,CAAC,MAAQ,KAAM,IAAM,CAAC,IAAI,EAAE,KAAK,CAAC,MAAQ,IAAK,IAAM,CAAC,IAAI,GAAG,KAAK,CAAC,MAAQ,KAAM,IAAM,CAAC,IAAI,GAAG,KAAK,CAAC,MAAQ,GAAI,IAAM,CAAC,IAAI,IAAI,KAAK,CAAC,MAAQ,KAAM,IAAM,CAAC,IAAI,IAAI,KAAK,CAAC,MAAQ,IAAK,IAAM,CAAC,IAAI,IAAI,MAAM,CAAC,MAAQ,KAAM,IAAM,CAAC,IAAI,IAAI,MAAM,CAAC,MAAQ,EAAE,IAAM,CAAC,IAAI,IAAI,OAEhT,QAAU,CAAC,CAAC,MAAQ,EAAE,IAAM,CAAC,EAAE,EAAE,MAAM,CAAC,MAAQ,EAAE,IAAM,CAAC,IAAI,EAAE,KAE/D,KAAO,CAAC,CAAC,MAAQ,EAAE,IAAM,CAAC,EAAE,GAAG,MAAM,CAAC,MAAQ,IAAK,IAAM,CAAC,IAAI,IAAI,MAAM,CAAC,MAAQ,GAAI,IAAM,CAAC,IAAI,IAAI,MAAM,CAAC,MAAQ,GAAI,IAAM,CAAC,IAAI,IAAI,MAAM,CAAC,MAAQ,GAAI,IAAM,CAAC,IAAI,IAAI,KAAK,CAAC,MAAQ,EAAE,IAAM,CAAC,IAAI,GAAG,MAEtM,OAAS,CAAC,CAAC,MAAQ,EAAE,IAAM,CAAC,EAAE,EAAE,MAAM,CAAC,MAAQ,GAAI,IAAM,CAAC,GAAG,IAAI,MAAM,CAAC,MAAQ,GAAI,IAAM,CAAC,IAAI,IAAI,MAAM,CAAC,MAAQ,GAAI,IAAM,CAAC,IAAI,IAAI,MAAM,CAAC,MAAQ,GAAI,IAAM,CAAC,IAAI,IAAI,MAAM,CAAC,MAAQ,GAAI,IAAM,CAAC,IAAI,IAAI,MAAM,CAAC,MAAQ,GAAI,IAAM,CAAC,IAAI,IAAI,MAAM,CAAC,MAAQ,GAAI,IAAM,CAAC,IAAI,IAAI,MAAM,CAAC,MAAQ,GAAI,IAAM,CAAC,IAAI,IAAI,MAAM,CAAC,MAAQ,GAAI,IAAM,CAAC,IAAI,IAAI,MAAM,CAAC,MAAQ,EAAE,IAAM,CAAC,IAAI,EAAE,KAE/W,QAAU,CAAC,CAAC,MAAQ,EAAE,IAAM,CAAC,IAAI,EAAE,KAAK,CAAC,MAAQ,KAAM,IAAM,CAAC,EAAE,EAAE,MAAM,CAAC,MAAQ,IAAK,IAAM,CAAC,EAAE,GAAG,MAAM,CAAC,MAAQ,KAAM,IAAM,CAAC,EAAE,IAAI,MAAM,CAAC,MAAQ,GAAI,IAAM,CAAC,GAAG,IAAI,MAAM,CAAC,MAAQ,KAAM,IAAM,CAAC,IAAI,IAAI,IAAI,CAAC,MAAQ,IAAK,IAAM,CAAC,IAAI,IAAI,IAAI,CAAC,MAAQ,KAAM,IAAM,CAAC,IAAI,IAAI,IAAI,CAAC,MAAQ,EAAE,IAAM,CAAC,IAAI,EAAE,KAExS,SAAW,CAAC,CAAC,MAAQ,EAAE,IAAM,CAAC,GAAG,GAAG,MAAM,CAAC,MAAQ,IAAK,IAAM,CAAC,GAAG,IAAI,MAAM,CAAC,MAAQ,GAAI,IAAM,CAAC,IAAI,IAAI,KAAK,CAAC,MAAQ,IAAK,IAAM,CAAC,IAAI,IAAI,KAAK,CAAC,MAAQ,EAAE,IAAM,CAAC,IAAI,GAAG,MAExK,UAAY,CAAC,CAAC,MAAQ,EAAE,IAAM,CAAC,EAAE,EAAE,IAAI,CAAC,MAAQ,GAAI,IAAM,CAAC,IAAI,EAAE,IAAI,CAAC,MAAQ,GAAI,IAAM,CAAC,IAAI,IAAI,IAAI,CAAC,MAAQ,GAAI,IAAM,CAAC,IAAI,IAAI,MAAM,CAAC,MAAQ,EAAE,IAAM,CAAC,IAAI,IAAI,OAEjK,MAAQ,CAAC,CAAC,MAAQ,EAAE,IAAM,CAAC,EAAE,EAAE,MAAM,CAAC,MAAQ,GAAI,IAAM,CAAC,EAAE,IAAI,MAAM,CAAC,MAAQ,GAAI,IAAM,CAAC,GAAG,IAAI,KAAK,CAAC,MAAQ,GAAI,IAAM,CAAC,IAAI,IAAI,KAAK,CAAC,MAAQ,GAAI,IAAM,CAAC,IAAI,GAAG,KAAK,CAAC,MAAQ,EAAE,IAAM,CAAC,IAAI,IAAI,OAEhM,SAAW,CAAC,CAAC,MAAQ,EAAE,IAAM,CAAC,EAAE,EAAE,IAAI,CAAC,MAAQ,IAAK,IAAM,CAAC,GAAG,EAAE,MAAM,CAAC,MAAQ,GAAI,IAAM,CAAC,IAAI,EAAE,MAAM,CAAC,MAAQ,GAAI,IAAM,CAAC,IAAI,GAAG,IAAI,CAAC,MAAQ,GAAI,IAAM,CAAC,IAAI,IAAI,IAAI,CAAC,MAAQ,EAAE,IAAM,CAAC,IAAI,IAAI,OAE/L,MAAS,CAAC,CAAC,MAAQ,EAAG,IAAO,CAAC,IAAI,IAAI,IAAI,IAAI,CAAC,MAAQ,EAAG,IAAO,CAAC,IAAI,IAAI,IAAI,KAE9E,QAAW,CAAC,CAAC,MAAQ,EAAE,IAAM,CAAC,GAAG,EAAE,KAAK,CAAC,MAAQ,IAAK,IAAM,CAAC,GAAG,GAAG,MAAM,CAAC,MAAQ,IAAK,IAAM,CAAC,GAAG,GAAG,MAAM,CAAC,MAAQ,IAAK,IAAM,CAAC,GAAG,IAAI,MAAM,CAAC,MAAQ,GAAI,IAAM,CAAC,GAAG,IAAI,MAAM,CAAC,MAAQ,IAAK,IAAM,CAAC,GAAG,IAAI,MAAM,CAAC,MAAQ,IAAK,IAAM,CAAC,GAAG,IAAI,KAAK,CAAC,MAAQ,IAAK,IAAM,CAAC,IAAI,IAAI,KAAK,CAAC,MAAQ,EAAE,IAAM,CAAC,IAAI,IAAI,MAE5S,QAAW,CAAC,CAAC,MAAQ,EAAE,IAAM,CAAC,EAAE,EAAE,IAAI,CAAC,MAAQ,IAAK,IAAM,CAAC,GAAG,GAAG,KAAK,CAAC,MAAQ,IAAK,IAAM,CAAC,GAAG,GAAG,MAAM,CAAC,MAAQ,IAAK,IAAM,CAAC,IAAI,GAAG,MAAM,CAAC,MAAQ,GAAI,IAAM,CAAC,IAAI,GAAG,KAAK,CAAC,MAAQ,IAAK,IAAM,CAAC,IAAI,GAAG,KAAK,CAAC,MAAQ,IAAK,IAAM,CAAC,IAAI,IAAI,KAAK,CAAC,MAAQ,IAAK,IAAM,CAAC,IAAI,IAAI,KAAK,CAAC,MAAQ,EAAE,IAAM,CAAC,IAAI,IAAI,OAExS,MAAS,CAAC,CAAC,MAAQ,EAAE,IAAM,CAAC,EAAE,EAAE,IAAI,CAAC,MAAQ,IAAK,IAAM,CAAC,GAAG,GAAG,KAAK,CAAC,MAAQ,IAAK,IAAM,CAAC,GAAG,GAAG,MAAM,CAAC,MAAQ,IAAK,IAAM,CAAC,IAAI,GAAG,MAAM,CAAC,MAAQ,GAAI,IAAM,CAAC,IAAI,GAAG,MAAM,CAAC,MAAQ,IAAK,IAAM,CAAC,IAAI,GAAG,MAAM,CAAC,MAAQ,IAAK,IAAM,CAAC,IAAI,IAAI,KAAK,CAAC,MAAQ,IAAK,IAAM,CAAC,IAAI,IAAI,MAAM,CAAC,MAAQ,EAAE,IAAM,CAAC,IAAI,IAAI,OAEzS,OAAU,CAAC,CAAC,MAAQ,EAAE,IAAM,CAAC,GAAG,EAAE,MAAM,CAAC,MAAQ,IAAK,IAAM,CAAC,GAAG,EAAE,MAAM,CAAC,MAAQ,IAAK,IAAM,CAAC,IAAI,EAAE,MAAM,CAAC,MAAQ,IAAK,IAAM,CAAC,IAAI,GAAG,MAAM,CAAC,MAAQ,GAAI,IAAM,CAAC,IAAI,GAAG,MAAM,CAAC,MAAQ,IAAK,IAAM,CAAC,IAAI,IAAI,KAAK,CAAC,MAAQ,IAAK,IAAM,CAAC,IAAI,IAAI,KAAK,CAAC,MAAQ,IAAK,IAAM,CAAC,IAAI,IAAI,KAAK,CAAC,MAAQ,EAAE,IAAM,CAAC,IAAI,IAAI,MAE5S,KAAQ,CAAC,CAAC,MAAQ,EAAE,IAAM,CAAC,IAAI,EAAE,MAAM,CAAC,MAAQ,IAAK,IAAM,CAAC,IAAI,EAAE,MAAM,CAAC,MAAQ,IAAK,IAAM,CAAC,IAAI,EAAE,MAAM,CAAC,MAAQ,IAAK,IAAM,CAAC,IAAI,EAAE,MAAM,CAAC,MAAQ,GAAI,IAAM,CAAC,IAAI,GAAG,KAAK,CAAC,MAAQ,IAAK,IAAM,CAAC,IAAI,IAAI,IAAI,CAAC,MAAQ,IAAK,IAAM,CAAC,IAAI,IAAI,IAAI,CAAC,MAAQ,IAAK,IAAM,CAAC,IAAI,IAAI,IAAI,CAAC,MAAQ,EAAE,IAAM,CAAC,IAAI,IAAI,KAEvS,KAAQ,CAAC,CAAC,MAAQ,EAAE,IAAM,CAAC,IAAI,EAAE,MAAM,CAAC,MAAQ,IAAK,IAAM,CAAC,IAAI,EAAE,MAAM,CAAC,MAAQ,IAAK,IAAM,CAAC,GAAG,GAAG,MAAM,CAAC,MAAQ,IAAK,IAAM,CAAC,GAAG,IAAI,MAAM,CAAC,MAAQ,GAAI,IAAM,CAAC,EAAE,IAAI,MAAM,CAAC,MAAQ,IAAK,IAAM,CAAC,EAAE,IAAI,MAAM,CAAC,MAAQ,IAAK,IAAM,CAAC,EAAE,IAAI,KAAK,CAAC,MAAQ,IAAK,IAAM,CAAC,GAAG,IAAI,IAAI,CAAC,MAAQ,EAAE,IAAM,CAAC,IAAI,IAAI,KAEtS,eAAgB,CAAC,CAAC,MAAQ,EAAE,IAAM,CAAC,IAAI,EAAE,MAAM,CAAC,MAAQ,GAAI,IAAM,CAAC,IAAI,EAAE,MAAM,CAAC,MAAQ,GAAI,IAAM,CAAC,IAAI,EAAE,MAAM,CAAC,MAAQ,GAAI,IAAM,CAAC,IAAI,IAAI,IAAI,CAAC,MAAQ,GAAI,IAAM,CAAC,IAAI,IAAI,IAAI,CAAC,MAAQ,GAAI,IAAM,CAAC,IAAI,IAAI,IAAI,CAAC,MAAQ,GAAI,IAAM,CAAC,EAAE,IAAI,KAAK,CAAC,MAAQ,GAAI,IAAM,CAAC,EAAE,IAAI,MAAM,CAAC,MAAQ,GAAI,IAAM,CAAC,GAAG,IAAI,MAAM,CAAC,MAAQ,GAAI,IAAM,CAAC,IAAI,GAAG,MAAM,CAAC,MAAQ,EAAE,IAAM,CAAC,IAAI,EAAE,OAExW,WAAc,CAAC,CAAC,MAAQ,EAAE,IAAM,CAAC,GAAG,GAAG,KAAK,CAAC,MAAQ,IAAK,IAAM,CAAC,GAAG,GAAG,KAAK,CAAC,MAAQ,IAAK,IAAM,CAAC,GAAG,GAAG,MAAM,CAAC,MAAQ,IAAK,IAAM,CAAC,GAAG,IAAI,MAAM,CAAC,MAAQ,GAAI,IAAM,CAAC,GAAG,IAAI,MAAM,CAAC,MAAQ,IAAK,IAAM,CAAC,GAAG,IAAI,MAAM,CAAC,MAAQ,IAAK,IAAM,CAAC,IAAI,IAAI,MAAM,CAAC,MAAQ,IAAK,IAAM,CAAC,IAAI,IAAI,MAAM,CAAC,MAAQ,EAAE,IAAM,CAAC,IAAI,IAAI,OAElT,KAAQ,CAAC,CAAC,MAAQ,EAAE,IAAM,CAAC,GAAG,GAAG,KAAK,CAAC,MAAQ,IAAK,IAAM,CAAC,GAAG,GAAG,KAAK,CAAC,MAAQ,IAAK,IAAM,CAAC,IAAI,GAAG,KAAK,CAAC,MAAQ,IAAK,IAAM,CAAC,IAAI,GAAG,KAAK,CAAC,MAAQ,GAAI,IAAM,CAAC,IAAI,GAAG,KAAK,CAAC,MAAQ,IAAK,IAAM,CAAC,IAAI,IAAI,KAAK,CAAC,MAAQ,IAAK,IAAM,CAAC,IAAI,IAAI,MAAM,CAAC,MAAQ,IAAK,IAAM,CAAC,IAAI,IAAI,MAAM,CAAC,MAAQ,EAAE,IAAM,CAAC,IAAI,IAAI,OAE1S,YAAe,CAAC,CAAC,MAAQ,EAAE,IAAM,CAAC,GAAG,GAAG,KAAK,CAAC,MAAQ,IAAK,IAAM,CAAC,GAAG,GAAG,KAAK,CAAC,MAAQ,IAAK,IAAM,CAAC,GAAG,GAAG,KAAK,CAAC,MAAQ,IAAK,IAAM,CAAC,GAAG,IAAI,KAAK,CAAC,MAAQ,GAAI,IAAM,CAAC,GAAG,IAAI,KAAK,CAAC,MAAQ,IAAK,IAAM,CAAC,GAAG,IAAI,KAAK,CAAC,MAAQ,IAAK,IAAM,CAAC,IAAI,IAAI,MAAM,CAAC,MAAQ,IAAK,IAAM,CAAC,IAAI,IAAI,MAAM,CAAC,MAAQ,EAAE,IAAM,CAAC,IAAI,IAAI,OAE/S,QAAW,CAAC,CAAC,MAAQ,EAAE,IAAM,CAAC,GAAG,GAAG,KAAK,CAAC,MAAQ,IAAK,IAAM,CAAC,GAAG,GAAG,KAAK,CAAC,MAAQ,IAAK,IAAM,CAAC,IAAI,GAAG,MAAM,CAAC,MAAQ,IAAK,IAAM,CAAC,IAAI,GAAG,MAAM,CAAC,MAAQ,GAAI,IAAM,CAAC,IAAI,IAAI,MAAM,CAAC,MAAQ,IAAK,IAAM,CAAC,IAAI,IAAI,MAAM,CAAC,MAAQ,IAAK,IAAM,CAAC,IAAI,IAAI,MAAM,CAAC,MAAQ,IAAK,IAAM,CAAC,IAAI,IAAI,MAAM,CAAC,MAAQ,EAAE,IAAM,CAAC,IAAI,IAAI,OAElT,mBAAoB,CAAC,CAAC,MAAQ,EAAE,IAAM,CAAC,GAAG,EAAE,MAAM,CAAC,MAAQ,IAAK,IAAM,CAAC,GAAG,GAAG,MAAM,CAAC,MAAQ,IAAK,IAAM,CAAC,GAAG,GAAG,MAAM,CAAC,MAAQ,IAAK,IAAM,CAAC,GAAG,GAAG,MAAM,CAAC,MAAQ,GAAI,IAAM,CAAC,GAAG,IAAI,MAAM,CAAC,MAAQ,IAAK,IAAM,CAAC,IAAI,IAAI,MAAM,CAAC,MAAQ,IAAK,IAAM,CAAC,IAAI,IAAI,MAAM,CAAC,MAAQ,IAAK,IAAM,CAAC,IAAI,IAAI,MAAM,CAAC,MAAQ,EAAE,IAAM,CAAC,IAAI,IAAI,OAEzT,kBAAmB,CAAC,CAAC,MAAQ,EAAE,IAAM,CAAC,GAAG,EAAE,KAAK,CAAC,MAAQ,IAAK,IAAM,CAAC,IAAI,GAAG,KAAK,CAAC,MAAQ,IAAK,IAAM,CAAC,IAAI,GAAG,KAAK,CAAC,MAAQ,IAAK,IAAM,CAAC,IAAI,GAAG,KAAK,CAAC,MAAQ,GAAI,IAAM,CAAC,IAAI,GAAG,KAAK,CAAC,MAAQ,IAAK,IAAM,CAAC,IAAI,IAAI,MAAM,CAAC,MAAQ,IAAK,IAAM,CAAC,IAAI,IAAI,MAAM,CAAC,MAAQ,IAAK,IAAM,CAAC,IAAI,IAAI,MAAM,CAAC,MAAQ,EAAE,IAAM,CAAC,IAAI,IAAI,OAEtT,OAAU,CAAC,CAAC,MAAQ,EAAE,IAAM,CAAC,GAAG,EAAE,IAAI,CAAC,MAAQ,IAAK,IAAM,CAAC,IAAI,EAAE,KAAK,CAAC,MAAQ,IAAK,IAAM,CAAC,IAAI,GAAG,IAAI,CAAC,MAAQ,IAAK,IAAM,CAAC,IAAI,GAAG,IAAI,CAAC,MAAQ,GAAI,IAAM,CAAC,IAAI,IAAI,IAAI,CAAC,MAAQ,IAAK,IAAM,CAAC,IAAI,IAAI,KAAK,CAAC,MAAQ,IAAK,IAAM,CAAC,IAAI,IAAI,KAAK,CAAC,MAAQ,IAAK,IAAM,CAAC,IAAI,IAAI,KAAK,CAAC,MAAQ,EAAE,IAAM,CAAC,IAAI,IAAI,OAEtS,IAAO,CAAC,CAAC,MAAQ,EAAE,IAAM,CAAC,GAAG,GAAG,KAAK,CAAC,MAAQ,IAAK,IAAM,CAAC,GAAG,GAAG,KAAK,CAAC,MAAQ,IAAK,IAAM,CAAC,IAAI,GAAG,KAAK,CAAC,MAAQ,IAAK,IAAM,CAAC,IAAI,GAAG,KAAK,CAAC,MAAQ,GAAI,IAAM,CAAC,IAAI,GAAG,KAAK,CAAC,MAAQ,IAAK,IAAM,CAAC,IAAI,IAAI,KAAK,CAAC,MAAQ,IAAK,IAAM,CAAC,IAAI,IAAI,KAAK,CAAC,MAAQ,IAAK,IAAM,CAAC,IAAI,IAAI,KAAK,CAAC,MAAQ,EAAE,IAAM,CAAC,IAAI,IAAI,MAEvS,MAAS,CAAC,CAAC,MAAQ,EAAE,IAAM,CAAC,IAAI,IAAI,KAAK,CAAC,MAAQ,IAAK,IAAM,CAAC,IAAI,GAAG,KAAK,CAAC,MAAQ,IAAK,IAAM,CAAC,IAAI,GAAG,MAAM,CAAC,MAAQ,IAAK,IAAM,CAAC,IAAI,GAAG,MAAM,CAAC,MAAQ,GAAI,IAAM,CAAC,IAAI,GAAG,MAAM,CAAC,MAAQ,IAAK,IAAM,CAAC,GAAG,IAAI,MAAM,CAAC,MAAQ,IAAK,IAAM,CAAC,GAAG,IAAI,MAAM,CAAC,MAAQ,IAAK,IAAM,CAAC,GAAG,IAAI,KAAK,CAAC,MAAQ,EAAE,IAAM,CAAC,IAAI,IAAI,MAE9S,SAAY,CAAC,CAAC,MAAQ,EAAE,IAAM,CAAC,GAAG,GAAG,MAAM,CAAC,MAAQ,IAAK,IAAM,CAAC,GAAG,GAAG,MAAM,CAAC,MAAQ,IAAK,IAAM,CAAC,GAAG,GAAG,MAAM,CAAC,MAAQ,IAAK,IAAM,CAAC,GAAG,IAAI,MAAM,CAAC,MAAQ,GAAI,IAAM,CAAC,GAAG,IAAI,MAAM,CAAC,MAAQ,IAAK,IAAM,CAAC,GAAG,IAAI,MAAM,CAAC,MAAQ,IAAK,IAAM,CAAC,IAAI,IAAI,MAAM,CAAC,MAAQ,IAAK,IAAM,CAAC,IAAI,IAAI,MAAM,CAAC,MAAQ,EAAE,IAAM,CAAC,IAAI,IAAI,OAElT,YAAe,CAAC,CAAC,MAAQ,EAAE,IAAM,CAAC,EAAE,GAAG,KAAK,CAAC,MAAQ,IAAK,IAAM,CAAC,GAAG,GAAG,MAAM,CAAC,MAAQ,IAAK,IAAM,CAAC,GAAG,GAAG,MAAM,CAAC,MAAQ,IAAK,IAAM,CAAC,IAAI,GAAG,MAAM,CAAC,MAAQ,GAAI,IAAM,CAAC,IAAI,GAAG,MAAM,CAAC,MAAQ,IAAK,IAAM,CAAC,IAAI,IAAI,MAAM,CAAC,MAAQ,IAAK,IAAM,CAAC,IAAI,IAAI,KAAK,CAAC,MAAQ,IAAK,IAAM,CAAC,IAAI,IAAI,KAAK,CAAC,MAAQ,EAAE,IAAM,CAAC,IAAI,IAAI,MAElT,UAAa,CAAC,CAAC,MAAQ,EAAE,IAAM,CAAC,GAAG,GAAG,KAAK,CAAC,MAAQ,IAAK,IAAM,CAAC,GAAG,GAAG,KAAK,CAAC,MAAQ,IAAK,IAAM,CAAC,GAAG,GAAG,KAAK,CAAC,MAAQ,IAAK,IAAM,CAAC,IAAI,GAAG,KAAK,CAAC,MAAQ,GAAI,IAAM,CAAC,IAAI,IAAI,KAAK,CAAC,MAAQ,IAAK,IAAM,CAAC,IAAI,IAAI,KAAK,CAAC,MAAQ,IAAK,IAAM,CAAC,IAAI,IAAI,KAAK,CAAC,MAAQ,IAAK,IAAM,CAAC,IAAI,IAAI,MAAM,CAAC,MAAQ,EAAE,IAAM,CAAC,IAAI,IAAI,OAE9S,gBAAiB,CAAC,CAAC,MAAQ,EAAE,IAAM,CAAC,GAAG,GAAG,KAAK,CAAC,MAAQ,IAAK,IAAM,CAAC,GAAG,GAAG,MAAM,CAAC,MAAQ,IAAK,IAAM,CAAC,GAAG,GAAG,MAAM,CAAC,MAAQ,IAAK,IAAM,CAAC,GAAG,IAAI,MAAM,CAAC,MAAQ,GAAI,IAAM,CAAC,GAAG,IAAI,MAAM,CAAC,MAAQ,IAAK,IAAM,CAAC,GAAG,IAAI,MAAM,CAAC,MAAQ,IAAK,IAAM,CAAC,IAAI,IAAI,MAAM,CAAC,MAAQ,IAAK,IAAM,CAAC,IAAI,IAAI,MAAM,CAAC,MAAQ,EAAE,IAAM,CAAC,IAAI,IAAI,OAEtT,iBAAkB,CAAC,CAAC,MAAQ,EAAE,IAAM,CAAC,GAAG,GAAG,KAAK,CAAC,MAAQ,IAAK,IAAM,CAAC,GAAG,GAAG,KAAK,CAAC,MAAQ,IAAK,IAAM,CAAC,GAAG,GAAG,KAAK,CAAC,MAAQ,IAAK,IAAM,CAAC,GAAG,IAAI,KAAK,CAAC,MAAQ,GAAI,IAAM,CAAC,GAAG,IAAI,KAAK,CAAC,MAAQ,IAAK,IAAM,CAAC,IAAI,IAAI,KAAK,CAAC,MAAQ,IAAK,IAAM,CAAC,IAAI,IAAI,KAAK,CAAC,MAAQ,IAAK,IAAM,CAAC,IAAI,IAAI,MAAM,CAAC,MAAQ,EAAE,IAAM,CAAC,IAAI,IAAI,OAElT,UAAa,CAAC,CAAC,MAAQ,EAAE,IAAM,CAAC,EAAE,EAAE,IAAI,CAAC,MAAQ,IAAK,IAAM,CAAC,GAAG,EAAE,KAAK,CAAC,MAAQ,IAAK,IAAM,CAAC,GAAG,EAAE,MAAM,CAAC,MAAQ,GAAI,IAAM,CAAC,IAAI,EAAE,MAAM,CAAC,MAAQ,IAAK,IAAM,CAAC,IAAI,EAAE,MAAM,CAAC,MAAQ,IAAK,IAAM,CAAC,IAAI,EAAE,MAAM,CAAC,MAAQ,GAAI,IAAM,CAAC,IAAI,GAAG,MAAM,CAAC,MAAQ,IAAK,IAAM,CAAC,IAAI,GAAG,KAAK,CAAC,MAAQ,IAAK,IAAM,CAAC,IAAI,GAAG,KAAK,CAAC,MAAQ,GAAI,IAAM,CAAC,IAAI,GAAG,KAAK,CAAC,MAAQ,IAAK,IAAM,CAAC,IAAI,IAAI,KAAK,CAAC,MAAQ,IAAK,IAAM,CAAC,IAAI,IAAI,KAAK,CAAC,MAAQ,GAAI,IAAM,CAAC,IAAI,IAAI,KAAK,CAAC,MAAQ,IAAK,IAAM,CAAC,IAAI,IAAI,KAAK,CAAC,MAAQ,IAAK,IAAM,CAAC,IAAI,IAAI,MAAM,CAAC,MAAQ,EAAE,IAAM,CAAC,IAAI,IAAI,O,qCChFjhB,IAAI6R,EAAa,EAAQ,OACrBC,EAAO,EAAQ,OAiHnB,SAASC,EAAWC,GAChB,MAAO,CACHA,EAAK,GAAK,IACVA,EAAK,GAAK,IACVA,EAAK,GAAK,IACVA,EAAK,GAEb,CAEA,SAASC,EAASD,GAEd,IADA,IAAIE,EAAKC,EAAM,IACNlN,EAAI,EAAGA,EAAI,IAAKA,EAGrBkN,IAAQ,MADRD,GADAA,EAAMF,EAAK/M,IACDmN,SAAS,MACCC,OAAQH,EAAIzM,QAEpC,OAAO0M,CACX,CAEA,SAASG,EAASN,GACd,MAAO,QAAUA,EAAK/F,KAAK,KAAO,GACtC,CApIAlM,EAAOC,QAEP,SAAyBuS,GAIrB,IAAIC,EAAUC,EAAUC,EACpBC,EAAQC,EAAMlC,EAAUG,EACxBF,EAAiBC,EAAO3L,EAEtBsN,IAAOA,EAAO,CAAC,GAErB5B,GAAW4B,EAAK5B,SAAW,IAAM,EACjCE,EAAS0B,EAAK1B,QAAU,OAExBH,EAAW6B,EAAK7B,YACDA,EAAW,OAE1B,GAAwB,iBAAbA,EAAuB,CAG9B,GAFAA,EAAWA,EAASmC,eAEfhB,EAAWnB,GACZ,MAAM1G,MAAM0G,EAAW,+BAG3BkC,EAAOf,EAAWnB,EAEtB,KAAO,KAAIoC,MAAMC,QAAQrC,GAIrB,MAAM1G,MAAM,8BAA+B0G,GAH3CkC,EAAOlC,EAASsC,OAIpB,CAEA,GAAIJ,EAAKnN,OAASkL,EAAU,EACxB,MAAM,IAAI3G,MACN0G,EAAS,6CAA6CkC,EAAKnN,QAc/DmL,EAVCkC,MAAMC,QAAQR,EAAK3B,OASS,IAAtB2B,EAAK3B,MAAMnL,OACV,CAAC,EAAG,GAGJ8M,EAAK3B,MAAMoC,QAXO,iBAAfT,EAAK3B,MACJ,CAAC2B,EAAK3B,MAAO2B,EAAK3B,OAGlB,CAAC,EAAG,GAWpB4B,EAAWI,EAAK/G,KAAI,SAASoH,GACzB,OAAOxQ,KAAKyQ,MAAMD,EAAEE,MAAQxC,EAChC,IAGAC,EAAM,GAAKnO,KAAKyO,IAAIzO,KAAK2Q,IAAIxC,EAAM,GAAI,GAAI,GAC3CA,EAAM,GAAKnO,KAAKyO,IAAIzO,KAAK2Q,IAAIxC,EAAM,GAAI,GAAI,GAE3C,IAAIyC,EAAQT,EAAK/G,KAAI,SAASoH,EAAGhO,GAC7B,IAAIkO,EAAQP,EAAK3N,GAAGkO,MAEhBnB,EAAOY,EAAK3N,GAAGqO,IAAIN,QAGvB,OAAoB,IAAhBhB,EAAKvM,QAAgBuM,EAAK,IAAM,GAAKA,EAAK,IAAM,IAGpDA,EAAK,GAAKpB,EAAM,IAAMA,EAAM,GAAKA,EAAM,IAAIuC,GAFhCnB,CAKf,IAOIvB,EAAS,GACb,IAAKxL,EAAI,EAAGA,EAAIuN,EAAS/M,OAAO,IAAKR,EAAG,CACpC0N,EAASH,EAASvN,EAAE,GAAKuN,EAASvN,GAClCwN,EAAWY,EAAMpO,GACjByN,EAASW,EAAMpO,EAAE,GAEjB,IAAK,IAAIsO,EAAI,EAAGA,EAAIZ,EAAQY,IAAK,CAC7B,IAAIC,EAAMD,EAAIZ,EACdlC,EAAOlF,KAAK,CACR9I,KAAKyQ,MAAMpB,EAAKW,EAAS,GAAIC,EAAO,GAAIc,IACxC/Q,KAAKyQ,MAAMpB,EAAKW,EAAS,GAAIC,EAAO,GAAIc,IACxC/Q,KAAKyQ,MAAMpB,EAAKW,EAAS,GAAIC,EAAO,GAAIc,IACxC1B,EAAKW,EAAS,GAAIC,EAAO,GAAIc,IAErC,CACJ,CAGA/C,EAAOlF,KAAKqH,EAAKA,EAAKnN,OAAS,GAAG6N,IAAIG,OAAO7C,EAAM,KAEpC,QAAXC,EAAkBJ,EAASA,EAAO5E,IAAKoG,GACvB,eAAXpB,EAAyBJ,EAASA,EAAO5E,IAAKyG,GACnC,UAAXzB,IAAoBJ,EAASA,EAAO5E,IAAKkG,IAElD,OAAOtB,CACX,C","sources":["webpack:///../node_modules/lerp/index.js","webpack:///../src/ol/renderer/webgl/FlowLayer.js","webpack:///../src/ol/layer/Flow.js","webpack:///./wind.js","webpack:///../node_modules/colormap/colorScale.js","webpack:///../node_modules/colormap/index.js"],"sourcesContent":["function lerp(v0, v1, t) {\n    return v0*(1-t)+v1*t\n}\nmodule.exports = lerp","/**\n * @module ol/renderer/webgl/FlowLayer\n */\nimport WebGLArrayBuffer from '../../webgl/Buffer.js';\nimport {DefaultUniform} from '../../webgl/Helper.js';\nimport {ARRAY_BUFFER, STATIC_DRAW} from '../../webgl.js';\nimport WebGLTileLayerRenderer from './TileLayer.js';\n\n/**\n * @typedef {import(\"../../layer/Flow.js\").default} LayerType\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} maxSpeed The maximum particle speed in the input data.\n * @property {number} [speedFactor=0.001] A larger factor increases the rate at which particles cross the screen.\n * @property {number} [particles=65536] The number of particles to render.\n * @property {number} [cacheSize=512] The texture cache size.\n * @property {string} tileVertexShader The flow tile vertex shader.\n * @property {string} tileFragmentShader The flow tile fragment shader.\n * @property {string} textureVertexShader Generic texture fragment shader.\n * @property {string} textureFragmentShader Generic texture fragment shader.\n * @property {string} particlePositionVertexShader The particle position vertex shader.\n * @property {string} particlePositionFragmentShader The particle position fragment shader.\n * @property {string} particleColorVertexShader The particle color vertex shader.\n * @property {string} particleColorFragmentShader The particle color fragment shader.\n */\n\n/**\n * Shader uniforms.\n * @enum {string}\n */\nexport const U = {\n  TEXTURE: 'u_texture',\n  VELOCITY_TEXTURE: 'u_velocityTexture',\n  POSITION_TEXTURE: 'u_positionTexture',\n  PARTICLE_COUNT_SQRT: 'u_particleCountSqrt',\n  MAX_SPEED: 'u_maxSpeed',\n  GAIN: 'u_gain',\n  OFFSET: 'u_offset',\n  IS_FLOAT: 'u_isFloat',\n  RANDOM_SEED: 'u_randomSeed',\n  SPEED_FACTOR: 'u_speedFactor',\n  DROP_RATE: 'u_dropRate',\n  DROP_RATE_BUMP: 'u_dropRateBump',\n  OPACITY: 'u_opacity',\n  ROTATION: DefaultUniform.ROTATION,\n  VIEWPORT_SIZE_PX: DefaultUniform.VIEWPORT_SIZE_PX,\n};\n\n/**\n * Shader attributes.\n * @enum {string}\n */\nexport const A = {\n  POSITION: 'a_position',\n  INDEX: 'a_index',\n};\n\n/**\n * Shader varyings.\n * @enum {string}\n */\nexport const V = {\n  POSITION: 'v_position',\n};\n\n/**\n * @classdesc\n * Experimental WebGL renderer for vector fields.\n * @extends {WebGLTileLayerRenderer<LayerType>}\n */\nclass FlowLayerRenderer extends WebGLTileLayerRenderer {\n  /**\n   * @param {LayerType} layer The tiled field layer.\n   * @param {Options} options The renderer options.\n   */\n  constructor(layer, options) {\n    super(layer, {\n      vertexShader: options.tileVertexShader,\n      fragmentShader: options.tileFragmentShader,\n      cacheSize: options.cacheSize,\n      // TODO: rework the post-processing logic\n      // see https://github.com/openlayers/openlayers/issues/16120\n      postProcesses: [{}],\n      uniforms: {\n        [U.MAX_SPEED]: options.maxSpeed,\n      },\n    });\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.particleColorFragmentShader_ = options.particleColorFragmentShader;\n\n    /**\n     * @type {WebGLTexture|null}\n     * @private\n     */\n    this.velocityTexture_ = null;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.particleCountSqrt_ = options.particles\n      ? Math.ceil(Math.sqrt(options.particles))\n      : 256;\n\n    /**\n     * @type {WebGLArrayBuffer}\n     * @private\n     */\n    this.particleIndexBuffer_;\n\n    /**\n     * @type {WebGLArrayBuffer}\n     * @private\n     */\n    this.quadBuffer_;\n\n    /**\n     * @type {WebGLProgram}\n     * @private\n     */\n    this.particlePositionProgram_;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.particlePositionVertexShader_ = options.particlePositionVertexShader;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.particlePositionFragmentShader_ =\n      options.particlePositionFragmentShader;\n\n    /**\n     * @type {WebGLTexture}\n     * @private\n     */\n    this.previousPositionTexture_;\n\n    /**\n     * @type {WebGLTexture}\n     * @private\n     */\n    this.nextPositionTexture_;\n\n    /**\n     * @type {WebGLProgram}\n     * @private\n     */\n    this.particleColorProgram_;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.particleColorVertexShader_ = options.particleColorVertexShader;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.particleColorFragmentShader_ = options.particleColorFragmentShader;\n\n    /**\n     * @type {WebGLProgram}\n     * @private\n     */\n    this.textureProgram_;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.textureVertexShader_ = options.textureVertexShader;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.textureFragmentShader_ = options.textureFragmentShader;\n\n    /**\n     * @type {WebGLTexture}\n     * @private\n     */\n    this.previousTrailsTexture_;\n\n    /**\n     * @type {WebGLTexture}\n     * @private\n     */\n    this.nextTrailsTexture_;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.fadeOpacity_ = 0.996; // how fast the particle trails fade on each frame\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxSpeed_ = options.maxSpeed;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.speedFactor_ = options.speedFactor || 0.001;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.dropRate_ = 0.003; // how often the particles move to a random place\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.dropRateBump_ = 0.01; // drop rate increase relative to individual particle speed\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.tempVec2_ = [0, 0];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderedWidth_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderedHeight_ = 0;\n  }\n\n  /**\n   * @override\n   */\n  afterHelperCreated() {\n    super.afterHelperCreated();\n    const helper = this.helper;\n\n    const gl = helper.getGL();\n    this.framebuffer_ = gl.createFramebuffer();\n\n    const particleCount = this.particleCountSqrt_ * this.particleCountSqrt_;\n    const particleIndices = new Float32Array(particleCount);\n    for (let i = 0; i < particleCount; ++i) {\n      particleIndices[i] = i;\n    }\n    const particleIndexBuffer = new WebGLArrayBuffer(ARRAY_BUFFER, STATIC_DRAW);\n    particleIndexBuffer.setArray(particleIndices);\n    helper.flushBufferData(particleIndexBuffer);\n    this.particleIndexBuffer_ = particleIndexBuffer;\n\n    const quadIndices = new Float32Array([0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1]);\n    const quadBuffer = new WebGLArrayBuffer(ARRAY_BUFFER, STATIC_DRAW);\n    quadBuffer.setArray(quadIndices);\n    helper.flushBufferData(quadBuffer);\n    this.quadBuffer_ = quadBuffer;\n\n    const particlePositions = new Uint8Array(particleCount * 4);\n    for (let i = 0; i < particlePositions.length; ++i) {\n      particlePositions[i] = Math.floor(Math.random() * 256);\n    }\n\n    this.previousPositionTexture_ = helper.createTexture(\n      [this.particleCountSqrt_, this.particleCountSqrt_],\n      particlePositions,\n      null,\n      true,\n    );\n\n    this.nextPositionTexture_ = helper.createTexture(\n      [this.particleCountSqrt_, this.particleCountSqrt_],\n      particlePositions,\n      null,\n      true,\n    );\n\n    this.particlePositionProgram_ = helper.getProgram(\n      this.particlePositionFragmentShader_,\n      this.particlePositionVertexShader_,\n    );\n\n    this.particleColorProgram_ = helper.getProgram(\n      this.particleColorFragmentShader_,\n      this.particleColorVertexShader_,\n    );\n\n    this.textureProgram_ = helper.getProgram(\n      this.textureFragmentShader_,\n      this.textureVertexShader_,\n    );\n  }\n\n  createSizeDependentTextures_() {\n    const helper = this.helper;\n    const gl = helper.getGL();\n    const canvas = helper.getCanvas();\n    const screenWidth = canvas.width;\n    const screenHeight = canvas.height;\n\n    const blank = new Uint8Array(screenWidth * screenHeight * 4);\n\n    if (this.nextTrailsTexture_) {\n      gl.deleteTexture(this.nextTrailsTexture_);\n    }\n    this.nextTrailsTexture_ = helper.createTexture(\n      [screenWidth, screenHeight],\n      blank,\n      null,\n      true,\n    );\n\n    if (this.previousTrailsTexture_) {\n      gl.deleteTexture(this.previousTrailsTexture_);\n    }\n    this.previousTrailsTexture_ = helper.createTexture(\n      [screenWidth, screenHeight],\n      blank,\n      null,\n      true,\n    );\n  }\n\n  /**\n   * @override\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  beforeFinalize(frameState) {\n    const helper = this.helper;\n    const gl = helper.getGL();\n    const canvas = helper.getCanvas();\n    const screenWidth = canvas.width;\n    const screenHeight = canvas.height;\n\n    if (\n      this.renderedWidth_ != screenWidth ||\n      this.renderedHeight_ != screenHeight\n    ) {\n      this.createSizeDependentTextures_();\n    }\n\n    const size = [screenWidth, screenHeight];\n\n    // copy current frame buffer to the velocity texture\n    this.velocityTexture_ = helper.createTexture(\n      size,\n      null,\n      this.velocityTexture_,\n    );\n    gl.copyTexImage2D(\n      gl.TEXTURE_2D,\n      0,\n      gl.RGBA,\n      0,\n      0,\n      screenWidth,\n      screenHeight,\n      0,\n    );\n\n    this.drawParticleTrails_(frameState);\n    this.updateParticlePositions_(frameState);\n\n    frameState.animate = true;\n    this.renderedWidth_ = screenWidth;\n    this.renderedHeight_ = screenHeight;\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  drawParticleTrails_(frameState) {\n    const helper = this.helper;\n    const gl = helper.getGL();\n\n    helper.bindFrameBuffer(this.framebuffer_, this.nextTrailsTexture_);\n\n    this.drawTexture_(this.previousTrailsTexture_, this.fadeOpacity_);\n    this.drawParticleColor_(frameState);\n\n    helper.bindInitialFrameBuffer();\n    gl.clearColor(0.0, 0.0, 0.0, 0.0);\n    gl.clear(gl.COLOR_BUFFER_BIT);\n\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n    this.drawTexture_(this.nextTrailsTexture_, 1);\n    gl.disable(gl.BLEND);\n\n    const current = this.nextTrailsTexture_;\n    this.nextTrailsTexture_ = this.previousTrailsTexture_;\n    this.previousTrailsTexture_ = current;\n  }\n\n  /**\n   * @param {WebGLTexture} texture The texture to draw.\n   * @param {number} opacity The opacity.\n   */\n  drawTexture_(texture, opacity) {\n    const helper = this.helper;\n    const gl = helper.getGL();\n\n    helper.useProgram(this.textureProgram_);\n    helper.bindTexture(texture, 0, U.TEXTURE);\n    helper.bindAttribute(this.quadBuffer_, A.POSITION, 2);\n    this.helper.setUniformFloatValue(U.OPACITY, opacity);\n\n    gl.drawArrays(gl.TRIANGLES, 0, 6);\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  drawParticleColor_(frameState) {\n    const helper = this.helper;\n    const gl = helper.getGL();\n\n    helper.useProgram(this.particleColorProgram_);\n\n    const particleCount = this.particleCountSqrt_ * this.particleCountSqrt_;\n\n    helper.bindAttribute(this.particleIndexBuffer_, A.INDEX, 1);\n\n    helper.bindTexture(this.previousPositionTexture_, 0, U.POSITION_TEXTURE);\n    helper.bindTexture(this.velocityTexture_, 1, U.VELOCITY_TEXTURE);\n\n    this.helper.setUniformFloatValue(\n      U.PARTICLE_COUNT_SQRT,\n      this.particleCountSqrt_,\n    );\n\n    const rotation = this.tempVec2_;\n    rotation[0] = Math.cos(-frameState.viewState.rotation);\n    rotation[1] = Math.sin(-frameState.viewState.rotation);\n    this.helper.setUniformFloatVec2(U.ROTATION, rotation);\n\n    this.helper.setUniformFloatValue(U.MAX_SPEED, this.maxSpeed_);\n\n    gl.drawArrays(gl.POINTS, 0, particleCount);\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  updateParticlePositions_(frameState) {\n    const helper = this.helper;\n    const gl = helper.getGL();\n\n    helper.useProgram(this.particlePositionProgram_);\n    gl.viewport(0, 0, this.particleCountSqrt_, this.particleCountSqrt_);\n    helper.bindFrameBuffer(this.framebuffer_, this.nextPositionTexture_);\n\n    helper.bindTexture(this.previousPositionTexture_, 0, U.POSITION_TEXTURE);\n    helper.bindTexture(this.velocityTexture_, 1, U.VELOCITY_TEXTURE);\n    helper.bindAttribute(this.quadBuffer_, A.POSITION, 2);\n\n    helper.setUniformFloatValue(U.RANDOM_SEED, Math.random());\n    helper.setUniformFloatValue(U.SPEED_FACTOR, this.speedFactor_);\n    helper.setUniformFloatValue(U.DROP_RATE, this.dropRate_);\n    helper.setUniformFloatValue(U.DROP_RATE_BUMP, this.dropRateBump_);\n\n    const rotation = this.tempVec2_;\n    rotation[0] = Math.cos(-frameState.viewState.rotation);\n    rotation[1] = Math.sin(-frameState.viewState.rotation);\n    this.helper.setUniformFloatVec2(U.ROTATION, rotation);\n\n    const size = frameState.size;\n    this.helper.setUniformFloatVec2(U.VIEWPORT_SIZE_PX, [size[0], size[1]]);\n\n    gl.drawArrays(gl.TRIANGLES, 0, 6);\n\n    const current = this.nextPositionTexture_;\n    this.nextPositionTexture_ = this.previousPositionTexture_;\n    this.previousPositionTexture_ = current;\n  }\n}\n\nexport default FlowLayerRenderer;\n","/**\n * @module ol/layer/Flow\n */\nimport {ColorType} from '../expr/expression.js';\nimport {\n  getStringNumberEquivalent,\n  newCompilationContext,\n  uniformNameForVariable,\n} from '../expr/gpu.js';\nimport {expressionToGlsl} from '../render/webgl/compileUtil.js';\nimport FlowLayerRenderer, {A, U, V} from '../renderer/webgl/FlowLayer.js';\nimport {Attributes as BA, Uniforms as BU} from '../renderer/webgl/TileLayer.js';\nimport BaseTileLayer from './BaseTile.js';\nimport LayerProperty from './Property.js';\n\n/**\n * @typedef {import(\"../source/DataTile.js\").default} SourceType\n */\n\n/**\n * @typedef {Object} Style\n * Translates tile data to rendered pixels.\n *\n * @property {Object<string, (string|number)>} [variables] Style variables.  Each variable must hold a number or string.  These\n * variables can be used in the `color` {@link import(\"../expr/expression.js\").ExpressionValue expression} using\n * the `['var', 'varName']` operator.  To update style variables, use the {@link import(\"./WebGLTile.js\").default#updateStyleVariables} method.\n * @property {import(\"../expr/expression.js\").ExpressionValue} [color] An expression applied to color values.\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} maxSpeed The maximum particle speed.\n * @property {number} [speedFactor=0.001] A larger factor increases the rate at which particles cross the screen.\n * @property {number} [particles=65536] The number of particles to render.\n * @property {Style} [style] Style to apply to the layer.\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {SourceType} [source] Source for this layer.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map~Map#addLayer}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {number} [cacheSize=512] The internal texture cache size.  This needs to be large enough to render\n * two zoom levels worth of tiles.\n */\n\nconst tileVertexShader = `\n  attribute vec2 ${BA.TEXTURE_COORD};\n  uniform mat4 ${BU.TILE_TRANSFORM};\n  uniform float ${BU.TEXTURE_PIXEL_WIDTH};\n  uniform float ${BU.TEXTURE_PIXEL_HEIGHT};\n  uniform float ${BU.TEXTURE_RESOLUTION};\n  uniform float ${BU.TEXTURE_ORIGIN_X};\n  uniform float ${BU.TEXTURE_ORIGIN_Y};\n  uniform float ${BU.DEPTH};\n\n  varying vec2 v_textureCoord;\n  varying vec2 v_mapCoord;\n\n  void main() {\n    v_textureCoord = ${BA.TEXTURE_COORD};\n    v_mapCoord = vec2(\n      ${BU.TEXTURE_ORIGIN_X} + ${BU.TEXTURE_RESOLUTION} * ${BU.TEXTURE_PIXEL_WIDTH} * v_textureCoord[0],\n      ${BU.TEXTURE_ORIGIN_Y} - ${BU.TEXTURE_RESOLUTION} * ${BU.TEXTURE_PIXEL_HEIGHT} * v_textureCoord[1]\n    );\n    gl_Position = ${BU.TILE_TRANSFORM} * vec4(${BA.TEXTURE_COORD}, ${BU.DEPTH}, 1.0);\n  }\n`;\n\nconst tileFragmentShader = `\n  #ifdef GL_FRAGMENT_PRECISION_HIGH\n  precision highp float;\n  #else\n  precision mediump float;\n  #endif\n\n  uniform vec4 ${BU.RENDER_EXTENT};\n  uniform float ${U.MAX_SPEED};\n  uniform sampler2D ${BU.TILE_TEXTURE_ARRAY}[1];\n\n  varying vec2 v_textureCoord;\n  varying vec2 v_mapCoord;\n\n  void main() {\n    if (\n      v_mapCoord[0] < ${BU.RENDER_EXTENT}[0] ||\n      v_mapCoord[1] < ${BU.RENDER_EXTENT}[1] ||\n      v_mapCoord[0] > ${BU.RENDER_EXTENT}[2] ||\n      v_mapCoord[1] > ${BU.RENDER_EXTENT}[3]\n    ) {\n      discard;\n    }\n\n    vec4 velocity = texture2D(${BU.TILE_TEXTURE_ARRAY}[0],  v_textureCoord);\n    gl_FragColor = vec4((velocity.xy + ${U.MAX_SPEED}) / (2.0 * ${U.MAX_SPEED}), 0, 1);\n  }\n`;\n\n/**\n * Sets up a varying position for rendering textures.\n */\nconst quadVertexShader = `\n  #ifdef GL_FRAGMENT_PRECISION_HIGH\n  precision highp float;\n  #else\n  precision mediump float;\n  #endif\n\n  attribute vec2 ${A.POSITION};\n\n  varying vec2 ${V.POSITION};\n\n  void main() {\n    ${V.POSITION} = ${A.POSITION};\n    gl_Position = vec4(1.0 - 2.0 * ${A.POSITION}, 0, 1);\n  }\n`;\n\n/**\n * Sampes a texture and renders it with a new opacity.\n */\nconst textureFragmentShader = `\n  #ifdef GL_FRAGMENT_PRECISION_HIGH\n  precision highp float;\n  #else\n  precision mediump float;\n  #endif\n\n  uniform sampler2D ${U.TEXTURE};\n  uniform float ${U.OPACITY};\n\n  varying vec2 ${V.POSITION};\n\n  void main() {\n    vec4 color = texture2D(${U.TEXTURE}, 1.0 - ${V.POSITION});\n    gl_FragColor = vec4(floor(255.0 * color * ${U.OPACITY}) / 255.0);\n  }\n`;\n\n/**\n * Samples current particle positions, determines new positions based on velocity, and\n * encodes the new position as a color.\n */\nconst particlePositionFragmentShader = `\n  #ifdef GL_FRAGMENT_PRECISION_HIGH\n  precision highp float;\n  #else\n  precision mediump float;\n  #endif\n\n  uniform sampler2D ${U.POSITION_TEXTURE};\n  uniform sampler2D ${U.VELOCITY_TEXTURE};\n  uniform float ${U.RANDOM_SEED};\n  uniform float ${U.SPEED_FACTOR};\n  uniform float ${U.DROP_RATE};\n  uniform float ${U.DROP_RATE_BUMP};\n  uniform vec2 ${U.ROTATION};\n  uniform vec2 ${U.VIEWPORT_SIZE_PX};\n\n  varying vec2 ${V.POSITION};\n\n  // pseudo-random generator\n  const vec3 randConstants = vec3(12.9898, 78.233, 4375.85453);\n\n  float rand(const vec2 co) {\n    float t = dot(randConstants.xy, co);\n    return fract(sin(t) * (randConstants.z + t));\n  }\n\n  void main() {\n    vec4 positionColor = texture2D(${U.POSITION_TEXTURE}, ${V.POSITION});\n\n    // decode particle position from pixel RGBA\n    vec2 particlePosition = vec2(\n      positionColor.r / 255.0 + positionColor.b,\n      positionColor.g / 255.0 + positionColor.a\n    );\n\n    vec4 velocityColor = texture2D(${U.VELOCITY_TEXTURE}, particlePosition);\n    if (velocityColor.a == 0.0) {\n      discard;\n    }\n\n    float vx = 2.0 * velocityColor.r - 1.0;\n    float vy = 2.0 * velocityColor.g - 1.0;\n\n    // normalized veloicty (magnitude 0 - 1)\n    vec2 velocity = vec2(\n      vx * ${U.ROTATION}.x - vy * ${U.ROTATION}.y,\n      vx * ${U.ROTATION}.y + vy * ${U.ROTATION}.x\n    );\n\n    // account for aspect ratio (square particle position texture, non-square map)\n    float aspectRatio = ${U.VIEWPORT_SIZE_PX}.x / ${U.VIEWPORT_SIZE_PX}.y;\n    vec2 offset = vec2(velocity.x / aspectRatio, velocity.y) * ${U.SPEED_FACTOR};\n\n    // update particle position, wrapping around the edge\n    particlePosition = fract(1.0 + particlePosition + offset);\n\n    // a random seed to use for the particle drop\n    vec2 seed = (particlePosition + ${V.POSITION}) * ${U.RANDOM_SEED};\n\n    // drop rate is a chance a particle will restart at random position, to avoid degeneration\n    float dropRate = ${U.DROP_RATE} + length(velocity) * ${U.DROP_RATE_BUMP};\n    float drop = step(1.0 - dropRate, rand(seed));\n\n    vec2 randomPosition = vec2(rand(seed + 1.3), rand(seed + 2.1));\n    particlePosition = mix(particlePosition, randomPosition, drop);\n\n    // encode the new particle position back into RGBA\n    gl_FragColor = vec4(\n      fract(particlePosition * 255.0),\n      floor(particlePosition * 255.0) / 255.0\n    );\n  }\n`;\n\n/**\n * Samples the particle position texture to decode the particle position\n * based on pixel color.\n */\nconst particleColorVertexShader = `\n  #ifdef GL_FRAGMENT_PRECISION_HIGH\n  precision highp float;\n  #else\n  precision mediump float;\n  #endif\n\n  attribute float ${A.INDEX};\n\n  uniform sampler2D ${U.POSITION_TEXTURE};\n  uniform float ${U.PARTICLE_COUNT_SQRT};\n\n  varying vec2 ${V.POSITION};\n\n  void main() {\n    vec4 color = texture2D(\n      ${U.POSITION_TEXTURE},\n      vec2(\n        fract(${A.INDEX} / ${U.PARTICLE_COUNT_SQRT}),\n        floor(${A.INDEX} / ${U.PARTICLE_COUNT_SQRT}) / ${U.PARTICLE_COUNT_SQRT}\n      )\n    );\n\n    ${V.POSITION} = vec2(\n      color.r / 255.0 + color.b,\n      color.g / 255.0 + color.a\n    );\n\n    gl_PointSize = 1.0;\n    gl_Position = vec4(\n      2.0 * ${V.POSITION}.x - 1.0,\n      2.0 * ${V.POSITION}.y - 1.0,\n      0,\n      1\n    );\n  }\n`;\n\n/**\n * @typedef {Object} ParsedStyle\n * @property {string} tileVertexShader The flow tile vertex shader.\n * @property {string} tileFragmentShader The flow tile fragment shader.\n * @property {string} textureVertexShader Generic texture fragment shader.\n * @property {string} textureFragmentShader Generic texture fragment shader.\n * @property {string} particlePositionVertexShader The particle position vertex shader.\n * @property {string} particlePositionFragmentShader The particle position fragment shader.\n * @property {string} particleColorVertexShader The particle color vertex shader.\n * @property {string} particleColorFragmentShader The particle color fragment shader.\n */\n\n/**\n * @param {Style} style The layer style.\n * @return {ParsedStyle} Shaders and uniforms generated from the style.\n */\nfunction parseStyle(style) {\n  const context = newCompilationContext();\n  const pipeline = [];\n\n  if (style.color !== undefined) {\n    const color = expressionToGlsl(context, style.color, ColorType);\n    pipeline.push(`color = ${color};`);\n  }\n\n  const variableNames = Object.keys(context.variables);\n  if (variableNames.length > 1 && !style.variables) {\n    throw new Error(\n      `Missing variables in style (expected ${context.variables})`,\n    );\n  }\n\n  /** @type {Object<string,import(\"../webgl/Helper\").UniformValue>} */\n  const uniforms = {};\n\n  for (const variableName of variableNames) {\n    if (!(variableName in style.variables)) {\n      throw new Error(`Missing '${variableName}' in style variables`);\n    }\n\n    const uniformName = uniformNameForVariable(variableName);\n    uniforms[uniformName] = function () {\n      let value = style.variables[variableName];\n      if (typeof value === 'string') {\n        value = getStringNumberEquivalent(value);\n      }\n      return value !== undefined ? value : -9999999; // to avoid matching with the first string literal\n    };\n  }\n\n  const uniformDeclarations = Object.keys(uniforms).map(function (name) {\n    return `uniform float ${name};`;\n  });\n\n  const functionDefintions = Object.keys(context.functions).map(\n    function (name) {\n      return context.functions[name];\n    },\n  );\n\n  const particleColorFragmentShader = `\n    #ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    #else\n    precision mediump float;\n    #endif\n\n    uniform sampler2D ${U.VELOCITY_TEXTURE};\n    uniform float ${U.MAX_SPEED};\n    uniform vec2 ${U.ROTATION};\n\n    ${uniformDeclarations.join('\\n')}\n\n    varying vec2 ${V.POSITION};\n    \n    ${functionDefintions.join('\\n')}\n\n    void main() {\n      vec4 velocityColor = texture2D(${U.VELOCITY_TEXTURE}, ${V.POSITION});\n\n      float vx = mix(-${U.MAX_SPEED}, ${U.MAX_SPEED}, velocityColor.r);\n      float vy = mix(-${U.MAX_SPEED}, ${U.MAX_SPEED}, velocityColor.g);\n\n      vec2 velocity = vec2(\n        vx * ${U.ROTATION}.x - vy * ${U.ROTATION}.y,\n        vx * ${U.ROTATION}.y + vy * ${U.ROTATION}.x\n      );\n\n      float a_prop_speed = length(velocity);\n\n      vec4 color;\n\n      ${pipeline.join('\\n')}\n\n      if (color.a == 0.0) {\n        discard;\n      }\n\n      gl_FragColor = color;\n    }\n  `;\n\n  return {\n    tileVertexShader,\n    tileFragmentShader,\n    particleColorVertexShader,\n    particleColorFragmentShader,\n    particlePositionVertexShader: quadVertexShader,\n    particlePositionFragmentShader,\n    textureVertexShader: quadVertexShader,\n    textureFragmentShader,\n  };\n}\n\n/**\n * @type {Array<SourceType>}\n */\nconst sources = [];\n\n/**\n * @classdesc\n * Experimental layer that renders particles moving through a vector field.\n *\n * @extends BaseTileLayer<SourceType, FlowLayerRenderer>\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n */\nclass FlowLayer extends BaseTileLayer {\n  /**\n   * @param {Options} options Flow layer options.\n   */\n  constructor(options) {\n    const baseOptions = Object.assign({}, options);\n    delete baseOptions.maxSpeed;\n    delete baseOptions.speedFactor;\n    delete baseOptions.particles;\n    super(baseOptions);\n\n    /**\n     * @type {Style}\n     * @private\n     */\n    this.style_ = options.style || {};\n\n    if (!(options.maxSpeed > 0)) {\n      throw new Error('maxSpeed is required');\n    }\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxSpeed_ = options.maxSpeed;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.speedFactor_ = options.speedFactor;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.particles_ = options.particles;\n\n    /**\n     * @type {Object<string, (string|number)>}\n     * @private\n     */\n    this.styleVariables_ = this.style_.variables || {};\n\n    this.addChangeListener(LayerProperty.SOURCE, this.handleSourceUpdate_);\n  }\n\n  /**\n   * @private\n   */\n  handleSourceUpdate_() {\n    if (this.hasRenderer()) {\n      this.getRenderer().clearCache();\n    }\n  }\n\n  /**\n   * Update any variables used by the layer style and trigger a re-render.\n   * @param {Object<string, number>} variables Variables to update.\n   */\n  updateStyleVariables(variables) {\n    Object.assign(this.styleVariables_, variables);\n    this.changed();\n  }\n\n  /**\n   * Gets the sources for this layer, for a given extent and resolution.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @return {Array<SourceType>} Sources.\n   */\n  getSources(extent, resolution) {\n    const source = this.getSource();\n    sources[0] = source;\n    return sources;\n  }\n\n  /**\n   * @override\n   */\n  createRenderer() {\n    const parsedStyle = parseStyle(this.style_);\n\n    return new FlowLayerRenderer(this, {\n      ...parsedStyle,\n      cacheSize: this.getCacheSize(),\n      maxSpeed: this.maxSpeed_,\n      speedFactor: this.speedFactor_,\n      particles: this.particles_,\n    });\n  }\n}\n\n/**\n * Clean up underlying WebGL resources.\n * @function\n */\nFlowLayer.prototype.dispose;\n\nexport default FlowLayer;\n","import colormap from 'colormap';\nimport Map from '../src/ol/Map.js';\nimport View from '../src/ol/View.js';\nimport GeoJSON from '../src/ol/format/GeoJSON.js';\nimport {DEVICE_PIXEL_RATIO} from '../src/ol/has.js';\nimport Flow from '../src/ol/layer/Flow.js';\nimport WebGLVectorLayer from '../src/ol/layer/WebGLVector.js';\nimport {get as getProjection, transform} from '../src/ol/proj.js';\nimport DataTileSource from '../src/ol/source/DataTile.js';\nimport VectorSource from '../src/ol/source/Vector.js';\nimport {createXYZ, wrapX} from '../src/ol/tilegrid.js';\n\nconst windData = new Promise((resolve, reject) => {\n  const image = new Image();\n  image.onload = () => {\n    const canvas = document.createElement('canvas');\n    const width = image.width;\n    const height = image.height;\n    canvas.width = width;\n    canvas.height = height;\n\n    const context = canvas.getContext('2d');\n    context.drawImage(image, 0, 0);\n    const data = context.getImageData(0, 0, width, height).data;\n    resolve({data, width, height});\n  };\n  image.onerror = () => {\n    reject(new Error('failed to load'));\n  };\n  image.src = './data/wind.png';\n});\n\nfunction bilinearInterpolation(xAlong, yAlong, v11, v21, v12, v22) {\n  const q11 = (1 - xAlong) * (1 - yAlong) * v11;\n  const q21 = xAlong * (1 - yAlong) * v21;\n  const q12 = (1 - xAlong) * yAlong * v12;\n  const q22 = xAlong * yAlong * v22;\n  return q11 + q21 + q12 + q22;\n}\n\nfunction interpolatePixels(xAlong, yAlong, p11, p21, p12, p22) {\n  return p11.map((_, i) =>\n    bilinearInterpolation(xAlong, yAlong, p11[i], p21[i], p12[i], p22[i]),\n  );\n}\n\nconst dataTileGrid = createXYZ();\nconst dataTileSize = 256;\n\nconst inputImageProjection = getProjection('EPSG:4326');\nconst dataTileProjection = getProjection('EPSG:3857');\n\nconst inputBands = 4;\nconst dataBands = 3;\n\n// range of wind velocities\n// these values are stretched between 0 and 255 in the png\nconst minU = -21.32;\nconst maxU = 26.8;\nconst deltaU = maxU - minU;\nconst minV = -21.57;\nconst maxV = 21.42;\nconst deltaV = maxV - minV;\n\nconst wind = new DataTileSource({\n  // transition must be 0, see https://github.com/openlayers/openlayers/issues/16119\n  transition: 0,\n  wrapX: true,\n  async loader(z, x, y) {\n    const {\n      data: inputData,\n      width: inputWidth,\n      height: inputHeight,\n    } = await windData;\n\n    const tileCoord = wrapX(dataTileGrid, [z, x, y], dataTileProjection);\n    const extent = dataTileGrid.getTileCoordExtent(tileCoord);\n    const resolution = dataTileGrid.getResolution(z);\n    const data = new Float32Array(dataTileSize * dataTileSize * dataBands);\n    for (let row = 0; row < dataTileSize; ++row) {\n      let offset = row * dataTileSize * dataBands;\n      const mapY = extent[3] - row * resolution;\n      for (let col = 0; col < dataTileSize; ++col) {\n        const mapX = extent[0] + col * resolution;\n        const [lon, lat] = transform(\n          [mapX, mapY],\n          dataTileProjection,\n          inputImageProjection,\n        );\n\n        const x = (inputWidth * (lon + 180)) / 360;\n        let x1 = Math.floor(x);\n        let x2 = Math.ceil(x);\n        const xAlong = x - x1;\n        if (x1 < 0) {\n          x1 += inputWidth;\n        }\n        if (x2 >= inputWidth) {\n          x2 -= inputWidth;\n        }\n\n        const y = (inputHeight * (90 - lat)) / 180;\n        let y1 = Math.floor(y);\n        let y2 = Math.ceil(y);\n        const yAlong = y - y1;\n        if (y1 < 0) {\n          y1 = 0;\n        }\n        if (y2 >= inputHeight) {\n          y2 = inputHeight - 1;\n        }\n\n        const corners = [\n          [x1, y1],\n          [x2, y1],\n          [x1, y2],\n          [x2, y2],\n        ];\n\n        const pixels = corners.map(([cx, cy]) => {\n          const inputOffset = (cy * 360 + cx) * inputBands;\n          return [inputData[inputOffset], inputData[inputOffset + 1]];\n        });\n\n        const interpolated = interpolatePixels(xAlong, yAlong, ...pixels);\n        const u = minU + (deltaU * interpolated[0]) / 255;\n        const v = minV + (deltaV * interpolated[1]) / 255;\n\n        data[offset] = u;\n        data[offset + 1] = v;\n        offset += dataBands;\n      }\n    }\n    return data;\n  },\n});\n\nconst maxSpeed = 20;\nconst colors = colormap({\n  colormap: 'viridis',\n  nshades: 10,\n  alpha: 0.75,\n  format: 'rgba',\n});\nconst colorStops = [];\nfor (let i = 0; i < colors.length; ++i) {\n  colorStops.push((i * maxSpeed) / (colors.length - 1));\n  colorStops.push(colors[i]);\n}\n\nconst map = new Map({\n  target: 'map',\n  pixelRatio: Math.min(DEVICE_PIXEL_RATIO, 2),\n  layers: [\n    new WebGLVectorLayer({\n      source: new VectorSource({\n        url: 'https://openlayers.org/data/vector/ocean.json',\n        format: new GeoJSON(),\n      }),\n      style: {\n        'fill-color': '#555555',\n      },\n    }),\n    new Flow({\n      source: wind,\n      maxSpeed,\n      style: {\n        color: ['interpolate', ['linear'], ['get', 'speed'], ...colorStops],\n      },\n    }),\n  ],\n  view: new View({\n    center: [0, 0],\n    zoom: 0,\n  }),\n});\n","module.exports={\n\t\"jet\":[{\"index\":0,\"rgb\":[0,0,131]},{\"index\":0.125,\"rgb\":[0,60,170]},{\"index\":0.375,\"rgb\":[5,255,255]},{\"index\":0.625,\"rgb\":[255,255,0]},{\"index\":0.875,\"rgb\":[250,0,0]},{\"index\":1,\"rgb\":[128,0,0]}],\n\n\t\"hsv\":[{\"index\":0,\"rgb\":[255,0,0]},{\"index\":0.169,\"rgb\":[253,255,2]},{\"index\":0.173,\"rgb\":[247,255,2]},{\"index\":0.337,\"rgb\":[0,252,4]},{\"index\":0.341,\"rgb\":[0,252,10]},{\"index\":0.506,\"rgb\":[1,249,255]},{\"index\":0.671,\"rgb\":[2,0,253]},{\"index\":0.675,\"rgb\":[8,0,253]},{\"index\":0.839,\"rgb\":[255,0,251]},{\"index\":0.843,\"rgb\":[255,0,245]},{\"index\":1,\"rgb\":[255,0,6]}],\n\n\t\"hot\":[{\"index\":0,\"rgb\":[0,0,0]},{\"index\":0.3,\"rgb\":[230,0,0]},{\"index\":0.6,\"rgb\":[255,210,0]},{\"index\":1,\"rgb\":[255,255,255]}],\n\n\t\"spring\":[{\"index\":0,\"rgb\":[255,0,255]},{\"index\":1,\"rgb\":[255,255,0]}],\n\n\t\"summer\":[{\"index\":0,\"rgb\":[0,128,102]},{\"index\":1,\"rgb\":[255,255,102]}],\n\n\t\"autumn\":[{\"index\":0,\"rgb\":[255,0,0]},{\"index\":1,\"rgb\":[255,255,0]}],\n\n\t\"winter\":[{\"index\":0,\"rgb\":[0,0,255]},{\"index\":1,\"rgb\":[0,255,128]}],\n\n\t\"bone\":[{\"index\":0,\"rgb\":[0,0,0]},{\"index\":0.376,\"rgb\":[84,84,116]},{\"index\":0.753,\"rgb\":[169,200,200]},{\"index\":1,\"rgb\":[255,255,255]}],\n\n\t\"copper\":[{\"index\":0,\"rgb\":[0,0,0]},{\"index\":0.804,\"rgb\":[255,160,102]},{\"index\":1,\"rgb\":[255,199,127]}],\n\n\t\"greys\":[{\"index\":0,\"rgb\":[0,0,0]},{\"index\":1,\"rgb\":[255,255,255]}],\n\n\t\"yignbu\":[{\"index\":0,\"rgb\":[8,29,88]},{\"index\":0.125,\"rgb\":[37,52,148]},{\"index\":0.25,\"rgb\":[34,94,168]},{\"index\":0.375,\"rgb\":[29,145,192]},{\"index\":0.5,\"rgb\":[65,182,196]},{\"index\":0.625,\"rgb\":[127,205,187]},{\"index\":0.75,\"rgb\":[199,233,180]},{\"index\":0.875,\"rgb\":[237,248,217]},{\"index\":1,\"rgb\":[255,255,217]}],\n\n\t\"greens\":[{\"index\":0,\"rgb\":[0,68,27]},{\"index\":0.125,\"rgb\":[0,109,44]},{\"index\":0.25,\"rgb\":[35,139,69]},{\"index\":0.375,\"rgb\":[65,171,93]},{\"index\":0.5,\"rgb\":[116,196,118]},{\"index\":0.625,\"rgb\":[161,217,155]},{\"index\":0.75,\"rgb\":[199,233,192]},{\"index\":0.875,\"rgb\":[229,245,224]},{\"index\":1,\"rgb\":[247,252,245]}],\n\n\t\"yiorrd\":[{\"index\":0,\"rgb\":[128,0,38]},{\"index\":0.125,\"rgb\":[189,0,38]},{\"index\":0.25,\"rgb\":[227,26,28]},{\"index\":0.375,\"rgb\":[252,78,42]},{\"index\":0.5,\"rgb\":[253,141,60]},{\"index\":0.625,\"rgb\":[254,178,76]},{\"index\":0.75,\"rgb\":[254,217,118]},{\"index\":0.875,\"rgb\":[255,237,160]},{\"index\":1,\"rgb\":[255,255,204]}],\n\n\t\"bluered\":[{\"index\":0,\"rgb\":[0,0,255]},{\"index\":1,\"rgb\":[255,0,0]}],\n\n\t\"rdbu\":[{\"index\":0,\"rgb\":[5,10,172]},{\"index\":0.35,\"rgb\":[106,137,247]},{\"index\":0.5,\"rgb\":[190,190,190]},{\"index\":0.6,\"rgb\":[220,170,132]},{\"index\":0.7,\"rgb\":[230,145,90]},{\"index\":1,\"rgb\":[178,10,28]}],\n\n\t\"picnic\":[{\"index\":0,\"rgb\":[0,0,255]},{\"index\":0.1,\"rgb\":[51,153,255]},{\"index\":0.2,\"rgb\":[102,204,255]},{\"index\":0.3,\"rgb\":[153,204,255]},{\"index\":0.4,\"rgb\":[204,204,255]},{\"index\":0.5,\"rgb\":[255,255,255]},{\"index\":0.6,\"rgb\":[255,204,255]},{\"index\":0.7,\"rgb\":[255,153,255]},{\"index\":0.8,\"rgb\":[255,102,204]},{\"index\":0.9,\"rgb\":[255,102,102]},{\"index\":1,\"rgb\":[255,0,0]}],\n\n\t\"rainbow\":[{\"index\":0,\"rgb\":[150,0,90]},{\"index\":0.125,\"rgb\":[0,0,200]},{\"index\":0.25,\"rgb\":[0,25,255]},{\"index\":0.375,\"rgb\":[0,152,255]},{\"index\":0.5,\"rgb\":[44,255,150]},{\"index\":0.625,\"rgb\":[151,255,0]},{\"index\":0.75,\"rgb\":[255,234,0]},{\"index\":0.875,\"rgb\":[255,111,0]},{\"index\":1,\"rgb\":[255,0,0]}],\n\n\t\"portland\":[{\"index\":0,\"rgb\":[12,51,131]},{\"index\":0.25,\"rgb\":[10,136,186]},{\"index\":0.5,\"rgb\":[242,211,56]},{\"index\":0.75,\"rgb\":[242,143,56]},{\"index\":1,\"rgb\":[217,30,30]}],\n\n\t\"blackbody\":[{\"index\":0,\"rgb\":[0,0,0]},{\"index\":0.2,\"rgb\":[230,0,0]},{\"index\":0.4,\"rgb\":[230,210,0]},{\"index\":0.7,\"rgb\":[255,255,255]},{\"index\":1,\"rgb\":[160,200,255]}],\n\n\t\"earth\":[{\"index\":0,\"rgb\":[0,0,130]},{\"index\":0.1,\"rgb\":[0,180,180]},{\"index\":0.2,\"rgb\":[40,210,40]},{\"index\":0.4,\"rgb\":[230,230,50]},{\"index\":0.6,\"rgb\":[120,70,20]},{\"index\":1,\"rgb\":[255,255,255]}],\n\n\t\"electric\":[{\"index\":0,\"rgb\":[0,0,0]},{\"index\":0.15,\"rgb\":[30,0,100]},{\"index\":0.4,\"rgb\":[120,0,100]},{\"index\":0.6,\"rgb\":[160,90,0]},{\"index\":0.8,\"rgb\":[230,200,0]},{\"index\":1,\"rgb\":[255,250,220]}],\n\n\t\"alpha\": [{\"index\":0, \"rgb\": [255,255,255,0]},{\"index\":1, \"rgb\": [255,255,255,1]}],\n\n\t\"viridis\": [{\"index\":0,\"rgb\":[68,1,84]},{\"index\":0.13,\"rgb\":[71,44,122]},{\"index\":0.25,\"rgb\":[59,81,139]},{\"index\":0.38,\"rgb\":[44,113,142]},{\"index\":0.5,\"rgb\":[33,144,141]},{\"index\":0.63,\"rgb\":[39,173,129]},{\"index\":0.75,\"rgb\":[92,200,99]},{\"index\":0.88,\"rgb\":[170,220,50]},{\"index\":1,\"rgb\":[253,231,37]}],\n\n\t\"inferno\": [{\"index\":0,\"rgb\":[0,0,4]},{\"index\":0.13,\"rgb\":[31,12,72]},{\"index\":0.25,\"rgb\":[85,15,109]},{\"index\":0.38,\"rgb\":[136,34,106]},{\"index\":0.5,\"rgb\":[186,54,85]},{\"index\":0.63,\"rgb\":[227,89,51]},{\"index\":0.75,\"rgb\":[249,140,10]},{\"index\":0.88,\"rgb\":[249,201,50]},{\"index\":1,\"rgb\":[252,255,164]}],\n\n\t\"magma\": [{\"index\":0,\"rgb\":[0,0,4]},{\"index\":0.13,\"rgb\":[28,16,68]},{\"index\":0.25,\"rgb\":[79,18,123]},{\"index\":0.38,\"rgb\":[129,37,129]},{\"index\":0.5,\"rgb\":[181,54,122]},{\"index\":0.63,\"rgb\":[229,80,100]},{\"index\":0.75,\"rgb\":[251,135,97]},{\"index\":0.88,\"rgb\":[254,194,135]},{\"index\":1,\"rgb\":[252,253,191]}],\n\n\t\"plasma\": [{\"index\":0,\"rgb\":[13,8,135]},{\"index\":0.13,\"rgb\":[75,3,161]},{\"index\":0.25,\"rgb\":[125,3,168]},{\"index\":0.38,\"rgb\":[168,34,150]},{\"index\":0.5,\"rgb\":[203,70,121]},{\"index\":0.63,\"rgb\":[229,107,93]},{\"index\":0.75,\"rgb\":[248,148,65]},{\"index\":0.88,\"rgb\":[253,195,40]},{\"index\":1,\"rgb\":[240,249,33]}],\n\n\t\"warm\": [{\"index\":0,\"rgb\":[125,0,179]},{\"index\":0.13,\"rgb\":[172,0,187]},{\"index\":0.25,\"rgb\":[219,0,170]},{\"index\":0.38,\"rgb\":[255,0,130]},{\"index\":0.5,\"rgb\":[255,63,74]},{\"index\":0.63,\"rgb\":[255,123,0]},{\"index\":0.75,\"rgb\":[234,176,0]},{\"index\":0.88,\"rgb\":[190,228,0]},{\"index\":1,\"rgb\":[147,255,0]}],\n\n\t\"cool\": [{\"index\":0,\"rgb\":[125,0,179]},{\"index\":0.13,\"rgb\":[116,0,218]},{\"index\":0.25,\"rgb\":[98,74,237]},{\"index\":0.38,\"rgb\":[68,146,231]},{\"index\":0.5,\"rgb\":[0,204,197]},{\"index\":0.63,\"rgb\":[0,247,146]},{\"index\":0.75,\"rgb\":[0,255,88]},{\"index\":0.88,\"rgb\":[40,255,8]},{\"index\":1,\"rgb\":[147,255,0]}],\n\n\t\"rainbow-soft\": [{\"index\":0,\"rgb\":[125,0,179]},{\"index\":0.1,\"rgb\":[199,0,180]},{\"index\":0.2,\"rgb\":[255,0,121]},{\"index\":0.3,\"rgb\":[255,108,0]},{\"index\":0.4,\"rgb\":[222,194,0]},{\"index\":0.5,\"rgb\":[150,255,0]},{\"index\":0.6,\"rgb\":[0,255,55]},{\"index\":0.7,\"rgb\":[0,246,150]},{\"index\":0.8,\"rgb\":[50,167,222]},{\"index\":0.9,\"rgb\":[103,51,235]},{\"index\":1,\"rgb\":[124,0,186]}],\n\n\t\"bathymetry\": [{\"index\":0,\"rgb\":[40,26,44]},{\"index\":0.13,\"rgb\":[59,49,90]},{\"index\":0.25,\"rgb\":[64,76,139]},{\"index\":0.38,\"rgb\":[63,110,151]},{\"index\":0.5,\"rgb\":[72,142,158]},{\"index\":0.63,\"rgb\":[85,174,163]},{\"index\":0.75,\"rgb\":[120,206,163]},{\"index\":0.88,\"rgb\":[187,230,172]},{\"index\":1,\"rgb\":[253,254,204]}],\n\n\t\"cdom\": [{\"index\":0,\"rgb\":[47,15,62]},{\"index\":0.13,\"rgb\":[87,23,86]},{\"index\":0.25,\"rgb\":[130,28,99]},{\"index\":0.38,\"rgb\":[171,41,96]},{\"index\":0.5,\"rgb\":[206,67,86]},{\"index\":0.63,\"rgb\":[230,106,84]},{\"index\":0.75,\"rgb\":[242,149,103]},{\"index\":0.88,\"rgb\":[249,193,135]},{\"index\":1,\"rgb\":[254,237,176]}],\n\n\t\"chlorophyll\": [{\"index\":0,\"rgb\":[18,36,20]},{\"index\":0.13,\"rgb\":[25,63,41]},{\"index\":0.25,\"rgb\":[24,91,59]},{\"index\":0.38,\"rgb\":[13,119,72]},{\"index\":0.5,\"rgb\":[18,148,80]},{\"index\":0.63,\"rgb\":[80,173,89]},{\"index\":0.75,\"rgb\":[132,196,122]},{\"index\":0.88,\"rgb\":[175,221,162]},{\"index\":1,\"rgb\":[215,249,208]}],\n\n\t\"density\": [{\"index\":0,\"rgb\":[54,14,36]},{\"index\":0.13,\"rgb\":[89,23,80]},{\"index\":0.25,\"rgb\":[110,45,132]},{\"index\":0.38,\"rgb\":[120,77,178]},{\"index\":0.5,\"rgb\":[120,113,213]},{\"index\":0.63,\"rgb\":[115,151,228]},{\"index\":0.75,\"rgb\":[134,185,227]},{\"index\":0.88,\"rgb\":[177,214,227]},{\"index\":1,\"rgb\":[230,241,241]}],\n\n\t\"freesurface-blue\": [{\"index\":0,\"rgb\":[30,4,110]},{\"index\":0.13,\"rgb\":[47,14,176]},{\"index\":0.25,\"rgb\":[41,45,236]},{\"index\":0.38,\"rgb\":[25,99,212]},{\"index\":0.5,\"rgb\":[68,131,200]},{\"index\":0.63,\"rgb\":[114,156,197]},{\"index\":0.75,\"rgb\":[157,181,203]},{\"index\":0.88,\"rgb\":[200,208,216]},{\"index\":1,\"rgb\":[241,237,236]}],\n\n\t\"freesurface-red\": [{\"index\":0,\"rgb\":[60,9,18]},{\"index\":0.13,\"rgb\":[100,17,27]},{\"index\":0.25,\"rgb\":[142,20,29]},{\"index\":0.38,\"rgb\":[177,43,27]},{\"index\":0.5,\"rgb\":[192,87,63]},{\"index\":0.63,\"rgb\":[205,125,105]},{\"index\":0.75,\"rgb\":[216,162,148]},{\"index\":0.88,\"rgb\":[227,199,193]},{\"index\":1,\"rgb\":[241,237,236]}],\n\n\t\"oxygen\": [{\"index\":0,\"rgb\":[64,5,5]},{\"index\":0.13,\"rgb\":[106,6,15]},{\"index\":0.25,\"rgb\":[144,26,7]},{\"index\":0.38,\"rgb\":[168,64,3]},{\"index\":0.5,\"rgb\":[188,100,4]},{\"index\":0.63,\"rgb\":[206,136,11]},{\"index\":0.75,\"rgb\":[220,174,25]},{\"index\":0.88,\"rgb\":[231,215,44]},{\"index\":1,\"rgb\":[248,254,105]}],\n\n\t\"par\": [{\"index\":0,\"rgb\":[51,20,24]},{\"index\":0.13,\"rgb\":[90,32,35]},{\"index\":0.25,\"rgb\":[129,44,34]},{\"index\":0.38,\"rgb\":[159,68,25]},{\"index\":0.5,\"rgb\":[182,99,19]},{\"index\":0.63,\"rgb\":[199,134,22]},{\"index\":0.75,\"rgb\":[212,171,35]},{\"index\":0.88,\"rgb\":[221,210,54]},{\"index\":1,\"rgb\":[225,253,75]}],\n\n\t\"phase\": [{\"index\":0,\"rgb\":[145,105,18]},{\"index\":0.13,\"rgb\":[184,71,38]},{\"index\":0.25,\"rgb\":[186,58,115]},{\"index\":0.38,\"rgb\":[160,71,185]},{\"index\":0.5,\"rgb\":[110,97,218]},{\"index\":0.63,\"rgb\":[50,123,164]},{\"index\":0.75,\"rgb\":[31,131,110]},{\"index\":0.88,\"rgb\":[77,129,34]},{\"index\":1,\"rgb\":[145,105,18]}],\n\n\t\"salinity\": [{\"index\":0,\"rgb\":[42,24,108]},{\"index\":0.13,\"rgb\":[33,50,162]},{\"index\":0.25,\"rgb\":[15,90,145]},{\"index\":0.38,\"rgb\":[40,118,137]},{\"index\":0.5,\"rgb\":[59,146,135]},{\"index\":0.63,\"rgb\":[79,175,126]},{\"index\":0.75,\"rgb\":[120,203,104]},{\"index\":0.88,\"rgb\":[193,221,100]},{\"index\":1,\"rgb\":[253,239,154]}],\n\n\t\"temperature\": [{\"index\":0,\"rgb\":[4,35,51]},{\"index\":0.13,\"rgb\":[23,51,122]},{\"index\":0.25,\"rgb\":[85,59,157]},{\"index\":0.38,\"rgb\":[129,79,143]},{\"index\":0.5,\"rgb\":[175,95,130]},{\"index\":0.63,\"rgb\":[222,112,101]},{\"index\":0.75,\"rgb\":[249,146,66]},{\"index\":0.88,\"rgb\":[249,196,65]},{\"index\":1,\"rgb\":[232,250,91]}],\n\n\t\"turbidity\": [{\"index\":0,\"rgb\":[34,31,27]},{\"index\":0.13,\"rgb\":[65,50,41]},{\"index\":0.25,\"rgb\":[98,69,52]},{\"index\":0.38,\"rgb\":[131,89,57]},{\"index\":0.5,\"rgb\":[161,112,59]},{\"index\":0.63,\"rgb\":[185,140,66]},{\"index\":0.75,\"rgb\":[202,174,88]},{\"index\":0.88,\"rgb\":[216,209,126]},{\"index\":1,\"rgb\":[233,246,171]}],\n\n\t\"velocity-blue\": [{\"index\":0,\"rgb\":[17,32,64]},{\"index\":0.13,\"rgb\":[35,52,116]},{\"index\":0.25,\"rgb\":[29,81,156]},{\"index\":0.38,\"rgb\":[31,113,162]},{\"index\":0.5,\"rgb\":[50,144,169]},{\"index\":0.63,\"rgb\":[87,173,176]},{\"index\":0.75,\"rgb\":[149,196,189]},{\"index\":0.88,\"rgb\":[203,221,211]},{\"index\":1,\"rgb\":[254,251,230]}],\n\n\t\"velocity-green\": [{\"index\":0,\"rgb\":[23,35,19]},{\"index\":0.13,\"rgb\":[24,64,38]},{\"index\":0.25,\"rgb\":[11,95,45]},{\"index\":0.38,\"rgb\":[39,123,35]},{\"index\":0.5,\"rgb\":[95,146,12]},{\"index\":0.63,\"rgb\":[152,165,18]},{\"index\":0.75,\"rgb\":[201,186,69]},{\"index\":0.88,\"rgb\":[233,216,137]},{\"index\":1,\"rgb\":[255,253,205]}],\n\n\t\"cubehelix\": [{\"index\":0,\"rgb\":[0,0,0]},{\"index\":0.07,\"rgb\":[22,5,59]},{\"index\":0.13,\"rgb\":[60,4,105]},{\"index\":0.2,\"rgb\":[109,1,135]},{\"index\":0.27,\"rgb\":[161,0,147]},{\"index\":0.33,\"rgb\":[210,2,142]},{\"index\":0.4,\"rgb\":[251,11,123]},{\"index\":0.47,\"rgb\":[255,29,97]},{\"index\":0.53,\"rgb\":[255,54,69]},{\"index\":0.6,\"rgb\":[255,85,46]},{\"index\":0.67,\"rgb\":[255,120,34]},{\"index\":0.73,\"rgb\":[255,157,37]},{\"index\":0.8,\"rgb\":[241,191,57]},{\"index\":0.87,\"rgb\":[224,220,93]},{\"index\":0.93,\"rgb\":[218,241,142]},{\"index\":1,\"rgb\":[227,253,198]}]\n};\n","/*\n * Ben Postlethwaite\n * January 2013\n * License MIT\n */\n'use strict';\n\nvar colorScale = require('./colorScale');\nvar lerp = require('lerp')\n\nmodule.exports = createColormap;\n\nfunction createColormap (spec) {\n    /*\n     * Default Options\n     */\n    var indicies, fromrgba, torgba,\n        nsteps, cmap, colormap, format,\n        nshades, colors, alpha, i;\n\n    if ( !spec ) spec = {};\n\n    nshades = (spec.nshades || 72) - 1;\n    format = spec.format || 'hex';\n\n    colormap = spec.colormap;\n    if (!colormap) colormap = 'jet';\n\n    if (typeof colormap === 'string') {\n        colormap = colormap.toLowerCase();\n\n        if (!colorScale[colormap]) {\n            throw Error(colormap + ' not a supported colorscale');\n        }\n\n        cmap = colorScale[colormap];\n\n    } else if (Array.isArray(colormap)) {\n        cmap = colormap.slice();\n\n    } else {\n        throw Error('unsupported colormap option', colormap);\n    }\n\n    if (cmap.length > nshades + 1) {\n        throw new Error(\n            colormap+' map requires nshades to be at least size '+cmap.length\n        );\n    }\n\n    if (!Array.isArray(spec.alpha)) {\n\n        if (typeof spec.alpha === 'number') {\n            alpha = [spec.alpha, spec.alpha];\n\n        } else {\n            alpha = [1, 1];\n        }\n\n    } else if (spec.alpha.length !== 2) {\n        alpha = [1, 1];\n\n    } else {\n        alpha = spec.alpha.slice();\n    }\n\n    // map index points from 0..1 to 0..n-1\n    indicies = cmap.map(function(c) {\n        return Math.round(c.index * nshades);\n    });\n\n    // Add alpha channel to the map\n    alpha[0] = Math.min(Math.max(alpha[0], 0), 1);\n    alpha[1] = Math.min(Math.max(alpha[1], 0), 1);\n\n    var steps = cmap.map(function(c, i) {\n        var index = cmap[i].index\n\n        var rgba = cmap[i].rgb.slice();\n\n        // if user supplies their own map use it\n        if (rgba.length === 4 && rgba[3] >= 0 && rgba[3] <= 1) {\n            return rgba\n        }\n        rgba[3] = alpha[0] + (alpha[1] - alpha[0])*index;\n\n        return rgba\n    })\n\n\n    /*\n     * map increasing linear values between indicies to\n     * linear steps in colorvalues\n     */\n    var colors = []\n    for (i = 0; i < indicies.length-1; ++i) {\n        nsteps = indicies[i+1] - indicies[i];\n        fromrgba = steps[i];\n        torgba = steps[i+1];\n\n        for (var j = 0; j < nsteps; j++) {\n            var amt = j / nsteps\n            colors.push([\n                Math.round(lerp(fromrgba[0], torgba[0], amt)),\n                Math.round(lerp(fromrgba[1], torgba[1], amt)),\n                Math.round(lerp(fromrgba[2], torgba[2], amt)),\n                lerp(fromrgba[3], torgba[3], amt)\n            ])\n        }\n    }\n\n    //add 1 step as last value\n    colors.push(cmap[cmap.length - 1].rgb.concat(alpha[1]))\n\n    if (format === 'hex') colors = colors.map( rgb2hex );\n    else if (format === 'rgbaString') colors = colors.map( rgbaStr );\n    else if (format === 'float') colors = colors.map( rgb2float );\n\n    return colors;\n};\n\nfunction rgb2float (rgba) {\n    return [\n        rgba[0] / 255,\n        rgba[1] / 255,\n        rgba[2] / 255,\n        rgba[3]\n    ]\n}\n\nfunction rgb2hex (rgba) {\n    var dig, hex = '#';\n    for (var i = 0; i < 3; ++i) {\n        dig = rgba[i];\n        dig = dig.toString(16);\n        hex += ('00' + dig).substr( dig.length );\n    }\n    return hex;\n}\n\nfunction rgbaStr (rgba) {\n    return 'rgba(' + rgba.join(',') + ')';\n}\n"],"names":["module","exports","v0","v1","t","U","TEXTURE","VELOCITY_TEXTURE","POSITION_TEXTURE","PARTICLE_COUNT_SQRT","MAX_SPEED","GAIN","OFFSET","IS_FLOAT","RANDOM_SEED","SPEED_FACTOR","DROP_RATE","DROP_RATE_BUMP","OPACITY","ROTATION","VIEWPORT_SIZE_PX","A","V","FlowLayerRenderer","constructor","layer","options","super","vertexShader","tileVertexShader","fragmentShader","tileFragmentShader","cacheSize","postProcesses","uniforms","maxSpeed","this","particleColorFragmentShader_","particleColorFragmentShader","velocityTexture_","particleCountSqrt_","particles","Math","ceil","sqrt","particleIndexBuffer_","quadBuffer_","particlePositionProgram_","particlePositionVertexShader_","particlePositionVertexShader","particlePositionFragmentShader_","particlePositionFragmentShader","previousPositionTexture_","nextPositionTexture_","particleColorProgram_","particleColorVertexShader_","particleColorVertexShader","textureProgram_","textureVertexShader_","textureVertexShader","textureFragmentShader_","textureFragmentShader","previousTrailsTexture_","nextTrailsTexture_","fadeOpacity_","maxSpeed_","speedFactor_","speedFactor","dropRate_","dropRateBump_","tempVec2_","renderedWidth_","renderedHeight_","afterHelperCreated","helper","gl","getGL","framebuffer_","createFramebuffer","particleCount","particleIndices","Float32Array","i","particleIndexBuffer","setArray","flushBufferData","quadIndices","quadBuffer","particlePositions","Uint8Array","length","floor","random","createTexture","getProgram","createSizeDependentTextures_","canvas","getCanvas","screenWidth","width","screenHeight","height","blank","deleteTexture","beforeFinalize","frameState","size","copyTexImage2D","TEXTURE_2D","RGBA","drawParticleTrails_","updateParticlePositions_","animate","bindFrameBuffer","drawTexture_","drawParticleColor_","bindInitialFrameBuffer","clearColor","clear","COLOR_BUFFER_BIT","enable","BLEND","blendFunc","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","disable","current","texture","opacity","useProgram","bindTexture","bindAttribute","setUniformFloatValue","drawArrays","TRIANGLES","rotation","cos","viewState","sin","setUniformFloatVec2","POINTS","viewport","TEXTURE_COORD","TILE_TRANSFORM","TEXTURE_PIXEL_WIDTH","TEXTURE_PIXEL_HEIGHT","TEXTURE_RESOLUTION","TEXTURE_ORIGIN_X","TEXTURE_ORIGIN_Y","DEPTH","RENDER_EXTENT","TILE_TEXTURE_ARRAY","quadVertexShader","sources","FlowLayer","BaseTile","baseOptions","Object","assign","style_","style","Error","particles_","styleVariables_","variables","addChangeListener","SOURCE","handleSourceUpdate_","hasRenderer","getRenderer","clearCache","updateStyleVariables","changed","getSources","extent","resolution","source","getSource","createRenderer","parsedStyle","context","pipeline","undefined","color","push","variableNames","keys","variableName","value","uniformDeclarations","map","name","functionDefintions","functions","join","parseStyle","getCacheSize","prototype","dispose","windData","Promise","resolve","reject","image","Image","onload","document","createElement","getContext","drawImage","data","getImageData","onerror","src","interpolatePixels","xAlong","yAlong","p11","p21","p12","p22","_","v11","v21","v12","v22","bilinearInterpolation","dataTileGrid","dataTileSize","inputImageProjection","dataTileProjection","minU","deltaU","minV","wind","DataTile","transition","wrapX","loader","z","x","y","inputData","inputWidth","inputHeight","tileCoord","getTileCoordExtent","getResolution","row","offset","mapY","col","mapX","lon","lat","x1","x2","y1","y2","interpolated","cx","cy","inputOffset","u","v","maxV","colors","colormap","nshades","alpha","format","colorStops","Map","target","pixelRatio","min","layers","WebGLVector","Vector","url","GeoJSON","Flow","view","View","center","zoom","colorScale","lerp","rgb2float","rgba","rgb2hex","dig","hex","toString","substr","rgbaStr","spec","indicies","fromrgba","torgba","nsteps","cmap","toLowerCase","Array","isArray","slice","c","round","index","max","steps","rgb","j","amt","concat"],"sourceRoot":""}