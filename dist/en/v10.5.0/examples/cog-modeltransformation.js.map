{"version":3,"file":"cog-modeltransformation.js","mappings":"kMAUA,QAAS,KAET,MAAMA,EAAY,IAAI,IAAQ,CAC5BC,QAAS,CACP,CACEC,IACE,uMAMFC,EAAoBC,SAASC,eAAe,cAC5CC,EAAa,IAAI,IAAU,CAC/BC,OAAQ,IAAI,IAAU,CAACA,OAAQP,IAC/BQ,QAASL,EAAkBM,UAE7BN,EAAkBO,iBAAiB,UAAU,KAC3CJ,EAAWK,WAAWR,EAAkBM,QAAQ,IAGlD,MAAMG,EAAM,IAAI,IAAI,CAClBC,OAAQ,MACRC,OAAQ,CACN,IAAI,IAAU,CACZP,OAAQ,IAAI,MAEd,IAAI,IAAU,CACZA,OAAQP,EACRe,QAAS,KAEXT,GAEFU,KAAM,IAAI,OAGZhB,EAAUiB,UAAUC,MAAMC,IACxB,QAAaA,EAAWC,WAAWC,WAAWH,MAAK,KACjD,MAAMF,EAAOJ,EAAIK,UACjBD,EAAKM,KACH,QACEH,EAAWI,OACXJ,EAAWC,WACXJ,EAAKQ,iBAER,K","sources":["webpack:///./cog-modeltransformation.js"],"sourcesContent":["import proj4 from 'proj4';\nimport Map from '../src/ol/Map.js';\nimport View from '../src/ol/View.js';\nimport TileLayer from '../src/ol/layer/WebGLTile.js';\nimport {fromEPSGCode, register} from '../src/ol/proj/proj4.js';\nimport {transformExtent} from '../src/ol/proj.js';\nimport GeoTIFF from '../src/ol/source/GeoTIFF.js';\nimport OSM from '../src/ol/source/OSM.js';\nimport TileDebug from '../src/ol/source/TileDebug.js';\n\nregister(proj4);\n\nconst cogSource = new GeoTIFF({\n  sources: [\n    {\n      url:\n        'https://umbra-open-data-catalog.s3.amazonaws.com/sar-data/tasks/Tanna%20Island,%20Vanuatu/' +\n        '9c76a918-9247-42bf-b9f6-3b4f672bc148/2023-02-12-21-33-56_UMBRA-04/2023-02-12-21-33-56_UMBRA-04_GEC.tif',\n    },\n  ],\n});\n\nconst showTilesCheckbox = document.getElementById('show-tiles');\nconst debugLayer = new TileLayer({\n  source: new TileDebug({source: cogSource}),\n  visible: showTilesCheckbox.checked,\n});\nshowTilesCheckbox.addEventListener('change', () => {\n  debugLayer.setVisible(showTilesCheckbox.checked);\n});\n\nconst map = new Map({\n  target: 'map',\n  layers: [\n    new TileLayer({\n      source: new OSM(),\n    }),\n    new TileLayer({\n      source: cogSource,\n      opacity: 0.8,\n    }),\n    debugLayer,\n  ],\n  view: new View(),\n});\n\ncogSource.getView().then((viewConfig) =>\n  fromEPSGCode(viewConfig.projection.getCode()).then(() => {\n    const view = map.getView();\n    view.fit(\n      transformExtent(\n        viewConfig.extent,\n        viewConfig.projection,\n        view.getProjection(),\n      ),\n    );\n  }),\n);\n"],"names":["cogSource","sources","url","showTilesCheckbox","document","getElementById","debugLayer","source","visible","checked","addEventListener","setVisible","map","target","layers","opacity","view","getView","then","viewConfig","projection","getCode","fit","extent","getProjection"],"sourceRoot":""}