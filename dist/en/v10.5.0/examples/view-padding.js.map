{"version":3,"file":"view-padding.js","mappings":"kOAcA,MAAMA,EAAS,IAAI,IAAa,CAC9BC,IAAK,mCACLC,OAAQ,IAAI,MAERC,EAAQ,IAAI,KAAM,CACtBC,KAAM,IAAI,IAAK,CACbC,MAAO,6BAETC,OAAQ,IAAI,IAAO,CACjBD,MAAO,UACPE,MAAO,IAETC,MAAO,IAAI,IAAY,CACrBC,OAAQ,EACRL,KAAM,IAAI,IAAK,CACbC,MAAO,6BAETC,OAAQ,IAAI,IAAO,CACjBD,MAAO,UACPE,MAAO,QAIPG,EAAc,IAAI,IAAY,CAClCV,OAAQA,EACRG,MAAOA,IAEHQ,EAAO,IAAI,KAAK,CACpBC,QAAQ,QAAW,CAAC,UAAW,aAC/BC,QAAS,CAAC,IAAK,GAAI,GAAI,KACvBC,KAAM,IAEI,IAAI,IAAI,CAClBC,OAAQ,CACN,IAAI,IAAU,CACZf,OAAQ,IAAI,MAEdU,GAEFM,OAAQ,MACRL,KAAMA,IAGRD,EAAYO,YAAYC,GAAG,mBAAmB,WAClBC,SAASC,eAAe,qBAChCC,iBAChB,SACA,WACE,MACMC,EADUtB,EAAOuB,cAAc,GACbC,cACxBb,EAAKc,IAAIH,EACX,IACA,GAGqBH,SAASC,eAAe,kBAChCC,iBACb,SACA,WACE,MACMK,EADU1B,EAAOuB,cAAc,GACfC,cACtBb,EAAKgB,UAAUD,EAAME,iBACvB,IACA,EAEJ,G","sources":["webpack:///./view-padding.js"],"sourcesContent":["import Map from '../src/ol/Map.js';\nimport View from '../src/ol/View.js';\nimport GeoJSON from '../src/ol/format/GeoJSON.js';\nimport TileLayer from '../src/ol/layer/Tile.js';\nimport VectorLayer from '../src/ol/layer/Vector.js';\nimport {fromLonLat} from '../src/ol/proj.js';\nimport OSM from '../src/ol/source/OSM.js';\nimport VectorSource from '../src/ol/source/Vector.js';\nimport CircleStyle from '../src/ol/style/Circle.js';\nimport Fill from '../src/ol/style/Fill.js';\nimport Stroke from '../src/ol/style/Stroke.js';\nimport Style from '../src/ol/style/Style.js';\n\n/** @type {VectorSource<import('../src/ol/Feature.js').default<import('../src/ol/geom/SimpleGeometry.js').default>>} */\nconst source = new VectorSource({\n  url: 'data/geojson/switzerland.geojson',\n  format: new GeoJSON(),\n});\nconst style = new Style({\n  fill: new Fill({\n    color: 'rgba(255, 255, 255, 0.6)',\n  }),\n  stroke: new Stroke({\n    color: '#319FD3',\n    width: 1,\n  }),\n  image: new CircleStyle({\n    radius: 5,\n    fill: new Fill({\n      color: 'rgba(255, 255, 255, 0.6)',\n    }),\n    stroke: new Stroke({\n      color: '#319FD3',\n      width: 1,\n    }),\n  }),\n});\nconst vectorLayer = new VectorLayer({\n  source: source,\n  style: style,\n});\nconst view = new View({\n  center: fromLonLat([6.6339863, 46.5193823]),\n  padding: [170, 50, 30, 150],\n  zoom: 6,\n});\nconst map = new Map({\n  layers: [\n    new TileLayer({\n      source: new OSM(),\n    }),\n    vectorLayer,\n  ],\n  target: 'map',\n  view: view,\n});\n\nvectorLayer.getSource().on('featuresloadend', function () {\n  const zoomtoswitzerland = document.getElementById('zoomtoswitzerland');\n  zoomtoswitzerland.addEventListener(\n    'click',\n    function () {\n      const feature = source.getFeatures()[0];\n      const polygon = feature.getGeometry();\n      view.fit(polygon);\n    },\n    false,\n  );\n\n  const centerlausanne = document.getElementById('centerlausanne');\n  centerlausanne.addEventListener(\n    'click',\n    function () {\n      const feature = source.getFeatures()[1];\n      const point = feature.getGeometry();\n      view.setCenter(point.getCoordinates());\n    },\n    false,\n  );\n});\n"],"names":["source","url","format","style","fill","color","stroke","width","image","radius","vectorLayer","view","center","padding","zoom","layers","target","getSource","on","document","getElementById","addEventListener","polygon","getFeatures","getGeometry","fit","point","setCenter","getCoordinates"],"sourceRoot":""}