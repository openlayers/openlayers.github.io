{"version":3,"file":"earthquake-custom-symbol.js","mappings":"mQAgBA,MAAMA,EAAmB,WACvB,MAAMC,EAAO,CACX,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,GAAI,GACL,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,IAEAC,EAAgB,IAAI,KAAQ,CAACD,IAEnC,OADAC,EAAcC,OAAO,IAAKF,EAAK,IACxB,SAAUG,EAAOC,GACtB,MAAMC,EAAUJ,EAAcK,QAC9BD,EAAQF,MAAMA,EAAOA,EAAOH,EAAK,IACjC,MAAMO,GAAS,OAAcF,EAAQG,aAErC,OADAH,EAAQI,UAAUL,EAASG,EAAO,GAAIH,EAASG,EAAO,IAC/CF,CACT,CACD,CAnBwB,GAqBnBK,EAAa,CAAC,EAEdC,EAAS,IAAI,IAAY,CAC7BC,OAAQ,IAAI,IAAa,CACvBC,IAAK,qCACLC,OAAQ,IAAI,KAAI,CACdC,eAAe,MAGnBC,MAAO,SAAUC,GACf,MAAMC,EAAYD,EAAQE,IAAI,aAC9B,IAAIH,EAAQN,EAAWQ,GACvB,IAAKF,EAAO,CACV,MACMI,EAAY,EACZf,EAAUN,EAFF,EAAI,GAAKmB,EAAY,GAEKG,KAAKC,KAAKF,EAAY,IACxDG,EAASC,SAASC,cAAc,UAChCC,GAAgB,QAAUH,EAAOI,WAAW,MAAO,CACvDC,MAAM,QAAYvB,EAAQG,aAAaqB,KAAKC,GAC1CT,KAAKC,KAAKQ,EAAIV,EAAY,KAE5BW,WAAY,OAEdL,EAAcM,SACZ,IAAI,KAAM,CACRC,KAAM,IAAI,IAAK,CAACC,MAAO,2BACvBC,OAAQ,IAAI,IAAO,CACjBD,MAAO,yBACPE,MAAO,OAIbV,EAAcW,aAAahC,GAC3BW,EAAQ,IAAI,KAAM,CAChBsB,MAAO,IAAI,IAAK,CACdC,IAAKhB,EACLpB,MAAO,EAAI,SAGfO,EAAWQ,GAAaF,CAC1B,CACA,OAAOA,CACT,IAQFL,EAAO6B,YAAYC,GAAG,mBAAmB,SAAUC,GACjDA,EAAIC,SAASC,SAASC,IAJxB,IAAgCC,EAK5BD,EAAEE,IAAI,aALsBD,EAKcD,EAAE1B,IAAI,QAJ3C6B,WAAWF,EAAKG,OAAO,MAI8B,EAAK,GAEnE,IAEA,MAAMC,EAAS,IAAI,IAAU,CAC3BtC,OAAQ,IAAI,IAAW,CACrBuC,MAAO,mBAIC,IAAI,IAAI,CAClBC,OAAQ,CAACF,EAAQvC,GACjB0C,OAAQ,MACRC,KAAM,IAAI,KAAK,CACbC,OAAQ,CAAC,EAAG,GACZC,KAAM,K","sources":["webpack:///./earthquake-custom-symbol.js"],"sourcesContent":["import Map from '../src/ol/Map.js';\nimport View from '../src/ol/View.js';\nimport {getBottomLeft, getTopRight} from '../src/ol/extent.js';\nimport KML from '../src/ol/format/KML.js';\nimport Polygon from '../src/ol/geom/Polygon.js';\nimport {DEVICE_PIXEL_RATIO} from '../src/ol/has.js';\nimport TileLayer from '../src/ol/layer/Tile.js';\nimport VectorLayer from '../src/ol/layer/Vector.js';\nimport {toContext} from '../src/ol/render.js';\nimport StadiaMaps from '../src/ol/source/StadiaMaps.js';\nimport VectorSource from '../src/ol/source/Vector.js';\nimport Fill from '../src/ol/style/Fill.js';\nimport Icon from '../src/ol/style/Icon.js';\nimport Stroke from '../src/ol/style/Stroke.js';\nimport Style from '../src/ol/style/Style.js';\n\nconst getSymbolOutline = (function () {\n  const path = [\n    [0, 0],\n    [4, 2],\n    [6, 0],\n    [10, 5],\n    [6, 3],\n    [4, 5],\n    [0, 0],\n  ];\n  const symbolOutline = new Polygon([path]);\n  symbolOutline.rotate(1.2, path[0]);\n  return function (scale, offset) {\n    const outline = symbolOutline.clone();\n    outline.scale(scale, scale, path[0]);\n    const origin = getBottomLeft(outline.getExtent());\n    outline.translate(offset - origin[0], offset - origin[1]);\n    return outline;\n  };\n})();\n\nconst styleCache = {};\n\nconst vector = new VectorLayer({\n  source: new VectorSource({\n    url: 'data/kml/2012_Earthquakes_Mag5.kml',\n    format: new KML({\n      extractStyles: false,\n    }),\n  }),\n  style: function (feature) {\n    const magnitude = feature.get('magnitude');\n    let style = styleCache[magnitude];\n    if (!style) {\n      const scale = 1 + 4 * (magnitude - 5);\n      const lineWidth = 2;\n      const outline = getSymbolOutline(scale, Math.ceil(lineWidth / 2));\n      const canvas = document.createElement('canvas');\n      const vectorContext = toContext(canvas.getContext('2d'), {\n        size: getTopRight(outline.getExtent()).map((n) =>\n          Math.ceil(n + lineWidth / 2),\n        ),\n        pixelRatio: DEVICE_PIXEL_RATIO,\n      });\n      vectorContext.setStyle(\n        new Style({\n          fill: new Fill({color: 'rgba(255, 153, 0, 0.4)'}),\n          stroke: new Stroke({\n            color: 'rgba(255, 204, 0, 0.2)',\n            width: 2,\n          }),\n        }),\n      );\n      vectorContext.drawGeometry(outline);\n      style = new Style({\n        image: new Icon({\n          img: canvas,\n          scale: 1 / DEVICE_PIXEL_RATIO,\n        }),\n      });\n      styleCache[magnitude] = style;\n    }\n    return style;\n  },\n});\n// 2012_Earthquakes_Mag5.kml stores the magnitude of each earthquake in a\n// standards-violating <magnitude> tag in each Placemark.  We extract it from\n// the Placemark's name instead.\nfunction parseMagnitudeFromName(name) {\n  return parseFloat(name.substr(2));\n}\nvector.getSource().on('featuresloadend', function (evt) {\n  evt.features.forEach((f) => {\n    f.set('magnitude', parseMagnitudeFromName(f.get('name')), true);\n  });\n});\n\nconst raster = new TileLayer({\n  source: new StadiaMaps({\n    layer: 'stamen_toner',\n  }),\n});\n\nconst map = new Map({\n  layers: [raster, vector],\n  target: 'map',\n  view: new View({\n    center: [0, 0],\n    zoom: 2,\n  }),\n});\n"],"names":["getSymbolOutline","path","symbolOutline","rotate","scale","offset","outline","clone","origin","getExtent","translate","styleCache","vector","source","url","format","extractStyles","style","feature","magnitude","get","lineWidth","Math","ceil","canvas","document","createElement","vectorContext","getContext","size","map","n","pixelRatio","setStyle","fill","color","stroke","width","drawGeometry","image","img","getSource","on","evt","features","forEach","f","name","set","parseFloat","substr","raster","layer","layers","target","view","center","zoom"],"sourceRoot":""}