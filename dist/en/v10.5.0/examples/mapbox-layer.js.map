{"version":3,"file":"mapbox-layer.js","mappings":"uLASA,MAAMA,EAAS,EAAE,KAAM,MAGjBC,EAAQ,IAAIC,SAASC,IAAI,CAC7BC,MAAO,+FACPC,oBAAoB,EACpBC,SAAS,EACTN,OAAQA,EACRO,UAAW,MACXC,iBAAiB,EACjBC,SAAS,EACTC,YAAY,EACZC,aAAa,EACbC,UAAU,EACVC,iBAAiB,EACjBC,YAAY,EACZC,iBAAiB,IAGbC,EAAU,IAAI,IAAM,CACxBC,OAAQ,SAAUC,GAChB,MAAMC,EAASlB,EAAMmB,YACfC,EAAYH,EAAWG,UAEvBC,EAAUN,EAAQO,aACxBJ,EAAOf,MAAMoB,QAAUF,EAAU,QAAU,OAC3CH,EAAOf,MAAMqB,SAAW,WAExB,MAAMC,EAAUV,EAAQW,aACxBR,EAAOf,MAAMsB,QAAUA,EAGvB,MAAME,EAAWP,EAAUO,SAiB3B,OAhBA3B,EAAM4B,OAAO,CACX7B,QAAQ,QAASqB,EAAUrB,QAC3B8B,KAAMT,EAAUS,KAAO,EACvBC,QAAsB,KAAXH,EAAkBI,KAAKC,GAClCC,SAAS,IAMPjC,EAAMkC,SACRlC,EAAMkC,OAAOC,SACbnC,EAAMkC,OAAS,MAEjBlC,EAAMoC,UAEClB,CACT,EACAmB,OAAQ,IAAI,IAAO,CACjBC,aAAc,CACZ,+EACA,0GAKAC,EAAS,IAAI,IAAa,CAC9BF,OAAQ,IAAI,IAAa,CACvBG,IAAK,oCACLC,OAAQ,IAAI,MAEdC,OAAQ,SAAUC,GAChB,OAAOA,EAAQC,IAAI,cAAgB,GACrC,EACAC,OAAQ,GACRC,KAAM,KAGI,IAAI,IAAI,CAClBC,OAAQ,MACRC,KAAM,IAAI,KAAK,CACbjD,QAAQ,QAAWA,GACnB8B,KAAM,IAERoB,OAAQ,CAAClC,EAASwB,I","sources":["webpack:///./mapbox-layer.js"],"sourcesContent":["import Map from '../src/ol/Map.js';\nimport View from '../src/ol/View.js';\nimport GeoJSON from '../src/ol/format/GeoJSON.js';\nimport HeatmapLayer from '../src/ol/layer/Heatmap.js';\nimport Layer from '../src/ol/layer/Layer.js';\nimport {fromLonLat, toLonLat} from '../src/ol/proj.js';\nimport Source from '../src/ol/source/Source.js';\nimport VectorSource from '../src/ol/source/Vector.js';\n\nconst center = [-98.8, 37.9];\nconst key = 'get_your_own_D6rA4zTHduk6KOKTXzGB';\n\nconst mbMap = new mapboxgl.Map({\n  style: 'https://api.maptiler.com/maps/dataviz-light/style.json?key=' + key,\n  attributionControl: false,\n  boxZoom: false,\n  center: center,\n  container: 'map',\n  doubleClickZoom: false,\n  dragPan: false,\n  dragRotate: false,\n  interactive: false,\n  keyboard: false,\n  pitchWithRotate: false,\n  scrollZoom: false,\n  touchZoomRotate: false,\n});\n\nconst mbLayer = new Layer({\n  render: function (frameState) {\n    const canvas = mbMap.getCanvas();\n    const viewState = frameState.viewState;\n\n    const visible = mbLayer.getVisible();\n    canvas.style.display = visible ? 'block' : 'none';\n    canvas.style.position = 'absolute';\n\n    const opacity = mbLayer.getOpacity();\n    canvas.style.opacity = opacity;\n\n    // adjust view parameters in mapbox\n    const rotation = viewState.rotation;\n    mbMap.jumpTo({\n      center: toLonLat(viewState.center),\n      zoom: viewState.zoom - 1,\n      bearing: (-rotation * 180) / Math.PI,\n      animate: false,\n    });\n\n    // cancel the scheduled update & trigger synchronous redraw\n    // see https://github.com/mapbox/mapbox-gl-js/issues/7893#issue-408992184\n    // NOTE: THIS MIGHT BREAK IF UPDATING THE MAPBOX VERSION\n    if (mbMap._frame) {\n      mbMap._frame.cancel();\n      mbMap._frame = null;\n    }\n    mbMap._render();\n\n    return canvas;\n  },\n  source: new Source({\n    attributions: [\n      '<a href=\"https://www.maptiler.com/copyright/\" target=\"_blank\">© MapTiler</a>',\n      '<a href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\">© OpenStreetMap contributors</a>',\n    ],\n  }),\n});\n\nconst cities = new HeatmapLayer({\n  source: new VectorSource({\n    url: 'data/geojson/world-cities.geojson',\n    format: new GeoJSON(),\n  }),\n  weight: function (feature) {\n    return feature.get('population') / 1e7;\n  },\n  radius: 15,\n  blur: 15,\n});\n\nconst map = new Map({\n  target: 'map',\n  view: new View({\n    center: fromLonLat(center),\n    zoom: 4,\n  }),\n  layers: [mbLayer, cities],\n});\n"],"names":["center","mbMap","mapboxgl","Map","style","attributionControl","boxZoom","container","doubleClickZoom","dragPan","dragRotate","interactive","keyboard","pitchWithRotate","scrollZoom","touchZoomRotate","mbLayer","render","frameState","canvas","getCanvas","viewState","visible","getVisible","display","position","opacity","getOpacity","rotation","jumpTo","zoom","bearing","Math","PI","animate","_frame","cancel","_render","source","attributions","cities","url","format","weight","feature","get","radius","blur","target","view","layers"],"sourceRoot":""}