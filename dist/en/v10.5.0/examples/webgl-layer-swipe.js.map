{"version":3,"file":"webgl-layer-swipe.js","mappings":"gKAOA,MAAMA,EAAM,IAAI,IAAU,CACxBC,OAAQ,IAAI,IAAI,CAACC,OAAO,MAKpBC,EAAU,IAAI,IAAU,CAC5BF,OAAQ,IAAI,IAAU,CACpBG,IAAK,gGACLC,aACE,4LAEFC,QAAS,OAIPC,EAAM,IAAI,IAAI,CAClBC,OAAQ,CAACR,EAAKG,GACdM,OAAQ,MACRC,KAAM,IAAI,KAAK,CACbC,OAAQ,CAAC,EAAG,GACZC,KAAM,MAIJC,EAAQC,SAASC,eAAe,SAEtCZ,EAAQa,GAAG,aAAa,SAAUC,GAChC,MAAMC,EAAKD,EAAME,QACjBD,EAAGE,OAAOF,EAAGG,cAEb,MAAMC,EAAUf,EAAIgB,UAGdC,GAAa,QAAeP,EAAO,CAAC,EAAGK,EAAQ,KAC/CG,GAAW,QAAeR,EAAO,CAACK,EAAQ,GAAI,IAE9CI,EAAQC,KAAKC,OAChBH,EAAS,GAAKD,EAAW,KAAOK,OAAOhB,EAAMiB,OAAS,MAEnDC,EAASN,EAAS,GAAKD,EAAW,GAExCN,EAAGc,QAAQR,EAAW,GAAIA,EAAW,GAAIE,EAAOK,EAClD,IAEA5B,EAAQa,GAAG,cAAc,SAAUC,GACjC,MAAMC,EAAKD,EAAME,QACjBD,EAAGe,QAAQf,EAAGG,aAChB,IAEAR,EAAMqB,iBAAiB,SAAS,WAC9B3B,EAAI4B,QACN,G","sources":["webpack:///./webgl-layer-swipe.js"],"sourcesContent":["import Map from '../src/ol/Map.js';\nimport View from '../src/ol/View.js';\nimport TileLayer from '../src/ol/layer/WebGLTile.js';\nimport {getRenderPixel} from '../src/ol/render.js';\nimport ImageTile from '../src/ol/source/ImageTile.js';\nimport OSM from '../src/ol/source/OSM.js';\n\nconst osm = new TileLayer({\n  source: new OSM({wrapX: true}),\n});\n\nconst key = 'get_your_own_D6rA4zTHduk6KOKTXzGB';\n\nconst imagery = new TileLayer({\n  source: new ImageTile({\n    url: 'https://api.maptiler.com/maps/satellite/{z}/{x}/{y}.jpg?key=' + key,\n    attributions:\n      '<a href=\"https://www.maptiler.com/copyright/\" target=\"_blank\">&copy; MapTiler</a> ' +\n      '<a href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\">&copy; OpenStreetMap contributors</a>',\n    maxZoom: 20,\n  }),\n});\n\nconst map = new Map({\n  layers: [osm, imagery],\n  target: 'map',\n  view: new View({\n    center: [0, 0],\n    zoom: 2,\n  }),\n});\n\nconst swipe = document.getElementById('swipe');\n\nimagery.on('prerender', function (event) {\n  const gl = event.context;\n  gl.enable(gl.SCISSOR_TEST);\n\n  const mapSize = map.getSize(); // [width, height] in CSS pixels\n\n  // get render coordinates and dimensions given CSS coordinates\n  const bottomLeft = getRenderPixel(event, [0, mapSize[1]]);\n  const topRight = getRenderPixel(event, [mapSize[0], 0]);\n\n  const width = Math.round(\n    (topRight[0] - bottomLeft[0]) * (Number(swipe.value) / 100),\n  );\n  const height = topRight[1] - bottomLeft[1];\n\n  gl.scissor(bottomLeft[0], bottomLeft[1], width, height);\n});\n\nimagery.on('postrender', function (event) {\n  const gl = event.context;\n  gl.disable(gl.SCISSOR_TEST);\n});\n\nswipe.addEventListener('input', function () {\n  map.render();\n});\n"],"names":["osm","source","wrapX","imagery","url","attributions","maxZoom","map","layers","target","view","center","zoom","swipe","document","getElementById","on","event","gl","context","enable","SCISSOR_TEST","mapSize","getSize","bottomLeft","topRight","width","Math","round","Number","value","height","scissor","disable","addEventListener","render"],"sourceRoot":""}