{"version":3,"file":"offscreen-canvas.js","mappings":"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","sources":["webpack:///./offscreen-canvas.js","webpack:///./offscreen-canvas.worker.js"],"sourcesContent":["import Map from '../src/ol/Map.js';\nimport View from '../src/ol/View.js';\nimport FullScreen from '../src/ol/control/FullScreen.js';\nimport Layer from '../src/ol/layer/Layer.js';\nimport Source from '../src/ol/source/Source.js';\nimport Worker from 'worker-loader!./offscreen-canvas.worker.js'; //eslint-disable-line\nimport {createXYZ} from '../src/ol/tilegrid.js';\nimport {\n  compose,\n  create,\n  toString as toTransformString,\n} from '../src/ol/transform.js';\n\nconst worker = new Worker();\n\nlet container,\n  transformContainer,\n  canvas,\n  rendering,\n  workerFrameState,\n  mainThreadFrameState;\n\n// Transform the container to account for the difference between the (newer)\n// main thread frameState and the (older) worker frameState\nfunction updateContainerTransform() {\n  if (workerFrameState) {\n    const viewState = mainThreadFrameState.viewState;\n    const renderedViewState = workerFrameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const rotation = viewState.rotation;\n    const renderedCenter = renderedViewState.center;\n    const renderedResolution = renderedViewState.resolution;\n    const renderedRotation = renderedViewState.rotation;\n    const transform = create();\n    // Skip the extra transform for rotated views, because it will not work\n    // correctly in that case\n    if (!rotation) {\n      compose(\n        transform,\n        (renderedCenter[0] - center[0]) / resolution,\n        (center[1] - renderedCenter[1]) / resolution,\n        renderedResolution / resolution,\n        renderedResolution / resolution,\n        rotation - renderedRotation,\n        0,\n        0,\n      );\n    }\n    transformContainer.style.transform = toTransformString(transform);\n  }\n}\n\nconst map = new Map({\n  layers: [\n    new Layer({\n      render: function (frameState) {\n        if (!container) {\n          container = document.createElement('div');\n          container.style.position = 'absolute';\n          container.style.width = '100%';\n          container.style.height = '100%';\n          transformContainer = document.createElement('div');\n          transformContainer.style.position = 'absolute';\n          transformContainer.style.width = '100%';\n          transformContainer.style.height = '100%';\n          container.appendChild(transformContainer);\n          canvas = document.createElement('canvas');\n          canvas.style.position = 'absolute';\n          canvas.style.left = '0';\n          canvas.style.transformOrigin = 'top left';\n          transformContainer.appendChild(canvas);\n        }\n        mainThreadFrameState = frameState;\n        updateContainerTransform();\n        if (!rendering) {\n          rendering = true;\n          worker.postMessage({\n            action: 'render',\n            frameState: {\n              layerIndex: 0,\n              wantedTiles: {},\n              usedTiles: {},\n              viewHints: frameState.viewHints.slice(0),\n              postRenderFunctions: [],\n              viewState: {\n                center: frameState.viewState.center.slice(0),\n                resolution: frameState.viewState.resolution,\n                rotation: frameState.viewState.rotation,\n                zoom: frameState.viewState.zoom,\n              },\n              pixelRatio: frameState.pixelRatio,\n              size: frameState.size.slice(0),\n              extent: frameState.extent.slice(0),\n              coordinateToPixelTransform:\n                frameState.coordinateToPixelTransform.slice(0),\n              pixelToCoordinateTransform:\n                frameState.pixelToCoordinateTransform.slice(0),\n              layerStatesArray: frameState.layerStatesArray.map((l) => ({\n                zIndex: l.zIndex,\n                visible: l.visible,\n                extent: l.extent,\n                maxResolution: l.maxResolution,\n                minResolution: l.minResolution,\n                managed: l.managed,\n              })),\n            },\n          });\n        } else {\n          frameState.animate = true;\n        }\n        return container;\n      },\n      source: new Source({\n        attributions: [\n          '<a href=\"https://www.maptiler.com/copyright/\" target=\"_blank\">© MapTiler</a>',\n          '<a href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\">© OpenStreetMap contributors</a>',\n        ],\n      }),\n    }),\n  ],\n  target: 'map',\n  view: new View({\n    resolutions: createXYZ({tileSize: 512}).getResolutions(),\n    center: [0, 0],\n    zoom: 2,\n  }),\n});\nmap.addControl(new FullScreen());\n\nlet pointerOutside = true;\nconst mapTarget = map.getTargetElement();\nmapTarget.addEventListener('pointerleave', () => {\n  pointerOutside = true;\n  showInfo([]);\n});\nmap.on('pointermove', function (evt) {\n  if (evt.dragging) {\n    return;\n  }\n  pointerOutside = false;\n  worker.postMessage({\n    action: 'requestFeatures',\n    pixel: evt.pixel,\n  });\n});\n\n// Worker messaging and actions\nworker.addEventListener('message', (message) => {\n  if (message.data.action === 'loadImage') {\n    // Image loader for ol-mapbox-style\n    const image = new Image();\n    image.crossOrigin = 'anonymous';\n    image.addEventListener('load', function () {\n      createImageBitmap(image, 0, 0, image.width, image.height).then(\n        (imageBitmap) => {\n          worker.postMessage(\n            {\n              action: 'imageLoaded',\n              image: imageBitmap,\n              src: message.data.src,\n            },\n            [imageBitmap],\n          );\n        },\n      );\n    });\n    image.src = message.data.src;\n  } else if (message.data.action === 'getFeatures') {\n    showInfo(message.data.features);\n  } else if (message.data.action === 'requestRender') {\n    // Worker requested a new render frame\n    map.render();\n  } else if (canvas && message.data.action === 'rendered') {\n    // Worker provides a new render frame\n    requestAnimationFrame(function () {\n      const imageData = message.data.imageData;\n      canvas.width = imageData.width;\n      canvas.height = imageData.height;\n      canvas.getContext('2d').drawImage(imageData, 0, 0);\n      canvas.style.transform = message.data.transform;\n      workerFrameState = message.data.frameState;\n      updateContainerTransform();\n    });\n    rendering = false;\n  }\n});\n\nconst info = document.getElementById('info');\nfunction showInfo(propertiesFromFeatures) {\n  if (propertiesFromFeatures.length == 0 || pointerOutside) {\n    info.innerText = '';\n    info.style.opacity = '0';\n    return;\n  }\n  const properties = propertiesFromFeatures.map((e) =>\n    Object.keys(e)\n      .filter((key) => !key.includes(':'))\n      .reduce(\n        (newObj, currKey) => ((newObj[currKey] = e[currKey]), newObj),\n        {},\n      ),\n  );\n  info.innerText = JSON.stringify(properties, null, 2);\n  info.style.opacity = '1';\n}\n","export default function Worker_fn() {\n  return new Worker(__webpack_public_path__ + \"offscreen-canvas.worker.worker.js\");\n}\n"],"names":["worker","Worker","container","transformContainer","canvas","rendering","workerFrameState","mainThreadFrameState","updateContainerTransform","viewState","renderedViewState","center","resolution","rotation","renderedCenter","renderedResolution","renderedRotation","transform","style","map","Map","layers","Layer","render","frameState","document","createElement","position","width","height","appendChild","left","transformOrigin","animate","postMessage","action","layerIndex","wantedTiles","usedTiles","viewHints","slice","postRenderFunctions","zoom","pixelRatio","size","extent","coordinateToPixelTransform","pixelToCoordinateTransform","layerStatesArray","l","zIndex","visible","maxResolution","minResolution","managed","source","Source","attributions","target","view","View","resolutions","tileSize","getResolutions","addControl","FullScreen","pointerOutside","getTargetElement","addEventListener","showInfo","on","evt","dragging","pixel","message","data","image","Image","crossOrigin","createImageBitmap","then","imageBitmap","src","features","requestAnimationFrame","imageData","getContext","drawImage","info","getElementById","propertiesFromFeatures","length","innerText","opacity","properties","e","Object","keys","filter","key","includes","reduce","newObj","currKey","JSON","stringify"],"sourceRoot":""}