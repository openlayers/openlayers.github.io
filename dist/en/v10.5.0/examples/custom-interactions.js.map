{"version":3,"file":"custom-interactions.js","mappings":"mOAaA,MAAMA,UAAa,IACjB,WAAAC,GACEC,MAAM,CACJC,gBAAiBA,EACjBC,gBAAiBA,EACjBC,gBAAiBA,EACjBC,cAAeA,IAOjBC,KAAKC,YAAc,KAMnBD,KAAKE,QAAU,UAMfF,KAAKG,SAAW,KAMhBH,KAAKI,qBAAkBC,CACzB,EAOF,SAAST,EAAgBU,GACvB,MAEMC,EAFMD,EAAIE,IAEIC,sBAAsBH,EAAII,OAAO,SAAUH,GAC7D,OAAOA,CACT,IAOA,OALIA,IACFP,KAAKC,YAAcK,EAAIK,WACvBX,KAAKG,SAAWI,KAGTA,CACX,CAKA,SAASV,EAAgBS,GACvB,MAAMM,EAASN,EAAIK,WAAW,GAAKX,KAAKC,YAAY,GAC9CY,EAASP,EAAIK,WAAW,GAAKX,KAAKC,YAAY,GAEnCD,KAAKG,SAASW,cACtBC,UAAUH,EAAQC,GAE3Bb,KAAKC,YAAY,GAAKK,EAAIK,WAAW,GACrCX,KAAKC,YAAY,GAAKK,EAAIK,WAAW,EACvC,CAKA,SAASb,EAAgBQ,GACvB,GAAIN,KAAKE,QAAS,CAChB,MACMK,EADMD,EAAIE,IACIC,sBAAsBH,EAAII,OAAO,SAAUH,GAC7D,OAAOA,CACT,IACMS,EAAUV,EAAIE,IAAIS,mBACpBV,EACES,EAAQE,MAAMC,QAAUnB,KAAKE,UAC/BF,KAAKI,gBAAkBY,EAAQE,MAAMC,OACrCH,EAAQE,MAAMC,OAASnB,KAAKE,cAEIG,IAAzBL,KAAKI,kBACdY,EAAQE,MAAMC,OAASnB,KAAKI,gBAC5BJ,KAAKI,qBAAkBC,EAE3B,CACF,CAKA,SAASN,IAGP,OAFAC,KAAKC,YAAc,KACnBD,KAAKG,SAAW,MACT,CACT,CAEA,MAAMiB,EAAe,IAAI,IAAQ,IAAI,IAAM,CAAC,EAAG,KAEzCC,EAAc,IAAI,IACtB,IAAI,IAAW,CACb,EAAE,IAAK,KACP,EAAE,IAAK,QAILC,EAAiB,IAAI,IACzB,IAAI,KAAQ,CACV,CACE,EAAE,KAAM,KACR,EAAE,IAAK,KACP,EAAE,IAAK,KACP,EAAE,KAAM,KACR,EAAE,KAAM,SAKF,IAAI,IAAI,CAClBC,cAAc,SAAsBC,OAAO,CAAC,IAAI/B,IAChDgC,OAAQ,CACN,IAAI,IAAU,CACZC,OAAQ,IAAI,IAAW,CACrBC,IAAK,6GACLC,YAAa,OAGjB,IAAI,IAAY,CACdF,OAAQ,IAAI,IAAa,CACvBG,SAAU,CAACT,EAAcC,EAAaC,KAExCJ,MAAO,CACL,WAAY,gBACZ,eAAgB,IAChB,cAAe,CAAC,GAAK,IACrB,sBAAuB,WACvB,sBAAuB,SACvB,eAAgB,EAChB,eAAgB,CAAC,IAAK,EAAG,EAAG,GAC5B,aAAc,CAAC,EAAG,EAAG,IAAK,QAIhCY,OAAQ,MACRC,KAAM,IAAI,KAAK,CACbC,OAAQ,CAAC,EAAG,GACZC,KAAM,K","sources":["webpack:///./custom-interactions.js"],"sourcesContent":["import Feature from '../src/ol/Feature.js';\nimport Map from '../src/ol/Map.js';\nimport View from '../src/ol/View.js';\nimport LineString from '../src/ol/geom/LineString.js';\nimport Point from '../src/ol/geom/Point.js';\nimport Polygon from '../src/ol/geom/Polygon.js';\nimport PointerInteraction from '../src/ol/interaction/Pointer.js';\nimport {defaults as defaultInteractions} from '../src/ol/interaction/defaults.js';\nimport TileLayer from '../src/ol/layer/Tile.js';\nimport VectorLayer from '../src/ol/layer/Vector.js';\nimport OGCMapTile from '../src/ol/source/OGCMapTile.js';\nimport VectorSource from '../src/ol/source/Vector.js';\n\nclass Drag extends PointerInteraction {\n  constructor() {\n    super({\n      handleDownEvent: handleDownEvent,\n      handleDragEvent: handleDragEvent,\n      handleMoveEvent: handleMoveEvent,\n      handleUpEvent: handleUpEvent,\n    });\n\n    /**\n     * @type {import('../src/ol/coordinate.js').Coordinate}\n     * @private\n     */\n    this.coordinate_ = null;\n\n    /**\n     * @type {string|undefined}\n     * @private\n     */\n    this.cursor_ = 'pointer';\n\n    /**\n     * @type {Feature}\n     * @private\n     */\n    this.feature_ = null;\n\n    /**\n     * @type {string|undefined}\n     * @private\n     */\n    this.previousCursor_ = undefined;\n  }\n}\n\n/**\n * @param {import('../src/ol/MapBrowserEvent.js').default} evt Map browser event.\n * @return {boolean} `true` to start the drag sequence.\n */\nfunction handleDownEvent(evt) {\n  const map = evt.map;\n\n  const feature = map.forEachFeatureAtPixel(evt.pixel, function (feature) {\n    return feature;\n  });\n\n  if (feature) {\n    this.coordinate_ = evt.coordinate;\n    this.feature_ = feature;\n  }\n\n  return !!feature;\n}\n\n/**\n * @param {import('../src/ol/MapBrowserEvent.js').default} evt Map browser event.\n */\nfunction handleDragEvent(evt) {\n  const deltaX = evt.coordinate[0] - this.coordinate_[0];\n  const deltaY = evt.coordinate[1] - this.coordinate_[1];\n\n  const geometry = this.feature_.getGeometry();\n  geometry.translate(deltaX, deltaY);\n\n  this.coordinate_[0] = evt.coordinate[0];\n  this.coordinate_[1] = evt.coordinate[1];\n}\n\n/**\n * @param {import('../src/ol/MapBrowserEvent.js').default} evt Event.\n */\nfunction handleMoveEvent(evt) {\n  if (this.cursor_) {\n    const map = evt.map;\n    const feature = map.forEachFeatureAtPixel(evt.pixel, function (feature) {\n      return feature;\n    });\n    const element = evt.map.getTargetElement();\n    if (feature) {\n      if (element.style.cursor != this.cursor_) {\n        this.previousCursor_ = element.style.cursor;\n        element.style.cursor = this.cursor_;\n      }\n    } else if (this.previousCursor_ !== undefined) {\n      element.style.cursor = this.previousCursor_;\n      this.previousCursor_ = undefined;\n    }\n  }\n}\n\n/**\n * @return {boolean} `false` to stop the drag sequence.\n */\nfunction handleUpEvent() {\n  this.coordinate_ = null;\n  this.feature_ = null;\n  return false;\n}\n\nconst pointFeature = new Feature(new Point([0, 0]));\n\nconst lineFeature = new Feature(\n  new LineString([\n    [-1e7, 1e6],\n    [-1e6, 3e6],\n  ]),\n);\n\nconst polygonFeature = new Feature(\n  new Polygon([\n    [\n      [-3e6, -1e6],\n      [-3e6, 1e6],\n      [-1e6, 1e6],\n      [-1e6, -1e6],\n      [-3e6, -1e6],\n    ],\n  ]),\n);\n\nconst map = new Map({\n  interactions: defaultInteractions().extend([new Drag()]),\n  layers: [\n    new TileLayer({\n      source: new OGCMapTile({\n        url: 'https://maps.gnosis.earth/ogcapi/collections/NaturalEarth:raster:HYP_HR_SR_OB_DR/map/tiles/WebMercatorQuad',\n        crossOrigin: '',\n      }),\n    }),\n    new VectorLayer({\n      source: new VectorSource({\n        features: [pointFeature, lineFeature, polygonFeature],\n      }),\n      style: {\n        'icon-src': 'data/icon.png',\n        'icon-opacity': 0.95,\n        'icon-anchor': [0.5, 46],\n        'icon-anchor-x-units': 'fraction',\n        'icon-anchor-y-units': 'pixels',\n        'stroke-width': 3,\n        'stroke-color': [255, 0, 0, 1],\n        'fill-color': [0, 0, 255, 0.6],\n      },\n    }),\n  ],\n  target: 'map',\n  view: new View({\n    center: [0, 0],\n    zoom: 2,\n  }),\n});\n"],"names":["Drag","constructor","super","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","this","coordinate_","cursor_","feature_","previousCursor_","undefined","evt","feature","map","forEachFeatureAtPixel","pixel","coordinate","deltaX","deltaY","getGeometry","translate","element","getTargetElement","style","cursor","pointFeature","lineFeature","polygonFeature","interactions","extend","layers","source","url","crossOrigin","features","target","view","center","zoom"],"sourceRoot":""}