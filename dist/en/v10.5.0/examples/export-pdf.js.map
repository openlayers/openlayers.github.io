{"version":3,"file":"export-pdf.js","mappings":"qLASA,MAAMA,EAAS,IAAI,IAAU,CAC3BC,OAAQ,IAAI,MAIRC,GADS,IAAI,KACIC,YACrB,6KAIFD,EAAQE,cAAcC,UAAU,YAAa,aAE7C,MAAMC,EAAS,IAAI,IAAY,CAC7BL,OAAQ,IAAI,IAAa,CACvBM,SAAU,CAACL,KAEbM,QAAS,KAGLC,EAAM,IAAI,IAAI,CAClBC,OAAQ,CAACV,EAAQM,GACjBK,OAAQ,MACRC,KAAM,IAAI,KAAK,CACbC,OAAQ,CAAC,EAAG,GACZC,KAAM,MAIJC,EAAO,CACXC,GAAI,CAAC,KAAM,KACXC,GAAI,CAAC,IAAK,KACVC,GAAI,CAAC,IAAK,KACVC,GAAI,CAAC,IAAK,KACVC,GAAI,CAAC,IAAK,KACVC,GAAI,CAAC,IAAK,MAGNC,EAAeC,SAASC,eAAe,cAE7CF,EAAaG,iBACX,SACA,WACEH,EAAaI,UAAW,EACxBH,SAASI,KAAKC,MAAMC,OAAS,WAE7B,MAAMC,EAASP,SAASC,eAAe,UAAUO,MAC3CC,EAAaC,OAAOV,SAASC,eAAe,cAAcO,OAC1DG,EAAMnB,EAAKe,GACXK,EAAQC,KAAKC,MAAOH,EAAI,GAAKF,EAAc,MAC3CM,EAASF,KAAKC,MAAOH,EAAI,GAAKF,EAAc,MAC5CO,EAAO9B,EAAI+B,UACXC,EAAiBhC,EAAIiC,UAAUC,gBAErClC,EAAImC,KAAK,kBAAkB,WACzB,MAAMC,EAAYtB,SAASuB,cAAc,UACzCD,EAAUV,MAAQA,EAClBU,EAAUP,OAASA,EACnB,MAAMS,EAAaF,EAAUG,WAAW,MACxCC,MAAMC,UAAUC,QAAQC,KACtB7B,SAAS8B,iBAAiB,qBAC1B,SAAUC,GACR,GAAIA,EAAOnB,MAAQ,EAAG,CACpB,MAAM3B,EAAU8C,EAAOC,WAAW3B,MAAMpB,QACxCuC,EAAWS,YAA0B,KAAZhD,EAAiB,EAAIyB,OAAOzB,GACrD,MAEMiD,EAFYH,EAAO1B,MAAMvB,UAG5BqD,MAAM,wBAAwB,GAC9BC,MAAM,KACNlD,IAAIwB,QAEP2B,yBAAyBV,UAAUW,aAAaC,MAC9Cf,EACAU,GAEFV,EAAWgB,UAAUT,EAAQ,EAAG,EAClC,CACF,IAEFP,EAAWS,YAAc,EACzBT,EAAWc,aAAa,EAAG,EAAG,EAAG,EAAG,EAAG,GACvC,MAAMG,EAAM,IAAI,KAAM,iBAAaC,EAAWnC,GAC9CkC,EAAIE,SACFrB,EAAUsB,UAAU,cACpB,OACA,EACA,EACAjC,EAAI,GACJA,EAAI,IAEN8B,EAAII,KAAK,WAET3D,EAAI4D,QAAQ9B,GACZ9B,EAAIiC,UAAU4B,cAAc7B,GAC5BnB,EAAaI,UAAW,EACxBH,SAASI,KAAKC,MAAMC,OAAS,MAC/B,IAGA,MAAM0C,EAAY,CAACpC,EAAOG,GAC1B7B,EAAI4D,QAAQE,GACZ,MAAMC,EAAUpC,KAAKqC,IAAItC,EAAQI,EAAK,GAAID,EAASC,EAAK,IACxD9B,EAAIiC,UAAU4B,cAAc7B,EAAiB+B,EAC/C,IACA,E","sources":["webpack:///./export-pdf.js"],"sourcesContent":["import {jsPDF} from 'jspdf';\nimport Map from '../src/ol/Map.js';\nimport View from '../src/ol/View.js';\nimport WKT from '../src/ol/format/WKT.js';\nimport TileLayer from '../src/ol/layer/Tile.js';\nimport VectorLayer from '../src/ol/layer/Vector.js';\nimport OSM from '../src/ol/source/OSM.js';\nimport VectorSource from '../src/ol/source/Vector.js';\n\nconst raster = new TileLayer({\n  source: new OSM(),\n});\n\nconst format = new WKT();\nconst feature = format.readFeature(\n  'POLYGON((10.689697265625 -25.0927734375, 34.595947265625 ' +\n    '-20.1708984375, 38.814697265625 -35.6396484375, 13.502197265625 ' +\n    '-39.1552734375, 10.689697265625 -25.0927734375))',\n);\nfeature.getGeometry().transform('EPSG:4326', 'EPSG:3857');\n\nconst vector = new VectorLayer({\n  source: new VectorSource({\n    features: [feature],\n  }),\n  opacity: 0.5,\n});\n\nconst map = new Map({\n  layers: [raster, vector],\n  target: 'map',\n  view: new View({\n    center: [0, 0],\n    zoom: 2,\n  }),\n});\n\nconst dims = {\n  a0: [1189, 841],\n  a1: [841, 594],\n  a2: [594, 420],\n  a3: [420, 297],\n  a4: [297, 210],\n  a5: [210, 148],\n};\n\nconst exportButton = document.getElementById('export-pdf');\n\nexportButton.addEventListener(\n  'click',\n  function () {\n    exportButton.disabled = true;\n    document.body.style.cursor = 'progress';\n\n    const format = document.getElementById('format').value;\n    const resolution = Number(document.getElementById('resolution').value);\n    const dim = dims[format];\n    const width = Math.round((dim[0] * resolution) / 25.4);\n    const height = Math.round((dim[1] * resolution) / 25.4);\n    const size = map.getSize();\n    const viewResolution = map.getView().getResolution();\n\n    map.once('rendercomplete', function () {\n      const mapCanvas = document.createElement('canvas');\n      mapCanvas.width = width;\n      mapCanvas.height = height;\n      const mapContext = mapCanvas.getContext('2d');\n      Array.prototype.forEach.call(\n        document.querySelectorAll('.ol-layer canvas'),\n        function (canvas) {\n          if (canvas.width > 0) {\n            const opacity = canvas.parentNode.style.opacity;\n            mapContext.globalAlpha = opacity === '' ? 1 : Number(opacity);\n            const transform = canvas.style.transform;\n            // Get the transform parameters from the style's transform matrix\n            const matrix = transform\n              .match(/^matrix\\(([^\\(]*)\\)$/)[1]\n              .split(',')\n              .map(Number);\n            // Apply the transform to the export map context\n            CanvasRenderingContext2D.prototype.setTransform.apply(\n              mapContext,\n              matrix,\n            );\n            mapContext.drawImage(canvas, 0, 0);\n          }\n        },\n      );\n      mapContext.globalAlpha = 1;\n      mapContext.setTransform(1, 0, 0, 1, 0, 0);\n      const pdf = new jsPDF('landscape', undefined, format);\n      pdf.addImage(\n        mapCanvas.toDataURL('image/jpeg'),\n        'JPEG',\n        0,\n        0,\n        dim[0],\n        dim[1],\n      );\n      pdf.save('map.pdf');\n      // Reset original map size\n      map.setSize(size);\n      map.getView().setResolution(viewResolution);\n      exportButton.disabled = false;\n      document.body.style.cursor = 'auto';\n    });\n\n    // Set print size\n    const printSize = [width, height];\n    map.setSize(printSize);\n    const scaling = Math.min(width / size[0], height / size[1]);\n    map.getView().setResolution(viewResolution / scaling);\n  },\n  false,\n);\n"],"names":["raster","source","feature","readFeature","getGeometry","transform","vector","features","opacity","map","layers","target","view","center","zoom","dims","a0","a1","a2","a3","a4","a5","exportButton","document","getElementById","addEventListener","disabled","body","style","cursor","format","value","resolution","Number","dim","width","Math","round","height","size","getSize","viewResolution","getView","getResolution","once","mapCanvas","createElement","mapContext","getContext","Array","prototype","forEach","call","querySelectorAll","canvas","parentNode","globalAlpha","matrix","match","split","CanvasRenderingContext2D","setTransform","apply","drawImage","pdf","undefined","addImage","toDataURL","save","setSize","setResolution","printSize","scaling","min"],"sourceRoot":""}