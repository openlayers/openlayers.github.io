{"version":3,"file":"fractal.js","mappings":"iKAOA,MAAMA,EAAS,IACTC,EAAQC,KAAKC,IAAID,KAAKE,GAAK,GAE3BC,EAAOL,EADCE,KAAKI,IAAIJ,KAAKE,GAAK,GAE3BG,EAAMP,EAASC,EAEfO,EAAW,IAAI,IAAW,CAC9B,CAAC,EAAGR,GACJ,CAACO,GAAMF,GACP,EAAEE,GAAMF,GACR,CAAC,EAAGL,KAGAS,EAAU,IAAI,IAAQD,GAEtBE,EAAQ,IAAI,IAAY,CAC5BC,OAAQ,IAAI,IAAa,CACvBC,SAAU,CAACH,OAIH,IAAI,IAAI,CAClBI,OAAQ,CAACH,GACTI,OAAQ,MACRC,KAAM,IAAI,KAAK,CACbC,OAAQ,CAAC,EAAG,GACZC,KAAM,MAqBV,SAASC,EAAYC,GACnB,MAAMC,EAAUD,EAAUE,KAEpBC,EAAQH,EAAUI,MAClBC,EAAML,EAAUE,KAAKE,MACrBE,EAAKD,EAAI,GAAKF,EAAM,GACpBI,EAAKF,EAAI,GAAKF,EAAM,GAGpBK,EAAY,CAChBJ,MAAO,CAACD,EAAM,GAAKG,EAAK,EAAGH,EAAM,GAAKI,EAAK,IAIvCE,EAAI1B,KAAK2B,KAAKJ,EAAKA,EAAKC,EAAKA,IAAO,EAAIzB,GACxC6B,EAAI5B,KAAK6B,MAAML,EAAID,GAAMvB,KAAKE,GAAK,EACnC4B,EAAa,CACjBT,MAAO,CAACD,EAAM,GAAKM,EAAI1B,KAAKC,IAAI2B,GAAIR,EAAM,GAAKM,EAAI1B,KAAKI,IAAIwB,KAIxDG,EAAY,CAChBV,MAAO,CAACC,EAAI,GAAKC,EAAK,EAAGD,EAAI,GAAKE,EAAK,IAGzCP,EAAUE,KAAOM,EACjBA,EAAUN,KAAOW,EACjBA,EAAWX,KAAOY,EAClBA,EAAUZ,KAAOD,CACnB,CAwBA,MAAMc,EAAaC,SAASC,eAAe,SAE3C,SAASC,KAxET,SAAqBC,GACnB,MAAMC,EAAW/B,EAASgC,QACpBC,EA8CR,SAAuBC,GACrB,MAAMD,EAAQ,CACZlB,MAAOmB,EAAY,IAEfC,EAASD,EAAYC,OAC3B,IAAK,IAAIC,EAAQ,EAAGC,EAAOJ,EAAOG,EAAQD,EAAS,IAAKC,EACtDC,EAAKxB,KAAO,CACVE,MAAOmB,EAAYE,EAAQ,IAE7BC,EAAOA,EAAKxB,KAEd,OAAOoB,CACT,CA1DgBK,CAAcP,EAASQ,kBACrC,IAAK,IAAIC,EAAI,EAAGA,EAAIV,IAASU,EAAG,CAC9B,IAAIH,EAAOJ,EACX,KAAOI,EAAKxB,MAAM,CAChB,MAAMA,EAAOwB,EAAKxB,KAClBH,EAAY2B,GACZA,EAAOxB,CACT,CACF,CACA,MAAMqB,EAmDR,SAAuBD,GACrB,MAAMC,EAAc,CAACD,EAAMlB,OAC3B,IAAK,IAAIsB,EAAOJ,EAAOO,EAAI,EAAGH,EAAKxB,KAAMwB,EAAOA,EAAKxB,OAAQ2B,EAC3DN,EAAYM,GAAKH,EAAKxB,KAAKE,MAE7B,OAAOmB,CACT,CAzDsBO,CAAcR,GAClCN,SAASC,eAAe,SAASc,UAAYC,OAAOT,EAAYC,QAChEJ,EAASa,eAAeV,GACxBjC,EAAQ4C,YAAYd,EACtB,CA0DEe,CAAYC,OAAOrB,EAAWsB,OAChC,CAEA,IAAIC,EAMJvB,EAAWwB,SAAW,WACpBC,OAAOC,aAAaH,GACpBA,EAAcE,OAAOE,WAAWxB,EAAQ,IAC1C,EAEAA,G","sources":["webpack:///./fractal.js"],"sourcesContent":["import Feature from '../src/ol/Feature.js';\nimport Map from '../src/ol/Map.js';\nimport View from '../src/ol/View.js';\nimport LineString from '../src/ol/geom/LineString.js';\nimport VectorLayer from '../src/ol/layer/Vector.js';\nimport VectorSource from '../src/ol/source/Vector.js';\n\nconst radius = 10e6;\nconst cos30 = Math.cos(Math.PI / 6);\nconst sin30 = Math.sin(Math.PI / 6);\nconst rise = radius * sin30;\nconst run = radius * cos30;\n\nconst triangle = new LineString([\n  [0, radius],\n  [run, -rise],\n  [-run, -rise],\n  [0, radius],\n]);\n\nconst feature = new Feature(triangle);\n\nconst layer = new VectorLayer({\n  source: new VectorSource({\n    features: [feature],\n  }),\n});\n\nconst map = new Map({\n  layers: [layer],\n  target: 'map',\n  view: new View({\n    center: [0, 0],\n    zoom: 1,\n  }),\n});\n\nfunction makeFractal(depth) {\n  const geometry = triangle.clone();\n  const graph = coordsToGraph(geometry.getCoordinates());\n  for (let i = 0; i < depth; ++i) {\n    let node = graph;\n    while (node.next) {\n      const next = node.next;\n      injectNodes(node);\n      node = next;\n    }\n  }\n  const coordinates = graphToCoords(graph);\n  document.getElementById('count').innerText = String(coordinates.length);\n  geometry.setCoordinates(coordinates);\n  feature.setGeometry(geometry);\n}\n\nfunction injectNodes(startNode) {\n  const endNode = startNode.next;\n\n  const start = startNode.point;\n  const end = startNode.next.point;\n  const dx = end[0] - start[0];\n  const dy = end[1] - start[1];\n\n  // first point at 1/3 along the segment\n  const firstNode = {\n    point: [start[0] + dx / 3, start[1] + dy / 3],\n  };\n\n  // second point at peak of _/\\_\n  const r = Math.sqrt(dx * dx + dy * dy) / (2 * cos30);\n  const a = Math.atan2(dy, dx) + Math.PI / 6;\n  const secondNode = {\n    point: [start[0] + r * Math.cos(a), start[1] + r * Math.sin(a)],\n  };\n\n  // third point at 2/3 along the segment\n  const thirdNode = {\n    point: [end[0] - dx / 3, end[1] - dy / 3],\n  };\n\n  startNode.next = firstNode;\n  firstNode.next = secondNode;\n  secondNode.next = thirdNode;\n  thirdNode.next = endNode;\n}\n\nfunction coordsToGraph(coordinates) {\n  const graph = {\n    point: coordinates[0],\n  };\n  const length = coordinates.length;\n  for (let level = 0, node = graph; level < length - 1; ++level) {\n    node.next = {\n      point: coordinates[level + 1],\n    };\n    node = node.next;\n  }\n  return graph;\n}\n\nfunction graphToCoords(graph) {\n  const coordinates = [graph.point];\n  for (let node = graph, i = 1; node.next; node = node.next, ++i) {\n    coordinates[i] = node.next.point;\n  }\n  return coordinates;\n}\n\nconst depthInput = document.getElementById('depth');\n\nfunction update() {\n  makeFractal(Number(depthInput.value));\n}\n\nlet updateTimer;\n\n/**\n * Regenerate fractal on depth change.  Change events are debounced so updates\n * only occur every 200ms.\n */\ndepthInput.onchange = function () {\n  window.clearTimeout(updateTimer);\n  updateTimer = window.setTimeout(update, 200);\n};\n\nupdate();\n"],"names":["radius","cos30","Math","cos","PI","rise","sin","run","triangle","feature","layer","source","features","layers","target","view","center","zoom","injectNodes","startNode","endNode","next","start","point","end","dx","dy","firstNode","r","sqrt","a","atan2","secondNode","thirdNode","depthInput","document","getElementById","update","depth","geometry","clone","graph","coordinates","length","level","node","coordsToGraph","getCoordinates","i","graphToCoords","innerText","String","setCoordinates","setGeometry","makeFractal","Number","value","updateTimer","onchange","window","clearTimeout","setTimeout"],"sourceRoot":""}