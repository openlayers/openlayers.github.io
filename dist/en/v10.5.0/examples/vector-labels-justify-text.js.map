{"version":3,"file":"vector-labels-justify-text.js","mappings":"mQAgBA,MAAMA,EAAW,CACf,CACEC,SAAU,IAAI,IAAM,EAAE,KAAS,SAC/BC,UAAW,QAEb,CACED,SAAU,IAAI,IAAM,EAAE,MAAS,SAC/BC,UAAW,UAEb,CACED,SAAU,IAAI,IAAM,EAAE,IAAS,SAC/BC,UAAW,SAEb,CACED,SAAU,IAAI,IAAM,EAAE,KAAS,SAC/BC,UAAW,OACXC,QAAS,UAEX,CACEF,SAAU,IAAI,IAAM,EAAE,MAAS,SAC/BC,UAAW,SACXC,QAAS,UAEX,CACEF,SAAU,IAAI,IAAM,EAAE,IAAS,SAC/BC,UAAW,QACXC,QAAS,UAEX,CACEF,SAAU,IAAI,IAAM,EAAE,KAAS,SAC/BC,UAAW,OACXC,QAAS,QAEX,CACEF,SAAU,IAAI,IAAM,EAAE,MAAS,SAC/BC,UAAW,SACXC,QAAS,QAEX,CACEF,SAAU,IAAI,IAAM,EAAE,IAAS,SAC/BC,UAAW,QACXC,QAAS,SA6Bb,MAAMC,EAAe,IAAI,IAAY,CACnCC,OAAQ,IAAI,IAAa,CACvBL,SAAU,IAAI,IACZA,EAASM,KAAKC,IACZ,MAAMC,EAAU,IAAI,IAAQ,CAC1BP,SAAUM,EAAeN,WAG3B,OADAO,EAAQC,SAhChB,UAAqB,UAACP,EAAS,QAAEC,IAC/B,OAAO,IAAI,KAAM,CACfO,MAAO,IAAI,IAAY,CACrBC,OAAQ,GACRC,KAAM,IAAI,IAAK,CAACC,MAAO,yBACvBC,OAAQ,IAAI,IAAO,CAACD,MAAO,MAAOE,MAAO,MAE3CC,KAAM,IAAI,IAAK,CACbC,KAAM,kBACNf,YACAC,UACAa,KACE,uCAAuCd,KACtCC,EAAU,cAAcA,IAAY,IACvCS,KAAM,IAAI,IAAK,CACbC,MAAO,CAAC,IAAK,IAAK,IAAK,KAEzBK,eAAgB,IAAI,IAAK,CACvBL,MAAO,CAAC,IAAK,GAAI,IAAK,MAExBM,QAAS,CAAC,EAAG,EAAG,EAAG,MAGzB,CASyBC,CAAYb,IACtBC,CAAO,KAGlBa,OAAQ,IAAI,QAIJ,IAAI,IAAI,CAClBC,OAAQ,CACN,IAAI,IAAU,CACZjB,OAAQ,IAAI,MAEdD,GAEFmB,OAAQ,MACRC,KAAM,IAAI,KAAK,CACbC,OAAQ,EAAE,MAAS,QACnBC,KAAM,K","sources":["webpack:///./vector-labels-justify-text.js"],"sourcesContent":["import Collection from '../src/ol/Collection.js';\nimport Feature from '../src/ol/Feature.js';\nimport Map from '../src/ol/Map.js';\nimport View from '../src/ol/View.js';\nimport GeoJSON from '../src/ol/format/GeoJSON.js';\nimport Point from '../src/ol/geom/Point.js';\nimport TileLayer from '../src/ol/layer/Tile.js';\nimport VectorLayer from '../src/ol/layer/Vector.js';\nimport OSM from '../src/ol/source/OSM.js';\nimport VectorSource from '../src/ol/source/Vector.js';\nimport CircleStyle from '../src/ol/style/Circle.js';\nimport Fill from '../src/ol/style/Fill.js';\nimport Stroke from '../src/ol/style/Stroke.js';\nimport Style from '../src/ol/style/Style.js';\nimport Text from '../src/ol/style/Text.js';\n\nconst features = [\n  {\n    geometry: new Point([-8300000, 6095000]),\n    textAlign: 'left',\n  },\n  {\n    geometry: new Point([-8150000, 6095000]),\n    textAlign: 'center',\n  },\n  {\n    geometry: new Point([-8000000, 6095000]),\n    textAlign: 'right',\n  },\n  {\n    geometry: new Point([-8300000, 6025000]),\n    textAlign: 'left',\n    justify: 'center',\n  },\n  {\n    geometry: new Point([-8150000, 6025000]),\n    textAlign: 'center',\n    justify: 'center',\n  },\n  {\n    geometry: new Point([-8000000, 6025000]),\n    textAlign: 'right',\n    justify: 'center',\n  },\n  {\n    geometry: new Point([-8300000, 5955000]),\n    textAlign: 'left',\n    justify: 'left',\n  },\n  {\n    geometry: new Point([-8150000, 5955000]),\n    textAlign: 'center',\n    justify: 'left',\n  },\n  {\n    geometry: new Point([-8000000, 5955000]),\n    textAlign: 'right',\n    justify: 'left',\n  },\n];\n\nfunction createStyle({textAlign, justify = undefined}) {\n  return new Style({\n    image: new CircleStyle({\n      radius: 10,\n      fill: new Fill({color: 'rgba(255, 0, 0, 0.1)'}),\n      stroke: new Stroke({color: 'red', width: 1}),\n    }),\n    text: new Text({\n      font: '16px sans-serif',\n      textAlign,\n      justify,\n      text:\n        `Justify text inside box\\ntextAlign: ${textAlign}` +\n        (justify ? `\\njustify: ${justify}` : ''),\n      fill: new Fill({\n        color: [255, 255, 255, 1],\n      }),\n      backgroundFill: new Fill({\n        color: [168, 50, 153, 0.6],\n      }),\n      padding: [2, 2, 2, 2],\n    }),\n  });\n}\n\nconst vectorPoints = new VectorLayer({\n  source: new VectorSource({\n    features: new Collection(\n      features.map((featureOptions) => {\n        const feature = new Feature({\n          geometry: featureOptions.geometry,\n        });\n        feature.setStyle(createStyle(featureOptions));\n        return feature;\n      }),\n    ),\n    format: new GeoJSON(),\n  }),\n});\n\nconst map = new Map({\n  layers: [\n    new TileLayer({\n      source: new OSM(),\n    }),\n    vectorPoints,\n  ],\n  target: 'map',\n  view: new View({\n    center: [-8150000, 6025000],\n    zoom: 8,\n  }),\n});\n"],"names":["features","geometry","textAlign","justify","vectorPoints","source","map","featureOptions","feature","setStyle","image","radius","fill","color","stroke","width","text","font","backgroundFill","padding","createStyle","format","layers","target","view","center","zoom"],"sourceRoot":""}