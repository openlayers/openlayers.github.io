{"version":3,"file":"svg-layer.js","mappings":"uLASA,MAAMA,EAAM,IAAI,IAAI,CAClBC,OAAQ,MACRC,KAAM,IAAI,KAAK,CACbC,OAAQ,CAAC,EAAG,GACZC,OAAQ,EAAE,KAAM,GAAI,IAAK,IACzBC,WAAY,YACZC,KAAM,MAIJC,EAAeC,SAASC,cAAc,OACtCC,EAAM,IAAIC,eAChBD,EAAIE,KAAK,MAAO,kBAChBF,EAAIG,iBAAiB,QAAQ,WAC3B,MAAMC,EAAMJ,EAAIK,YAAYC,gBAC5BT,EAAaU,cAAcC,WAAWJ,GACtCP,EAAaY,YAAYL,EAC3B,IACAJ,EAAIU,OAEJ,MAAMC,EAAQ,KAERC,EAAgB,QACtBf,EAAagB,MAAMF,MAAQA,EAAQ,KACnCd,EAAagB,MAAMC,OAASA,SAC5BjB,EAAagB,MAAME,gBAAkB,WACrClB,EAAamB,UAAY,YACzBnB,EAAagB,MAAMI,SAAW,WAE9B3B,EAAI4B,SACF,IAAI,IAAM,CACRC,OAAQ,SAAUC,GAChB,MAAMC,EAAQT,EAAgBQ,EAAWE,UAAUC,WAC7C9B,EAAS2B,EAAWE,UAAU7B,OAC9B+B,EAAOJ,EAAWI,KAClBC,GAAe,QACnBD,EAAK,GAAK,EACVA,EAAK,GAAK,EACVH,EACAA,EACAD,EAAWE,UAAUI,UACpBjC,EAAO,GAAKmB,EAAgBD,KAC7BlB,EAAO,GAAKmB,EAAgBE,KAI9B,OAFAjB,EAAagB,MAAMc,UAAYF,EAC/B5B,EAAagB,MAAMe,QAAUC,OAAOC,KAAKC,cAClClC,CACT,KAIJP,EAAI4B,SACF,IAAI,IAAO,CACTc,OAAQ,IAAI,IAAa,CACvBC,SAAU,CAAC,IAAI,IAAQ,IAAI,IAAM,CAAC,EAAG,QAEvCpB,MAAO,CACL,oBAAqB,OACrB,gBAAiB,GACjB,sBAAuB,W","sources":["webpack:///./svg-layer.js"],"sourcesContent":["import Feature from '../src/ol/Feature.js';\nimport Map from '../src/ol/Map.js';\nimport View from '../src/ol/View.js';\nimport Point from '../src/ol/geom/Point.js';\nimport Layer from '../src/ol/layer/Layer.js';\nimport Vector from '../src/ol/layer/Vector.js';\nimport VectorSource from '../src/ol/source/Vector.js';\nimport {composeCssTransform} from '../src/ol/transform.js';\n\nconst map = new Map({\n  target: 'map',\n  view: new View({\n    center: [0, 0],\n    extent: [-180, -90, 180, 90],\n    projection: 'EPSG:4326',\n    zoom: 2,\n  }),\n});\n\nconst svgContainer = document.createElement('div');\nconst xhr = new XMLHttpRequest();\nxhr.open('GET', 'data/world.svg');\nxhr.addEventListener('load', function () {\n  const svg = xhr.responseXML.documentElement;\n  svgContainer.ownerDocument.importNode(svg);\n  svgContainer.appendChild(svg);\n});\nxhr.send();\n\nconst width = 2560;\nconst height = 1280;\nconst svgResolution = 360 / width;\nsvgContainer.style.width = width + 'px';\nsvgContainer.style.height = height + 'px';\nsvgContainer.style.transformOrigin = 'top left';\nsvgContainer.className = 'svg-layer';\nsvgContainer.style.position = 'absolute';\n\nmap.addLayer(\n  new Layer({\n    render: function (frameState) {\n      const scale = svgResolution / frameState.viewState.resolution;\n      const center = frameState.viewState.center;\n      const size = frameState.size;\n      const cssTransform = composeCssTransform(\n        size[0] / 2,\n        size[1] / 2,\n        scale,\n        scale,\n        frameState.viewState.rotation,\n        -center[0] / svgResolution - width / 2,\n        center[1] / svgResolution - height / 2,\n      );\n      svgContainer.style.transform = cssTransform;\n      svgContainer.style.opacity = String(this.getOpacity());\n      return svgContainer;\n    },\n  }),\n);\n\nmap.addLayer(\n  new Vector({\n    source: new VectorSource({\n      features: [new Feature(new Point([0, 0]))],\n    }),\n    style: {\n      'circle-fill-color': 'blue',\n      'circle-radius': 10,\n      'circle-stroke-color': 'white',\n    },\n  }),\n);\n"],"names":["map","target","view","center","extent","projection","zoom","svgContainer","document","createElement","xhr","XMLHttpRequest","open","addEventListener","svg","responseXML","documentElement","ownerDocument","importNode","appendChild","send","width","svgResolution","style","height","transformOrigin","className","position","addLayer","render","frameState","scale","viewState","resolution","size","cssTransform","rotation","transform","opacity","String","this","getOpacity","source","features"],"sourceRoot":""}