{"version":3,"file":"reprojection.js","mappings":"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","sources":["webpack:///./reprojection.js"],"sourcesContent":["import proj4 from 'proj4';\nimport Map from '../src/ol/Map.js';\nimport View from '../src/ol/View.js';\nimport {getCenter, getWidth} from '../src/ol/extent.js';\nimport WMTSCapabilities from '../src/ol/format/WMTSCapabilities.js';\nimport TileLayer from '../src/ol/layer/WebGLTile.js';\nimport {register} from '../src/ol/proj/proj4.js';\nimport {get as getProjection, transformExtent} from '../src/ol/proj.js';\nimport OSM from '../src/ol/source/OSM.js';\nimport TileImage from '../src/ol/source/TileImage.js';\nimport TileWMS from '../src/ol/source/TileWMS.js';\nimport WMTS, {optionsFromCapabilities} from '../src/ol/source/WMTS.js';\nimport TileGrid from '../src/ol/tilegrid/TileGrid.js';\nimport {createXYZ} from '../src/ol/tilegrid.js';\n\nproj4.defs(\n  'EPSG:27700',\n  '+proj=tmerc +lat_0=49 +lon_0=-2 +k=0.9996012717 ' +\n    '+x_0=400000 +y_0=-100000 +ellps=airy ' +\n    '+towgs84=446.448,-125.157,542.06,0.15,0.247,0.842,-20.489 ' +\n    '+units=m +no_defs',\n);\nproj4.defs(\n  'EPSG:23032',\n  '+proj=utm +zone=32 +ellps=intl ' +\n    '+towgs84=-87,-98,-121,0,0,0,0 +units=m +no_defs',\n);\nproj4.defs(\n  'EPSG:5479',\n  '+proj=lcc +lat_1=-76.66666666666667 +lat_2=' +\n    '-79.33333333333333 +lat_0=-78 +lon_0=163 +x_0=7000000 +y_0=5000000 ' +\n    '+ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs',\n);\nproj4.defs(\n  'EPSG:21781',\n  '+proj=somerc +lat_0=46.95240555555556 ' +\n    '+lon_0=7.439583333333333 +k_0=1 +x_0=600000 +y_0=200000 +ellps=bessel ' +\n    '+towgs84=674.4,15.1,405.3,0,0,0,0 +units=m +no_defs',\n);\nproj4.defs(\n  'EPSG:3413',\n  '+proj=stere +lat_0=90 +lat_ts=70 +lon_0=-45 +k=1 ' +\n    '+x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs',\n);\nproj4.defs(\n  'EPSG:2163',\n  '+proj=laea +lat_0=45 +lon_0=-100 +x_0=0 +y_0=0 ' +\n    '+a=6370997 +b=6370997 +units=m +no_defs',\n);\nproj4.defs(\n  'ESRI:54009',\n  '+proj=moll +lon_0=0 +x_0=0 +y_0=0 +datum=WGS84 ' + '+units=m +no_defs',\n);\nregister(proj4);\n\nconst proj27700 = getProjection('EPSG:27700');\nproj27700.setExtent([-650000, -150000, 1350000, 1450000]);\n\nconst proj23032 = getProjection('EPSG:23032');\nproj23032.setExtent([-1206118.71, 4021309.92, 1295389.0, 8051813.28]);\n\nconst proj5479 = getProjection('EPSG:5479');\nproj5479.setExtent([6825737.53, 4189159.8, 9633741.96, 5782472.71]);\n\nconst proj21781 = getProjection('EPSG:21781');\nproj21781.setExtent([485071.54, 75346.36, 828515.78, 299941.84]);\n\nconst proj3413 = getProjection('EPSG:3413');\nproj3413.setExtent([-4194304, -4194304, 4194304, 4194304]);\n\nconst proj2163 = getProjection('EPSG:2163');\nproj2163.setExtent([-8040784.5135, -2577524.921, 3668901.4484, 4785105.1096]);\n\nconst proj54009 = getProjection('ESRI:54009');\nproj54009.setExtent([-18e6, -9e6, 18e6, 9e6]);\n\nconst layers = {};\n\nlayers['osm'] = new TileLayer({\n  source: new OSM(),\n});\n\nlayers['wms4326'] = new TileLayer({\n  source: new TileWMS({\n    url: 'https://ahocevar.com/geoserver/gwc/service/wms',\n    crossOrigin: '',\n    params: {\n      'LAYERS': 'ne:NE1_HR_LC_SR_W_DR',\n      'TILED': true,\n      'VERSION': '1.1.1',\n    },\n    projection: 'EPSG:4326',\n    // Source tile grid (before reprojection)\n    tileGrid: createXYZ({\n      extent: [-180, -90, 180, 90],\n      maxResolution: 360 / 512,\n      maxZoom: 10,\n    }),\n    // Accept a reprojection error of 2 pixels\n    reprojectionErrorThreshold: 2,\n  }),\n});\n\nlayers['wms21781'] = new TileLayer({\n  source: new TileWMS({\n    attributions:\n      '© <a href=\"https://shop.swisstopo.admin.ch/en/products/maps/national/lk1000\"' +\n      'target=\"_blank\">Pixelmap 1:1000000 / geo.admin.ch</a>',\n    crossOrigin: 'anonymous',\n    params: {\n      'LAYERS': 'ch.swisstopo.pixelkarte-farbe-pk1000.noscale',\n      'FORMAT': 'image/jpeg',\n    },\n    url: 'https://wms.geo.admin.ch/',\n    projection: 'EPSG:21781',\n  }),\n});\n\nconst parser = new WMTSCapabilities();\n\nlayers['wmts3413'] = new TileLayer();\nconst urlA =\n  'https://map1.vis.earthdata.nasa.gov/wmts-arctic/' +\n  'wmts.cgi?SERVICE=WMTS&request=GetCapabilities';\nfetch(urlA)\n  .then(function (response) {\n    return response.text();\n  })\n  .then(function (text) {\n    const result = parser.read(text);\n    const options = optionsFromCapabilities(result, {\n      layer: 'OSM_Land_Mask',\n      matrixSet: 'EPSG3413_250m',\n    });\n    options.crossOrigin = '';\n    options.projection = 'EPSG:3413';\n    options.wrapX = false;\n    layers['wmts3413'].setSource(new WMTS(options));\n  });\n\nlayers['bng'] = new TileLayer();\nconst urlB =\n  'https://tiles.arcgis.com/tiles/qHLhLQrcvEnxjtPr/arcgis/rest/services/OS_Open_Raster/MapServer/WMTS';\nfetch(urlB)\n  .then(function (response) {\n    return response.text();\n  })\n  .then(function (text) {\n    const result = parser.read(text);\n    const options = optionsFromCapabilities(result, {\n      layer: 'OS_Open_Raster',\n    });\n    options.attributions =\n      'Contains OS data © Crown Copyright and database right ' +\n      new Date().getFullYear();\n    options.crossOrigin = '';\n    options.projection = 'EPSG:27700';\n    options.wrapX = false;\n    layers['bng'].setSource(new WMTS(options));\n  });\n\nconst startResolution = getWidth(getProjection('EPSG:3857').getExtent()) / 256;\nconst resolutions = new Array(22);\nfor (let i = 0, ii = resolutions.length; i < ii; ++i) {\n  resolutions[i] = startResolution / Math.pow(2, i);\n}\n\nlayers['states'] = new TileLayer({\n  source: new TileWMS({\n    url: 'https://ahocevar.com/geoserver/wms',\n    crossOrigin: '',\n    params: {'LAYERS': 'topp:states'},\n    serverType: 'geoserver',\n    tileGrid: new TileGrid({\n      extent: [-13884991, 2870341, -7455066, 6338219],\n      resolutions: resolutions,\n      tileSize: [512, 256],\n    }),\n    projection: 'EPSG:3857',\n  }),\n});\n\nconst map = new Map({\n  layers: [layers['osm'], layers['bng']],\n  target: 'map',\n  view: new View({\n    projection: 'EPSG:3857',\n    center: [0, 0],\n    zoom: 2,\n  }),\n});\n\nconst baseLayerSelect = document.getElementById('base-layer');\nconst overlayLayerSelect = document.getElementById('overlay-layer');\nconst viewProjSelect = document.getElementById('view-projection');\nconst renderEdgesCheckbox = document.getElementById('render-edges');\nlet renderEdges = false;\n\nfunction updateViewProjection() {\n  const newProj = getProjection(viewProjSelect.value);\n  const newProjExtent = newProj.getExtent();\n  const newView = new View({\n    projection: newProj,\n    center: getCenter(newProjExtent || [0, 0, 0, 0]),\n    zoom: 0,\n    extent: newProjExtent || undefined,\n  });\n  map.setView(newView);\n\n  // Example how to prevent double occurrence of map by limiting layer extent\n  if (newProj.isGlobal()) {\n    layers['bng'].setExtent(\n      transformExtent(proj27700.getExtent(), proj27700, newProj, 2),\n    );\n  } else {\n    layers['bng'].setExtent(undefined);\n  }\n}\n\n/**\n * Handle change event.\n */\nviewProjSelect.onchange = function () {\n  updateViewProjection();\n};\n\nupdateViewProjection();\n\nconst updateRenderEdgesOnLayer = function (layer) {\n  if (layer instanceof TileLayer) {\n    const source = layer.getSource();\n    if (source instanceof TileImage) {\n      source.setRenderReprojectionEdges(renderEdges);\n    }\n  }\n};\n\n/**\n * Handle change event.\n */\nbaseLayerSelect.onchange = function () {\n  const layer = layers[baseLayerSelect.value];\n  if (layer) {\n    layer.setOpacity(1);\n    updateRenderEdgesOnLayer(layer);\n    map.getLayers().setAt(0, layer);\n  }\n};\n\n/**\n * Handle change event.\n */\noverlayLayerSelect.onchange = function () {\n  const layer = layers[overlayLayerSelect.value];\n  if (layer) {\n    layer.setOpacity(0.7);\n    updateRenderEdgesOnLayer(layer);\n    map.getLayers().setAt(1, layer);\n  }\n};\n\n/**\n * Handle change event.\n */\nrenderEdgesCheckbox.onchange = function () {\n  renderEdges = renderEdgesCheckbox.checked;\n  map.getLayers().forEach(function (layer) {\n    updateRenderEdgesOnLayer(layer);\n  });\n};\n"],"names":["defs","proj27700","setExtent","layers","source","url","crossOrigin","params","projection","tileGrid","extent","maxResolution","maxZoom","reprojectionErrorThreshold","attributions","parser","fetch","then","response","text","result","read","options","layer","matrixSet","wrapX","setSource","Date","getFullYear","startResolution","getExtent","resolutions","Array","i","ii","length","Math","pow","serverType","tileSize","map","target","view","center","zoom","baseLayerSelect","document","getElementById","overlayLayerSelect","viewProjSelect","renderEdgesCheckbox","renderEdges","updateViewProjection","newProj","value","newProjExtent","newView","undefined","setView","isGlobal","onchange","updateRenderEdgesOnLayer","getSource","setRenderReprojectionEdges","setOpacity","getLayers","setAt","checked","forEach"],"sourceRoot":""}