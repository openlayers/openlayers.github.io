{"version":3,"file":"hit-tolerance.js","mappings":"4MAWA,MAAMA,EAAS,IAAI,IAAU,CAC3BC,OAAQ,IAAI,MAGRC,EAAQ,IAAI,KAAM,CACtBC,OAAQ,IAAI,IAAO,CACjBC,MAAO,QACPC,MAAO,MAILC,EAAU,IAAI,IAClB,IAAI,IAAW,CACb,EAAE,IAAS,GACX,CAAC,IAAS,MAIRC,EAAS,IAAI,IAAY,CAC7BN,OAAQ,IAAI,IAAa,CACvBO,SAAU,CAACF,KAEbJ,MAAOA,IAGHO,EAAM,IAAI,IAAI,CAClBC,OAAQ,CAACV,EAAQO,GACjBI,OAAQ,MACRC,KAAM,IAAI,KAAK,CACbC,OAAQ,CAAC,EAAG,GACZC,KAAM,MAIV,IAAIC,EAEJ,MAAMC,EAAgBC,SAASC,eAAe,UAE9CT,EAAIU,GAAG,eAAe,SAAUC,GAC9B,IAAIC,GAAM,EACVZ,EAAIa,sBACFF,EAAEG,OACF,WACEF,GAAM,CACR,GACA,CACEN,aAAcA,IAGdM,GACFnB,EAAMsB,YAAYC,SAAS,SAC3BT,EAAcU,UAAY,uBAE1BxB,EAAMsB,YAAYC,SAAS,SAC3BT,EAAcU,UAAY,uBAE5BpB,EAAQqB,SACV,IAEA,MAAMC,EAA4BX,SAASC,eAAe,gBACpDW,EAAeZ,SAASC,eAAe,UAEvCY,EAAqB,WACzBf,EAAegB,SAASH,EAA0BI,MAAO,IAEzD,MAAMC,EAAO,EAAIlB,EAAe,EAChCc,EAAaxB,MAAQ4B,EACrBJ,EAAaK,OAASD,EACtB,MAAME,EAAMN,EAAaO,WAAW,MACpCD,EAAIE,UAAU,EAAG,EAAGJ,EAAMA,GAC1BE,EAAIG,YACJH,EAAII,IACFxB,EAAe,EACfA,EAAe,EACfA,EAAe,GACf,EACA,EAAIyB,KAAKC,IAEXN,EAAIO,OACJP,EAAIhC,QACN,EAEAyB,EAA0Be,SAAWb,EACrCA,G","sources":["webpack:///./hit-tolerance.js"],"sourcesContent":["import Feature from '../src/ol/Feature.js';\nimport Map from '../src/ol/Map.js';\nimport View from '../src/ol/View.js';\nimport LineString from '../src/ol/geom/LineString.js';\nimport TileLayer from '../src/ol/layer/Tile.js';\nimport VectorLayer from '../src/ol/layer/Vector.js';\nimport OSM from '../src/ol/source/OSM.js';\nimport VectorSource from '../src/ol/source/Vector.js';\nimport Stroke from '../src/ol/style/Stroke.js';\nimport Style from '../src/ol/style/Style.js';\n\nconst raster = new TileLayer({\n  source: new OSM(),\n});\n\nconst style = new Style({\n  stroke: new Stroke({\n    color: 'black',\n    width: 1,\n  }),\n});\n\nconst feature = new Feature(\n  new LineString([\n    [-4000000, 0],\n    [4000000, 0],\n  ]),\n);\n\nconst vector = new VectorLayer({\n  source: new VectorSource({\n    features: [feature],\n  }),\n  style: style,\n});\n\nconst map = new Map({\n  layers: [raster, vector],\n  target: 'map',\n  view: new View({\n    center: [0, 0],\n    zoom: 2,\n  }),\n});\n\nlet hitTolerance;\n\nconst statusElement = document.getElementById('status');\n\nmap.on('singleclick', function (e) {\n  let hit = false;\n  map.forEachFeatureAtPixel(\n    e.pixel,\n    function () {\n      hit = true;\n    },\n    {\n      hitTolerance: hitTolerance,\n    },\n  );\n  if (hit) {\n    style.getStroke().setColor('green');\n    statusElement.innerHTML = 'A feature got hit!';\n  } else {\n    style.getStroke().setColor('black');\n    statusElement.innerHTML = 'No feature got hit.';\n  }\n  feature.changed();\n});\n\nconst selectHitToleranceElement = document.getElementById('hitTolerance');\nconst circleCanvas = document.getElementById('circle');\n\nconst changeHitTolerance = function () {\n  hitTolerance = parseInt(selectHitToleranceElement.value, 10);\n\n  const size = 2 * hitTolerance + 2;\n  circleCanvas.width = size;\n  circleCanvas.height = size;\n  const ctx = circleCanvas.getContext('2d');\n  ctx.clearRect(0, 0, size, size);\n  ctx.beginPath();\n  ctx.arc(\n    hitTolerance + 1,\n    hitTolerance + 1,\n    hitTolerance + 0.5,\n    0,\n    2 * Math.PI,\n  );\n  ctx.fill();\n  ctx.stroke();\n};\n\nselectHitToleranceElement.onchange = changeHitTolerance;\nchangeHitTolerance();\n"],"names":["raster","source","style","stroke","color","width","feature","vector","features","map","layers","target","view","center","zoom","hitTolerance","statusElement","document","getElementById","on","e","hit","forEachFeatureAtPixel","pixel","getStroke","setColor","innerHTML","changed","selectHitToleranceElement","circleCanvas","changeHitTolerance","parseInt","value","size","height","ctx","getContext","clearRect","beginPath","arc","Math","PI","fill","onchange"],"sourceRoot":""}