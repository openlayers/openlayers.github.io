{"version":3,"file":"wms-time.js","mappings":"0KAQA,MACMA,EAAO,IAEPC,GAAS,QAAgB,EAAE,IAAK,IAAK,GAAI,IAAK,YAAa,aAEjE,IAAIC,EAAU,IAAIC,KACdC,EAAc,KAElB,MAAMC,EAAc,IAAI,IAAU,CAChCC,OAAQ,IAAI,IAAW,CACrBC,MAAO,qBAGLC,EAAe,IAAI,IAAU,CACjCP,OAAQA,EACRK,OAAQ,IAAI,IAAQ,CAClBG,aAAc,CAAC,yBACfC,IAAK,iEACLC,OAAQ,CAAC,OAAU,uBAajBC,GATM,IAAI,IAAI,CAClBC,OAAQ,CAACR,EAAaG,GACtBM,OAAQ,MACRC,KAAM,IAAI,KAAK,CACbC,QAAQ,QAAUf,GAClBgB,KAAM,MAICC,SAASC,eAAe,SASnC,SAASC,IART,IAAoBC,EASlBnB,EAAQoB,WAAWpB,EAAQqB,aAAe,IACtCrB,EAAQsB,UAAYrB,KAAKsB,QAC3BvB,EANK,IAAIC,KAAKuB,KAAKC,OAAOxB,KAAKsB,MArClB,OAqCsCzB,GAAQA,IAQ7DQ,EAAaoB,YAAYC,aAAa,CAAC,KAAQ3B,EAAQ4B,gBAbrCT,EAcPnB,EAbXU,EAAGmB,UAAYV,EAAKS,aActB,CACAV,IAEA,MAAMY,EAAO,WACS,OAAhB5B,IACF6B,OAAOC,cAAc9B,GACrBA,EAAc,KAElB,EAOoBc,SAASC,eAAe,QAChCgB,iBAAiB,SANhB,WACXH,IACA5B,EAAc6B,OAAOG,YAAYhB,EAAS,IAC5C,IAG4C,GAEzBF,SAASC,eAAe,SAChCgB,iBAAiB,QAASH,GAAM,E","sources":["webpack:///./wms-time.js"],"sourcesContent":["import Map from '../src/ol/Map.js';\nimport View from '../src/ol/View.js';\nimport {getCenter} from '../src/ol/extent.js';\nimport TileLayer from '../src/ol/layer/Tile.js';\nimport {transformExtent} from '../src/ol/proj.js';\nimport StadiaMaps from '../src/ol/source/StadiaMaps.js';\nimport TileWMS from '../src/ol/source/TileWMS.js';\n\nconst interval = 3 * 60 * 60 * 1000;\nconst step = 15 * 60 * 1000;\nconst frameRate = 0.5; // frames per second\nconst extent = transformExtent([-126, 24, -66, 50], 'EPSG:4326', 'EPSG:3857');\n\nlet wmsTime = new Date();\nlet animationId = null;\n\nconst stadiaLayer = new TileLayer({\n  source: new StadiaMaps({\n    layer: 'stamen_terrain',\n  }),\n});\nconst tileWmsLayer = new TileLayer({\n  extent: extent,\n  source: new TileWMS({\n    attributions: ['Iowa State University'],\n    url: 'https://mesonet.agron.iastate.edu/cgi-bin/wms/nexrad/n0r-t.cgi',\n    params: {'LAYERS': 'nexrad-n0r-wmst'},\n  }),\n});\n\nconst map = new Map({\n  layers: [stadiaLayer, tileWmsLayer],\n  target: 'map',\n  view: new View({\n    center: getCenter(extent),\n    zoom: 4,\n  }),\n});\n\nconst el = document.getElementById('info');\nfunction updateInfo(time) {\n  el.innerHTML = time.toISOString();\n}\n\nfunction threeHoursAgo() {\n  return new Date(Math.floor((Date.now() - interval) / step) * step);\n}\n\nfunction setTime() {\n  wmsTime.setMinutes(wmsTime.getMinutes() + 15);\n  if (wmsTime.getTime() > Date.now()) {\n    wmsTime = threeHoursAgo();\n  }\n  tileWmsLayer.getSource().updateParams({'TIME': wmsTime.toISOString()});\n  updateInfo(wmsTime);\n}\nsetTime();\n\nconst stop = function () {\n  if (animationId !== null) {\n    window.clearInterval(animationId);\n    animationId = null;\n  }\n};\n\nconst play = function () {\n  stop();\n  animationId = window.setInterval(setTime, 1000 / frameRate);\n};\n\nconst startButton = document.getElementById('play');\nstartButton.addEventListener('click', play, false);\n\nconst stopButton = document.getElementById('pause');\nstopButton.addEventListener('click', stop, false);\n"],"names":["step","extent","wmsTime","Date","animationId","stadiaLayer","source","layer","tileWmsLayer","attributions","url","params","el","layers","target","view","center","zoom","document","getElementById","setTime","time","setMinutes","getMinutes","getTime","now","Math","floor","getSource","updateParams","toISOString","innerHTML","stop","window","clearInterval","addEventListener","setInterval"],"sourceRoot":""}