{"version":3,"file":"select-features.js","mappings":"6MAWA,MAAMA,EAAQ,IAAI,KAAM,CACtBC,KAAM,IAAI,IAAK,CACbC,MAAO,cAILC,EAAS,IAAI,IAAY,CAC7BC,OAAQ,IAAI,IAAa,CACvBC,IAAK,qDACLC,OAAQ,IAAI,MAEdC,WAAY,QACZP,MAAO,SAAUQ,GACf,MAAMN,EAAQM,EAAQC,IAAI,UAAY,UAEtC,OADAT,EAAMU,UAAUC,SAAST,GAClBF,CACT,IAGIY,EAAM,IAAI,IAAI,CAClBC,OAAQ,CAACV,GACTW,OAAQ,MACRC,KAAM,IAAI,KAAK,CACbC,OAAQ,CAAC,EAAG,GACZC,KAAM,MAIV,IAAIC,EAAS,KAEb,MAAMC,EAAW,IAAI,KAAM,CACzBlB,KAAM,IAAI,IAAK,CACbC,MAAO,YAETkB,OAAQ,IAAI,IAAO,CACjBlB,MAAO,2BACPmB,MAAO,MAIX,SAASC,EAAYd,GACnB,MAAMN,EAAQM,EAAQC,IAAI,UAAY,UAEtC,OADAU,EAAST,UAAUC,SAAST,GACrBiB,CACT,CAGA,MAAMI,EAAoB,IAAI,IAAO,CAACvB,MAAOsB,IAGvCE,EAAc,IAAI,IAAO,CAC7BC,UAAW,KACXzB,MAAOsB,IAIHI,EAAoB,IAAI,IAAO,CACnCD,UAAW,KACXzB,MAAOsB,IAGHK,EAAiB,IAAI,IAAO,CAChC3B,MAAOsB,EACPG,UAAW,SAAUG,GACnB,OAAO,QAAMA,KAAoB,QAAWA,EAC9C,IAGIC,EAAgBC,SAASC,eAAe,QAExCC,EAAoB,WACT,OAAXd,GACFN,EAAIqB,kBAAkBf,GAExB,MAAMgB,EAAQL,EAAcK,MAE1BhB,EADW,eAATgB,EACOX,EACS,SAATW,EACAV,EACS,eAATU,EACAR,EACS,YAATQ,EACAP,EAEA,KAEI,OAAXT,IACFN,EAAIuB,eAAejB,GACnBA,EAAOkB,GAAG,UAAU,SAAUC,GAC5BP,SAASC,eAAe,UAAUO,UAChC,SACAD,EAAEvB,OAAOyB,cAAcC,YACvB,+CACAH,EAAElB,SAASsB,OACX,mBACAJ,EAAEK,WAAWD,OACb,YACJ,IAEJ,EAKAZ,EAAcc,SAAWX,EACzBA,G","sources":["webpack:///./select-features.js"],"sourcesContent":["import Map from '../src/ol/Map.js';\nimport View from '../src/ol/View.js';\nimport {altKeyOnly, click, pointerMove} from '../src/ol/events/condition.js';\nimport GeoJSON from '../src/ol/format/GeoJSON.js';\nimport Select from '../src/ol/interaction/Select.js';\nimport VectorLayer from '../src/ol/layer/Vector.js';\nimport VectorSource from '../src/ol/source/Vector.js';\nimport Fill from '../src/ol/style/Fill.js';\nimport Stroke from '../src/ol/style/Stroke.js';\nimport Style from '../src/ol/style/Style.js';\n\nconst style = new Style({\n  fill: new Fill({\n    color: '#eeeeee',\n  }),\n});\n\nconst vector = new VectorLayer({\n  source: new VectorSource({\n    url: 'https://openlayers.org/data/vector/ecoregions.json',\n    format: new GeoJSON(),\n  }),\n  background: 'white',\n  style: function (feature) {\n    const color = feature.get('COLOR') || '#eeeeee';\n    style.getFill().setColor(color);\n    return style;\n  },\n});\n\nconst map = new Map({\n  layers: [vector],\n  target: 'map',\n  view: new View({\n    center: [0, 0],\n    zoom: 2,\n  }),\n});\n\nlet select = null; // ref to currently selected interaction\n\nconst selected = new Style({\n  fill: new Fill({\n    color: '#eeeeee',\n  }),\n  stroke: new Stroke({\n    color: 'rgba(255, 255, 255, 0.7)',\n    width: 2,\n  }),\n});\n\nfunction selectStyle(feature) {\n  const color = feature.get('COLOR') || '#eeeeee';\n  selected.getFill().setColor(color);\n  return selected;\n}\n\n// select interaction working on \"singleclick\"\nconst selectSingleClick = new Select({style: selectStyle});\n\n// select interaction working on \"click\"\nconst selectClick = new Select({\n  condition: click,\n  style: selectStyle,\n});\n\n// select interaction working on \"pointermove\"\nconst selectPointerMove = new Select({\n  condition: pointerMove,\n  style: selectStyle,\n});\n\nconst selectAltClick = new Select({\n  style: selectStyle,\n  condition: function (mapBrowserEvent) {\n    return click(mapBrowserEvent) && altKeyOnly(mapBrowserEvent);\n  },\n});\n\nconst selectElement = document.getElementById('type');\n\nconst changeInteraction = function () {\n  if (select !== null) {\n    map.removeInteraction(select);\n  }\n  const value = selectElement.value;\n  if (value == 'singleclick') {\n    select = selectSingleClick;\n  } else if (value == 'click') {\n    select = selectClick;\n  } else if (value == 'pointermove') {\n    select = selectPointerMove;\n  } else if (value == 'altclick') {\n    select = selectAltClick;\n  } else {\n    select = null;\n  }\n  if (select !== null) {\n    map.addInteraction(select);\n    select.on('select', function (e) {\n      document.getElementById('status').innerHTML =\n        '&nbsp;' +\n        e.target.getFeatures().getLength() +\n        ' selected features (last operation selected ' +\n        e.selected.length +\n        ' and deselected ' +\n        e.deselected.length +\n        ' features)';\n    });\n  }\n};\n\n/**\n * onchange callback on the select element.\n */\nselectElement.onchange = changeInteraction;\nchangeInteraction();\n"],"names":["style","fill","color","vector","source","url","format","background","feature","get","getFill","setColor","map","layers","target","view","center","zoom","select","selected","stroke","width","selectStyle","selectSingleClick","selectClick","condition","selectPointerMove","selectAltClick","mapBrowserEvent","selectElement","document","getElementById","changeInteraction","removeInteraction","value","addInteraction","on","e","innerHTML","getFeatures","getLength","length","deselected","onchange"],"sourceRoot":""}