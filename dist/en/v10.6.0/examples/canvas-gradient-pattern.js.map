{"version":3,"file":"canvas-gradient-pattern.js","mappings":"6MAaA,MAAMA,EAAa,KAKbC,EAFSC,SAASC,cAAc,UACfC,WAAW,MACTC,qBAAqB,EAAG,EAAG,KAAOL,EAAY,GACvEC,EAASK,aAAa,EAAG,OACzBL,EAASK,aAAa,EAAI,EAAG,UAC7BL,EAASK,aAAa,EAAI,EAAG,UAC7BL,EAASK,aAAa,GAAO,SAC7BL,EAASK,aAAa,EAAI,EAAG,QAC7BL,EAASK,aAAa,EAAI,EAAG,QAC7BL,EAASK,aAAa,EAAG,UAEzB,MAAMC,EAAc,IAAI,IAAY,CAClCC,WAAY,QACZC,OAAQ,IAAI,IAAa,CACvBC,IAAK,sBACLC,OAAQ,IAAI,KAAI,CAACC,eAAe,MAElCC,MAAO,IAAI,KAAM,CACfC,KAAM,IAAI,IAAK,CAACC,MAAOd,IACvBe,OAAQ,IAAI,IAAO,CACjBD,MAAO,OACPE,MAAO,QAKD,IAAI,IAAI,CAClBC,OAAQ,CAACX,GACTY,OAAQ,MACRC,KAAM,IAAI,KAAK,CACbC,QAAQ,QAAW,EAAE,IAAK,OAC1BC,KAAM,K","sources":["webpack:///./canvas-gradient-pattern.js"],"sourcesContent":["import Map from '../src/ol/Map.js';\nimport View from '../src/ol/View.js';\nimport KML from '../src/ol/format/KML.js';\nimport {DEVICE_PIXEL_RATIO} from '../src/ol/has.js';\nimport VectorLayer from '../src/ol/layer/Vector.js';\nimport {fromLonLat} from '../src/ol/proj.js';\nimport VectorSource from '../src/ol/source/Vector.js';\nimport Fill from '../src/ol/style/Fill.js';\nimport Stroke from '../src/ol/style/Stroke.js';\nimport Style from '../src/ol/style/Style.js';\n\n// Gradient and pattern are in canvas pixel space, so we adjust for the\n// renderer's pixel ratio\nconst pixelRatio = DEVICE_PIXEL_RATIO;\n\n// Generate a rainbow gradient\nconst canvas = document.createElement('canvas');\nconst context = canvas.getContext('2d');\nconst gradient = context.createLinearGradient(0, 0, 1024 * pixelRatio, 0);\ngradient.addColorStop(0, 'red');\ngradient.addColorStop(1 / 6, 'orange');\ngradient.addColorStop(2 / 6, 'yellow');\ngradient.addColorStop(3 / 6, 'green');\ngradient.addColorStop(4 / 6, 'aqua');\ngradient.addColorStop(5 / 6, 'blue');\ngradient.addColorStop(1, 'purple');\n\nconst vectorLayer = new VectorLayer({\n  background: 'white',\n  source: new VectorSource({\n    url: 'data/kml/states.kml',\n    format: new KML({extractStyles: false}),\n  }),\n  style: new Style({\n    fill: new Fill({color: gradient}),\n    stroke: new Stroke({\n      color: '#333',\n      width: 1,\n    }),\n  }),\n});\n\nconst map = new Map({\n  layers: [vectorLayer],\n  target: 'map',\n  view: new View({\n    center: fromLonLat([-100, 38.5]),\n    zoom: 4,\n  }),\n});\n"],"names":["pixelRatio","gradient","document","createElement","getContext","createLinearGradient","addColorStop","vectorLayer","background","source","url","format","extractStyles","style","fill","color","stroke","width","layers","target","view","center","zoom"],"sourceRoot":""}