{"version":3,"file":"drag-and-drop-custom-kmz.js","mappings":"wPAkBA,IAAIA,EAEJ,SAASC,EAAWC,GAClBF,GAAM,QAAU,IAAIG,WAAWD,IAC/B,MAAME,EAAMC,OAAOC,KAAKN,GAAKO,MAAMC,GAAQ,UAAUC,KAAKD,KAC1D,OAAMJ,KAAOJ,GAGN,IAAIU,aAAcC,OAAOX,EAAII,IAF3B,IAGX,CAEA,SAASQ,EAAYC,GACnB,MAAMC,EAAQC,OAAOC,SAASH,KAAKI,YAAY,KAC/C,IAAe,IAAXH,EACF,OAAOD,EAET,MAAMK,EAAQL,EAAKM,MAAML,EAAQ,GACjC,OAAMI,KAASlB,EAGRoB,IAAIC,gBAAgB,IAAIC,KAAK,CAACtB,EAAIkB,MAFhCL,CAGX,CAIA,MAAMU,UAAY,KAChB,WAAAC,CAAYC,GACV,MAAMC,EAAUD,GAAe,CAAC,EAChCC,EAAQC,gBAAkBf,EAC1BgB,MAAMF,EACR,CAEA,OAAAG,GACE,MAAO,aACT,CAEA,WAAAC,CAAYC,EAAQL,GAClB,MAAMM,EAAU/B,EAAW8B,GAC3B,OAAOH,MAAME,YAAYE,EAASN,EACpC,CAEA,YAAAO,CAAaF,EAAQL,GACnB,MAAMM,EAAU/B,EAAW8B,GAC3B,OAAOH,MAAMK,aAAaD,EAASN,EACrC,EAKF,MAAMQ,EAAyB,IAAI,IAAY,CAC7CC,mBAAoB,CAACZ,EAAK,IAAK,IAAS,IAAK,KAAK,OAG9Ca,EAAM,IAAI,IAAI,CAClBC,cAAc,SAAsBC,OAAO,CAACJ,IAC5CK,OAAQ,CACN,IAAI,IAAU,CACZR,OAAQ,IAAI,OAGhBS,OAAQ,MACRC,KAAM,IAAI,KAAK,CACbC,OAAQ,CAAC,EAAG,GACZC,KAAM,MAIVT,EAAuBU,GAAG,eAAe,SAAUC,GACjD,MAAMC,EAAe,IAAI,IAAa,CACpCC,SAAUF,EAAME,WAElBX,EAAIY,SACF,IAAI,IAAY,CACdjB,OAAQe,KAGZV,EAAIa,UAAUC,IAAIJ,EAAaK,YACjC,IAEA,MAAMC,EAAqB,SAAUC,GACnC,MAAMN,EAAWX,EAAIkB,mBAAmBD,GACxC,IAAIE,EACJ,GAAIR,EAASS,OAAS,EAAG,CACvB,MAAMC,EAAO,GACb,IAAK,IAAIC,EAAI,EAAGC,EAAKZ,EAASS,OAAQE,EAAIC,IAAMD,EAAG,CACjD,MAAME,EACJb,EAASW,GAAGG,IAAI,gBAChBd,EAASW,GAAGG,IAAI,SAChBd,EAASW,GAAGG,IAAI,UAChBd,EAASW,GAAGG,IAAI,SACdD,GACFH,EAAKK,KAAKF,EAEd,CACAL,EAAOE,EAAKM,KAAK,QACnB,CACAC,SAASC,eAAe,QAAQC,UAAYX,GAAQ,EACtD,EAEAnB,EAAIQ,GAAG,eAAe,SAAUuB,GAC1BA,EAAIC,UAGRhB,EAAmBe,EAAId,MACzB,IAEAjB,EAAIQ,GAAG,SAAS,SAAUuB,GACxBf,EAAmBe,EAAId,MACzB,IAIA,MAAMgB,EAAOL,SAASC,eAAe,YAYrCD,SAASC,eAAe,gBAAgBK,iBAAiB,SAAS,WAVlE,IAA4BC,IAWO,cAVjCC,MAUS,wBATNC,MAAMC,GAAaA,EAASC,SAC5BF,MAAK,SAAUE,GACdN,EAAKxD,KAAOO,IAAIC,gBAAgBsD,GAChCN,EAAKO,SAAWL,EAChBF,EAAKQ,OACP,GAKJ,G","sources":["webpack:///./drag-and-drop-custom-kmz.js"],"sourcesContent":["import {unzipSync} from 'fflate';\nimport Map from '../src/ol/Map.js';\nimport View from '../src/ol/View.js';\nimport GPX from '../src/ol/format/GPX.js';\nimport GeoJSON from '../src/ol/format/GeoJSON.js';\nimport IGC from '../src/ol/format/IGC.js';\nimport KML from '../src/ol/format/KML.js';\nimport TopoJSON from '../src/ol/format/TopoJSON.js';\nimport DragAndDrop from '../src/ol/interaction/DragAndDrop.js';\nimport {defaults as defaultInteractions} from '../src/ol/interaction/defaults.js';\nimport TileLayer from '../src/ol/layer/Tile.js';\nimport VectorLayer from '../src/ol/layer/Vector.js';\nimport OSM from '../src/ol/source/OSM.js';\nimport VectorSource from '../src/ol/source/Vector.js';\n\n// Create functions to extract KML and icons from KMZ array buffer,\n// which must be done synchronously.\n\nlet zip;\n\nfunction getKMLData(buffer) {\n  zip = unzipSync(new Uint8Array(buffer));\n  const kml = Object.keys(zip).find((key) => /\\.kml$/i.test(key));\n  if (!(kml in zip)) {\n    return null;\n  }\n  return new TextDecoder().decode(zip[kml]);\n}\n\nfunction getKMLImage(href) {\n  const index = window.location.href.lastIndexOf('/');\n  if (index === -1) {\n    return href;\n  }\n  const image = href.slice(index + 1);\n  if (!(image in zip)) {\n    return href;\n  }\n  return URL.createObjectURL(new Blob([zip[image]]));\n}\n\n// Define a KMZ format class by subclassing ol/format/KML\n\nclass KMZ extends KML {\n  constructor(opt_options) {\n    const options = opt_options || {};\n    options.iconUrlFunction = getKMLImage;\n    super(options);\n  }\n\n  getType() {\n    return 'arraybuffer';\n  }\n\n  readFeature(source, options) {\n    const kmlData = getKMLData(source);\n    return super.readFeature(kmlData, options);\n  }\n\n  readFeatures(source, options) {\n    const kmlData = getKMLData(source);\n    return super.readFeatures(kmlData, options);\n  }\n}\n\n// Set up map with Drag and Drop interaction\n\nconst dragAndDropInteraction = new DragAndDrop({\n  formatConstructors: [KMZ, GPX, GeoJSON, IGC, KML, TopoJSON],\n});\n\nconst map = new Map({\n  interactions: defaultInteractions().extend([dragAndDropInteraction]),\n  layers: [\n    new TileLayer({\n      source: new OSM(),\n    }),\n  ],\n  target: 'map',\n  view: new View({\n    center: [0, 0],\n    zoom: 2,\n  }),\n});\n\ndragAndDropInteraction.on('addfeatures', function (event) {\n  const vectorSource = new VectorSource({\n    features: event.features,\n  });\n  map.addLayer(\n    new VectorLayer({\n      source: vectorSource,\n    }),\n  );\n  map.getView().fit(vectorSource.getExtent());\n});\n\nconst displayFeatureInfo = function (pixel) {\n  const features = map.getFeaturesAtPixel(pixel);\n  let html;\n  if (features.length > 0) {\n    const info = [];\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      const description =\n        features[i].get('description') ||\n        features[i].get('name') ||\n        features[i].get('_name') ||\n        features[i].get('layer');\n      if (description) {\n        info.push(description);\n      }\n    }\n    html = info.join('<br/>');\n  }\n  document.getElementById('info').innerHTML = html ?? '';\n};\n\nmap.on('pointermove', function (evt) {\n  if (evt.dragging) {\n    return;\n  }\n  displayFeatureInfo(evt.pixel);\n});\n\nmap.on('click', function (evt) {\n  displayFeatureInfo(evt.pixel);\n});\n\n// Sample data download\n\nconst link = document.getElementById('download');\n\nfunction download(fullpath, filename) {\n  fetch(fullpath)\n    .then((response) => response.blob())\n    .then(function (blob) {\n      link.href = URL.createObjectURL(blob);\n      link.download = filename;\n      link.click();\n    });\n}\n\ndocument.getElementById('download-kmz').addEventListener('click', function () {\n  download('data/kmz/iceland.kmz', 'iceland.kmz');\n});\n"],"names":["zip","getKMLData","buffer","Uint8Array","kml","Object","keys","find","key","test","TextDecoder","decode","getKMLImage","href","index","window","location","lastIndexOf","image","slice","URL","createObjectURL","Blob","KMZ","constructor","opt_options","options","iconUrlFunction","super","getType","readFeature","source","kmlData","readFeatures","dragAndDropInteraction","formatConstructors","map","interactions","extend","layers","target","view","center","zoom","on","event","vectorSource","features","addLayer","getView","fit","getExtent","displayFeatureInfo","pixel","getFeaturesAtPixel","html","length","info","i","ii","description","get","push","join","document","getElementById","innerHTML","evt","dragging","link","addEventListener","filename","fetch","then","response","blob","download","click"],"sourceRoot":""}