{"version":3,"file":"wms-capabilities.js","mappings":"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","sources":["webpack:///../src/ol/format/WMSCapabilities.js","webpack:///./wms-capabilities.js"],"sourcesContent":["/**\n * @module ol/format/WMSCapabilities\n */\nimport {compareVersions} from '../string.js';\nimport {\n  makeArrayPusher,\n  makeObjectPropertyPusher,\n  makeObjectPropertySetter,\n  makeStructureNS,\n  pushParseAndPop,\n} from '../xml.js';\nimport XML from './XML.js';\nimport {readHref} from './xlink.js';\nimport {\n  readBooleanString,\n  readDecimal,\n  readDecimalString,\n  readNonNegativeIntegerString,\n  readPositiveInteger,\n  readString,\n} from './xsd.js';\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nconst NAMESPACE_URIS = [\n  null,\n  'http://www.opengis.net/wms',\n  'http://www.opengis.net/sld',\n];\n\nfunction isV13(objectStack) {\n  return compareVersions(objectStack[0].version, '1.3') >= 0;\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Service': makeObjectPropertySetter(readService),\n  'Capability': makeObjectPropertySetter(readCapability),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst CAPABILITY_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Request': makeObjectPropertySetter(readRequest),\n  'Exception': makeObjectPropertySetter(readException),\n  'Layer': makeObjectPropertySetter(readCapabilityLayer),\n  'UserDefinedSymbolization': makeObjectPropertySetter(\n    readUserDefinedSymbolization,\n  ),\n});\n\n/**\n * @typedef {Object} RootObject\n * @property {string} version Version\n * @property {boolean} v13 Whether version is 1.3 or higher\n */\n\n/**\n * @classdesc\n * Format for reading WMS capabilities data\n *\n * @api\n */\nclass WMSCapabilities extends XML {\n  constructor() {\n    super();\n\n    /**\n     * @type {string|undefined}\n     */\n    this.version = undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {Object|null} Object\n   * @override\n   */\n  readFromNode(node) {\n    this.version = node.getAttribute('version').trim();\n    const wmsCapabilityObject = pushParseAndPop(\n      {\n        'version': this.version,\n      },\n      PARSERS,\n      node,\n      [],\n    );\n    return wmsCapabilityObject ? wmsCapabilityObject : null;\n  }\n}\n\nconst COMMON_SERVICE_PARSERS = {\n  'Name': makeObjectPropertySetter(readString),\n  'Title': makeObjectPropertySetter(readString),\n  'Abstract': makeObjectPropertySetter(readString),\n  'KeywordList': makeObjectPropertySetter(readKeywordList),\n  'OnlineResource': makeObjectPropertySetter(readHref),\n  'ContactInformation': makeObjectPropertySetter(readContactInformation),\n  'Fees': makeObjectPropertySetter(readString),\n  'AccessConstraints': makeObjectPropertySetter(readString),\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst SERVICE_PARSERS = makeStructureNS(NAMESPACE_URIS, COMMON_SERVICE_PARSERS);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst SERVICE_PARSERS_V13 = makeStructureNS(NAMESPACE_URIS, {\n  ...COMMON_SERVICE_PARSERS,\n  'LayerLimit': makeObjectPropertySetter(readPositiveInteger),\n  'MaxWidth': makeObjectPropertySetter(readPositiveInteger),\n  'MaxHeight': makeObjectPropertySetter(readPositiveInteger),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst CONTACT_INFORMATION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ContactPersonPrimary': makeObjectPropertySetter(readContactPersonPrimary),\n  'ContactPosition': makeObjectPropertySetter(readString),\n  'ContactAddress': makeObjectPropertySetter(readContactAddress),\n  'ContactVoiceTelephone': makeObjectPropertySetter(readString),\n  'ContactFacsimileTelephone': makeObjectPropertySetter(readString),\n  'ContactElectronicMailAddress': makeObjectPropertySetter(readString),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst CONTACT_PERSON_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ContactPerson': makeObjectPropertySetter(readString),\n  'ContactOrganization': makeObjectPropertySetter(readString),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst CONTACT_ADDRESS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'AddressType': makeObjectPropertySetter(readString),\n  'Address': makeObjectPropertySetter(readString),\n  'City': makeObjectPropertySetter(readString),\n  'StateOrProvince': makeObjectPropertySetter(readString),\n  'PostCode': makeObjectPropertySetter(readString),\n  'Country': makeObjectPropertySetter(readString),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst EXCEPTION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Format': makeArrayPusher(readString),\n});\n\nconst COMMON_LAYER_PARSERS = {\n  'Name': makeObjectPropertySetter(readString),\n  'Title': makeObjectPropertySetter(readString),\n  'Abstract': makeObjectPropertySetter(readString),\n  'KeywordList': makeObjectPropertySetter(readKeywordList),\n  'BoundingBox': makeObjectPropertyPusher(readBoundingBox),\n  'Dimension': makeObjectPropertyPusher(readDimension),\n  'Attribution': makeObjectPropertySetter(readAttribution),\n  'AuthorityURL': makeObjectPropertyPusher(readAuthorityURL),\n  'Identifier': makeObjectPropertyPusher(readString),\n  'MetadataURL': makeObjectPropertyPusher(readMetadataURL),\n  'DataURL': makeObjectPropertyPusher(readFormatOnlineresource),\n  'FeatureListURL': makeObjectPropertyPusher(readFormatOnlineresource),\n  'Style': makeObjectPropertyPusher(readStyle),\n  'Layer': makeObjectPropertyPusher(readLayer),\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LAYER_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  ...COMMON_LAYER_PARSERS,\n  'SRS': makeObjectPropertyPusher(readString),\n  'Extent': makeObjectPropertySetter(readExtent),\n  'ScaleHint': makeObjectPropertyPusher(readScaleHint),\n  'LatLonBoundingBox': makeObjectPropertySetter((node, objectStack) =>\n    readBoundingBox(node, objectStack, false),\n  ),\n  'Layer': makeObjectPropertyPusher(readLayer),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LAYER_PARSERS_V13 = makeStructureNS(NAMESPACE_URIS, {\n  ...COMMON_LAYER_PARSERS,\n  'CRS': makeObjectPropertyPusher(readString),\n  'EX_GeographicBoundingBox': makeObjectPropertySetter(\n    readEXGeographicBoundingBox,\n  ),\n  'MinScaleDenominator': makeObjectPropertySetter(readDecimal),\n  'MaxScaleDenominator': makeObjectPropertySetter(readDecimal),\n  'Layer': makeObjectPropertyPusher(readLayer),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst ATTRIBUTION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Title': makeObjectPropertySetter(readString),\n  'OnlineResource': makeObjectPropertySetter(readHref),\n  'LogoURL': makeObjectPropertySetter(readSizedFormatOnlineresource),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst EX_GEOGRAPHIC_BOUNDING_BOX_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'westBoundLongitude': makeObjectPropertySetter(readDecimal),\n  'eastBoundLongitude': makeObjectPropertySetter(readDecimal),\n  'southBoundLatitude': makeObjectPropertySetter(readDecimal),\n  'northBoundLatitude': makeObjectPropertySetter(readDecimal),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst REQUEST_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'GetCapabilities': makeObjectPropertySetter(readOperationType),\n  'GetMap': makeObjectPropertySetter(readOperationType),\n  'GetFeatureInfo': makeObjectPropertySetter(readOperationType),\n  'DescribeLayer': makeObjectPropertySetter(readOperationType),\n  'GetLegendGraphic': makeObjectPropertySetter(readOperationType),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst OPERATIONTYPE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Format': makeObjectPropertyPusher(readString),\n  'DCPType': makeObjectPropertyPusher(readDCPType),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst DCPTYPE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'HTTP': makeObjectPropertySetter(readHTTP),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst HTTP_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Get': makeObjectPropertySetter(readFormatOnlineresource),\n  'Post': makeObjectPropertySetter(readFormatOnlineresource),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Name': makeObjectPropertySetter(readString),\n  'Title': makeObjectPropertySetter(readString),\n  'Abstract': makeObjectPropertySetter(readString),\n  'LegendURL': makeObjectPropertyPusher(readSizedFormatOnlineresource),\n  'StyleSheetURL': makeObjectPropertySetter(readFormatOnlineresource),\n  'StyleURL': makeObjectPropertySetter(readFormatOnlineresource),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst FORMAT_ONLINERESOURCE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Format': makeObjectPropertySetter(readString),\n  'OnlineResource': makeObjectPropertySetter(readHref),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst KEYWORDLIST_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Keyword': makeArrayPusher(readString),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Attribution object.\n */\nfunction readAttribution(node, objectStack) {\n  return pushParseAndPop({}, ATTRIBUTION_PARSERS, node, objectStack);\n}\n\nfunction readUserDefinedSymbolization(node, objectStack) {\n  return {\n    'SupportSLD': !!readBooleanString(node.getAttribute('SupportSLD')),\n    'UserLayer': !!readBooleanString(node.getAttribute('UserLayer')),\n    'UserStyle': !!readBooleanString(node.getAttribute('UserStyle')),\n    'RemoteWFS': !!readBooleanString(node.getAttribute('RemoteWFS')),\n    'InlineFeatureData': !!readBooleanString(\n      node.getAttribute('InlineFeatureData'),\n    ),\n    'RemoteWCS': !!readBooleanString(node.getAttribute('RemoteWCS')),\n  };\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @param {boolean} withCrs Whether to include the CRS attribute.\n * @return {Object} Bounding box object.\n */\nfunction readBoundingBox(node, objectStack, withCrs = true) {\n  const extent = [\n    readDecimalString(node.getAttribute('minx')),\n    readDecimalString(node.getAttribute('miny')),\n    readDecimalString(node.getAttribute('maxx')),\n    readDecimalString(node.getAttribute('maxy')),\n  ];\n\n  const resolutions = [\n    readDecimalString(node.getAttribute('resx')),\n    readDecimalString(node.getAttribute('resy')),\n  ];\n\n  const result = {\n    extent,\n    res: resolutions,\n  };\n  if (!withCrs) {\n    return result;\n  }\n\n  /** @type {RootObject} */\n  if (isV13(objectStack)) {\n    result.crs = node.getAttribute('CRS');\n  } else {\n    result.srs = node.getAttribute('SRS');\n  }\n\n  return result;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {import(\"../extent.js\").Extent|undefined} Bounding box object.\n */\nfunction readEXGeographicBoundingBox(node, objectStack) {\n  const geographicBoundingBox = pushParseAndPop(\n    {},\n    EX_GEOGRAPHIC_BOUNDING_BOX_PARSERS,\n    node,\n    objectStack,\n  );\n  if (!geographicBoundingBox) {\n    return undefined;\n  }\n  const westBoundLongitude =\n    /** @type {number|undefined} */\n    (geographicBoundingBox['westBoundLongitude']);\n  const southBoundLatitude =\n    /** @type {number|undefined} */\n    (geographicBoundingBox['southBoundLatitude']);\n  const eastBoundLongitude =\n    /** @type {number|undefined} */\n    (geographicBoundingBox['eastBoundLongitude']);\n  const northBoundLatitude =\n    /** @type {number|undefined} */\n    (geographicBoundingBox['northBoundLatitude']);\n  if (\n    westBoundLongitude === undefined ||\n    southBoundLatitude === undefined ||\n    eastBoundLongitude === undefined ||\n    northBoundLatitude === undefined\n  ) {\n    return undefined;\n  }\n  return [\n    westBoundLongitude,\n    southBoundLatitude,\n    eastBoundLongitude,\n    northBoundLatitude,\n  ];\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Capability object.\n */\n//ts-ignore\nfunction readCapability(node, objectStack) {\n  return pushParseAndPop({}, CAPABILITY_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Service object.\n */\nfunction readService(node, objectStack) {\n  return pushParseAndPop(\n    {},\n    isV13(objectStack) ? SERVICE_PARSERS_V13 : SERVICE_PARSERS,\n    node,\n    objectStack,\n  );\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Contact information object.\n */\nfunction readContactInformation(node, objectStack) {\n  return pushParseAndPop({}, CONTACT_INFORMATION_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Contact person object.\n */\nfunction readContactPersonPrimary(node, objectStack) {\n  return pushParseAndPop({}, CONTACT_PERSON_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Contact address object.\n */\nfunction readContactAddress(node, objectStack) {\n  return pushParseAndPop({}, CONTACT_ADDRESS_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<string>|undefined} Format array.\n */\nfunction readException(node, objectStack) {\n  return pushParseAndPop([], EXCEPTION_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Layer object.\n */\nfunction readCapabilityLayer(node, objectStack) {\n  const layerObject = pushParseAndPop(\n    {},\n    isV13(objectStack) ? LAYER_PARSERS_V13 : LAYER_PARSERS,\n    node,\n    objectStack,\n  );\n\n  if (layerObject['Layer'] === undefined) {\n    return Object.assign(layerObject, readLayer(node, objectStack));\n  }\n\n  return layerObject;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Layer object.\n */\nfunction readLayer(node, objectStack) {\n  const v13 = isV13(objectStack);\n\n  const parentLayerObject = /**  @type {!Object<string,*>} */ (\n    objectStack[objectStack.length - 1]\n  );\n\n  const layerObject = pushParseAndPop(\n    {},\n    v13 ? LAYER_PARSERS_V13 : LAYER_PARSERS,\n    node,\n    objectStack,\n  );\n\n  if (!layerObject) {\n    return undefined;\n  }\n  let queryable = readBooleanString(node.getAttribute('queryable'));\n  if (queryable === undefined) {\n    queryable = parentLayerObject['queryable'];\n  }\n  layerObject['queryable'] = queryable !== undefined ? queryable : false;\n\n  let cascaded = readNonNegativeIntegerString(node.getAttribute('cascaded'));\n  if (cascaded === undefined) {\n    cascaded = parentLayerObject['cascaded'];\n  }\n  layerObject['cascaded'] = cascaded;\n\n  let opaque = readBooleanString(node.getAttribute('opaque'));\n  if (opaque === undefined) {\n    opaque = parentLayerObject['opaque'];\n  }\n  layerObject['opaque'] = opaque !== undefined ? opaque : false;\n\n  let noSubsets = readBooleanString(node.getAttribute('noSubsets'));\n  if (noSubsets === undefined) {\n    noSubsets = parentLayerObject['noSubsets'];\n  }\n  layerObject['noSubsets'] = noSubsets !== undefined ? noSubsets : false;\n\n  let fixedWidth = readDecimalString(node.getAttribute('fixedWidth'));\n  if (!fixedWidth) {\n    fixedWidth = parentLayerObject['fixedWidth'];\n  }\n  layerObject['fixedWidth'] = fixedWidth;\n\n  let fixedHeight = readDecimalString(node.getAttribute('fixedHeight'));\n  if (!fixedHeight) {\n    fixedHeight = parentLayerObject['fixedHeight'];\n  }\n  layerObject['fixedHeight'] = fixedHeight;\n\n  // See 7.2.4.8\n  const addKeys = ['Style', 'AuthorityURL'];\n  if (v13) {\n    addKeys.push('CRS');\n  } else {\n    addKeys.push('SRS', 'Dimension');\n  }\n  addKeys.forEach(function (key) {\n    if (key in parentLayerObject) {\n      const childValue = layerObject[key] || [];\n      layerObject[key] = childValue.concat(parentLayerObject[key]);\n    }\n  });\n\n  const replaceKeys = ['BoundingBox', 'Attribution'];\n  if (v13) {\n    replaceKeys.push(\n      'Dimension',\n      'EX_GeographicBoundingBox',\n      'MinScaleDenominator',\n      'MaxScaleDenominator',\n    );\n  } else {\n    replaceKeys.push('LatLonBoundingBox', 'ScaleHint', 'Extent');\n  }\n  replaceKeys.forEach(function (key) {\n    if (!(key in layerObject)) {\n      const parentValue = parentLayerObject[key];\n      layerObject[key] = parentValue;\n    }\n  });\n\n  return layerObject;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object} Dimension object.\n */\nfunction readDimension(node, objectStack) {\n  const dimensionObject = {\n    'name': node.getAttribute('name'),\n    'units': node.getAttribute('units'),\n    'unitSymbol': node.getAttribute('unitSymbol'),\n  };\n\n  if (isV13(objectStack)) {\n    Object.assign(dimensionObject, {\n      'default': node.getAttribute('default'),\n      'multipleValues': readBooleanString(node.getAttribute('multipleValues')),\n      'nearestValue': readBooleanString(node.getAttribute('nearestValue')),\n      'current': readBooleanString(node.getAttribute('current')),\n      'values': readString(node),\n    });\n  }\n  return dimensionObject;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object} Extent object.\n */\nfunction readExtent(node, objectStack) {\n  return {\n    'name': node.getAttribute('name'),\n    'default': node.getAttribute('default'),\n    'nearestValue': readBooleanString(node.getAttribute('nearestValue')),\n  };\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object} ScaleHint object.\n */\nfunction readScaleHint(node, objectStack) {\n  return {\n    'min': readDecimalString(node.getAttribute('min')),\n    'max': readDecimalString(node.getAttribute('max')),\n  };\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Online resource object.\n */\nfunction readFormatOnlineresource(node, objectStack) {\n  return pushParseAndPop({}, FORMAT_ONLINERESOURCE_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Request object.\n */\nfunction readRequest(node, objectStack) {\n  return pushParseAndPop({}, REQUEST_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} DCP type object.\n */\nfunction readDCPType(node, objectStack) {\n  return pushParseAndPop({}, DCPTYPE_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} HTTP object.\n */\nfunction readHTTP(node, objectStack) {\n  return pushParseAndPop({}, HTTP_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Operation type object.\n */\nfunction readOperationType(node, objectStack) {\n  return pushParseAndPop({}, OPERATIONTYPE_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Online resource object.\n */\nfunction readSizedFormatOnlineresource(node, objectStack) {\n  const formatOnlineresource = readFormatOnlineresource(node, objectStack);\n  if (formatOnlineresource) {\n    const size = [\n      readNonNegativeIntegerString(node.getAttribute('width')),\n      readNonNegativeIntegerString(node.getAttribute('height')),\n    ];\n    formatOnlineresource['size'] = size;\n    return formatOnlineresource;\n  }\n  return undefined;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Authority URL object.\n */\nfunction readAuthorityURL(node, objectStack) {\n  const authorityObject = readFormatOnlineresource(node, objectStack);\n  if (authorityObject) {\n    authorityObject['name'] = node.getAttribute('name');\n    return authorityObject;\n  }\n  return undefined;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Metadata URL object.\n */\nfunction readMetadataURL(node, objectStack) {\n  const metadataObject = readFormatOnlineresource(node, objectStack);\n  if (metadataObject) {\n    metadataObject['type'] = node.getAttribute('type');\n    return metadataObject;\n  }\n  return undefined;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Style object.\n */\nfunction readStyle(node, objectStack) {\n  return pushParseAndPop({}, STYLE_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<string>|undefined} Keyword list.\n */\nfunction readKeywordList(node, objectStack) {\n  return pushParseAndPop([], KEYWORDLIST_PARSERS, node, objectStack);\n}\n\nexport default WMSCapabilities;\n","import WMSCapabilities from '../src/ol/format/WMSCapabilities.js';\n\nconst parser = new WMSCapabilities();\n\nfetch('data/ogcsample.xml')\n  .then(function (response) {\n    return response.text();\n  })\n  .then(function (text) {\n    const result = parser.read(text);\n    document.getElementById('log').innerText = JSON.stringify(result, null, 2);\n  });\n"],"names":["NAMESPACE_URIS","isV13","objectStack","version","PARSERS","node","SERVICE_PARSERS_V13","SERVICE_PARSERS","CAPABILITY_PARSERS","REQUEST_PARSERS","EXCEPTION_PARSERS","layerObject","LAYER_PARSERS_V13","LAYER_PARSERS","undefined","Object","assign","readLayer","getAttribute","WMSCapabilities","XML","constructor","super","this","readFromNode","trim","wmsCapabilityObject","COMMON_SERVICE_PARSERS","readKeywordList","CONTACT_INFORMATION_PARSERS","CONTACT_PERSON_PARSERS","CONTACT_ADDRESS_PARSERS","COMMON_LAYER_PARSERS","readBoundingBox","dimensionObject","ATTRIBUTION_PARSERS","authorityObject","readFormatOnlineresource","metadataObject","STYLE_PARSERS","geographicBoundingBox","EX_GEOGRAPHIC_BOUNDING_BOX_PARSERS","westBoundLongitude","southBoundLatitude","eastBoundLongitude","northBoundLatitude","readSizedFormatOnlineresource","readOperationType","OPERATIONTYPE_PARSERS","DCPTYPE_PARSERS","HTTP_PARSERS","FORMAT_ONLINERESOURCE_PARSERS","KEYWORDLIST_PARSERS","withCrs","result","extent","res","crs","srs","v13","parentLayerObject","length","queryable","cascaded","opaque","noSubsets","fixedWidth","fixedHeight","addKeys","push","forEach","key","childValue","concat","replaceKeys","parentValue","formatOnlineresource","size","parser","fetch","then","response","text","read","document","getElementById","innerText","JSON","stringify"],"sourceRoot":""}