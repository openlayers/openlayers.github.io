{"version":3,"file":"icon-width.js","mappings":"uLASA,MAAMA,EAAaC,SAASC,eAAe,eACrCC,EAAcF,SAASC,eAAe,gBACtCE,EAAmBH,SAASC,eAAe,sBAC3CG,EAAoBJ,SAASC,eAAe,uBAC5CI,EAAYL,SAASC,eAAe,SAEpCK,EAAc,IAAI,IAAQ,CAC9BC,SAAU,IAAI,IAAM,CAAC,EAAG,IACxBC,KAAM,cACNC,WAAY,IACZC,SAAU,MAENC,EAAY,IAAI,KAAM,CAC1BC,MAAO,IAAI,IAAK,CACdC,IAAK,gBACLC,MAAOC,OAAOhB,EAAWiB,OACzBC,OAAQF,OAAOb,EAAYc,WAG/BV,EAAYY,SAASP,GAErBZ,EAAWoB,iBAAiB,SAAUC,IACpC,MAAMC,EAAcV,EAAUW,WAC9BX,EAAUY,SACR,IAAI,IAAK,CACPV,IAAK,gBACLC,MAAOC,OAAOK,EAAMI,OAAOR,OAC3BC,OAAQI,EAAYI,eAGxBnB,EAAYY,SAASP,EAAU,IAEjCT,EAAYiB,iBAAiB,SAAUC,IACrC,MAAMC,EAAcV,EAAUW,WAC9BX,EAAUY,SACR,IAAI,IAAK,CACPV,IAAK,gBACLI,OAAQF,OAAOK,EAAMI,OAAOR,OAC5BF,MAAOO,EAAYK,cAGvBpB,EAAYY,SAASP,EAAU,IAEjCR,EAAiBgB,iBAAiB,SAAS,KACzC,MAAME,EAAcV,EAAUW,WAC9BX,EAAUY,SACR,IAAI,IAAK,CACPV,IAAK,gBACLI,OAAQI,EAAYI,eAGxBnB,EAAYY,SAASP,GACrBZ,EAAWiB,MAAQW,OAAOC,KAAKC,MAAMlB,EAAUW,WAAWI,aAC1DrB,EAAUyB,UAAYC,EAAYpB,EAAUW,WAAWU,YACvD1B,EAAYY,SAASP,EAAU,IAEjCP,EAAkBe,iBAAiB,SAAS,KAC1C,MAAME,EAAcV,EAAUW,WAC9BX,EAAUY,SACR,IAAI,IAAK,CACPV,IAAK,gBACLC,MAAOO,EAAYK,cAGvBpB,EAAYY,SAASP,GACrBT,EAAYc,MAAQW,OAAOC,KAAKC,MAAMlB,EAAUW,WAAWG,cAC3DnB,EAAYY,SAASP,EAAU,IAGjC,MAAMsB,EAAe,IAAI,IAAa,CACpCC,SAAU,CAAC5B,KAGP6B,EAAc,IAAI,IAAY,CAClCC,OAAQH,IAgBV,SAASF,EAAYM,GACnB,OAAOC,MAAMC,QAAQF,GACjB,IAAMA,GAAOG,KAAKC,GAAMA,EAAEC,QAAQ,KAAIC,KAAK,MAAQ,IACnDN,CACN,CAjBY,IAAI,IAAI,CAClBO,OAAQ,CAACT,GACTX,OAAQ,MACRqB,KAAM,IAAI,KAAK,CACbC,OAAQ,CAAC,EAAG,GACZC,KAAM,MAGNC,GACF,kBACA,IAAO3C,EAAUyB,UAAYC,EAAYpB,EAAUW,WAAWU,a","sources":["webpack:///./icon-width.js"],"sourcesContent":["import Feature from '../src/ol/Feature.js';\nimport Map from '../src/ol/Map.js';\nimport View from '../src/ol/View.js';\nimport Point from '../src/ol/geom/Point.js';\nimport VectorLayer from '../src/ol/layer/Vector.js';\nimport VectorSource from '../src/ol/source/Vector.js';\nimport Icon from '../src/ol/style/Icon.js';\nimport Style from '../src/ol/style/Style.js';\n\nconst widthInput = document.getElementById('width-input');\nconst heightInput = document.getElementById('height-input');\nconst clearWidthButton = document.getElementById('clear-width-button');\nconst clearHeightButton = document.getElementById('clear-height-button');\nconst scaleSpan = document.getElementById('scale');\n\nconst iconFeature = new Feature({\n  geometry: new Point([0, 0]),\n  name: 'Null Island',\n  population: 4000,\n  rainfall: 500,\n});\nconst iconStyle = new Style({\n  image: new Icon({\n    src: 'data/icon.png',\n    width: Number(widthInput.value),\n    height: Number(heightInput.value),\n  }),\n});\niconFeature.setStyle(iconStyle);\n\nwidthInput.addEventListener('input', (event) => {\n  const currentIcon = iconStyle.getImage();\n  iconStyle.setImage(\n    new Icon({\n      src: 'data/icon.png',\n      width: Number(event.target.value),\n      height: currentIcon.getHeight(),\n    }),\n  );\n  iconFeature.setStyle(iconStyle);\n});\nheightInput.addEventListener('input', (event) => {\n  const currentIcon = iconStyle.getImage();\n  iconStyle.setImage(\n    new Icon({\n      src: 'data/icon.png',\n      height: Number(event.target.value),\n      width: currentIcon.getWidth(),\n    }),\n  );\n  iconFeature.setStyle(iconStyle);\n});\nclearWidthButton.addEventListener('click', () => {\n  const currentIcon = iconStyle.getImage();\n  iconStyle.setImage(\n    new Icon({\n      src: 'data/icon.png',\n      height: currentIcon.getHeight(),\n    }),\n  );\n  iconFeature.setStyle(iconStyle);\n  widthInput.value = String(Math.round(iconStyle.getImage().getWidth()));\n  scaleSpan.innerText = formatScale(iconStyle.getImage().getScale());\n  iconFeature.setStyle(iconStyle);\n});\nclearHeightButton.addEventListener('click', () => {\n  const currentIcon = iconStyle.getImage();\n  iconStyle.setImage(\n    new Icon({\n      src: 'data/icon.png',\n      width: currentIcon.getWidth(),\n    }),\n  );\n  iconFeature.setStyle(iconStyle);\n  heightInput.value = String(Math.round(iconStyle.getImage().getHeight()));\n  iconFeature.setStyle(iconStyle);\n});\n\nconst vectorSource = new VectorSource({\n  features: [iconFeature],\n});\n\nconst vectorLayer = new VectorLayer({\n  source: vectorSource,\n});\n\nconst map = new Map({\n  layers: [vectorLayer],\n  target: 'map',\n  view: new View({\n    center: [0, 0],\n    zoom: 3,\n  }),\n});\nmap.on(\n  'rendercomplete',\n  () => (scaleSpan.innerText = formatScale(iconStyle.getImage().getScale())),\n);\n\nfunction formatScale(scale) {\n  return Array.isArray(scale)\n    ? '[' + scale?.map((v) => v.toFixed(2)).join(', ') + ']'\n    : scale;\n}\n"],"names":["widthInput","document","getElementById","heightInput","clearWidthButton","clearHeightButton","scaleSpan","iconFeature","geometry","name","population","rainfall","iconStyle","image","src","width","Number","value","height","setStyle","addEventListener","event","currentIcon","getImage","setImage","target","getHeight","getWidth","String","Math","round","innerText","formatScale","getScale","vectorSource","features","vectorLayer","source","scale","Array","isArray","map","v","toFixed","join","layers","view","center","zoom","on"],"sourceRoot":""}