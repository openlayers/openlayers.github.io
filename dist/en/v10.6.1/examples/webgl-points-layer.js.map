{"version":3,"file":"webgl-points-layer.js","mappings":"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","sources":["webpack:///./webgl-points-layer.js"],"sourcesContent":["import Map from '../src/ol/Map.js';\nimport View from '../src/ol/View.js';\nimport GeoJSON from '../src/ol/format/GeoJSON.js';\nimport TileLayer from '../src/ol/layer/Tile.js';\nimport WebGLVectorLayer from '../src/ol/layer/WebGLVector.js';\nimport OSM from '../src/ol/source/OSM.js';\nimport Vector from '../src/ol/source/Vector.js';\n\nconst vectorSource = new Vector({\n  url: 'data/geojson/world-cities.geojson',\n  format: new GeoJSON(),\n  wrapX: true,\n});\n\nconst predefinedStyles = {\n  icons: {\n    'icon-src': 'data/icon.png',\n    'icon-width': 18,\n    'icon-height': 28,\n    'icon-color': 'lightyellow',\n    'icon-rotate-with-view': false,\n    'icon-displacement': [0, 9],\n  },\n  triangles: {\n    'shape-points': 3,\n    'shape-radius': 9,\n    'shape-fill-color': [\n      'interpolate',\n      ['linear'],\n      ['get', 'population'],\n      20000,\n      '#5aca5b',\n      300000,\n      '#ff6a19',\n    ],\n    'shape-rotate-with-view': true,\n  },\n  'triangles-latitude': {\n    'shape-points': 3,\n    'shape-radius': [\n      'interpolate',\n      ['linear'],\n      ['get', 'population'],\n      40000,\n      6,\n      2000000,\n      12,\n    ],\n    'shape-fill-color': [\n      'interpolate',\n      ['linear'],\n      ['get', 'latitude'],\n      -60,\n      '#ff14c3',\n      -20,\n      '#ff621d',\n      20,\n      '#ffed02',\n      60,\n      '#00ff67',\n    ],\n    'shape-opacity': 0.95,\n  },\n  circles: {\n    'circle-radius': [\n      'interpolate',\n      ['linear'],\n      ['get', 'population'],\n      40000,\n      4,\n      2000000,\n      14,\n    ],\n    'circle-fill-color': ['match', ['get', 'hover'], 1, '#ff3f3f', '#006688'],\n    'circle-rotate-with-view': false,\n    'circle-displacement': [0, 0],\n    'circle-opacity': [\n      'interpolate',\n      ['linear'],\n      ['get', 'population'],\n      40000,\n      0.6,\n      2000000,\n      0.92,\n    ],\n  },\n  'circles-zoom': {\n    // by using an exponential interpolation with a base of 2 we can make it so that circles will have a fixed size\n    // in world coordinates between zoom level 5 and 15\n    'circle-radius': [\n      'interpolate',\n      ['exponential', 2],\n      ['zoom'],\n      5,\n      1.5,\n      15,\n      1.5 * Math.pow(2, 10),\n    ],\n    'circle-fill-color': ['match', ['get', 'hover'], 1, '#ff3f3f', '#006688'],\n    'circle-displacement': [0, 0],\n    'circle-opacity': 0.95,\n  },\n  'rotating-bars': {\n    'shape-rotation': ['*', ['time'], 0.13],\n    'shape-points': 4,\n    'shape-radius': 4,\n    'shape-radius2': 4 * Math.sqrt(2),\n    'shape-scale': [\n      'array',\n      1,\n      ['interpolate', ['linear'], ['get', 'population'], 20000, 1, 300000, 7],\n    ],\n    'shape-fill-color': [\n      'interpolate',\n      ['linear'],\n      ['get', 'population'],\n      20000,\n      '#ffdc00',\n      300000,\n      '#ff5b19',\n    ],\n    'shape-displacement': [\n      'array',\n      0,\n      ['interpolate', ['linear'], ['get', 'population'], 20000, 2, 300000, 14],\n    ],\n  },\n};\n\nconst map = new Map({\n  layers: [\n    new TileLayer({\n      source: new OSM(),\n    }),\n  ],\n  target: document.getElementById('map'),\n  view: new View({\n    center: [0, 0],\n    zoom: 2,\n  }),\n});\n\nlet literalStyle;\nlet pointsLayer;\n\nlet selected = null;\n\nmap.on('pointermove', function (ev) {\n  if (selected !== null) {\n    selected.set('hover', 0);\n    selected = null;\n  }\n\n  map.forEachFeatureAtPixel(ev.pixel, function (feature) {\n    feature.set('hover', 1);\n    selected = feature;\n    return true;\n  });\n});\n\nfunction refreshLayer(newStyle) {\n  const previousLayer = pointsLayer;\n  pointsLayer = new WebGLVectorLayer({\n    source: vectorSource,\n    style: newStyle,\n  });\n  map.addLayer(pointsLayer);\n\n  if (previousLayer) {\n    map.removeLayer(previousLayer);\n    previousLayer.dispose();\n  }\n  literalStyle = newStyle;\n}\n\nconst spanValid = document.getElementById('style-valid');\nconst spanInvalid = document.getElementById('style-invalid');\nfunction setStyleStatus(errorMsg) {\n  const isError = typeof errorMsg === 'string';\n  spanValid.style.display = errorMsg === null ? 'initial' : 'none';\n  spanInvalid.firstElementChild.innerText = isError ? errorMsg : '';\n  spanInvalid.style.display = isError ? 'initial' : 'none';\n}\n\nconst editor = document.getElementById('style-editor');\neditor.addEventListener('input', function () {\n  const textStyle = editor.value;\n  try {\n    const newLiteralStyle = JSON.parse(textStyle);\n    if (JSON.stringify(newLiteralStyle) !== JSON.stringify(literalStyle)) {\n      refreshLayer(newLiteralStyle);\n    }\n    setStyleStatus(null);\n  } catch (e) {\n    setStyleStatus(e.message);\n  }\n});\n\nconst select = document.getElementById('style-select');\nselect.value = 'circles';\nfunction onSelectChange() {\n  const style = select.value;\n  const newLiteralStyle = predefinedStyles[style];\n  editor.value = JSON.stringify(newLiteralStyle, null, 2);\n  try {\n    refreshLayer(newLiteralStyle);\n    setStyleStatus();\n  } catch (e) {\n    setStyleStatus(e.message);\n  }\n}\nonSelectChange();\nselect.addEventListener('change', onSelectChange);\n\n// animate the map\nfunction animate() {\n  map.render();\n  window.requestAnimationFrame(animate);\n}\nanimate();\n"],"names":["vectorSource","url","format","wrapX","predefinedStyles","icons","triangles","circles","Math","pow","sqrt","map","layers","source","target","document","getElementById","view","center","zoom","literalStyle","pointsLayer","selected","refreshLayer","newStyle","previousLayer","style","addLayer","removeLayer","dispose","on","ev","set","forEachFeatureAtPixel","pixel","feature","spanValid","spanInvalid","setStyleStatus","errorMsg","isError","display","firstElementChild","innerText","editor","addEventListener","textStyle","value","newLiteralStyle","JSON","parse","stringify","e","message","select","onSelectChange","animate","render","window","requestAnimationFrame"],"sourceRoot":""}