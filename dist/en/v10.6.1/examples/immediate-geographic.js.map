{"version":3,"file":"immediate-geographic.js","mappings":"qNAYA,UAEA,MAAMA,EAAQ,IAAI,IAAU,CAC1BC,OAAQ,IAAI,IAAW,CACrBD,MAAO,mBAILE,EAAM,IAAI,IAAI,CAClBC,OAAQ,CAACH,GACTI,OAAQ,MACRC,KAAM,IAAI,KAAK,CACbC,OAAQ,CAAC,EAAG,GACZC,KAAM,MAIJC,EAAQ,IAAI,IAAO,CACvBC,OAAQ,EACRC,KAAM,IAAI,IAAK,CAACC,MAAO,uBAGnBC,EAAQ,IAAI,KAAM,CACtBJ,MAAOA,IAGHK,EAAI,IACJC,EAAa,IAAIC,MAAMF,GAE7B,IAAK,IAAIG,EAAI,EAAGA,EAAIH,IAAKG,EAAG,CAC1B,MAAMC,EAAM,IAAMC,KAAKC,SAAW,IAC5BC,EAAM,IAAMF,KAAKC,SAAW,GAClCL,EAAWE,GAAK,IAAI,IAAM,CAACC,EAAKG,GAClC,CAEApB,EAAMqB,GAAG,cAAc,SAAUC,GAC/B,MAAMC,GAAgB,QAAiBD,GAEvC,IAAK,IAAIN,EAAI,EAAGA,EAAIH,IAAKG,EAAG,CAC1B,MAAMQ,GAAa,QAAUN,KAAKO,KAAKZ,EAAIG,GAAKH,EAAG,MAC/CW,EAAa,KAGjBhB,EAAMkB,WAAWF,GACjBhB,EAAMmB,SAASH,GACfD,EAAcK,SAAShB,GACvBW,EAAcM,aAAaf,EAAWE,IACxC,CAEA,MAAMC,EAAM,IAAMC,KAAKC,SAAW,IAC5BC,EAAM,IAAMF,KAAKC,SAAW,GAClCL,EAAWgB,KAAK,IAAI,IAAM,CAACb,EAAKG,KAChCN,EAAWiB,QACX7B,EAAI8B,QACN,G","sources":["webpack:///./immediate-geographic.js"],"sourcesContent":["import Map from '../src/ol/Map.js';\nimport View from '../src/ol/View.js';\nimport {upAndDown} from '../src/ol/easing.js';\nimport Point from '../src/ol/geom/Point.js';\nimport TileLayer from '../src/ol/layer/Tile.js';\nimport {useGeographic} from '../src/ol/proj.js';\nimport {getVectorContext} from '../src/ol/render.js';\nimport StadiaMaps from '../src/ol/source/StadiaMaps.js';\nimport Circle from '../src/ol/style/Circle.js';\nimport Fill from '../src/ol/style/Fill.js';\nimport Style from '../src/ol/style/Style.js';\n\nuseGeographic();\n\nconst layer = new TileLayer({\n  source: new StadiaMaps({\n    layer: 'stamen_toner',\n  }),\n});\n\nconst map = new Map({\n  layers: [layer],\n  target: 'map',\n  view: new View({\n    center: [0, 0],\n    zoom: 2,\n  }),\n});\n\nconst image = new Circle({\n  radius: 8,\n  fill: new Fill({color: 'rgb(255, 153, 0)'}),\n});\n\nconst style = new Style({\n  image: image,\n});\n\nconst n = 1000;\nconst geometries = new Array(n);\n\nfor (let i = 0; i < n; ++i) {\n  const lon = 360 * Math.random() - 180;\n  const lat = 180 * Math.random() - 90;\n  geometries[i] = new Point([lon, lat]);\n}\n\nlayer.on('postrender', function (event) {\n  const vectorContext = getVectorContext(event);\n\n  for (let i = 0; i < n; ++i) {\n    const importance = upAndDown(Math.pow((n - i) / n, 0.15));\n    if (importance < 0.1) {\n      continue;\n    }\n    image.setOpacity(importance);\n    image.setScale(importance);\n    vectorContext.setStyle(style);\n    vectorContext.drawGeometry(geometries[i]);\n  }\n\n  const lon = 360 * Math.random() - 180;\n  const lat = 180 * Math.random() - 90;\n  geometries.push(new Point([lon, lat]));\n  geometries.shift();\n  map.render();\n});\n"],"names":["layer","source","map","layers","target","view","center","zoom","image","radius","fill","color","style","n","geometries","Array","i","lon","Math","random","lat","on","event","vectorContext","importance","pow","setOpacity","setScale","setStyle","drawGeometry","push","shift","render"],"sourceRoot":""}