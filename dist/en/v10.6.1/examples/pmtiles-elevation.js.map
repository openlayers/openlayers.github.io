{"version":3,"file":"pmtiles-elevation.js","mappings":"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","sources":["webpack:///./pmtiles-elevation.js"],"sourcesContent":["import {PMTiles} from 'pmtiles';\nimport Map from '../src/ol/Map.js';\nimport View from '../src/ol/View.js';\nimport TileLayer from '../src/ol/layer/WebGLTile.js';\nimport {useGeographic} from '../src/ol/proj.js';\nimport DataTile from '../src/ol/source/DataTile.js';\n\nuseGeographic();\n\nconst tiles = new PMTiles(\n  'https://pub-9288c68512ed46eca46ddcade307709b.r2.dev/protomaps-sample-datasets/terrarium_z9.pmtiles',\n);\n\nfunction loadImage(src) {\n  return new Promise((resolve, reject) => {\n    const img = new Image();\n    img.addEventListener('load', () => resolve(img));\n    img.addEventListener('error', () => reject(new Error('load failed')));\n    img.src = src;\n  });\n}\n\nasync function loader(z, x, y, {signal}) {\n  const response = await tiles.getZxy(z, x, y, signal);\n  const blob = new Blob([response.data]);\n  const src = URL.createObjectURL(blob);\n  const image = await loadImage(src);\n  URL.revokeObjectURL(src);\n  return image;\n}\n\n// The method used to extract elevations from the DEM.\n//   red * 256 + green + blue / 256 - 32768\nfunction elevation(xOffset, yOffset) {\n  const red = ['band', 1, xOffset, yOffset];\n  const green = ['band', 2, xOffset, yOffset];\n  const blue = ['band', 3, xOffset, yOffset];\n\n  // band math operates on normalized values from 0-1\n  // so we scale by 255\n  return [\n    '+',\n    ['*', 255 * 256, red],\n    ['*', 255, green],\n    ['*', 255 / 256, blue],\n    -32768,\n  ];\n}\n\n// Generates a shaded relief image given elevation data.  Uses a 3x3\n// neighborhood for determining slope and aspect.\nconst dp = ['*', 2, ['resolution']];\nconst z0x = ['*', ['var', 'vert'], elevation(-1, 0)];\nconst z1x = ['*', ['var', 'vert'], elevation(1, 0)];\nconst dzdx = ['/', ['-', z1x, z0x], dp];\nconst z0y = ['*', ['var', 'vert'], elevation(0, -1)];\nconst z1y = ['*', ['var', 'vert'], elevation(0, 1)];\nconst dzdy = ['/', ['-', z1y, z0y], dp];\nconst slope = ['atan', ['sqrt', ['+', ['^', dzdx, 2], ['^', dzdy, 2]]]];\nconst aspect = ['clamp', ['atan', ['-', 0, dzdx], dzdy], -Math.PI, Math.PI];\nconst sunEl = ['*', Math.PI / 180, ['var', 'sunEl']];\nconst sunAz = ['*', Math.PI / 180, ['var', 'sunAz']];\n\nconst incidence = [\n  '+',\n  ['*', ['sin', sunEl], ['cos', slope]],\n  ['*', ['cos', sunEl], ['sin', slope], ['cos', ['-', sunAz, aspect]]],\n];\nconst scaled = ['*', 255, incidence];\n\nconst variables = {};\n\nconst layer = new TileLayer({\n  source: new DataTile({\n    loader,\n    wrapX: true,\n    maxZoom: 9,\n    attributions:\n      \"<a href='https://github.com/tilezen/joerd/blob/master/docs/attribution.md#attribution'>Tilezen Jörð</a>\",\n  }),\n  style: {\n    variables: variables,\n    color: ['color', scaled],\n  },\n});\n\nconst controlIds = ['vert', 'sunEl', 'sunAz'];\ncontrolIds.forEach(function (id) {\n  const control = document.getElementById(id);\n  const output = document.getElementById(id + 'Out');\n  function updateValues() {\n    output.innerText = control.value;\n    variables[id] = Number(control.value);\n  }\n  updateValues();\n  control.addEventListener('input', function () {\n    updateValues();\n    layer.updateStyleVariables(variables);\n  });\n});\n\nconst map = new Map({\n  target: 'map',\n  layers: [layer],\n  view: new View({\n    center: [0, 0],\n    zoom: 1,\n  }),\n});\n\nfunction getElevation(data) {\n  const red = data[0];\n  const green = data[1];\n  const blue = data[2];\n  return red * 256 + green + blue / 256 - 32768;\n}\n\nfunction formatLocation([lon, lat]) {\n  const NS = lat < 0 ? 'S' : 'N';\n  const EW = lon < 0 ? 'W' : 'E';\n  return `${Math.abs(lat).toFixed(1)}° ${NS}, ${Math.abs(lon).toFixed(\n    1,\n  )}° ${EW}`;\n}\n\nconst elevationOut = document.getElementById('elevationOut');\nconst locationOut = document.getElementById('locationOut');\nfunction displayPixelValue(event) {\n  const data = layer.getData(event.pixel);\n  if (!data) {\n    return;\n  }\n  elevationOut.innerText = getElevation(data).toLocaleString() + ' m';\n  locationOut.innerText = formatLocation(event.coordinate);\n}\nmap.on(['pointermove', 'click'], displayPixelValue);\n"],"names":["tiles","elevation","xOffset","yOffset","dp","z0x","dzdx","z0y","dzdy","slope","aspect","Math","PI","sunEl","scaled","variables","layer","source","loader","async","z","x","y","signal","response","getZxy","blob","Blob","data","src","URL","createObjectURL","image","Promise","resolve","reject","img","Image","addEventListener","Error","loadImage","revokeObjectURL","wrapX","maxZoom","attributions","style","color","forEach","id","control","document","getElementById","output","updateValues","innerText","value","Number","updateStyleVariables","map","target","layers","view","center","zoom","elevationOut","locationOut","on","event","getData","pixel","getElevation","toLocaleString","lon","lat","NS","EW","abs","toFixed","formatLocation","coordinate"],"sourceRoot":""}