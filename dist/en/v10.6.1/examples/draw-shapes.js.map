{"version":3,"file":"draw-shapes.js","mappings":"qLAYA,MAAMA,EAAS,IAAI,IAAU,CAC3BC,OAAQ,IAAI,MAGRA,EAAS,IAAI,IAAa,CAACC,OAAO,IAElCC,EAAS,IAAI,IAAY,CAC7BF,OAAQA,IAGJG,EAAM,IAAI,IAAI,CAClBC,OAAQ,CAACL,EAAQG,GACjBG,OAAQ,MACRC,KAAM,IAAI,KAAK,CACbC,OAAQ,EAAE,KAAU,MACpBC,KAAM,MAIJC,EAAaC,SAASC,eAAe,QAE3C,IAAIC,EACJ,SAASC,IACP,IAAIC,EAAQL,EAAWK,MACvB,GAAc,SAAVA,EAAkB,CACpB,IAAIC,EACU,WAAVD,GACFA,EAAQ,SACRC,GAAmB,QAAqB,IACrB,QAAVD,GACTA,EAAQ,SACRC,GAAmB,WACA,SAAVD,IACTA,EAAQ,SACRC,EAAmB,SAAUC,EAAaC,GACxC,MAAMV,EAASS,EAAY,GACrBE,EAAOF,EAAYA,EAAYG,OAAS,GACxCC,EAAKb,EAAO,GAAKW,EAAK,GACtBG,EAAKd,EAAO,GAAKW,EAAK,GACtBI,EAASC,KAAKC,KAAKJ,EAAKA,EAAKC,EAAKA,GAClCI,EAAWF,KAAKG,MAAML,EAAID,GAC1BO,EAAiB,GAEvB,IAAK,IAAIC,EAAI,EAAGA,EADE,KACeA,EAAG,CAClC,MAAMC,EAAQJ,EAAgB,EAAJG,EAAQL,KAAKO,GAFvB,GAGVC,EAAWH,EAAI,GAAM,EAAI,EAAI,GAC7BI,EAAUV,EAASS,EAAWR,KAAKU,IAAIJ,GACvCK,EAAUZ,EAASS,EAAWR,KAAKY,IAAIN,GAC7CF,EAAeS,KAAK,CAAC7B,EAAO,GAAKyB,EAASzB,EAAO,GAAK2B,GACxD,CAOA,OANAP,EAAeS,KAAKT,EAAe,GAAGU,SACjCpB,EAGHA,EAASqB,eAAe,CAACX,IAFzBV,EAAW,IAAI,KAAQ,CAACU,IAInBV,CACT,GAEFL,EAAO,IAAI,KAAK,CACdZ,OAAQA,EACRuC,KAAMzB,EACNC,iBAAkBA,IAEpBZ,EAAIU,eAAeD,EACrB,CACF,CAKAH,EAAW+B,SAAW,WACpBrC,EAAIsC,kBAAkB7B,GACtBC,GACF,EAEAH,SAASC,eAAe,QAAQ+B,iBAAiB,SAAS,WACxD9B,EAAK+B,iBACP,IAEA9B,G","sources":["webpack:///./draw-shapes.js"],"sourcesContent":["import Map from '../src/ol/Map.js';\nimport View from '../src/ol/View.js';\nimport Polygon from '../src/ol/geom/Polygon.js';\nimport Draw, {\n  createBox,\n  createRegularPolygon,\n} from '../src/ol/interaction/Draw.js';\nimport TileLayer from '../src/ol/layer/Tile.js';\nimport VectorLayer from '../src/ol/layer/Vector.js';\nimport OSM from '../src/ol/source/OSM.js';\nimport VectorSource from '../src/ol/source/Vector.js';\n\nconst raster = new TileLayer({\n  source: new OSM(),\n});\n\nconst source = new VectorSource({wrapX: false});\n\nconst vector = new VectorLayer({\n  source: source,\n});\n\nconst map = new Map({\n  layers: [raster, vector],\n  target: 'map',\n  view: new View({\n    center: [-11000000, 4600000],\n    zoom: 4,\n  }),\n});\n\nconst typeSelect = document.getElementById('type');\n\nlet draw; // global so we can remove it later\nfunction addInteraction() {\n  let value = typeSelect.value;\n  if (value !== 'None') {\n    let geometryFunction;\n    if (value === 'Square') {\n      value = 'Circle';\n      geometryFunction = createRegularPolygon(4);\n    } else if (value === 'Box') {\n      value = 'Circle';\n      geometryFunction = createBox();\n    } else if (value === 'Star') {\n      value = 'Circle';\n      geometryFunction = function (coordinates, geometry) {\n        const center = coordinates[0];\n        const last = coordinates[coordinates.length - 1];\n        const dx = center[0] - last[0];\n        const dy = center[1] - last[1];\n        const radius = Math.sqrt(dx * dx + dy * dy);\n        const rotation = Math.atan2(dy, dx);\n        const newCoordinates = [];\n        const numPoints = 12;\n        for (let i = 0; i < numPoints; ++i) {\n          const angle = rotation + (i * 2 * Math.PI) / numPoints;\n          const fraction = i % 2 === 0 ? 1 : 0.5;\n          const offsetX = radius * fraction * Math.cos(angle);\n          const offsetY = radius * fraction * Math.sin(angle);\n          newCoordinates.push([center[0] + offsetX, center[1] + offsetY]);\n        }\n        newCoordinates.push(newCoordinates[0].slice());\n        if (!geometry) {\n          geometry = new Polygon([newCoordinates]);\n        } else {\n          geometry.setCoordinates([newCoordinates]);\n        }\n        return geometry;\n      };\n    }\n    draw = new Draw({\n      source: source,\n      type: value,\n      geometryFunction: geometryFunction,\n    });\n    map.addInteraction(draw);\n  }\n}\n\n/**\n * Handle change event.\n */\ntypeSelect.onchange = function () {\n  map.removeInteraction(draw);\n  addInteraction();\n};\n\ndocument.getElementById('undo').addEventListener('click', function () {\n  draw.removeLastPoint();\n});\n\naddInteraction();\n"],"names":["raster","source","wrapX","vector","map","layers","target","view","center","zoom","typeSelect","document","getElementById","draw","addInteraction","value","geometryFunction","coordinates","geometry","last","length","dx","dy","radius","Math","sqrt","rotation","atan2","newCoordinates","i","angle","PI","fraction","offsetX","cos","offsetY","sin","push","slice","setCoordinates","type","onchange","removeInteraction","addEventListener","removeLastPoint"],"sourceRoot":""}