{"version":3,"file":"d3.js","mappings":"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","sources":["webpack:///../node_modules/d3-fetch/src/json.js","webpack:///../node_modules/d3-geo/src/math.js","webpack:///../node_modules/d3-geo/src/compose.js","webpack:///../node_modules/d3-geo/src/rotation.js","webpack:///../node_modules/d3-geo/src/noop.js","webpack:///../node_modules/d3-geo/src/clip/buffer.js","webpack:///../node_modules/d3-geo/src/pointEqual.js","webpack:///../node_modules/d3-geo/src/clip/rejoin.js","webpack:///../node_modules/d3-array/src/fsum.js","webpack:///../node_modules/d3-geo/src/cartesian.js","webpack:///../node_modules/d3-geo/src/polygonContains.js","webpack:///../node_modules/d3-array/src/merge.js","webpack:///../node_modules/d3-geo/src/clip/index.js","webpack:///../node_modules/d3-geo/src/clip/antimeridian.js","webpack:///../node_modules/d3-geo/src/circle.js","webpack:///../node_modules/d3-geo/src/clip/rectangle.js","webpack:///../node_modules/d3-geo/src/clip/line.js","webpack:///../node_modules/d3-geo/src/identity.js","webpack:///../node_modules/d3-geo/src/transform.js","webpack:///../node_modules/d3-geo/src/stream.js","webpack:///../node_modules/d3-geo/src/path/bounds.js","webpack:///../node_modules/d3-geo/src/projection/fit.js","webpack:///../node_modules/d3-geo/src/projection/resample.js","webpack:///../node_modules/d3-geo/src/projection/index.js","webpack:///../node_modules/d3-geo/src/clip/circle.js","webpack:///../node_modules/d3-geo/src/projection/mercator.js","webpack:///../node_modules/d3-geo/src/path/area.js","webpack:///../node_modules/d3-geo/src/path/centroid.js","webpack:///../node_modules/d3-geo/src/path/context.js","webpack:///../node_modules/d3-geo/src/path/measure.js","webpack:///../node_modules/d3-geo/src/path/string.js","webpack:///../node_modules/d3-geo/src/path/index.js","webpack:///../node_modules/d3-geo/src/area.js","webpack:///../node_modules/d3-geo/src/bounds.js","webpack:///../node_modules/topojson-client/src/identity.js","webpack:///../node_modules/topojson-client/src/feature.js","webpack:///../node_modules/topojson-client/src/transform.js","webpack:///../node_modules/topojson-client/src/reverse.js","webpack:///./d3.js"],"sourcesContent":["function responseJson(response) {\n  if (!response.ok) throw new Error(response.status + \" \" + response.statusText);\n  if (response.status === 204 || response.status === 205) return;\n  return response.json();\n}\n\nexport default function(input, init) {\n  return fetch(input, init).then(responseJson);\n}\n","export var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var quarterPi = pi / 4;\nexport var tau = pi * 2;\n\nexport var degrees = 180 / pi;\nexport var radians = pi / 180;\n\nexport var abs = Math.abs;\nexport var atan = Math.atan;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var ceil = Math.ceil;\nexport var exp = Math.exp;\nexport var floor = Math.floor;\nexport var hypot = Math.hypot;\nexport var log = Math.log;\nexport var pow = Math.pow;\nexport var sin = Math.sin;\nexport var sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\nexport var sqrt = Math.sqrt;\nexport var tan = Math.tan;\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function asin(x) {\n  return x > 1 ? halfPi : x < -1 ? -halfPi : Math.asin(x);\n}\n\nexport function haversin(x) {\n  return (x = sin(x / 2)) * x;\n}\n","export default function(a, b) {\n\n  function compose(x, y) {\n    return x = a(x, y), b(x[0], x[1]);\n  }\n\n  if (a.invert && b.invert) compose.invert = function(x, y) {\n    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n  };\n\n  return compose;\n}\n","import compose from \"./compose.js\";\nimport {abs, asin, atan2, cos, degrees, pi, radians, sin, tau} from \"./math.js\";\n\nfunction rotationIdentity(lambda, phi) {\n  if (abs(lambda) > pi) lambda -= Math.round(lambda / tau) * tau;\n  return [lambda, phi];\n}\n\nrotationIdentity.invert = rotationIdentity;\n\nexport function rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= tau) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n    : rotationLambda(deltaLambda))\n    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n    : rotationIdentity);\n}\n\nfunction forwardRotationLambda(deltaLambda) {\n  return function(lambda, phi) {\n    lambda += deltaLambda;\n    if (abs(lambda) > pi) lambda -= Math.round(lambda / tau) * tau;\n    return [lambda, phi];\n  };\n}\n\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\n\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = cos(deltaPhi),\n      sinDeltaPhi = sin(deltaPhi),\n      cosDeltaGamma = cos(deltaGamma),\n      sinDeltaGamma = sin(deltaGamma);\n\n  function rotation(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [\n      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n      asin(k * cosDeltaGamma + y * sinDeltaGamma)\n    ];\n  }\n\n  rotation.invert = function(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [\n      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n      asin(k * cosDeltaPhi - x * sinDeltaPhi)\n    ];\n  };\n\n  return rotation;\n}\n\nexport default function(rotate) {\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  }\n\n  forward.invert = function(coordinates) {\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  };\n\n  return forward;\n}\n","export default function noop() {}\n","import noop from \"../noop.js\";\n\nexport default function() {\n  var lines = [],\n      line;\n  return {\n    point: function(x, y, m) {\n      line.push([x, y, m]);\n    },\n    lineStart: function() {\n      lines.push(line = []);\n    },\n    lineEnd: noop,\n    rejoin: function() {\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n    },\n    result: function() {\n      var result = lines;\n      lines = [];\n      line = null;\n      return result;\n    }\n  };\n}\n","import {abs, epsilon} from \"./math.js\";\n\nexport default function(a, b) {\n  return abs(a[0] - b[0]) < epsilon && abs(a[1] - b[1]) < epsilon;\n}\n","import pointEqual from \"../pointEqual.js\";\nimport {epsilon} from \"../math.js\";\n\nfunction Intersection(point, points, other, entry) {\n  this.x = point;\n  this.z = points;\n  this.o = other; // another intersection\n  this.e = entry; // is an entry?\n  this.v = false; // visited\n  this.n = this.p = null; // next & previous\n}\n\n// A generalized polygon clipping algorithm: given a polygon that has been cut\n// into its visible line segments, and rejoins the segments by interpolating\n// along the clip edge.\nexport default function(segments, compareIntersection, startInside, interpolate, stream) {\n  var subject = [],\n      clip = [],\n      i,\n      n;\n\n  segments.forEach(function(segment) {\n    if ((n = segment.length - 1) <= 0) return;\n    var n, p0 = segment[0], p1 = segment[n], x;\n\n    if (pointEqual(p0, p1)) {\n      if (!p0[2] && !p1[2]) {\n        stream.lineStart();\n        for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n        stream.lineEnd();\n        return;\n      }\n      // handle degenerate cases by moving the point\n      p1[0] += 2 * epsilon;\n    }\n\n    subject.push(x = new Intersection(p0, segment, null, true));\n    clip.push(x.o = new Intersection(p0, null, x, false));\n    subject.push(x = new Intersection(p1, segment, null, false));\n    clip.push(x.o = new Intersection(p1, null, x, true));\n  });\n\n  if (!subject.length) return;\n\n  clip.sort(compareIntersection);\n  link(subject);\n  link(clip);\n\n  for (i = 0, n = clip.length; i < n; ++i) {\n    clip[i].e = startInside = !startInside;\n  }\n\n  var start = subject[0],\n      points,\n      point;\n\n  while (1) {\n    // Find first unvisited intersection.\n    var current = start,\n        isSubject = true;\n    while (current.v) if ((current = current.n) === start) return;\n    points = current.z;\n    stream.lineStart();\n    do {\n      current.v = current.o.v = true;\n      if (current.e) {\n        if (isSubject) {\n          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.n.x, 1, stream);\n        }\n        current = current.n;\n      } else {\n        if (isSubject) {\n          points = current.p.z;\n          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.p.x, -1, stream);\n        }\n        current = current.p;\n      }\n      current = current.o;\n      points = current.z;\n      isSubject = !isSubject;\n    } while (!current.v);\n    stream.lineEnd();\n  }\n}\n\nfunction link(array) {\n  if (!(n = array.length)) return;\n  var n,\n      i = 0,\n      a = array[0],\n      b;\n  while (++i < n) {\n    a.n = b = array[i];\n    b.p = a;\n    a = b;\n  }\n  a.n = b = array[0];\n  b.p = a;\n}\n","// https://github.com/python/cpython/blob/a74eea238f5baba15797e2e8b570d153bc8690a7/Modules/mathmodule.c#L1423\nexport class Adder {\n  constructor() {\n    this._partials = new Float64Array(32);\n    this._n = 0;\n  }\n  add(x) {\n    const p = this._partials;\n    let i = 0;\n    for (let j = 0; j < this._n && j < 32; j++) {\n      const y = p[j],\n        hi = x + y,\n        lo = Math.abs(x) < Math.abs(y) ? x - (hi - y) : y - (hi - x);\n      if (lo) p[i++] = lo;\n      x = hi;\n    }\n    p[i] = x;\n    this._n = i + 1;\n    return this;\n  }\n  valueOf() {\n    const p = this._partials;\n    let n = this._n, x, y, lo, hi = 0;\n    if (n > 0) {\n      hi = p[--n];\n      while (n > 0) {\n        x = hi;\n        y = p[--n];\n        hi = x + y;\n        lo = y - (hi - x);\n        if (lo) break;\n      }\n      if (n > 0 && ((lo < 0 && p[n - 1] < 0) || (lo > 0 && p[n - 1] > 0))) {\n        y = lo * 2;\n        x = hi + y;\n        if (y == x - hi) hi = x;\n      }\n    }\n    return hi;\n  }\n}\n\nexport function fsum(values, valueof) {\n  const adder = new Adder();\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value = +value) {\n        adder.add(value);\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if (value = +valueof(value, ++index, values)) {\n        adder.add(value);\n      }\n    }\n  }\n  return +adder;\n}\n\nexport function fcumsum(values, valueof) {\n  const adder = new Adder();\n  let index = -1;\n  return Float64Array.from(values, valueof === undefined\n      ? v => adder.add(+v || 0)\n      : v => adder.add(+valueof(v, ++index, values) || 0)\n  );\n}\n","import {asin, atan2, cos, sin, sqrt} from \"./math.js\";\n\nexport function spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n}\n\nexport function cartesian(spherical) {\n  var lambda = spherical[0], phi = spherical[1], cosPhi = cos(phi);\n  return [cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi)];\n}\n\nexport function cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\nexport function cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n}\n\n// TODO return a\nexport function cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\n\nexport function cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n}\n\n// TODO return d\nexport function cartesianNormalizeInPlace(d) {\n  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}\n","import {Adder} from \"d3-array\";\nimport {cartesian, cartesianCross, cartesianNormalizeInPlace} from \"./cartesian.js\";\nimport {abs, asin, atan2, cos, epsilon, epsilon2, halfPi, pi, quarterPi, sign, sin, tau} from \"./math.js\";\n\nfunction longitude(point) {\n  return abs(point[0]) <= pi ? point[0] : sign(point[0]) * ((abs(point[0]) + pi) % tau - pi);\n}\n\nexport default function(polygon, point) {\n  var lambda = longitude(point),\n      phi = point[1],\n      sinPhi = sin(phi),\n      normal = [sin(lambda), -cos(lambda), 0],\n      angle = 0,\n      winding = 0;\n\n  var sum = new Adder();\n\n  if (sinPhi === 1) phi = halfPi + epsilon;\n  else if (sinPhi === -1) phi = -halfPi - epsilon;\n\n  for (var i = 0, n = polygon.length; i < n; ++i) {\n    if (!(m = (ring = polygon[i]).length)) continue;\n    var ring,\n        m,\n        point0 = ring[m - 1],\n        lambda0 = longitude(point0),\n        phi0 = point0[1] / 2 + quarterPi,\n        sinPhi0 = sin(phi0),\n        cosPhi0 = cos(phi0);\n\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n      var point1 = ring[j],\n          lambda1 = longitude(point1),\n          phi1 = point1[1] / 2 + quarterPi,\n          sinPhi1 = sin(phi1),\n          cosPhi1 = cos(phi1),\n          delta = lambda1 - lambda0,\n          sign = delta >= 0 ? 1 : -1,\n          absDelta = sign * delta,\n          antimeridian = absDelta > pi,\n          k = sinPhi0 * sinPhi1;\n\n      sum.add(atan2(k * sign * sin(absDelta), cosPhi0 * cosPhi1 + k * cos(absDelta)));\n      angle += antimeridian ? delta + sign * tau : delta;\n\n      // Are the longitudes either side of the point’s meridian (lambda),\n      // and are the latitudes smaller than the parallel (phi)?\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n        cartesianNormalizeInPlace(arc);\n        var intersection = cartesianCross(normal, arc);\n        cartesianNormalizeInPlace(intersection);\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n        }\n      }\n    }\n  }\n\n  // First, determine whether the South pole is inside or outside:\n  //\n  // It is inside if:\n  // * the polygon winds around it in a clockwise direction.\n  // * the polygon does not (cumulatively) wind around it, but has a negative\n  //   (counter-clockwise) area.\n  //\n  // Second, count the (signed) number of times a segment crosses a lambda\n  // from the point to the South pole.  If it is zero, then the point is the\n  // same side as the South pole.\n\n  return (angle < -epsilon || angle < epsilon && sum < -epsilon2) ^ (winding & 1);\n}\n","function* flatten(arrays) {\n  for (const array of arrays) {\n    yield* array;\n  }\n}\n\nexport default function merge(arrays) {\n  return Array.from(flatten(arrays));\n}\n","import clipBuffer from \"./buffer.js\";\nimport clipRejoin from \"./rejoin.js\";\nimport {epsilon, halfPi} from \"../math.js\";\nimport polygonContains from \"../polygonContains.js\";\nimport {merge} from \"d3-array\";\n\nexport default function(pointVisible, clipLine, interpolate, start) {\n  return function(sink) {\n    var line = clipLine(sink),\n        ringBuffer = clipBuffer(),\n        ringSink = clipLine(ringBuffer),\n        polygonStarted = false,\n        polygon,\n        segments,\n        ring;\n\n    var clip = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        clip.point = pointRing;\n        clip.lineStart = ringStart;\n        clip.lineEnd = ringEnd;\n        segments = [];\n        polygon = [];\n      },\n      polygonEnd: function() {\n        clip.point = point;\n        clip.lineStart = lineStart;\n        clip.lineEnd = lineEnd;\n        segments = merge(segments);\n        var startInside = polygonContains(polygon, start);\n        if (segments.length) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          clipRejoin(segments, compareIntersection, startInside, interpolate, sink);\n        } else if (startInside) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n        }\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n        segments = polygon = null;\n      },\n      sphere: function() {\n        sink.polygonStart();\n        sink.lineStart();\n        interpolate(null, null, 1, sink);\n        sink.lineEnd();\n        sink.polygonEnd();\n      }\n    };\n\n    function point(lambda, phi) {\n      if (pointVisible(lambda, phi)) sink.point(lambda, phi);\n    }\n\n    function pointLine(lambda, phi) {\n      line.point(lambda, phi);\n    }\n\n    function lineStart() {\n      clip.point = pointLine;\n      line.lineStart();\n    }\n\n    function lineEnd() {\n      clip.point = point;\n      line.lineEnd();\n    }\n\n    function pointRing(lambda, phi) {\n      ring.push([lambda, phi]);\n      ringSink.point(lambda, phi);\n    }\n\n    function ringStart() {\n      ringSink.lineStart();\n      ring = [];\n    }\n\n    function ringEnd() {\n      pointRing(ring[0][0], ring[0][1]);\n      ringSink.lineEnd();\n\n      var clean = ringSink.clean(),\n          ringSegments = ringBuffer.result(),\n          i, n = ringSegments.length, m,\n          segment,\n          point;\n\n      ring.pop();\n      polygon.push(ring);\n      ring = null;\n\n      if (!n) return;\n\n      // No intersections.\n      if (clean & 1) {\n        segment = ringSegments[0];\n        if ((m = segment.length - 1) > 0) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n          sink.lineEnd();\n        }\n        return;\n      }\n\n      // Rejoin connected segments.\n      // TODO reuse ringBuffer.rejoin()?\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\n      segments.push(ringSegments.filter(validSegment));\n    }\n\n    return clip;\n  };\n}\n\nfunction validSegment(segment) {\n  return segment.length > 1;\n}\n\n// Intersections are sorted along the clip edge. For both antimeridian cutting\n// and circle clipping, the same comparison is used.\nfunction compareIntersection(a, b) {\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi - epsilon : halfPi - a[1])\n       - ((b = b.x)[0] < 0 ? b[1] - halfPi - epsilon : halfPi - b[1]);\n}\n","import clip from \"./index.js\";\nimport {abs, atan, cos, epsilon, halfPi, pi, sin} from \"../math.js\";\n\nexport default clip(\n  function() { return true; },\n  clipAntimeridianLine,\n  clipAntimeridianInterpolate,\n  [-pi, -halfPi]\n);\n\n// Takes a line and cuts into visible segments. Return values: 0 - there were\n// intersections or the line was empty; 1 - no intersections; 2 - there were\n// intersections, and the first and last segments should be rejoined.\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n      phi0 = NaN,\n      sign0 = NaN,\n      clean; // no intersections\n\n  return {\n    lineStart: function() {\n      stream.lineStart();\n      clean = 1;\n    },\n    point: function(lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? pi : -pi,\n          delta = abs(lambda1 - lambda0);\n      if (abs(delta - pi) < epsilon) { // line crosses a pole\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi : -halfPi);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        clean = 0;\n      } else if (sign0 !== sign1 && delta >= pi) { // line crosses antimeridian\n        if (abs(lambda0 - sign0) < epsilon) lambda0 -= sign0 * epsilon; // handle degeneracies\n        if (abs(lambda1 - sign1) < epsilon) lambda1 -= sign1 * epsilon;\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        clean = 0;\n      }\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function() {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function() {\n      return 2 - clean; // if intersections, rejoin first and last segments\n    }\n  };\n}\n\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n      cosPhi1,\n      sinLambda0Lambda1 = sin(lambda0 - lambda1);\n  return abs(sinLambda0Lambda1) > epsilon\n      ? atan((sin(phi0) * (cosPhi1 = cos(phi1)) * sin(lambda1)\n          - sin(phi1) * (cosPhi0 = cos(phi0)) * sin(lambda0))\n          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n      : (phi0 + phi1) / 2;\n}\n\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n  if (from == null) {\n    phi = direction * halfPi;\n    stream.point(-pi, phi);\n    stream.point(0, phi);\n    stream.point(pi, phi);\n    stream.point(pi, 0);\n    stream.point(pi, -phi);\n    stream.point(0, -phi);\n    stream.point(-pi, -phi);\n    stream.point(-pi, 0);\n    stream.point(-pi, phi);\n  } else if (abs(from[0] - to[0]) > epsilon) {\n    var lambda = from[0] < to[0] ? pi : -pi;\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}\n","import {cartesian, cartesianNormalizeInPlace, spherical} from \"./cartesian.js\";\nimport constant from \"./constant.js\";\nimport {acos, cos, degrees, epsilon, radians, sin, tau} from \"./math.js\";\nimport {rotateRadians} from \"./rotation.js\";\n\n// Generates a circle centered at [0°, 0°], with a given radius and precision.\nexport function circleStream(stream, radius, delta, direction, t0, t1) {\n  if (!delta) return;\n  var cosRadius = cos(radius),\n      sinRadius = sin(radius),\n      step = direction * delta;\n  if (t0 == null) {\n    t0 = radius + direction * tau;\n    t1 = radius - step / 2;\n  } else {\n    t0 = circleRadius(cosRadius, t0);\n    t1 = circleRadius(cosRadius, t1);\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau;\n  }\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n    point = spherical([cosRadius, -sinRadius * cos(t), -sinRadius * sin(t)]);\n    stream.point(point[0], point[1]);\n  }\n}\n\n// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\nfunction circleRadius(cosRadius, point) {\n  point = cartesian(point), point[0] -= cosRadius;\n  cartesianNormalizeInPlace(point);\n  var radius = acos(-point[1]);\n  return ((-point[2] < 0 ? -radius : radius) + tau - epsilon) % tau;\n}\n\nexport default function() {\n  var center = constant([0, 0]),\n      radius = constant(90),\n      precision = constant(2),\n      ring,\n      rotate,\n      stream = {point: point};\n\n  function point(x, y) {\n    ring.push(x = rotate(x, y));\n    x[0] *= degrees, x[1] *= degrees;\n  }\n\n  function circle() {\n    var c = center.apply(this, arguments),\n        r = radius.apply(this, arguments) * radians,\n        p = precision.apply(this, arguments) * radians;\n    ring = [];\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n    circleStream(stream, r, p, 1);\n    c = {type: \"Polygon\", coordinates: [ring]};\n    ring = rotate = null;\n    return c;\n  }\n\n  circle.center = function(_) {\n    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant([+_[0], +_[1]]), circle) : center;\n  };\n\n  circle.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), circle) : radius;\n  };\n\n  circle.precision = function(_) {\n    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant(+_), circle) : precision;\n  };\n\n  return circle;\n}\n","import {abs, epsilon} from \"../math.js\";\nimport clipBuffer from \"./buffer.js\";\nimport clipLine from \"./line.js\";\nimport clipRejoin from \"./rejoin.js\";\nimport {merge} from \"d3-array\";\n\nvar clipMax = 1e9, clipMin = -clipMax;\n\n// TODO Use d3-polygon’s polygonContains here for the ring check?\n// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\nexport default function clipRectangle(x0, y0, x1, y1) {\n\n  function visible(x, y) {\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n  }\n\n  function interpolate(from, to, direction, stream) {\n    var a = 0, a1 = 0;\n    if (from == null\n        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n        || comparePoint(from, to) < 0 ^ direction > 0) {\n      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n      while ((a = (a + direction + 4) % 4) !== a1);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function corner(p, direction) {\n    return abs(p[0] - x0) < epsilon ? direction > 0 ? 0 : 3\n        : abs(p[0] - x1) < epsilon ? direction > 0 ? 2 : 1\n        : abs(p[1] - y0) < epsilon ? direction > 0 ? 1 : 0\n        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n  }\n\n  function compareIntersection(a, b) {\n    return comparePoint(a.x, b.x);\n  }\n\n  function comparePoint(a, b) {\n    var ca = corner(a, 1),\n        cb = corner(b, 1);\n    return ca !== cb ? ca - cb\n        : ca === 0 ? b[1] - a[1]\n        : ca === 1 ? a[0] - b[0]\n        : ca === 2 ? a[1] - b[1]\n        : b[0] - a[0];\n  }\n\n  return function(stream) {\n    var activeStream = stream,\n        bufferStream = clipBuffer(),\n        segments,\n        polygon,\n        ring,\n        x__, y__, v__, // first point\n        x_, y_, v_, // previous point\n        first,\n        clean;\n\n    var clipStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: polygonStart,\n      polygonEnd: polygonEnd\n    };\n\n    function point(x, y) {\n      if (visible(x, y)) activeStream.point(x, y);\n    }\n\n    function polygonInside() {\n      var winding = 0;\n\n      for (var i = 0, n = polygon.length; i < n; ++i) {\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n        }\n      }\n\n      return winding;\n    }\n\n    // Buffer geometry within a polygon and then clip it en masse.\n    function polygonStart() {\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n    }\n\n    function polygonEnd() {\n      var startInside = polygonInside(),\n          cleanInside = clean && startInside,\n          visible = (segments = merge(segments)).length;\n      if (cleanInside || visible) {\n        stream.polygonStart();\n        if (cleanInside) {\n          stream.lineStart();\n          interpolate(null, null, 1, stream);\n          stream.lineEnd();\n        }\n        if (visible) {\n          clipRejoin(segments, compareIntersection, startInside, interpolate, stream);\n        }\n        stream.polygonEnd();\n      }\n      activeStream = stream, segments = polygon = ring = null;\n    }\n\n    function lineStart() {\n      clipStream.point = linePoint;\n      if (polygon) polygon.push(ring = []);\n      first = true;\n      v_ = false;\n      x_ = y_ = NaN;\n    }\n\n    // TODO rather than special-case polygons, simply handle them separately.\n    // Ideally, coincident intersection points should be jittered to avoid\n    // clipping issues.\n    function lineEnd() {\n      if (segments) {\n        linePoint(x__, y__);\n        if (v__ && v_) bufferStream.rejoin();\n        segments.push(bufferStream.result());\n      }\n      clipStream.point = point;\n      if (v_) activeStream.lineEnd();\n    }\n\n    function linePoint(x, y) {\n      var v = visible(x, y);\n      if (polygon) ring.push([x, y]);\n      if (first) {\n        x__ = x, y__ = y, v__ = v;\n        first = false;\n        if (v) {\n          activeStream.lineStart();\n          activeStream.point(x, y);\n        }\n      } else {\n        if (v && v_) activeStream.point(x, y);\n        else {\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n          if (clipLine(a, b, x0, y0, x1, y1)) {\n            if (!v_) {\n              activeStream.lineStart();\n              activeStream.point(a[0], a[1]);\n            }\n            activeStream.point(b[0], b[1]);\n            if (!v) activeStream.lineEnd();\n            clean = false;\n          } else if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n            clean = false;\n          }\n        }\n      }\n      x_ = x, y_ = y, v_ = v;\n    }\n\n    return clipStream;\n  };\n}\n","export default function(a, b, x0, y0, x1, y1) {\n  var ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n  return true;\n}\n","export default x => x;\n","export default function(methods) {\n  return {\n    stream: transformer(methods)\n  };\n}\n\nexport function transformer(methods) {\n  return function(stream) {\n    var s = new TransformStream;\n    for (var key in methods) s[key] = methods[key];\n    s.stream = stream;\n    return s;\n  };\n}\n\nfunction TransformStream() {}\n\nTransformStream.prototype = {\n  constructor: TransformStream,\n  point: function(x, y) { this.stream.point(x, y); },\n  sphere: function() { this.stream.sphere(); },\n  lineStart: function() { this.stream.lineStart(); },\n  lineEnd: function() { this.stream.lineEnd(); },\n  polygonStart: function() { this.stream.polygonStart(); },\n  polygonEnd: function() { this.stream.polygonEnd(); }\n};\n","function streamGeometry(geometry, stream) {\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n    streamGeometryType[geometry.type](geometry, stream);\n  }\n}\n\nvar streamObjectType = {\n  Feature: function(object, stream) {\n    streamGeometry(object.geometry, stream);\n  },\n  FeatureCollection: function(object, stream) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) streamGeometry(features[i].geometry, stream);\n  }\n};\n\nvar streamGeometryType = {\n  Sphere: function(object, stream) {\n    stream.sphere();\n  },\n  Point: function(object, stream) {\n    object = object.coordinates;\n    stream.point(object[0], object[1], object[2]);\n  },\n  MultiPoint: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n  },\n  LineString: function(object, stream) {\n    streamLine(object.coordinates, stream, 0);\n  },\n  MultiLineString: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamLine(coordinates[i], stream, 0);\n  },\n  Polygon: function(object, stream) {\n    streamPolygon(object.coordinates, stream);\n  },\n  MultiPolygon: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamPolygon(coordinates[i], stream);\n  },\n  GeometryCollection: function(object, stream) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) streamGeometry(geometries[i], stream);\n  }\n};\n\nfunction streamLine(coordinates, stream, closed) {\n  var i = -1, n = coordinates.length - closed, coordinate;\n  stream.lineStart();\n  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n  stream.lineEnd();\n}\n\nfunction streamPolygon(coordinates, stream) {\n  var i = -1, n = coordinates.length;\n  stream.polygonStart();\n  while (++i < n) streamLine(coordinates[i], stream, 1);\n  stream.polygonEnd();\n}\n\nexport default function(object, stream) {\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\n    streamObjectType[object.type](object, stream);\n  } else {\n    streamGeometry(object, stream);\n  }\n}\n","import noop from \"../noop.js\";\n\nvar x0 = Infinity,\n    y0 = x0,\n    x1 = -x0,\n    y1 = x1;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop,\n  result: function() {\n    var bounds = [[x0, y0], [x1, y1]];\n    x1 = y1 = -(y0 = x0 = Infinity);\n    return bounds;\n  }\n};\n\nfunction boundsPoint(x, y) {\n  if (x < x0) x0 = x;\n  if (x > x1) x1 = x;\n  if (y < y0) y0 = y;\n  if (y > y1) y1 = y;\n}\n\nexport default boundsStream;\n","import {default as geoStream} from \"../stream.js\";\nimport boundsStream from \"../path/bounds.js\";\n\nfunction fit(projection, fitBounds, object) {\n  var clip = projection.clipExtent && projection.clipExtent();\n  projection.scale(150).translate([0, 0]);\n  if (clip != null) projection.clipExtent(null);\n  geoStream(object, projection.stream(boundsStream));\n  fitBounds(boundsStream.result());\n  if (clip != null) projection.clipExtent(clip);\n  return projection;\n}\n\nexport function fitExtent(projection, extent, object) {\n  return fit(projection, function(b) {\n    var w = extent[1][0] - extent[0][0],\n        h = extent[1][1] - extent[0][1],\n        k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n        x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n        y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n\nexport function fitSize(projection, size, object) {\n  return fitExtent(projection, [[0, 0], size], object);\n}\n\nexport function fitWidth(projection, width, object) {\n  return fit(projection, function(b) {\n    var w = +width,\n        k = w / (b[1][0] - b[0][0]),\n        x = (w - k * (b[1][0] + b[0][0])) / 2,\n        y = -k * b[0][1];\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n\nexport function fitHeight(projection, height, object) {\n  return fit(projection, function(b) {\n    var h = +height,\n        k = h / (b[1][1] - b[0][1]),\n        x = -k * b[0][0],\n        y = (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n","import {cartesian} from \"../cartesian.js\";\nimport {abs, asin, atan2, cos, epsilon, radians, sqrt} from \"../math.js\";\nimport {transformer} from \"../transform.js\";\n\nvar maxDepth = 16, // maximum depth of subdivision\n    cosMinDistance = cos(30 * radians); // cos(minimum angular distance)\n\nexport default function(project, delta2) {\n  return +delta2 ? resample(project, delta2) : resampleNone(project);\n}\n\nfunction resampleNone(project) {\n  return transformer({\n    point: function(x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\n\nfunction resample(project, delta2) {\n\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n        dy = y1 - y0,\n        d2 = dx * dx + dy * dy;\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n          b = b0 + b1,\n          c = c0 + c1,\n          m = sqrt(a * a + b * b + c * c),\n          phi2 = asin(c /= m),\n          lambda2 = abs(abs(c) - 1) < epsilon || abs(lambda0 - lambda1) < epsilon ? (lambda0 + lambda1) / 2 : atan2(b, a),\n          p = project(lambda2, phi2),\n          x2 = p[0],\n          y2 = p[1],\n          dx2 = x2 - x0,\n          dy2 = y2 - y0,\n          dz = dy * dx2 - dx * dy2;\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\n          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n  return function(stream) {\n    var lambda00, x00, y00, a00, b00, c00, // first point\n        lambda0, x0, y0, a0, b0, c0; // previous point\n\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n    };\n\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n\n    function linePoint(lambda, phi) {\n      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n\n    return resampleStream;\n  };\n}\n","import clipAntimeridian from \"../clip/antimeridian.js\";\nimport clipCircle from \"../clip/circle.js\";\nimport clipRectangle from \"../clip/rectangle.js\";\nimport compose from \"../compose.js\";\nimport identity from \"../identity.js\";\nimport {cos, degrees, radians, sin, sqrt} from \"../math.js\";\nimport {rotateRadians} from \"../rotation.js\";\nimport {transformer} from \"../transform.js\";\nimport {fitExtent, fitSize, fitWidth, fitHeight} from \"./fit.js\";\nimport resample from \"./resample.js\";\n\nvar transformRadians = transformer({\n  point: function(x, y) {\n    this.stream.point(x * radians, y * radians);\n  }\n});\n\nfunction transformRotate(rotate) {\n  return transformer({\n    point: function(x, y) {\n      var r = rotate(x, y);\n      return this.stream.point(r[0], r[1]);\n    }\n  });\n}\n\nfunction scaleTranslate(k, dx, dy, sx, sy) {\n  function transform(x, y) {\n    x *= sx; y *= sy;\n    return [dx + k * x, dy - k * y];\n  }\n  transform.invert = function(x, y) {\n    return [(x - dx) / k * sx, (dy - y) / k * sy];\n  };\n  return transform;\n}\n\nfunction scaleTranslateRotate(k, dx, dy, sx, sy, alpha) {\n  if (!alpha) return scaleTranslate(k, dx, dy, sx, sy);\n  var cosAlpha = cos(alpha),\n      sinAlpha = sin(alpha),\n      a = cosAlpha * k,\n      b = sinAlpha * k,\n      ai = cosAlpha / k,\n      bi = sinAlpha / k,\n      ci = (sinAlpha * dy - cosAlpha * dx) / k,\n      fi = (sinAlpha * dx + cosAlpha * dy) / k;\n  function transform(x, y) {\n    x *= sx; y *= sy;\n    return [a * x - b * y + dx, dy - b * x - a * y];\n  }\n  transform.invert = function(x, y) {\n    return [sx * (ai * x - bi * y + ci), sy * (fi - bi * x - ai * y)];\n  };\n  return transform;\n}\n\nexport default function projection(project) {\n  return projectionMutator(function() { return project; })();\n}\n\nexport function projectionMutator(projectAt) {\n  var project,\n      k = 150, // scale\n      x = 480, y = 250, // translate\n      lambda = 0, phi = 0, // center\n      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, // pre-rotate\n      alpha = 0, // post-rotate angle\n      sx = 1, // reflectX\n      sy = 1, // reflectX\n      theta = null, preclip = clipAntimeridian, // pre-clip angle\n      x0 = null, y0, x1, y1, postclip = identity, // post-clip extent\n      delta2 = 0.5, // precision\n      projectResample,\n      projectTransform,\n      projectRotateTransform,\n      cache,\n      cacheStream;\n\n  function projection(point) {\n    return projectRotateTransform(point[0] * radians, point[1] * radians);\n  }\n\n  function invert(point) {\n    point = projectRotateTransform.invert(point[0], point[1]);\n    return point && [point[0] * degrees, point[1] * degrees];\n  }\n\n  projection.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = transformRadians(transformRotate(rotate)(preclip(projectResample(postclip(cacheStream = stream)))));\n  };\n\n  projection.preclip = function(_) {\n    return arguments.length ? (preclip = _, theta = undefined, reset()) : preclip;\n  };\n\n  projection.postclip = function(_) {\n    return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n  };\n\n  projection.clipAngle = function(_) {\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees;\n  };\n\n  projection.clipExtent = function(_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  projection.scale = function(_) {\n    return arguments.length ? (k = +_, recenter()) : k;\n  };\n\n  projection.translate = function(_) {\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n  };\n\n  projection.center = function(_) {\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees, phi * degrees];\n  };\n\n  projection.rotate = function(_) {\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees, deltaPhi * degrees, deltaGamma * degrees];\n  };\n\n  projection.angle = function(_) {\n    return arguments.length ? (alpha = _ % 360 * radians, recenter()) : alpha * degrees;\n  };\n\n  projection.reflectX = function(_) {\n    return arguments.length ? (sx = _ ? -1 : 1, recenter()) : sx < 0;\n  };\n\n  projection.reflectY = function(_) {\n    return arguments.length ? (sy = _ ? -1 : 1, recenter()) : sy < 0;\n  };\n\n  projection.precision = function(_) {\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n  };\n\n  projection.fitExtent = function(extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n\n  projection.fitSize = function(size, object) {\n    return fitSize(projection, size, object);\n  };\n\n  projection.fitWidth = function(width, object) {\n    return fitWidth(projection, width, object);\n  };\n\n  projection.fitHeight = function(height, object) {\n    return fitHeight(projection, height, object);\n  };\n\n  function recenter() {\n    var center = scaleTranslateRotate(k, 0, 0, sx, sy, alpha).apply(null, project(lambda, phi)),\n        transform = scaleTranslateRotate(k, x - center[0], y - center[1], sx, sy, alpha);\n    rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma);\n    projectTransform = compose(project, transform);\n    projectRotateTransform = compose(rotate, projectTransform);\n    projectResample = resample(projectTransform, delta2);\n    return reset();\n  }\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return function() {\n    project = projectAt.apply(this, arguments);\n    projection.invert = project.invert && invert;\n    return recenter();\n  };\n}\n","import {cartesian, cartesianAddInPlace, cartesianCross, cartesianDot, cartesianScale, spherical} from \"../cartesian.js\";\nimport {circleStream} from \"../circle.js\";\nimport {abs, cos, epsilon, pi, radians, sqrt} from \"../math.js\";\nimport pointEqual from \"../pointEqual.js\";\nimport clip from \"./index.js\";\n\nexport default function(radius) {\n  var cr = cos(radius),\n      delta = 2 * radians,\n      smallRadius = cr > 0,\n      notHemisphere = abs(cr) > epsilon; // TODO optimise for this common case\n\n  function interpolate(from, to, direction, stream) {\n    circleStream(stream, radius, delta, direction, from, to);\n  }\n\n  function visible(lambda, phi) {\n    return cos(lambda) * cos(phi) > cr;\n  }\n\n  // Takes a line and cuts into visible segments. Return values used for polygon\n  // clipping: 0 - there were intersections or the line was empty; 1 - no\n  // intersections 2 - there were intersections, and the first and last segments\n  // should be rejoined.\n  function clipLine(stream) {\n    var point0, // previous point\n        c0, // code for previous point\n        v0, // visibility of previous point\n        v00, // visibility of first point\n        clean; // no intersections\n    return {\n      lineStart: function() {\n        v00 = v0 = false;\n        clean = 1;\n      },\n      point: function(lambda, phi) {\n        var point1 = [lambda, phi],\n            point2,\n            v = visible(lambda, phi),\n            c = smallRadius\n              ? v ? 0 : code(lambda, phi)\n              : v ? code(lambda + (lambda < 0 ? pi : -pi), phi) : 0;\n        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n        if (v !== v0) {\n          point2 = intersect(point0, point1);\n          if (!point2 || pointEqual(point0, point2) || pointEqual(point1, point2))\n            point1[2] = 1;\n        }\n        if (v !== v0) {\n          clean = 0;\n          if (v) {\n            // outside going in\n            stream.lineStart();\n            point2 = intersect(point1, point0);\n            stream.point(point2[0], point2[1]);\n          } else {\n            // inside going out\n            point2 = intersect(point0, point1);\n            stream.point(point2[0], point2[1], 2);\n            stream.lineEnd();\n          }\n          point0 = point2;\n        } else if (notHemisphere && point0 && smallRadius ^ v) {\n          var t;\n          // If the codes for two points are different, or are both zero,\n          // and there this segment intersects with the small circle.\n          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n            clean = 0;\n            if (smallRadius) {\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n            } else {\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1], 3);\n            }\n          }\n        }\n        if (v && (!point0 || !pointEqual(point0, point1))) {\n          stream.point(point1[0], point1[1]);\n        }\n        point0 = point1, v0 = v, c0 = c;\n      },\n      lineEnd: function() {\n        if (v0) stream.lineEnd();\n        point0 = null;\n      },\n      // Rejoin first and last segments if there were intersections and the first\n      // and last points were visible.\n      clean: function() {\n        return clean | ((v00 && v0) << 1);\n      }\n    };\n  }\n\n  // Intersects the great circle between a and b with the clip circle.\n  function intersect(a, b, two) {\n    var pa = cartesian(a),\n        pb = cartesian(b);\n\n    // We have two planes, n1.p = d1 and n2.p = d2.\n    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n    var n1 = [1, 0, 0], // normal\n        n2 = cartesianCross(pa, pb),\n        n2n2 = cartesianDot(n2, n2),\n        n1n2 = n2[0], // cartesianDot(n1, n2),\n        determinant = n2n2 - n1n2 * n1n2;\n\n    // Two polar points.\n    if (!determinant) return !two && a;\n\n    var c1 =  cr * n2n2 / determinant,\n        c2 = -cr * n1n2 / determinant,\n        n1xn2 = cartesianCross(n1, n2),\n        A = cartesianScale(n1, c1),\n        B = cartesianScale(n2, c2);\n    cartesianAddInPlace(A, B);\n\n    // Solve |p(t)|^2 = 1.\n    var u = n1xn2,\n        w = cartesianDot(A, u),\n        uu = cartesianDot(u, u),\n        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\n    if (t2 < 0) return;\n\n    var t = sqrt(t2),\n        q = cartesianScale(u, (-w - t) / uu);\n    cartesianAddInPlace(q, A);\n    q = spherical(q);\n\n    if (!two) return q;\n\n    // Two intersection points.\n    var lambda0 = a[0],\n        lambda1 = b[0],\n        phi0 = a[1],\n        phi1 = b[1],\n        z;\n\n    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\n    var delta = lambda1 - lambda0,\n        polar = abs(delta - pi) < epsilon,\n        meridian = polar || delta < epsilon;\n\n    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\n    // Check that the first point is between a and b.\n    if (meridian\n        ? polar\n          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon ? phi0 : phi1)\n          : phi0 <= q[1] && q[1] <= phi1\n        : delta > pi ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n      var q1 = cartesianScale(u, (-w + t) / uu);\n      cartesianAddInPlace(q1, A);\n      return [q, spherical(q1)];\n    }\n  }\n\n  // Generates a 4-bit vector representing the location of a point relative to\n  // the small circle's bounding box.\n  function code(lambda, phi) {\n    var r = smallRadius ? radius : pi - radius,\n        code = 0;\n    if (lambda < -r) code |= 1; // left\n    else if (lambda > r) code |= 2; // right\n    if (phi < -r) code |= 4; // below\n    else if (phi > r) code |= 8; // above\n    return code;\n  }\n\n  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi, radius - pi]);\n}\n","import {atan, exp, halfPi, log, pi, tan, tau} from \"../math.js\";\nimport rotation from \"../rotation.js\";\nimport projection from \"./index.js\";\n\nexport function mercatorRaw(lambda, phi) {\n  return [lambda, log(tan((halfPi + phi) / 2))];\n}\n\nmercatorRaw.invert = function(x, y) {\n  return [x, 2 * atan(exp(y)) - halfPi];\n};\n\nexport default function() {\n  return mercatorProjection(mercatorRaw)\n      .scale(961 / tau);\n}\n\nexport function mercatorProjection(project) {\n  var m = projection(project),\n      center = m.center,\n      scale = m.scale,\n      translate = m.translate,\n      clipExtent = m.clipExtent,\n      x0 = null, y0, x1, y1; // clip extent\n\n  m.scale = function(_) {\n    return arguments.length ? (scale(_), reclip()) : scale();\n  };\n\n  m.translate = function(_) {\n    return arguments.length ? (translate(_), reclip()) : translate();\n  };\n\n  m.center = function(_) {\n    return arguments.length ? (center(_), reclip()) : center();\n  };\n\n  m.clipExtent = function(_) {\n    return arguments.length ? ((_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1])), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  function reclip() {\n    var k = pi * scale(),\n        t = m(rotation(m.rotate()).invert([0, 0]));\n    return clipExtent(x0 == null\n        ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw\n        ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]]\n        : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);\n  }\n\n  return reclip();\n}\n","import {Adder} from \"d3-array\";\nimport {abs} from \"../math.js\";\nimport noop from \"../noop.js\";\n\nvar areaSum = new Adder(),\n    areaRingSum = new Adder(),\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function() {\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    areaStream.lineStart = areaStream.lineEnd = areaStream.point = noop;\n    areaSum.add(abs(areaRingSum));\n    areaRingSum = new Adder();\n  },\n  result: function() {\n    var area = areaSum / 2;\n    areaSum = new Adder();\n    return area;\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaPointFirst(x, y) {\n  areaStream.point = areaPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction areaPoint(x, y) {\n  areaRingSum.add(y0 * x - x0 * y);\n  x0 = x, y0 = y;\n}\n\nfunction areaRingEnd() {\n  areaPoint(x00, y00);\n}\n\nexport default areaStream;\n","import {sqrt} from \"../math.js\";\n\n// TODO Enforce positive area for exterior, negative area for interior?\n\nvar X0 = 0,\n    Y0 = 0,\n    Z0 = 0,\n    X1 = 0,\n    Y1 = 0,\n    Z1 = 0,\n    X2 = 0,\n    Y2 = 0,\n    Z2 = 0,\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar centroidStream = {\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.point = centroidPoint;\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  },\n  result: function() {\n    var centroid = Z2 ? [X2 / Z2, Y2 / Z2]\n        : Z1 ? [X1 / Z1, Y1 / Z1]\n        : Z0 ? [X0 / Z0, Y0 / Z0]\n        : [NaN, NaN];\n    X0 = Y0 = Z0 =\n    X1 = Y1 = Z1 =\n    X2 = Y2 = Z2 = 0;\n    return centroid;\n  }\n};\n\nfunction centroidPoint(x, y) {\n  X0 += x;\n  Y0 += y;\n  ++Z0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidPointFirstLine;\n}\n\nfunction centroidPointFirstLine(x, y) {\n  centroidStream.point = centroidPointLine;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nfunction centroidPointLine(x, y) {\n  var dx = x - x0, dy = y - y0, z = sqrt(dx * dx + dy * dy);\n  X1 += z * (x0 + x) / 2;\n  Y1 += z * (y0 + y) / 2;\n  Z1 += z;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingStart() {\n  centroidStream.point = centroidPointFirstRing;\n}\n\nfunction centroidRingEnd() {\n  centroidPointRing(x00, y00);\n}\n\nfunction centroidPointFirstRing(x, y) {\n  centroidStream.point = centroidPointRing;\n  centroidPoint(x00 = x0 = x, y00 = y0 = y);\n}\n\nfunction centroidPointRing(x, y) {\n  var dx = x - x0,\n      dy = y - y0,\n      z = sqrt(dx * dx + dy * dy);\n\n  X1 += z * (x0 + x) / 2;\n  Y1 += z * (y0 + y) / 2;\n  Z1 += z;\n\n  z = y0 * x - x0 * y;\n  X2 += z * (x0 + x);\n  Y2 += z * (y0 + y);\n  Z2 += z * 3;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nexport default centroidStream;\n","import {tau} from \"../math.js\";\nimport noop from \"../noop.js\";\n\nexport default function PathContext(context) {\n  this._context = context;\n}\n\nPathContext.prototype = {\n  _radius: 4.5,\n  pointRadius: function(_) {\n    return this._radius = _, this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._context.closePath();\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._context.moveTo(x, y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._context.lineTo(x, y);\n        break;\n      }\n      default: {\n        this._context.moveTo(x + this._radius, y);\n        this._context.arc(x, y, this._radius, 0, tau);\n        break;\n      }\n    }\n  },\n  result: noop\n};\n","import {Adder} from \"d3-array\";\nimport {sqrt} from \"../math.js\";\nimport noop from \"../noop.js\";\n\nvar lengthSum = new Adder(),\n    lengthRing,\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar lengthStream = {\n  point: noop,\n  lineStart: function() {\n    lengthStream.point = lengthPointFirst;\n  },\n  lineEnd: function() {\n    if (lengthRing) lengthPoint(x00, y00);\n    lengthStream.point = noop;\n  },\n  polygonStart: function() {\n    lengthRing = true;\n  },\n  polygonEnd: function() {\n    lengthRing = null;\n  },\n  result: function() {\n    var length = +lengthSum;\n    lengthSum = new Adder();\n    return length;\n  }\n};\n\nfunction lengthPointFirst(x, y) {\n  lengthStream.point = lengthPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction lengthPoint(x, y) {\n  x0 -= x, y0 -= y;\n  lengthSum.add(sqrt(x0 * x0 + y0 * y0));\n  x0 = x, y0 = y;\n}\n\nexport default lengthStream;\n","// Simple caching for constant-radius points.\nlet cacheDigits, cacheAppend, cacheRadius, cacheCircle;\n\nexport default class PathString {\n  constructor(digits) {\n    this._append = digits == null ? append : appendRound(digits);\n    this._radius = 4.5;\n    this._ = \"\";\n  }\n  pointRadius(_) {\n    this._radius = +_;\n    return this;\n  }\n  polygonStart() {\n    this._line = 0;\n  }\n  polygonEnd() {\n    this._line = NaN;\n  }\n  lineStart() {\n    this._point = 0;\n  }\n  lineEnd() {\n    if (this._line === 0) this._ += \"Z\";\n    this._point = NaN;\n  }\n  point(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._append`M${x},${y}`;\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._append`L${x},${y}`;\n        break;\n      }\n      default: {\n        this._append`M${x},${y}`;\n        if (this._radius !== cacheRadius || this._append !== cacheAppend) {\n          const r = this._radius;\n          const s = this._;\n          this._ = \"\"; // stash the old string so we can cache the circle path fragment\n          this._append`m0,${r}a${r},${r} 0 1,1 0,${-2 * r}a${r},${r} 0 1,1 0,${2 * r}z`;\n          cacheRadius = r;\n          cacheAppend = this._append;\n          cacheCircle = this._;\n          this._ = s;\n        }\n        this._ += cacheCircle;\n        break;\n      }\n    }\n  }\n  result() {\n    const result = this._;\n    this._ = \"\";\n    return result.length ? result : null;\n  }\n}\n\nfunction append(strings) {\n  let i = 1;\n  this._ += strings[0];\n  for (const j = strings.length; i < j; ++i) {\n    this._ += arguments[i] + strings[i];\n  }\n}\n\nfunction appendRound(digits) {\n  const d = Math.floor(digits);\n  if (!(d >= 0)) throw new RangeError(`invalid digits: ${digits}`);\n  if (d > 15) return append;\n  if (d !== cacheDigits) {\n    const k = 10 ** d;\n    cacheDigits = d;\n    cacheAppend = function append(strings) {\n      let i = 1;\n      this._ += strings[0];\n      for (const j = strings.length; i < j; ++i) {\n        this._ += Math.round(arguments[i] * k) / k + strings[i];\n      }\n    };\n  }\n  return cacheAppend;\n}\n","import identity from \"../identity.js\";\nimport stream from \"../stream.js\";\nimport pathArea from \"./area.js\";\nimport pathBounds from \"./bounds.js\";\nimport pathCentroid from \"./centroid.js\";\nimport PathContext from \"./context.js\";\nimport pathMeasure from \"./measure.js\";\nimport PathString from \"./string.js\";\n\nexport default function(projection, context) {\n  let digits = 3,\n      pointRadius = 4.5,\n      projectionStream,\n      contextStream;\n\n  function path(object) {\n    if (object) {\n      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n      stream(object, projectionStream(contextStream));\n    }\n    return contextStream.result();\n  }\n\n  path.area = function(object) {\n    stream(object, projectionStream(pathArea));\n    return pathArea.result();\n  };\n\n  path.measure = function(object) {\n    stream(object, projectionStream(pathMeasure));\n    return pathMeasure.result();\n  };\n\n  path.bounds = function(object) {\n    stream(object, projectionStream(pathBounds));\n    return pathBounds.result();\n  };\n\n  path.centroid = function(object) {\n    stream(object, projectionStream(pathCentroid));\n    return pathCentroid.result();\n  };\n\n  path.projection = function(_) {\n    if (!arguments.length) return projection;\n    projectionStream = _ == null ? (projection = null, identity) : (projection = _).stream;\n    return path;\n  };\n\n  path.context = function(_) {\n    if (!arguments.length) return context;\n    contextStream = _ == null ? (context = null, new PathString(digits)) : new PathContext(context = _);\n    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n    return path;\n  };\n\n  path.pointRadius = function(_) {\n    if (!arguments.length) return pointRadius;\n    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n    return path;\n  };\n\n  path.digits = function(_) {\n    if (!arguments.length) return digits;\n    if (_ == null) digits = null;\n    else {\n      const d = Math.floor(_);\n      if (!(d >= 0)) throw new RangeError(`invalid digits: ${_}`);\n      digits = d;\n    }\n    if (context === null) contextStream = new PathString(digits);\n    return path;\n  };\n\n  return path.projection(projection).digits(digits).context(context);\n}\n","import {Adder} from \"d3-array\";\nimport {atan2, cos, quarterPi, radians, sin, tau} from \"./math.js\";\nimport noop from \"./noop.js\";\nimport stream from \"./stream.js\";\n\nexport var areaRingSum = new Adder();\n\n// hello?\n\nvar areaSum = new Adder(),\n    lambda00,\n    phi00,\n    lambda0,\n    cosPhi0,\n    sinPhi0;\n\nexport var areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function() {\n    areaRingSum = new Adder();\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    var areaRing = +areaRingSum;\n    areaSum.add(areaRing < 0 ? tau + areaRing : areaRing);\n    this.lineStart = this.lineEnd = this.point = noop;\n  },\n  sphere: function() {\n    areaSum.add(tau);\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaRingEnd() {\n  areaPoint(lambda00, phi00);\n}\n\nfunction areaPointFirst(lambda, phi) {\n  areaStream.point = areaPoint;\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, cosPhi0 = cos(phi = phi / 2 + quarterPi), sinPhi0 = sin(phi);\n}\n\nfunction areaPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\n  // Spherical excess E for a spherical triangle with vertices: south pole,\n  // previous point, current point.  Uses a formula derived from Cagnoli’s\n  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n  var dLambda = lambda - lambda0,\n      sdLambda = dLambda >= 0 ? 1 : -1,\n      adLambda = sdLambda * dLambda,\n      cosPhi = cos(phi),\n      sinPhi = sin(phi),\n      k = sinPhi0 * sinPhi,\n      u = cosPhi0 * cosPhi + k * cos(adLambda),\n      v = k * sdLambda * sin(adLambda);\n  areaRingSum.add(atan2(v, u));\n\n  // Advance the previous points.\n  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n}\n\nexport default function(object) {\n  areaSum = new Adder();\n  stream(object, areaStream);\n  return areaSum * 2;\n}\n","import {Adder} from \"d3-array\";\nimport {areaStream, areaRingSum} from \"./area.js\";\nimport {cartesian, cartesianCross, cartesianNormalizeInPlace, spherical} from \"./cartesian.js\";\nimport {abs, degrees, epsilon, radians} from \"./math.js\";\nimport stream from \"./stream.js\";\n\nvar lambda0, phi0, lambda1, phi1, // bounds\n    lambda2, // previous lambda-coordinate\n    lambda00, phi00, // first point\n    p0, // previous 3D point\n    deltaSum,\n    ranges,\n    range;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: boundsLineStart,\n  lineEnd: boundsLineEnd,\n  polygonStart: function() {\n    boundsStream.point = boundsRingPoint;\n    boundsStream.lineStart = boundsRingStart;\n    boundsStream.lineEnd = boundsRingEnd;\n    deltaSum = new Adder();\n    areaStream.polygonStart();\n  },\n  polygonEnd: function() {\n    areaStream.polygonEnd();\n    boundsStream.point = boundsPoint;\n    boundsStream.lineStart = boundsLineStart;\n    boundsStream.lineEnd = boundsLineEnd;\n    if (areaRingSum < 0) lambda0 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n    else if (deltaSum > epsilon) phi1 = 90;\n    else if (deltaSum < -epsilon) phi0 = -90;\n    range[0] = lambda0, range[1] = lambda1;\n  },\n  sphere: function() {\n    lambda0 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n  }\n};\n\nfunction boundsPoint(lambda, phi) {\n  ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n}\n\nfunction linePoint(lambda, phi) {\n  var p = cartesian([lambda * radians, phi * radians]);\n  if (p0) {\n    var normal = cartesianCross(p0, p),\n        equatorial = [normal[1], -normal[0], 0],\n        inflection = cartesianCross(equatorial, normal);\n    cartesianNormalizeInPlace(inflection);\n    inflection = spherical(inflection);\n    var delta = lambda - lambda2,\n        sign = delta > 0 ? 1 : -1,\n        lambdai = inflection[0] * degrees * sign,\n        phii,\n        antimeridian = abs(delta) > 180;\n    if (antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n      phii = inflection[1] * degrees;\n      if (phii > phi1) phi1 = phii;\n    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n      phii = -inflection[1] * degrees;\n      if (phii < phi0) phi0 = phii;\n    } else {\n      if (phi < phi0) phi0 = phi;\n      if (phi > phi1) phi1 = phi;\n    }\n    if (antimeridian) {\n      if (lambda < lambda2) {\n        if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;\n      } else {\n        if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;\n      }\n    } else {\n      if (lambda1 >= lambda0) {\n        if (lambda < lambda0) lambda0 = lambda;\n        if (lambda > lambda1) lambda1 = lambda;\n      } else {\n        if (lambda > lambda2) {\n          if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;\n        } else {\n          if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;\n        }\n      }\n    }\n  } else {\n    ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);\n  }\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n  p0 = p, lambda2 = lambda;\n}\n\nfunction boundsLineStart() {\n  boundsStream.point = linePoint;\n}\n\nfunction boundsLineEnd() {\n  range[0] = lambda0, range[1] = lambda1;\n  boundsStream.point = boundsPoint;\n  p0 = null;\n}\n\nfunction boundsRingPoint(lambda, phi) {\n  if (p0) {\n    var delta = lambda - lambda2;\n    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n  } else {\n    lambda00 = lambda, phi00 = phi;\n  }\n  areaStream.point(lambda, phi);\n  linePoint(lambda, phi);\n}\n\nfunction boundsRingStart() {\n  areaStream.lineStart();\n}\n\nfunction boundsRingEnd() {\n  boundsRingPoint(lambda00, phi00);\n  areaStream.lineEnd();\n  if (abs(deltaSum) > epsilon) lambda0 = -(lambda1 = 180);\n  range[0] = lambda0, range[1] = lambda1;\n  p0 = null;\n}\n\n// Finds the left-right distance between two longitudes.\n// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n// the distance between ±180° to be 360°.\nfunction angle(lambda0, lambda1) {\n  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n}\n\nfunction rangeCompare(a, b) {\n  return a[0] - b[0];\n}\n\nfunction rangeContains(range, x) {\n  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n}\n\nexport default function(feature) {\n  var i, n, a, b, merged, deltaMax, delta;\n\n  phi1 = lambda1 = -(lambda0 = phi0 = Infinity);\n  ranges = [];\n  stream(feature, boundsStream);\n\n  // First, sort ranges by their minimum longitudes.\n  if (n = ranges.length) {\n    ranges.sort(rangeCompare);\n\n    // Then, merge any ranges that overlap.\n    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n      b = ranges[i];\n      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n      } else {\n        merged.push(a = b);\n      }\n    }\n\n    // Finally, find the largest gap between the merged ranges.\n    // The final bounding box will be the inverse of this gap.\n    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n      b = merged[i];\n      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0 = b[0], lambda1 = a[1];\n    }\n  }\n\n  ranges = range = null;\n\n  return lambda0 === Infinity || phi0 === Infinity\n      ? [[NaN, NaN], [NaN, NaN]]\n      : [[lambda0, phi0], [lambda1, phi1]];\n}\n","export default function(x) {\n  return x;\n}\n","import reverse from \"./reverse.js\";\nimport transform from \"./transform.js\";\n\nexport default function(topology, o) {\n  if (typeof o === \"string\") o = topology.objects[o];\n  return o.type === \"GeometryCollection\"\n      ? {type: \"FeatureCollection\", features: o.geometries.map(function(o) { return feature(topology, o); })}\n      : feature(topology, o);\n}\n\nfunction feature(topology, o) {\n  var id = o.id,\n      bbox = o.bbox,\n      properties = o.properties == null ? {} : o.properties,\n      geometry = object(topology, o);\n  return id == null && bbox == null ? {type: \"Feature\", properties: properties, geometry: geometry}\n      : bbox == null ? {type: \"Feature\", id: id, properties: properties, geometry: geometry}\n      : {type: \"Feature\", id: id, bbox: bbox, properties: properties, geometry: geometry};\n}\n\nexport function object(topology, o) {\n  var transformPoint = transform(topology.transform),\n      arcs = topology.arcs;\n\n  function arc(i, points) {\n    if (points.length) points.pop();\n    for (var a = arcs[i < 0 ? ~i : i], k = 0, n = a.length; k < n; ++k) {\n      points.push(transformPoint(a[k], k));\n    }\n    if (i < 0) reverse(points, n);\n  }\n\n  function point(p) {\n    return transformPoint(p);\n  }\n\n  function line(arcs) {\n    var points = [];\n    for (var i = 0, n = arcs.length; i < n; ++i) arc(arcs[i], points);\n    if (points.length < 2) points.push(points[0]); // This should never happen per the specification.\n    return points;\n  }\n\n  function ring(arcs) {\n    var points = line(arcs);\n    while (points.length < 4) points.push(points[0]); // This may happen if an arc has only two points.\n    return points;\n  }\n\n  function polygon(arcs) {\n    return arcs.map(ring);\n  }\n\n  function geometry(o) {\n    var type = o.type, coordinates;\n    switch (type) {\n      case \"GeometryCollection\": return {type: type, geometries: o.geometries.map(geometry)};\n      case \"Point\": coordinates = point(o.coordinates); break;\n      case \"MultiPoint\": coordinates = o.coordinates.map(point); break;\n      case \"LineString\": coordinates = line(o.arcs); break;\n      case \"MultiLineString\": coordinates = o.arcs.map(line); break;\n      case \"Polygon\": coordinates = polygon(o.arcs); break;\n      case \"MultiPolygon\": coordinates = o.arcs.map(polygon); break;\n      default: return null;\n    }\n    return {type: type, coordinates: coordinates};\n  }\n\n  return geometry(o);\n}\n","import identity from \"./identity.js\";\n\nexport default function(transform) {\n  if (transform == null) return identity;\n  var x0,\n      y0,\n      kx = transform.scale[0],\n      ky = transform.scale[1],\n      dx = transform.translate[0],\n      dy = transform.translate[1];\n  return function(input, i) {\n    if (!i) x0 = y0 = 0;\n    var j = 2, n = input.length, output = new Array(n);\n    output[0] = (x0 += input[0]) * kx + dx;\n    output[1] = (y0 += input[1]) * ky + dy;\n    while (j < n) output[j] = input[j], ++j;\n    return output;\n  };\n}\n","export default function(array, n) {\n  var t, j = array.length, i = j - n;\n  while (i < --j) t = array[i], array[i++] = array[j], array[j] = t;\n}\n","import {json} from 'd3-fetch';\nimport {geoBounds, geoMercator, geoPath} from 'd3-geo';\nimport {select} from 'd3-selection';\nimport {feature} from 'topojson-client';\nimport Map from '../src/ol/Map.js';\nimport View from '../src/ol/View.js';\nimport {getCenter, getWidth} from '../src/ol/extent.js';\nimport Layer from '../src/ol/layer/Layer.js';\nimport TileLayer from '../src/ol/layer/Tile.js';\nimport {fromLonLat, toLonLat} from '../src/ol/proj.js';\nimport StadiaMaps from '../src/ol/source/StadiaMaps.js';\n\nclass CanvasLayer extends Layer {\n  constructor(options) {\n    super(options);\n\n    this.features = options.features;\n\n    this.svg = select(document.createElement('div'))\n      .append('svg')\n      .style('position', 'absolute');\n\n    this.svg.append('path').datum(this.features).attr('class', 'boundary');\n  }\n\n  getSourceState() {\n    return 'ready';\n  }\n\n  render(frameState) {\n    const width = frameState.size[0];\n    const height = frameState.size[1];\n    const projection = frameState.viewState.projection;\n    const d3Projection = geoMercator().scale(1).translate([0, 0]);\n    let d3Path = geoPath().projection(d3Projection);\n\n    const pixelBounds = d3Path.bounds(this.features);\n    const pixelBoundsWidth = pixelBounds[1][0] - pixelBounds[0][0];\n    const pixelBoundsHeight = pixelBounds[1][1] - pixelBounds[0][1];\n\n    const bounds = geoBounds(this.features);\n    const geoBoundsLeftBottom = fromLonLat(bounds[0], projection);\n    const geoBoundsRightTop = fromLonLat(bounds[1], projection);\n    let geoBoundsWidth = geoBoundsRightTop[0] - geoBoundsLeftBottom[0];\n    if (geoBoundsWidth < 0) {\n      geoBoundsWidth += getWidth(projection.getExtent());\n    }\n    const geoBoundsHeight = geoBoundsRightTop[1] - geoBoundsLeftBottom[1];\n\n    const widthResolution = geoBoundsWidth / pixelBoundsWidth;\n    const heightResolution = geoBoundsHeight / pixelBoundsHeight;\n    const r = Math.max(widthResolution, heightResolution);\n    const scale = r / frameState.viewState.resolution;\n\n    const center = toLonLat(getCenter(frameState.extent), projection);\n    const angle = (-frameState.viewState.rotation * 180) / Math.PI;\n\n    d3Projection\n      .scale(scale)\n      .center(center)\n      .translate([width / 2, height / 2])\n      .angle(angle);\n\n    d3Path = d3Path.projection(d3Projection);\n    d3Path(this.features);\n\n    this.svg.attr('width', width);\n    this.svg.attr('height', height);\n\n    this.svg.select('path').attr('d', d3Path);\n\n    return this.svg.node();\n  }\n}\n\nconst map = new Map({\n  layers: [\n    new TileLayer({\n      source: new StadiaMaps({\n        layer: 'stamen_watercolor',\n      }),\n    }),\n  ],\n  target: 'map',\n  view: new View({\n    center: fromLonLat([-97, 38]),\n    zoom: 4,\n  }),\n});\n\n/**\n * Load the topojson data and create an ol/layer/Layer for that data.\n */\njson('data/topojson/us.json').then(function (us) {\n  const layer = new CanvasLayer({\n    features: feature(us, 'counties'),\n  });\n\n  map.addLayer(layer);\n});\n"],"names":["responseJson","response","ok","Error","status","statusText","json","epsilon","pi","Math","PI","halfPi","quarterPi","tau","abs","atan","atan2","cos","exp","ceil","log","floor","hypot","sin","pow","sign","x","sqrt","tan","asin","a","b","compose","y","invert","rotationIdentity","lambda","phi","round","deltaLambda","deltaPhi","deltaGamma","rotationLambda","rotationPhiGamma","forwardRotationLambda","rotation","cosDeltaPhi","sinDeltaPhi","cosDeltaGamma","sinDeltaGamma","cosPhi","z","k","noop","line","lines","point","m","push","lineStart","lineEnd","rejoin","length","pop","concat","shift","result","Intersection","points","other","entry","this","o","e","v","n","p","segments","compareIntersection","startInside","interpolate","stream","i","subject","clip","forEach","segment","p0","p1","pointEqual","sort","start","current","isSubject","array","constructor","_partials","Float64Array","_n","add","j","hi","lo","valueOf","spherical","cartesian","cartesianDot","cartesianCross","cartesianAddInPlace","cartesianScale","vector","cartesianNormalizeInPlace","d","l","longitude","merge","arrays","Array","from","flatten","pointVisible","clipLine","sink","polygon","ring","ringBuffer","ringSink","polygonStarted","polygonStart","pointRing","ringStart","ringEnd","polygonEnd","sinPhi","normal","angle","winding","sum","point0","lambda0","phi0","sinPhi0","cosPhi0","lambda1","sinPhi1","cosPhi1","point1","phi1","delta","absDelta","antimeridian","arc","intersection","phiArc","polygonContains","sphere","pointLine","clean","ringSegments","filter","validSegment","NaN","sign0","sign1","sinLambda0Lambda1","clipAntimeridianIntersect","to","direction","circleStream","radius","t0","t1","cosRadius","sinRadius","step","circleRadius","t","acos","clipMax","clipMin","clipRectangle","x0","y0","x1","y1","visible","a1","corner","comparePoint","ca","cb","x__","y__","v__","x_","y_","v_","first","activeStream","bufferStream","clipStream","linePoint","a0","b0","b1","polygonInside","cleanInside","max","min","r","ax","ay","dx","dy","transformer","methods","s","TransformStream","key","streamGeometry","geometry","streamGeometryType","hasOwnProperty","type","prototype","streamObjectType","Feature","object","FeatureCollection","features","Sphere","Point","coordinates","MultiPoint","LineString","streamLine","MultiLineString","Polygon","streamPolygon","MultiPolygon","GeometryCollection","geometries","closed","coordinate","Infinity","boundsStream","bounds","fit","projection","fitBounds","clipExtent","scale","translate","fitExtent","extent","w","h","cosMinDistance","project","delta2","resampleLineTo","c0","c1","depth","d2","c","phi2","lambda2","x2","y2","dx2","dy2","dz","lambda00","x00","y00","a00","b00","c00","resampleStream","ringPoint","resampleNone","transformRadians","scaleTranslateRotate","sx","sy","alpha","transform","scaleTranslate","cosAlpha","sinAlpha","ai","bi","ci","fi","projectAt","rotate","projectResample","projectTransform","projectRotateTransform","cache","cacheStream","theta","preclip","postclip","identity","recenter","center","apply","resample","reset","transformRotate","_","arguments","undefined","clipAngle","cr","smallRadius","notHemisphere","intersect","two","n1","n2","n2n2","n1n2","determinant","c2","n1xn2","A","u","uu","t2","q","polar","q1","code","v0","v00","point2","reflectX","reflectY","precision","fitSize","size","fitWidth","width","fitHeight","height","projectionMutator","mercatorRaw","reclip","forward","mercatorProjection","areaSum","areaRingSum","areaStream","areaRingStart","areaRingEnd","area","areaPointFirst","areaPoint","X0","Y0","Z0","X1","Y1","Z1","X2","Y2","Z2","centroidStream","centroidPoint","centroidLineStart","centroidLineEnd","centroidRingStart","centroidRingEnd","centroid","centroidPointFirstLine","centroidPointLine","centroidPointFirstRing","centroidPointRing","PathContext","context","_context","_radius","pointRadius","_line","_point","closePath","moveTo","lineTo","lengthRing","lengthSum","lengthStream","lengthPointFirst","lengthPoint","cacheDigits","cacheAppend","cacheRadius","cacheCircle","PathString","digits","_append","append","RangeError","strings","appendRound","projectionStream","contextStream","path","measure","phi00","deltaSum","ranges","range","areaRing","dLambda","sdLambda","adLambda","boundsLineStart","boundsLineEnd","boundsRingPoint","boundsRingStart","boundsRingEnd","inflection","phii","lambdai","rangeCompare","rangeContains","feature","merged","deltaMax","topology","id","bbox","properties","transformPoint","kx","ky","input","output","arcs","reverse","map","CanvasLayer","Layer","options","super","svg","document","createElement","style","datum","attr","getSourceState","render","frameState","viewState","d3Projection","d3Path","pixelBounds","pixelBoundsWidth","pixelBoundsHeight","geoBoundsLeftBottom","geoBoundsRightTop","geoBoundsWidth","getExtent","widthResolution","heightResolution","resolution","select","node","Map","layers","Tile","source","StadiaMaps","layer","target","view","View","zoom","init","fetch","then","us","objects","addLayer"],"sourceRoot":""}