{"version":3,"file":"geojson.js","mappings":"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","sources":["webpack:///./geojson.js"],"sourcesContent":["import Feature from '../src/ol/Feature.js';\nimport Map from '../src/ol/Map.js';\nimport View from '../src/ol/View.js';\nimport GeoJSON from '../src/ol/format/GeoJSON.js';\nimport Circle from '../src/ol/geom/Circle.js';\nimport TileLayer from '../src/ol/layer/Tile.js';\nimport VectorLayer from '../src/ol/layer/Vector.js';\nimport OSM from '../src/ol/source/OSM.js';\nimport VectorSource from '../src/ol/source/Vector.js';\nimport CircleStyle from '../src/ol/style/Circle.js';\nimport Fill from '../src/ol/style/Fill.js';\nimport Stroke from '../src/ol/style/Stroke.js';\nimport Style from '../src/ol/style/Style.js';\n\nconst image = new CircleStyle({\n  radius: 5,\n  fill: null,\n  stroke: new Stroke({color: 'red', width: 1}),\n});\n\nconst styles = {\n  'Point': new Style({\n    image: image,\n  }),\n  'LineString': new Style({\n    stroke: new Stroke({\n      color: 'green',\n      width: 1,\n    }),\n  }),\n  'MultiLineString': new Style({\n    stroke: new Stroke({\n      color: 'green',\n      width: 1,\n    }),\n  }),\n  'MultiPoint': new Style({\n    image: image,\n  }),\n  'MultiPolygon': new Style({\n    stroke: new Stroke({\n      color: 'yellow',\n      width: 1,\n    }),\n    fill: new Fill({\n      color: 'rgba(255, 255, 0, 0.1)',\n    }),\n  }),\n  'Polygon': new Style({\n    stroke: new Stroke({\n      color: 'blue',\n      lineDash: [4],\n      width: 3,\n    }),\n    fill: new Fill({\n      color: 'rgba(0, 0, 255, 0.1)',\n    }),\n  }),\n  'GeometryCollection': new Style({\n    stroke: new Stroke({\n      color: 'magenta',\n      width: 2,\n    }),\n    fill: new Fill({\n      color: 'magenta',\n    }),\n    image: new CircleStyle({\n      radius: 10,\n      fill: null,\n      stroke: new Stroke({\n        color: 'magenta',\n      }),\n    }),\n  }),\n  'Circle': new Style({\n    stroke: new Stroke({\n      color: 'red',\n      width: 2,\n    }),\n    fill: new Fill({\n      color: 'rgba(255,0,0,0.2)',\n    }),\n  }),\n};\n\nconst styleFunction = function (feature) {\n  return styles[feature.getGeometry().getType()];\n};\n\nconst geojsonObject = {\n  'type': 'FeatureCollection',\n  'crs': {\n    'type': 'name',\n    'properties': {\n      'name': 'EPSG:3857',\n    },\n  },\n  'features': [\n    {\n      'type': 'Feature',\n      'geometry': {\n        'type': 'Point',\n        'coordinates': [0, 0],\n      },\n    },\n    {\n      'type': 'Feature',\n      'geometry': {\n        'type': 'LineString',\n        'coordinates': [\n          [4e6, -2e6],\n          [8e6, 2e6],\n        ],\n      },\n    },\n    {\n      'type': 'Feature',\n      'geometry': {\n        'type': 'LineString',\n        'coordinates': [\n          [4e6, 2e6],\n          [8e6, -2e6],\n        ],\n      },\n    },\n    {\n      'type': 'Feature',\n      'geometry': {\n        'type': 'Polygon',\n        'coordinates': [\n          [\n            [-5e6, -1e6],\n            [-3e6, -1e6],\n            [-4e6, 1e6],\n            [-5e6, -1e6],\n          ],\n        ],\n      },\n    },\n    {\n      'type': 'Feature',\n      'geometry': {\n        'type': 'MultiLineString',\n        'coordinates': [\n          [\n            [-1e6, -7.5e5],\n            [-1e6, 7.5e5],\n          ],\n          [\n            [1e6, -7.5e5],\n            [1e6, 7.5e5],\n          ],\n          [\n            [-7.5e5, -1e6],\n            [7.5e5, -1e6],\n          ],\n          [\n            [-7.5e5, 1e6],\n            [7.5e5, 1e6],\n          ],\n        ],\n      },\n    },\n    {\n      'type': 'Feature',\n      'geometry': {\n        'type': 'MultiPolygon',\n        'coordinates': [\n          [\n            [\n              [-5e6, 6e6],\n              [-3e6, 6e6],\n              [-3e6, 8e6],\n              [-5e6, 8e6],\n              [-5e6, 6e6],\n            ],\n          ],\n          [\n            [\n              [-2e6, 6e6],\n              [0, 6e6],\n              [0, 8e6],\n              [-2e6, 8e6],\n              [-2e6, 6e6],\n            ],\n          ],\n          [\n            [\n              [1e6, 6e6],\n              [3e6, 6e6],\n              [3e6, 8e6],\n              [1e6, 8e6],\n              [1e6, 6e6],\n            ],\n          ],\n        ],\n      },\n    },\n    {\n      'type': 'Feature',\n      'geometry': {\n        'type': 'GeometryCollection',\n        'geometries': [\n          {\n            'type': 'LineString',\n            'coordinates': [\n              [-5e6, -5e6],\n              [0, -5e6],\n            ],\n          },\n          {\n            'type': 'Point',\n            'coordinates': [4e6, -5e6],\n          },\n          {\n            'type': 'Polygon',\n            'coordinates': [\n              [\n                [1e6, -6e6],\n                [3e6, -6e6],\n                [2e6, -4e6],\n                [1e6, -6e6],\n              ],\n            ],\n          },\n        ],\n      },\n    },\n  ],\n};\n\nconst vectorSource = new VectorSource({\n  features: new GeoJSON().readFeatures(geojsonObject),\n});\n\nvectorSource.addFeature(new Feature(new Circle([5e6, 7e6], 1e6)));\n\nconst vectorLayer = new VectorLayer({\n  source: vectorSource,\n  style: styleFunction,\n});\n\nconst map = new Map({\n  layers: [\n    new TileLayer({\n      source: new OSM(),\n    }),\n    vectorLayer,\n  ],\n  target: 'map',\n  view: new View({\n    center: [0, 0],\n    zoom: 2,\n  }),\n});\n"],"names":["image","radius","fill","stroke","color","width","styles","lineDash","vectorSource","features","readFeatures","addFeature","vectorLayer","source","style","feature","getGeometry","getType","layers","target","view","center","zoom"],"sourceRoot":""}