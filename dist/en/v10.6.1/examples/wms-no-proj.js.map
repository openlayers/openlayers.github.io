{"version":3,"file":"wms-no-proj.js","mappings":"gMAUA,MAAMA,EAAS,CACb,IAAI,IAAU,CACZC,OAAQ,IAAI,IAAQ,CAClBC,aACE,oIAEFC,YAAa,YACbC,OAAQ,CACN,OAAU,+CACV,OAAU,cAEZC,IAAK,gCAGT,IAAI,IAAW,CACbJ,OAAQ,IAAI,IAAS,CACnBC,aACE,kIAEFC,YAAa,YACbC,OAAQ,CAAC,OAAU,uCACnBE,WAAY,YACZD,IAAK,iCAeLE,EAAa,IAAI,IAAW,CAChCC,KAAM,aACNC,MAAO,MAGG,IAAI,IAAI,CAClBC,UAAU,SAAkBC,OAAO,CAAC,IAAI,MACxCX,OAAQA,EACRY,OAAQ,MACRC,KAAM,IAAI,KAAK,CACbC,OAAQ,CAAC,KAAQ,MACjBP,WAAYA,EACZQ,KAAM,K","sources":["webpack:///./wms-no-proj.js"],"sourcesContent":["import Map from '../src/ol/Map.js';\nimport View from '../src/ol/View.js';\nimport ScaleLine from '../src/ol/control/ScaleLine.js';\nimport {defaults as defaultControls} from '../src/ol/control/defaults.js';\nimport ImageLayer from '../src/ol/layer/Image.js';\nimport TileLayer from '../src/ol/layer/Tile.js';\nimport Projection from '../src/ol/proj/Projection.js';\nimport ImageWMS from '../src/ol/source/ImageWMS.js';\nimport TileWMS from '../src/ol/source/TileWMS.js';\n\nconst layers = [\n  new TileLayer({\n    source: new TileWMS({\n      attributions:\n        '© <a href=\"https://shop.swisstopo.admin.ch/en/products/maps/national/lk1000\"' +\n        'target=\"_blank\">Pixelmap 1:1000000 / geo.admin.ch</a>',\n      crossOrigin: 'anonymous',\n      params: {\n        'LAYERS': 'ch.swisstopo.pixelkarte-farbe-pk1000.noscale',\n        'FORMAT': 'image/jpeg',\n      },\n      url: 'https://wms.geo.admin.ch/',\n    }),\n  }),\n  new ImageLayer({\n    source: new ImageWMS({\n      attributions:\n        '© <a href=\"https://www.hydrodaten.admin.ch/en/notes-on-the-flood-alert-maps.html\"' +\n        'target=\"_blank\">Flood Alert / geo.admin.ch</a>',\n      crossOrigin: 'anonymous',\n      params: {'LAYERS': 'ch.bafu.hydroweb-warnkarte_national'},\n      serverType: 'mapserver',\n      url: 'https://wms.geo.admin.ch/',\n    }),\n  }),\n];\n\n// A minimal projection object is configured with only the SRS code and the map\n// units. No client-side coordinate transforms are possible with such a\n// projection object. Requesting tiles only needs the code together with a\n// tile grid of Cartesian coordinates; it does not matter how those\n// coordinates relate to latitude or longitude.\n//\n// With no transforms available projection units must be assumed to represent\n// true distances. In the case of local projections this may be a sufficiently\n// close approximation for a meaningful (if not 100% accurate) ScaleLine control.\n\nconst projection = new Projection({\n  code: 'EPSG:21781',\n  units: 'm',\n});\n\nconst map = new Map({\n  controls: defaultControls().extend([new ScaleLine()]),\n  layers: layers,\n  target: 'map',\n  view: new View({\n    center: [660000, 190000],\n    projection: projection,\n    zoom: 9,\n  }),\n});\n"],"names":["layers","source","attributions","crossOrigin","params","url","serverType","projection","code","units","controls","extend","target","view","center","zoom"],"sourceRoot":""}