{"version":3,"file":"cog-math.js","mappings":"qHAIA,MAAMA,EAAS,I,SAAI,GAAQ,CACzBC,QAAS,CACP,CAEEC,IAAK,wHACLC,IAAK,KAEP,CAEED,IAAK,wHACLC,IAAK,QAKLC,EAAQ,IAAI,IAAU,CAC1BC,MAAO,CACLC,MAAO,CACL,cACA,CAAC,UAED,CAAC,IAAK,CAAC,IAAK,CAAC,OAAQ,GAAI,CAAC,OAAQ,IAAK,CAAC,IAAK,CAAC,OAAQ,GAAI,CAAC,OAAQ,MAElE,GACD,CAAC,IAAK,IAAK,MACV,GACD,CAAC,IAAK,IAAK,KACX,EACA,CAAC,IAAK,IAAK,KACX,KACA,CAAC,IAAK,IAAK,KACX,IACA,CAAC,IAAK,IAAK,KACX,KACA,CAAC,IAAK,IAAK,KACX,GACA,CAAC,IAAK,IAAK,KACX,KACA,CAAC,IAAK,IAAK,KACX,IACA,CAAC,IAAK,IAAK,IACX,KACA,CAAC,IAAK,IAAK,IACX,GACA,CAAC,IAAK,IAAK,IACX,IACA,CAAC,IAAK,IAAK,IACX,GACA,CAAC,IAAK,IAAK,IACX,IACA,CAAC,GAAI,IAAK,IACV,GACA,CAAC,GAAI,IAAK,IACV,IACA,CAAC,GAAI,IAAK,IACV,GACA,CAAC,GAAI,IAAK,IACV,IACA,CAAC,GAAI,GAAI,IACT,GACA,CAAC,GAAI,GAAI,IACT,IACA,CAAC,EAAG,GAAI,KAGZN,OAAQA,IAGJO,EAAM,IAAI,IAAI,CAClBC,OAAQ,MACRC,OAAQ,CAACL,GACTM,KAAMV,EAAOW,YAGTC,EAASC,SAASC,eAAe,UAWvCP,EAAIQ,GAAG,CAAC,cAAe,UAVvB,SAA2BC,GACzB,MAAMC,EAAOb,EAAMc,QAAQF,EAAMG,OACjC,IAAKF,EACH,OAEF,MAAMG,EAAMH,EAAK,GACXI,EAAMJ,EAAK,GACXK,GAAQD,EAAMD,IAAQC,EAAMD,GAClCR,EAAOW,YAAcD,EAAKE,QAAQ,EACpC,G","sources":["webpack:///./cog-math.js"],"sourcesContent":["import Map from '../src/ol/Map.js';\nimport TileLayer from '../src/ol/layer/WebGLTile.js';\nimport GeoTIFF from '../src/ol/source/GeoTIFF.js';\n\nconst source = new GeoTIFF({\n  sources: [\n    {\n      // visible red, band 1 in the style expression above\n      url: 'https://sentinel-cogs.s3.us-west-2.amazonaws.com/sentinel-s2-l2a-cogs/36/Q/WD/2020/7/S2A_36QWD_20200701_0_L2A/B04.tif',\n      max: 10000,\n    },\n    {\n      // near infrared, band 2 in the style expression above\n      url: 'https://sentinel-cogs.s3.us-west-2.amazonaws.com/sentinel-s2-l2a-cogs/36/Q/WD/2020/7/S2A_36QWD_20200701_0_L2A/B08.tif',\n      max: 10000,\n    },\n  ],\n});\n\nconst layer = new TileLayer({\n  style: {\n    color: [\n      'interpolate',\n      ['linear'],\n      // calculate NDVI, bands come from the sources below\n      ['/', ['-', ['band', 2], ['band', 1]], ['+', ['band', 2], ['band', 1]]],\n      // color ramp for NDVI values, ranging from -1 to 1\n      -0.2,\n      [191, 191, 191],\n      -0.1,\n      [219, 219, 219],\n      0,\n      [255, 255, 224],\n      0.025,\n      [255, 250, 204],\n      0.05,\n      [237, 232, 181],\n      0.075,\n      [222, 217, 156],\n      0.1,\n      [204, 199, 130],\n      0.125,\n      [189, 184, 107],\n      0.15,\n      [176, 194, 97],\n      0.175,\n      [163, 204, 89],\n      0.2,\n      [145, 191, 82],\n      0.25,\n      [128, 179, 71],\n      0.3,\n      [112, 163, 64],\n      0.35,\n      [97, 150, 54],\n      0.4,\n      [79, 138, 46],\n      0.45,\n      [64, 125, 36],\n      0.5,\n      [48, 110, 28],\n      0.55,\n      [33, 97, 18],\n      0.6,\n      [15, 84, 10],\n      0.65,\n      [0, 69, 0],\n    ],\n  },\n  source: source,\n});\n\nconst map = new Map({\n  target: 'map',\n  layers: [layer],\n  view: source.getView(),\n});\n\nconst output = document.getElementById('output');\nfunction displayPixelValue(event) {\n  const data = layer.getData(event.pixel);\n  if (!data) {\n    return;\n  }\n  const red = data[0];\n  const nir = data[1];\n  const ndvi = (nir - red) / (nir + red);\n  output.textContent = ndvi.toFixed(2);\n}\nmap.on(['pointermove', 'click'], displayPixelValue);\n"],"names":["source","sources","url","max","layer","style","color","map","target","layers","view","getView","output","document","getElementById","on","event","data","getData","pixel","red","nir","ndvi","textContent","toFixed"],"sourceRoot":""}