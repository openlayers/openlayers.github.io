{"version":3,"file":"modify-test.js","mappings":"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","sources":["webpack:///./modify-test.js"],"sourcesContent":["import Map from '../src/ol/Map.js';\nimport View from '../src/ol/View.js';\nimport GeoJSON from '../src/ol/format/GeoJSON.js';\nimport Modify from '../src/ol/interaction/Modify.js';\nimport Select from '../src/ol/interaction/Select.js';\nimport {defaults as defaultInteractions} from '../src/ol/interaction/defaults.js';\nimport VectorLayer from '../src/ol/layer/Vector.js';\nimport VectorSource from '../src/ol/source/Vector.js';\nimport CircleStyle from '../src/ol/style/Circle.js';\nimport Fill from '../src/ol/style/Fill.js';\nimport Stroke from '../src/ol/style/Stroke.js';\nimport Style from '../src/ol/style/Style.js';\n\nconst styleFunction = (function () {\n  const styles = {};\n  const image = new CircleStyle({\n    radius: 5,\n    fill: null,\n    stroke: new Stroke({color: 'orange', width: 2}),\n  });\n  styles['Point'] = new Style({image: image});\n  styles['Polygon'] = new Style({\n    stroke: new Stroke({\n      color: 'blue',\n      width: 3,\n    }),\n    fill: new Fill({\n      color: 'rgba(0, 0, 255, 0.1)',\n    }),\n  });\n  styles['MultiLineString'] = new Style({\n    stroke: new Stroke({\n      color: 'green',\n      width: 3,\n    }),\n  });\n  styles['MultiPolygon'] = new Style({\n    stroke: new Stroke({\n      color: 'yellow',\n      width: 1,\n    }),\n    fill: new Fill({\n      color: 'rgba(255, 255, 0, 0.1)',\n    }),\n  });\n  styles['default'] = new Style({\n    stroke: new Stroke({\n      color: 'red',\n      width: 3,\n    }),\n    fill: new Fill({\n      color: 'rgba(255, 0, 0, 0.1)',\n    }),\n    image: image,\n  });\n  return function (feature) {\n    return styles[feature.getGeometry().getType()] || styles['default'];\n  };\n})();\n\nconst geojsonObject = {\n  'type': 'FeatureCollection',\n  'crs': {\n    'type': 'name',\n    'properties': {\n      'name': 'EPSG:3857',\n    },\n  },\n  'features': [\n    {\n      'type': 'Feature',\n      'geometry': {\n        'type': 'Point',\n        'coordinates': [0, 0],\n      },\n    },\n    {\n      'type': 'Feature',\n      'geometry': {\n        'type': 'MultiPoint',\n        'coordinates': [\n          [-2e6, 0],\n          [0, -2e6],\n        ],\n      },\n    },\n    {\n      'type': 'Feature',\n      'geometry': {\n        'type': 'LineString',\n        'coordinates': [\n          [4e6, -2e6],\n          [8e6, 2e6],\n          [9e6, 2e6],\n        ],\n      },\n    },\n    {\n      'type': 'Feature',\n      'geometry': {\n        'type': 'LineString',\n        'coordinates': [\n          [4e6, -2e6],\n          [8e6, 2e6],\n          [8e6, 3e6],\n        ],\n      },\n    },\n    {\n      'type': 'Feature',\n      'geometry': {\n        'type': 'Polygon',\n        'coordinates': [\n          [\n            [-5e6, -1e6],\n            [-4e6, 1e6],\n            [-3e6, -1e6],\n            [-5e6, -1e6],\n          ],\n          [\n            [-4.5e6, -0.5e6],\n            [-3.5e6, -0.5e6],\n            [-4e6, 0.5e6],\n            [-4.5e6, -0.5e6],\n          ],\n        ],\n      },\n    },\n    {\n      'type': 'Feature',\n      'geometry': {\n        'type': 'MultiLineString',\n        'coordinates': [\n          [\n            [-1e6, -7.5e5],\n            [-1e6, 7.5e5],\n          ],\n          [\n            [-1e6, -7.5e5],\n            [-1e6, 7.5e5],\n            [-5e5, 0],\n            [-1e6, -7.5e5],\n          ],\n          [\n            [1e6, -7.5e5],\n            [15e5, 0],\n            [15e5, 0],\n            [1e6, 7.5e5],\n          ],\n          [\n            [-7.5e5, -1e6],\n            [7.5e5, -1e6],\n          ],\n          [\n            [-7.5e5, 1e6],\n            [7.5e5, 1e6],\n          ],\n        ],\n      },\n    },\n    {\n      'type': 'Feature',\n      'geometry': {\n        'type': 'MultiPolygon',\n        'coordinates': [\n          [\n            [\n              [-5e6, 6e6],\n              [-5e6, 8e6],\n              [-3e6, 8e6],\n              [-3e6, 6e6],\n              [-5e6, 6e6],\n            ],\n          ],\n          [\n            [\n              [-3e6, 6e6],\n              [-2e6, 8e6],\n              [0, 8e6],\n              [0, 6e6],\n              [-3e6, 6e6],\n            ],\n          ],\n          [\n            [\n              [1e6, 6e6],\n              [1e6, 8e6],\n              [3e6, 8e6],\n              [3e6, 6e6],\n              [1e6, 6e6],\n            ],\n          ],\n        ],\n      },\n    },\n    {\n      'type': 'Feature',\n      'geometry': {\n        'type': 'GeometryCollection',\n        'geometries': [\n          {\n            'type': 'LineString',\n            'coordinates': [\n              [-5e6, -5e6],\n              [0, -5e6],\n            ],\n          },\n          {\n            'type': 'Point',\n            'coordinates': [4e6, -5e6],\n          },\n          {\n            'type': 'Polygon',\n            'coordinates': [\n              [\n                [1e6, -5e6],\n                [2e6, -3.5e6],\n                [3e6, -5e6],\n                [1e6, -5e6],\n              ],\n            ],\n          },\n          {\n            'type': 'Polygon',\n            'coordinates': [\n              [\n                [1e6, -5e6],\n                [2e6, -6.5e6],\n                [3e6, -5e6],\n                [1e6, -5e6],\n              ],\n            ],\n          },\n        ],\n      },\n    },\n  ],\n};\n\nconst source = new VectorSource({\n  features: new GeoJSON().readFeatures(geojsonObject),\n});\n\nconst layer = new VectorLayer({\n  source: source,\n  style: styleFunction,\n});\n\nconst overlayStyle = (function () {\n  const styles = {};\n  styles['Polygon'] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5],\n      }),\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: [255, 255, 255, 1],\n        width: 5,\n      }),\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: [0, 153, 255, 1],\n        width: 3,\n      }),\n    }),\n  ];\n  styles['MultiPolygon'] = styles['Polygon'];\n\n  styles['LineString'] = [\n    new Style({\n      stroke: new Stroke({\n        color: [255, 255, 255, 1],\n        width: 5,\n      }),\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: [0, 153, 255, 1],\n        width: 3,\n      }),\n    }),\n  ];\n  styles['MultiLineString'] = styles['LineString'];\n\n  styles['Point'] = [\n    new Style({\n      image: new CircleStyle({\n        radius: 7,\n        fill: new Fill({\n          color: [0, 153, 255, 1],\n        }),\n        stroke: new Stroke({\n          color: [255, 255, 255, 0.75],\n          width: 1.5,\n        }),\n      }),\n      zIndex: 100000,\n    }),\n  ];\n  styles['MultiPoint'] = styles['Point'];\n\n  styles['GeometryCollection'] = styles['Polygon'].concat(styles['Point']);\n\n  return function (feature) {\n    return styles[feature.getGeometry().getType()];\n  };\n})();\n\nconst select = new Select({\n  style: overlayStyle,\n});\n\nconst modify = new Modify({\n  features: select.getFeatures(),\n  style: overlayStyle,\n  insertVertexCondition: function () {\n    // prevent new vertices to be added to the polygons\n    return !select\n      .getFeatures()\n      .getArray()\n      .every(function (feature) {\n        return /Polygon/.test(feature.getGeometry().getType());\n      });\n  },\n});\n\nconst map = new Map({\n  interactions: defaultInteractions().extend([select, modify]),\n  layers: [layer],\n  target: 'map',\n  view: new View({\n    center: [0, 1000000],\n    zoom: 2,\n    multiWorld: true,\n  }),\n});\n"],"names":["styleFunction","styles","image","radius","fill","stroke","color","width","feature","getGeometry","getType","source","features","readFeatures","layer","style","overlayStyle","zIndex","concat","select","modify","getFeatures","insertVertexCondition","getArray","every","test","interactions","extend","layers","target","view","center","zoom","multiWorld"],"sourceRoot":""}