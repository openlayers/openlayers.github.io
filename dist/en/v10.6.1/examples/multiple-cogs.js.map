{"version":3,"file":"multiple-cogs.js","mappings":"4KAQA,IAAMA,KAAK,aAAc,qDACzB,IAAMA,KAAK,aAAc,sDACzB,QAAS,KAET,MAAMC,EAAW,CAAC,MAAO,QAAS,QAClC,IAAK,MAAMC,KAAWD,EAAU,CACbE,SAASC,eAAeF,GAChCG,iBAAiB,SAAUC,EACtC,CAEA,SAASC,IACP,MAAMC,EAAY,CAAC,EACnB,IAAK,MAAMN,KAAWD,EAAU,CAC9B,MAAMQ,EAAWN,SAASC,eAAeF,GACzCM,EAAUN,GAAWQ,SAASD,EAASE,MAAO,GAChD,CACA,OAAOH,CACT,CAEA,MAAMI,EAAc,CAAC,MAAO,MAAO,MAAO,OACpCC,EAAU,CACd,IAAI,IAAQ,CACVA,QAASD,EAAYE,KAAI,SAAUC,GACjC,MAAO,CACLC,IAAK,iHAAiHD,QACtHE,IAAK,IAET,MAEF,IAAI,IAAQ,CACVJ,QAASD,EAAYE,KAAI,SAAUC,GACjC,MAAO,CACLC,IAAK,iHAAiHD,QACtHE,IAAK,IAET,OAIEC,EAAQ,IAAI,IAAU,CAC1BL,QAASA,EACTM,MAAO,CACLX,UAAWD,IACXa,MAAO,CACL,QACA,CAAC,OAAQ,CAAC,MAAO,QACjB,CAAC,OAAQ,CAAC,MAAO,UACjB,CAAC,OAAQ,CAAC,MAAO,SACjB,CAAC,OAAQ,OAKf,SAASd,IACPY,EAAMG,qBAAqBd,IAC7B,CAEY,IAAI,IAAI,CAClBe,OAAQ,MACRC,OAAQ,CAACL,GACTM,KAAMC,QAAQC,IACZb,EAAQC,KAAI,SAAUa,GACpB,OAAOA,EAAOC,SAChB,KACAC,MAAK,SAAUC,GACf,MAAMC,EAAa,YACbC,GAAS,UAOf,OANAF,EAAQG,SAAQ,SAAUH,IACxB,QACEE,GACA,QAAgBF,EAAQE,OAAQF,EAAQC,WAAYA,GAExD,IACO,CACLA,WAAYA,EACZG,QAAQ,QAAUF,GAClBG,KAAM,EACNH,OAAQA,EAEZ,K","sources":["webpack:///./multiple-cogs.js"],"sourcesContent":["import proj4 from 'proj4';\nimport Map from '../src/ol/Map.js';\nimport {createEmpty, extend, getCenter} from '../src/ol/extent.js';\nimport TileLayer from '../src/ol/layer/WebGLTile.js';\nimport {register} from '../src/ol/proj/proj4.js';\nimport {transformExtent} from '../src/ol/proj.js';\nimport GeoTIFF from '../src/ol/source/GeoTIFF.js';\n\nproj4.defs('EPSG:32631', '+proj=utm +zone=31 +datum=WGS84 +units=m +no_defs');\nproj4.defs('EPSG:32632', '+proj=utm +zone=32 +datum=WGS84 +units=m +no_defs');\nregister(proj4);\n\nconst channels = ['red', 'green', 'blue'];\nfor (const channel of channels) {\n  const selector = document.getElementById(channel);\n  selector.addEventListener('change', update);\n}\n\nfunction getVariables() {\n  const variables = {};\n  for (const channel of channels) {\n    const selector = document.getElementById(channel);\n    variables[channel] = parseInt(selector.value, 10);\n  }\n  return variables;\n}\n\nconst sourceNames = ['B04', 'B03', 'B02', 'B08'];\nconst sources = [\n  new GeoTIFF({\n    sources: sourceNames.map(function (name) {\n      return {\n        url: `https://sentinel-cogs.s3.us-west-2.amazonaws.com/sentinel-s2-l2a-cogs/31/T/GJ/2022/7/S2A_31TGJ_20220703_0_L2A/${name}.tif`,\n        max: 3000,\n      };\n    }),\n  }),\n  new GeoTIFF({\n    sources: sourceNames.map(function (name) {\n      return {\n        url: `https://sentinel-cogs.s3.us-west-2.amazonaws.com/sentinel-s2-l2a-cogs/32/T/LP/2022/7/S2A_32TLP_20220703_0_L2A/${name}.tif`,\n        max: 3000,\n      };\n    }),\n  }),\n];\n\nconst layer = new TileLayer({\n  sources: sources,\n  style: {\n    variables: getVariables(),\n    color: [\n      'array',\n      ['band', ['var', 'red']],\n      ['band', ['var', 'green']],\n      ['band', ['var', 'blue']],\n      ['band', 5],\n    ],\n  },\n});\n\nfunction update() {\n  layer.updateStyleVariables(getVariables());\n}\n\nconst map = new Map({\n  target: 'map',\n  layers: [layer],\n  view: Promise.all(\n    sources.map(function (source) {\n      return source.getView();\n    }),\n  ).then(function (options) {\n    const projection = 'EPSG:3857';\n    const extent = createEmpty();\n    options.forEach(function (options) {\n      extend(\n        extent,\n        transformExtent(options.extent, options.projection, projection),\n      );\n    });\n    return {\n      projection: projection,\n      center: getCenter(extent),\n      zoom: 0,\n      extent: extent,\n    };\n  }),\n});\n"],"names":["defs","channels","channel","document","getElementById","addEventListener","update","getVariables","variables","selector","parseInt","value","sourceNames","sources","map","name","url","max","layer","style","color","updateStyleVariables","target","layers","view","Promise","all","source","getView","then","options","projection","extent","forEach","center","zoom"],"sourceRoot":""}