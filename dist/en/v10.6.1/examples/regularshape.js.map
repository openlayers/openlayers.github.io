{"version":3,"file":"regularshape.js","mappings":"6MAWA,MAAMA,EAAS,IAAI,IAAO,CAACC,MAAO,QAASC,MAAO,IAC5CC,EAAO,IAAI,IAAK,CAACF,MAAO,QAExBG,EAAS,CACb,OAAU,IAAI,KAAM,CAClBC,MAAO,IAAI,IAAa,CACtBF,KAAMA,EACNH,OAAQA,EACRM,OAAQ,EACRC,OAAQ,GACRC,MAAOC,KAAKC,GAAK,MAGrB,UAAa,IAAI,KAAM,CACrBL,MAAO,IAAI,IAAa,CACtBF,KAAMA,EACNH,OAAQA,EACRO,OAAQ,GAAKE,KAAKE,MAClBC,QAAS,GACTN,OAAQ,EACRE,MAAO,EACPK,MAAO,CAAC,EAAG,QAGf,SAAY,IAAI,KAAM,CACpBR,MAAO,IAAI,IAAa,CACtBF,KAAMA,EACNH,OAAQA,EACRM,OAAQ,EACRC,OAAQ,GACRO,SAAUL,KAAKC,GAAK,EACpBF,MAAO,MAGX,KAAQ,IAAI,KAAM,CAChBH,MAAO,IAAI,IAAa,CACtBF,KAAMA,EACNH,OAAQA,EACRM,OAAQ,EACRC,OAAQ,GACRK,QAAS,EACTJ,MAAO,MAGX,MAAS,IAAI,KAAM,CACjBH,MAAO,IAAI,IAAa,CACtBF,KAAMA,EACNH,OAAQA,EACRM,OAAQ,EACRC,OAAQ,GACRK,QAAS,EACTJ,MAAO,MAGX,EAAK,IAAI,KAAM,CACbH,MAAO,IAAI,IAAa,CACtBF,KAAMA,EACNH,OAAQA,EACRM,OAAQ,EACRC,OAAQ,GACRK,QAAS,EACTJ,MAAOC,KAAKC,GAAK,MAGrB,QAAW,CACT,IAAI,KAAM,CACRL,MAAO,IAAI,IAAa,CACtBF,KAAMA,EACNH,OAAQA,EACRM,OAAQ,EACRC,OAAQ,EACRC,MAAOC,KAAKC,GAAK,EACjBK,aAAc,CAAC,EAAG,QAGtB,IAAI,KAAM,CACRV,MAAO,IAAI,IAAa,CACtBF,KAAMA,EACNH,OAAQA,EACRM,OAAQ,EACRC,OAAQ,GACRC,MAAOC,KAAKC,GAAK,QAMnBM,EAAY,CAChB,IACA,QACA,OACA,WACA,SACA,YACA,WAGIC,EAAW,IAAIC,MADP,KAERC,EAAI,KACV,IAAK,IAAIC,EAAI,EAAGA,EAHF,MAGeA,EAAG,CAC9B,MAAMC,EAAc,CAAC,EAAIF,EAAIV,KAAKa,SAAWH,EAAG,EAAIA,EAAIV,KAAKa,SAAWH,GACxEF,EAASG,GAAK,IAAI,IAAQ,IAAI,IAAMC,IACpCJ,EAASG,GAAGG,SACVnB,EAAOY,EAAUP,KAAKe,MAAMf,KAAKa,SAAWN,EAAUS,UAE1D,CAEA,MAAMC,EAAS,IAAI,IAAa,CAC9BT,SAAUA,IAGNU,EAAc,IAAI,IAAY,CAClCD,OAAQA,IAYJE,GATM,IAAI,IAAI,CAClBC,OAAQ,CAACF,GACTG,OAAQ,MACRC,KAAM,IAAI,KAAK,CACbC,OAAQ,CAAC,EAAG,GACZC,KAAM,MAIK,CAAC,OAAQ,QAAS,SAAU,OAAQ,QACnD,IAAIC,EAAe,EAEnBC,SAASC,eAAe,iBAAiBC,iBAAiB,SAAS,WACjEjC,EAAOkC,OACJC,WACAC,QAAQ,IAAI,IAAK,CAACvC,MAAO2B,EAAOM,EAAeN,EAAOH,WACzDE,EAAYc,UACZP,GACF,G","sources":["webpack:///./regularshape.js"],"sourcesContent":["import Feature from '../src/ol/Feature.js';\nimport Map from '../src/ol/Map.js';\nimport View from '../src/ol/View.js';\nimport Point from '../src/ol/geom/Point.js';\nimport VectorLayer from '../src/ol/layer/Vector.js';\nimport VectorSource from '../src/ol/source/Vector.js';\nimport Fill from '../src/ol/style/Fill.js';\nimport RegularShape from '../src/ol/style/RegularShape.js';\nimport Stroke from '../src/ol/style/Stroke.js';\nimport Style from '../src/ol/style/Style.js';\n\nconst stroke = new Stroke({color: 'black', width: 2});\nconst fill = new Fill({color: 'red'});\n\nconst styles = {\n  'square': new Style({\n    image: new RegularShape({\n      fill: fill,\n      stroke: stroke,\n      points: 4,\n      radius: 10,\n      angle: Math.PI / 4,\n    }),\n  }),\n  'rectangle': new Style({\n    image: new RegularShape({\n      fill: fill,\n      stroke: stroke,\n      radius: 10 / Math.SQRT2,\n      radius2: 10,\n      points: 4,\n      angle: 0,\n      scale: [1, 0.5],\n    }),\n  }),\n  'triangle': new Style({\n    image: new RegularShape({\n      fill: fill,\n      stroke: stroke,\n      points: 3,\n      radius: 10,\n      rotation: Math.PI / 4,\n      angle: 0,\n    }),\n  }),\n  'star': new Style({\n    image: new RegularShape({\n      fill: fill,\n      stroke: stroke,\n      points: 5,\n      radius: 10,\n      radius2: 4,\n      angle: 0,\n    }),\n  }),\n  'cross': new Style({\n    image: new RegularShape({\n      fill: fill,\n      stroke: stroke,\n      points: 4,\n      radius: 10,\n      radius2: 0,\n      angle: 0,\n    }),\n  }),\n  'x': new Style({\n    image: new RegularShape({\n      fill: fill,\n      stroke: stroke,\n      points: 4,\n      radius: 10,\n      radius2: 0,\n      angle: Math.PI / 4,\n    }),\n  }),\n  'stacked': [\n    new Style({\n      image: new RegularShape({\n        fill: fill,\n        stroke: stroke,\n        points: 4,\n        radius: 5,\n        angle: Math.PI / 4,\n        displacement: [0, 10],\n      }),\n    }),\n    new Style({\n      image: new RegularShape({\n        fill: fill,\n        stroke: stroke,\n        points: 4,\n        radius: 10,\n        angle: Math.PI / 4,\n      }),\n    }),\n  ],\n};\n\nconst styleKeys = [\n  'x',\n  'cross',\n  'star',\n  'triangle',\n  'square',\n  'rectangle',\n  'stacked',\n];\nconst count = 250;\nconst features = new Array(count);\nconst e = 4500000;\nfor (let i = 0; i < count; ++i) {\n  const coordinates = [2 * e * Math.random() - e, 2 * e * Math.random() - e];\n  features[i] = new Feature(new Point(coordinates));\n  features[i].setStyle(\n    styles[styleKeys[Math.floor(Math.random() * styleKeys.length)]],\n  );\n}\n\nconst source = new VectorSource({\n  features: features,\n});\n\nconst vectorLayer = new VectorLayer({\n  source: source,\n});\n\nconst map = new Map({\n  layers: [vectorLayer],\n  target: 'map',\n  view: new View({\n    center: [0, 0],\n    zoom: 2,\n  }),\n});\n\nconst colors = ['blue', 'green', 'yellow', 'aqua', 'red'];\nlet currentColor = 0;\n\ndocument.getElementById('color-changer').addEventListener('click', function () {\n  styles.square\n    .getImage()\n    .setFill(new Fill({color: colors[currentColor % colors.length]}));\n  vectorLayer.changed();\n  currentColor++;\n});\n"],"names":["stroke","color","width","fill","styles","image","points","radius","angle","Math","PI","SQRT2","radius2","scale","rotation","displacement","styleKeys","features","Array","e","i","coordinates","random","setStyle","floor","length","source","vectorLayer","colors","layers","target","view","center","zoom","currentColor","document","getElementById","addEventListener","square","getImage","setFill","changed"],"sourceRoot":""}