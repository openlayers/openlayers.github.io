{"version":3,"file":"webgl-vector-tiles.js","mappings":"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","sources":["webpack:///../src/ol/webgl/TileGeometry.js","webpack:///../src/ol/renderer/webgl/VectorTileLayer.js","webpack:///../src/ol/layer/WebGLVectorTile.js","webpack:///./webgl-vector-tiles.js"],"sourcesContent":["/**\n * @module ol/webgl/TileGeometry\n */\n\nimport MixedGeometryBatch from '../render/webgl/MixedGeometryBatch.js';\nimport {\n  create as createTransform,\n  translate as translateTransform,\n} from '../transform.js';\nimport {ARRAY_BUFFER, STATIC_DRAW} from '../webgl.js';\nimport BaseTileRepresentation from './BaseTileRepresentation.js';\nimport WebGLArrayBuffer from './Buffer.js';\n\n/**\n * @typedef {import(\"../VectorRenderTile\").default} TileType\n */\n\n/**\n * @extends {BaseTileRepresentation<TileType>}\n */\nclass TileGeometry extends BaseTileRepresentation {\n  /**\n   * @param {import(\"./BaseTileRepresentation.js\").TileRepresentationOptions<TileType>} options The tile texture options.\n   * @param {import(\"../render/webgl/VectorStyleRenderer.js\").default} styleRenderer Vector style renderer\n   */\n  constructor(options, styleRenderer) {\n    super(options);\n\n    /**\n     * @private\n     */\n    this.batch_ = new MixedGeometryBatch();\n\n    /**\n     * @private\n     */\n    this.styleRenderer_ = styleRenderer;\n\n    /**\n     * @type {import(\"../render/webgl/VectorStyleRenderer.js\").WebGLBuffers}\n     */\n    this.buffers = null;\n\n    /**\n     * Each geometry tile also has a mask which consisted of a quad (two triangles); this mask is intended to\n     * be rendered to an offscreen buffer, and be used to correctly mask tiles according to their zoom level\n     * during rendering\n     */\n    this.maskVertices = new WebGLArrayBuffer(ARRAY_BUFFER, STATIC_DRAW);\n\n    this.setTile(options.tile);\n  }\n\n  /**\n   * @private\n   */\n  generateMaskBuffer_() {\n    const extent = this.tile.getSourceTiles()[0].extent;\n    this.maskVertices.fromArray([\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ]);\n    this.helper.flushBufferData(this.maskVertices);\n  }\n\n  /**\n   * @override\n   */\n  uploadTile() {\n    this.generateMaskBuffer_();\n\n    this.batch_.clear();\n    const sourceTiles = this.tile.getSourceTiles();\n    const features = sourceTiles.reduce(\n      (accumulator, sourceTile) => accumulator.concat(sourceTile.getFeatures()),\n      [],\n    );\n    this.batch_.addFeatures(features);\n\n    const tileOriginX = sourceTiles[0].extent[0];\n    const tileOriginY = sourceTiles[0].extent[1];\n    const transform = translateTransform(\n      createTransform(),\n      -tileOriginX,\n      -tileOriginY,\n    );\n\n    this.styleRenderer_\n      .generateBuffers(this.batch_, transform)\n      .then((buffers) => {\n        this.buffers = buffers;\n        this.setReady();\n      });\n  }\n\n  /**\n   * @override\n   */\n  disposeInternal() {\n    if (this.buffers) {\n      /**\n       * @param {Array<WebGLArrayBuffer>} typeBuffers Buffers\n       */\n      const disposeBuffersOfType = (typeBuffers) => {\n        for (const buffer of typeBuffers) {\n          if (buffer) {\n            this.helper.deleteBuffer(buffer);\n          }\n        }\n      };\n      this.buffers.pointBuffers &&\n        disposeBuffersOfType(this.buffers.pointBuffers);\n      this.buffers.lineStringBuffers &&\n        disposeBuffersOfType(this.buffers.lineStringBuffers);\n      this.buffers.polygonBuffers &&\n        disposeBuffersOfType(this.buffers.polygonBuffers);\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default TileGeometry;\n","/**\n * @module ol/renderer/webgl/VectorTileLayer\n */\nimport EventType from '../../events/EventType.js';\nimport {getIntersection} from '../../extent.js';\nimport {ShaderBuilder} from '../../render/webgl/ShaderBuilder.js';\nimport VectorStyleRenderer, {\n  convertStyleToShaders,\n} from '../../render/webgl/VectorStyleRenderer.js';\nimport {\n  create as createTransform,\n  makeInverse as makeInverseTransform,\n  multiply as multiplyTransform,\n  setFromArray as setFromTransform,\n} from '../../transform.js';\nimport {\n  create as createMat4,\n  fromTransform as mat4FromTransform,\n} from '../../vec/mat4.js';\nimport WebGLArrayBuffer from '../../webgl/Buffer.js';\nimport {AttributeType} from '../../webgl/Helper.js';\nimport WebGLRenderTarget from '../../webgl/RenderTarget.js';\nimport TileGeometry from '../../webgl/TileGeometry.js';\nimport {ELEMENT_ARRAY_BUFFER, STATIC_DRAW} from '../../webgl.js';\nimport WebGLBaseTileLayerRenderer, {\n  Uniforms as BaseUniforms,\n} from './TileLayerBase.js';\n\nexport const Uniforms = {\n  ...BaseUniforms,\n  TILE_MASK_TEXTURE: 'u_depthMask',\n  TILE_ZOOM_LEVEL: 'u_tileZoomLevel',\n};\n\nexport const Attributes = {\n  POSITION: 'a_position',\n};\n\n/**\n * @typedef {import('../../render/webgl/VectorStyleRenderer.js').StyleShaders} StyleShaders\n */\n/**\n * @typedef {import('../../style/flat.js').FlatStyleLike | Array<StyleShaders> | StyleShaders} LayerStyle\n */\n\n/**\n * @typedef {Object} Options\n * @property {LayerStyle} style Flat vector style; also accepts shaders\n * @property {import('../../style/flat.js').StyleVariables} [variables] Style variables. Each variable must hold a literal value (not\n * an expression). These variables can be used as {@link import(\"../../expr/expression.js\").ExpressionValue expressions} in the styles properties\n * using the `['var', 'varName']` operator.\n * @property {boolean} [disableHitDetection=false] Setting this to true will provide a slight performance boost, but will\n * prevent all hit detection on the layer.\n * @property {number} [cacheSize=512] The vector tile cache size.\n */\n\n/**\n * @typedef {import(\"../../layer/BaseTile.js\").default} LayerType\n */\n\n/**\n * @classdesc\n * WebGL renderer for vector tile layers. Experimental.\n * @extends {WebGLBaseTileLayerRenderer<LayerType>}\n */\nclass WebGLVectorTileLayerRenderer extends WebGLBaseTileLayerRenderer {\n  /**\n   * @param {LayerType} tileLayer Tile layer.\n   * @param {Options} options Options.\n   */\n  constructor(tileLayer, options) {\n    super(tileLayer, {\n      cacheSize: options.cacheSize,\n      uniforms: {\n        [Uniforms.PATTERN_ORIGIN]: [0, 0],\n        [Uniforms.TILE_MASK_TEXTURE]: () => this.tileMaskTarget_.getTexture(),\n      },\n    });\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.hitDetectionEnabled_ = !options.disableHitDetection;\n\n    /**\n     * @type {LayerStyle}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * @type {import('../../style/flat.js').StyleVariables}\n     * @private\n     */\n    this.styleVariables_ = options.variables || {};\n\n    /**\n     * @type {VectorStyleRenderer}\n     * @private\n     */\n    this.styleRenderer_ = null;\n\n    /**\n     * This transform is updated on every frame and is the composition of:\n     * - invert of the world->screen transform that was used when rebuilding buffers (see `this.renderTransform_`)\n     * - current world->screen transform\n     * @type {import(\"../../transform.js\").Transform}\n     * @private\n     */\n    this.currentFrameStateTransform_ = createTransform();\n\n    /**\n     * @private\n     */\n    this.tmpTransform_ = createTransform();\n    /**\n     * @private\n     */\n    this.tmpMat4_ = createMat4();\n\n    /**\n     * @type {WebGLRenderTarget}\n     * @private\n     */\n    this.tileMaskTarget_ = null;\n\n    /**\n     * @private\n     */\n    this.tileMaskIndices_ = new WebGLArrayBuffer(\n      ELEMENT_ARRAY_BUFFER,\n      STATIC_DRAW,\n    );\n    this.tileMaskIndices_.fromArray([0, 1, 3, 1, 2, 3]);\n\n    /**\n     * @type {Array<import('../../webgl/Helper.js').AttributeDescription>}\n     * @private\n     */\n    this.tileMaskAttributes_ = [\n      {\n        name: Attributes.POSITION,\n        size: 2,\n        type: AttributeType.FLOAT,\n      },\n    ];\n\n    /**\n     * @type {WebGLProgram}\n     * @private\n     */\n    this.tileMaskProgram_;\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * @param {Options} options Options.\n   * @override\n   */\n  reset(options) {\n    super.reset(options);\n\n    this.applyOptions_(options);\n    if (this.helper) {\n      this.createRenderers_();\n      this.initTileMask_();\n    }\n  }\n\n  /**\n   * @param {Options} options Options.\n   * @private\n   */\n  applyOptions_(options) {\n    this.style_ = options.style;\n  }\n\n  /**\n   * @private\n   */\n  createRenderers_() {\n    function addBuilderParams(builder) {\n      const exisitingDiscard = builder.getFragmentDiscardExpression();\n      const discardFromMask = `texture2D(${Uniforms.TILE_MASK_TEXTURE}, gl_FragCoord.xy / u_pixelRatio / u_viewportSizePx).r * 50. > ${Uniforms.TILE_ZOOM_LEVEL} + 0.5`;\n      builder.setFragmentDiscardExpression(\n        exisitingDiscard !== 'false'\n          ? `(${exisitingDiscard}) || (${discardFromMask})`\n          : discardFromMask,\n      );\n      builder.addUniform(Uniforms.TILE_MASK_TEXTURE, 'sampler2D');\n      builder.addUniform(Uniforms.TILE_ZOOM_LEVEL, 'float');\n    }\n\n    const styleShaders = convertStyleToShaders(\n      this.style_,\n      this.styleVariables_,\n    );\n    for (const styleShader of styleShaders) {\n      addBuilderParams(styleShader.builder);\n    }\n\n    this.styleRenderer_ = new VectorStyleRenderer(\n      styleShaders,\n      this.styleVariables_,\n      this.helper,\n      this.hitDetectionEnabled_,\n    );\n  }\n\n  /**\n   * @private\n   */\n  initTileMask_() {\n    this.tileMaskTarget_ = new WebGLRenderTarget(this.helper);\n    const builder = new ShaderBuilder()\n      .setFillColorExpression(\n        `vec4(${Uniforms.TILE_ZOOM_LEVEL} / 50., 0., 0., 1.)`,\n      )\n      .addUniform(Uniforms.TILE_ZOOM_LEVEL, 'float');\n    this.tileMaskProgram_ = this.helper.getProgram(\n      builder.getFillFragmentShader(),\n      builder.getFillVertexShader(),\n    );\n    this.helper.flushBufferData(this.tileMaskIndices_);\n  }\n\n  /**\n   * @override\n   */\n  afterHelperCreated() {\n    this.createRenderers_();\n    this.initTileMask_();\n  }\n\n  /**\n   * @override\n   */\n  createTileRepresentation(options) {\n    const tileRep = new TileGeometry(options, this.styleRenderer_);\n    // redraw the layer when the tile is ready\n    const listener = () => {\n      if (tileRep.ready) {\n        this.getLayer().changed();\n        tileRep.removeEventListener(EventType.CHANGE, listener);\n      }\n    };\n    tileRep.addEventListener(EventType.CHANGE, listener);\n    return tileRep;\n  }\n\n  /**\n   * @override\n   */\n  beforeTilesRender(frameState, tilesWithAlpha) {\n    super.beforeTilesRender(frameState, true); // always consider that tiles need alpha blending\n    this.helper.makeProjectionTransform(\n      frameState,\n      this.currentFrameStateTransform_,\n    );\n  }\n\n  /**\n   * @override\n   */\n  beforeTilesMaskRender(frameState) {\n    this.helper.makeProjectionTransform(\n      frameState,\n      this.currentFrameStateTransform_,\n    );\n    const pixelRatio = frameState.pixelRatio;\n    const size = frameState.size;\n    this.tileMaskTarget_.setSize([size[0] * pixelRatio, size[1] * pixelRatio]);\n    this.helper.prepareDrawToRenderTarget(\n      frameState,\n      this.tileMaskTarget_,\n      true,\n      true,\n    );\n    this.helper.useProgram(this.tileMaskProgram_, frameState);\n    setFromTransform(this.tmpTransform_, this.currentFrameStateTransform_);\n    this.helper.setUniformMatrixValue(\n      Uniforms.PROJECTION_MATRIX,\n      mat4FromTransform(this.tmpMat4_, this.tmpTransform_),\n    );\n    makeInverseTransform(this.tmpTransform_, this.currentFrameStateTransform_);\n    this.helper.setUniformMatrixValue(\n      Uniforms.SCREEN_TO_WORLD_MATRIX,\n      mat4FromTransform(this.tmpMat4_, this.tmpTransform_),\n    );\n    return true;\n  }\n\n  /**\n   * @override\n   */\n  renderTileMask(tileRepresentation, tileZ, extent, depth) {\n    if (!tileRepresentation.ready) {\n      return;\n    }\n    this.helper.setUniformFloatValue(Uniforms.DEPTH, depth);\n    this.helper.setUniformFloatValue(Uniforms.TILE_ZOOM_LEVEL, tileZ);\n    this.helper.setUniformFloatVec4(Uniforms.RENDER_EXTENT, extent);\n    this.helper.setUniformFloatValue(Uniforms.GLOBAL_ALPHA, 1);\n    this.helper.bindBuffer(\n      /** @type {TileGeometry} */ (tileRepresentation).maskVertices,\n    );\n    this.helper.bindBuffer(this.tileMaskIndices_);\n    this.helper.enableAttributes(this.tileMaskAttributes_);\n    const renderCount = this.tileMaskIndices_.getSize();\n    this.helper.drawElements(0, renderCount);\n  }\n\n  /**\n   * @param {number} alpha Alpha value of the tile\n   * @param {import(\"../../extent.js\").Extent} renderExtent Which extent to restrict drawing to\n   * @param {import(\"../../transform.js\").Transform} batchInvertTransform Inverse of the transformation in which tile geometries are expressed\n   * @param {number} tileZ Tile zoom level\n   * @param {number} depth Depth of the tile\n   * @private\n   */\n  applyUniforms_(alpha, renderExtent, batchInvertTransform, tileZ, depth) {\n    // world to screen matrix\n    setFromTransform(this.tmpTransform_, this.currentFrameStateTransform_);\n    multiplyTransform(this.tmpTransform_, batchInvertTransform);\n    this.helper.setUniformMatrixValue(\n      Uniforms.PROJECTION_MATRIX,\n      mat4FromTransform(this.tmpMat4_, this.tmpTransform_),\n    );\n\n    // screen to world matrix\n    makeInverseTransform(this.tmpTransform_, this.currentFrameStateTransform_);\n    this.helper.setUniformMatrixValue(\n      Uniforms.SCREEN_TO_WORLD_MATRIX,\n      mat4FromTransform(this.tmpMat4_, this.tmpTransform_),\n    );\n\n    this.helper.setUniformFloatValue(Uniforms.GLOBAL_ALPHA, alpha);\n    this.helper.setUniformFloatValue(Uniforms.DEPTH, depth);\n    this.helper.setUniformFloatValue(Uniforms.TILE_ZOOM_LEVEL, tileZ);\n    this.helper.setUniformFloatVec4(Uniforms.RENDER_EXTENT, renderExtent);\n  }\n\n  /**\n   * @override\n   */\n  renderTile(\n    tileRepresentation,\n    tileTransform,\n    frameState,\n    renderExtent,\n    tileResolution,\n    tileSize,\n    tileOrigin,\n    tileExtent,\n    depth,\n    gutter,\n    alpha,\n  ) {\n    const gutterExtent = getIntersection(tileExtent, renderExtent, tileExtent);\n    const tileZ = tileRepresentation.tile.getTileCoord()[0];\n    const buffers = tileRepresentation.buffers;\n    if (!buffers) {\n      return;\n    }\n    this.styleRenderer_.render(buffers, frameState, () => {\n      this.applyUniforms_(\n        alpha,\n        gutterExtent,\n        buffers.invertVerticesTransform,\n        tileZ,\n        depth,\n      );\n    });\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {}\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    super.disposeInternal();\n  }\n}\n\nexport default WebGLVectorTileLayerRenderer;\n","/**\n * @module ol/layer/WebGLVectorTile\n */\nimport WebGLVectorTileLayerRenderer from '../renderer/webgl/VectorTileLayer.js';\nimport BaseTileLayer from './BaseTile.js';\n\n/***\n * @template T\n * @typedef {T extends import(\"../source/Vector.js\").default<infer U extends import(\"../Feature.js\").FeatureLike> ? U : never} ExtractedFeatureType\n */\n\n/**\n * @template {import(\"../source/VectorTile.js\").default<FeatureType>} [VectorTileSourceType=import(\"../source/VectorTile.js\").default<*>]\n * @template {import('../Feature.js').FeatureLike} [FeatureType=ExtractedFeatureType<VectorTileSourceType>]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * FIXME: not supported yet\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {VectorTileSourceType} [source] Source.\n * @property {import('../style/flat.js').FlatStyleLike} style Layer style.\n * @property {import('../style/flat.js').StyleVariables} [variables] Style variables. Each variable must hold a literal value (not\n * an expression). These variables can be used as {@link import(\"../expr/expression.js\").ExpressionValue expressions} in the styles properties\n * using the `['var', 'varName']` operator.\n * To update style variables, use the {@link import(\"./WebGLVector.js\").default#updateStyleVariables} method.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * FIXME: not supported yet\n * @property {boolean} [disableHitDetection=false] Setting this to true will provide a slight performance boost, but will\n * prevent all hit detection on the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Layer optimized for rendering large vector datasets.\n *\n * **Important: a `WebGLVector` layer must be manually disposed when removed, otherwise the underlying WebGL context\n * will not be garbage collected.**\n *\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/VectorTile.js\").default<FeatureType>} [VectorTileSourceType=import(\"../source/VectorTile.js\").default<*>]\n * @template {import('../Feature.js').FeatureLike} [FeatureType=ExtractedFeatureType<VectorTileSourceType>]\n * @extends {BaseTileLayer<VectorTileSourceType, WebGLVectorTileLayerRenderer>}\n */\nclass WebGLVectorTileLayer extends BaseTileLayer {\n  /**\n   * @param {Options<VectorTileSourceType, FeatureType>} [options] Options.\n   */\n  constructor(options) {\n    const baseOptions = Object.assign({}, options);\n\n    super(baseOptions);\n\n    /**\n     * @type {import('../style/flat.js').StyleVariables}\n     * @private\n     */\n    this.styleVariables_ = options.variables || {};\n\n    /**\n     * @private\n     */\n    this.style_ = options.style;\n\n    /**\n     * @private\n     */\n    this.hitDetectionDisabled_ = !!options.disableHitDetection;\n  }\n\n  /**\n   * @override\n   */\n  createRenderer() {\n    return new WebGLVectorTileLayerRenderer(this, {\n      style: this.style_,\n      variables: this.styleVariables_,\n      disableHitDetection: this.hitDetectionDisabled_,\n      cacheSize: this.getCacheSize(),\n    });\n  }\n\n  /**\n   * Update any variables used by the layer style and trigger a re-render.\n   * @param {import('../style/flat.js').StyleVariables} variables Variables to update.\n   */\n  updateStyleVariables(variables) {\n    Object.assign(this.styleVariables_, variables);\n    this.changed();\n  }\n\n  /**\n   * Set the layer style.\n   * @param {import('../style/flat.js').FlatStyleLike} style Layer style.\n   */\n  setStyle(style) {\n    this.style_ = style;\n    this.clearRenderer();\n    this.changed();\n  }\n}\n\nexport default WebGLVectorTileLayer;\n","import Map from '../src/ol/Map.js';\nimport View from '../src/ol/View.js';\nimport MVT from '../src/ol/format/MVT.js';\nimport WebGLVectorTileLayer from '../src/ol/layer/WebGLVectorTile.js';\nimport VectorTileSource from '../src/ol/source/VectorTile.js';\n\nconst key =\n  'pk.eyJ1IjoiYWhvY2V2YXIiLCJhIjoiY2t0cGdwMHVnMGdlbzMxbDhwazBic2xrNSJ9.WbcTL9uj8JPAsnT9mgb7oQ';\n\nconst style = [\n  {\n    filter: [\n      'all',\n      ['==', ['get', 'layer'], 'landuse'],\n      ['==', ['get', 'class'], 'park'],\n    ],\n    style: {\n      'fill-color': '#d8e8c8',\n    },\n  },\n  {\n    filter: [\n      'all',\n      ['==', ['get', 'layer'], 'landuse'],\n      ['==', ['get', 'class'], 'cemetery'],\n    ],\n    style: {\n      'fill-color': '#e0e4dd',\n    },\n  },\n  {\n    filter: [\n      'all',\n      ['==', ['get', 'layer'], 'landuse'],\n      ['==', ['get', 'class'], 'hospital'],\n    ],\n    style: {\n      'fill-color': '#fde',\n    },\n  },\n  {\n    filter: [\n      'all',\n      ['==', ['get', 'layer'], 'landuse'],\n      ['==', ['get', 'class'], 'school'],\n    ],\n    style: {\n      'fill-color': '#f0e8f8',\n    },\n  },\n  {\n    filter: [\n      'all',\n      ['==', ['get', 'layer'], 'landuse'],\n      ['==', ['get', 'class'], 'wood'],\n    ],\n    style: {\n      'fill-color': 'rgb(233,238,223)',\n    },\n  },\n  {\n    filter: ['==', ['get', 'layer'], 'waterway'],\n    style: {\n      'stroke-color': '#a0c8f0',\n      'stroke-width': 1,\n    },\n  },\n  {\n    filter: ['==', ['get', 'layer'], 'water'],\n    style: {\n      'fill-color': '#a0c8f0',\n    },\n  },\n  {\n    filter: [\n      'all',\n      ['==', ['get', 'layer'], 'aeroway'],\n      ['==', ['geometry-type'], 'Polygon'],\n    ],\n    style: {\n      'fill-color': 'rgb(242,239,235)',\n    },\n  },\n  {\n    filter: [\n      'all',\n      ['==', ['get', 'layer'], 'aeroway'],\n      ['==', ['geometry-type'], 'LineString'],\n      ['<=', ['resolution'], 76.43702828517625],\n    ],\n    style: {\n      'fill-color': '#f0ede9',\n    },\n  },\n  {\n    filter: ['==', ['get', 'layer'], 'building'],\n    style: {\n      'fill-color': '#f2eae2',\n      'stroke-color': '#dfdbd7',\n      'stroke-width': 1,\n    },\n  },\n  {\n    filter: [\n      'all',\n      ['==', ['get', 'layer'], 'tunnel'],\n      ['==', ['get', 'class'], 'motorway_link'],\n    ],\n    style: {\n      'stroke-color': '#e9ac77',\n      'stroke-width': 1,\n    },\n  },\n  {\n    filter: [\n      'all',\n      ['==', ['get', 'layer'], 'tunnel'],\n      ['==', ['get', 'class'], 'service'],\n    ],\n    style: {\n      'stroke-color': '#cfcdca',\n      'stroke-width': 1,\n    },\n  },\n  {\n    filter: [\n      'all',\n      ['==', ['get', 'layer'], 'tunnel'],\n      [\n        'any',\n        ['==', ['get', 'class'], 'street'],\n        ['==', ['get', 'class'], 'street_limited'],\n      ],\n    ],\n    style: {\n      'stroke-color': '#cfcdca',\n      'stroke-width': 1,\n    },\n  },\n  {\n    filter: [\n      'all',\n      ['==', ['get', 'layer'], 'tunnel'],\n      ['==', ['get', 'class'], 'main'],\n      ['<=', ['resolution'], 1222.99245256282],\n    ],\n    style: {\n      'stroke-color': '#e9ac77',\n      'stroke-width': 1,\n    },\n  },\n  {\n    filter: [\n      'all',\n      ['==', ['get', 'layer'], 'tunnel'],\n      ['==', ['get', 'class'], 'motorway'],\n    ],\n    style: {\n      'stroke-color': '#e9ac77',\n      'stroke-width': 1,\n    },\n  },\n  {\n    filter: [\n      'all',\n      ['==', ['get', 'layer'], 'tunnel'],\n      ['==', ['get', 'class'], 'path'],\n    ],\n    style: {\n      'stroke-color': '#cba',\n      'stroke-width': 1,\n    },\n  },\n  {\n    filter: [\n      'all',\n      ['==', ['get', 'layer'], 'tunnel'],\n      ['==', ['get', 'class'], 'major_rail'],\n    ],\n    style: {\n      'stroke-color': '#bbb',\n      'stroke-width': 2,\n    },\n  },\n  {\n    filter: [\n      'all',\n      ['==', ['get', 'layer'], 'road'],\n      ['==', ['get', 'class'], 'motorway_link'],\n    ],\n    style: {\n      'stroke-color': '#e9ac77',\n      'stroke-width': 1,\n    },\n  },\n  {\n    filter: [\n      'all',\n      ['==', ['get', 'layer'], 'road'],\n      [\n        'any',\n        ['==', ['get', 'class'], 'street'],\n        ['==', ['get', 'class'], 'street_limited'],\n      ],\n      ['==', ['geometry-type'], 'LineString'],\n    ],\n    style: {\n      'stroke-color': '#cfcdca',\n      'stroke-width': 1,\n    },\n  },\n  {\n    filter: [\n      'all',\n      ['==', ['get', 'layer'], 'road'],\n      ['==', ['get', 'class'], 'main'],\n      ['<=', ['resolution'], 1222.99245256282],\n    ],\n    style: {\n      'stroke-color': '#e9ac77',\n      'stroke-width': 1,\n    },\n  },\n  {\n    filter: [\n      'all',\n      ['==', ['get', 'layer'], 'road'],\n      ['==', ['get', 'class'], 'motorway'],\n      ['<=', ['resolution'], 4891.96981025128],\n    ],\n    style: {\n      'stroke-color': '#e9ac77',\n      'stroke-width': 1,\n    },\n  },\n  {\n    filter: [\n      'all',\n      ['==', ['get', 'layer'], 'road'],\n      ['==', ['get', 'class'], 'path'],\n    ],\n    style: {\n      'stroke-color': '#cba',\n      'stroke-width': 1,\n    },\n  },\n  {\n    filter: [\n      'all',\n      ['==', ['get', 'layer'], 'road'],\n      ['==', ['get', 'class'], 'major_rail'],\n    ],\n    style: {\n      'stroke-color': '#bbb',\n      'stroke-width': 2,\n    },\n  },\n  {\n    filter: [\n      'all',\n      ['==', ['get', 'layer'], 'bridge'],\n      [\n        'any',\n        ['==', ['get', 'class'], 'motorway'],\n        ['==', ['get', 'class'], 'motorway_link'],\n      ],\n    ],\n    style: {\n      'stroke-color': '#e9ac77',\n      'stroke-width': 1,\n    },\n  },\n  {\n    filter: [\n      'all',\n      ['==', ['get', 'layer'], 'bridge'],\n      [\n        'any',\n        ['==', ['get', 'class'], 'street'],\n        ['==', ['get', 'class'], 'street_limited'],\n        ['==', ['get', 'class'], 'service'],\n      ],\n    ],\n    style: {\n      'stroke-color': '#cfcdca',\n      'stroke-width': 1,\n    },\n  },\n  {\n    filter: [\n      'all',\n      ['==', ['get', 'layer'], 'bridge'],\n      ['==', ['get', 'class'], 'main'],\n      ['<=', ['resolution'], 1222.99245256282],\n    ],\n    style: {\n      'stroke-color': '#e9ac77',\n      'stroke-width': 1,\n    },\n  },\n  {\n    filter: [\n      'all',\n      ['==', ['get', 'layer'], 'bridge'],\n      ['==', ['get', 'class'], 'path'],\n    ],\n    style: {\n      'stroke-color': '#cba',\n      'stroke-width': 1,\n    },\n  },\n  {\n    filter: [\n      'all',\n      ['==', ['get', 'layer'], 'bridge'],\n      ['==', ['get', 'class'], 'major_rail'],\n    ],\n    style: {\n      'stroke-color': '#bbb',\n      'stroke-width': 2,\n    },\n  },\n  {\n    filter: [\n      'all',\n      ['==', ['get', 'layer'], 'admin'],\n      ['>=', ['get', 'admin_level'], 2],\n      ['==', ['get', 'maritime'], 0],\n    ],\n    style: {\n      'stroke-color': '#9e9cab',\n      'stroke-width': 1,\n    },\n  },\n  {\n    filter: [\n      'all',\n      ['==', ['get', 'layer'], 'admin'],\n      ['>=', ['get', 'admin_level'], 2],\n      ['==', ['get', 'maritime'], 1],\n    ],\n    style: {\n      'stroke-color': '#a0c8f0',\n      'stroke-width': 1,\n    },\n  },\n  {\n    style: {'circle-radius': 4, 'circle-fill-color': '#777'},\n  },\n];\n\nconst map = new Map({\n  layers: [\n    new WebGLVectorTileLayer({\n      source: new VectorTileSource({\n        attributions:\n          '© <a href=\"https://www.mapbox.com/map-feedback/\">Mapbox</a> ' +\n          '© <a href=\"https://www.openstreetmap.org/copyright\">' +\n          'OpenStreetMap contributors</a>',\n        format: new MVT(),\n        url:\n          'https://{a-d}.tiles.mapbox.com/v4/mapbox.mapbox-streets-v6/' +\n          '{z}/{x}/{y}.vector.pbf?access_token=' +\n          key,\n      }),\n      style,\n    }),\n  ],\n  target: 'map',\n  view: new View({\n    center: [0, 0],\n    zoom: 2,\n  }),\n});\n"],"names":["TileGeometry","BaseTileRepresentation","constructor","options","styleRenderer","super","this","batch_","MixedGeometryBatch","styleRenderer_","buffers","maskVertices","setTile","tile","generateMaskBuffer_","extent","getSourceTiles","fromArray","helper","flushBufferData","uploadTile","clear","sourceTiles","features","reduce","accumulator","sourceTile","concat","getFeatures","addFeatures","tileOriginX","tileOriginY","transform","generateBuffers","then","setReady","disposeInternal","disposeBuffersOfType","typeBuffers","buffer","deleteBuffer","pointBuffers","lineStringBuffers","polygonBuffers","Uniforms","TILE_MASK_TEXTURE","TILE_ZOOM_LEVEL","Attributes","WebGLVectorTileLayerRenderer","tileLayer","cacheSize","uniforms","PATTERN_ORIGIN","tileMaskTarget_","getTexture","hitDetectionEnabled_","disableHitDetection","style_","styleVariables_","variables","currentFrameStateTransform_","tmpTransform_","tmpMat4_","tileMaskIndices_","tileMaskAttributes_","name","size","type","FLOAT","tileMaskProgram_","applyOptions_","reset","createRenderers_","initTileMask_","style","addBuilderParams","builder","exisitingDiscard","getFragmentDiscardExpression","discardFromMask","setFragmentDiscardExpression","addUniform","styleShaders","styleShader","VectorStyleRenderer","ShaderBuilder","setFillColorExpression","getProgram","getFillFragmentShader","getFillVertexShader","afterHelperCreated","createTileRepresentation","tileRep","listener","ready","getLayer","changed","removeEventListener","EventType","CHANGE","addEventListener","beforeTilesRender","frameState","tilesWithAlpha","makeProjectionTransform","beforeTilesMaskRender","pixelRatio","setSize","prepareDrawToRenderTarget","useProgram","setUniformMatrixValue","PROJECTION_MATRIX","mat4","SCREEN_TO_WORLD_MATRIX","renderTileMask","tileRepresentation","tileZ","depth","setUniformFloatValue","DEPTH","setUniformFloatVec4","RENDER_EXTENT","GLOBAL_ALPHA","bindBuffer","enableAttributes","renderCount","getSize","drawElements","applyUniforms_","alpha","renderExtent","batchInvertTransform","renderTile","tileTransform","tileResolution","tileSize","tileOrigin","tileExtent","gutter","gutterExtent","getTileCoord","render","invertVerticesTransform","renderDeclutter","WebGLVectorTileLayer","BaseTile","Object","assign","hitDetectionDisabled_","createRenderer","getCacheSize","updateStyleVariables","setStyle","clearRenderer","Map","layers","WebGLVectorTile","source","VectorTile","attributions","format","MVT","url","filter","target","view","View","center","zoom"],"sourceRoot":""}