{"version":3,"file":"tiled-layer-rendering-in-offscreen-canvas.worker.worker.js","mappings":"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","sources":["webpack:///../src/ol/CollectionEventType.js","webpack:///../src/ol/ObjectEventType.js","webpack:///../src/ol/events/EventType.js","webpack:///../src/ol/Disposable.js","webpack:///../src/ol/array.js","webpack:///../src/ol/functions.js","webpack:///../src/ol/obj.js","webpack:///../src/ol/events/Event.js","webpack:///../src/ol/events/Target.js","webpack:///../src/ol/events.js","webpack:///../src/ol/Observable.js","webpack:///../src/ol/util.js","webpack:///../src/ol/Object.js","webpack:///../src/ol/Collection.js","webpack:///../src/ol/MapEvent.js","webpack:///../src/ol/MapBrowserEvent.js","webpack:///../src/ol/MapBrowserEventType.js","webpack:///../src/ol/has.js","webpack:///../src/ol/pointer/EventType.js","webpack:///../src/ol/MapBrowserEventHandler.js","webpack:///../src/ol/MapEventType.js","webpack:///../src/ol/MapProperty.js","webpack:///../src/ol/TileState.js","webpack:///../src/ol/asserts.js","webpack:///../src/ol/structs/PriorityQueue.js","webpack:///../src/ol/TileQueue.js","webpack:///../src/ol/ViewHint.js","webpack:///../src/ol/ViewProperty.js","webpack:///../src/ol/math.js","webpack:///../src/ol/centerconstraint.js","webpack:///../src/ol/extent/Relationship.js","webpack:///../src/ol/extent.js","webpack:///../src/ol/coordinate.js","webpack:///../src/ol/easing.js","webpack:///../src/ol/console.js","webpack:///../src/ol/proj/Units.js","webpack:///../src/ol/proj/Projection.js","webpack:///../src/ol/proj/epsg3857.js","webpack:///../src/ol/proj/epsg4326.js","webpack:///../src/ol/proj/projections.js","webpack:///../src/ol/proj/transforms.js","webpack:///../src/ol/proj/utm.js","webpack:///../src/ol/sphere.js","webpack:///../src/ol/proj.js","webpack:///../src/ol/transform.js","webpack:///../src/ol/geom/Geometry.js","webpack:///../src/ol/geom/flat/transform.js","webpack:///../src/ol/geom/SimpleGeometry.js","webpack:///../src/ol/geom/flat/area.js","webpack:///../src/ol/geom/flat/closest.js","webpack:///../src/ol/geom/flat/deflate.js","webpack:///../src/ol/geom/flat/inflate.js","webpack:///../src/ol/geom/flat/simplify.js","webpack:///../src/ol/geom/LinearRing.js","webpack:///../src/ol/geom/Point.js","webpack:///../src/ol/geom/flat/contains.js","webpack:///../src/ol/geom/flat/interiorpoint.js","webpack:///../src/ol/geom/flat/intersectsextent.js","webpack:///../src/ol/geom/flat/segments.js","webpack:///../src/ol/geom/flat/reverse.js","webpack:///../src/ol/geom/flat/orient.js","webpack:///../src/ol/geom/Polygon.js","webpack:///../src/ol/resolutionconstraint.js","webpack:///../src/ol/rotationconstraint.js","webpack:///../src/ol/tilegrid/common.js","webpack:///../src/ol/View.js","webpack:///../src/ol/css.js","webpack:///../src/ol/dom.js","webpack:///../src/ol/control/Control.js","webpack:///../src/ol/control/Attribution.js","webpack:///../src/ol/control/Rotate.js","webpack:///../src/ol/control/Zoom.js","webpack:///../src/ol/Kinetic.js","webpack:///../src/ol/interaction/Property.js","webpack:///../src/ol/interaction/Interaction.js","webpack:///../src/ol/interaction/DoubleClickZoom.js","webpack:///../src/ol/events/condition.js","webpack:///../src/ol/interaction/Pointer.js","webpack:///../src/ol/interaction/DragPan.js","webpack:///../src/ol/interaction/DragRotate.js","webpack:///../src/ol/render/Box.js","webpack:///../src/ol/interaction/DragBox.js","webpack:///../src/ol/interaction/DragZoom.js","webpack:///../src/ol/events/Key.js","webpack:///../src/ol/interaction/KeyboardPan.js","webpack:///../src/ol/interaction/KeyboardZoom.js","webpack:///../src/ol/interaction/MouseWheelZoom.js","webpack:///../src/ol/interaction/PinchRotate.js","webpack:///../src/ol/interaction/PinchZoom.js","webpack:///../src/ol/layer/Property.js","webpack:///../src/ol/layer/Base.js","webpack:///../src/ol/layer/Group.js","webpack:///../src/ol/render/EventType.js","webpack:///../src/ol/layer/Layer.js","webpack:///../node_modules/quickselect/index.js","webpack:///../node_modules/rbush/index.js","webpack:///../src/ol/color.js","webpack:///../src/ol/size.js","webpack:///../src/ol/expr/expression.js","webpack:///../src/ol/expr/cpu.js","webpack:///../src/ol/ImageState.js","webpack:///../src/ol/Image.js","webpack:///../src/ol/style/IconImageCache.js","webpack:///../src/ol/style/IconImage.js","webpack:///../src/ol/colorlike.js","webpack:///../src/ol/render/canvas.js","webpack:///../src/ol/style/Image.js","webpack:///../src/ol/style/RegularShape.js","webpack:///../src/ol/style/Circle.js","webpack:///../src/ol/style/Fill.js","webpack:///../src/ol/style/Icon.js","webpack:///../src/ol/style/Stroke.js","webpack:///../src/ol/style/Style.js","webpack:///../src/ol/style/Text.js","webpack:///../src/ol/render/canvas/style.js","webpack:///../src/ol/layer/BaseVector.js","webpack:///../src/ol/render/Event.js","webpack:///../src/ol/renderer/Map.js","webpack:///../src/ol/renderer/Composite.js","webpack:///../src/ol/Map.js","webpack:///../src/ol/control/defaults.js","webpack:///../src/ol/interaction/defaults.js","webpack:///../src/ol/Tile.js","webpack:///../src/ol/DataTile.js","webpack:///../src/ol/ImageTile.js","webpack:///../src/ol/TileRange.js","webpack:///../src/ol/reproj.js","webpack:///../src/ol/reproj/Triangulation.js","webpack:///../src/ol/reproj/Tile.js","webpack:///../src/ol/reproj/common.js","webpack:///../src/ol/structs/LRUCache.js","webpack:///../src/ol/tilecoord.js","webpack:///../src/ol/render/canvas/ZIndexContext.js","webpack:///../src/ol/renderer/Layer.js","webpack:///../src/ol/renderer/canvas/Layer.js","webpack:///../src/ol/renderer/canvas/TileLayer.js","webpack:///../src/ol/layer/TileProperty.js","webpack:///../src/ol/layer/BaseTile.js","webpack:///../src/ol/layer/Tile.js","webpack:///../src/ol/tilegrid/TileGrid.js","webpack:///../src/ol/tilegrid.js","webpack:///../src/ol/uri.js","webpack:///../src/ol/tileurlfunction.js","webpack:///../src/ol/source/Source.js","webpack:///../src/ol/source/Tile.js","webpack:///../src/ol/source/TileEventType.js","webpack:///../src/ol/source/UrlTile.js","webpack:///../src/ol/source/TileImage.js","webpack:///../src/ol/source/XYZ.js","webpack:///../src/ol/source/OSM.js","webpack:///./tiled-layer-rendering-in-offscreen-canvas.worker.js"],"sourcesContent":["/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove',\n};\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n\n/**\n * @typedef {'propertychange'} Types\n */\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, comparator) {\n  let mid, cmp;\n  comparator = comparator || ascending;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function sorting arrays in ascending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function ascending(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * Compare function sorting arrays in descending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is greater than, equal to, or less than the second.\n */\nexport function descending(a, b) {\n  return a < b ? 1 : a > b ? -1 : 0;\n}\n\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n\n/**\n * @param {Array<number>} arr Array in descending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  if (arr[0] <= target) {\n    return 0;\n  }\n\n  const n = arr.length;\n  if (target <= arr[n - 1]) {\n    return n - 1;\n  }\n\n  if (typeof direction === 'function') {\n    for (let i = 1; i < n; ++i) {\n      const candidate = arr[i];\n      if (candidate === target) {\n        return i;\n      }\n      if (candidate < target) {\n        if (direction(target, arr[i - 1], candidate) > 0) {\n          return i - 1;\n        }\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction > 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] < target) {\n        return i - 1;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction < 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] <= target) {\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  for (let i = 1; i < n; ++i) {\n    if (arr[i] == target) {\n      return i;\n    }\n    if (arr[i] < target) {\n      if (arr[i - 1] - target < target - arr[i]) {\n        return i - 1;\n      }\n      return i;\n    }\n  }\n  return n - 1;\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array<any>|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array<any>|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preserved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n * @deprecated\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [func] Comparison function.\n * @param {boolean} [strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, func, strict) {\n  const compare = func || ascending;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (strict && res === 0));\n  });\n}\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>|undefined} */\n  let lastArgs;\n\n  let lastThis;\n\n  /**\n   * @this {*} Only need to know if `this` changed, don't care what type\n   * @return {ReturnType} Memoized value\n   */\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!lastArgs || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n\n/**\n * @template T\n * @param {function(): (T | Promise<T>)} getter A function that returns a value or a promise for a value.\n * @return {Promise<T>} A promise for the value.\n */\nexport function toPromise(getter) {\n  function promiseGetter() {\n    let value;\n    try {\n      value = getter();\n    } catch (err) {\n      return Promise.reject(err);\n    }\n    if (value instanceof Promise) {\n      return value;\n    }\n    return Promise.resolve(value);\n  }\n  return promiseGetter();\n}\n","/**\n * @module ol/obj\n */\n\n/**\n * Removes all properties from an object.\n * @param {Object<string, unknown>} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\nimport Event from './Event.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [target] Default event target for dispatched events.\n   */\n  constructor(target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = target;\n\n    /**\n     * @private\n     * @type {Object<string, number>|null}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>|null}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>|null}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (!listenersForType.includes(listener)) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    const isString = typeof event === 'string';\n    const type = isString ? event : event.type;\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n\n    const evt = isString ? new Event(event) : /** @type {Event} */ (event);\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const dispatching = this.dispatching_ || (this.dispatching_ = {});\n    const pendingRemovals =\n      this.pendingRemovals_ || (this.pendingRemovals_ = {});\n    if (!(type in dispatching)) {\n      dispatching[type] = 0;\n      pendingRemovals[type] = 0;\n    }\n    ++dispatching[type];\n    let propagate;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      if ('handleEvent' in listeners[i]) {\n        propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n          listeners[i]\n        ).handleEvent(evt);\n      } else {\n        propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n          listeners[i]\n        ).call(this, evt);\n      }\n      if (propagate === false || evt.propagationStopped) {\n        propagate = false;\n        break;\n      }\n    }\n    if (--dispatching[type] === 0) {\n      let pr = pendingRemovals[type];\n      delete pendingRemovals[type];\n      while (pr--) {\n        this.removeEventListener(type, VOID);\n      }\n      delete dispatching[type];\n    }\n    return propagate;\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return type\n      ? type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    if (!this.listeners_) {\n      return;\n    }\n    const listeners = this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n      if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n        // make listener a no-op, and remove later in #dispatchEvent()\n        listeners[index] = VOID;\n        ++this.pendingRemovals_[type];\n      } else {\n        listeners.splice(index, 1);\n        if (listeners.length === 0) {\n          delete this.listeners_[type];\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable.unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, thisArg, once) {\n  if (once) {\n    const originalListener = listener;\n    /**\n     * @param {Event|import('./events/Event.js').default} event The event\n     * @return {void|boolean} When the function returns `false`, event propagation will stop.\n     * @this {typeof target}\n     */\n    listener = function (event) {\n      target.removeEventListener(type, listener);\n      return originalListener.call(thisArg ?? this, event);\n    };\n  } else if (thisArg && thisArg !== target) {\n    listener = listener.bind(thisArg);\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, thisArg) {\n  return listen(target, type, listener, thisArg, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/Observable\n */\nimport EventType from './events/EventType.js';\nimport EventTarget from './events/Target.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type, listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return extends void ? void : Return[]} CombinedOnSignature\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/***\n * @template Return\n * @typedef {OnSignature<EventTypes, import(\"./events/Event.js\").default, Return> & CombinedOnSignature<EventTypes, Return>} ObservableOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    this.on =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onInternal\n      );\n\n    this.once =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onceInternal\n      );\n\n    this.un = /** @type {ObservableOnSignature<void>} */ (this.unInternal);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    }\n    return listen(this, /** @type {string} */ (type), listener);\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/util\n */\n\n/**\n * @return {never} Any return.\n */\nexport function abstract() {\n  throw new Error('Unimplemented abstract method.');\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = 'latest';\n","/**\n * @module ol/Object\n */\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport Event from './events/Event.js';\nimport {isEmpty} from './obj.js';\nimport {getUid} from './util.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable~Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [values] An object with key-value pairs.\n   */\n  constructor(values) {\n    super();\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ObjectOnSignature<void>}\n     */\n    this.un;\n\n    // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>|null}\n     */\n    this.values_ = null;\n\n    if (values !== undefined) {\n      this.setProperties(values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && Object.assign({}, this.values_)) || {};\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>?} Object.\n   */\n  getPropertiesInternal() {\n    return this.values_;\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = `change:${key}`;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  addChangeListener(key, listener) {\n    this.addEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  removeChangeListener(key, listener) {\n    this.removeEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, silent) {\n    for (const key in values) {\n      this.set(key, values[key], silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    Object.assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\nexport default BaseObject;\n","/**\n * @module ol/Collection\n */\nimport CollectionEventType from './CollectionEventType.js';\nimport BaseObject from './Object.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n * @template T\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {T} element Element.\n   * @param {number} index The index of the added or removed element.\n   */\n  constructor(type, element, index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {T}\n     * @api\n     */\n    this.element = element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = index;\n  }\n}\n\n/***\n * @template T\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:length', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'add'|'remove', CollectionEvent<T>, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types|\n *     'change:length'|'add'|'remove',Return>} CollectionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>} [array] Array.\n   * @param {Options} [options] Collection options.\n   */\n  constructor(array, options) {\n    super();\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {CollectionOnSignature<T, void>}\n     */\n    this.un;\n\n    options = options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = array ?? [];\n\n    if (this.unique_) {\n      for (let i = 1, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (index < 0 || index > this.getLength()) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index),\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    if (index < 0 || index >= this.getLength()) {\n      return undefined;\n    }\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      ),\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index >= n) {\n      this.insertAt(index, elem);\n      return;\n    }\n    if (index < 0) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem, index);\n    }\n    const prev = this.array_[index];\n    this.array_[index] = elem;\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      ),\n    );\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      ),\n    );\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number} [except] Optional index to ignore.\n   */\n  assertUnique_(elem, except) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      if (array[i] === elem && i !== except) {\n        throw new Error('Duplicate item added to a unique collection');\n      }\n    }\n  }\n}\n\nexport default Collection;\n","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {?import(\"./Map.js\").FrameState} [frameState] Frame state.\n   */\n  constructor(type, map, frameState) {\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./Map.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./Map.js\").FrameState}\n     * @api\n     */\n    this.frameState = frameState !== undefined ? frameState : null;\n  }\n}\n\nexport default MapEvent;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map browser event.\n * @template {PointerEvent|KeyboardEvent|WheelEvent} [EVENT=PointerEvent|KeyboardEvent|WheelEvent]\n */\nclass MapBrowserEvent extends MapEvent {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean} [dragging] Is the map currently being dragged?\n   * @param {import(\"./Map.js\").FrameState} [frameState] Frame state.\n   * @param {Array<PointerEvent>} [activePointers] Active pointers.\n   */\n  constructor(type, map, originalEvent, dragging, frameState, activePointers) {\n    super(type, map, frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n    this.originalEvent = originalEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     * @private\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     * @private\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = dragging !== undefined ? dragging : false;\n\n    /**\n     * @type {Array<PointerEvent>|undefined}\n     */\n    this.activePointers = activePointers;\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @api\n   * @override\n   */\n  preventDefault() {\n    super.preventDefault();\n    if ('preventDefault' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).preventDefault();\n    }\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @api\n   * @override\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    if ('stopPropagation' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\n    }\n  }\n}\n\nexport default MapBrowserEvent;\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n\n/***\n * @typedef {'singleclick'|'click'|'dblclick'|'pointerdrag'|'pointermove'} Types\n */\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.includes('safari') && !ua.includes('chrom');\n\n/**\n * https://bugs.webkit.org/show_bug.cgi?id=237906\n * @type {boolean}\n */\nexport const SAFARI_BUG_237906 =\n  SAFARI &&\n  (ua.includes('version/15.4') ||\n    /cpu (os|iphone os) 15_4 like mac os x/.test(ua));\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.includes('webkit') && !ua.includes('edge');\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.includes('macintosh');\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * createImageBitmap() is supported.\n * @type {boolean}\n */\nexport const CREATE_IMAGE_BITMAP = typeof createImageBitmap === 'function';\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    // @ts-ignore Ignore invalid event type '_'\n    window.addEventListener('_', null, options);\n    // @ts-ignore Ignore invalid event type '_'\n    window.removeEventListener('_', null, options);\n  } catch {\n    // passive not supported\n  }\n  return passive;\n})();\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/MapBrowserEventHandler\n */\n\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport EventType from './events/EventType.js';\nimport Target from './events/Target.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {PASSIVE_EVENT_LISTENERS} from './has.js';\nimport PointerEventType from './pointer/EventType.js';\n\nclass MapBrowserEventHandler extends Target {\n  /**\n   * @param {import(\"./Map.js\").default} map The map with the viewport to listen to events on.\n   * @param {number} [moveTolerance] The minimal distance the pointer must travel to trigger a move.\n   */\n  constructor(map, moveTolerance) {\n    super(map);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./Map.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {ReturnType<typeof setTimeout>}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n     * @type {boolean}\n     */\n    this.emulateClicks_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance === undefined ? 1 : moveTolerance;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {PointerEvent|null}\n     * @private\n     */\n    this.down_ = null;\n\n    const element = this.map_.getViewport();\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @private\n     */\n    this.activePointers_ = [];\n\n    /**\n     * @type {!Object<number, Event>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    /**\n     * @private\n     */\n    this.element_ = element;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_,\n      this,\n    );\n\n    /**\n     * @type {PointerEvent}\n     * @private\n     */\n    this.originalPointerMoveEvent_;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERMOVE,\n      this.relayMoveEvent_,\n      this,\n    );\n\n    /**\n     * @private\n     */\n    this.boundHandleTouchMove_ = this.handleTouchMove_.bind(this);\n\n    this.element_.addEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false,\n    );\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  emulateClick_(pointerEvent) {\n    let newEvent = new MapBrowserEvent(\n      MapBrowserEventType.CLICK,\n      this.map_,\n      pointerEvent,\n    );\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserEvent(\n        MapBrowserEventType.DBLCLICK,\n        this.map_,\n        pointerEvent,\n      );\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(() => {\n        this.clickTimeoutId_ = undefined;\n        const newEvent = new MapBrowserEvent(\n          MapBrowserEventType.SINGLECLICK,\n          this.map_,\n          pointerEvent,\n        );\n        this.dispatchEvent(newEvent);\n      }, 250);\n    }\n  }\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  updateActivePointers_(pointerEvent) {\n    const event = pointerEvent;\n    const id = event.pointerId;\n\n    if (\n      event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL\n    ) {\n      delete this.trackedTouches_[id];\n      for (const pointerId in this.trackedTouches_) {\n        if (this.trackedTouches_[pointerId].target !== event.target) {\n          // Some platforms assign a new pointerId when the target changes.\n          // If this happens, delete one tracked pointer. If there is more\n          // than one tracked pointer for the old target, it will be cleared\n          // by subsequent POINTERUP events from other pointers.\n          delete this.trackedTouches_[pointerId];\n          break;\n        }\n      }\n    } else if (\n      event.type == MapBrowserEventType.POINTERDOWN ||\n      event.type == MapBrowserEventType.POINTERMOVE\n    ) {\n      this.trackedTouches_[id] = event;\n    }\n    this.activePointers_ = Object.values(this.trackedTouches_);\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerUp_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERUP,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_,\n    );\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.preventDefault().\n    if (\n      this.emulateClicks_ &&\n      !newEvent.defaultPrevented &&\n      !this.dragging_ &&\n      this.isMouseActionButton_(pointerEvent)\n    ) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_.length === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  isMouseActionButton_(pointerEvent) {\n    return pointerEvent.button === 0;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerDown_(pointerEvent) {\n    this.emulateClicks_ = this.activePointers_.length === 0;\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERDOWN,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_,\n    );\n    this.dispatchEvent(newEvent);\n\n    this.down_ = new PointerEvent(pointerEvent.type, pointerEvent);\n    Object.defineProperty(this.down_, 'target', {\n      writable: false,\n      value: pointerEvent.target,\n    });\n\n    if (this.dragListenerKeys_.length === 0) {\n      const doc = this.map_.getOwnerDocument();\n      this.dragListenerKeys_.push(\n        listen(\n          doc,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_,\n          this,\n        ),\n        listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(\n          this.element_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_,\n          this,\n        ),\n      );\n      if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n        this.dragListenerKeys_.push(\n          listen(\n            this.element_.getRootNode(),\n            MapBrowserEventType.POINTERUP,\n            this.handlePointerUp_,\n            this,\n          ),\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerMove_(pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.updateActivePointers_(pointerEvent);\n      this.dragging_ = true;\n      const newEvent = new MapBrowserEvent(\n        MapBrowserEventType.POINTERDRAG,\n        this.map_,\n        pointerEvent,\n        this.dragging_,\n        undefined,\n        this.activePointers_,\n      );\n      this.dispatchEvent(newEvent);\n    }\n  }\n\n  /**\n   * Wrap and relay a pointermove event.\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  relayMoveEvent_(pointerEvent) {\n    this.originalPointerMoveEvent_ = pointerEvent;\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(\n      new MapBrowserEvent(\n        MapBrowserEventType.POINTERMOVE,\n        this.map_,\n        pointerEvent,\n        dragging,\n      ),\n    );\n  }\n\n  /**\n   * Flexible handling of a `touch-action: none` css equivalent: because calling\n   * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n   * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n   * when an interaction (currently `DragPan` handles the event.\n   * @param {TouchEvent} event Event.\n   * @private\n   */\n  handleTouchMove_(event) {\n    // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n    // may not be initialized yet when we get here on a platform without native pointer events,\n    // when elm-pep is used as pointer events polyfill.\n    const originalEvent = this.originalPointerMoveEvent_;\n    if (\n      (!originalEvent || originalEvent.defaultPrevented) &&\n      (typeof event.cancelable !== 'boolean' || event.cancelable === true)\n    ) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  isMoving_(pointerEvent) {\n    return (\n      this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) >\n        this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_\n    );\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    this.element_.removeEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n    );\n\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    this.element_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n\n  /**\n   * Triggered when loading of additional map data (tiles, images, features) starts.\n   * @event module:ol/MapEvent~MapEvent#loadstart\n   * @api\n   */\n  LOADSTART: 'loadstart',\n\n  /**\n   * Triggered when loading of additional map data has completed.\n   * @event module:ol/MapEvent~MapEvent#loadend\n   * @api\n   */\n  LOADEND: 'loadend',\n};\n\n/***\n * @typedef {'postrender'|'movestart'|'moveend'|'loadstart'|'loadend'} Types\n */\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view',\n};\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/asserts\n */\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {string} errorMessage Error message.\n */\nexport function assert(assertion, errorMessage) {\n  if (!assertion) {\n    throw new Error(errorMessage);\n  }\n}\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = /** @type {T} */ (elements.pop());\n      priorities[0] = /** @type {number} */ (priorities.pop());\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(\n      !(this.keyFunction_(element) in this.queuedElements_),\n      'Tried to enqueue an `element` that was already added to the queue',\n    );\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/TileQueue\n */\nimport TileState from './TileState.js';\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import('./tilecoord.js').TileCoord, number): number} PriorityFunction\n */\n\n/**\n * @typedef {[import('./Tile.js').default, string, import('./tilecoord.js').TileCoord, number]} TileQueueElement\n */\n\n/**\n * @extends PriorityQueue<TileQueueElement>}\n */\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      (element) => tilePriorityFunction.apply(null, element),\n      (element) => element[0].getKey(),\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {TileQueueElement} element Element.\n   * @return {boolean} The element was added to the queue.\n   * @override\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      state === TileState.LOADED ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      if (state !== TileState.ERROR) {\n        tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      }\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      const tile = this.dequeue()[0];\n      const tileKey = tile.getKey();\n      const state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./Map.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution,\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>|null} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n/**\n * Returns a number with a limited number of decimal digits.\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The input number with a limited number of decimal digits.\n */\nexport function toFixed(n, decimals) {\n  const factor = Math.pow(10, decimals);\n  return Math.round(n * factor) / factor;\n}\n\n/**\n * Rounds a number to the nearest integer value considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The nearest integer.\n */\nexport function round(n, decimals) {\n  return Math.round(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next smaller integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next smaller integer.\n */\nexport function floor(n, decimals) {\n  return Math.floor(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next bigger integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next bigger integer.\n */\nexport function ceil(n, decimals) {\n  return Math.ceil(toFixed(n, decimals));\n}\n\n/**\n * Wraps a number between some minimum and maximum values.\n * @param {number} n The number to wrap.\n * @param {number} min The minimum of the range (inclusive).\n * @param {number} max The maximum of the range (exclusive).\n * @return {number} The wrapped number.\n */\nexport function wrap(n, min, max) {\n  if (n >= min && n < max) {\n    return n;\n  }\n  const range = max - min;\n  return ((((n - min) % range) + range) % range) + min;\n}\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number|undefined} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, isMoving, centerShift) {\n      if (!center) {\n        return undefined;\n      }\n      if (!resolution && !onlyCenter) {\n        return center;\n      }\n      const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n      const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n      const shiftX = centerShift ? centerShift[0] : 0;\n      const shiftY = centerShift ? centerShift[1] : 0;\n      let minX = extent[0] + viewWidth / 2 + shiftX;\n      let maxX = extent[2] - viewWidth / 2 + shiftX;\n      let minY = extent[1] + viewHeight / 2 + shiftY;\n      let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n      // note: when zooming out of bounds, min and max values for x and y may\n      // end up inverted (min > max); this has to be accounted for\n      if (minX > maxX) {\n        minX = (maxX + minX) / 2;\n        maxX = minX;\n      }\n      if (minY > maxY) {\n        minY = (maxY + minY) / 2;\n        maxY = minY;\n      }\n\n      let x = clamp(center[0], minX, maxX);\n      let y = clamp(center[1], minY, maxY);\n\n      // during an interaction, allow some overscroll\n      if (isMoving && smooth && resolution) {\n        const ratio = 30 * resolution;\n        x +=\n          -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n        y +=\n          -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n      }\n\n      return [x, y];\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/extent\n */\nimport Relationship from './extent/Relationship.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Extent corner.\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} Corner\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [dest] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, dest) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, dest);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, dest) {\n  if (dest) {\n    dest[0] = extent[0] - value;\n    dest[1] = extent[1] - value;\n    dest[2] = extent[2] + value;\n    dest[3] = extent[3] + value;\n    return dest;\n  }\n  return [\n    extent[0] - value,\n    extent[1] - value,\n    extent[2] + value,\n    extent[3] + value,\n  ];\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [dest] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent.slice();\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, dest) {\n  if (dest) {\n    dest[0] = minX;\n    dest[1] = minY;\n    dest[2] = maxX;\n    dest[3] = maxY;\n    return dest;\n  }\n  return [minX, minY, maxX, maxY];\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(dest) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, dest);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, dest) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, dest);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  dest,\n) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === 'bottom-left') {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === 'bottom-right') {\n    coordinate = getBottomRight(extent);\n  } else if (corner === 'top-left') {\n    coordinate = getTopLeft(extent);\n  } else if (corner === 'top-right') {\n    coordinate = getTopRight(extent);\n  } else {\n    throw new Error('Invalid corner');\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, dest) {\n  const [x0, y0, x1, y1, x2, y2, x3, y3] = getRotatedViewport(\n    center,\n    resolution,\n    rotation,\n    size,\n  );\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    dest,\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @return {Array<number>} Linear ring representing the viewport.\n */\nexport function getRotatedViewport(center, resolution, rotation, size) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  return [\n    x - xCos + ySin,\n    y - xSin - yCos,\n    x - xCos - ySin,\n    y - xSin + yCos,\n    x + xCos - ySin,\n    y + xSin + yCos,\n    x + xCos + ySin,\n    y + xSin - yCos,\n    x - xCos + ySin,\n    y - xSin - yCos,\n  ];\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [dest] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, dest) {\n  const intersection = dest ? dest : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [dest] Destination extent.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, dest, stops) {\n  if (isEmpty(extent)) {\n    return createOrUpdateEmpty(dest);\n  }\n  let coordinates = [];\n  if (stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / stops,\n        extent[2] - (width * i) / stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / stops,\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, dest);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth,\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n\n/**\n * Fits the extent to the real world\n *\n * If the extent does not cross the anti meridian, this will return the extent in an array\n * If the extent crosses the anti meridian, the extent will be sliced, so each part fits within the\n * real world\n *\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @param {boolean} [multiWorld] Return all worlds\n * @return {Array<Extent>} The extent within the real world extent.\n */\nexport function wrapAndSliceX(extent, projection, multiWorld) {\n  if (projection.canWrapX()) {\n    const projectionExtent = projection.getExtent();\n\n    if (!isFinite(extent[0]) || !isFinite(extent[2])) {\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n\n    wrapX(extent, projection);\n    const worldWidth = getWidth(projectionExtent);\n\n    if (getWidth(extent) > worldWidth && !multiWorld) {\n      // the extent wraps around on itself\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n    if (extent[0] < projectionExtent[0]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0] + worldWidth, extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2], extent[3]],\n      ];\n    }\n    if (extent[2] > projectionExtent[2]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0], extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2] - worldWidth, extent[3]],\n      ];\n    }\n  }\n\n  return [extent];\n}\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo, toFixed} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an `xy`, `xyz` or `xyzm` coordinate.\n * Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY();\n *     const out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY(2);\n *     const out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const decimals = fractionDigits || 0;\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = toFixed(x - deg * 3600 - min * 60, decimals);\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  let hdms = deg + '\\u00b0';\n  if (min !== 0 || sec !== 0) {\n    hdms += ' ' + padNumber(min, 2) + '\\u2032';\n  }\n  if (sec !== 0) {\n    hdms += ' ' + padNumber(sec, 2, decimals) + '\\u2033';\n  }\n  if (normalizedDegrees !== 0) {\n    hdms += ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0);\n  }\n\n  return hdms;\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(fractionDigits));\n  }\n  return '';\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], fractionDigits)\n    );\n  }\n  return '';\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, fractionDigits) {\n  return format(coordinate, '{x}, {y}', fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    sourceExtentWidth = sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth,\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing.inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  }\n  return 1 - inAndOut(2 * (t - 0.5));\n}\n","/**\n * @module ol/console\n */\n\n/**\n * @typedef {'info'|'warn'|'error'|'none'} Level\n */\n\n/**\n * @type {Object<Level, number>}\n */\nconst levels = {\n  info: 1,\n  warn: 2,\n  error: 3,\n  none: 4,\n};\n\n/**\n * @type {number}\n */\nlet level = levels.info;\n\n/**\n * Set the logging level.  By default, the level is set to 'info' and all\n * messages will be logged.  Set to 'warn' to only display warnings and errors.\n * Set to 'error' to only display errors.  Set to 'none' to silence all messages.\n *\n * @param {Level} l The new level.\n */\nexport function setLevel(l) {\n  level = levels[l];\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function log(...args) {\n  if (level > levels.info) {\n    return;\n  }\n  console.log(...args); // eslint-disable-line no-console\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function warn(...args) {\n  if (level > levels.warn) {\n    return;\n  }\n  console.warn(...args); // eslint-disable-line no-console\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function error(...args) {\n  if (level > levels.error) {\n    return;\n  }\n  console.error(...args); // eslint-disable-line no-console\n}\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * @typedef {'radians' | 'degrees' | 'ft' | 'm' | 'pixels' | 'tile-pixels' | 'us-ft'} Units\n * Projection units.\n */\n\n/**\n * See http://duff.ess.washington.edu/data/raster/drg/docs/geotiff.txt\n * @type {Object<number, Units>}\n */\nconst unitByCode = {\n  '9001': 'm',\n  '9002': 'ft',\n  '9003': 'us-ft',\n  '9101': 'radians',\n  '9102': 'degrees',\n};\n\n/**\n * @param {number} code Unit code.\n * @return {Units} Units.\n */\nexport function fromCode(code) {\n  return unitByCode[code];\n}\n\n/**\n * @typedef {Object} MetersPerUnitLookup\n * @property {number} radians Radians\n * @property {number} degrees Degrees\n * @property {number} ft  Feet\n * @property {number} m Meters\n * @property {number} us-ft US feet\n */\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {MetersPerUnitLookup}\n * @api\n */\nexport const METERS_PER_UNIT = {\n  // use the radius of the Normal sphere\n  'radians': 6370997 / (2 * Math.PI),\n  'degrees': (2 * Math.PI * 6370997) / 360,\n  'ft': 0.3048,\n  'm': 1,\n  'us-ft': 1200 / 3937,\n};\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * The function is called with a `number` view resolution and a\n * {@link module:ol/coordinate~Coordinate} as arguments, and returns the `number` resolution\n * in projection units at the passed coordinate.\n * @typedef {function(number, import(\"../coordinate.js\").Coordinate):number} GetPointResolution\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").Units} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {GetPointResolution} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `number` view resolution and a {@link module:ol/coordinate~Coordinate} as arguments, and returns\n * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj.getPointResolution} function will be used.\n */\n\n/**\n * @classdesc\n * In most cases, you should not need to create instances of this class.\n * Instead, where projection information is required, you can use a string\n * projection code or identifier (e.g. `EPSG:4326`) instead of a projection\n * instance.\n *\n * The library includes support for transforming coordinates between the following\n * projections:\n *\n *  WGS 84 / Geographic - Using codes `EPSG:4326`, `CRS:84`, `urn:ogc:def:crs:EPSG:6.6:4326`,\n *    `urn:ogc:def:crs:OGC:1.3:CRS84`, `urn:ogc:def:crs:OGC:2:84`, `http://www.opengis.net/gml/srs/epsg.xml#4326`,\n *    or `urn:x-ogc:def:crs:EPSG:4326`\n *  WGS 84 / Spherical Mercator - Using codes `EPSG:3857`, `EPSG:102100`, `EPSG:102113`, `EPSG:900913`,\n *    `urn:ogc:def:crs:EPSG:6.18:3:3857`, or `http://www.opengis.net/gml/srs/epsg.xml#3857`\n *  WGS 84 / UTM zones - Using codes `EPSG:32601` through `EPSG:32660` for northern zones\n *    and `EPSG:32701` through `EPSG:32760` for southern zones. Note that the built-in UTM transforms\n *    are lower accuracy (with errors on the order of 0.1 m) than those that you might get in a\n *    library like [proj4js](https://github.com/proj4js/proj4js).\n *\n * For additional projection support, or to use higher accuracy transforms than the built-in ones, you can use\n * the [proj4js](https://github.com/proj4js/proj4js) library. With `proj4js`, after adding any new projection\n * definitions, call the {@link module:ol/proj/proj4.register} function.\n *\n * You can use the {@link module:ol/proj.get} function to retrieve a projection instance\n * for one of the registered projections.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").Units}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").Units} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {GetPointResolution|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").Units} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {GetPointResolution|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: 'm',\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / Math.cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/def/crs/EPSG/0/3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @param {number} [stride] Stride (default is `dimension`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, output, dimension, stride) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  stride = stride ?? dimension;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += stride) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @param {number} [stride] Stride (default is `dimension`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, output, dimension, stride) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  stride = stride ?? dimension;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += stride) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [axisOrientation] Axis orientation.\n   */\n  constructor(code, axisOrientation) {\n    super({\n      code: code,\n      units: 'degrees',\n      extent: EXTENT,\n      axisOrientation: axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/OGC/1.3/CRS84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/EPSG/0/4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default|null} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|null} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    return transforms[sourceCode][destinationCode];\n  }\n  return null;\n}\n","/**\n * @module ol/proj/utm\n */\n\n/**\n * Adapted from https://github.com/Turbo87/utm\n * Copyright (c) 2012-2017 Tobias Bieniek\n *\n * The functions here provide approximate transforms to and from UTM.\n * They are not appropriate for use beyond the validity extend of a UTM\n * zone, and the accuracy of the transform decreases toward the zone\n * edges.\n */\n\nimport {toDegrees, toRadians, wrap} from '../math.js';\nimport Projection from './Projection.js';\n\n/**\n * @typedef {Object} UTMZone\n * @property {number} number The zone number (1 - 60).\n * @property {boolean} north The northern hemisphere.\n */\n\nconst K0 = 0.9996;\n\nconst E = 0.00669438;\nconst E2 = E * E;\nconst E3 = E2 * E;\nconst E_P2 = E / (1 - E);\n\nconst SQRT_E = Math.sqrt(1 - E);\nconst _E = (1 - SQRT_E) / (1 + SQRT_E);\nconst _E2 = _E * _E;\nconst _E3 = _E2 * _E;\nconst _E4 = _E3 * _E;\nconst _E5 = _E4 * _E;\n\nconst M1 = 1 - E / 4 - (3 * E2) / 64 - (5 * E3) / 256;\nconst M2 = (3 * E) / 8 + (3 * E2) / 32 + (45 * E3) / 1024;\nconst M3 = (15 * E2) / 256 + (45 * E3) / 1024;\nconst M4 = (35 * E3) / 3072;\n\nconst P2 = (3 / 2) * _E - (27 / 32) * _E3 + (269 / 512) * _E5;\nconst P3 = (21 / 16) * _E2 - (55 / 32) * _E4;\nconst P4 = (151 / 96) * _E3 - (417 / 128) * _E5;\nconst P5 = (1097 / 512) * _E4;\n\nconst R = 6378137;\n\n/**\n * @param {number} easting Easting value of coordinate.\n * @param {number} northing Northing value of coordinate.\n * @param {UTMZone} zone The UTM zone.\n * @return {import(\"../coordinate.js\").Coordinate} The transformed coordinate.\n */\nfunction toLonLat(easting, northing, zone) {\n  const x = easting - 500000;\n  const y = zone.north ? northing : northing - 10000000;\n\n  const m = y / K0;\n  const mu = m / (R * M1);\n\n  const pRad =\n    mu +\n    P2 * Math.sin(2 * mu) +\n    P3 * Math.sin(4 * mu) +\n    P4 * Math.sin(6 * mu) +\n    P5 * Math.sin(8 * mu);\n\n  const pSin = Math.sin(pRad);\n  const pSin2 = pSin * pSin;\n\n  const pCos = Math.cos(pRad);\n\n  const pTan = pSin / pCos;\n  const pTan2 = pTan * pTan;\n  const pTan4 = pTan2 * pTan2;\n\n  const epSin = 1 - E * pSin2;\n  const epSinSqrt = Math.sqrt(1 - E * pSin2);\n\n  const n = R / epSinSqrt;\n  const r = (1 - E) / epSin;\n\n  const c = E_P2 * pCos ** 2;\n  const c2 = c * c;\n\n  const d = x / (n * K0);\n  const d2 = d * d;\n  const d3 = d2 * d;\n  const d4 = d3 * d;\n  const d5 = d4 * d;\n  const d6 = d5 * d;\n\n  const latitude =\n    pRad -\n    (pTan / r) *\n      (d2 / 2 - (d4 / 24) * (5 + 3 * pTan2 + 10 * c - 4 * c2 - 9 * E_P2)) +\n    (d6 / 720) * (61 + 90 * pTan2 + 298 * c + 45 * pTan4 - 252 * E_P2 - 3 * c2);\n\n  let longitude =\n    (d -\n      (d3 / 6) * (1 + 2 * pTan2 + c) +\n      (d5 / 120) * (5 - 2 * c + 28 * pTan2 - 3 * c2 + 8 * E_P2 + 24 * pTan4)) /\n    pCos;\n\n  longitude = wrap(\n    longitude + toRadians(zoneToCentralLongitude(zone.number)),\n    -Math.PI,\n    Math.PI,\n  );\n\n  return [toDegrees(longitude), toDegrees(latitude)];\n}\n\nconst MIN_LATITUDE = -80;\nconst MAX_LATITUDE = 84;\nconst MIN_LONGITUDE = -180;\nconst MAX_LONGITUDE = 180;\n\n/**\n * @param {number} longitude The longitude.\n * @param {number} latitude The latitude.\n * @param {UTMZone} zone The UTM zone.\n * @return {import('../coordinate.js').Coordinate} The UTM coordinate.\n */\nfunction fromLonLat(longitude, latitude, zone) {\n  longitude = wrap(longitude, MIN_LONGITUDE, MAX_LONGITUDE);\n\n  if (latitude < MIN_LATITUDE) {\n    latitude = MIN_LATITUDE;\n  } else if (latitude > MAX_LATITUDE) {\n    latitude = MAX_LATITUDE;\n  }\n\n  const latRad = toRadians(latitude);\n  const latSin = Math.sin(latRad);\n  const latCos = Math.cos(latRad);\n\n  const latTan = latSin / latCos;\n  const latTan2 = latTan * latTan;\n  const latTan4 = latTan2 * latTan2;\n\n  const lonRad = toRadians(longitude);\n  const centralLon = zoneToCentralLongitude(zone.number);\n  const centralLonRad = toRadians(centralLon);\n\n  const n = R / Math.sqrt(1 - E * latSin ** 2);\n  const c = E_P2 * latCos ** 2;\n\n  const a = latCos * wrap(lonRad - centralLonRad, -Math.PI, Math.PI);\n  const a2 = a * a;\n  const a3 = a2 * a;\n  const a4 = a3 * a;\n  const a5 = a4 * a;\n  const a6 = a5 * a;\n\n  const m =\n    R *\n    (M1 * latRad -\n      M2 * Math.sin(2 * latRad) +\n      M3 * Math.sin(4 * latRad) -\n      M4 * Math.sin(6 * latRad));\n\n  const easting =\n    K0 *\n      n *\n      (a +\n        (a3 / 6) * (1 - latTan2 + c) +\n        (a5 / 120) * (5 - 18 * latTan2 + latTan4 + 72 * c - 58 * E_P2)) +\n    500000;\n\n  let northing =\n    K0 *\n    (m +\n      n *\n        latTan *\n        (a2 / 2 +\n          (a4 / 24) * (5 - latTan2 + 9 * c + 4 * c ** 2) +\n          (a6 / 720) * (61 - 58 * latTan2 + latTan4 + 600 * c - 330 * E_P2)));\n\n  if (!zone.north) {\n    northing += 10000000;\n  }\n\n  return [easting, northing];\n}\n\n/**\n * @param {number} zone The zone number.\n * @return {number} The central longitude in degrees.\n */\nfunction zoneToCentralLongitude(zone) {\n  return (zone - 1) * 6 - 180 + 3;\n}\n\n/**\n * @type {Array<RegExp>}\n */\nconst epsgRegExes = [\n  /^EPSG:(\\d+)$/,\n  /^urn:ogc:def:crs:EPSG::(\\d+)$/,\n  /^http:\\/\\/www\\.opengis\\.net\\/def\\/crs\\/EPSG\\/0\\/(\\d+)$/,\n];\n\n/**\n * @param {string} code The projection code.\n * @return {UTMZone|null} The UTM zone info (or null if not UTM).\n */\nexport function zoneFromCode(code) {\n  let epsgId = 0;\n  for (const re of epsgRegExes) {\n    const match = code.match(re);\n    if (match) {\n      epsgId = parseInt(match[1]);\n      break;\n    }\n  }\n  if (!epsgId) {\n    return null;\n  }\n\n  let number = 0;\n  let north = false;\n  if (epsgId > 32700 && epsgId < 32761) {\n    number = epsgId - 32700;\n  } else if (epsgId > 32600 && epsgId < 32661) {\n    north = true;\n    number = epsgId - 32600;\n  }\n  if (!number) {\n    return null;\n  }\n\n  return {number, north};\n}\n\n/**\n * @param {function(number, number, UTMZone): import('../coordinate.js').Coordinate} transformer The transformer.\n * @param {UTMZone} zone The UTM zone.\n * @return {import('../proj.js').TransformFunction} The transform function.\n */\nfunction makeTransformFunction(transformer, zone) {\n  return function (input, output, dimension, stride) {\n    const length = input.length;\n    dimension = dimension > 1 ? dimension : 2;\n    stride = stride ?? dimension;\n    if (!output) {\n      if (dimension > 2) {\n        output = input.slice();\n      } else {\n        output = new Array(length);\n      }\n    }\n    for (let i = 0; i < length; i += stride) {\n      const x = input[i];\n      const y = input[i + 1];\n      const coord = transformer(x, y, zone);\n      output[i] = coord[0];\n      output[i + 1] = coord[1];\n    }\n    return output;\n  };\n}\n\n/**\n * @param {string} code The projection code.\n * @return {import('./Projection.js').default|null} A projection or null if unable to create one.\n */\nexport function makeProjection(code) {\n  const zone = zoneFromCode(code);\n  if (!zone) {\n    return null;\n  }\n  return new Projection({code, units: 'm'});\n}\n\n/**\n * @param {import('./Projection.js').default} projection The projection.\n * @return {import('../proj.js').Transforms|null} The transforms lookup or null if unable to handle projection.\n */\nexport function makeTransforms(projection) {\n  const zone = zoneFromCode(projection.getCode());\n  if (!zone) {\n    return null;\n  }\n\n  return {\n    forward: makeTransformFunction(fromLonLat, zone),\n    inverse: makeTransformFunction(toLonLat, zone),\n  };\n}\n","/**\n * @module ol/sphere\n */\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint': {\n      break;\n    }\n    case 'LineString':\n    case 'LinearRing': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case 'MultiLineString':\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint':\n    case 'LineString':\n    case 'MultiLineString':\n    case 'LinearRing': {\n      break;\n    }\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing),\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat),\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * a list of {@link module:ol/proj/Projection~Projection}\n * objects, one for each projection supported by the application\n * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj.addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection~Projection} object for the new projection and add it with\n * {@link module:ol/proj.addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj.addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection~Projection} with\n * {@link module:ol/proj.addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport {warn} from './console.js';\nimport {equals, getWorldsAway} from './coordinate.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport Projection from './proj/Projection.js';\nimport {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {\n  makeProjection as makeUTMProjection,\n  makeTransforms as makeUTMTransforms,\n} from './proj/utm.js';\nimport {getDistance} from './sphere.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection~Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * @typedef {Object} Transforms\n * @property {TransformFunction} forward The forward transform (from geographic).\n * @property {TransformFunction} inverse The inverse transform (to geographic).\n */\n\n/**\n * @type {Array<function(Projection): Transforms|null>}\n */\nconst transformFactories = [makeUTMTransforms];\n\n/**\n * @type {Array<function(string): Projection|null>}\n */\nconst projectionFactories = [makeUTMProjection];\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @callback TransformFunction\n * @param {Array<number>} input\n * @param {Array<number>} [output]\n * @param {number} [dimension]\n * @param {number} [stride]\n * @return {Array<number>}\n *\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\nlet showCoordinateWarning = true;\n\n/**\n * @param {boolean} [disable] Disable console info about `useGeographic()`\n */\nexport function disableCoordinateWarning(disable) {\n  const hide = disable === undefined ? true : disable;\n  showCoordinateWarning = !hide;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, output) {\n  if (output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    output = output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, output) {\n  if (output !== undefined && input !== output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    input = output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection|null} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  if (!(typeof projectionLike === 'string')) {\n    return projectionLike;\n  }\n  const projection = getProj(projectionLike);\n  if (projection) {\n    return projection;\n  }\n  for (const makeProjection of projectionFactories) {\n    const projection = makeProjection(projectionLike);\n    if (projection) {\n      return projection;\n    }\n  }\n  return null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the `point` pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").Units} [units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (units && units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[units];\n      }\n    }\n  } else {\n    const projUnits = projection.getUnits();\n    if ((projUnits == 'degrees' && !units) || units == 'degrees') {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326'),\n      );\n      if (!toEPSG4326 && projUnits !== 'degrees') {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = units\n        ? METERS_PER_UNIT[units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform,\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  }\n  if (typeof projection === 'string') {\n    return get(projection);\n  }\n  return /** @type {Projection} */ (projection);\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [output] Output.\n     * @param {number} [dimension] Dimensions that should be transformed.\n     * @param {number} [stride] Stride.\n     * @return {Array<number>} Output.\n     */\n    function (input, output, dimension, stride) {\n      const length = input.length;\n      dimension = dimension !== undefined ? dimension : 2;\n      stride = stride ?? dimension;\n      output = output !== undefined ? output : new Array(length);\n      for (let i = 0; i < length; i += stride) {\n        const point = coordTransform(input.slice(i, i + dimension));\n        const pointLength = point.length;\n        for (let j = 0, jj = stride; j < jj; ++j) {\n          output[i + j] = j >= pointLength ? input[i + j] : point[j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}. If the transform function can only\n *     transform less dimensions than the input coordinate, it is supposeed to return a coordinate\n *     with only the length it can transform. The other dimensions will be taken unchanged from the\n *     source.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward),\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse),\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, projection) {\n  disableCoordinateWarning();\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    projection !== undefined ? projection : 'EPSG:3857',\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, projection) {\n  const lonLat = transform(\n    coordinate,\n    projection !== undefined ? projection : 'EPSG:3857',\n    'EPSG:4326',\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  }\n  const transformFunc = getTransformFromProjections(projection1, projection2);\n  return transformFunc === cloneTransform && equalUnits;\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} source Source Projection object.\n * @param {Projection} destination Destination Projection\n *     object.\n * @return {TransformFunction|null} Transform function.\n */\nexport function getTransformFromProjections(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (transformFunc) {\n    return transformFunc;\n  }\n\n  /**\n   * @type {Transforms|null}\n   */\n  let sourceTransforms = null;\n\n  /**\n   * @type {Transforms|null}\n   */\n  let destinationTransforms = null;\n\n  // lazily add projections if we have supported transforms\n  for (const makeTransforms of transformFactories) {\n    if (!sourceTransforms) {\n      sourceTransforms = makeTransforms(source);\n    }\n    if (!destinationTransforms) {\n      destinationTransforms = makeTransforms(destination);\n    }\n  }\n\n  if (!sourceTransforms && !destinationTransforms) {\n    return null;\n  }\n\n  const intermediateCode = 'EPSG:4326';\n  if (!destinationTransforms) {\n    const toDestination = getTransformFunc(intermediateCode, destinationCode);\n    if (toDestination) {\n      transformFunc = composeTransformFuncs(\n        sourceTransforms.inverse,\n        toDestination,\n      );\n    }\n  } else if (!sourceTransforms) {\n    const fromSource = getTransformFunc(sourceCode, intermediateCode);\n    if (fromSource) {\n      transformFunc = composeTransformFuncs(\n        fromSource,\n        destinationTransforms.forward,\n      );\n    }\n  } else {\n    transformFunc = composeTransformFuncs(\n      sourceTransforms.inverse,\n      destinationTransforms.forward,\n    );\n  }\n\n  if (transformFunc) {\n    addProjection(source);\n    addProjection(destination);\n    addTransformFunc(source, destination, transformFunc);\n  }\n\n  return transformFunc;\n}\n\n/**\n * @param {TransformFunction} t1 The first transform function.\n * @param {TransformFunction} t2 The second transform function.\n * @return {TransformFunction} The composed transform function.\n */\nfunction composeTransformFuncs(t1, t2) {\n  return function (input, output, dimensions, stride) {\n    output = t1(input, output, dimensions, stride);\n    return t2(output, output, dimensions, stride);\n  };\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original). If there\n * is no available transform between the two projection, the function will throw\n * an error.\n *\n * See {@link module:ol/proj.transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  if (!transformFunc) {\n    const sourceCode = get(source).getCode();\n    const destinationCode = get(destination).getCode();\n    throw new Error(\n      `No transform available between ${sourceCode} and ${destinationCode}`,\n    );\n  }\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection,\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection,\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {Projection|null}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @param {ProjectionLike} projection The user projection.\n * @api\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.\n * @api\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * @return {Projection|null} The user projection (or null if not set).\n * @api\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @api\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    if (\n      showCoordinateWarning &&\n      !equals(coordinate, [0, 0]) &&\n      coordinate[0] >= -180 &&\n      coordinate[0] <= 180 &&\n      coordinate[1] >= -90 &&\n      coordinate[1] <= 90\n    ) {\n      showCoordinateWarning = false;\n      warn(\n        'Call useGeographic() from ol/proj once to work with [longitude, latitude] coordinates.',\n      );\n    }\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in input projection units per pixel.\n * @param {ProjectionLike} sourceProjection The input projection.\n * @return {number} Resolution in user projection units per pixel.\n */\nexport function toUserResolution(resolution, sourceProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceMetersPerUnit = get(sourceProjection).getMetersPerUnit();\n  const userMetersPerUnit = userProjection.getMetersPerUnit();\n  return sourceMetersPerUnit && userMetersPerUnit\n    ? (resolution * sourceMetersPerUnit) / userMetersPerUnit\n    : resolution;\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in user projection units per pixel.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {number} Resolution in destination projection units per pixel.\n */\nexport function fromUserResolution(resolution, destProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const destMetersPerUnit = get(destProjection).getMetersPerUnit();\n  const userMetersPerUnit = userProjection.getMetersPerUnit();\n  return destMetersPerUnit && userMetersPerUnit\n    ? (resolution * userMetersPerUnit) / destMetersPerUnit\n    : resolution;\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destination).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destination).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      coord = coord.slice(0);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        coord[0] = coord[0] - worldsAway * sourceExtentWidth;\n      }\n      coord[0] = clamp(coord[0], sourceExtent[0], sourceExtent[2]);\n      coord[1] = clamp(coord[1], sourceExtent[1], sourceExtent[3]);\n      transformed = transform(coord);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326,\n  );\n}\n\naddCommon();\n","/**\n * @module ol/transform\n */\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 'Transformation matrix cannot be inverted');\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * @type {Array}\n */\nconst matrixPrecision = [1e5, 1e5, 1e5, 1e5, 2, 2];\n\n/**\n * A matrix string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  const transformString = 'matrix(' + mat.join(', ') + ')';\n  return transformString;\n}\n\n/**\n * Create a transform from a CSS transform matrix string.\n * @param {string} cssTransform The CSS string to parse.\n * @return {!Transform} The transform.\n */\nexport function fromString(cssTransform) {\n  const values = cssTransform.substring(7, cssTransform.length - 1).split(',');\n  return values.map(parseFloat);\n}\n\n/**\n * Compare two matrices for equality.\n * @param {!string} cssTransform1 A CSS transform matrix string.\n * @param {!string} cssTransform2 A CSS transform matrix string.\n * @return {boolean} The two matrices are equal.\n */\nexport function equivalent(cssTransform1, cssTransform2) {\n  const mat1 = fromString(cssTransform1);\n  const mat2 = fromString(cssTransform2);\n  for (let i = 0; i < 6; ++i) {\n    if (Math.round((mat1[i] - mat2[i]) * matrixPrecision[i]) !== 0) {\n      return false;\n    }\n  }\n  return true;\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {memoizeOne} from '../functions.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {abstract} from '../util.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @typedef {'XY' | 'XYZ' | 'XYM' | 'XYZM'} GeometryLayout\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available.\n */\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString' | 'MultiPolygon' | 'GeometryCollection' | 'Circle'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, or `'Circle'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/** @type {import('../coordinate.js').Coordinate} */\nconst tmpPoint = [NaN, NaN];\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(\n      (revision, squaredTolerance, transform) => {\n        if (!transform) {\n          return this.getSimplifiedGeometry(squaredTolerance);\n        }\n        const clone = this.clone();\n        clone.applyTransform(transform);\n        return clone.getSimplifiedGeometry(squaredTolerance);\n      },\n    );\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      transform,\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return this.closestPointXY(x, y, tmpPoint, Number.MIN_VALUE) === 0;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, closestPoint) {\n    closestPoint = closestPoint ? closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {Type} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {this} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == 'tile-pixels'\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0,\n            );\n            const transformed = transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates,\n            );\n            const projTransform = getTransform(sourceProj, destination);\n            if (projTransform) {\n              return projTransform(transformed, transformed, stride);\n            }\n            return transformed;\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @param {number} [destinationStride] Stride of destination coordinates; if unspecified, assumed to be 2.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  dest,\n  destinationStride,\n) {\n  dest = dest ? dest : [];\n  destinationStride = destinationStride ? destinationStride : 2;\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n\n    for (let k = 2; k < destinationStride; k++) {\n      dest[i++] = flatCoordinates[j + k];\n    }\n  }\n\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  dest,\n) {\n  dest = dest ? dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  dest,\n) {\n  dest = dest ? dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  dest,\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {abstract} from '../util.js';\nimport Geometry from './Geometry.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./Geometry.js\").GeometryLayout}\n     */\n    this.layout = 'XY';\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @override\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*> | null} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride,\n    );\n  }\n\n  /**\n   * Return the {@link import(\"./Geometry.js\").GeometryLayout layout} of the geometry.\n   * @return {import(\"./Geometry.js\").GeometryLayout} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @override\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry =\n      this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    }\n    // Simplification did not actually remove any coordinates.  We now know\n    // that any calls to getSimplifiedGeometry with a squaredTolerance less\n    // than or equal to the current squaredTolerance will also not have any\n    // effect.  This allows us to short circuit simplification (saving CPU\n    // cycles) and prevents the cache of simplified geometries from filling\n    // up with useless identical copies of this geometry (saving memory).\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  setCoordinates(coordinates, layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = 'XY';\n          this.stride = 2;\n          return;\n        }\n        coordinates = /** @type {Array<unknown>} */ (coordinates[0]);\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   * @override\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(\n        this.flatCoordinates,\n        this.flatCoordinates,\n        this.layout.startsWith('XYZ') ? 3 : 2,\n        this.stride,\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   * @override\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates,\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   * @override\n   */\n  scale(sx, sy, anchor) {\n    if (sy === undefined) {\n      sy = sx;\n    }\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates,\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   * @override\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates,\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n */\nexport function getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = 'XY';\n  } else if (stride == 3) {\n    layout = 'XYZ';\n  } else if (stride == 4) {\n    layout = 'XYZM';\n  }\n  return /** @type {import(\"./Geometry.js\").GeometryLayout} */ (layout);\n}\n\n/**\n * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == 'XY') {\n    stride = 2;\n  } else if (layout == 'XYZ' || layout == 'XYM') {\n    stride = 3;\n  } else if (layout == 'XYZM') {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  }\n  const stride = simpleGeometry.getStride();\n  return transform2D(\n    flatCoordinates,\n    0,\n    flatCoordinates.length,\n    stride,\n    transform,\n    dest,\n  );\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  const x0 = flatCoordinates[end - stride];\n  const y0 = flatCoordinates[end - stride + 1];\n  let dx1 = 0;\n  let dy1 = 0;\n  for (; offset < end; offset += stride) {\n    const dx2 = flatCoordinates[offset] - x0;\n    const dy2 = flatCoordinates[offset + 1] - y0;\n    twiceArea += dy1 * dx2 - dx1 * dy2;\n    dx1 = dx2;\n    dy1 = dy2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint,\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t,\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint,\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1],\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint,\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1,\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint,\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint,\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint,\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint,\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint,\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride,\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  ends,\n) {\n  ends = ends ? ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride,\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  endss,\n) {\n  endss = endss ? endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i],\n    );\n    if (ends.length === 0) {\n      ends[0] = offset;\n    }\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  coordinates,\n) {\n  coordinates = coordinates !== undefined ? coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  coordinatess,\n) {\n  coordinatess = coordinatess !== undefined ? coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i],\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  coordinatesss,\n) {\n  coordinatesss = coordinatesss !== undefined ? coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] =\n      ends.length === 1 && ends[0] === offset\n        ? []\n        : inflateCoordinatesArray(\n            flatCoordinates,\n            offset,\n            ends,\n            stride,\n            coordinatesss[i],\n          );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  simplifiedFlatCoordinates,\n) {\n  simplifiedFlatCoordinates =\n    simplifiedFlatCoordinates !== undefined ? simplifiedFlatCoordinates : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0,\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds,\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds,\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/LinearRing\n */\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   * @override\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n    );\n    return new LinearRing(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'LinearRing';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/Point\n */\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {squaredDistance as squaredDx} from '../math.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {deflateCoordinate} from './flat/deflate.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    this.setCoordinates(coordinates, layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1],\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates() {\n    return this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @override\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'Point';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent,\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1],\n      );\n    },\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y,\n) {\n  // https://web.archive.org/web/20210504233957/http://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y,\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y,\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {ascending} from '../../array.js';\nimport {linearRingsContainsXY} from './contains.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  dest,\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(ascending);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (dest) {\n    dest.push(pointX, y, maxSegmentLength);\n    return dest;\n  }\n  return [pointX, y, maxSegmentLength];\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters,\n) {\n  /** @type {Array<number>} */\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints,\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\nimport {forEach as forEachSegment} from './segments.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @param {import('../../extent.js').Extent} [coordinatesExtent] Coordinates extent\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent,\n  coordinatesExtent,\n) {\n  coordinatesExtent =\n    coordinatesExtent ??\n    extendFlatCoordinates(createEmpty(), flatCoordinates, offset, end, stride);\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (\n    (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) ||\n    (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3])\n  ) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    },\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent,\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1],\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3],\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1],\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3],\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent,\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent,\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent,\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  let ret;\n  offset += stride;\n  for (; offset < end; offset += stride) {\n    ret = callback(\n      flatCoordinates.slice(offset - stride, offset),\n      flatCoordinates.slice(offset, offset + stride),\n    );\n    if (ret) {\n      return ret;\n    }\n  }\n  return false;\n}\n\n/**\n * Calculate the intersection point of two line segments.\n * Reference: https://stackoverflow.com/a/72474223/2389327\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} segment1 The first line segment as an array of two points.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} segment2 The second line segment as an array of two points.\n * @return {import(\"../../coordinate.js\").Coordinate|undefined} The intersection point or `undefined` if no intersection.\n */\nexport function getIntersectionPoint(segment1, segment2) {\n  const [a, b] = segment1;\n  const [c, d] = segment2;\n  const t =\n    ((a[0] - c[0]) * (c[1] - d[1]) - (a[1] - c[1]) * (c[0] - d[0])) /\n    ((a[0] - b[0]) * (c[1] - d[1]) - (a[1] - b[1]) * (c[0] - d[0]));\n  const u =\n    ((a[0] - c[0]) * (a[1] - b[1]) - (a[1] - c[1]) * (a[0] - b[0])) /\n    ((a[0] - b[0]) * (c[1] - d[1]) - (a[1] - b[1]) * (c[0] - d[0]));\n\n  // Check if lines actually intersect\n  if (0 <= t && t <= 1 && 0 <= u && u <= 1) {\n    return [a[0] + t * (b[0] - a[0]), a[1] + t * (b[1] - a[1])];\n  }\n  return undefined;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean|undefined} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right,\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (!linearRingsAreOriented(flatCoordinates, offset, ends, stride, right)) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right,\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      right,\n    );\n  }\n  return offset;\n}\n\n/**\n * Return a two-dimensional endss\n * @param {Array<number>} flatCoordinates Flat coordinates\n * @param {Array<number>} ends Linear ring end indexes\n * @return {Array<Array<number>>} Two dimensional endss array that can\n * be used to construct a MultiPolygon\n */\nexport function inflateEnds(flatCoordinates, ends) {\n  const endss = [];\n  let offset = 0;\n  let prevEndIndex = 0;\n  let startOrientation;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    // classifies an array of rings into polygons with outer rings and holes\n    const orientation = linearRingIsClockwise(flatCoordinates, offset, end, 2);\n    if (startOrientation === undefined) {\n      startOrientation = orientation;\n    }\n    if (orientation === startOrientation) {\n      endss.push(ends.slice(prevEndIndex, i + 1));\n    } else {\n      if (endss.length === 0) {\n        continue;\n      }\n      endss[endss.length - 1].push(ends[prevEndIndex]);\n    }\n    prevEndIndex = i + 1;\n    offset = end;\n  }\n  return endss;\n}\n","/**\n * @module ol/geom/Polygon\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, getCenter, isEmpty} from '../extent.js';\nimport {modulo} from '../math.js';\nimport {offset as sphereOffset} from '../sphere.js';\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {quantizeArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n      this.ends_ = ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice(),\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   * @override\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y,\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0,\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return /** @type {import(\"../coordinate.js\").Coordinate} */ (\n      this.flatInteriorPoint_\n    );\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), 'XYM');\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing|null} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index],\n      ),\n      this.layout,\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout,\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride,\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.orientedFlatCoordinates_);\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   * @override\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds,\n    );\n    return new Polygon(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'Polygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_,\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, n, sphereRadius) {\n  n = n ? n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, sphereRadius),\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  if (isEmpty(extent)) {\n    throw new Error('Cannot create polygon from empty extent');\n  }\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [sides] Number of sides of the polygon. Default is 32.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, sides, angle) {\n  sides = sides ? sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = angle ? angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {linearFindNearest} from './array.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent,\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  smooth,\n  maxExtent,\n  showFullExtent,\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent,\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution,\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [minResolution] Minimum resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent,\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  minResolution = minResolution !== undefined ? minResolution : 0;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent,\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution,\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance,\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset,\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent,\n) {\n  smooth = smooth !== undefined ? smooth : true;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent,\n            )\n          : maxResolution;\n\n        if (!smooth || !isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution,\n        );\n      }\n      return undefined;\n    }\n  );\n}\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  }\n  return undefined;\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  }\n  return undefined;\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} [tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(tolerance) {\n  const t = tolerance === undefined ? toRadians(5) : tolerance;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving || rotation === undefined) {\n        return rotation;\n      }\n\n      if (Math.abs(rotation) <= t) {\n        return 0;\n      }\n      return rotation;\n    }\n  );\n}\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {linearFindNearest} from './array.js';\nimport {assert} from './asserts.js';\nimport {createExtent, none as centerNone} from './centerconstraint.js';\nimport {\n  add as addCoordinate,\n  equals,\n  equals as coordinatesEqual,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {easeOut, inAndOut} from './easing.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {VOID} from './functions.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\nimport {clamp, modulo} from './math.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  disableCoordinateWarning,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {\n  createMinMaxResolution,\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to\n * fit the extent into. Defaults to the size of the map the view is associated with.\n * If no map or multiple maps are connected to the view, provide the desired box size\n * (e.g. `map.getSize()`).\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions that determine the\n * zoom levels if specified. The index in the array corresponds to the zoom level,\n * therefore the resolution values have to be in descending order. It also constrains\n * the resolution by the minimum and maximum value. If set the `maxResolution`,\n * `minResolution`, `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center (in view projection coordinates).\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {import(\"./coordinate.js\").Coordinate} [nextCenter] The next center during an animation series.\n * @property {number} [nextResolution] The next resolution during an animation series.\n * @property {number} [nextRotation] The next rotation during an animation series.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Like {@link import(\"./Map.js\").FrameState}, but just `viewState` and `extent`.\n * @typedef {Object} ViewStateLayerStateExtent\n * @property {State} viewState View state.\n * @property {import(\"./extent.js\").Extent} extent Extent (in user projection coordinates).\n * @property {Array<import(\"./layer/Layer.js\").State>} [layerStatesArray] Layer states.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:center'|'change:resolution'|'change:rotation'} ViewObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<ViewObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|ViewObjectEventTypes, Return>} ViewOnSignature\n */\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Web Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [options] View options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ViewOnSignature<void>}\n     */\n    this.un;\n\n    options = Object.assign({}, options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.nextCenter_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextResolution_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.projection) {\n      disableCoordinateWarning();\n    }\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    const properties = Object.assign({}, options);\n    for (const key in ViewProperty) {\n      delete properties[key];\n    }\n    this.setProperties(properties, true);\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null,\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenterInternal();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = this.getProperties();\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return Object.assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = Object.assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection(),\n        );\n      }\n      if (options.anchor) {\n        options = Object.assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection(),\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n\n    let i = 0;\n    for (; i < animationCount && !this.isDef(); ++i) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[i];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      } else if (state.resolution) {\n        this.setResolution(state.resolution);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n    }\n    if (i === animationCount) {\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n    this.nextCenter_ = null;\n    this.nextResolution_ = NaN;\n    this.nextRotation_ = NaN;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          this.nextCenter_ = animation.targetCenter;\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true,\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor,\n            );\n          }\n          this.nextResolution_ = animation.targetResolution;\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true,\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor,\n            );\n          }\n          this.nextRotation_ = animation.targetRotation;\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        this.nextCenter_ = null;\n        this.nextResolution_ = NaN;\n        this.nextRotation_ = NaN;\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this),\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(rotation) {\n    const size = this.viewportSize_;\n    if (rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(rotation)) + Math.abs(h * Math.sin(rotation)),\n        Math.abs(w * Math.sin(rotation)) + Math.abs(h * Math.cos(rotation)),\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(size) {\n    this.viewportSize_ = Array.isArray(size) ? size.slice() : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(ViewProperty.CENTER)\n    );\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.get('constrainResolution');\n  }\n\n  /**\n   * @param {Array<number>} [hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(hints) {\n    if (hints !== undefined) {\n      hints[0] = this.hints_[0];\n      hints[1] = this.hints_[1];\n      return hints;\n    }\n    return this.hints_.slice();\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed box size.\n   * @param {import(\"./size.js\").Size} [size] The pixel dimensions of the box\n   * into which the calculated extent should fit. Defaults to the size of the\n   * map the view is associated with.\n   * If no map or multiple maps are connected to the view, provide the desired\n   * box size (e.g. `map.getSize()`).\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(size) {\n    const extent = this.calculateExtentInternal(size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    assert(center, 'The view center is not defined');\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 'The view resolution is not defined');\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 'The view rotation is not defined');\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.minResolution_)\n    );\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.maxResolution_)\n    );\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      size,\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(power) {\n    power = power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(power) {\n    const logPower = Math.log(power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(rotation) {\n    let size = this.getViewportSize_(rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = this.getResolution();\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation,\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      nextCenter: this.nextCenter_,\n      nextResolution: this.nextResolution_,\n      nextRotation: this.nextRotation_,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * @return {ViewStateLayerStateExtent} Like `FrameState`, but just `viewState` and `extent`.\n   */\n  getViewStateAndExtent() {\n    return {\n      viewState: this.getState(),\n      extent: this.calculateExtent(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_?.length) {\n      if (this.resolutions_.length === 1) {\n        return this.resolutions_[0];\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2,\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    }\n    return (\n      this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n    );\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      'Invalid extent or geometry provided as `geometry`',\n    );\n    if (Array.isArray(geometryOrExtent)) {\n      assert(\n        !isEmpty(geometryOrExtent),\n        'Cannot fit empty extent provided as `geometry`',\n      );\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === 'Circle') {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection(),\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n          geometryOrExtent\n            .clone()\n            .transform(userProjection, this.getProjection())\n        );\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, options);\n  }\n\n  /**\n   * Calculate rotated extent\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @return {import(\"./extent\").Extent} The rotated extent for the geometry.\n   */\n  rotatedExtentForGeometry(geometry) {\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(rotation);\n    const sinAngle = Math.sin(-rotation);\n    const coords = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n    return [minRotX, minRotY, maxRotX, maxRotY];\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [options] Options.\n   */\n  fitInternal(geometry, options) {\n    options = options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n\n    const rotatedExtent = this.rotatedExtentForGeometry(geometry);\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(rotatedExtent, [\n      size[0] - padding[1] - padding[3],\n      size[1] - padding[0] - padding[2],\n    ]);\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    const rotation = this.getRotation();\n    const sinAngle = Math.sin(rotation);\n    const cosAngle = Math.cos(rotation);\n    const centerRot = getCenter(rotatedExtent);\n    centerRot[0] += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRot[1] += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRot[0] * cosAngle - centerRot[1] * sinAngle;\n    const centerY = centerRot[1] * cosAngle + centerRot[0] * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback,\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position,\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation(),\n      ),\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation,\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving,\n    );\n\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, anchor) {\n    if (anchor) {\n      anchor = fromUserCoordinate(anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving,\n    );\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(\n      center ? fromUserCoordinate(center, this.getProjection()) : center,\n    );\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(doNotCancelAnims, forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving,\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving,\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size,\n      ),\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n      this.set('zoom', this.getZoom(), true);\n    }\n    if (\n      !newCenter ||\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [duration] The animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  resolveConstraints(duration, resolutionDirection, anchor) {\n    duration = duration !== undefined ? duration : 200;\n    const direction = resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size,\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size,\n      ),\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    anchor = anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(duration, resolutionDirection, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.endInteractionInternal(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  endInteractionInternal(duration, resolutionDirection, anchor) {\n    if (!this.getInteracting()) {\n      return;\n    }\n    this.setHint(ViewHint.INTERACTING, -1);\n    this.resolveConstraints(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      targetResolution || this.getResolution(),\n      size,\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [direction] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, direction),\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [direction] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, direction) {\n    direction = direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor),\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    }\n    if (constrainRotation === false) {\n      return rotationNone;\n    }\n    if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    }\n    return rotationNone;\n  }\n  return disable;\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z0-9]+?)\\\\s*$',\n  ].join(''),\n  'i',\n);\n/** @type {Array<'style'|'variant'|'weight'|'size'|'lineHeight'|'family'>} */\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/** @type {Object<string|number, number>} */\nexport const fontWeights = {\n  normal: 400,\n  bold: 700,\n};\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters|null} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: '400',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] =\n        typeof value === 'string' ? value.trim() : value;\n    }\n  }\n  if (isNaN(Number(style.weight)) && style.weight in fontWeights) {\n    style.weight = fontWeights[style.weight];\n  }\n  style.families = style.family\n    .split(/,\\s?/)\n    .map((f) => f.trim().replace(/^['\"]|['\"]$/g, ''));\n  return style;\n};\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [width] Canvas width.\n * @param {number} [height] Canvas height.\n * @param {Array<HTMLCanvasElement|OffscreenCanvas>} [canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [settings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D|OffscreenCanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(width, height, canvasPool, settings) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (canvasPool && canvasPool.length) {\n    canvas = /** @type {HTMLCanvasElement} */ (canvasPool.shift());\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new (class extends OffscreenCanvas {\n      style = {};\n    })(width ?? 300, height ?? 150);\n  } else {\n    canvas = document.createElement('canvas');\n  }\n  if (width) {\n    canvas.width = width;\n  }\n  if (height) {\n    canvas.height = height;\n  }\n  return /** @type {CanvasRenderingContext2D|OffscreenCanvasRenderingContext2D} */ (\n    canvas.getContext('2d', settings)\n  );\n}\n\n/**\n * @type {CanvasRenderingContext2D|OffscreenCanvasRenderingContext2D}\n */\nlet sharedCanvasContext;\n\n/**\n * @return {CanvasRenderingContext2D|OffscreenCanvasRenderingContext2D} Shared canvas context.\n */\nexport function getSharedCanvasContext2D() {\n  if (!sharedCanvasContext) {\n    sharedCanvasContext = createCanvasContext2D(1, 1);\n  }\n  return sharedCanvasContext;\n}\n\n/**\n * Releases canvas memory to avoid exceeding memory limits in Safari.\n * See https://pqina.nl/blog/total-canvas-memory-use-exceeds-the-maximum-limit/\n * @param {CanvasRenderingContext2D|OffscreenCanvasRenderingContext2D} context Context.\n */\nexport function releaseCanvas(context) {\n  const canvas = context.canvas;\n  canvas.width = 1;\n  canvas.height = 1;\n  context.clearRect(0, 0, 1, 1);\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.lastChild.remove();\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n\n/**\n * Creates a minimal structure that mocks a DIV to be used by the composite and\n * layer renderer in a worker environment\n * @return {HTMLDivElement} mocked DIV\n */\nexport function createMockDiv() {\n  const mockedDiv = new Proxy(\n    {\n      /**\n       * @type {Array<HTMLElement>}\n       */\n      childNodes: [],\n      /**\n       * @param {HTMLElement} node html node.\n       * @return {HTMLElement} html node.\n       */\n      appendChild: function (node) {\n        this.childNodes.push(node);\n        return node;\n      },\n      /**\n       * dummy function, as this structure is not supposed to have a parent.\n       */\n      remove: function () {},\n      /**\n       * @param {HTMLElement} node html node.\n       * @return {HTMLElement} html node.\n       */\n      removeChild: function (node) {\n        const index = this.childNodes.indexOf(node);\n        if (index === -1) {\n          throw new Error('Node to remove was not found');\n        }\n        this.childNodes.splice(index, 1);\n        return node;\n      },\n      /**\n       * @param {HTMLElement} newNode new html node.\n       * @param {HTMLElement} referenceNode reference html node.\n       * @return {HTMLElement} new html node.\n       */\n      insertBefore: function (newNode, referenceNode) {\n        const index = this.childNodes.indexOf(referenceNode);\n        if (index === -1) {\n          throw new Error('Reference node not found');\n        }\n        this.childNodes.splice(index, 0, newNode);\n        return newNode;\n      },\n      style: {},\n    },\n    {\n      get(target, prop, receiver) {\n        if (prop === 'firstElementChild') {\n          return target.childNodes.length > 0 ? target.childNodes[0] : null;\n        }\n        return Reflect.get(target, prop, receiver);\n      },\n    },\n  );\n  return /** @type {HTMLDivElement} */ (/** @type {*} */ (mockedDiv));\n}\n\n/***\n * @param {*} obj The object to check.\n * @return {obj is (HTMLCanvasElement | OffscreenCanvas)} The object is a canvas.\n */\nexport function isCanvas(obj) {\n  return (\n    (typeof HTMLCanvasElement !== 'undefined' &&\n      obj instanceof HTMLCanvasElement) ||\n    (typeof OffscreenCanvas !== 'undefined' && obj instanceof OffscreenCanvas)\n  );\n}\n","/**\n * @module ol/control/Control\n */\nimport MapEventType from '../MapEventType.js';\nimport BaseObject from '../Object.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {VOID} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * const myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.element?.remove();\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.element?.remove();\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (map) {\n      const target = this.target_ ?? map.getOverlayContainerStopEvent();\n      if (this.element) {\n        target.appendChild(this.element);\n      }\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this),\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n","/**\n * @module ol/control/Attribution\n */\nimport {equals} from '../array.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {removeChildren, replaceNode} from '../dom.js';\nimport EventType from '../events/EventType.js';\nimport {toPromise} from '../functions.js';\nimport Control from './Control.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string|HTMLElement} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='›'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {string|Array<string>|undefined} [attributions] Optional attribution(s) that will always be\n * displayed regardless of the layers rendered.\n * **Caution:** Attributions are rendered dynamically using `innerHTML`, which can lead to potential\n * [**XSS (Cross-Site Scripting)**](https://en.wikipedia.org/wiki/Cross-site_scripting) vulnerabilities.\n * Use this feature only for trusted content\n * or ensure that the content is properly sanitized before inserting it.\n */\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n  /**\n   * @param {Options} [options] Attribution options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.userCollapsed_ = this.collapsed_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    /**\n     * @private\n     * @type {string | Array<string> | undefined}\n     */\n    this.attributions_ = options.attributions;\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const expandClassName =\n      options.expandClassName !== undefined\n        ? options.expandClassName\n        : className + '-expand';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u203A';\n\n    const collapseClassName =\n      options.collapseClassName !== undefined\n        ? options.collapseClassName\n        : className + '-collapse';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n      this.collapseLabel_.className = collapseClassName;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n      this.label_.className = expandClassName;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.toggleButton_ = document.createElement('button');\n    this.toggleButton_.setAttribute('type', 'button');\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n    this.toggleButton_.title = tipLabel;\n    this.toggleButton_.appendChild(activeLabel);\n\n    this.toggleButton_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false,\n    );\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.toggleButton_);\n    element.appendChild(this.ulElement_);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  collectSourceAttributions_(frameState) {\n    const layers = this.getMap().getAllLayers();\n    const visibleAttributions = new Set(\n      layers.flatMap((layer) => layer.getAttributions(frameState)),\n    );\n    if (this.attributions_ !== undefined) {\n      Array.isArray(this.attributions_)\n        ? this.attributions_.forEach((item) => visibleAttributions.add(item))\n        : visibleAttributions.add(this.attributions_);\n    }\n\n    if (!this.overrideCollapsible_) {\n      const collapsible = !layers.some(\n        (layer) => layer.getSource()?.getAttributionsCollapsible() === false,\n      );\n      this.setCollapsible(collapsible);\n    }\n    return Array.from(visibleAttributions);\n  }\n\n  /**\n   * @private\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  async updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = await Promise.all(\n      this.collectSourceAttributions_(frameState).map((attribution) =>\n        toPromise(() => attribution),\n      ),\n    );\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n    this.userCollapsed_ = this.collapsed_;\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (this.userCollapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    this.userCollapsed_ = collapsed;\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Update the attribution element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n  }\n}\n\nexport default Attribution;\n","/**\n * @module ol/control/Rotate\n */\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\nimport EventType from '../events/EventType.js';\nimport Control from './Control.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nclass Rotate extends Control {\n  /**\n   * @param {Options} [options] Rotate options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-rotate';\n\n    const label = options.label !== undefined ? options.label : '\\u21E7';\n\n    const compassClassName =\n      options.compassClassName !== undefined\n        ? options.compassClassName\n        : 'ol-compass';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = compassClassName;\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add(compassClassName);\n    }\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    const button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false,\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    /**\n     * @private\n     */\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetNorth_() {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const rotation = view.getRotation();\n    if (rotation !== undefined) {\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  }\n\n  /**\n   * Update the rotate control element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      return;\n    }\n    const rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n      const transform = 'rotate(' + rotation + 'rad)';\n      if (this.autoHide_) {\n        const contains = this.element.classList.contains(CLASS_HIDDEN);\n        if (!contains && rotation === 0) {\n          this.element.classList.add(CLASS_HIDDEN);\n        } else if (contains && rotation !== 0) {\n          this.element.classList.remove(CLASS_HIDDEN);\n        }\n      }\n      this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n  }\n}\n\nexport default Rotate;\n","/**\n * @module ol/control/Zoom\n */\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\nimport EventType from '../events/EventType.js';\nimport Control from './Control.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='–'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n  /**\n   * @param {Options} [options] Zoom options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInClassName =\n      options.zoomInClassName !== undefined\n        ? options.zoomInClassName\n        : className + '-in';\n\n    const zoomOutClassName =\n      options.zoomOutClassName !== undefined\n        ? options.zoomOutClassName\n        : className + '-out';\n\n    const zoomInLabel =\n      options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel =\n      options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2013';\n\n    const zoomInTipLabel =\n      options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel =\n      options.zoomOutTipLabel !== undefined\n        ? options.zoomOutTipLabel\n        : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = zoomInClassName;\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string'\n        ? document.createTextNode(zoomInLabel)\n        : zoomInLabel,\n    );\n\n    inElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, delta),\n      false,\n    );\n\n    const outElement = document.createElement('button');\n    outElement.className = zoomOutClassName;\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string'\n        ? document.createTextNode(zoomOutLabel)\n        : zoomOutLabel,\n    );\n\n    outElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, -delta),\n      false,\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  }\n}\n\nexport default Zoom;\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active',\n};\n","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport {easeOut, linear} from '../easing.js';\nimport InteractionProperty from './Property.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active', Return>} InteractionOnSignature\n */\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {InteractionOnSignature<void>}\n     */\n    this.un;\n\n    if (options && options.handleEvent) {\n      this.handleEvent = options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [duration] Duration.\n */\nexport function pan(view, delta, duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: duration !== undefined ? duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [anchor] Anchor coordinate in the user projection.\n * @param {number} [duration] Duration.\n */\nexport function zoomByDelta(view, delta, anchor, duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: anchor,\n    duration: duration !== undefined ? duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a\n   * doubleclick) and eventually zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @override\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n      const browserEvent = /** @type {MouseEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const map = mapBrowserEvent.map;\n      const anchor = mapBrowserEvent.coordinate;\n      const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, anchor, this.duration_);\n      browserEvent.preventDefault();\n      stopEvent = true;\n    }\n    return !stopEvent;\n  }\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {MAC, WEBKIT} from '../has.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  const conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    let pass = true;\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function (event) {\n  const targetElement = event.map.getTargetElement();\n  const rootNode = targetElement.getRootNode();\n  const activeElement = event.map.getOwnerDocument().activeElement;\n\n  return rootNode instanceof ShadowRoot\n    ? rootNode.host.contains(activeElement)\n    : targetElement.contains(activeElement);\n};\n\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport const focusWithTabindex = function (event) {\n  const targetElement = event.map.getTargetElement();\n  const rootNode = targetElement.getRootNode();\n  const tabIndexCandidate =\n    rootNode instanceof ShadowRoot ? rootNode.host : targetElement;\n\n  return tabIndexCandidate.hasAttribute('tabindex') ? focus(event) : true;\n};\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  return (\n    'pointerId' in originalEvent &&\n    originalEvent.button == 0 &&\n    !(WEBKIT && MAC && originalEvent.ctrlKey)\n  );\n};\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  return (\n    !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKey = function (mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  return MAC ? originalEvent.metaKey : originalEvent.ctrlKey;\n};\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the target element is not editable, i.e. not an `input`,\n * `select`, or `textarea` element and no `contenteditable` attribute is\n * set or inherited, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function (mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return (\n    tagName !== 'INPUT' &&\n    tagName !== 'SELECT' &&\n    tagName !== 'TEXTAREA' &&\n    // `isContentEditable` is only available on `HTMLElement`, but it may also be a\n    // different type like `SVGElement`.\n    // @ts-ignore\n    !originalEvent.target.isContentEditable\n  );\n};\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function (mapBrowserEvent) {\n  const pointerEvent = mapBrowserEvent.originalEvent;\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return 'pointerId' in pointerEvent && pointerEvent.pointerType == 'mouse';\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function (mapBrowserEvent) {\n  const pointerEvt = mapBrowserEvent.originalEvent;\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return 'pointerId' in pointerEvt && pointerEvt.pointerType === 'touch';\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function (mapBrowserEvent) {\n  const pointerEvt = mapBrowserEvent.originalEvent;\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return 'pointerId' in pointerEvt && pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See https://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function (mapBrowserEvent) {\n  const pointerEvent = mapBrowserEvent.originalEvent;\n  return (\n    'pointerId' in pointerEvent &&\n    pointerEvent.isPrimary &&\n    pointerEvent.button === 0\n  );\n};\n","/**\n * @module ol/interaction/Pointer\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Interaction from './Interaction.js';\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options),\n    );\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Returns the current number of pointers involved in the interaction,\n   * e.g. `2` when two fingers are used.\n   * @return {number} The number of pointers.\n   * @api\n   */\n  getPointerCount() {\n    return this.targetPointers.length;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleDragEvent(mapBrowserEvent) {}\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   * @override\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence =\n          handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleMoveEvent(mapBrowserEvent) {}\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (mapBrowserEvent.activePointers) {\n      this.targetPointers = mapBrowserEvent.activePointers;\n    }\n  }\n}\n\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {{clientX: number, clientY: number}} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return {clientX: clientX / length, clientY: clientY / length};\n}\n\nexport default PointerInteraction;\n","/**\n * @module ol/interaction/DragPan\n */\nimport {\n  rotate as rotateCoordinate,\n  scale as scaleCoordinate,\n} from '../coordinate.js';\nimport {easeOut} from '../easing.js';\nimport {\n  all,\n  focusWithTabindex,\n  noModifierKeys,\n  primaryAction,\n} from '../events/condition.js';\nimport {FALSE} from '../functions.js';\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.noModifierKeys} and {@link module:ol/events/condition.primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nclass DragPan extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super({\n      stopDown: FALSE,\n    });\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.panning_ = false;\n\n    const condition = options.condition\n      ? options.condition\n      : all(noModifierKeys, primaryAction);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @override\n   */\n  handleDragEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    if (!this.panning_) {\n      this.panning_ = true;\n      map.getView().beginInteraction();\n    }\n    const targetPointers = this.targetPointers;\n    const centroid = map.getEventPixel(centroidFromPointers(targetPointers));\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        const delta = [\n          this.lastCentroid[0] - centroid[0],\n          centroid[1] - this.lastCentroid[1],\n        ];\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        scaleCoordinate(delta, view.getResolution());\n        rotateCoordinate(delta, view.getRotation());\n        view.adjustCenterInternal(delta);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n    mapBrowserEvent.originalEvent.preventDefault();\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleUpEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        const distance = this.kinetic_.getDistance();\n        const angle = this.kinetic_.getAngle();\n        const center = view.getCenterInternal();\n        const centerpx = map.getPixelFromCoordinateInternal(center);\n        const dest = map.getCoordinateFromPixelInternal([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle),\n        ]);\n        view.animateInternal({\n          center: view.getConstrainedCenter(dest),\n          duration: 500,\n          easing: easeOut,\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.endInteraction();\n      }\n      return false;\n    }\n    if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger up, tiny drag, second finger up\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = null;\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragPan;\n","/**\n * @module ol/interaction/DragRotate\n */\nimport {\n  altShiftKeysOnly,\n  mouseActionButton,\n  mouseOnly,\n} from '../events/condition.js';\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\nimport PointerInteraction from './Pointer.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes a\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with a {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nclass DragRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      stopDown: FALSE,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @override\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      const delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n    this.lastAngle_ = theta;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (\n      mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)\n    ) {\n      const map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragRotate;\n","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nclass RenderBox extends Disposable {\n  /**\n   * @param {string} className CSS class name.\n   */\n  constructor(className) {\n    super();\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = document.createElement('div');\n    this.element_.style.position = 'absolute';\n    this.element_.style.pointerEvents = 'auto';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.setMap(null);\n  }\n\n  /**\n   * @private\n   */\n  render_() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const px = 'px';\n    const style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      const style = this.element_.style;\n      style.left = 'inherit';\n      style.top = 'inherit';\n      style.width = 'inherit';\n      style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  setPixels(startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  }\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  createOrUpdateGeometry() {\n    if (!this.map_) {\n      return;\n    }\n\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]],\n    ];\n    const coordinates = pixels.map(\n      this.map_.getCoordinateFromPixelInternal,\n      this.map_,\n    );\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  }\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n}\n\nexport default RenderBox;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport {mouseActionButton} from '../events/condition.js';\nimport RenderBox from '../render/Box.js';\nimport PointerInteraction from './Pointer.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend',\n\n  /**\n   * Triggered upon drag box canceled.\n   * @event DragBoxEvent#boxcancel\n   * @api\n   */\n  BOXCANCEL: 'boxcancel',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nexport class DragBoxEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n   */\n  constructor(type, coordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'boxcancel'|'boxdrag'|'boxend'|'boxstart', DragBoxEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'boxcancel'|'boxdrag'|'boxend', Return>} DragBoxOnSignature\n */\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with a {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom~DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nclass DragBox extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DragBoxOnSignature<void>}\n     */\n    this.un;\n\n    options = options ?? {};\n\n    /**\n     * @type {import(\"../render/Box.js\").default}\n     * @private\n     */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minArea_ = options.minArea ?? 64;\n\n    if (options.onBoxEnd) {\n      this.onBoxEnd = options.onBoxEnd;\n    }\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ?? mouseActionButton;\n\n    /**\n     * @private\n     * @type {EndCondition}\n     */\n    this.boxEndCondition_ =\n      options.boxEndCondition ?? this.defaultBoxEndCondition;\n  }\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n    const width = endPixel[0] - startPixel[0];\n    const height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  }\n\n  /**\n   * Returns geometry of last drawn box.\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   * @api\n   */\n  getGeometry() {\n    return this.box_.getGeometry();\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @override\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!this.startPixel_) {\n      return;\n    }\n\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(\n      new DragBoxEvent(\n        DragBoxEventType.BOXDRAG,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent,\n      ),\n    );\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!this.startPixel_) {\n      return false;\n    }\n\n    const completeBox = this.boxEndCondition_(\n      mapBrowserEvent,\n      this.startPixel_,\n      mapBrowserEvent.pixel,\n    );\n    if (completeBox) {\n      this.onBoxEnd(mapBrowserEvent);\n    }\n    this.dispatchEvent(\n      new DragBoxEvent(\n        completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent,\n      ),\n    );\n\n    this.box_.setMap(null);\n    this.startPixel_ = null;\n\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(\n        new DragBoxEvent(\n          DragBoxEventType.BOXSTART,\n          mapBrowserEvent.coordinate,\n          mapBrowserEvent,\n        ),\n      );\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {}\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   * @override\n   */\n  setActive(active) {\n    if (!active) {\n      this.box_.setMap(null);\n      if (this.startPixel_) {\n        this.dispatchEvent(\n          new DragBoxEvent(DragBoxEventType.BOXCANCEL, this.startPixel_, null),\n        );\n        this.startPixel_ = null;\n      }\n    }\n\n    super.setActive(active);\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @override\n   */\n  setMap(map) {\n    const oldMap = this.getMap();\n\n    if (oldMap) {\n      this.box_.setMap(null);\n\n      if (this.startPixel_) {\n        this.dispatchEvent(\n          new DragBoxEvent(DragBoxEventType.BOXCANCEL, this.startPixel_, null),\n        );\n        this.startPixel_ = null;\n      }\n    }\n\n    super.setMap(map);\n  }\n}\n\nexport default DragBox;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\nimport DragBox from './DragBox.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with a {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @override\n   */\n  onBoxEnd(event) {\n    const map = this.getMap();\n    const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    let geometry = this.getGeometry();\n\n    if (this.out_) {\n      const rotatedExtent = view.rotatedExtentForGeometry(geometry);\n      const resolution = view.getResolutionForExtentInternal(rotatedExtent);\n      const factor = view.getResolution() / resolution;\n      geometry = geometry.clone();\n      geometry.scale(factor * factor);\n    }\n\n    view.fitInternal(geometry, {\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n}\n\nexport default DragZoom;\n","/**\n * @module ol/events/Key\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  LEFT: 'ArrowLeft',\n  UP: 'ArrowUp',\n  RIGHT: 'ArrowRight',\n  DOWN: 'ArrowDown',\n};\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport {rotate as rotateCoordinate} from '../coordinate.js';\nimport EventType from '../events/EventType.js';\nimport Key from '../events/Key.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport Interaction, {pan} from './Interaction.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.noModifierKeys} and\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nclass KeyboardPan extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function (mapBrowserEvent) {\n      return (\n        noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent)\n      );\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ =\n      options.condition !== undefined\n        ? options.condition\n        : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ =\n      options.pixelDelta !== undefined ? options.pixelDelta : 128;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n   * pressed).\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @override\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const key = keyEvent.key;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (key == Key.DOWN ||\n          key == Key.LEFT ||\n          key == Key.RIGHT ||\n          key == Key.UP)\n      ) {\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n        let deltaX = 0,\n          deltaY = 0;\n        if (key == Key.DOWN) {\n          deltaY = -mapUnitsDelta;\n        } else if (key == Key.LEFT) {\n          deltaX = -mapUnitsDelta;\n        } else if (key == Key.RIGHT) {\n          deltaX = mapUnitsDelta;\n        } else {\n          deltaY = mapUnitsDelta;\n        }\n        const delta = [deltaX, deltaY];\n        rotateCoordinate(delta, view.getRotation());\n        pan(view, delta, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport {platformModifierKey, targetNotEditable} from '../events/condition.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. The default condition is\n * that {@link module:ol/events/condition.targetNotEditable} is fulfilled and that\n * the platform modifier key isn't pressed\n * (!{@link module:ol/events/condition.platformModifierKey}).\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nclass KeyboardZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition\n      ? options.condition\n      : function (mapBrowserEvent) {\n          return (\n            !platformModifierKey(mapBrowserEvent) &&\n            targetNotEditable(mapBrowserEvent)\n          );\n        };\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n   * key pressed was '+' or '-').\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @override\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (\n      mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS\n    ) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const key = keyEvent.key;\n      if (this.condition_(mapBrowserEvent) && (key === '+' || key === '-')) {\n        const map = mapBrowserEvent.map;\n        const delta = key === '+' ? this.delta_ : -this.delta_;\n        const view = map.getView();\n        zoomByDelta(view, delta, undefined, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport {all, always, focusWithTabindex} from '../events/condition.js';\nimport {clamp} from '../math.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\n\n/**\n * @typedef {'trackpad' | 'wheel'} Mode\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n\n/**\n * Mutliplier for the DOM_DELTA_LINE delta value.\n * @type {number}\n */\nconst DELTA_LINE_MULTIPLIER = 40;\n\n/**\n * Mutliplier for the DOM_DELTA_PAGE delta value.\n * @type {number}\n */\nconst DELTA_PAGE_MULTIPLIER = 300;\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options),\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.totalDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ =\n      options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ =\n      options.constrainResolution !== undefined\n        ? options.constrainResolution\n        : false;\n\n    const condition = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {?import(\"../pixel.js\").Pixel}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @private\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.deltaPerZoom_ = 300;\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.trackpadTimeoutId_ = undefined;\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const view = map.getView();\n    view.endInteraction(\n      undefined,\n      this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0,\n      this.lastAnchor_ ? map.getCoordinateFromPixel(this.lastAnchor_) : null,\n    );\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @override\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const wheelEvent = /** @type {WheelEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    wheelEvent.preventDefault();\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.pixel;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    let delta = wheelEvent.deltaY;\n\n    switch (wheelEvent.deltaMode) {\n      case WheelEvent.DOM_DELTA_LINE:\n        delta *= DELTA_LINE_MULTIPLIER;\n        break;\n      case WheelEvent.DOM_DELTA_PAGE:\n        delta *= DELTA_PAGE_MULTIPLIER;\n        break;\n      default:\n      // pass\n    }\n\n    if (delta === 0) {\n      return false;\n    }\n    this.lastDelta_ = delta;\n\n    const now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ? 'trackpad' : 'wheel';\n    }\n\n    const view = map.getView();\n    if (\n      this.mode_ === 'trackpad' &&\n      !(view.getConstrainResolution() || this.constrainResolution_)\n    ) {\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.beginInteraction();\n      }\n      this.trackpadTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        this.timeout_,\n      );\n      view.adjustZoom(\n        -delta / this.deltaPerZoom_,\n        this.lastAnchor_ ? map.getCoordinateFromPixel(this.lastAnchor_) : null,\n      );\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.totalDelta_ += delta;\n\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(\n      this.handleWheelZoom_.bind(this, map),\n      timeLeft,\n    );\n\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  handleWheelZoom_(map) {\n    const view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    let delta =\n      -clamp(\n        this.totalDelta_,\n        -this.maxDelta_ * this.deltaPerZoom_,\n        this.maxDelta_ * this.deltaPerZoom_,\n      ) / this.deltaPerZoom_;\n    if (view.getConstrainResolution() || this.constrainResolution_) {\n      // view has a zoom constraint, zoom by 1\n      delta = delta ? (delta > 0 ? 1 : -1) : 0;\n    }\n    zoomByDelta(\n      view,\n      delta,\n      this.lastAnchor_ ? map.getCoordinateFromPixel(this.lastAnchor_) : null,\n      this.duration_,\n    );\n\n    this.mode_ = undefined;\n    this.totalDelta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @override\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let rotationDelta = 0.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n\n    // angle between touches\n    const angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX,\n    );\n\n    if (this.lastAngle_ !== undefined) {\n      const delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers)),\n    );\n\n    // rotate\n    if (this.rotating_) {\n      map.render();\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      view.endInteraction(this.duration_);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport {FALSE} from '../functions.js';\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @override\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers)),\n    );\n\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchZoom;\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n  MAP: 'map',\n};\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport {assert} from '../asserts.js';\nimport {clamp} from '../math.js';\nimport {abstract} from '../util.js';\nimport LayerProperty from './Property.js';\n\n/**\n * A css color, or a function called with a view resolution returning a css color.\n *\n * @typedef {string|function(number):string} BackgroundColor\n * @api\n */\n\n/**\n * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\n *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number | undefined} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base~BaseLayer} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object~BaseObject} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {BackgroundColor|false}\n     * @private\n     */\n    this.background_ = options.background;\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = Object.assign({}, options);\n    if (typeof options.properties === 'object') {\n      delete properties.properties;\n      Object.assign(properties, options.properties);\n    }\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(\n      typeof properties[LayerProperty.OPACITY] === 'number',\n      'Layer opacity must be a number',\n    );\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? properties.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * Get the background for this layer.\n   * @return {BackgroundColor|false} Layer background.\n   */\n  getBackground() {\n    return this.background_;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: managed === undefined ? true : managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (\n      this.get(LayerProperty.EXTENT)\n    );\n  }\n\n  /**\n   * Return the maximum resolution of the layer. Returns Infinity if\n   * the layer has no maximum resolution set.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer. Returns 0 if\n   * the layer has no minimum resolution set.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer. Returns -Infinity if\n   * the layer has no minimum zoom set.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer. Returns Infinity if\n   * the layer has no maximum zoom set.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the value of this layer's `visible` property. To find out whether the layer\n   * is visible on a map, use `isVisible()` instead.\n   * @return {boolean} The value of the `visible` property of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. Returns undefined if the layer is unmanaged.\n   * @return {number|undefined} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number|undefined} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Sets the background color.\n   * @param {BackgroundColor} [background] Background color.\n   */\n  setBackground(background) {\n    this.background_ = background;\n    this.changed();\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 'Layer opacity must be a number');\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/layer/Group\n */\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {assert} from '../asserts.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {getIntersection} from '../extent.js';\nimport {clear} from '../obj.js';\nimport {getUid} from '../util.js';\nimport BaseLayer from './Base.js';\n\n/**\n * @enum {string}\n */\nconst GroupEventType = {\n  /**\n   * Triggered when a layer is added\n   * @event GroupEvent#addlayer\n   * @api\n   */\n  ADDLAYER: 'addlayer',\n  /**\n   * Triggered when a layer is removed\n   * @event GroupEvent#removelayer\n   * @api\n   */\n  REMOVELAYER: 'removelayer',\n};\n\n/**\n * @classdesc\n * A layer group triggers 'addlayer' and 'removelayer' events when layers are added to or removed from\n * the group or one of its child groups.  When a layer group is added to or removed from another layer group,\n * a single event will be triggered (instead of one per layer in the group added or removed).\n */\nexport class GroupEvent extends Event {\n  /**\n   * @param {GroupEventType} type The event type.\n   * @param {BaseLayer} layer The layer.\n   */\n  constructor(type, layer) {\n    super(type);\n\n    /**\n     * The added or removed layer.\n     * @type {BaseLayer}\n     * @api\n     */\n    this.layer = layer;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:layers', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'addlayer'|'removelayer', GroupEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'addlayer'|'removelayer'|'change:layers', Return>} GroupOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|Collection<import(\"./Base.js\").default>} [layers] Child layers.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @fires GroupEvent\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options} [options] Layer options.\n   */\n  constructor(options) {\n    options = options || {};\n    const baseOptions = /** @type {Options} */ (Object.assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {GroupOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addChangeListener(Property.LAYERS, this.handleLayersChanged_);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(\n          typeof (/** @type {?} */ (layers).getArray) === 'function',\n          'Expected `layers` to be an array or a `Collection`',\n        );\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(\n        layers,\n        CollectionEventType.REMOVE,\n        this.handleLayersRemove_,\n        this,\n      ),\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.registerLayerListeners_(layer);\n      this.dispatchEvent(new GroupEvent(GroupEventType.ADDLAYER, layer));\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {BaseLayer} layer The layer.\n   */\n  registerLayerListeners_(layer) {\n    const listenerKeys = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this,\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n\n    if (layer instanceof LayerGroup) {\n      listenerKeys.push(\n        listen(layer, GroupEventType.ADDLAYER, this.handleLayerGroupAdd_, this),\n        listen(\n          layer,\n          GroupEventType.REMOVELAYER,\n          this.handleLayerGroupRemove_,\n          this,\n        ),\n      );\n    }\n\n    this.listenerKeys_[getUid(layer)] = listenerKeys;\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupAdd_(event) {\n    this.dispatchEvent(new GroupEvent(GroupEventType.ADDLAYER, event.layer));\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupRemove_(event) {\n    this.dispatchEvent(new GroupEvent(GroupEventType.REMOVELAYER, event.layer));\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = collectionEvent.element;\n    this.registerLayerListeners_(layer);\n    this.dispatchEvent(new GroupEvent(GroupEventType.ADDLAYER, layer));\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = collectionEvent.element;\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.dispatchEvent(new GroupEvent(GroupEventType.REMOVELAYER, layer));\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!Collection<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!Collection<import(\"./Base.js\").default>} */ (\n      this.get(Property.LAYERS)\n    );\n  }\n\n  /**\n   * Set the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!Collection<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    const collection = this.getLayers();\n    if (collection) {\n      const currentLayers = collection.getArray();\n      for (let i = 0, ii = currentLayers.length; i < ii; ++i) {\n        this.dispatchEvent(\n          new GroupEvent(GroupEventType.REMOVELAYER, currentLayers[i]),\n        );\n      }\n    }\n\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   * @override\n   */\n  getLayersArray(array) {\n    array = array !== undefined ? array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * Get the layer states list and use this groups z-index as the default\n   * for all layers in this and nested groups, if it is unset at this point.\n   * If dest is not provided and this group's z-index is undefined\n   * 0 is used a the default z-index.\n   * @param {Array<import(\"./Layer.js\").State>} [dest] Optional list\n   * of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   * @override\n   */\n  getLayerStatesArray(dest) {\n    const states = dest !== undefined ? dest : [];\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    let defaultZIndex = ownLayerState.zIndex;\n    if (!dest && ownLayerState.zIndex === undefined) {\n      defaultZIndex = 0;\n    }\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution,\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution,\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent,\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n      if (layerState.zIndex === undefined) {\n        layerState.zIndex = defaultZIndex;\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   * @override\n   */\n  getSourceState() {\n    return 'ready';\n  }\n}\n\nexport default LayerGroup;\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n\n/**\n * @typedef {'postrender'|'precompose'|'postcompose'|'rendercomplete'} MapRenderEventTypes\n */\n\n/**\n * @typedef {'postrender'|'prerender'} LayerRenderEventTypes\n */\n","/**\n * @module ol/layer/Layer\n */\nimport View from '../View.js';\nimport {assert} from '../asserts.js';\nimport EventType from '../events/EventType.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {intersects} from '../extent.js';\nimport RenderEventType from '../render/EventType.js';\nimport BaseLayer from './Base.js';\nimport LayerProperty from './Property.js';\n\n/**\n * @typedef {function(import(\"../Map.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/**\n * @typedef {'sourceready'|'change:source'} LayerEventType\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     LayerEventType, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|LayerEventType|\n *     import(\"../render/EventType\").LayerRenderEventTypes, Return>} LayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {SourceType} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer~Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../Map.js\").default|null} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * Components like {@link module:ol/interaction/Draw~Draw} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * [layer.setMap()]{@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n * A `sourceready` event is fired when the layer's source is ready.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n * @fires import(\"../events/Event.js\").BaseEvent#sourceready\n *\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @template {import(\"../renderer/Layer.js\").default} [RendererType=import(\"../renderer/Layer.js\").default]\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options<SourceType>} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = Object.assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {LayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {RendererType}\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.sourceReady_ = false;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.rendered = false;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addChangeListener(\n      LayerProperty.SOURCE,\n      this.handleSourcePropertyChange_,\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   * @override\n   */\n  getLayersArray(array) {\n    array = array ? array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   * @override\n   */\n  getLayerStatesArray(states) {\n    states = states ? states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType|null} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {SourceType|null} The source being rendered.\n   */\n  getRenderSource() {\n    return this.getSource();\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   * @override\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? 'undefined' : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n    if (this.sourceReady_ || this.getSource().getState() !== 'ready') {\n      return;\n    }\n    this.sourceReady_ = true;\n    this.dispatchEvent('sourceready');\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    this.sourceReady_ = false;\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this,\n      );\n      if (source.getState() === 'ready') {\n        this.sourceReady_ = true;\n        setTimeout(() => {\n          this.dispatchEvent('sourceready');\n        }, 0);\n      }\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return Promise.resolve([]);\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    if (!this.renderer_ || !this.rendered) {\n      return null;\n    }\n    return this.renderer_.getData(pixel);\n  }\n\n  /**\n   * The layer is visible on the map view, i.e. within its min/max resolution or zoom and\n   * extent, not set to `visible: false`, and not inside a layer group that is set\n   * to `visible: false`.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {boolean} The layer is visible in the map view.\n   * @api\n   */\n  isVisible(view) {\n    let frameState;\n    const map = this.getMapInternal();\n    if (!view && map) {\n      view = map.getView();\n    }\n    if (view instanceof View) {\n      frameState = {\n        viewState: view.getState(),\n        extent: view.calculateExtent(),\n      };\n    } else {\n      frameState = view;\n    }\n    if (!frameState.layerStatesArray && map) {\n      frameState.layerStatesArray = map.getLayerGroup().getLayerStatesArray();\n    }\n    let layerState;\n    if (frameState.layerStatesArray) {\n      layerState = frameState.layerStatesArray.find(\n        (layerState) => layerState.layer === this,\n      );\n      if (!layerState) {\n        return false;\n      }\n    } else {\n      layerState = this.getLayerState();\n    }\n\n    const layerExtent = this.getExtent();\n\n    return (\n      inView(layerState, frameState.viewState) &&\n      (!layerExtent || intersects(layerExtent, frameState.extent))\n    );\n  }\n\n  /**\n   * Get the attributions of the source of this layer for the given view.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {Array<string>} Attributions for this layer at the given view.\n   * @api\n   */\n  getAttributions(view) {\n    if (!this.isVisible(view)) {\n      return [];\n    }\n    const getAttributions = this.getSource()?.getAttributions();\n    if (!getAttributions) {\n      return [];\n    }\n    const frameState =\n      view instanceof View ? view.getViewStateAndExtent() : view;\n    let attributions = getAttributions(frameState);\n    if (!Array.isArray(attributions)) {\n      attributions = [attributions];\n    }\n    return attributions;\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      this.rendered = true;\n      return layerRenderer.renderFrame(frameState, target);\n    }\n    return null;\n  }\n\n  /**\n   * Called when a layer is not visible during a map render.\n   */\n  unrender() {\n    this.rendered = false;\n  }\n\n  /** @return {string} Declutter */\n  getDeclutter() {\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../layer/Layer.js\").State} layerState Layer state.\n   */\n  renderDeclutter(frameState, layerState) {}\n\n  /**\n   * When the renderer follows a layout -> render approach, do the final rendering here.\n   * @param {import('../Map.js').FrameState} frameState Frame state\n   */\n  renderDeferred(frameState) {\n    const layerRenderer = this.getRenderer();\n    if (!layerRenderer) {\n      return;\n    }\n    layerRenderer.renderDeferred(frameState);\n  }\n\n  /**\n   * For use inside the library only.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMapInternal(map) {\n    if (!map) {\n      this.unrender();\n    }\n    this.set(LayerProperty.MAP, map);\n  }\n\n  /**\n   * For use inside the library only.\n   * @return {import(\"../Map.js\").default|null} Map.\n   */\n  getMapInternal() {\n    return this.get(LayerProperty.MAP);\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map~Map#addLayer} instead.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        this.handlePrecompose_,\n        this,\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../events/Event.js\").default} renderEvent Render event\n   * @private\n   */\n  handlePrecompose_(renderEvent) {\n    const layerStatesArray =\n      /** @type {import(\"../render/Event.js\").default} */ (renderEvent)\n        .frameState.layerStatesArray;\n    const layerState = this.getLayerState(false);\n    assert(\n      !layerStatesArray.some(\n        (arrayLayerState) => arrayLayerState.layer === layerState.layer,\n      ),\n      'A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.',\n    );\n    layerStatesArray.push(layerState);\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType|null} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {RendererType|null} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {RendererType} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * This will clear the renderer so that a new one can be created next time it is needed\n   */\n  clearRenderer() {\n    if (this.renderer_) {\n      this.renderer_.dispose();\n      delete this.renderer_;\n    }\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.clearRenderer();\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","\n/**\n * Rearranges items so that all items in the [left, k] are the smallest.\n * The k-th element will have the (k - left + 1)-th smallest value in [left, right].\n *\n * @template T\n * @param {T[]} arr the array to partially sort (in place)\n * @param {number} k middle index for partial sorting (as defined above)\n * @param {number} [left=0] left index of the range to sort\n * @param {number} [right=arr.length-1] right index\n * @param {(a: T, b: T) => number} [compare = (a, b) => a - b] compare function\n */\nexport default function quickselect(arr, k, left = 0, right = arr.length - 1, compare = defaultCompare) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            const n = right - left + 1;\n            const m = k - left + 1;\n            const z = Math.log(n);\n            const s = 0.5 * Math.exp(2 * z / 3);\n            const sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            const newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            const newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            quickselect(arr, k, newLeft, newRight, compare);\n        }\n\n        const t = arr[k];\n        let i = left;\n        /** @type {number} */\n        let j = right;\n\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) i++;\n            while (compare(arr[j], t) > 0) j--;\n        }\n\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\n/**\n * @template T\n * @param {T[]} arr\n * @param {number} i\n * @param {number} j\n */\nfunction swap(arr, i, j) {\n    const tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\n/**\n * @template T\n * @param {T} a\n * @param {T} b\n * @returns {number}\n */\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n","import quickselect from 'quickselect';\n\nexport default class RBush {\n    constructor(maxEntries = 9) {\n        // max entries in a node is 9 by default; min node fill is 40% for best performance\n        this._maxEntries = Math.max(4, maxEntries);\n        this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\n        this.clear();\n    }\n\n    all() {\n        return this._all(this.data, []);\n    }\n\n    search(bbox) {\n        let node = this.data;\n        const result = [];\n\n        if (!intersects(bbox, node)) return result;\n\n        const toBBox = this.toBBox;\n        const nodesToSearch = [];\n\n        while (node) {\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf) result.push(child);\n                    else if (contains(bbox, childBBox)) this._all(child, result);\n                    else nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return result;\n    }\n\n    collides(bbox) {\n        let node = this.data;\n\n        if (!intersects(bbox, node)) return false;\n\n        const nodesToSearch = [];\n        while (node) {\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const childBBox = node.leaf ? this.toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf || contains(bbox, childBBox)) return true;\n                    nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return false;\n    }\n\n    load(data) {\n        if (!(data && data.length)) return this;\n\n        if (data.length < this._minEntries) {\n            for (let i = 0; i < data.length; i++) {\n                this.insert(data[i]);\n            }\n            return this;\n        }\n\n        // recursively build the tree with the given data from scratch using OMT algorithm\n        let node = this._build(data.slice(), 0, data.length - 1, 0);\n\n        if (!this.data.children.length) {\n            // save as is if tree is empty\n            this.data = node;\n\n        } else if (this.data.height === node.height) {\n            // split root if trees have the same height\n            this._splitRoot(this.data, node);\n\n        } else {\n            if (this.data.height < node.height) {\n                // swap trees if inserted one is bigger\n                const tmpNode = this.data;\n                this.data = node;\n                node = tmpNode;\n            }\n\n            // insert the small tree into the large tree at appropriate level\n            this._insert(node, this.data.height - node.height - 1, true);\n        }\n\n        return this;\n    }\n\n    insert(item) {\n        if (item) this._insert(item, this.data.height - 1);\n        return this;\n    }\n\n    clear() {\n        this.data = createNode([]);\n        return this;\n    }\n\n    remove(item, equalsFn) {\n        if (!item) return this;\n\n        let node = this.data;\n        const bbox = this.toBBox(item);\n        const path = [];\n        const indexes = [];\n        let i, parent, goingUp;\n\n        // depth-first iterative tree traversal\n        while (node || path.length) {\n\n            if (!node) { // go up\n                node = path.pop();\n                parent = path[path.length - 1];\n                i = indexes.pop();\n                goingUp = true;\n            }\n\n            if (node.leaf) { // check current node\n                const index = findItem(item, node.children, equalsFn);\n\n                if (index !== -1) {\n                    // item found, remove the item and condense tree upwards\n                    node.children.splice(index, 1);\n                    path.push(node);\n                    this._condense(path);\n                    return this;\n                }\n            }\n\n            if (!goingUp && !node.leaf && contains(node, bbox)) { // go down\n                path.push(node);\n                indexes.push(i);\n                i = 0;\n                parent = node;\n                node = node.children[0];\n\n            } else if (parent) { // go right\n                i++;\n                node = parent.children[i];\n                goingUp = false;\n\n            } else node = null; // nothing found\n        }\n\n        return this;\n    }\n\n    toBBox(item) { return item; }\n\n    compareMinX(a, b) { return a.minX - b.minX; }\n    compareMinY(a, b) { return a.minY - b.minY; }\n\n    toJSON() { return this.data; }\n\n    fromJSON(data) {\n        this.data = data;\n        return this;\n    }\n\n    _all(node, result) {\n        const nodesToSearch = [];\n        while (node) {\n            if (node.leaf) result.push(...node.children);\n            else nodesToSearch.push(...node.children);\n\n            node = nodesToSearch.pop();\n        }\n        return result;\n    }\n\n    _build(items, left, right, height) {\n\n        const N = right - left + 1;\n        let M = this._maxEntries;\n        let node;\n\n        if (N <= M) {\n            // reached leaf level; return leaf\n            node = createNode(items.slice(left, right + 1));\n            calcBBox(node, this.toBBox);\n            return node;\n        }\n\n        if (!height) {\n            // target height of the bulk-loaded tree\n            height = Math.ceil(Math.log(N) / Math.log(M));\n\n            // target number of root entries to maximize storage utilization\n            M = Math.ceil(N / Math.pow(M, height - 1));\n        }\n\n        node = createNode([]);\n        node.leaf = false;\n        node.height = height;\n\n        // split the items into M mostly square tiles\n\n        const N2 = Math.ceil(N / M);\n        const N1 = N2 * Math.ceil(Math.sqrt(M));\n\n        multiSelect(items, left, right, N1, this.compareMinX);\n\n        for (let i = left; i <= right; i += N1) {\n\n            const right2 = Math.min(i + N1 - 1, right);\n\n            multiSelect(items, i, right2, N2, this.compareMinY);\n\n            for (let j = i; j <= right2; j += N2) {\n\n                const right3 = Math.min(j + N2 - 1, right2);\n\n                // pack each entry recursively\n                node.children.push(this._build(items, j, right3, height - 1));\n            }\n        }\n\n        calcBBox(node, this.toBBox);\n\n        return node;\n    }\n\n    _chooseSubtree(bbox, node, level, path) {\n        while (true) {\n            path.push(node);\n\n            if (node.leaf || path.length - 1 === level) break;\n\n            let minArea = Infinity;\n            let minEnlargement = Infinity;\n            let targetNode;\n\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const area = bboxArea(child);\n                const enlargement = enlargedArea(bbox, child) - area;\n\n                // choose entry with the least area enlargement\n                if (enlargement < minEnlargement) {\n                    minEnlargement = enlargement;\n                    minArea = area < minArea ? area : minArea;\n                    targetNode = child;\n\n                } else if (enlargement === minEnlargement) {\n                    // otherwise choose one with the smallest area\n                    if (area < minArea) {\n                        minArea = area;\n                        targetNode = child;\n                    }\n                }\n            }\n\n            node = targetNode || node.children[0];\n        }\n\n        return node;\n    }\n\n    _insert(item, level, isNode) {\n        const bbox = isNode ? item : this.toBBox(item);\n        const insertPath = [];\n\n        // find the best node for accommodating the item, saving all nodes along the path too\n        const node = this._chooseSubtree(bbox, this.data, level, insertPath);\n\n        // put the item into the node\n        node.children.push(item);\n        extend(node, bbox);\n\n        // split on node overflow; propagate upwards if necessary\n        while (level >= 0) {\n            if (insertPath[level].children.length > this._maxEntries) {\n                this._split(insertPath, level);\n                level--;\n            } else break;\n        }\n\n        // adjust bboxes along the insertion path\n        this._adjustParentBBoxes(bbox, insertPath, level);\n    }\n\n    // split overflowed node into two\n    _split(insertPath, level) {\n        const node = insertPath[level];\n        const M = node.children.length;\n        const m = this._minEntries;\n\n        this._chooseSplitAxis(node, m, M);\n\n        const splitIndex = this._chooseSplitIndex(node, m, M);\n\n        const newNode = createNode(node.children.splice(splitIndex, node.children.length - splitIndex));\n        newNode.height = node.height;\n        newNode.leaf = node.leaf;\n\n        calcBBox(node, this.toBBox);\n        calcBBox(newNode, this.toBBox);\n\n        if (level) insertPath[level - 1].children.push(newNode);\n        else this._splitRoot(node, newNode);\n    }\n\n    _splitRoot(node, newNode) {\n        // split root node\n        this.data = createNode([node, newNode]);\n        this.data.height = node.height + 1;\n        this.data.leaf = false;\n        calcBBox(this.data, this.toBBox);\n    }\n\n    _chooseSplitIndex(node, m, M) {\n        let index;\n        let minOverlap = Infinity;\n        let minArea = Infinity;\n\n        for (let i = m; i <= M - m; i++) {\n            const bbox1 = distBBox(node, 0, i, this.toBBox);\n            const bbox2 = distBBox(node, i, M, this.toBBox);\n\n            const overlap = intersectionArea(bbox1, bbox2);\n            const area = bboxArea(bbox1) + bboxArea(bbox2);\n\n            // choose distribution with minimum overlap\n            if (overlap < minOverlap) {\n                minOverlap = overlap;\n                index = i;\n\n                minArea = area < minArea ? area : minArea;\n\n            } else if (overlap === minOverlap) {\n                // otherwise choose distribution with minimum area\n                if (area < minArea) {\n                    minArea = area;\n                    index = i;\n                }\n            }\n        }\n\n        return index || M - m;\n    }\n\n    // sorts node children by the best axis for split\n    _chooseSplitAxis(node, m, M) {\n        const compareMinX = node.leaf ? this.compareMinX : compareNodeMinX;\n        const compareMinY = node.leaf ? this.compareMinY : compareNodeMinY;\n        const xMargin = this._allDistMargin(node, m, M, compareMinX);\n        const yMargin = this._allDistMargin(node, m, M, compareMinY);\n\n        // if total distributions margin value is minimal for x, sort by minX,\n        // otherwise it's already sorted by minY\n        if (xMargin < yMargin) node.children.sort(compareMinX);\n    }\n\n    // total margin of all possible split distributions where each node is at least m full\n    _allDistMargin(node, m, M, compare) {\n        node.children.sort(compare);\n\n        const toBBox = this.toBBox;\n        const leftBBox = distBBox(node, 0, m, toBBox);\n        const rightBBox = distBBox(node, M - m, M, toBBox);\n        let margin = bboxMargin(leftBBox) + bboxMargin(rightBBox);\n\n        for (let i = m; i < M - m; i++) {\n            const child = node.children[i];\n            extend(leftBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(leftBBox);\n        }\n\n        for (let i = M - m - 1; i >= m; i--) {\n            const child = node.children[i];\n            extend(rightBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(rightBBox);\n        }\n\n        return margin;\n    }\n\n    _adjustParentBBoxes(bbox, path, level) {\n        // adjust bboxes along the given tree path\n        for (let i = level; i >= 0; i--) {\n            extend(path[i], bbox);\n        }\n    }\n\n    _condense(path) {\n        // go through the path, removing empty nodes and updating bboxes\n        for (let i = path.length - 1, siblings; i >= 0; i--) {\n            if (path[i].children.length === 0) {\n                if (i > 0) {\n                    siblings = path[i - 1].children;\n                    siblings.splice(siblings.indexOf(path[i]), 1);\n\n                } else this.clear();\n\n            } else calcBBox(path[i], this.toBBox);\n        }\n    }\n}\n\nfunction findItem(item, items, equalsFn) {\n    if (!equalsFn) return items.indexOf(item);\n\n    for (let i = 0; i < items.length; i++) {\n        if (equalsFn(item, items[i])) return i;\n    }\n    return -1;\n}\n\n// calculate node's bbox from bboxes of its children\nfunction calcBBox(node, toBBox) {\n    distBBox(node, 0, node.children.length, toBBox, node);\n}\n\n// min bounding rectangle of node children from k to p-1\nfunction distBBox(node, k, p, toBBox, destNode) {\n    if (!destNode) destNode = createNode(null);\n    destNode.minX = Infinity;\n    destNode.minY = Infinity;\n    destNode.maxX = -Infinity;\n    destNode.maxY = -Infinity;\n\n    for (let i = k; i < p; i++) {\n        const child = node.children[i];\n        extend(destNode, node.leaf ? toBBox(child) : child);\n    }\n\n    return destNode;\n}\n\nfunction extend(a, b) {\n    a.minX = Math.min(a.minX, b.minX);\n    a.minY = Math.min(a.minY, b.minY);\n    a.maxX = Math.max(a.maxX, b.maxX);\n    a.maxY = Math.max(a.maxY, b.maxY);\n    return a;\n}\n\nfunction compareNodeMinX(a, b) { return a.minX - b.minX; }\nfunction compareNodeMinY(a, b) { return a.minY - b.minY; }\n\nfunction bboxArea(a)   { return (a.maxX - a.minX) * (a.maxY - a.minY); }\nfunction bboxMargin(a) { return (a.maxX - a.minX) + (a.maxY - a.minY); }\n\nfunction enlargedArea(a, b) {\n    return (Math.max(b.maxX, a.maxX) - Math.min(b.minX, a.minX)) *\n           (Math.max(b.maxY, a.maxY) - Math.min(b.minY, a.minY));\n}\n\nfunction intersectionArea(a, b) {\n    const minX = Math.max(a.minX, b.minX);\n    const minY = Math.max(a.minY, b.minY);\n    const maxX = Math.min(a.maxX, b.maxX);\n    const maxY = Math.min(a.maxY, b.maxY);\n\n    return Math.max(0, maxX - minX) *\n           Math.max(0, maxY - minY);\n}\n\nfunction contains(a, b) {\n    return a.minX <= b.minX &&\n           a.minY <= b.minY &&\n           b.maxX <= a.maxX &&\n           b.maxY <= a.maxY;\n}\n\nfunction intersects(a, b) {\n    return b.minX <= a.maxX &&\n           b.minY <= a.maxY &&\n           b.maxX >= a.minX &&\n           b.maxY >= a.minY;\n}\n\nfunction createNode(children) {\n    return {\n        children,\n        height: 1,\n        leaf: true,\n        minX: Infinity,\n        minY: Infinity,\n        maxX: -Infinity,\n        maxY: -Infinity\n    };\n}\n\n// sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\n// combines selection algorithm with binary divide & conquer approach\n\nfunction multiSelect(arr, left, right, n, compare) {\n    const stack = [left, right];\n\n    while (stack.length) {\n        right = stack.pop();\n        left = stack.pop();\n\n        if (right - left <= n) continue;\n\n        const mid = left + Math.ceil((right - left) / n / 2) * n;\n        quickselect(arr, mid, left, right, compare);\n\n        stack.push(left, mid, mid, right);\n    }\n}\n","/**\n * @module ol/color\n */\nimport {createCanvasContext2D} from './dom.js';\nimport {clamp, toFixed} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * Color to indicate that no color should be rendered. This is meant to be used for per-reference\n * comparisons only.\n * @type {Color}\n */\nexport const NO_COLOR = [NaN, NaN, NaN, 0];\n\nlet colorParseContext;\n/**\n * @return {CanvasRenderingContext2D} The color parse context\n */\nfunction getColorParseContext() {\n  if (!colorParseContext) {\n    colorParseContext = createCanvasContext2D(1, 1, undefined, {\n      willReadFrequently: true,\n      desynchronized: true,\n    });\n  }\n  return colorParseContext;\n}\n\nconst rgbModernRegEx =\n  /^rgba?\\(\\s*(\\d+%?)\\s+(\\d+%?)\\s+(\\d+%?)(?:\\s*\\/\\s*(\\d+%|\\d*\\.\\d+|[01]))?\\s*\\)$/i;\nconst rgbLegacyAbsoluteRegEx =\n  /^rgba?\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)(?:\\s*,\\s*(\\d+%|\\d*\\.\\d+|[01]))?\\s*\\)$/i;\nconst rgbLegacyPercentageRegEx =\n  /^rgba?\\(\\s*(\\d+%)\\s*,\\s*(\\d+%)\\s*,\\s*(\\d+%)(?:\\s*,\\s*(\\d+%|\\d*\\.\\d+|[01]))?\\s*\\)$/i;\nconst hexRegEx = /^#([\\da-f]{3,4}|[\\da-f]{6}|[\\da-f]{8})$/i;\n\n/**\n * @param {string} s Color component as number or percentage.\n * @param {number} divider Divider for percentage.\n * @return {number} Color component.\n */\nfunction toColorComponent(s, divider) {\n  return s.endsWith('%')\n    ? Number(s.substring(0, s.length - 1)) / divider\n    : Number(s);\n}\n\n/**\n * @param {string} color Color string.\n */\nfunction throwInvalidColor(color) {\n  throw new Error('failed to parse \"' + color + '\" as color');\n}\n\n/**\n * @param {string} color Color string.\n * @return {Color} RGBa color array.\n */\nfunction parseRgba(color) {\n  // Fast lane for rgb(a) colors\n  if (color.toLowerCase().startsWith('rgb')) {\n    const rgb =\n      color.match(rgbLegacyAbsoluteRegEx) ||\n      color.match(rgbModernRegEx) ||\n      color.match(rgbLegacyPercentageRegEx);\n    if (rgb) {\n      const alpha = rgb[4];\n      const rgbDivider = 100 / 255;\n      return [\n        clamp((toColorComponent(rgb[1], rgbDivider) + 0.5) | 0, 0, 255),\n        clamp((toColorComponent(rgb[2], rgbDivider) + 0.5) | 0, 0, 255),\n        clamp((toColorComponent(rgb[3], rgbDivider) + 0.5) | 0, 0, 255),\n        alpha !== undefined ? clamp(toColorComponent(alpha, 100), 0, 1) : 1,\n      ];\n    }\n    throwInvalidColor(color);\n  }\n  // Fast lane for hex colors (also with alpha)\n  if (color.startsWith('#')) {\n    if (hexRegEx.test(color)) {\n      const hex = color.substring(1);\n      const step = hex.length <= 4 ? 1 : 2;\n      const colorFromHex = [0, 0, 0, 255];\n      for (let i = 0, ii = hex.length; i < ii; i += step) {\n        let colorComponent = parseInt(hex.substring(i, i + step), 16);\n        if (step === 1) {\n          colorComponent += colorComponent << 4;\n        }\n        colorFromHex[i / step] = colorComponent;\n      }\n      colorFromHex[3] = colorFromHex[3] / 255;\n      return colorFromHex;\n    }\n    throwInvalidColor(color);\n  }\n  // Use canvas color serialization to parse the color into hex or rgba\n  // See https://www.w3.org/TR/2021/SPSD-2dcontext-20210128/#serialization-of-a-color\n  const context = getColorParseContext();\n  context.fillStyle = '#abcdef';\n  let invalidCheckFillStyle = context.fillStyle;\n  context.fillStyle = color;\n  if (context.fillStyle === invalidCheckFillStyle) {\n    context.fillStyle = '#fedcba';\n    invalidCheckFillStyle = context.fillStyle;\n    context.fillStyle = color;\n    if (context.fillStyle === invalidCheckFillStyle) {\n      throwInvalidColor(color);\n    }\n  }\n  const colorString = context.fillStyle;\n  if (colorString.startsWith('#') || colorString.startsWith('rgba')) {\n    return parseRgba(colorString);\n  }\n  context.clearRect(0, 0, 1, 1);\n  context.fillRect(0, 0, 1, 1);\n  const colorFromImage = Array.from(context.getImageData(0, 0, 1, 1).data);\n  colorFromImage[3] = toFixed(colorFromImage[3] / 255, 3);\n  return colorFromImage;\n}\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  }\n  return toString(color);\n}\n\n/**\n * @type {number}\n */\nconst MAX_CACHE_SIZE = 1024;\n\n/**\n * We maintain a small cache of parsed strings.  Whenever the cache grows too large,\n * we delete an arbitrary set of the entries.\n *\n * @type {Object<string, Color>}\n */\nconst cache = {};\n\n/**\n * @type {number}\n */\nlet cacheSize = 0;\n\n/**\n * @param {Color} color A color that may or may not have an alpha channel.\n * @return {Color} The input color with an alpha channel.  If the input color has\n * an alpha channel, the input color will be returned unchanged.  Otherwise, a new\n * array will be returned with the input color and an alpha channel of 1.\n */\nexport function withAlpha(color) {\n  if (color.length === 4) {\n    return color;\n  }\n  const output = color.slice();\n  output[3] = 1;\n  return output;\n}\n\n// The functions b1, b2, a1, a2, rgbaToLcha and lchaToRgba below are adapted from\n// https://stackoverflow.com/a/67219995/2389327\n\n/**\n * @param {number} v Input value.\n * @return {number} Output value.\n */\nfunction b1(v) {\n  return v > 0.0031308 ? Math.pow(v, 1 / 2.4) * 269.025 - 14.025 : v * 3294.6;\n}\n\n/**\n * @param {number} v Input value.\n * @return {number} Output value.\n */\nfunction b2(v) {\n  return v > 0.2068965 ? Math.pow(v, 3) : (v - 4 / 29) * (108 / 841);\n}\n\n/**\n * @param {number} v Input value.\n * @return {number} Output value.\n */\nfunction a1(v) {\n  return v > 10.314724 ? Math.pow((v + 14.025) / 269.025, 2.4) : v / 3294.6;\n}\n\n/**\n * @param {number} v Input value.\n * @return {number} Output value.\n */\nfunction a2(v) {\n  return v > 0.0088564 ? Math.pow(v, 1 / 3) : v / (108 / 841) + 4 / 29;\n}\n\n/**\n * @param {Color} color RGBA color.\n * @return {Color} LCHuv color with alpha.\n */\nexport function rgbaToLcha(color) {\n  const r = a1(color[0]);\n  const g = a1(color[1]);\n  const b = a1(color[2]);\n  const y = a2(r * 0.222488403 + g * 0.716873169 + b * 0.06060791);\n  const l = 500 * (a2(r * 0.452247074 + g * 0.399439023 + b * 0.148375274) - y);\n  const q = 200 * (y - a2(r * 0.016863605 + g * 0.117638439 + b * 0.865350722));\n  const h = Math.atan2(q, l) * (180 / Math.PI);\n  return [\n    116 * y - 16,\n    Math.sqrt(l * l + q * q),\n    h < 0 ? h + 360 : h,\n    color[3],\n  ];\n}\n\n/**\n * @param {Color} color LCHuv color with alpha.\n * @return {Color} RGBA color.\n */\nexport function lchaToRgba(color) {\n  const l = (color[0] + 16) / 116;\n  const c = color[1];\n  const h = (color[2] * Math.PI) / 180;\n  const y = b2(l);\n  const x = b2(l + (c / 500) * Math.cos(h));\n  const z = b2(l - (c / 200) * Math.sin(h));\n  const r = b1(x * 3.021973625 - y * 1.617392459 - z * 0.404875592);\n  const g = b1(x * -0.943766287 + y * 1.916279586 + z * 0.027607165);\n  const b = b1(x * 0.069407491 - y * 0.22898585 + z * 1.159737864);\n  return [\n    clamp((r + 0.5) | 0, 0, 255),\n    clamp((g + 0.5) | 0, 0, 255),\n    clamp((b + 0.5) | 0, 0, 255),\n    color[3],\n  ];\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport function fromString(s) {\n  if (s === 'none') {\n    return NO_COLOR;\n  }\n  if (cache.hasOwnProperty(s)) {\n    return cache[s];\n  }\n  if (cacheSize >= MAX_CACHE_SIZE) {\n    let i = 0;\n    for (const key in cache) {\n      if ((i++ & 3) === 0) {\n        delete cache[key];\n        --cacheSize;\n      }\n    }\n  }\n\n  const color = parseRgba(s);\n  if (color.length !== 4) {\n    throwInvalidColor(s);\n  }\n  for (const c of color) {\n    if (isNaN(c)) {\n      throwInvalidColor(s);\n    }\n  }\n  cache[s] = color;\n  ++cacheSize;\n  return color;\n}\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  }\n  return fromString(color);\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : Math.round(color[3] * 1000) / 1000;\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  try {\n    fromString(s);\n    return true;\n  } catch {\n    return false;\n  }\n}\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = size[0] + 2 * num;\n  dest[1] = size[1] + 2 * num;\n  return dest;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = (size[0] * ratio + 0.5) | 0;\n  dest[1] = (size[1] * ratio + 0.5) | 0;\n  return dest;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, dest) {\n  if (Array.isArray(size)) {\n    return size;\n  }\n  if (dest === undefined) {\n    dest = [size, size];\n  } else {\n    dest[0] = size;\n    dest[1] = size;\n  }\n  return dest;\n}\n","/**\n * @module ol/expr/expression\n */\nimport {ascending} from '../array.js';\nimport {fromString as colorFromString} from '../color.js';\nimport {toSize} from '../size.js';\n\n/**\n * @fileoverview This module includes types and functions for parsing array encoded expressions.\n * The result of parsing an encoded expression is one of the specific expression classes.\n * During parsing, information is added to the parsing context about the data accessed by the\n * expression.\n */\n\n/**\n * Base type used for literal style parameters; can be a number literal or the output of an operator,\n * which in turns takes {@link import(\"./expression.js\").ExpressionValue} arguments.\n *\n * See below for details on the available operators (with notes for those that are WebGL or Canvas only).\n *\n * Reading operators:\n *   * `['band', bandIndex, xOffset, yOffset]` For tile layers only. Fetches pixel values from band\n *     `bandIndex` of the source's data. The first `bandIndex` of the source data is `1`. Fetched values\n *     are in the 0..1 range. {@link import(\"../source/TileImage.js\").default} sources have 4 bands: red,\n *     green, blue and alpha. {@link import(\"../source/DataTile.js\").default} sources can have any number\n *     of bands, depending on the underlying data source and\n *     {@link import(\"../source/GeoTIFF.js\").Options configuration}. `xOffset` and `yOffset` are optional\n *     and allow specifying pixel offsets for x and y. This is used for sampling data from neighboring pixels (WebGL only).\n *   * `['get', attributeName]` fetches a feature property value, similar to `feature.get('attributeName')`.\n *   * `['get', attributeName, keyOrArrayIndex, ...]` (Canvas only) Access nested properties and array items of a\n *     feature property. The result is `undefined` when there is nothing at the specified key or index.\n *   * `['geometry-type']` returns a feature's geometry type as string, either: 'LineString', 'Point' or 'Polygon'\n *     `Multi*` values are returned as their singular equivalent\n *     `Circle` geometries are returned as 'Polygon'\n *     `GeometryCollection` geometries are returned as the type of the first geometry found in the collection (WebGL only).\n *   * `['resolution']` returns the current resolution\n *   * `['time']` The time in seconds since the creation of the layer (WebGL only).\n *   * `['var', 'varName']` fetches a value from the style variables; will throw an error if that variable is undefined\n *   * `['zoom']` The current zoom level (WebGL only).\n *   * `['line-metric']` returns the M component of the current point on a line (WebGL only); in case where the geometry layout of the line\n *      does not contain an M component (e.g. XY or XYZ), 0 is returned; 0 is also returned for geometries other than lines.\n *      Please note that the M component will be linearly interpolated between the two points composing a segment.\n *\n * Math operators:\n *   * `['*', value1, value2, ...]` multiplies the values (either numbers or colors)\n *   * `['/', value1, value2]` divides `value1` by `value2`\n *   * `['+', value1, value2, ...]` adds the values\n *   * `['-', value1, value2]` subtracts `value2` from `value1`\n *   * `['clamp', value, low, high]` clamps `value` between `low` and `high`\n *   * `['%', value1, value2]` returns the result of `value1 % value2` (modulo)\n *   * `['^', value1, value2]` returns the value of `value1` raised to the `value2` power\n *   * `['abs', value1]` returns the absolute value of `value1`\n *   * `['floor', value1]` returns the nearest integer less than or equal to `value1`\n *   * `['round', value1]` returns the nearest integer to `value1`\n *   * `['ceil', value1]` returns the nearest integer greater than or equal to `value1`\n *   * `['sin', value1]` returns the sine of `value1`\n *   * `['cos', value1]` returns the cosine of `value1`\n *   * `['atan', value1, value2]` returns `atan2(value1, value2)`. If `value2` is not provided, returns `atan(value1)`\n *   * `['sqrt', value1]` returns the square root of `value1`\n *\n * * Transform operators:\n *   * `['case', condition1, output1, ...conditionN, outputN, fallback]` selects the first output whose corresponding\n *     condition evaluates to `true`. If no match is found, returns the `fallback` value.\n *     All conditions should be `boolean`, output and fallback can be any kind.\n *   * `['match', input, match1, output1, ...matchN, outputN, fallback]` compares the `input` value against all\n *     provided `matchX` values, returning the output associated with the first valid match. If no match is found,\n *     returns the `fallback` value.\n *     `input` and `matchX` values must all be of the same type, and can be `number` or `string`. `outputX` and\n *     `fallback` values must be of the same type, and can be of any kind.\n *   * `['interpolate', interpolation, input, stop1, output1, ...stopN, outputN]` returns a value by interpolating between\n *     pairs of inputs and outputs; `interpolation` can either be `['linear']` or `['exponential', base]` where `base` is\n *     the rate of increase from stop A to stop B (i.e. power to which the interpolation ratio is raised); a value\n *     of 1 is equivalent to `['linear']`.\n *     `input` and `stopX` values must all be of type `number`. `outputX` values can be `number` or `color` values.\n *     Note: `input` will be clamped between `stop1` and `stopN`, meaning that all output values will be comprised\n *     between `output1` and `outputN`.\n *   * `['string', value1, value2, ...]` returns the first value in the list that evaluates to a string.\n *     An example would be to provide a default value for get: `['string', ['get', 'propertyname'], 'default value']]`\n *     (Canvas only).\n *   * `['number', value1, value2, ...]` returns the first value in the list that evaluates to a number.\n *     An example would be to provide a default value for get: `['string', ['get', 'propertyname'], 42]]`\n *     (Canvas only).\n *   * `['coalesce', value1, value2, ...]` returns the first value in the list which is not null or undefined.\n *     An example would be to provide a default value for get: `['coalesce', ['get','propertyname'], 'default value']]`\n *     (Canvas only).\n *\n * * Logical operators:\n *   * `['<', value1, value2]` returns `true` if `value1` is strictly lower than `value2`, or `false` otherwise.\n *   * `['<=', value1, value2]` returns `true` if `value1` is lower than or equals `value2`, or `false` otherwise.\n *   * `['>', value1, value2]` returns `true` if `value1` is strictly greater than `value2`, or `false` otherwise.\n *   * `['>=', value1, value2]` returns `true` if `value1` is greater than or equals `value2`, or `false` otherwise.\n *   * `['==', value1, value2]` returns `true` if `value1` equals `value2`, or `false` otherwise.\n *   * `['!=', value1, value2]` returns `true` if `value1` does not equal `value2`, or `false` otherwise.\n *   * `['!', value1]` returns `false` if `value1` is `true` or greater than `0`, or `true` otherwise.\n *   * `['all', value1, value2, ...]` returns `true` if all the inputs are `true`, `false` otherwise.\n *   * `['any', value1, value2, ...]` returns `true` if any of the inputs are `true`, `false` otherwise.\n *   * `['has', attributeName, keyOrArrayIndex, ...]` returns `true` if feature properties include the (nested) key `attributeName`,\n *     `false` otherwise.\n *     Note that for WebGL layers, the hardcoded value `-9999999` is used to distinguish when a property is not defined.\n *   * `['between', value1, value2, value3]` returns `true` if `value1` is contained between `value2` and `value3`\n *     (inclusively), or `false` otherwise.\n *   * `['in', needle, haystack]` returns `true` if `needle` is found in `haystack`, and\n *     `false` otherwise.\n *     This operator has the following limitations:\n *     * `haystack` has to be an array of numbers or strings (searching for a substring in a string is not supported yet)\n *     * Only literal arrays are supported as `haystack` for now; this means that `haystack` cannot be the result of an\n *     expression. If `haystack` is an array of strings, use the `literal` operator to disambiguate from an expression:\n *     `['literal', ['abc', 'def', 'ghi']]`\n *\n * * Conversion operators:\n *   * `['array', value1, ...valueN]` creates a numerical array from `number` values; please note that the amount of\n *     values can currently only be 2, 3 or 4 (WebGL only).\n *   * `['color', red, green, blue, alpha]` or `['color', shade, alpha]` creates a `color` value from `number` values;\n *     the `alpha` parameter is optional; if not specified, it will be set to 1 (WebGL only).\n *     Note: `red`, `green` and `blue` or `shade` components must be values between 0 and 255; `alpha` between 0 and 1.\n *   * `['palette', index, colors]` picks a `color` value from an array of colors using the given index; the `index`\n *     expression must evaluate to a number; the items in the `colors` array must be strings with hex colors\n *     (e.g. `'#86A136'`), colors using the rgba[a] functional notation (e.g. `'rgb(134, 161, 54)'` or `'rgba(134, 161, 54, 1)'`),\n *     named colors (e.g. `'red'`), or array literals with 3 ([r, g, b]) or 4 ([r, g, b, a]) values (with r, g, and b\n *     in the 0-255 range and a in the 0-1 range) (WebGL only).\n *   * `['to-string', value]` converts the input value to a string. If the input is a boolean, the result is \"true\" or \"false\".\n *     If the input is a number, it is converted to a string as specified by the \"NumberToString\" algorithm of the ECMAScript\n *     Language Specification. If the input is a color, it is converted to a string of the form \"rgba(r,g,b,a)\". (Canvas only)\n *\n * Values can either be literals or another operator, as they will be evaluated recursively.\n * Literal values can be of the following types:\n * * `boolean`\n * * `number`\n * * `number[]` (number arrays can only have a length of 2, 3 or 4)\n * * `string`\n * * {@link module:ol/color~Color}\n *\n * @typedef {Array<*>|import(\"../color.js\").Color|string|number|boolean} ExpressionValue\n * @api\n */\n\nlet numTypes = 0;\nexport const NoneType = 0;\nexport const BooleanType = 1 << numTypes++;\nexport const NumberType = 1 << numTypes++;\nexport const StringType = 1 << numTypes++;\nexport const ColorType = 1 << numTypes++;\nexport const NumberArrayType = 1 << numTypes++;\nexport const SizeType = 1 << numTypes++;\nexport const AnyType = Math.pow(2, numTypes) - 1;\n\nconst typeNames = {\n  [BooleanType]: 'boolean',\n  [NumberType]: 'number',\n  [StringType]: 'string',\n  [ColorType]: 'color',\n  [NumberArrayType]: 'number[]',\n  [SizeType]: 'size',\n};\n\nconst namedTypes = Object.keys(typeNames).map(Number).sort(ascending);\n\n/**\n * @param {number} type The type.\n * @return {boolean} The type is one of the specific types (not any or a union type).\n */\nfunction isSpecific(type) {\n  return type in typeNames;\n}\n\n/**\n * Get a string representation for a type.\n * @param {number} type The type.\n * @return {string} The type name.\n */\nexport function typeName(type) {\n  const names = [];\n  for (const namedType of namedTypes) {\n    if (includesType(type, namedType)) {\n      names.push(typeNames[namedType]);\n    }\n  }\n  if (names.length === 0) {\n    return 'untyped';\n  }\n  if (names.length < 3) {\n    return names.join(' or ');\n  }\n  return names.slice(0, -1).join(', ') + ', or ' + names[names.length - 1];\n}\n\n/**\n * @param {number} broad The broad type.\n * @param {number} specific The specific type.\n * @return {boolean} The broad type includes the specific type.\n */\nexport function includesType(broad, specific) {\n  return (broad & specific) === specific;\n}\n\n/**\n * @param {number} oneType One type.\n * @param {number} otherType Another type.\n * @return {boolean} The set of types overlap (share a common specific type)\n */\nexport function overlapsType(oneType, otherType) {\n  return !!(oneType & otherType);\n}\n\n/**\n * @param {number} type The type.\n * @param {number} expected The expected type.\n * @return {boolean} The given type is exactly the expected type.\n */\nexport function isType(type, expected) {\n  return type === expected;\n}\n\n/**\n * @typedef {boolean|number|string|Array<number>} LiteralValue\n */\n\nexport class LiteralExpression {\n  /**\n   * @param {number} type The value type.\n   * @param {LiteralValue} value The literal value.\n   */\n  constructor(type, value) {\n    if (!isSpecific(type)) {\n      throw new Error(\n        `literal expressions must have a specific type, got ${typeName(type)}`,\n      );\n    }\n    this.type = type;\n    this.value = value;\n  }\n}\n\nexport class CallExpression {\n  /**\n   * @param {number} type The return type.\n   * @param {string} operator The operator.\n   * @param {...Expression} args The arguments.\n   */\n  constructor(type, operator, ...args) {\n    this.type = type;\n    this.operator = operator;\n    this.args = args;\n  }\n}\n\n/**\n * @typedef {LiteralExpression|CallExpression} Expression\n */\n\n/**\n * @typedef {Object} ParsingContext\n * @property {Set<string>} variables Variables referenced with the 'var' operator.\n * @property {Set<string>} properties Properties referenced with the 'get' operator.\n * @property {boolean} featureId The style uses the feature id.\n * @property {boolean} geometryType The style uses the feature geometry type.\n * @property {boolean} mapState The style uses the map state (view state or time elapsed).\n */\n\n/**\n * @return {ParsingContext} A new parsing context.\n */\nexport function newParsingContext() {\n  return {\n    variables: new Set(),\n    properties: new Set(),\n    featureId: false,\n    geometryType: false,\n    mapState: false,\n  };\n}\n\n/**\n * @typedef {LiteralValue|Array} EncodedExpression\n */\n\n/**\n * @param {EncodedExpression} encoded The encoded expression.\n * @param {number} expectedType The expected type.\n * @param {ParsingContext} context The parsing context.\n * @return {Expression} The parsed expression result.\n */\nexport function parse(encoded, expectedType, context) {\n  switch (typeof encoded) {\n    case 'boolean': {\n      if (isType(expectedType, StringType)) {\n        return new LiteralExpression(StringType, encoded ? 'true' : 'false');\n      }\n      if (!includesType(expectedType, BooleanType)) {\n        throw new Error(\n          `got a boolean, but expected ${typeName(expectedType)}`,\n        );\n      }\n      return new LiteralExpression(BooleanType, encoded);\n    }\n    case 'number': {\n      if (isType(expectedType, SizeType)) {\n        return new LiteralExpression(SizeType, toSize(encoded));\n      }\n      if (isType(expectedType, BooleanType)) {\n        return new LiteralExpression(BooleanType, !!encoded);\n      }\n      if (isType(expectedType, StringType)) {\n        return new LiteralExpression(StringType, encoded.toString());\n      }\n      if (!includesType(expectedType, NumberType)) {\n        throw new Error(`got a number, but expected ${typeName(expectedType)}`);\n      }\n      return new LiteralExpression(NumberType, encoded);\n    }\n    case 'string': {\n      if (isType(expectedType, ColorType)) {\n        return new LiteralExpression(ColorType, colorFromString(encoded));\n      }\n      if (isType(expectedType, BooleanType)) {\n        return new LiteralExpression(BooleanType, !!encoded);\n      }\n      if (!includesType(expectedType, StringType)) {\n        throw new Error(`got a string, but expected ${typeName(expectedType)}`);\n      }\n      return new LiteralExpression(StringType, encoded);\n    }\n    default: {\n      // pass\n    }\n  }\n\n  if (!Array.isArray(encoded)) {\n    throw new Error('expression must be an array or a primitive value');\n  }\n\n  if (encoded.length === 0) {\n    throw new Error('empty expression');\n  }\n\n  if (typeof encoded[0] === 'string') {\n    return parseCallExpression(encoded, expectedType, context);\n  }\n\n  for (const item of encoded) {\n    if (typeof item !== 'number') {\n      throw new Error('expected an array of numbers');\n    }\n  }\n\n  if (isType(expectedType, SizeType)) {\n    if (encoded.length !== 2) {\n      throw new Error(\n        `expected an array of two values for a size, got ${encoded.length}`,\n      );\n    }\n    return new LiteralExpression(SizeType, encoded);\n  }\n\n  if (isType(expectedType, ColorType)) {\n    if (encoded.length === 3) {\n      return new LiteralExpression(ColorType, [...encoded, 1]);\n    }\n    if (encoded.length === 4) {\n      return new LiteralExpression(ColorType, encoded);\n    }\n    throw new Error(\n      `expected an array of 3 or 4 values for a color, got ${encoded.length}`,\n    );\n  }\n\n  if (!includesType(expectedType, NumberArrayType)) {\n    throw new Error(\n      `got an array of numbers, but expected ${typeName(expectedType)}`,\n    );\n  }\n\n  return new LiteralExpression(NumberArrayType, encoded);\n}\n\n/**\n * @type {Object<string, string>}\n */\nexport const Ops = {\n  Get: 'get',\n  Var: 'var',\n  Concat: 'concat',\n  GeometryType: 'geometry-type',\n  LineMetric: 'line-metric',\n  Any: 'any',\n  All: 'all',\n  Not: '!',\n  Resolution: 'resolution',\n  Zoom: 'zoom',\n  Time: 'time',\n  Equal: '==',\n  NotEqual: '!=',\n  GreaterThan: '>',\n  GreaterThanOrEqualTo: '>=',\n  LessThan: '<',\n  LessThanOrEqualTo: '<=',\n  Multiply: '*',\n  Divide: '/',\n  Add: '+',\n  Subtract: '-',\n  Clamp: 'clamp',\n  Mod: '%',\n  Pow: '^',\n  Abs: 'abs',\n  Floor: 'floor',\n  Ceil: 'ceil',\n  Round: 'round',\n  Sin: 'sin',\n  Cos: 'cos',\n  Atan: 'atan',\n  Sqrt: 'sqrt',\n  Match: 'match',\n  Between: 'between',\n  Interpolate: 'interpolate',\n  Coalesce: 'coalesce',\n  Case: 'case',\n  In: 'in',\n  Number: 'number',\n  String: 'string',\n  Array: 'array',\n  Color: 'color',\n  Id: 'id',\n  Band: 'band',\n  Palette: 'palette',\n  ToString: 'to-string',\n  Has: 'has',\n};\n\n/**\n * @typedef {function(Array, number, ParsingContext):Expression} Parser\n *\n * Second argument is the expected type.\n */\n\n/**\n * @type {Object<string, Parser>}\n */\nconst parsers = {\n  [Ops.Get]: createCallExpressionParser(hasArgsCount(1, Infinity), withGetArgs),\n  [Ops.Var]: createCallExpressionParser(hasArgsCount(1, 1), withVarArgs),\n  [Ops.Has]: createCallExpressionParser(hasArgsCount(1, Infinity), withGetArgs),\n  [Ops.Id]: createCallExpressionParser(usesFeatureId, withNoArgs),\n  [Ops.Concat]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfType(StringType),\n  ),\n  [Ops.GeometryType]: createCallExpressionParser(usesGeometryType, withNoArgs),\n  [Ops.LineMetric]: createCallExpressionParser(withNoArgs),\n  [Ops.Resolution]: createCallExpressionParser(usesMapState, withNoArgs),\n  [Ops.Zoom]: createCallExpressionParser(usesMapState, withNoArgs),\n  [Ops.Time]: createCallExpressionParser(usesMapState, withNoArgs),\n  [Ops.Any]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfType(BooleanType),\n  ),\n  [Ops.All]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfType(BooleanType),\n  ),\n  [Ops.Not]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(BooleanType),\n  ),\n  [Ops.Equal]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(AnyType),\n  ),\n  [Ops.NotEqual]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(AnyType),\n  ),\n  [Ops.GreaterThan]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.GreaterThanOrEqualTo]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.LessThan]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.LessThanOrEqualTo]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Multiply]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfReturnType,\n  ),\n  [Ops.Coalesce]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfReturnType,\n  ),\n  [Ops.Divide]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Add]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Subtract]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Clamp]: createCallExpressionParser(\n    hasArgsCount(3, 3),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Mod]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Pow]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Abs]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Floor]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Ceil]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Round]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Sin]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Cos]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Atan]: createCallExpressionParser(\n    hasArgsCount(1, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Sqrt]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Match]: createCallExpressionParser(\n    hasArgsCount(4, Infinity),\n    hasEvenArgs,\n    withMatchArgs,\n  ),\n  [Ops.Between]: createCallExpressionParser(\n    hasArgsCount(3, 3),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Interpolate]: createCallExpressionParser(\n    hasArgsCount(6, Infinity),\n    hasEvenArgs,\n    withInterpolateArgs,\n  ),\n  [Ops.Case]: createCallExpressionParser(\n    hasArgsCount(3, Infinity),\n    hasOddArgs,\n    withCaseArgs,\n  ),\n  [Ops.In]: createCallExpressionParser(hasArgsCount(2, 2), withInArgs),\n  [Ops.Number]: createCallExpressionParser(\n    hasArgsCount(1, Infinity),\n    withArgsOfType(AnyType),\n  ),\n  [Ops.String]: createCallExpressionParser(\n    hasArgsCount(1, Infinity),\n    withArgsOfType(AnyType),\n  ),\n  [Ops.Array]: createCallExpressionParser(\n    hasArgsCount(1, Infinity),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Color]: createCallExpressionParser(\n    hasArgsCount(1, 4),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Band]: createCallExpressionParser(\n    hasArgsCount(1, 3),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Palette]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withPaletteArgs,\n  ),\n  [Ops.ToString]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(BooleanType | NumberType | StringType | ColorType),\n  ),\n};\n\n/**\n * @typedef {function(Array<EncodedExpression>, number, ParsingContext):Array<Expression>|void} ArgValidator\n *\n * An argument validator applies various checks to an encoded expression arguments and\n * returns the parsed arguments if any.  The second argument is the return type of the call expression.\n */\n\n/**\n * @type {ArgValidator}\n */\nfunction withGetArgs(encoded, returnType, context) {\n  const argsCount = encoded.length - 1;\n  const args = new Array(argsCount);\n  for (let i = 0; i < argsCount; ++i) {\n    const key = encoded[i + 1];\n    switch (typeof key) {\n      case 'number': {\n        args[i] = new LiteralExpression(NumberType, key);\n        break;\n      }\n      case 'string': {\n        args[i] = new LiteralExpression(StringType, key);\n        break;\n      }\n      default: {\n        throw new Error(\n          `expected a string key or numeric array index for a get operation, got ${key}`,\n        );\n      }\n    }\n    if (i === 0) {\n      context.properties.add(String(key));\n    }\n  }\n  return args;\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withVarArgs(encoded, returnType, context) {\n  const name = encoded[1];\n  if (typeof name !== 'string') {\n    throw new Error('expected a string argument for var operation');\n  }\n  context.variables.add(name);\n\n  return [new LiteralExpression(StringType, name)];\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction usesFeatureId(encoded, returnType, context) {\n  context.featureId = true;\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction usesGeometryType(encoded, returnType, context) {\n  context.geometryType = true;\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction usesMapState(encoded, returnType, context) {\n  context.mapState = true;\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withNoArgs(encoded, returnType, context) {\n  const operation = encoded[0];\n  if (encoded.length !== 1) {\n    throw new Error(`expected no arguments for ${operation} operation`);\n  }\n  return [];\n}\n\n/**\n * @param {number} minArgs The minimum number of arguments.\n * @param {number} maxArgs The maximum number of arguments.\n * @return {ArgValidator} The argument validator\n */\nfunction hasArgsCount(minArgs, maxArgs) {\n  return function (encoded, returnType, context) {\n    const operation = encoded[0];\n    const argCount = encoded.length - 1;\n    if (minArgs === maxArgs) {\n      if (argCount !== minArgs) {\n        const plural = minArgs === 1 ? '' : 's';\n        throw new Error(\n          `expected ${minArgs} argument${plural} for ${operation}, got ${argCount}`,\n        );\n      }\n    } else if (argCount < minArgs || argCount > maxArgs) {\n      const range =\n        maxArgs === Infinity\n          ? `${minArgs} or more`\n          : `${minArgs} to ${maxArgs}`;\n      throw new Error(\n        `expected ${range} arguments for ${operation}, got ${argCount}`,\n      );\n    }\n  };\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withArgsOfReturnType(encoded, returnType, context) {\n  const argCount = encoded.length - 1;\n  /**\n   * @type {Array<Expression>}\n   */\n  const args = new Array(argCount);\n  for (let i = 0; i < argCount; ++i) {\n    const expression = parse(encoded[i + 1], returnType, context);\n    args[i] = expression;\n  }\n  return args;\n}\n\n/**\n * @param {number} argType The argument type.\n * @return {ArgValidator} The argument validator\n */\nfunction withArgsOfType(argType) {\n  return function (encoded, returnType, context) {\n    const argCount = encoded.length - 1;\n    /**\n     * @type {Array<Expression>}\n     */\n    const args = new Array(argCount);\n    for (let i = 0; i < argCount; ++i) {\n      const expression = parse(encoded[i + 1], argType, context);\n      args[i] = expression;\n    }\n    return args;\n  };\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction hasOddArgs(encoded, returnType, context) {\n  const operation = encoded[0];\n  const argCount = encoded.length - 1;\n  if (argCount % 2 === 0) {\n    throw new Error(\n      `expected an odd number of arguments for ${operation}, got ${argCount} instead`,\n    );\n  }\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction hasEvenArgs(encoded, returnType, context) {\n  const operation = encoded[0];\n  const argCount = encoded.length - 1;\n  if (argCount % 2 === 1) {\n    throw new Error(\n      `expected an even number of arguments for operation ${operation}, got ${argCount} instead`,\n    );\n  }\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withMatchArgs(encoded, returnType, context) {\n  const argsCount = encoded.length - 1;\n\n  const inputType = StringType | NumberType | BooleanType;\n\n  const input = parse(encoded[1], inputType, context);\n\n  const fallback = parse(encoded[encoded.length - 1], returnType, context);\n\n  const args = new Array(argsCount - 2);\n  for (let i = 0; i < argsCount - 2; i += 2) {\n    try {\n      const match = parse(encoded[i + 2], input.type, context);\n      args[i] = match;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 1} of match expression: ${err.message}`,\n      );\n    }\n    try {\n      const output = parse(encoded[i + 3], fallback.type, context);\n      args[i + 1] = output;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 2} of match expression: ${err.message}`,\n      );\n    }\n  }\n\n  return [input, ...args, fallback];\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withInterpolateArgs(encoded, returnType, context) {\n  const interpolationType = encoded[1];\n  /**\n   * @type {number}\n   */\n  let base;\n  switch (interpolationType[0]) {\n    case 'linear':\n      base = 1;\n      break;\n    case 'exponential':\n      const b = interpolationType[1];\n      if (typeof b !== 'number' || b <= 0) {\n        throw new Error(\n          `expected a number base for exponential interpolation` +\n            `, got ${JSON.stringify(b)} instead`,\n        );\n      }\n      base = b;\n      break;\n    default:\n      throw new Error(\n        `invalid interpolation type: ${JSON.stringify(interpolationType)}`,\n      );\n  }\n\n  const interpolation = new LiteralExpression(NumberType, base);\n\n  let input;\n  try {\n    input = parse(encoded[2], NumberType, context);\n  } catch (err) {\n    throw new Error(\n      `failed to parse argument 1 in interpolate expression: ${err.message}`,\n    );\n  }\n\n  const args = new Array(encoded.length - 3);\n  for (let i = 0; i < args.length; i += 2) {\n    try {\n      const stop = parse(encoded[i + 3], NumberType, context);\n      args[i] = stop;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 2} for interpolate expression: ${err.message}`,\n      );\n    }\n    try {\n      const output = parse(encoded[i + 4], returnType, context);\n      args[i + 1] = output;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 3} for interpolate expression: ${err.message}`,\n      );\n    }\n  }\n\n  return [interpolation, input, ...args];\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withCaseArgs(encoded, returnType, context) {\n  const fallback = parse(encoded[encoded.length - 1], returnType, context);\n\n  const args = new Array(encoded.length - 1);\n  for (let i = 0; i < args.length - 1; i += 2) {\n    try {\n      const condition = parse(encoded[i + 1], BooleanType, context);\n      args[i] = condition;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i} of case expression: ${err.message}`,\n      );\n    }\n    try {\n      const output = parse(encoded[i + 2], fallback.type, context);\n      args[i + 1] = output;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 1} of case expression: ${err.message}`,\n      );\n    }\n  }\n\n  args[args.length - 1] = fallback;\n  return args;\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withInArgs(encoded, returnType, context) {\n  let haystack = encoded[2];\n  if (!Array.isArray(haystack)) {\n    throw new Error(\n      `the second argument for the \"in\" operator must be an array`,\n    );\n  }\n  /**\n   * @type {number}\n   */\n  let needleType;\n  if (typeof haystack[0] === 'string') {\n    if (haystack[0] !== 'literal') {\n      throw new Error(\n        `for the \"in\" operator, a string array should be wrapped in a \"literal\" operator to disambiguate from expressions`,\n      );\n    }\n    if (!Array.isArray(haystack[1])) {\n      throw new Error(\n        `failed to parse \"in\" expression: the literal operator must be followed by an array`,\n      );\n    }\n    haystack = haystack[1];\n    needleType = StringType;\n  } else {\n    needleType = NumberType;\n  }\n\n  const args = new Array(haystack.length);\n  for (let i = 0; i < args.length; i++) {\n    try {\n      const arg = parse(haystack[i], needleType, context);\n      args[i] = arg;\n    } catch (err) {\n      throw new Error(\n        `failed to parse haystack item ${i} for \"in\" expression: ${err.message}`,\n      );\n    }\n  }\n\n  const needle = parse(encoded[1], needleType, context);\n  return [needle, ...args];\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withPaletteArgs(encoded, returnType, context) {\n  let index;\n  try {\n    index = parse(encoded[1], NumberType, context);\n  } catch (err) {\n    throw new Error(\n      `failed to parse first argument in palette expression: ${err.message}`,\n    );\n  }\n  const colors = encoded[2];\n  if (!Array.isArray(colors)) {\n    throw new Error('the second argument of palette must be an array');\n  }\n  const parsedColors = new Array(colors.length);\n  for (let i = 0; i < parsedColors.length; i++) {\n    let color;\n    try {\n      color = parse(colors[i], ColorType, context);\n    } catch (err) {\n      throw new Error(\n        `failed to parse color at index ${i} in palette expression: ${err.message}`,\n      );\n    }\n    if (!(color instanceof LiteralExpression)) {\n      throw new Error(\n        `the palette color at index ${i} must be a literal value`,\n      );\n    }\n    parsedColors[i] = color;\n  }\n  return [index, ...parsedColors];\n}\n\n/**\n * @param {Array<ArgValidator>} validators A chain of argument validators.  The last validator is expected\n * to return the parsed arguments.\n * @return {Parser} The parser.\n */\nfunction createCallExpressionParser(...validators) {\n  return function (encoded, returnType, context) {\n    const operator = encoded[0];\n\n    /**\n     * @type {Array<Expression>}\n     */\n    let args;\n    for (let i = 0; i < validators.length; i++) {\n      const parsed = validators[i](encoded, returnType, context);\n      if (i == validators.length - 1) {\n        if (!parsed) {\n          throw new Error(\n            'expected last argument validator to return the parsed args',\n          );\n        }\n        args = parsed;\n      }\n    }\n    return new CallExpression(returnType, operator, ...args);\n  };\n}\n\n/**\n * @param {Array} encoded The encoded expression.\n * @param {number} returnType The expected return type of the call expression.\n * @param {ParsingContext} context The parsing context.\n * @return {Expression} The parsed expression.\n */\nfunction parseCallExpression(encoded, returnType, context) {\n  const operator = encoded[0];\n\n  const parser = parsers[operator];\n  if (!parser) {\n    throw new Error(`unknown operator: ${operator}`);\n  }\n  return parser(encoded, returnType, context);\n}\n\n/**\n * Returns a simplified geometry type suited for the `geometry-type` operator\n * @param {import('../geom/Geometry.js').default|import('../render/Feature.js').default} geometry Geometry object\n * @return {'Point'|'LineString'|'Polygon'|''} Simplified geometry type; empty string of no geometry found\n */\nexport function computeGeometryType(geometry) {\n  if (!geometry) {\n    return '';\n  }\n  const type = geometry.getType();\n  switch (type) {\n    case 'Point':\n    case 'LineString':\n    case 'Polygon':\n      return type;\n    case 'MultiPoint':\n    case 'MultiLineString':\n    case 'MultiPolygon':\n      return /** @type {'Point'|'LineString'|'Polygon'} */ (type.substring(5));\n    case 'Circle':\n      return 'Polygon';\n    case 'GeometryCollection':\n      return computeGeometryType(\n        /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries()[0],\n      );\n    default:\n      return '';\n  }\n}\n","/**\n * @module ol/expr/cpu\n */\n\nimport {\n  fromString,\n  lchaToRgba,\n  rgbaToLcha,\n  toString,\n  withAlpha,\n} from '../color.js';\nimport {ColorType, LiteralExpression, Ops, parse} from './expression.js';\n\n/**\n * @fileoverview This module includes functions to build expressions for evaluation on the CPU.\n * Building is composed of two steps: parsing and compiling.  The parsing step takes an encoded\n * expression and returns an instance of one of the expression classes.  The compiling step takes\n * the expression instance and returns a function that can be evaluated in to return a literal\n * value.  The evaluator function should do as little allocation and work as possible.\n */\n\n/**\n * @typedef {Object} EvaluationContext\n * @property {Object} properties The values for properties used in 'get' expressions.\n * @property {Object} variables The values for variables used in 'var' expressions.\n * @property {number} resolution The map resolution.\n * @property {string|number|null} featureId The feature id.\n * @property {string} geometryType Geometry type of the current object.\n */\n\n/**\n * @return {EvaluationContext} A new evaluation context.\n */\nexport function newEvaluationContext() {\n  return {\n    variables: {},\n    properties: {},\n    resolution: NaN,\n    featureId: null,\n    geometryType: '',\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):import(\"./expression.js\").LiteralValue} ExpressionEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):boolean} BooleanEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):number} NumberEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):string} StringEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>|string)} ColorLikeEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):Array<number>} NumberArrayEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):Array<number>} CoordinateEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>)} SizeEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>|number)} SizeLikeEvaluator\n */\n\n/**\n * @param {import('./expression.js').EncodedExpression} encoded The encoded expression.\n * @param {number} type The expected type.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The expression evaluator.\n */\nexport function buildExpression(encoded, type, context) {\n  const expression = parse(encoded, type, context);\n  return compileExpression(expression, context);\n}\n\n/**\n * @param {import(\"./expression.js\").Expression} expression The expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileExpression(expression, context) {\n  if (expression instanceof LiteralExpression) {\n    // convert colors to array if possible\n    if (expression.type === ColorType && typeof expression.value === 'string') {\n      const colorValue = fromString(expression.value);\n      return function () {\n        return colorValue;\n      };\n    }\n    return function () {\n      return expression.value;\n    };\n  }\n  const operator = expression.operator;\n  switch (operator) {\n    case Ops.Number:\n    case Ops.String:\n    case Ops.Coalesce: {\n      return compileAssertionExpression(expression, context);\n    }\n    case Ops.Get:\n    case Ops.Var:\n    case Ops.Has: {\n      return compileAccessorExpression(expression, context);\n    }\n    case Ops.Id: {\n      return (context) => context.featureId;\n    }\n    case Ops.GeometryType: {\n      return (context) => context.geometryType;\n    }\n    case Ops.Concat: {\n      const args = expression.args.map((e) => compileExpression(e, context));\n      return (context) =>\n        ''.concat(...args.map((arg) => arg(context).toString()));\n    }\n    case Ops.Resolution: {\n      return (context) => context.resolution;\n    }\n    case Ops.Any:\n    case Ops.All:\n    case Ops.Between:\n    case Ops.In:\n    case Ops.Not: {\n      return compileLogicalExpression(expression, context);\n    }\n    case Ops.Equal:\n    case Ops.NotEqual:\n    case Ops.LessThan:\n    case Ops.LessThanOrEqualTo:\n    case Ops.GreaterThan:\n    case Ops.GreaterThanOrEqualTo: {\n      return compileComparisonExpression(expression, context);\n    }\n    case Ops.Multiply:\n    case Ops.Divide:\n    case Ops.Add:\n    case Ops.Subtract:\n    case Ops.Clamp:\n    case Ops.Mod:\n    case Ops.Pow:\n    case Ops.Abs:\n    case Ops.Floor:\n    case Ops.Ceil:\n    case Ops.Round:\n    case Ops.Sin:\n    case Ops.Cos:\n    case Ops.Atan:\n    case Ops.Sqrt: {\n      return compileNumericExpression(expression, context);\n    }\n    case Ops.Case: {\n      return compileCaseExpression(expression, context);\n    }\n    case Ops.Match: {\n      return compileMatchExpression(expression, context);\n    }\n    case Ops.Interpolate: {\n      return compileInterpolateExpression(expression, context);\n    }\n    case Ops.ToString: {\n      return compileConvertExpression(expression, context);\n    }\n    default: {\n      throw new Error(`Unsupported operator ${operator}`);\n    }\n    // TODO: unimplemented\n    // Ops.Zoom\n    // Ops.Time\n    // Ops.Array\n    // Ops.Color\n    // Ops.Band\n    // Ops.Palette\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileAssertionExpression(expression, context) {\n  const type = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (type) {\n    case Ops.Coalesce: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          const value = args[i](context);\n          if (typeof value !== 'undefined' && value !== null) {\n            return value;\n          }\n        }\n        throw new Error('Expected one of the values to be non-null');\n      };\n    }\n    case Ops.Number:\n    case Ops.String: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          const value = args[i](context);\n          if (typeof value === type) {\n            return value;\n          }\n        }\n        throw new Error(`Expected one of the values to be a ${type}`);\n      };\n    }\n    default: {\n      throw new Error(`Unsupported assertion operator ${type}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileAccessorExpression(expression, context) {\n  const nameExpression = /** @type {LiteralExpression} */ (expression.args[0]);\n  const name = /** @type {string} */ (nameExpression.value);\n  switch (expression.operator) {\n    case Ops.Get: {\n      return (context) => {\n        const args = expression.args;\n        let value = context.properties[name];\n        for (let i = 1, ii = args.length; i < ii; ++i) {\n          const keyExpression = /** @type {LiteralExpression} */ (args[i]);\n          const key = /** @type {string|number} */ (keyExpression.value);\n          value = value[key];\n        }\n        return value;\n      };\n    }\n    case Ops.Var: {\n      return (context) => context.variables[name];\n    }\n    case Ops.Has: {\n      return (context) => {\n        const args = expression.args;\n        if (!(name in context.properties)) {\n          return false;\n        }\n        let value = context.properties[name];\n        for (let i = 1, ii = args.length; i < ii; ++i) {\n          const keyExpression = /** @type {LiteralExpression} */ (args[i]);\n          const key = /** @type {string|number} */ (keyExpression.value);\n          if (!value || !Object.hasOwn(value, key)) {\n            return false;\n          }\n          value = value[key];\n        }\n        return true;\n      };\n    }\n    default: {\n      throw new Error(`Unsupported accessor operator ${expression.operator}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {BooleanEvaluator} The evaluator function.\n */\nfunction compileComparisonExpression(expression, context) {\n  const op = expression.operator;\n  const left = compileExpression(expression.args[0], context);\n  const right = compileExpression(expression.args[1], context);\n  switch (op) {\n    case Ops.Equal: {\n      return (context) => left(context) === right(context);\n    }\n    case Ops.NotEqual: {\n      return (context) => left(context) !== right(context);\n    }\n    case Ops.LessThan: {\n      return (context) => left(context) < right(context);\n    }\n    case Ops.LessThanOrEqualTo: {\n      return (context) => left(context) <= right(context);\n    }\n    case Ops.GreaterThan: {\n      return (context) => left(context) > right(context);\n    }\n    case Ops.GreaterThanOrEqualTo: {\n      return (context) => left(context) >= right(context);\n    }\n    default: {\n      throw new Error(`Unsupported comparison operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {BooleanEvaluator} The evaluator function.\n */\nfunction compileLogicalExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.Any: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          if (args[i](context)) {\n            return true;\n          }\n        }\n        return false;\n      };\n    }\n    case Ops.All: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          if (!args[i](context)) {\n            return false;\n          }\n        }\n        return true;\n      };\n    }\n    case Ops.Between: {\n      return (context) => {\n        const value = args[0](context);\n        const min = args[1](context);\n        const max = args[2](context);\n        return value >= min && value <= max;\n      };\n    }\n    case Ops.In: {\n      return (context) => {\n        const value = args[0](context);\n        for (let i = 1; i < length; ++i) {\n          if (value === args[i](context)) {\n            return true;\n          }\n        }\n        return false;\n      };\n    }\n    case Ops.Not: {\n      return (context) => !args[0](context);\n    }\n    default: {\n      throw new Error(`Unsupported logical operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {NumberEvaluator} The evaluator function.\n */\nfunction compileNumericExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.Multiply: {\n      return (context) => {\n        let value = 1;\n        for (let i = 0; i < length; ++i) {\n          value *= args[i](context);\n        }\n        return value;\n      };\n    }\n    case Ops.Divide: {\n      return (context) => args[0](context) / args[1](context);\n    }\n    case Ops.Add: {\n      return (context) => {\n        let value = 0;\n        for (let i = 0; i < length; ++i) {\n          value += args[i](context);\n        }\n        return value;\n      };\n    }\n    case Ops.Subtract: {\n      return (context) => args[0](context) - args[1](context);\n    }\n    case Ops.Clamp: {\n      return (context) => {\n        const value = args[0](context);\n        const min = args[1](context);\n        if (value < min) {\n          return min;\n        }\n        const max = args[2](context);\n        if (value > max) {\n          return max;\n        }\n        return value;\n      };\n    }\n    case Ops.Mod: {\n      return (context) => args[0](context) % args[1](context);\n    }\n    case Ops.Pow: {\n      return (context) => Math.pow(args[0](context), args[1](context));\n    }\n    case Ops.Abs: {\n      return (context) => Math.abs(args[0](context));\n    }\n    case Ops.Floor: {\n      return (context) => Math.floor(args[0](context));\n    }\n    case Ops.Ceil: {\n      return (context) => Math.ceil(args[0](context));\n    }\n    case Ops.Round: {\n      return (context) => Math.round(args[0](context));\n    }\n    case Ops.Sin: {\n      return (context) => Math.sin(args[0](context));\n    }\n    case Ops.Cos: {\n      return (context) => Math.cos(args[0](context));\n    }\n    case Ops.Atan: {\n      if (length === 2) {\n        return (context) => Math.atan2(args[0](context), args[1](context));\n      }\n      return (context) => Math.atan(args[0](context));\n    }\n    case Ops.Sqrt: {\n      return (context) => Math.sqrt(args[0](context));\n    }\n    default: {\n      throw new Error(`Unsupported numeric operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileCaseExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    for (let i = 0; i < length - 1; i += 2) {\n      const condition = args[i](context);\n      if (condition) {\n        return args[i + 1](context);\n      }\n    }\n    return args[length - 1](context);\n  };\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileMatchExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    const value = args[0](context);\n    for (let i = 1; i < length - 1; i += 2) {\n      if (value === args[i](context)) {\n        return args[i + 1](context);\n      }\n    }\n    return args[length - 1](context);\n  };\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileInterpolateExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    const base = args[0](context);\n    const value = args[1](context);\n\n    let previousInput;\n    let previousOutput;\n    for (let i = 2; i < length; i += 2) {\n      const input = args[i](context);\n      let output = args[i + 1](context);\n      const isColor = Array.isArray(output);\n      if (isColor) {\n        output = withAlpha(output);\n      }\n      if (input >= value) {\n        if (i === 2) {\n          return output;\n        }\n        if (isColor) {\n          return interpolateColor(\n            base,\n            value,\n            previousInput,\n            previousOutput,\n            input,\n            output,\n          );\n        }\n        return interpolateNumber(\n          base,\n          value,\n          previousInput,\n          previousOutput,\n          input,\n          output,\n        );\n      }\n      previousInput = input;\n      previousOutput = output;\n    }\n    return previousOutput;\n  };\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileConvertExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.ToString: {\n      return (context) => {\n        const value = args[0](context);\n        if (expression.args[0].type === ColorType) {\n          return toString(value);\n        }\n        return value.toString();\n      };\n    }\n    default: {\n      throw new Error(`Unsupported convert operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {number} base The base.\n * @param {number} value The value.\n * @param {number} input1 The first input value.\n * @param {number} output1 The first output value.\n * @param {number} input2 The second input value.\n * @param {number} output2 The second output value.\n * @return {number} The interpolated value.\n */\nfunction interpolateNumber(base, value, input1, output1, input2, output2) {\n  const delta = input2 - input1;\n  if (delta === 0) {\n    return output1;\n  }\n  const along = value - input1;\n  const factor =\n    base === 1\n      ? along / delta\n      : (Math.pow(base, along) - 1) / (Math.pow(base, delta) - 1);\n  return output1 + factor * (output2 - output1);\n}\n\n/**\n * @param {number} base The base.\n * @param {number} value The value.\n * @param {number} input1 The first input value.\n * @param {import('../color.js').Color} rgba1 The first output value.\n * @param {number} input2 The second input value.\n * @param {import('../color.js').Color} rgba2 The second output value.\n * @return {import('../color.js').Color} The interpolated color.\n */\nfunction interpolateColor(base, value, input1, rgba1, input2, rgba2) {\n  const delta = input2 - input1;\n  if (delta === 0) {\n    return rgba1;\n  }\n  const lcha1 = rgbaToLcha(rgba1);\n  const lcha2 = rgbaToLcha(rgba2);\n  let deltaHue = lcha2[2] - lcha1[2];\n  if (deltaHue > 180) {\n    deltaHue -= 360;\n  } else if (deltaHue < -180) {\n    deltaHue += 360;\n  }\n\n  const lcha = [\n    interpolateNumber(base, value, input1, lcha1[0], input2, lcha2[0]),\n    interpolateNumber(base, value, input1, lcha1[1], input2, lcha2[1]),\n    lcha1[2] + interpolateNumber(base, value, input1, 0, input2, deltaHue),\n    interpolateNumber(base, value, input1, rgba1[3], input2, rgba2[3]),\n  ];\n  return lchaToRgba(lcha);\n}\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/Image\n */\nimport ImageState from './ImageState.js';\nimport EventType from './events/EventType.js';\nimport EventTarget from './events/Target.js';\nimport {listenOnce, unlistenByKey} from './events.js';\nimport {toPromise} from './functions.js';\nimport {CREATE_IMAGE_BITMAP, IMAGE_DECODE} from './has.js';\n\n/**\n * A function that takes an {@link module:ol/Image~ImageWrapper} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~ImageWrapper#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(import(\"./Image.js\").default, string): void} LoadFunction\n * @api\n */\n\n/**\n * @typedef {Object} ImageObject\n * @property {import(\"./extent.js\").Extent} [extent] Extent, if different from the requested one.\n * @property {import(\"./resolution.js\").ResolutionLike} [resolution] Resolution, if different from the requested one.\n * When x and y resolution are different, use the array type (`[xResolution, yResolution]`).\n * @property {number} [pixelRatio] Pixel ratio, if different from the requested one.\n * @property {import('./DataTile.js').ImageLike} image Image.\n */\n\n/**\n * Loader function used for image sources. Receives extent, resolution and pixel ratio as arguments.\n * For images that cover any extent and resolution (static images), the loader function should not accept\n * any arguments. The function returns an {@link import(\"./DataTile.js\").ImageLike image}, an\n * {@link import(\"./Image.js\").ImageObject image object}, or a promise for the same.\n * For loaders that generate images, the promise should not resolve until the image is loaded.\n * If the returned image does not match the extent, resolution or pixel ratio passed to the loader,\n * it has to return an {@link import(\"./Image.js\").ImageObject image object} with the `image` and the\n * correct `extent`, `resolution` and `pixelRatio`.\n *\n * @typedef {function(import(\"./extent.js\").Extent, number, number, (function(HTMLImageElement, string): void)=): import(\"./DataTile.js\").ImageLike|ImageObject|Promise<import(\"./DataTile.js\").ImageLike|ImageObject>} Loader\n * @api\n */\n\n/**\n * Loader function used for image sources. Receives extent, resolution and pixel ratio as arguments.\n * The function returns a promise for an  {@link import(\"./Image.js\").ImageObject image object}.\n *\n * @typedef {function(import(\"./extent.js\").Extent, number, number, (function(HTMLImageElement, string): void)=): Promise<import(\"./DataTile.js\").ImageLike|ImageObject>} ImageObjectPromiseLoader\n */\n\nclass ImageWrapper extends EventTarget {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|Array<number>|undefined} resolution Resolution. If provided as array, x and y\n   * resolution will be assumed.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./ImageState.js\").default|Loader} stateOrLoader State.\n   */\n  constructor(extent, resolution, pixelRatio, stateOrLoader) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|Array<number>|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state =\n      typeof stateOrLoader === 'function' ? ImageState.IDLE : stateOrLoader;\n\n    /**\n     * @private\n     * @type {import('./DataTile.js').ImageLike|null}\n     */\n    this.image_ = null;\n\n    /**\n     * @protected\n     * @type {Loader|null}\n     */\n    this.loader = typeof stateOrLoader === 'function' ? stateOrLoader : null;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @return {import('./DataTile.js').ImageLike} Image.\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number|Array<number>} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */ (this.resolution);\n  }\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      if (this.loader) {\n        this.state = ImageState.LOADING;\n        this.changed();\n        const resolution = this.getResolution();\n        const requestResolution = Array.isArray(resolution)\n          ? resolution[0]\n          : resolution;\n        toPromise(() =>\n          this.loader(\n            this.getExtent(),\n            requestResolution,\n            this.getPixelRatio(),\n          ),\n        )\n          .then((image) => {\n            if ('image' in image) {\n              this.image_ = image.image;\n            }\n            if ('extent' in image) {\n              this.extent = image.extent;\n            }\n            if ('resolution' in image) {\n              this.resolution = image.resolution;\n            }\n            if ('pixelRatio' in image) {\n              this.pixelRatio_ = image.pixelRatio;\n            }\n            if (\n              image instanceof HTMLImageElement ||\n              (CREATE_IMAGE_BITMAP && image instanceof ImageBitmap) ||\n              image instanceof HTMLCanvasElement ||\n              image instanceof HTMLVideoElement\n            ) {\n              this.image_ = image;\n            }\n            this.state = ImageState.LOADED;\n          })\n          .catch((error) => {\n            this.state = ImageState.ERROR;\n            console.error(error); // eslint-disable-line no-console\n          })\n          .finally(() => this.changed());\n      }\n    }\n  }\n\n  /**\n   * @param {import('./DataTile.js').ImageLike} image The image.\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * @param {number|Array<number>} resolution Resolution.\n   */\n  setResolution(resolution) {\n    this.resolution = resolution;\n  }\n}\n\n/**\n * @param {import('./DataTile.js').ImageLike} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n  let listening = true;\n  let decoding = false;\n  let loaded = false;\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, function () {\n      loaded = true;\n      if (!decoding) {\n        loadHandler();\n      }\n    }),\n  ];\n\n  if (img.src && IMAGE_DECODE) {\n    decoding = true;\n    img\n      .decode()\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          if (loaded) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n  } else {\n    listenerKeys.push(listenOnce(img, EventType.ERROR, errorHandler));\n  }\n\n  return function unlisten() {\n    listening = false;\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\n/**\n * Loads an image.\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<HTMLImageElement>} Promise resolving to an `HTMLImageElement`.\n * @api\n */\nexport function load(image, src) {\n  return new Promise((resolve, reject) => {\n    function handleLoad() {\n      unlisten();\n      resolve(image);\n    }\n    function handleError() {\n      unlisten();\n      reject(new Error('Image load error'));\n    }\n    function unlisten() {\n      image.removeEventListener('load', handleLoad);\n      image.removeEventListener('error', handleError);\n    }\n    image.addEventListener('load', handleLoad);\n    image.addEventListener('error', handleError);\n    if (src) {\n      image.src = src;\n    }\n  });\n}\n\n/**\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<HTMLImageElement>} Promise resolving to an `HTMLImageElement`.\n */\nexport function decodeFallback(image, src) {\n  if (src) {\n    image.src = src;\n  }\n  return image.src && IMAGE_DECODE\n    ? new Promise((resolve, reject) =>\n        image\n          .decode()\n          .then(() => resolve(image))\n          .catch((e) =>\n            image.complete && image.width ? resolve(image) : reject(e),\n          ),\n      )\n    : load(image);\n}\n\n/**\n * Loads an image and decodes it to an `ImageBitmap` if `createImageBitmap()` is supported. Returns\n * the loaded image otherwise.\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<ImageBitmap|HTMLImageElement>} Promise resolving to an `ImageBitmap` or an\n * `HTMLImageElement` if `createImageBitmap()` is not supported.\n * @api\n */\nexport function decode(image, src) {\n  if (src) {\n    image.src = src;\n  }\n  return image.src && IMAGE_DECODE && CREATE_IMAGE_BITMAP\n    ? image\n        .decode()\n        .then(() => createImageBitmap(image))\n        .catch((e) => {\n          if (image.complete && image.width) {\n            return image;\n          }\n          throw e;\n        })\n    : decodeFallback(image);\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/style/IconImageCache\n */\nimport ImageState from '../ImageState.js';\nimport {asArray} from '../color.js';\nimport {getSharedCanvasContext2D} from '../dom.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache.shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {!Object<string, CanvasPattern>}\n     * @private\n     */\n    this.patternCache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 1024;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.patternCache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          delete this.patternCache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getCacheKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @return {CanvasPattern} Icon image.\n   */\n  getPattern(src, crossOrigin, color) {\n    const key = getCacheKey(src, crossOrigin, color);\n    return key in this.patternCache_ ? this.patternCache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @param {import(\"./IconImage.js\").default|null} iconImage Icon image.\n   * @param {boolean} [pattern] Also cache a `'repeat'` pattern with this `iconImage`.\n   */\n  set(src, crossOrigin, color, iconImage, pattern) {\n    const key = getCacheKey(src, crossOrigin, color);\n    const update = key in this.cache_;\n    this.cache_[key] = iconImage;\n    if (pattern) {\n      if (iconImage.getImageState() === ImageState.IDLE) {\n        iconImage.load();\n      }\n      if (iconImage.getImageState() === ImageState.LOADING) {\n        iconImage.ready().then(() => {\n          this.patternCache_[key] = getSharedCanvasContext2D().createPattern(\n            iconImage.getImage(1),\n            'repeat',\n          );\n        });\n      } else {\n        this.patternCache_[key] = getSharedCanvasContext2D().createPattern(\n          iconImage.getImage(1),\n          'repeat',\n        );\n      }\n    }\n    if (!update) {\n      ++this.cacheSize_;\n    }\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `1024`. Change this value when\n   * your map uses more than 1024 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color|string|null} color Color.\n * @return {string} Cache key.\n */\nexport function getCacheKey(src, crossOrigin, color) {\n  const colorString = color ? asArray(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/style/IconImage\n */\n\nimport {decodeFallback} from '../Image.js';\nimport ImageState from '../ImageState.js';\nimport {asString} from '../color.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport EventType from '../events/EventType.js';\nimport EventTarget from '../events/Target.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\n\n/**\n * @type {CanvasRenderingContext2D|OffscreenCanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement|OffscreenCanvas|ImageBitmap|null} image Image.\n   * @param {string|undefined} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default|undefined} imageState Image state.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   */\n  constructor(image, src, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|OffscreenCanvas|HTMLCanvasElement|ImageBitmap}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement|OffscreenCanvas|ImageBitmap|null}\n     */\n    this.image_ = image;\n\n    /**\n     * @private\n     * @type {string|null}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement|OffscreenCanvas>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|string|null}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState === undefined ? ImageState.IDLE : imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size|null}\n     */\n    this.size_ =\n      image && image.width && image.height ? [image.width, image.height] : null;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n\n    /**\n     * @private\n     * @type {Promise<void>|null}\n     */\n    this.ready_ = null;\n  }\n\n  /**\n   * @private\n   */\n  initializeImage_() {\n    this.image_ = new Image();\n    if (this.crossOrigin_ !== null) {\n      this.image_.crossOrigin = this.crossOrigin_;\n    }\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1, undefined, {\n          willReadFrequently: true,\n        });\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    this.size_ = [this.image_.width, this.image_.height];\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement|OffscreenCanvas|ImageBitmap} Image or Canvas element or image bitmap.\n   */\n  getImage(pixelRatio) {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement|OffscreenCanvas|ImageBitmap} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ !== ImageState.IDLE) {\n      return;\n    }\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n\n    this.imageState_ = ImageState.LOADING;\n    try {\n      if (this.src_ !== undefined) {\n        /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n      }\n    } catch {\n      this.handleImageError_();\n    }\n    if (this.image_ instanceof HTMLImageElement) {\n      decodeFallback(this.image_, this.src_)\n        .then((image) => {\n          this.image_ = image;\n          this.handleImageLoad_();\n        })\n        .catch(this.handleImageError_.bind(this));\n    }\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (\n      !this.color_ ||\n      this.canvas_[pixelRatio] ||\n      this.imageState_ !== ImageState.LOADED\n    ) {\n      return;\n    }\n\n    const image = this.image_;\n    const ctx = createCanvasContext2D(\n      Math.ceil(image.width * pixelRatio),\n      Math.ceil(image.height * pixelRatio),\n    );\n    const canvas = ctx.canvas;\n\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(image, 0, 0);\n\n    ctx.globalCompositeOperation = 'multiply';\n    ctx.fillStyle = asString(this.color_);\n    ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\n\n    ctx.globalCompositeOperation = 'destination-in';\n    ctx.drawImage(image, 0, 0);\n\n    this.canvas_[pixelRatio] = canvas;\n  }\n\n  /**\n   * @return {Promise<void>} Promise that resolves when the image is loaded.\n   */\n  ready() {\n    if (!this.ready_) {\n      this.ready_ = new Promise((resolve) => {\n        if (\n          this.imageState_ === ImageState.LOADED ||\n          this.imageState_ === ImageState.ERROR\n        ) {\n          resolve();\n        } else {\n          const onChange = () => {\n            if (\n              this.imageState_ === ImageState.LOADED ||\n              this.imageState_ === ImageState.ERROR\n            ) {\n              this.removeEventListener(EventType.CHANGE, onChange);\n              resolve();\n            }\n          };\n          this.addEventListener(EventType.CHANGE, onChange);\n        }\n      });\n    }\n    return this.ready_;\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement|OffscreenCanvas|ImageBitmap|null} image Image.\n * @param {string|undefined} cacheKey Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default|undefined} imageState Image state.\n * @param {import(\"../color.js\").Color|string|null} color Color.\n * @param {boolean} [pattern] Also cache a `repeat` pattern with the icon image.\n * @return {IconImage} Icon image.\n */\nexport function get(image, cacheKey, crossOrigin, imageState, color, pattern) {\n  let iconImage =\n    cacheKey === undefined\n      ? undefined\n      : iconImageCache.get(cacheKey, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(\n      image,\n      image && 'src' in image ? image.src || undefined : cacheKey,\n      crossOrigin,\n      imageState,\n      color,\n    );\n    iconImageCache.set(cacheKey, crossOrigin, color, iconImage, pattern);\n  }\n  if (\n    pattern &&\n    iconImage &&\n    !iconImageCache.getPattern(cacheKey, crossOrigin, color)\n  ) {\n    iconImageCache.set(cacheKey, crossOrigin, color, iconImage, pattern);\n  }\n  return iconImage;\n}\n\nexport default IconImage;\n","/**\n * @module ol/colorlike\n */\nimport ImageState from './ImageState.js';\nimport {toString} from './color.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {get as getIconImage} from './style/IconImage.js';\nimport {shared as iconCache} from './style/IconImageCache.js';\n\n/**\n * @typedef {Object} PatternDescriptor\n * @property {string} src Pattern image URL\n * @property {import(\"./color.js\").Color|string} [color] Color to tint the pattern with.\n * @property {import(\"./size.js\").Size} [size] Size of the desired slice from the pattern image.\n * Use this together with `offset` when the pattern image is a sprite sheet.\n * @property {import(\"./size.js\").Size} [offset] Offset of the desired slice from the pattern image.\n * Use this together with `size` when the pattern image is a sprite sheet.\n */\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, [CanvasPattern](https://developer.mozilla.org/en-US/docs/Web/API/CanvasPattern),\n * or [CanvasGradient](https://developer.mozilla.org/en-US/docs/Web/API/CanvasGradient). The origin for\n * patterns and gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike|PatternDescriptor|null} color Color.\n * @return {ColorLike|null} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (!color) {\n    return null;\n  }\n  if (Array.isArray(color)) {\n    return toString(color);\n  }\n  if (typeof color === 'object' && 'src' in color) {\n    return asCanvasPattern(color);\n  }\n  return color;\n}\n\n/**\n * @param {PatternDescriptor} pattern Pattern descriptor.\n * @return {CanvasPattern|null} Canvas pattern or null if the pattern referenced in the\n * PatternDescriptor was not found in the icon image cache.\n */\nfunction asCanvasPattern(pattern) {\n  if (!pattern.offset || !pattern.size) {\n    return iconCache.getPattern(pattern.src, 'anonymous', pattern.color);\n  }\n\n  const cacheKey = pattern.src + ':' + pattern.offset;\n\n  const canvasPattern = iconCache.getPattern(\n    cacheKey,\n    undefined,\n    pattern.color,\n  );\n  if (canvasPattern) {\n    return canvasPattern;\n  }\n\n  const iconImage = iconCache.get(pattern.src, 'anonymous', null);\n  if (iconImage.getImageState() !== ImageState.LOADED) {\n    return null;\n  }\n  const patternCanvasContext = createCanvasContext2D(\n    pattern.size[0],\n    pattern.size[1],\n  );\n  patternCanvasContext.drawImage(\n    iconImage.getImage(1),\n    pattern.offset[0],\n    pattern.offset[1],\n    pattern.size[0],\n    pattern.size[1],\n    0,\n    0,\n    pattern.size[0],\n    pattern.size[1],\n  );\n  getIconImage(\n    patternCanvasContext.canvas,\n    cacheKey,\n    undefined,\n    ImageState.LOADED,\n    pattern.color,\n    true,\n  );\n  return iconCache.getPattern(cacheKey, undefined, pattern.color);\n}\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport {fontWeights, getFontParameters} from '../css.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {'Circle' | 'Image' | 'LineString' | 'Polygon' | 'Text' | 'Default'} BuilderType\n */\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n * @property {number} [fillPatternScale] Fill pattern scale.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {CanvasTextAlign} [textAlign] TextAlign.\n * @property {number} [repeat] Repeat.\n * @property {import(\"../style/Text.js\").TextJustify} [justify] Justify.\n * @property {CanvasTextBaseline} textBaseline TextBaseline.\n * @property {import(\"../style/Text.js\").TextPlacement} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {CanvasTextAlign}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {CanvasTextBaseline}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * @type {CanvasRenderingContext2D|OffscreenCanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\nconst genericFontFamilies = new Set([\n  'serif',\n  'sans-serif',\n  'monospace',\n  'cursive',\n  'fantasy',\n  'system-ui',\n  'ui-serif',\n  'ui-sans-serif',\n  'ui-monospace',\n  'ui-rounded',\n  'emoji',\n  'math',\n  'fangsong',\n]);\n\n/**\n * @param {string} style Css font-style\n * @param {string} weight Css font-weight\n * @param {string} family Css font-family\n * @return {string} Font key.\n */\nfunction getFontKey(style, weight, family) {\n  return `${style} ${weight} 16px \"${family}\"`;\n}\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  let timeout, fontFaceSet;\n\n  /**\n   * @param {string} fontSpec Css font spec\n   * @return {Promise<boolean>} Font with style and weight is available\n   */\n  async function isAvailable(fontSpec) {\n    await fontFaceSet.ready;\n    const fontFaces = await fontFaceSet.load(fontSpec);\n    if (fontFaces.length === 0) {\n      return false;\n    }\n    const font = getFontParameters(fontSpec);\n    const checkFamily = font.families[0].toLowerCase();\n    const checkWeight = font.weight;\n    return fontFaces.some(\n      /**\n       * @param {import('../css.js').FontParameters} f Font.\n       * @return {boolean} Font matches.\n       */\n      (f) => {\n        const family = f.family.replace(/^['\"]|['\"]$/g, '').toLowerCase();\n        const weight = fontWeights[f.weight] || f.weight;\n        return (\n          family === checkFamily &&\n          f.style === font.style &&\n          weight == checkWeight\n        );\n      },\n    );\n  }\n\n  async function check() {\n    await fontFaceSet.ready;\n    let done = true;\n    const checkedFontsProperties = checkedFonts.getProperties();\n    const fonts = Object.keys(checkedFontsProperties).filter(\n      (key) => checkedFontsProperties[key] < retries,\n    );\n    for (let i = fonts.length - 1; i >= 0; --i) {\n      const font = fonts[i];\n      let currentRetries = checkedFontsProperties[font];\n      if (currentRetries < retries) {\n        if (await isAvailable(font)) {\n          clear(textHeights);\n          checkedFonts.set(font, retries);\n        } else {\n          currentRetries += 10;\n          checkedFonts.set(font, currentRetries, true);\n          if (currentRetries < retries) {\n            done = false;\n          }\n        }\n      }\n    }\n    timeout = undefined;\n    if (!done) {\n      timeout = setTimeout(check, 100);\n    }\n  }\n\n  return async function (fontSpec) {\n    if (!fontFaceSet) {\n      fontFaceSet = WORKER_OFFSCREEN_CANVAS ? self.fonts : document.fonts;\n    }\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    let needCheck = false;\n    for (const family of families) {\n      if (genericFontFamilies.has(family)) {\n        continue;\n      }\n      const key = getFontKey(font.style, font.weight, family);\n      if (checkedFonts.get(key) !== undefined) {\n        continue;\n      }\n      checkedFonts.set(key, 0, true);\n      needCheck = true;\n    }\n    if (needCheck) {\n      clearTimeout(timeout);\n      timeout = setTimeout(check, 100);\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = text\n    .split('\\n')\n    .reduce((prev, curr) => Math.max(prev, measureTextWidth(font, curr)), 0);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {TextState} baseStyle Base style.\n * @param {Array<string>} chunks Text chunks to measure.\n * @return {{width: number, height: number, widths: Array<number>, heights: Array<number>, lineWidths: Array<number>}}} Text metrics.\n */\nexport function getTextDimensions(baseStyle, chunks) {\n  const widths = [];\n  const heights = [];\n  const lineWidths = [];\n  let width = 0;\n  let lineWidth = 0;\n  let height = 0;\n  let lineHeight = 0;\n  for (let i = 0, ii = chunks.length; i <= ii; i += 2) {\n    const text = chunks[i];\n    if (text === '\\n' || i === ii) {\n      width = Math.max(width, lineWidth);\n      lineWidths.push(lineWidth);\n      lineWidth = 0;\n      height += lineHeight;\n      lineHeight = 0;\n      continue;\n    }\n    const font = chunks[i + 1] || baseStyle.font;\n    const currentWidth = measureTextWidth(font, text);\n    widths.push(currentWidth);\n    lineWidth += currentWidth;\n    const currentHeight = measureTextHeight(font);\n    heights.push(currentHeight);\n    lineHeight = Math.max(lineHeight, currentHeight);\n  }\n  return {width, height, widths, heights, lineWidths};\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D|import(\"../render/canvas/ZIndexContext.js\").ZIndexContextProxy} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale,\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    if (context.globalAlpha === undefined) {\n      context.globalAlpha = (context) => (context.globalAlpha *= opacity);\n    } else {\n      context.globalAlpha *= opacity;\n    }\n  }\n  if (transform) {\n    context.transform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h,\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1],\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D|OffscreenCanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1],\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n","/**\n * @module ol/style/Image\n */\nimport {toSize} from '../size.js';\nimport {abstract} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n * @property {import('../style/Style.js').DeclutterMode} declutterMode Declutter mode: `declutter`, `obstacle`, `none`.\n */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.displacement_ = options.displacement;\n\n    /**\n     * @private\n     * @type {import('../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number|import(\"../size.js\").Size} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n  getDisplacement() {\n    return this.displacement_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {import(\"./Style.js\").DeclutterMode} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {import('../DataTile.js').ImageLike} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import('../DataTile.js').ImageLike} Image element.\n   */\n  getHitDetectionImage() {\n    return abstract();\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return 1;\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the displacement.\n   *\n   * @param {Array<number>} displacement Displacement.\n   * @api\n   */\n  setDisplacement(displacement) {\n    this.displacement_ = displacement;\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * @return {Promise<void>} `false` or Promise that resolves when the style is ready to use.\n   */\n  ready() {\n    return Promise.resolve();\n  }\n}\n\nexport default ImageStyle;\n","/**\n * @module ol/style/RegularShape\n */\n\nimport ImageState from '../ImageState.js';\nimport {asArray} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../render/canvas.js';\nimport IconImage from './IconImage.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\nimport ImageStyle from './Image.js';\n\n/**\n * Specify radius for regular polygons, or both radius and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} radius Radius of a regular polygon.\n * @property {number} [radius2] Second radius to make a star instead of a regular polygon.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's points facing up.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the shape in pixels.\n * Positive values will shift the shape right and up.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius` and `radius2`.\n * @property {import('./Style.js').DeclutterMode} [declutterMode] Declutter mode.\n */\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike|undefined} strokeStyle StrokeStyle.\n * @property {number} strokeWidth StrokeWidth.\n * @property {number} size Size.\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>|null} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} miterLimit MiterLimit.\n */\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when both `radius` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    super({\n      opacity: 1,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: options.scale !== undefined ? options.scale : 1,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|OffscreenCanvas|null}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius = options.radius;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_;\n\n    /**\n     * @private\n     * @type {RenderOptions}\n     */\n    this.renderOptions_;\n\n    /**\n     * @private\n     */\n    this.imageState_ =\n      this.fill_ && this.fill_.loading()\n        ? ImageState.LOADING\n        : ImageState.LOADED;\n    if (this.imageState_ === ImageState.LOADING) {\n      this.ready().then(() => (this.imageState_ = ImageState.LOADED));\n    }\n    this.render();\n  }\n\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   * @override\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   * @override\n   */\n  getAnchor() {\n    const size = this.size_;\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      size[0] / 2 - displacement[0] / scale[0],\n      size[1] / 2 + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n    this.render();\n  }\n\n  /**\n   * @return {HTMLCanvasElement|OffscreenCanvas} Image element.\n   * @override\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionCanvas_) {\n      this.hitDetectionCanvas_ = this.createHitDetectionCanvas_(\n        this.renderOptions_,\n      );\n    }\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement|OffscreenCanvas} Image or Canvas element.\n   * @api\n   * @override\n   */\n  getImage(pixelRatio) {\n    const fillKey = this.fill_?.getKey();\n    const cacheKey =\n      `${pixelRatio},${this.angle_},${this.radius},${this.radius2_},${this.points_},${fillKey}` +\n      Object.values(this.renderOptions_).join(',');\n    let image = /** @type {HTMLCanvasElement|OffscreenCanvas} */ (\n      iconImageCache.get(cacheKey, null, null)?.getImage(1)\n    );\n    if (!image) {\n      const renderOptions = this.renderOptions_;\n      const size = Math.ceil(renderOptions.size * pixelRatio);\n      const context = createCanvasContext2D(size, size);\n      this.draw_(renderOptions, context, pixelRatio);\n\n      image = context.canvas;\n      iconImageCache.set(\n        cacheKey,\n        null,\n        null,\n        new IconImage(image, undefined, null, ImageState.LOADED, null),\n      );\n    }\n    return image;\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   * @override\n   */\n  getPixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   * @override\n   */\n  getImageSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   * @override\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   * @override\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @return {import(\"../size.js\").Size} Size.\n   * @api\n   * @override\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n    this.render();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   * @override\n   */\n  listenImageChange(listener) {}\n\n  /**\n   * Load not yet loaded URI.\n   * @override\n   */\n  load() {}\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   * @override\n   */\n  unlistenImageChange(listener) {}\n\n  /**\n   * Calculate additional canvas size needed for the miter.\n   * @param {string} lineJoin Line join\n   * @param {number} strokeWidth Stroke width\n   * @param {number} miterLimit Miter limit\n   * @return {number} Additional canvas size needed\n   * @private\n   */\n  calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit) {\n    if (\n      strokeWidth === 0 ||\n      this.points_ === Infinity ||\n      (lineJoin !== 'bevel' && lineJoin !== 'miter')\n    ) {\n      return strokeWidth;\n    }\n    // m  | ^\n    // i  | |\\                  .\n    // t >|  #\\\n    // e  | |\\ \\              .\n    // r      \\s\\\n    //      |  \\t\\          .                 .\n    //          \\r\\                      .   .\n    //      |    \\o\\      .          .  . . .\n    //          e \\k\\            .  .    . .\n    //      |      \\e\\  .    .  .       . .\n    //       d      \\ \\  .  .          . .\n    //      | _ _a_ _\\#  .            . .\n    //   r1          / `             . .\n    //      |                       . .\n    //       b     /               . .\n    //      |                     . .\n    //           / r2            . .\n    //      |                        .   .\n    //         /                           .   .\n    //      |α                                   .   .\n    //       /                                         .   .\n    //      ° center\n    let r1 = this.radius;\n    let r2 = this.radius2_ === undefined ? r1 : this.radius2_;\n    if (r1 < r2) {\n      const tmp = r1;\n      r1 = r2;\n      r2 = tmp;\n    }\n    const points =\n      this.radius2_ === undefined ? this.points_ : this.points_ * 2;\n    const alpha = (2 * Math.PI) / points;\n    const a = r2 * Math.sin(alpha);\n    const b = Math.sqrt(r2 * r2 - a * a);\n    const d = r1 - b;\n    const e = Math.sqrt(a * a + d * d);\n    const miterRatio = e / a;\n    if (lineJoin === 'miter' && miterRatio <= miterLimit) {\n      return miterRatio * strokeWidth;\n    }\n    // Calculate the distance from center to the stroke corner where\n    // it was cut short because of the miter limit.\n    //              l\n    //        ----+---- <= distance from center to here is maxr\n    //       /####|k ##\\\n    //      /#####^#####\\\n    //     /#### /+\\# s #\\\n    //    /### h/+++\\# t #\\\n    //   /### t/+++++\\# r #\\\n    //  /### a/+++++++\\# o #\\\n    // /### p/++ fill +\\# k #\\\n    ///#### /+++++^+++++\\# e #\\\n    //#####/+++++/+\\+++++\\#####\\\n    const k = strokeWidth / 2 / miterRatio;\n    const l = (strokeWidth / 2) * (d / e);\n    const maxr = Math.sqrt((r1 + k) * (r1 + k) + l * l);\n    const bevelAdd = maxr - r1;\n    if (this.radius2_ === undefined || lineJoin === 'bevel') {\n      return bevelAdd * 2;\n    }\n    // If outer miter is over the miter limit the inner miter may reach through the\n    // center and be longer than the bevel, same calculation as above but swap r1 / r2.\n    const aa = r1 * Math.sin(alpha);\n    const bb = Math.sqrt(r1 * r1 - aa * aa);\n    const dd = r2 - bb;\n    const ee = Math.sqrt(aa * aa + dd * dd);\n    const innerMiterRatio = ee / aa;\n    if (innerMiterRatio <= miterLimit) {\n      const innerLength = (innerMiterRatio * strokeWidth) / 2 - r2 - r1;\n      return 2 * Math.max(bevelAdd, innerLength);\n    }\n    return bevelAdd * 2;\n  }\n\n  /**\n   * @return {RenderOptions}  The render options\n   * @protected\n   */\n  createRenderOptions() {\n    let lineCap = defaultLineCap;\n    let lineJoin = defaultLineJoin;\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = asColorLike(this.stroke_.getColor() ?? defaultStrokeStyle);\n      strokeWidth = this.stroke_.getWidth() ?? defaultLineWidth;\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset() ?? 0;\n      lineJoin = this.stroke_.getLineJoin() ?? defaultLineJoin;\n      lineCap = this.stroke_.getLineCap() ?? defaultLineCap;\n      miterLimit = this.stroke_.getMiterLimit() ?? defaultMiterLimit;\n    }\n\n    const add = this.calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit);\n    const maxRadius = Math.max(this.radius, this.radius2_ || 0);\n    const size = Math.ceil(2 * maxRadius + add);\n\n    return {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineCap: lineCap,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit,\n    };\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.renderOptions_ = this.createRenderOptions();\n    const size = this.renderOptions_.size;\n    this.hitDetectionCanvas_ = null;\n    this.size_ = [size, size];\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D|OffscreenCanvasRenderingContext2D} context The rendering context.\n   * @param {number} pixelRatio The pixel ratio.\n   */\n  draw_(renderOptions, context, pixelRatio) {\n    context.scale(pixelRatio, pixelRatio);\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (renderOptions.strokeStyle) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineCap = renderOptions.lineCap;\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @return {HTMLCanvasElement|OffscreenCanvas} Canvas containing the icon\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    let context;\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n\n      // determine if fill is transparent (or pattern or gradient)\n      let opacity = 0;\n      if (typeof color === 'string') {\n        color = asArray(color);\n      }\n      if (color === null) {\n        opacity = 1;\n      } else if (Array.isArray(color)) {\n        opacity = color.length === 4 ? color[3] : 1;\n      }\n      if (opacity === 0) {\n        // if a transparent fill style is set, create an extra hit-detection image\n        // with a default fill style\n        context = createCanvasContext2D(renderOptions.size, renderOptions.size);\n        this.drawHitDetectionCanvas_(renderOptions, context);\n      }\n    }\n    return context ? context.canvas : this.getImage(1);\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D|OffscreenCanvasRenderingContext2D} context The context to draw in.\n   */\n  createPath_(context) {\n    let points = this.points_;\n    const radius = this.radius;\n    if (points === Infinity) {\n      context.arc(0, 0, radius, 0, 2 * Math.PI);\n    } else {\n      const radius2 = this.radius2_ === undefined ? radius : this.radius2_;\n      if (this.radius2_ !== undefined) {\n        points *= 2;\n      }\n      const startAngle = this.angle_ - Math.PI / 2;\n      const step = (2 * Math.PI) / points;\n      for (let i = 0; i < points; i++) {\n        const angle0 = startAngle + i * step;\n        const radiusC = i % 2 === 0 ? radius : radius2;\n        context.lineTo(radiusC * Math.cos(angle0), radiusC * Math.sin(angle0));\n      }\n      context.closePath();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D|OffscreenCanvasRenderingContext2D} context The context.\n   */\n  drawHitDetectionCanvas_(renderOptions, context) {\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (renderOptions.strokeStyle) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @override\n   */\n  ready() {\n    return this.fill_ ? this.fill_.ready() : Promise.resolve();\n  }\n}\n\nexport default RegularShape;\n","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {import('./Style.js').DeclutterMode} [declutterMode] Declutter mode\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {radius: 5};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n  }\n\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   * @override\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius = radius;\n    this.render();\n  }\n}\n\nexport default CircleStyle;\n","/**\n * @module ol/style/Fill\n */\n\nimport ImageState from '../ImageState.js';\nimport {asArray} from '../color.js';\nimport {getUid} from '../util.js';\nimport {get as getIconImage} from './IconImage.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null} [color=null] A color,\n * gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats. For polygon fills (not for {@link import(\"./RegularShape.js\").default} fills),\n * a pattern can also be provided as {@link module:ol/colorlike~PatternDescriptor}.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nclass Fill {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default|null}\n     */\n    this.patternImage_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null}\n     */\n    this.color_ = null;\n    if (options.color !== undefined) {\n      this.setColor(options.color);\n    }\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is a {@link module:ol/colorlike~ColorLike}.\n   * @return {Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null} color Color.\n   * @api\n   */\n  setColor(color) {\n    if (color !== null && typeof color === 'object' && 'src' in color) {\n      const patternImage = getIconImage(\n        null,\n        color.src,\n        'anonymous',\n        undefined,\n        color.offset ? null : color.color ? color.color : null,\n        !(color.offset && color.size),\n      );\n      patternImage.ready().then(() => {\n        this.patternImage_ = null;\n      });\n      if (patternImage.getImageState() === ImageState.IDLE) {\n        patternImage.load();\n      }\n      if (patternImage.getImageState() === ImageState.LOADING) {\n        this.patternImage_ = patternImage;\n      }\n    }\n    this.color_ = color;\n  }\n\n  /**\n   * @return {string} Key of the fill for cache lookup.\n   */\n  getKey() {\n    const fill = this.getColor();\n    if (!fill) {\n      return '';\n    }\n    return fill instanceof CanvasPattern || fill instanceof CanvasGradient\n      ? getUid(fill)\n      : typeof fill === 'object' && 'src' in fill\n        ? fill.src + ':' + fill.offset\n        : asArray(fill).toString();\n  }\n\n  /**\n   * @return {boolean} The fill style is loading an image pattern.\n   */\n  loading() {\n    return !!this.patternImage_;\n  }\n\n  /**\n   * @return {Promise<void>} `false` or a promise that resolves when the style is ready to use.\n   */\n  ready() {\n    return this.patternImage_ ? this.patternImage_.ready() : Promise.resolve();\n  }\n}\n\nexport default Fill;\n","/**\n * @module ol/style/Icon\n */\nimport ImageState from '../ImageState.js';\nimport {assert} from '../asserts.js';\nimport {asArray} from '../color.js';\nimport EventType from '../events/EventType.js';\nimport {getUid} from '../util.js';\nimport {get as getIconImage} from './IconImage.js';\nimport ImageStyle from './Image.js';\n\n/**\n * @typedef {'fraction' | 'pixels'} IconAnchorUnits\n * Anchor unit can be either a fraction of the icon size or in pixels.\n */\n\n/**\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} IconOrigin\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n */\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {IconOrigin} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {IconAnchorUnits} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {IconAnchorUnits} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement|OffscreenCanvas|ImageBitmap} [img] Image object for the icon.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the icon in pixels.\n * Positive values will shift the icon right and up.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number} [width] The width of the icon in pixels. This can't be used together with `scale`.\n * @property {number} [height] The height of the icon in pixels. This can't be used together with `scale`.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {Array<number>} [offset=[0, 0]] Offset which, together with `size` and `offsetOrigin`, defines the\n * sub-rectangle to use from the original (sprite) image.\n * @property {IconOrigin} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"../size.js\").Size} [size] Icon size in pixels. Used together with `offset` to define the\n * sub-rectangle to use from the original (sprite) image.\n * @property {string} [src] Image source URI.\n * @property {import(\"./Style.js\").DeclutterMode} [declutterMode] Declutter mode.\n */\n\n/**\n * @param {number} width The width.\n * @param {number} height The height.\n * @param {number|undefined} wantedWidth The wanted width.\n * @param {number|undefined} wantedHeight The wanted height.\n * @return {number|Array<number>} The scale.\n */\nfunction calculateScale(width, height, wantedWidth, wantedHeight) {\n  if (wantedWidth !== undefined && wantedHeight !== undefined) {\n    return [wantedWidth / width, wantedHeight / height];\n  }\n  if (wantedWidth !== undefined) {\n    return wantedWidth / width;\n  }\n  if (wantedHeight !== undefined) {\n    return wantedHeight / height;\n  }\n  return 1;\n}\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView,\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.anchorOrigin_ =\n      options.anchorOrigin !== undefined ? options.anchorOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorXUnits_ =\n      options.anchorXUnits !== undefined ? options.anchorXUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorYUnits_ =\n      options.anchorYUnits !== undefined ? options.anchorYUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    const image = options.img !== undefined ? options.img : null;\n\n    let cacheKey = options.src;\n\n    assert(\n      !(cacheKey !== undefined && image),\n      '`image` and `src` cannot be provided at the same time',\n    );\n\n    if ((cacheKey === undefined || cacheKey.length === 0) && image) {\n      cacheKey = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(\n      cacheKey !== undefined && cacheKey.length > 0,\n      'A defined and non-empty `src` or `image` must be provided',\n    );\n\n    assert(\n      !(\n        (options.width !== undefined || options.height !== undefined) &&\n        options.scale !== undefined\n      ),\n      '`width` or `height` cannot be provided together with `scale`',\n    );\n\n    let imageState;\n    if (options.src !== undefined) {\n      imageState = ImageState.IDLE;\n    } else if (image !== undefined) {\n      if ('complete' in image) {\n        if (image.complete) {\n          imageState = image.src ? ImageState.LOADED : ImageState.IDLE;\n        } else {\n          imageState = ImageState.LOADING;\n        }\n      } else {\n        imageState = ImageState.LOADED;\n      }\n    }\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image,\n      /** @type {string} */ (cacheKey),\n      this.crossOrigin_,\n      imageState,\n      this.color_,\n    );\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.offsetOrigin_ =\n      options.offsetOrigin !== undefined ? options.offsetOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n\n    /**\n     * @private\n     */\n    this.initialOptions_;\n\n    /**\n     * Calculate the scale if width or height were given.\n     */\n    if (options.width !== undefined || options.height !== undefined) {\n      let width, height;\n      if (options.size) {\n        [width, height] = options.size;\n      } else {\n        const image = this.getImage(1);\n        if (image.width && image.height) {\n          width = image.width;\n          height = image.height;\n        } else if (image instanceof HTMLImageElement) {\n          this.initialOptions_ = options;\n          const onload = () => {\n            this.unlistenImageChange(onload);\n            if (!this.initialOptions_) {\n              return;\n            }\n            const imageSize = this.iconImage_.getSize();\n            this.setScale(\n              calculateScale(\n                imageSize[0],\n                imageSize[1],\n                options.width,\n                options.height,\n              ),\n            );\n          };\n          this.listenImageChange(onload);\n          return;\n        }\n      }\n      if (width !== undefined) {\n        this.setScale(\n          calculateScale(width, height, options.width, options.height),\n        );\n      }\n    }\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   * @override\n   */\n  clone() {\n    let scale, width, height;\n    if (this.initialOptions_) {\n      width = this.initialOptions_.width;\n      height = this.initialOptions_.height;\n    } else {\n      scale = this.getScale();\n      scale = Array.isArray(scale) ? scale.slice() : scale;\n    }\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      color:\n        this.color_ && this.color_.slice\n          ? this.color_.slice()\n          : this.color_ || undefined,\n      crossOrigin: this.crossOrigin_,\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      opacity: this.getOpacity(),\n      rotateWithView: this.getRotateWithView(),\n      rotation: this.getRotation(),\n      scale,\n      width,\n      height,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      src: this.getSrc(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   * @override\n   */\n  getAnchor() {\n    let anchor = this.normalizedAnchor_;\n    if (!anchor) {\n      anchor = this.anchor_;\n      const size = this.getSize();\n      if (\n        this.anchorXUnits_ == 'fraction' ||\n        this.anchorYUnits_ == 'fraction'\n      ) {\n        if (!size) {\n          return null;\n        }\n        anchor = this.anchor_.slice();\n        if (this.anchorXUnits_ == 'fraction') {\n          anchor[0] *= size[0];\n        }\n        if (this.anchorYUnits_ == 'fraction') {\n          anchor[1] *= size[1];\n        }\n      }\n\n      if (this.anchorOrigin_ != 'top-left') {\n        if (!size) {\n          return null;\n        }\n        if (anchor === this.anchor_) {\n          anchor = this.anchor_.slice();\n        }\n        if (\n          this.anchorOrigin_ == 'top-right' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[0] = -anchor[0] + size[0];\n        }\n        if (\n          this.anchorOrigin_ == 'bottom-left' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[1] = -anchor[1] + size[1];\n        }\n      }\n      this.normalizedAnchor_ = anchor;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      anchor[0] - displacement[0] / scale[0],\n      anchor[1] + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement|OffscreenCanvas|ImageBitmap} Image or Canvas element. If the Icon\n   * style was configured with `src` or with a not let loaded `img`, an `ImageBitmap` will be returned.\n   * @api\n   * @override\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ratio of the image.\n   * @api\n   * @override\n   */\n  getPixelRatio(pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   * @override\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   * @override\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement|OffscreenCanvas|ImageBitmap} Image element.\n   * @override\n   */\n  getHitDetectionImage() {\n    return this.iconImage_.getHitDetectionImage();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   * @override\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n\n    if (this.offsetOrigin_ != 'top-left') {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (\n        this.offsetOrigin_ == 'top-right' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (\n        this.offsetOrigin_ == 'bottom-left' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * Set the image URI\n   * @param {string} src Image source URI\n   * @api\n   */\n  setSrc(src) {\n    this.iconImage_ = getIconImage(\n      null,\n      src,\n      this.crossOrigin_,\n      ImageState.IDLE,\n      this.color_,\n    );\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   * @override\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * Get the width of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon width (in pixels).\n   * @api\n   */\n  getWidth() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[0] * scale[0];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[0] * scale[0];\n    }\n    return undefined;\n  }\n\n  /**\n   * Get the height of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon height (in pixels).\n   * @api\n   */\n  getHeight() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[1] * scale[1];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[1] * scale[1];\n    }\n    return undefined;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   * @override\n   */\n  setScale(scale) {\n    delete this.initialOptions_;\n    super.setScale(scale);\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   * @override\n   */\n  listenImageChange(listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   * @override\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   * @override\n   */\n  unlistenImageChange(listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * @override\n   */\n  ready() {\n    return this.iconImage_.ready();\n  }\n}\n\nexport default Icon;\n","/**\n * @module ol/style/Stroke\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nclass Stroke {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {CanvasLineCap|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {CanvasLineJoin|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth(),\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {CanvasLineCap|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>|null} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {CanvasLineJoin|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * @param {Array<number>|null} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n  }\n}\n\nexport default Stroke;\n","/**\n * @module ol/style/Style\n */\n\nimport {assert} from '../asserts.js';\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport Stroke from './Stroke.js';\n\n/**\n * Defines how symbols and text are decluttered on layers ith `declutter` set to `true`\n * **declutter**: Overlapping symbols and text are decluttered.\n * **obstacle**: Symbols and text are rendered, but serve as obstacle for subsequent attempts\n *   to place a symbol or text at the same location.\n * **none**: No decluttering is done.\n *\n * @typedef {\"declutter\"|\"obstacle\"|\"none\"} DeclutterMode\n */\n\n/**\n * A function that takes a {@link module:ol/Feature~Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style~Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes a {@link module:ol/Feature~Feature} as argument and returns an\n * {@link module:ol/geom/Geometry~Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>|Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>),import(\"../render.js\").State): void} RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {RenderFunction} [hitDetectionRenderer] Custom renderer for hit detection. If provided will be used\n * in hit detection rendering.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)',\n *  });\n *  const stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25,\n *  });\n *  const styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5,\n *      }),\n *      fill: fill,\n *      stroke: stroke,\n *    }),\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const styles = {};\n *  const white = [255, 255, 255, 1];\n *  const blue = [0, 153, 255, 1];\n *  const width = 3;\n *  styles['Polygon'] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5],\n *      }),\n *    }),\n *  ];\n *  styles['MultiPolygon'] =\n *      styles['Polygon'];\n *  styles['LineString'] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2,\n *      }),\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width,\n *      }),\n *    }),\n *  ];\n *  styles['MultiLineString'] = styles['LineString'];\n *\n *  styles['Circle'] = styles['Polygon'].concat(\n *    styles['LineString']\n *  );\n *\n *  styles['Point'] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue,\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2,\n *        }),\n *      }),\n *      zIndex: Infinity,\n *    }),\n *  ];\n *  styles['MultiPoint'] =\n *      styles['Point'];\n *  styles['GeometryCollection'] =\n *      styles['Polygon'].concat(\n *          styles['LineString'],\n *          styles['Point']\n *      );\n * ```\n *\n * @api\n */\nclass Style {\n  /**\n   * @param {Options} [options] Style options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction|null}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {import(\"./Image.js\").default|null}\n     */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.hitDetectionRenderer_ =\n      options.hitDetectionRenderer !== undefined\n        ? options.hitDetectionRenderer\n        : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default|null}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        geometry\n      ).clone();\n    }\n    return new Style({\n      geometry: geometry ?? undefined,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      renderer: this.getRenderer() ?? undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex(),\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Sets a custom renderer function for this style used\n   * in hit detection.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setHitDetectionRenderer(renderer) {\n    this.hitDetectionRenderer_ = renderer;\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setHitDetectionRenderer} or the `hitDetectionRenderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getHitDetectionRenderer() {\n    return this.hitDetectionRenderer_;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction|null}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default|null} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default|null} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction|null} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function (feature) {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (\n          feature.get(geometry)\n        );\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function () {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(\n        typeof (/** @type {?} */ (obj).getZIndex) === 'function',\n        'Expected an `Style` or an array of `Style`',\n      );\n      const style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function () {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n/**\n * @type {Array<Style>|null}\n */\nlet defaultStyles = null;\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)',\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25,\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5,\n        }),\n        fill: fill,\n        stroke: stroke,\n      }),\n    ];\n  }\n  return defaultStyles;\n}\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles['Polygon'] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5],\n      }),\n    }),\n  ];\n  styles['MultiPolygon'] = styles['Polygon'];\n\n  styles['LineString'] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2,\n      }),\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width,\n      }),\n    }),\n  ];\n  styles['MultiLineString'] = styles['LineString'];\n\n  styles['Circle'] = styles['Polygon'].concat(styles['LineString']);\n\n  styles['Point'] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue,\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2,\n        }),\n      }),\n      zIndex: Infinity,\n    }),\n  ];\n  styles['MultiPoint'] = styles['Point'];\n\n  styles['GeometryCollection'] = styles['Polygon'].concat(\n    styles['LineString'],\n    styles['Point'],\n  );\n\n  return styles;\n}\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/style/Text\n */\nimport {toSize} from '../size.js';\nimport Fill from './Fill.js';\n\n/**\n * @typedef {'point' | 'line'} TextPlacement\n * Default text placement is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n */\n\n/**\n * @typedef {'left' | 'center' | 'right'} TextJustify\n */\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nconst DEFAULT_FILL_COLOR = '#333';\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS `font` value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is `'10px sans-serif'`\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {TextPlacement} [placement='point'] Text placement.\n * @property {number} [repeat] Repeat interval. When set, the text will be repeated at this interval, which specifies\n * the distance between two text anchors in pixels. Only available when `placement` is set to `'line'`. Overrides 'textAlign'.\n * @property {number|import(\"../size.js\").Size} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {boolean} [keepUpright=true] Whether the text can be rotated 180° to prevent being rendered upside down.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string|Array<string>} [text] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for `placement: 'line'` or the immediate rendering API.\n * @property {CanvasTextAlign} [textAlign] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {TextJustify} [justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `justify` is ignored for immediate rendering and also for `placement: 'line'`.\n * @property {CanvasTextBaseline} [textBaseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {import(\"./Fill.js\").default|null} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333). Specify `null` for no fill.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n * @property {import('../style/Style.js').DeclutterMode} [declutterMode] Declutter mode: `declutter`, `obstacle`, `none`\n */\n\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nclass Text {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.font_ = options.font;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.keepUpright_ = options.keepUpright;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size|undefined}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale !== undefined ? options.scale : 1);\n\n    /**\n     * @private\n     * @type {string|Array<string>|undefined}\n     */\n    this.text_ = options.text;\n\n    /**\n     * @private\n     * @type {CanvasTextAlign|undefined}\n     */\n    this.textAlign_ = options.textAlign;\n\n    /**\n     * @private\n     * @type {TextJustify|undefined}\n     */\n    this.justify_ = options.justify;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.repeat_ = options.repeat;\n\n    /**\n     * @private\n     * @type {CanvasTextBaseline|undefined}\n     */\n    this.textBaseline_ = options.textBaseline;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ =\n      options.fill !== undefined\n        ? options.fill\n        : new Fill({color: DEFAULT_FILL_COLOR});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxAngle_ =\n      options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n    /**\n     * @private\n     * @type {TextPlacement}\n     */\n    this.placement_ =\n      options.placement !== undefined ? options.placement : 'point';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overflow_ = !!options.overflow;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.backgroundFill_ = options.backgroundFill\n      ? options.backgroundFill\n      : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.backgroundStroke_ = options.backgroundStroke\n      ? options.backgroundStroke\n      : null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.padding_ = options.padding === undefined ? null : options.padding;\n\n    /**\n     * @private\n     * @type {import('../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Text} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Text({\n      font: this.getFont(),\n      placement: this.getPlacement(),\n      repeat: this.getRepeat(),\n      maxAngle: this.getMaxAngle(),\n      overflow: this.getOverflow(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      keepUpright: this.getKeepUpright(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      text: this.getText(),\n      textAlign: this.getTextAlign(),\n      justify: this.getJustify(),\n      textBaseline: this.getTextBaseline(),\n      fill:\n        this.getFill() instanceof Fill\n          ? this.getFill().clone()\n          : this.getFill(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      offsetX: this.getOffsetX(),\n      offsetY: this.getOffsetY(),\n      backgroundFill: this.getBackgroundFill()\n        ? this.getBackgroundFill().clone()\n        : undefined,\n      backgroundStroke: this.getBackgroundStroke()\n        ? this.getBackgroundStroke().clone()\n        : undefined,\n      padding: this.getPadding() || undefined,\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the `overflow` configuration.\n   * @return {boolean} Let text overflow the length of the path they follow.\n   * @api\n   */\n  getOverflow() {\n    return this.overflow_;\n  }\n\n  /**\n   * Get the font name.\n   * @return {string|undefined} Font.\n   * @api\n   */\n  getFont() {\n    return this.font_;\n  }\n\n  /**\n   * Get the maximum angle between adjacent characters.\n   * @return {number} Angle in radians.\n   * @api\n   */\n  getMaxAngle() {\n    return this.maxAngle_;\n  }\n\n  /**\n   * Get the label placement.\n   * @return {TextPlacement} Text placement.\n   * @api\n   */\n  getPlacement() {\n    return this.placement_;\n  }\n\n  /**\n   * Get the repeat interval of the text.\n   * @return {number|undefined} Repeat interval in pixels.\n   * @api\n   */\n  getRepeat() {\n    return this.repeat_;\n  }\n\n  /**\n   * Get the x-offset for the text.\n   * @return {number} Horizontal text offset.\n   * @api\n   */\n  getOffsetX() {\n    return this.offsetX_;\n  }\n\n  /**\n   * Get the y-offset for the text.\n   * @return {number} Vertical text offset.\n   * @api\n   */\n  getOffsetY() {\n    return this.offsetY_;\n  }\n\n  /**\n   * Get the fill style for the text.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Determine whether the text rotates with the map.\n   * @return {boolean|undefined} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Determine whether the text can be rendered upside down.\n   * @return {boolean|undefined} Keep text upright.\n   * @api\n   */\n  getKeepUpright() {\n    return this.keepUpright_;\n  }\n\n  /**\n   * Get the text rotation.\n   * @return {number|undefined} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the text scale.\n   * @return {number|import(\"../size.js\").Size|undefined} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the stroke style for the text.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Get the text to be rendered.\n   * @return {string|Array<string>|undefined} Text.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Get the text alignment.\n   * @return {CanvasTextAlign|undefined} Text align.\n   * @api\n   */\n  getTextAlign() {\n    return this.textAlign_;\n  }\n\n  /**\n   * Get the justification.\n   * @return {TextJustify|undefined} Justification.\n   * @api\n   */\n  getJustify() {\n    return this.justify_;\n  }\n\n  /**\n   * Get the text baseline.\n   * @return {CanvasTextBaseline|undefined} Text baseline.\n   * @api\n   */\n  getTextBaseline() {\n    return this.textBaseline_;\n  }\n\n  /**\n   * Get the background fill style for the text.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getBackgroundFill() {\n    return this.backgroundFill_;\n  }\n\n  /**\n   * Get the background stroke style for the text.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getBackgroundStroke() {\n    return this.backgroundStroke_;\n  }\n\n  /**\n   * Get the padding for the text.\n   * @return {Array<number>|null} Padding.\n   * @api\n   */\n  getPadding() {\n    return this.padding_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {import(\"./Style.js\").DeclutterMode} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Set the `overflow` property.\n   *\n   * @param {boolean} overflow Let text overflow the path that it follows.\n   * @api\n   */\n  setOverflow(overflow) {\n    this.overflow_ = overflow;\n  }\n\n  /**\n   * Set the font.\n   *\n   * @param {string|undefined} font Font.\n   * @api\n   */\n  setFont(font) {\n    this.font_ = font;\n  }\n\n  /**\n   * Set the maximum angle between adjacent characters.\n   *\n   * @param {number} maxAngle Angle in radians.\n   * @api\n   */\n  setMaxAngle(maxAngle) {\n    this.maxAngle_ = maxAngle;\n  }\n\n  /**\n   * Set the x offset.\n   *\n   * @param {number} offsetX Horizontal text offset.\n   * @api\n   */\n  setOffsetX(offsetX) {\n    this.offsetX_ = offsetX;\n  }\n\n  /**\n   * Set the y offset.\n   *\n   * @param {number} offsetY Vertical text offset.\n   * @api\n   */\n  setOffsetY(offsetY) {\n    this.offsetY_ = offsetY;\n  }\n\n  /**\n   * Set the text placement.\n   *\n   * @param {TextPlacement} placement Placement.\n   * @api\n   */\n  setPlacement(placement) {\n    this.placement_ = placement;\n  }\n\n  /**\n   * Set the repeat interval of the text.\n   * @param {number|undefined} [repeat] Repeat interval in pixels.\n   * @api\n   */\n  setRepeat(repeat) {\n    this.repeat_ = repeat;\n  }\n\n  /**\n   * Set whether to rotate the text with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set whether the text can be rendered upside down.\n   *\n   * @param {boolean} keepUpright Keep text upright.\n   * @api\n   */\n  setKeepUpright(keepUpright) {\n    this.keepUpright_ = keepUpright;\n  }\n\n  /**\n   * Set the fill.\n   *\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number|undefined} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size|undefined} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale !== undefined ? scale : 1);\n  }\n\n  /**\n   * Set the stroke.\n   *\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Set the text.\n   *\n   * @param {string|Array<string>|undefined} text Text.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Set the text alignment.\n   *\n   * @param {CanvasTextAlign|undefined} textAlign Text align.\n   * @api\n   */\n  setTextAlign(textAlign) {\n    this.textAlign_ = textAlign;\n  }\n\n  /**\n   * Set the justification.\n   *\n   * @param {TextJustify|undefined} justify Justification.\n   * @api\n   */\n  setJustify(justify) {\n    this.justify_ = justify;\n  }\n\n  /**\n   * Set the text baseline.\n   *\n   * @param {CanvasTextBaseline|undefined} textBaseline Text baseline.\n   * @api\n   */\n  setTextBaseline(textBaseline) {\n    this.textBaseline_ = textBaseline;\n  }\n\n  /**\n   * Set the background fill.\n   *\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setBackgroundFill(fill) {\n    this.backgroundFill_ = fill;\n  }\n\n  /**\n   * Set the background stroke.\n   *\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setBackgroundStroke(stroke) {\n    this.backgroundStroke_ = stroke;\n  }\n\n  /**\n   * Set the padding (`[top, right, bottom, left]`).\n   *\n   * @param {Array<number>|null} padding Padding.\n   * @api\n   */\n  setPadding(padding) {\n    this.padding_ = padding;\n  }\n}\n\nexport default Text;\n","/**\n * @module ol/render/canvas/style\n */\n\nimport {NO_COLOR} from '../../color.js';\nimport {buildExpression, newEvaluationContext} from '../../expr/cpu.js';\nimport {\n  BooleanType,\n  ColorType,\n  NumberArrayType,\n  NumberType,\n  StringType,\n  computeGeometryType,\n  newParsingContext,\n} from '../../expr/expression.js';\nimport {isEmpty} from '../../obj.js';\nimport {toSize} from '../../size.js';\nimport Circle from '../../style/Circle.js';\nimport Fill from '../../style/Fill.js';\nimport Icon from '../../style/Icon.js';\nimport RegularShape from '../../style/RegularShape.js';\nimport Stroke from '../../style/Stroke.js';\nimport Style from '../../style/Style.js';\nimport Text from '../../style/Text.js';\n\n/**\n * @fileoverview This module includes functions to build styles for the canvas renderer.  Building\n * is composed of two steps: parsing and compiling.  The parsing step takes an encoded expression\n * and returns an instance of one of the expression classes.  The compiling step takes the\n * expression instance and returns a function that can be evaluated to return a literal value.  The\n * evaluator function should do as little allocation and work as possible.\n */\n\n/**\n * @typedef {import(\"../../style/flat.js\").FlatStyle} FlatStyle\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").EncodedExpression} EncodedExpression\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").ParsingContext} ParsingContext\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").CallExpression} CallExpression\n */\n\n/**\n * @typedef {import(\"../../expr/cpu.js\").EvaluationContext} EvaluationContext\n */\n\n/**\n * @typedef {import(\"../../expr/cpu.js\").ExpressionEvaluator} ExpressionEvaluator\n */\n\n/**\n * @param {EvaluationContext} context The evaluation context.\n * @return {boolean} Always true.\n */\nfunction always(context) {\n  return true;\n}\n\n/**\n * This function adapts a rule evaluator to the existing style function interface.\n * After we have deprecated the style function, we can use the compiled rules directly\n * and pass a more complete evaluation context (variables, zoom, time, etc.).\n *\n * @param {Array<import('../../style/flat.js').Rule>} rules The rules.\n * @return {import('../../style/Style.js').StyleFunction} A style function.\n */\nexport function rulesToStyleFunction(rules) {\n  const parsingContext = newParsingContext();\n  const evaluator = buildRuleSet(rules, parsingContext);\n  const evaluationContext = newEvaluationContext();\n  return function (feature, resolution) {\n    evaluationContext.properties = feature.getPropertiesInternal();\n    evaluationContext.resolution = resolution;\n    if (parsingContext.featureId) {\n      const id = feature.getId();\n      if (id !== undefined) {\n        evaluationContext.featureId = id;\n      } else {\n        evaluationContext.featureId = null;\n      }\n    }\n    if (parsingContext.geometryType) {\n      evaluationContext.geometryType = computeGeometryType(\n        feature.getGeometry(),\n      );\n    }\n    return evaluator(evaluationContext);\n  };\n}\n\n/**\n * This function adapts a style evaluator to the existing style function interface.\n * After we have deprecated the style function, we can use the compiled rules directly\n * and pass a more complete evaluation context (variables, zoom, time, etc.).\n *\n * @param {Array<import('../../style/flat.js').FlatStyle>} flatStyles The flat styles.\n * @return {import('../../style/Style.js').StyleFunction} A style function.\n */\nexport function flatStylesToStyleFunction(flatStyles) {\n  const parsingContext = newParsingContext();\n  const length = flatStyles.length;\n\n  /**\n   * @type {Array<StyleEvaluator>}\n   */\n  const evaluators = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    evaluators[i] = buildStyle(flatStyles[i], parsingContext);\n  }\n  const evaluationContext = newEvaluationContext();\n\n  /**\n   * @type {Array<Style>}\n   */\n  const styles = new Array(length);\n\n  return function (feature, resolution) {\n    evaluationContext.properties = feature.getPropertiesInternal();\n    evaluationContext.resolution = resolution;\n    if (parsingContext.featureId) {\n      const id = feature.getId();\n      if (id !== undefined) {\n        evaluationContext.featureId = id;\n      } else {\n        evaluationContext.featureId = null;\n      }\n    }\n    let nonNullCount = 0;\n    for (let i = 0; i < length; ++i) {\n      const style = evaluators[i](evaluationContext);\n      if (style) {\n        styles[nonNullCount] = style;\n        nonNullCount += 1;\n      }\n    }\n    styles.length = nonNullCount;\n    return styles;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Array<Style>} RuleSetEvaluator\n */\n\n/**\n * @typedef {Object} CompiledRule\n * @property {ExpressionEvaluator} filter The compiled filter evaluator.\n * @property {Array<StyleEvaluator>} styles The list of compiled style evaluators.\n */\n\n/**\n * @param {Array<import('../../style/flat.js').Rule>} rules The rules.\n * @param {ParsingContext} context The parsing context.\n * @return {RuleSetEvaluator} The evaluator function.\n */\nexport function buildRuleSet(rules, context) {\n  const length = rules.length;\n\n  /**\n   * @type {Array<CompiledRule>}\n   */\n  const compiledRules = new Array(length);\n\n  for (let i = 0; i < length; ++i) {\n    const rule = rules[i];\n    const filter =\n      'filter' in rule\n        ? buildExpression(rule.filter, BooleanType, context)\n        : always;\n\n    /**\n     * @type {Array<StyleEvaluator>}\n     */\n    let styles;\n    if (Array.isArray(rule.style)) {\n      const styleLength = rule.style.length;\n      styles = new Array(styleLength);\n      for (let j = 0; j < styleLength; ++j) {\n        styles[j] = buildStyle(rule.style[j], context);\n      }\n    } else {\n      styles = [buildStyle(rule.style, context)];\n    }\n\n    compiledRules[i] = {filter, styles};\n  }\n\n  return function (context) {\n    /**\n     * @type {Array<Style>}\n     */\n    const styles = [];\n\n    let someMatched = false;\n    for (let i = 0; i < length; ++i) {\n      const filterEvaluator = compiledRules[i].filter;\n      if (!filterEvaluator(context)) {\n        continue;\n      }\n      if (rules[i].else && someMatched) {\n        continue;\n      }\n      someMatched = true;\n      for (const styleEvaluator of compiledRules[i].styles) {\n        const style = styleEvaluator(context);\n        if (!style) {\n          continue;\n        }\n        styles.push(style);\n      }\n    }\n\n    return styles;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Style|null} StyleEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle A flat style literal.\n * @param {ParsingContext} context The parsing context.\n * @return {StyleEvaluator} A function that evaluates to a style.  The style returned by\n * this function will be reused between invocations.\n */\nexport function buildStyle(flatStyle, context) {\n  const evaluateFill = buildFill(flatStyle, '', context);\n  const evaluateStroke = buildStroke(flatStyle, '', context);\n  const evaluateText = buildText(flatStyle, context);\n  const evaluateImage = buildImage(flatStyle, context);\n  const evaluateZIndex = numberEvaluator(flatStyle, 'z-index', context);\n\n  if (\n    !evaluateFill &&\n    !evaluateStroke &&\n    !evaluateText &&\n    !evaluateImage &&\n    !isEmpty(flatStyle)\n  ) {\n    // assume this is a user error\n    // would be nice to check the properties and suggest \"did you mean...\"\n    throw new Error(\n      'No fill, stroke, point, or text symbolizer properties in style: ' +\n        JSON.stringify(flatStyle),\n    );\n  }\n\n  const style = new Style();\n  return function (context) {\n    let empty = true;\n    if (evaluateFill) {\n      const fill = evaluateFill(context);\n      if (fill) {\n        empty = false;\n      }\n      style.setFill(fill);\n    }\n    if (evaluateStroke) {\n      const stroke = evaluateStroke(context);\n      if (stroke) {\n        empty = false;\n      }\n      style.setStroke(stroke);\n    }\n    if (evaluateText) {\n      const text = evaluateText(context);\n      if (text) {\n        empty = false;\n      }\n      style.setText(text);\n    }\n    if (evaluateImage) {\n      const image = evaluateImage(context);\n      if (image) {\n        empty = false;\n      }\n      style.setImage(image);\n    }\n    if (evaluateZIndex) {\n      style.setZIndex(evaluateZIndex(context));\n    }\n    if (empty) {\n      return null;\n    }\n    return style;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Fill|null} FillEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @param {ParsingContext} context The parsing context.\n * @return {FillEvaluator?} A function that evaluates to a fill.\n */\nfunction buildFill(flatStyle, prefix, context) {\n  let evaluateColor;\n  if (prefix + 'fill-pattern-src' in flatStyle) {\n    evaluateColor = patternEvaluator(flatStyle, prefix + 'fill-', context);\n  } else {\n    if (flatStyle[prefix + 'fill-color'] === 'none') {\n      // avoids hit detection\n      return (context) => null;\n    }\n\n    evaluateColor = colorLikeEvaluator(\n      flatStyle,\n      prefix + 'fill-color',\n      context,\n    );\n  }\n  if (!evaluateColor) {\n    return null;\n  }\n\n  const fill = new Fill();\n  return function (context) {\n    const color = evaluateColor(context);\n    if (color === NO_COLOR) {\n      return null;\n    }\n    fill.setColor(color);\n    return fill;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Stroke|null} StrokeEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @param {ParsingContext} context The parsing context.\n * @return {StrokeEvaluator?} A function the evaluates to a stroke.\n */\nfunction buildStroke(flatStyle, prefix, context) {\n  const evaluateWidth = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-width',\n    context,\n  );\n\n  const evaluateColor = colorLikeEvaluator(\n    flatStyle,\n    prefix + 'stroke-color',\n    context,\n  );\n\n  if (!evaluateWidth && !evaluateColor) {\n    return null;\n  }\n\n  const evaluateLineCap = stringEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-cap',\n    context,\n  );\n\n  const evaluateLineJoin = stringEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-join',\n    context,\n  );\n\n  const evaluateLineDash = numberArrayEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-dash',\n    context,\n  );\n\n  const evaluateLineDashOffset = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-dash-offset',\n    context,\n  );\n\n  const evaluateMiterLimit = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-miter-limit',\n    context,\n  );\n\n  const stroke = new Stroke();\n  return function (context) {\n    if (evaluateColor) {\n      const color = evaluateColor(context);\n      if (color === NO_COLOR) {\n        return null;\n      }\n      stroke.setColor(color);\n    }\n\n    if (evaluateWidth) {\n      stroke.setWidth(evaluateWidth(context));\n    }\n\n    if (evaluateLineCap) {\n      const lineCap = evaluateLineCap(context);\n      if (lineCap !== 'butt' && lineCap !== 'round' && lineCap !== 'square') {\n        throw new Error('Expected butt, round, or square line cap');\n      }\n      stroke.setLineCap(lineCap);\n    }\n\n    if (evaluateLineJoin) {\n      const lineJoin = evaluateLineJoin(context);\n      if (\n        lineJoin !== 'bevel' &&\n        lineJoin !== 'round' &&\n        lineJoin !== 'miter'\n      ) {\n        throw new Error('Expected bevel, round, or miter line join');\n      }\n      stroke.setLineJoin(lineJoin);\n    }\n\n    if (evaluateLineDash) {\n      stroke.setLineDash(evaluateLineDash(context));\n    }\n\n    if (evaluateLineDashOffset) {\n      stroke.setLineDashOffset(evaluateLineDashOffset(context));\n    }\n\n    if (evaluateMiterLimit) {\n      stroke.setMiterLimit(evaluateMiterLimit(context));\n    }\n\n    return stroke;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Text} TextEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {TextEvaluator?} A function that evaluates to a text symbolizer.\n */\nfunction buildText(flatStyle, context) {\n  const prefix = 'text-';\n\n  // Currently, an Array<string> may be used for rich text support.  This doesn't\n  // work with our expression syntax where arrays of strings are interpreted as\n  // call expressions.  To support rich text, we could add a 'strings' operator\n  // where all the following arguments would be string values.\n  const evaluateValue = stringEvaluator(flatStyle, prefix + 'value', context);\n  if (!evaluateValue) {\n    return null;\n  }\n\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n\n  const evaluateBackgroundFill = buildFill(\n    flatStyle,\n    prefix + 'background-',\n    context,\n  );\n\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n\n  const evaluateBackgroundStroke = buildStroke(\n    flatStyle,\n    prefix + 'background-',\n    context,\n  );\n\n  const evaluateFont = stringEvaluator(flatStyle, prefix + 'font', context);\n\n  const evaluateMaxAngle = numberEvaluator(\n    flatStyle,\n    prefix + 'max-angle',\n    context,\n  );\n\n  const evaluateOffsetX = numberEvaluator(\n    flatStyle,\n    prefix + 'offset-x',\n    context,\n  );\n\n  const evaluateOffsetY = numberEvaluator(\n    flatStyle,\n    prefix + 'offset-y',\n    context,\n  );\n\n  const evaluateOverflow = booleanEvaluator(\n    flatStyle,\n    prefix + 'overflow',\n    context,\n  );\n\n  const evaluatePlacement = stringEvaluator(\n    flatStyle,\n    prefix + 'placement',\n    context,\n  );\n\n  const evaluateRepeat = numberEvaluator(flatStyle, prefix + 'repeat', context);\n\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n\n  const evaluateAlign = stringEvaluator(flatStyle, prefix + 'align', context);\n\n  const evaluateJustify = stringEvaluator(\n    flatStyle,\n    prefix + 'justify',\n    context,\n  );\n\n  const evaluateBaseline = stringEvaluator(\n    flatStyle,\n    prefix + 'baseline',\n    context,\n  );\n\n  const evaluateKeepUpright = booleanEvaluator(\n    flatStyle,\n    prefix + 'keep-upright',\n    context,\n  );\n\n  const evaluatePadding = numberArrayEvaluator(\n    flatStyle,\n    prefix + 'padding',\n    context,\n  );\n\n  // The following properties are not currently settable\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const text = new Text({declutterMode});\n\n  return function (context) {\n    text.setText(evaluateValue(context));\n\n    if (evaluateFill) {\n      text.setFill(evaluateFill(context));\n    }\n\n    if (evaluateBackgroundFill) {\n      text.setBackgroundFill(evaluateBackgroundFill(context));\n    }\n\n    if (evaluateStroke) {\n      text.setStroke(evaluateStroke(context));\n    }\n\n    if (evaluateBackgroundStroke) {\n      text.setBackgroundStroke(evaluateBackgroundStroke(context));\n    }\n\n    if (evaluateFont) {\n      text.setFont(evaluateFont(context));\n    }\n\n    if (evaluateMaxAngle) {\n      text.setMaxAngle(evaluateMaxAngle(context));\n    }\n\n    if (evaluateOffsetX) {\n      text.setOffsetX(evaluateOffsetX(context));\n    }\n\n    if (evaluateOffsetY) {\n      text.setOffsetY(evaluateOffsetY(context));\n    }\n\n    if (evaluateOverflow) {\n      text.setOverflow(evaluateOverflow(context));\n    }\n\n    if (evaluatePlacement) {\n      const placement = evaluatePlacement(context);\n      if (placement !== 'point' && placement !== 'line') {\n        throw new Error('Expected point or line for text-placement');\n      }\n      text.setPlacement(placement);\n    }\n\n    if (evaluateRepeat) {\n      text.setRepeat(evaluateRepeat(context));\n    }\n\n    if (evaluateScale) {\n      text.setScale(evaluateScale(context));\n    }\n\n    if (evaluateRotateWithView) {\n      text.setRotateWithView(evaluateRotateWithView(context));\n    }\n\n    if (evaluateRotation) {\n      text.setRotation(evaluateRotation(context));\n    }\n\n    if (evaluateAlign) {\n      const textAlign = evaluateAlign(context);\n      if (\n        textAlign !== 'left' &&\n        textAlign !== 'center' &&\n        textAlign !== 'right' &&\n        textAlign !== 'end' &&\n        textAlign !== 'start'\n      ) {\n        throw new Error(\n          'Expected left, right, center, start, or end for text-align',\n        );\n      }\n      text.setTextAlign(textAlign);\n    }\n\n    if (evaluateJustify) {\n      const justify = evaluateJustify(context);\n      if (justify !== 'left' && justify !== 'right' && justify !== 'center') {\n        throw new Error('Expected left, right, or center for text-justify');\n      }\n      text.setJustify(justify);\n    }\n\n    if (evaluateBaseline) {\n      const textBaseline = evaluateBaseline(context);\n      if (\n        textBaseline !== 'bottom' &&\n        textBaseline !== 'top' &&\n        textBaseline !== 'middle' &&\n        textBaseline !== 'alphabetic' &&\n        textBaseline !== 'hanging'\n      ) {\n        throw new Error(\n          'Expected bottom, top, middle, alphabetic, or hanging for text-baseline',\n        );\n      }\n      text.setTextBaseline(textBaseline);\n    }\n\n    if (evaluatePadding) {\n      text.setPadding(evaluatePadding(context));\n    }\n\n    if (evaluateKeepUpright) {\n      text.setKeepUpright(evaluateKeepUpright(context));\n    }\n\n    return text;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):import(\"../../style/Image.js\").default} ImageEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator?} A function that evaluates to an image symbolizer.\n */\nfunction buildImage(flatStyle, context) {\n  if ('icon-src' in flatStyle) {\n    return buildIcon(flatStyle, context);\n  }\n\n  if ('shape-points' in flatStyle) {\n    return buildShape(flatStyle, context);\n  }\n\n  if ('circle-radius' in flatStyle) {\n    return buildCircle(flatStyle, context);\n  }\n\n  return null;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to an image symbolizer.\n */\nfunction buildIcon(flatStyle, context) {\n  const prefix = 'icon-';\n\n  // required property\n  const srcName = prefix + 'src';\n  const src = requireString(flatStyle[srcName], srcName);\n\n  // settable properties\n  const evaluateAnchor = coordinateEvaluator(\n    flatStyle,\n    prefix + 'anchor',\n    context,\n  );\n\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n\n  const evaluateOpacity = numberEvaluator(\n    flatStyle,\n    prefix + 'opacity',\n    context,\n  );\n\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context,\n  );\n\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  // the remaining symbolizer properties are not currently settable\n  const anchorOrigin = optionalIconOrigin(flatStyle, prefix + 'anchor-origin');\n  const anchorXUnits = optionalIconAnchorUnits(\n    flatStyle,\n    prefix + 'anchor-x-units',\n  );\n  const anchorYUnits = optionalIconAnchorUnits(\n    flatStyle,\n    prefix + 'anchor-y-units',\n  );\n  const color = optionalColorLike(flatStyle, prefix + 'color');\n  const crossOrigin = optionalString(flatStyle, prefix + 'cross-origin');\n  const offset = optionalNumberArray(flatStyle, prefix + 'offset');\n  const offsetOrigin = optionalIconOrigin(flatStyle, prefix + 'offset-origin');\n  const width = optionalNumber(flatStyle, prefix + 'width');\n  const height = optionalNumber(flatStyle, prefix + 'height');\n  const size = optionalSize(flatStyle, prefix + 'size');\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const icon = new Icon({\n    src,\n    anchorOrigin,\n    anchorXUnits,\n    anchorYUnits,\n    color,\n    crossOrigin,\n    offset,\n    offsetOrigin,\n    height,\n    width,\n    size,\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateOpacity) {\n      icon.setOpacity(evaluateOpacity(context));\n    }\n\n    if (evaluateDisplacement) {\n      icon.setDisplacement(evaluateDisplacement(context));\n    }\n\n    if (evaluateRotation) {\n      icon.setRotation(evaluateRotation(context));\n    }\n\n    if (evaluateRotateWithView) {\n      icon.setRotateWithView(evaluateRotateWithView(context));\n    }\n\n    if (evaluateScale) {\n      icon.setScale(evaluateScale(context));\n    }\n\n    if (evaluateAnchor) {\n      icon.setAnchor(evaluateAnchor(context));\n    }\n    return icon;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to an icon symbolizer.\n */\nfunction buildShape(flatStyle, context) {\n  const prefix = 'shape-';\n\n  // required property\n  const pointsName = prefix + 'points';\n  const radiusName = prefix + 'radius';\n  const points = requireNumber(flatStyle[pointsName], pointsName);\n  const radius = requireNumber(flatStyle[radiusName], radiusName);\n\n  // settable properties\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context,\n  );\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  // the remaining properties are not currently settable\n  const radius2 = optionalNumber(flatStyle, prefix + 'radius2');\n  const angle = optionalNumber(flatStyle, prefix + 'angle');\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const shape = new RegularShape({\n    points,\n    radius,\n    radius2,\n    angle,\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateFill) {\n      shape.setFill(evaluateFill(context));\n    }\n    if (evaluateStroke) {\n      shape.setStroke(evaluateStroke(context));\n    }\n    if (evaluateDisplacement) {\n      shape.setDisplacement(evaluateDisplacement(context));\n    }\n    if (evaluateRotation) {\n      shape.setRotation(evaluateRotation(context));\n    }\n    if (evaluateRotateWithView) {\n      shape.setRotateWithView(evaluateRotateWithView(context));\n    }\n    if (evaluateScale) {\n      shape.setScale(evaluateScale(context));\n    }\n\n    return shape;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to a circle symbolizer.\n */\nfunction buildCircle(flatStyle, context) {\n  const prefix = 'circle-';\n\n  // settable properties\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n  const evaluateRadius = numberEvaluator(flatStyle, prefix + 'radius', context);\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context,\n  );\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  // the remaining properties are not currently settable\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const circle = new Circle({\n    radius: 5, // this is arbitrary, but required - the evaluated radius is used below\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateRadius) {\n      circle.setRadius(evaluateRadius(context));\n    }\n    if (evaluateFill) {\n      circle.setFill(evaluateFill(context));\n    }\n    if (evaluateStroke) {\n      circle.setStroke(evaluateStroke(context));\n    }\n    if (evaluateDisplacement) {\n      circle.setDisplacement(evaluateDisplacement(context));\n    }\n    if (evaluateRotation) {\n      circle.setRotation(evaluateRotation(context));\n    }\n    if (evaluateRotateWithView) {\n      circle.setRotateWithView(evaluateRotateWithView(context));\n    }\n    if (evaluateScale) {\n      circle.setScale(evaluateScale(context));\n    }\n\n    return circle;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').NumberEvaluator|undefined} The expression evaluator or undefined.\n */\nfunction numberEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return undefined;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberType, context);\n  return function (context) {\n    return requireNumber(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').StringEvaluator?} The expression evaluator.\n */\nfunction stringEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], StringType, context);\n  return function (context) {\n    return requireString(evaluator(context), name);\n  };\n}\n\nfunction patternEvaluator(flatStyle, prefix, context) {\n  const srcEvaluator = stringEvaluator(\n    flatStyle,\n    prefix + 'pattern-src',\n    context,\n  );\n  const offsetEvaluator = sizeEvaluator(\n    flatStyle,\n    prefix + 'pattern-offset',\n    context,\n  );\n  const patternSizeEvaluator = sizeEvaluator(\n    flatStyle,\n    prefix + 'pattern-size',\n    context,\n  );\n  const colorEvaluator = colorLikeEvaluator(\n    flatStyle,\n    prefix + 'color',\n    context,\n  );\n  return function (context) {\n    return {\n      src: srcEvaluator(context),\n      offset: offsetEvaluator && offsetEvaluator(context),\n      size: patternSizeEvaluator && patternSizeEvaluator(context),\n      color: colorEvaluator && colorEvaluator(context),\n    };\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').BooleanEvaluator?} The expression evaluator.\n */\nfunction booleanEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], BooleanType, context);\n  return function (context) {\n    const value = evaluator(context);\n    if (typeof value !== 'boolean') {\n      throw new Error(`Expected a boolean for ${name}`);\n    }\n    return value;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').ColorLikeEvaluator?} The expression evaluator.\n */\nfunction colorLikeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], ColorType, context);\n  return function (context) {\n    return requireColorLike(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').NumberArrayEvaluator?} The expression evaluator.\n */\nfunction numberArrayEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    return requireNumberArray(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').CoordinateEvaluator?} The expression evaluator.\n */\nfunction coordinateEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    const array = requireNumberArray(evaluator(context), name);\n    if (array.length !== 2) {\n      throw new Error(`Expected two numbers for ${name}`);\n    }\n    return array;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').SizeEvaluator?} The expression evaluator.\n */\nfunction sizeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    return requireSize(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').SizeLikeEvaluator?} The expression evaluator.\n */\nfunction sizeLikeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(\n    flatStyle[name],\n    NumberArrayType | NumberType,\n    context,\n  );\n  return function (context) {\n    return requireSizeLike(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {number|undefined} A number or undefined.\n */\nfunction optionalNumber(flatStyle, property) {\n  const value = flatStyle[property];\n  if (value === undefined) {\n    return undefined;\n  }\n  if (typeof value !== 'number') {\n    throw new Error(`Expected a number for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../size.js\").Size|undefined} A size or undefined.\n */\nfunction optionalSize(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded === 'number') {\n    return toSize(encoded);\n  }\n  if (!Array.isArray(encoded)) {\n    throw new Error(`Expected a number or size array for ${property}`);\n  }\n  if (\n    encoded.length !== 2 ||\n    typeof encoded[0] !== 'number' ||\n    typeof encoded[1] !== 'number'\n  ) {\n    throw new Error(`Expected a number or size array for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {string|undefined} A string or undefined.\n */\nfunction optionalString(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../style/Icon.js\").IconOrigin|undefined} An icon origin or undefined.\n */\nfunction optionalIconOrigin(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (\n    encoded !== 'bottom-left' &&\n    encoded !== 'bottom-right' &&\n    encoded !== 'top-left' &&\n    encoded !== 'top-right'\n  ) {\n    throw new Error(\n      `Expected bottom-left, bottom-right, top-left, or top-right for ${property}`,\n    );\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../style/Icon.js\").IconAnchorUnits|undefined} Icon anchor units or undefined.\n */\nfunction optionalIconAnchorUnits(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (encoded !== 'pixels' && encoded !== 'fraction') {\n    throw new Error(`Expected pixels or fraction for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {Array<number>|undefined} An array of numbers or undefined.\n */\nfunction optionalNumberArray(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  return requireNumberArray(encoded, property);\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import('../../style/Style.js').DeclutterMode} Icon declutter mode.\n */\nfunction optionalDeclutterMode(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  if (encoded !== 'declutter' && encoded !== 'obstacle' && encoded !== 'none') {\n    throw new Error(`Expected declutter, obstacle, or none for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {string|Array<number>|undefined} A string or an array of color values or undefined.\n */\nfunction optionalColorLike(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  return requireColorLike(encoded, property);\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>} An array of numbers.\n */\nfunction requireNumberArray(value, property) {\n  if (!Array.isArray(value)) {\n    throw new Error(`Expected an array for ${property}`);\n  }\n  const length = value.length;\n  for (let i = 0; i < length; ++i) {\n    if (typeof value[i] !== 'number') {\n      throw new Error(`Expected an array of numbers for ${property}`);\n    }\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {string} A string.\n */\nfunction requireString(value, property) {\n  if (typeof value !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {number} A number.\n */\nfunction requireNumber(value, property) {\n  if (typeof value !== 'number') {\n    throw new Error(`Expected a number for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>|string} A color.\n */\nfunction requireColorLike(value, property) {\n  if (typeof value === 'string') {\n    return value;\n  }\n  const array = requireNumberArray(value, property);\n  const length = array.length;\n  if (length < 3 || length > 4) {\n    throw new Error(`Expected a color with 3 or 4 values for ${property}`);\n  }\n  return array;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>} A number or an array of two numbers.\n */\nfunction requireSize(value, property) {\n  const size = requireNumberArray(value, property);\n  if (size.length !== 2) {\n    throw new Error(`Expected an array of two numbers for ${property}`);\n  }\n  return size;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {number|Array<number>} A number or an array of two numbers.\n */\nfunction requireSizeLike(value, property) {\n  if (typeof value === 'number') {\n    return value;\n  }\n  return requireSize(value, property);\n}\n","/**\n * @module ol/layer/BaseVector\n */\nimport RBush from 'rbush';\nimport {\n  flatStylesToStyleFunction,\n  rulesToStyleFunction,\n} from '../render/canvas/style.js';\nimport Style, {\n  createDefaultStyle,\n  toFunction as toStyleFunction,\n} from '../style/Style.js';\nimport Layer from './Layer.js';\n\n/***\n * @template T\n * @typedef {T extends import(\"../source/Vector.js\").default<infer U extends import(\"../Feature.js\").FeatureLike> ? U : never} ExtractedFeatureType\n */\n\n/**\n * @template {import('../Feature').FeatureLike} FeatureType\n * @template {import(\"../source/Vector.js\").default<FeatureType>|import(\"../source/VectorTile.js\").default<FeatureType>} VectorSourceType<FeatureType>\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean|string|number} [declutter=false] Declutter images and text. Any truthy value will enable\n * decluttering. Within a layer, a feature rendered before another has higher priority. All layers with the\n * same `declutter` value will be decluttered together. The priority is determined by the drawing order of the\n * layers with the same `declutter` value. Higher in the layer stack means higher priority. To declutter distinct\n * layers or groups of layers separately, use different truthy values for `declutter`.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder',\n};\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import('../Feature').FeatureLike} FeatureType\n * @template {import(\"../source/Vector.js\").default<FeatureType>|import(\"../source/VectorTile.js\").default<FeatureType>} VectorSourceType<FeatureType>\n * @extends {Layer<VectorSourceType, RendererType>}\n * @template {import(\"../renderer/canvas/VectorLayer.js\").default|import(\"../renderer/canvas/VectorTileLayer.js\").default|import(\"../renderer/canvas/VectorImageLayer.js\").default|import(\"../renderer/webgl/VectorLayer.js\").default|import(\"../renderer/webgl/PointsLayer.js\").default} RendererType\n * @api\n */\nclass BaseVectorLayer extends Layer {\n  /**\n   * @param {Options<FeatureType, VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.declutter_ = options.declutter ? String(options.declutter) : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderBuffer_ =\n      options.renderBuffer !== undefined ? options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileAnimating_ =\n      options.updateWhileAnimating !== undefined\n        ? options.updateWhileAnimating\n        : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileInteracting_ =\n      options.updateWhileInteracting !== undefined\n        ? options.updateWhileInteracting\n        : false;\n  }\n\n  /**\n   * @return {string} Declutter group.\n   * @override\n   */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in [map.getFeaturesAtPixel()]{@link import(\"../Map.js\").default#getFeaturesAtPixel}.\n   * Text is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with an array of features.\n   * @api\n   * @override\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n   * @return {import(\"../render.js\").OrderFunction|null|undefined} Render order.\n   */\n  getRenderOrder() {\n    return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (\n      this.get(Property.RENDER_ORDER)\n    );\n  }\n\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null|undefined} Layer style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../layer/Layer.js\").State} layerState Layer state.\n   * @override\n   */\n  renderDeclutter(frameState, layerState) {\n    const declutterGroup = this.getDeclutter();\n    if (declutterGroup in frameState.declutter === false) {\n      frameState.declutter[declutterGroup] = new RBush(9);\n    }\n    this.getRenderer().renderDeclutter(frameState, layerState);\n  }\n\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If set to `null`, the layer has no style (a `null` style),\n   * so only features that have their own styles will be rendered in the layer. Call\n   * `setStyle()` without arguments to reset to the default style. See\n   * [the ol/style/Style module]{@link module:ol/style/Style~Style} for information on the default style.\n   *\n   * If your layer has a static style, you can use [flat style]{@link module:ol/style/flat~FlatStyle} object\n   * literals instead of using the `Style` and symbolizer constructors (`Fill`, `Stroke`, etc.):\n   * ```js\n   * vectorLayer.setStyle({\n   *   \"fill-color\": \"yellow\",\n   *   \"stroke-color\": \"black\",\n   *   \"stroke-width\": 4\n   * })\n   * ```\n   *\n   * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n   * @api\n   */\n  setStyle(style) {\n    this.style_ = style === undefined ? createDefaultStyle : style;\n    const styleLike = toStyleLike(style);\n    this.styleFunction_ =\n      style === null ? undefined : toStyleFunction(styleLike);\n    this.changed();\n  }\n\n  /**\n   * @param {boolean|string|number} declutter Declutter images and text.\n   * @api\n   */\n  setDeclutter(declutter) {\n    this.declutter_ = declutter ? String(declutter) : undefined;\n    this.changed();\n  }\n}\n\n/**\n * Coerce the allowed style types into a shorter list of types.  Flat styles, arrays of flat\n * styles, and arrays of rules are converted into style functions.\n *\n * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n * @return {import(\"../style/Style.js\").StyleLike|null} The style.\n */\nfunction toStyleLike(style) {\n  if (style === undefined) {\n    return createDefaultStyle;\n  }\n  if (!style) {\n    return null;\n  }\n  if (typeof style === 'function') {\n    return style;\n  }\n  if (style instanceof Style) {\n    return style;\n  }\n  if (!Array.isArray(style)) {\n    return flatStylesToStyleFunction([style]);\n  }\n  if (style.length === 0) {\n    return [];\n  }\n\n  const length = style.length;\n  const first = style[0];\n\n  if (first instanceof Style) {\n    /**\n     * @type {Array<Style>}\n     */\n    const styles = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      const candidate = style[i];\n      if (!(candidate instanceof Style)) {\n        throw new Error('Expected a list of style instances');\n      }\n      styles[i] = candidate;\n    }\n    return styles;\n  }\n\n  if ('style' in first) {\n    /**\n     * @type {Array<import(\"../style/flat.js\").Rule>}\n     */\n    const rules = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      const candidate = style[i];\n      if (!('style' in candidate)) {\n        throw new Error('Expected a list of rules with a style property');\n      }\n      rules[i] = candidate;\n    }\n    return rulesToStyleFunction(rules);\n  }\n\n  const flatStyles =\n    /** @type {Array<import(\"../style/flat.js\").FlatStyle>} */ (style);\n  return flatStylesToStyleFunction(flatStyles);\n}\n\nexport default BaseVectorLayer;\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../Map.js\").FrameState} [frameState] Frame state.\n   * @param {?(CanvasRenderingContext2D|OffscreenCanvasRenderingContext2D|WebGLRenderingContext)} [context] Context.\n   */\n  constructor(type, inversePixelTransform, frameState, context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../Map.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. For Canvas 2D layers,\n     * the context will be the 2D rendering context.  For WebGL layers, the context will be the WebGL\n     * context.\n     * @type {CanvasRenderingContext2D|OffscreenCanvasRenderingContext2D|WebGLRenderingContext|undefined}\n     * @api\n     */\n    this.context = context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport {wrapX} from '../coordinate.js';\nimport {getWidth} from '../extent.js';\nimport {TRUE} from '../functions.js';\nimport {inView} from '../layer/Layer.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {compose as composeTransform, makeInverse} from '../transform.js';\nimport {abstract} from '../util.js';\n\n/**\n * @template T\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} distanceSq Squared distance.\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\n */\n\n/**\n * @abstract\n */\nclass MapRenderer extends Disposable {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default}\n     */\n    this.map_ = map;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(\n      coordinateToPixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / viewState.resolution,\n      -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0],\n      -viewState.center[1],\n    );\n\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2,\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\n    }\n\n    const projection = viewState.projection;\n\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\n    const offsets = [[0, 0]];\n    if (projection.canWrapX() && checkWrapped) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    const matches = /** @type {Array<HitMatch<T>>} */ ([]);\n    const tmpCoord = [];\n    for (let i = 0; i < offsets.length; i++) {\n      for (let j = numLayers - 1; j >= 0; --j) {\n        const layerState = layerStates[j];\n        const layer = layerState.layer;\n        if (\n          layer.hasRenderer() &&\n          inView(layerState, viewState) &&\n          layerFilter.call(thisArg2, layer)\n        ) {\n          const layerRenderer = layer.getRenderer();\n          const source = layer.getSource();\n          if (layerRenderer && source) {\n            const coordinates = source.getWrapX()\n              ? translatedCoordinate\n              : coordinate;\n            const callback = forEachFeatureAtCoordinate.bind(\n              null,\n              layerState.managed,\n            );\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(\n              tmpCoord,\n              frameState,\n              hitTolerance,\n              callback,\n              matches,\n            );\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    if (matches.length === 0) {\n      return undefined;\n    }\n    const order = 1 / matches.length;\n    matches.forEach((m, i) => (m.distanceSq += i * order));\n    matches.sort((a, b) => a.distanceSq - b.distanceSq);\n    matches.some((m) => {\n      return (result = m.callback(m.feature, m.layer, m.geometry));\n    });\n    return result;\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    layerFilter,\n    thisArg,\n  ) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      checkWrapped,\n      TRUE,\n      this,\n      layerFilter,\n      thisArg,\n    );\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @return {import(\"../Map.js\").default} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  }\n}\n\n/**\n * @param {import(\"../Map.js\").default} map Map.\n * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\nexport default MapRenderer;\n","/**\n * @module ol/renderer/Composite\n */\nimport ObjectEventType from '../ObjectEventType.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {createMockDiv, isCanvas, replaceChildren} from '../dom.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport BaseVectorLayer from '../layer/BaseVector.js';\nimport {inView} from '../layer/Layer.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport {checkedFonts} from '../render/canvas.js';\nimport {fromString} from '../transform.js';\nimport MapRenderer from './Map.js';\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CompositeMapRenderer extends MapRenderer {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    /**\n     * @private\n     * @type {import(\"../events.js\").EventsKey}\n     */\n    this.fontChangeListenerKey_ = listen(\n      checkedFonts,\n      ObjectEventType.PROPERTYCHANGE,\n      map.redrawText,\n      map,\n    );\n\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this.element_ = WORKER_OFFSCREEN_CANVAS\n      ? createMockDiv()\n      : document.createElement('div');\n    const style = this.element_.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n    style.zIndex = '0';\n\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n\n    const container = map.getViewport();\n    if (container) {\n      // maps in a worker do not have a viewport.\n      container.insertBefore(this.element_, container.firstChild || null);\n    }\n\n    /**\n     * @private\n     * @type {Array<HTMLElement>}\n     */\n    this.children_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @override\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    if (map.hasListener(type)) {\n      const event = new RenderEvent(type, undefined, frameState);\n      map.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @override\n   */\n  disposeInternal() {\n    unlistenByKey(this.fontChangeListenerKey_);\n    this.element_.remove();\n    super.disposeInternal();\n  }\n\n  /**\n   * Render.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   * @override\n   */\n  renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray.sort(\n      (a, b) => a.zIndex - b.zIndex,\n    );\n    const declutter = layerStatesArray.some(\n      (layerState) =>\n        layerState.layer instanceof BaseVectorLayer &&\n        layerState.layer.getDeclutter(),\n    );\n    if (declutter) {\n      // Some layers need decluttering, turn on deferred rendering hint\n      frameState.declutter = {};\n    }\n    const viewState = frameState.viewState;\n\n    this.children_.length = 0;\n\n    const renderedLayerStates = [];\n    let previousElement = null;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      frameState.layerIndex = i;\n\n      const layer = layerState.layer;\n      const sourceState = layer.getSourceState();\n      if (\n        !inView(layerState, viewState) ||\n        (sourceState != 'ready' && sourceState != 'undefined')\n      ) {\n        layer.unrender();\n        continue;\n      }\n\n      const element = layer.render(frameState, previousElement);\n      if (!element) {\n        continue;\n      }\n      if (element !== previousElement) {\n        this.children_.push(element);\n        previousElement = element;\n      }\n\n      renderedLayerStates.push(layerState);\n    }\n\n    this.declutter(frameState, renderedLayerStates);\n\n    replaceChildren(this.element_, this.children_);\n\n    const map = this.getMap();\n    const mapCanvas = map.getTargetElement();\n    if (isCanvas(mapCanvas)) {\n      // Canvas composition when container is a canvas\n      const mapContext = mapCanvas.getContext('2d');\n      for (const container of this.children_) {\n        const canvas = container.firstElementChild || container;\n        if (!isCanvas(canvas)) {\n          continue;\n        }\n        if (canvas.width > 0) {\n          const opacity = container.style.opacity || canvas.style.opacity;\n          mapContext.globalAlpha = opacity === '' ? 1 : Number(opacity);\n          const transform = canvas.style.transform;\n          if (transform) {\n            // Get the transform parameters from the style's transform matrix\n            mapContext.setTransform(\n              .../** @type {[number, number, number, number, number, number]} */ (\n                fromString(transform)\n              ),\n            );\n          } else {\n            const w = parseFloat(canvas.style.width) / canvas.width;\n            const h = parseFloat(canvas.style.height) / canvas.height;\n            mapContext.setTransform(w, 0, 0, h, 0, 0);\n          }\n          const backgroundColor = container.style.backgroundColor;\n          if (backgroundColor) {\n            mapContext.fillStyle = backgroundColor;\n            mapContext.fillRect(0, 0, canvas.width, canvas.height);\n          }\n          mapContext.drawImage(canvas, 0, 0);\n        }\n      }\n      mapContext.globalAlpha = 1;\n      mapContext.setTransform(1, 0, 0, 1, 0, 0);\n    }\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.element_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleExpireIconCache(frameState);\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {Array<import('../layer/Layer.js').State>} layerStates Layers.\n   */\n  declutter(frameState, layerStates) {\n    if (!frameState.declutter) {\n      return;\n    }\n    for (let i = layerStates.length - 1; i >= 0; --i) {\n      const layerState = layerStates[i];\n      const layer = layerState.layer;\n      if (layer.getDeclutter()) {\n        layer.renderDeclutter(frameState, layerState);\n      }\n    }\n    layerStates.forEach((layerState) =>\n      layerState.layer.renderDeferred(frameState),\n    );\n  }\n}\n\nexport default CompositeMapRenderer;\n","/**\n * @module ol/Map\n */\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport BaseObject from './Object.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport TileQueue, {getTilePriority} from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {equals} from './array.js';\nimport {assert} from './asserts.js';\nimport {warn} from './console.js';\nimport {defaults as defaultControls} from './control/defaults.js';\nimport {isCanvas} from './dom.js';\nimport EventType from './events/EventType.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {\n  clone,\n  createOrUpdateEmpty,\n  equals as equalsExtent,\n  getForViewAndSize,\n  isEmpty,\n} from './extent.js';\nimport {TRUE} from './functions.js';\nimport {\n  DEVICE_PIXEL_RATIO,\n  PASSIVE_EVENT_LISTENERS,\n  WORKER_OFFSCREEN_CANVAS,\n} from './has.js';\nimport {defaults as defaultInteractions} from './interaction/defaults.js';\nimport LayerGroup, {GroupEvent} from './layer/Group.js';\nimport Layer from './layer/Layer.js';\nimport PointerEventType from './pointer/EventType.js';\nimport {fromUserCoordinate, toUserCoordinate} from './proj.js';\nimport RenderEventType from './render/EventType.js';\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport {hasArea} from './size.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n} from './transform.js';\nimport {getUid} from './util.js';\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate Animate.\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform CoordinateToPixelTransform.\n * @property {Object<string, import(\"rbush\").default<import('./render/canvas/Executor.js').DeclutterEntry>>|null} declutter\n * Declutter trees by declutter group.\n * When null, no decluttering is needed because no layers have decluttering enabled.\n * @property {null|import(\"./extent.js\").Extent} extent Extent (in view projection coordinates).\n * @property {import(\"./extent.js\").Extent} [nextExtent] Next extent during an animation series.\n * @property {number} index Index.\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray LayerStatesArray.\n * @property {number} layerIndex LayerIndex.\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform PixelToCoordinateTransform.\n * @property {Array<PostRenderFunction>} postRenderFunctions PostRenderFunctions.\n * @property {import(\"./size.js\").Size} size Size.\n * @property {TileQueue} tileQueue TileQueue.\n * @property {!Object<string, Object<string, boolean>>} usedTiles UsedTiles.\n * @property {Array<number>} viewHints ViewHints.\n * @property {!Object<string, Object<string, boolean>>} wantedTiles WantedTiles.\n * @property {string} mapId The id of the map.\n * @property {Object<string, boolean>} renderTargets Identifiers of previously rendered elements.\n */\n\n/**\n * @typedef {function(Map, FrameState): any} PostRenderFunction\n */\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer~Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls] Controls.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions] Interactions.\n * @property {HTMLElement|Document} keyboardEventTarget KeyboardEventTarget.\n * @property {Collection<import(\"./Overlay.js\").default>} overlays Overlays.\n * @property {Object<string, *>} values Values.\n */\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:layergroup'|'change:size'|'change:target'|'change:view'} MapObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<MapObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapBrowserEventType\").Types, import(\"./MapBrowserEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapEventType\").Types, import(\"./MapEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./render/EventType\").MapRenderEventTypes, import(\"./render/Event\").default, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|MapObjectEventTypes|\n *      import(\"./MapBrowserEventType\").Types|import(\"./MapEventType\").Types|\n *      import(\"./render/EventType\").MapRenderEventTypes, Return>} MapEventHandler\n */\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control/defaults.defaults} is used. In a worker, no controls are added by default.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction/defaults.defaults} is used. In a worker, no interactions are added by default.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string|HTMLCanvasElement|OffscreenCanvas} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * For use in workers or when exporting a map, use an `OffscreenCanvas` or `HTMLCanvasElement` as target.\n * For accessibility (focus and keyboard events for map navigation), the `target` element must have a\n *  properly configured `tabindex` attribute. If the `target` element is inside a Shadow DOM, the\n *  `tabindex` atribute must be set on the custom element's host element.\n * **Note:** CSS `transform` support for the target element is limited to `scale`.\n * @property {View|Promise<import(\"./View.js\").ViewOptions>} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n */\nfunction removeLayerMapProperty(layer) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(null);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    layer.getLayers().forEach(removeLayerMapProperty);\n  }\n}\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n * @param {Map} map Map.\n */\nfunction setLayerMapProperty(layer, map) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(map);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    const layers = layer.getLayers().getArray();\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n      setLayerMapProperty(layers[i], map);\n    }\n  }\n}\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map.js';\n *     import View from 'ol/View.js';\n *     import TileLayer from 'ol/layer/Tile.js';\n *     import OSM from 'ol/source/OSM.js';\n *\n *     const map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1,\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM(),\n *         }),\n *       ],\n *       target: 'map',\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile~TileLayer} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~LayerGroup}\n * is a subclass of {@link module:ol/layer/Base~BaseLayer}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nclass Map extends BaseObject {\n  /**\n   * @param {MapOptions} [options] Map options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {MapEventHandler<void>}\n     */\n    this.un;\n\n    const optionsInternal = createOptionsInternal(options);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderComplete_ = false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.loaded_ = true;\n\n    /** @private */\n    this.boundHandleBrowserEvent_ = this.handleBrowserEvent.bind(this);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ =\n      options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ =\n      options.pixelRatio !== undefined\n        ? options.pixelRatio\n        : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.postRenderTimeoutHandle_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = this.animationDelay_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    if (!WORKER_OFFSCREEN_CANVAS) {\n      this.viewport_ = document.createElement('div');\n      this.viewport_.className =\n        'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n      this.viewport_.style.position = 'relative';\n      this.viewport_.style.overflow = 'hidden';\n      this.viewport_.style.width = '100%';\n      this.viewport_.style.height = '100%';\n\n      /**\n       * @private\n       * @type {!HTMLElement}\n       */\n      this.overlayContainer_ = document.createElement('div');\n      this.overlayContainer_.style.position = 'absolute';\n      this.overlayContainer_.style.zIndex = '0';\n      this.overlayContainer_.style.width = '100%';\n      this.overlayContainer_.style.height = '100%';\n      this.overlayContainer_.style.pointerEvents = 'none';\n      this.overlayContainer_.className = 'ol-overlaycontainer';\n      this.viewport_.appendChild(this.overlayContainer_);\n\n      /**\n       * @private\n       * @type {!HTMLElement}\n       */\n      this.overlayContainerStopEvent_ = document.createElement('div');\n      this.overlayContainerStopEvent_.style.position = 'absolute';\n      this.overlayContainerStopEvent_.style.zIndex = '0';\n      this.overlayContainerStopEvent_.style.width = '100%';\n      this.overlayContainerStopEvent_.style.height = '100%';\n      this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n      this.overlayContainerStopEvent_.className =\n        'ol-overlaycontainer-stopevent';\n      this.viewport_.appendChild(this.overlayContainerStopEvent_);\n    }\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.moveTolerance_ = options.moveTolerance;\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.targetChangeHandlerKeys_ = null;\n\n    /**\n     * @private\n     * @type {HTMLElement|null}\n     */\n    this.targetElement_ = null;\n\n    if (!WORKER_OFFSCREEN_CANVAS) {\n      /**\n       * @private\n       * @type {ResizeObserver}\n       */\n      this.resizeObserver_ = new ResizeObserver(() => this.updateSize());\n    }\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls =\n      optionsInternal.controls ||\n      (WORKER_OFFSCREEN_CANVAS ? new Collection() : defaultControls());\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions =\n      optionsInternal.interactions ||\n      (WORKER_OFFSCREEN_CANVAS\n        ? new Collection()\n        : defaultInteractions({\n            onFocusOnly: true,\n          }));\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default|null}\n     * @private\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this),\n    );\n\n    this.addChangeListener(\n      MapProperty.LAYERGROUP,\n      this.handleLayerGroupChanged_,\n    );\n    this.addChangeListener(MapProperty.VIEW, this.handleViewChanged_);\n    this.addChangeListener(MapProperty.SIZE, this.handleSizeChanged_);\n    this.addChangeListener(MapProperty.TARGET, this.handleTargetChanged_);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    const map = this;\n    if (options.view && !(options.view instanceof View)) {\n      options.view.then(function (viewOptions) {\n        map.setView(new View(viewOptions));\n      });\n    }\n\n    this.controls.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent\n       */\n      (event) => {\n        event.element.setMap(this);\n      },\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      },\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(this);\n      },\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      },\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        this.addOverlayInternal_(event.element);\n      },\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        const id = event.element.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      },\n    );\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       */\n      (control) => {\n        control.setMap(this);\n      },\n    );\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       */\n      (interaction) => {\n        interaction.setMap(this);\n      },\n    );\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n  }\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  addControl(control) {\n    this.getControls().push(control);\n  }\n\n  /**\n   * Add the given interaction to the map. If you want to add an interaction\n   * at another point of the collection use `getInteractions()` and the methods\n   * available on {@link module:ol/Collection~Collection}. This can be used to\n   * stop the event propagation from the handleEvent function. The interactions\n   * get to handle the events in the reverse order of this collection.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  addInteraction(interaction) {\n    this.getInteractions().push(interaction);\n  }\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  addLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer add event.\n   * @private\n   */\n  handleLayerAdd_(event) {\n    setLayerMapProperty(event.layer, this);\n  }\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  addOverlay(overlay) {\n    this.getOverlays().push(overlay);\n  }\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  addOverlayInternal_(overlay) {\n    const id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  }\n\n  /**\n   *\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.controls.clear();\n    this.interactions.clear();\n    this.overlays_.clear();\n    this.resizeObserver_?.disconnect();\n    this.setTarget(null);\n    super.disposeInternal();\n  }\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `options`.\n   * For polygons without a fill, only the stroke will be used for hit detection.\n   * Polygons must have a fill style applied to ensure that pixels inside a polygon are detected.\n   * The fill can be transparent.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature~Feature feature} or\n   *     {@link module:ol/render/Feature~RenderFeature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template T\n   * @api\n   */\n  forEachFeatureAtPixel(pixel, callback, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      callback,\n      null,\n      layerFilter,\n      null,\n    );\n  }\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * For polygons without a fill, only the stroke will be used for hit detection.\n   * Polygons must have a fill style applied to ensure that pixels inside a polygon are detected.\n   * The fill can be transparent.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * an empty array if none were found.\n   * @api\n   */\n  getFeaturesAtPixel(pixel, options) {\n    const features = [];\n    this.forEachFeatureAtPixel(\n      pixel,\n      function (feature) {\n        features.push(feature);\n      },\n      options,\n    );\n    return features;\n  }\n\n  /**\n   * Get all layers from all layer groups.\n   * @return {Array<import(\"./layer/Layer.js\").default>} Layers.\n   * @api\n   */\n  getAllLayers() {\n    const layers = [];\n    function addLayersFrom(layerGroup) {\n      layerGroup.forEach(function (layer) {\n        if (layer instanceof LayerGroup) {\n          addLayersFrom(layer.getLayers());\n        } else {\n          layers.push(layer);\n        }\n      });\n    }\n    addLayersFrom(this.getLayers());\n    return layers;\n  }\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through the `layerFilter` option.\n   * For polygons without a fill, only the stroke will be used for hit detection.\n   * Polygons must have a fill style applied to ensure that pixels inside a polygon are detected.\n   * The fill can be transparent.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @api\n   */\n  hasFeatureAtPixel(pixel, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return false;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      layerFilter,\n      null,\n    );\n  }\n\n  /**\n   * Returns the coordinate in user projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getEventCoordinate(event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   */\n  getEventCoordinateInternal(event) {\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {UIEvent|{clientX: number, clientY: number}} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  getEventPixel(event) {\n    const viewport = this.viewport_;\n    const viewportPosition = viewport.getBoundingClientRect();\n    const viewportSize = this.getSize();\n    const scaleX = viewportPosition.width / viewportSize[0];\n    const scaleY = viewportPosition.height / viewportSize[1];\n    const eventPosition =\n      //FIXME Are we really calling this with a TouchEvent anywhere?\n      'changedTouches' in event\n        ? /** @type {TouchEvent} */ (event).changedTouches[0]\n        : /** @type {MouseEvent} */ (event);\n\n    return [\n      (eventPosition.clientX - viewportPosition.left) / scaleX,\n      (eventPosition.clientY - viewportPosition.top) / scaleY,\n    ];\n  }\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  getTarget() {\n    return /** @type {HTMLElement|string|undefined} */ (\n      this.get(MapProperty.TARGET)\n    );\n  }\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  getTargetElement() {\n    return this.targetElement_;\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * user projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  getCoordinateFromPixel(pixel) {\n    return toUserCoordinate(\n      this.getCoordinateFromPixelInternal(pixel),\n      this.getView().getProjection(),\n    );\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   */\n  getCoordinateFromPixelInternal(pixel) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n  }\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  getControls() {\n    return this.controls;\n  }\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  getOverlays() {\n    return this.overlays_;\n  }\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default|null} Overlay.\n   * @api\n   */\n  getOverlayById(id) {\n    const overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  }\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  getInteractions() {\n    return this.interactions;\n  }\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  getLayerGroup() {\n    return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n  }\n\n  /**\n   * Clear any existing layers and add layers to the map.\n   * @param {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>} layers The layers to be added to the map.\n   * @api\n   */\n  setLayers(layers) {\n    const group = this.getLayerGroup();\n    if (layers instanceof Collection) {\n      group.setLayers(layers);\n      return;\n    }\n\n    const collection = group.getLayers();\n    collection.clear();\n    collection.extend(layers);\n  }\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  getLayers() {\n    const layers = this.getLayerGroup().getLayers();\n    return layers;\n  }\n\n  /**\n   * @return {boolean} Layers have sources that are still loading.\n   */\n  getLoadingOrNotReady() {\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const state = layerStatesArray[i];\n      if (!state.visible) {\n        continue;\n      }\n      const renderer = state.layer.getRenderer();\n      if (renderer && !renderer.ready) {\n        return true;\n      }\n      const source = state.layer.getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  getPixelFromCoordinate(coordinate) {\n    const viewCoordinate = fromUserCoordinate(\n      coordinate,\n      this.getView().getProjection(),\n    );\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   */\n  getPixelFromCoordinateInternal(coordinate) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(\n      frameState.coordinateToPixelTransform,\n      coordinate.slice(0, 2),\n    );\n  }\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default|null} Renderer\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  getSize() {\n    return /** @type {import(\"./size.js\").Size|undefined} */ (\n      this.get(MapProperty.SIZE)\n    );\n  }\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  getView() {\n    return /** @type {View} */ (this.get(MapProperty.VIEW));\n  }\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  getViewport() {\n    return this.viewport_;\n  }\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  getOverlayContainer() {\n    return this.overlayContainer_;\n  }\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  getOverlayContainerStopEvent() {\n    return this.overlayContainerStopEvent_;\n  }\n\n  /**\n   * @return {!Document} The document where the map is displayed.\n   */\n  getOwnerDocument() {\n    const targetElement = this.getTargetElement();\n    return targetElement ? targetElement.ownerDocument : document;\n  }\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\n    return getTilePriority(\n      this.frameState_,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution,\n    );\n  }\n\n  /**\n   * @param {PointerEvent|KeyboardEvent|WheelEvent} browserEvent Browser event.\n   * @param {string} [type] Type.\n   */\n  handleBrowserEvent(browserEvent, type) {\n    type = type || browserEvent.type;\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  }\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  handleMapBrowserEvent(mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    const originalEvent = mapBrowserEvent.originalEvent;\n    const eventType = originalEvent.type;\n    if (\n      eventType === PointerEventType.POINTERDOWN ||\n      eventType === EventType.WHEEL ||\n      eventType === EventType.KEYDOWN\n    ) {\n      const doc = this.getOwnerDocument();\n      const rootNode = this.viewport_.getRootNode\n        ? this.viewport_.getRootNode()\n        : doc;\n      const target = /** @type {Node} */ (originalEvent.target);\n\n      const currentDoc =\n        rootNode instanceof ShadowRoot\n          ? rootNode.host === target\n            ? rootNode.host.ownerDocument\n            : rootNode\n          : rootNode === doc\n            ? doc.documentElement\n            : rootNode;\n      if (\n        // Abort if the target is a child of the container for elements whose events are not meant\n        // to be handled by map interactions.\n        this.overlayContainerStopEvent_.contains(target) ||\n        // Abort if the event target is a child of the container that is no longer in the page.\n        // It's possible for the target to no longer be in the page if it has been removed in an\n        // event listener, this might happen in a Control that recreates it's content based on\n        // user interaction either manually or via a render in something like https://reactjs.org/\n        !currentDoc.contains(target)\n      ) {\n        return;\n      }\n    }\n    mapBrowserEvent.frameState = this.frameState_;\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      const interactionsArray = this.getInteractions().getArray().slice();\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\n        const interaction = interactionsArray[i];\n        if (\n          interaction.getMap() !== this ||\n          !interaction.getActive() ||\n          !this.getTargetElement()\n        ) {\n          continue;\n        }\n        const cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont || mapBrowserEvent.propagationStopped) {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePostRender() {\n    const frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    const tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      let maxTotalLoading = this.maxTilesLoading_;\n      let maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        const hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n          const lowOnFrameBudget = Date.now() - frameState.time > 8;\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    if (frameState && this.renderer_ && !frameState.animate) {\n      if (this.renderComplete_) {\n        if (this.hasListener(RenderEventType.RENDERCOMPLETE)) {\n          this.renderer_.dispatchRenderEvent(\n            RenderEventType.RENDERCOMPLETE,\n            frameState,\n          );\n        }\n        if (this.loaded_ === false) {\n          this.loaded_ = true;\n          this.dispatchEvent(\n            new MapEvent(MapEventType.LOADEND, this, frameState),\n          );\n        }\n      } else if (this.loaded_ === true) {\n        this.loaded_ = false;\n        this.dispatchEvent(\n          new MapEvent(MapEventType.LOADSTART, this, frameState),\n        );\n      }\n    }\n\n    const postRenderFunctions = this.postRenderFunctions_;\n    if (frameState) {\n      for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n        postRenderFunctions[i](this, frameState);\n      }\n    }\n    postRenderFunctions.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  handleSizeChanged_() {\n    if (this.getView() && !this.getView().getAnimating()) {\n      this.getView().resolveConstraints(0);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleTargetChanged_() {\n    if (this.mapBrowserEventHandler_) {\n      for (let i = 0, ii = this.targetChangeHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.targetChangeHandlerKeys_[i]);\n      }\n      this.targetChangeHandlerKeys_ = null;\n      this.viewport_.removeEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n      );\n      this.viewport_.removeEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n      );\n      this.mapBrowserEventHandler_.dispose();\n      this.mapBrowserEventHandler_ = null;\n      this.viewport_.remove();\n    }\n\n    if (this.targetElement_ && !isCanvas(this.targetElement_)) {\n      this.resizeObserver_?.unobserve(this.targetElement_);\n      const rootNode = this.targetElement_.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.unobserve(rootNode.host);\n      }\n      this.setSize(undefined);\n    }\n\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    const target = this.getTarget();\n    const targetElement =\n      typeof target === 'string' ? document.getElementById(target) : target;\n    this.targetElement_ = targetElement;\n    if (!targetElement) {\n      if (this.renderer_) {\n        clearTimeout(this.postRenderTimeoutHandle_);\n        this.postRenderTimeoutHandle_ = undefined;\n        this.postRenderFunctions_.length = 0;\n        this.renderer_.dispose();\n        this.renderer_ = null;\n      }\n      if (this.animationDelayKey_) {\n        cancelAnimationFrame(this.animationDelayKey_);\n        this.animationDelayKey_ = undefined;\n      }\n    } else {\n      if (!isCanvas(targetElement)) {\n        targetElement.appendChild(this.viewport_);\n      }\n      if (!this.renderer_) {\n        this.renderer_ = new CompositeMapRenderer(this);\n      }\n\n      if (!isCanvas(targetElement)) {\n        this.mapBrowserEventHandler_ = new MapBrowserEventHandler(\n          this,\n          this.moveTolerance_,\n        );\n        for (const key in MapBrowserEventType) {\n          this.mapBrowserEventHandler_.addEventListener(\n            MapBrowserEventType[key],\n            this.handleMapBrowserEvent.bind(this),\n          );\n        }\n        this.viewport_.addEventListener(\n          EventType.CONTEXTMENU,\n          this.boundHandleBrowserEvent_,\n          false,\n        );\n        this.viewport_.addEventListener(\n          EventType.WHEEL,\n          this.boundHandleBrowserEvent_,\n          PASSIVE_EVENT_LISTENERS ? {passive: false} : false,\n        );\n\n        let keyboardEventTarget;\n        if (!this.keyboardEventTarget_) {\n          // check if map target is in shadowDOM, if yes use host element as target\n          const targetRoot = targetElement.getRootNode();\n          const targetCandidate =\n            targetRoot instanceof ShadowRoot ? targetRoot.host : targetElement;\n          keyboardEventTarget = targetCandidate;\n        } else {\n          keyboardEventTarget = this.keyboardEventTarget_;\n        }\n\n        this.targetChangeHandlerKeys_ = [\n          listen(\n            keyboardEventTarget,\n            EventType.KEYDOWN,\n            this.handleBrowserEvent,\n            this,\n          ),\n          listen(\n            keyboardEventTarget,\n            EventType.KEYPRESS,\n            this.handleBrowserEvent,\n            this,\n          ),\n        ];\n        if (targetElement instanceof HTMLElement) {\n          const rootNode = targetElement.getRootNode();\n          if (rootNode instanceof ShadowRoot) {\n            this.resizeObserver_.observe(rootNode.host);\n          }\n          this.resizeObserver_?.observe(targetElement);\n        }\n      }\n\n      this.updateSize();\n    }\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  }\n\n  /**\n   * @private\n   */\n  handleTileChange_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewPropertyChanged_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewChanged_() {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    const view = this.getView();\n    if (view) {\n      this.updateViewportSize_(this.getSize());\n\n      this.viewPropertyListenerKey_ = listen(\n        view,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_,\n        this,\n      );\n      this.viewChangeListenerKey_ = listen(\n        view,\n        EventType.CHANGE,\n        this.handleViewPropertyChanged_,\n        this,\n      );\n\n      view.resolveConstraints(0);\n    }\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleLayerGroupChanged_() {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    const layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.handleLayerAdd_(new GroupEvent('addlayer', layerGroup));\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n        listen(layerGroup, EventType.CHANGE, this.render, this),\n        listen(layerGroup, 'addlayer', this.handleLayerAdd_, this),\n        listen(layerGroup, 'removelayer', this.handleLayerRemove_, this),\n      ];\n    }\n    this.render();\n  }\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  isRendered() {\n    return !!this.frameState_;\n  }\n\n  /**\n   * @private\n   */\n  animationDelay_() {\n    this.animationDelayKey_ = undefined;\n    this.renderFrame_(Date.now());\n  }\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  renderSync() {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  }\n\n  /**\n   * Redraws all text after new fonts have loaded\n   */\n  redrawText() {\n    if (!this.frameState_) {\n      return;\n    }\n    const layerStates = this.frameState_.layerStatesArray;\n    for (let i = 0, ii = layerStates.length; i < ii; ++i) {\n      const layer = layerStates[i].layer;\n      if (layer.hasRenderer()) {\n        layer.getRenderer().handleFontsChanged();\n      }\n    }\n  }\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  render() {\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  }\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  removeControl(control) {\n    return this.getControls().remove(control);\n  }\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  removeInteraction(interaction) {\n    return this.getInteractions().remove(interaction);\n  }\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  removeLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer remove event.\n   * @private\n   */\n  handleLayerRemove_(event) {\n    removeLayerMapProperty(event.layer);\n  }\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  removeOverlay(overlay) {\n    return this.getOverlays().remove(overlay);\n  }\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  renderFrame_(time) {\n    const size = this.getSize();\n    const view = this.getView();\n    const previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    let frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      const viewHints = view.getHints(\n        this.frameState_ ? this.frameState_.viewHints : undefined,\n      );\n      const viewState = view.getState();\n      frameState = {\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        declutter: null,\n        extent: getForViewAndSize(\n          viewState.center,\n          viewState.resolution,\n          viewState.rotation,\n          size,\n        ),\n        index: this.frameIndex_++,\n        layerIndex: 0,\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {},\n        mapId: getUid(this),\n        renderTargets: {},\n      };\n      if (viewState.nextCenter && viewState.nextResolution) {\n        const rotation = isNaN(viewState.nextRotation)\n          ? viewState.rotation\n          : viewState.nextRotation;\n\n        frameState.nextExtent = getForViewAndSize(\n          viewState.nextCenter,\n          viewState.nextResolution,\n          rotation,\n          size,\n        );\n      }\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(\n        this.postRenderFunctions_,\n        frameState.postRenderFunctions,\n      );\n\n      if (previousFrameState) {\n        const moveStart =\n          !this.previousExtent_ ||\n          (!isEmpty(this.previousExtent_) &&\n            !equalsExtent(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState),\n          );\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      const idle =\n        this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equalsExtent(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVEEND, this, frameState),\n        );\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    this.renderComplete_ =\n      (this.hasListener(MapEventType.LOADSTART) ||\n        this.hasListener(MapEventType.LOADEND) ||\n        this.hasListener(RenderEventType.RENDERCOMPLETE)) &&\n      !this.tileQueue_.getTilesLoading() &&\n      !this.tileQueue_.getCount() &&\n      !this.getLoadingOrNotReady();\n\n    if (!this.postRenderTimeoutHandle_) {\n      this.postRenderTimeoutHandle_ = setTimeout(() => {\n        this.postRenderTimeoutHandle_ = undefined;\n        this.handlePostRender();\n      }, 0);\n    }\n  }\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  setLayerGroup(layerGroup) {\n    const oldLayerGroup = this.getLayerGroup();\n    if (oldLayerGroup) {\n      this.handleLayerRemove_(new GroupEvent('removelayer', oldLayerGroup));\n    }\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  }\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  setSize(size) {\n    this.set(MapProperty.SIZE, size);\n  }\n\n  /**\n   * Set the target element to render this map into.\n   * For accessibility (focus and keyboard events for map navigation), the `target` element must have a\n   *  properly configured `tabindex` attribute. If the `target` element is inside a Shadow DOM, the\n   *  `tabindex` atribute must be set on the custom element's host element.\n   * @param {HTMLElement|string} [target] The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  setTarget(target) {\n    this.set(MapProperty.TARGET, target);\n  }\n\n  /**\n   * Set the view for this map.\n   * @param {View|Promise<import(\"./View.js\").ViewOptions>|null} view The view that controls this map.\n   * It is also possible to pass a promise that resolves to options for constructing a view.  This\n   * alternative allows view properties to be resolved by sources or other components that load\n   * view-related metadata.\n   * @observable\n   * @api\n   */\n  setView(view) {\n    if (!view || view instanceof View) {\n      this.set(MapProperty.VIEW, view);\n      return;\n    }\n    this.set(MapProperty.VIEW, new View());\n\n    const map = this;\n    view.then(function (viewOptions) {\n      map.setView(new View(viewOptions));\n    });\n  }\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  updateSize() {\n    const targetElement = this.getTargetElement();\n\n    let size = undefined;\n    if (targetElement) {\n      let width, height;\n      if (isCanvas(targetElement)) {\n        width = targetElement.width;\n        height = targetElement.height;\n      } else {\n        const computedStyle = getComputedStyle(targetElement);\n        width =\n          targetElement.offsetWidth -\n          parseFloat(computedStyle['borderLeftWidth']) -\n          parseFloat(computedStyle['paddingLeft']) -\n          parseFloat(computedStyle['paddingRight']) -\n          parseFloat(computedStyle['borderRightWidth']);\n        height =\n          targetElement.offsetHeight -\n          parseFloat(computedStyle['borderTopWidth']) -\n          parseFloat(computedStyle['paddingTop']) -\n          parseFloat(computedStyle['paddingBottom']) -\n          parseFloat(computedStyle['borderBottomWidth']);\n      }\n      if (!isNaN(width) && !isNaN(height)) {\n        size = [Math.max(0, width), Math.max(0, height)];\n        if (\n          !hasArea(size) &&\n          !!(\n            targetElement.offsetWidth ||\n            targetElement.offsetHeight ||\n            targetElement.getClientRects().length\n          )\n        ) {\n          warn(\n            \"No map visible because the map container's width or height are 0.\",\n          );\n        }\n      }\n    }\n\n    const oldSize = this.getSize();\n    if (size && (!oldSize || !equals(size, oldSize))) {\n      this.setSize(size);\n      this.updateViewportSize_(size);\n    }\n  }\n\n  /**\n   * Recomputes the viewport size and save it on the view object (if any)\n   * @param {import(\"./size.js\").Size|undefined} size The size.\n   * @private\n   */\n  updateViewportSize_(size) {\n    const view = this.getView();\n    if (view) {\n      view.setViewportSize(size);\n    }\n  }\n}\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n  /**\n   * @type {HTMLElement|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget =\n      typeof options.keyboardEventTarget === 'string'\n        ? document.getElementById(options.keyboardEventTarget)\n        : options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  const values = {};\n\n  const layerGroup =\n    options.layers &&\n    typeof (/** @type {?} */ (options.layers).getLayers) === 'function'\n      ? /** @type {LayerGroup} */ (options.layers)\n      : new LayerGroup({\n          layers:\n            /** @type {Collection<import(\"./layer/Base.js\").default>|Array<import(\"./layer/Base.js\").default>} */ (\n              options.layers\n            ),\n        });\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] =\n    options.view instanceof View ? options.view : new View();\n\n  /** @type {Collection<import(\"./control/Control.js\").default>} */\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.controls).getArray) === 'function',\n        'Expected `controls` to be an array or an `ol/Collection.js`',\n      );\n      controls = options.controls;\n    }\n  }\n\n  /** @type {Collection<import(\"./interaction/Interaction\").default>} */\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.interactions).getArray) ===\n          'function',\n        'Expected `interactions` to be an array or an `ol/Collection.js`',\n      );\n      interactions = options.interactions;\n    }\n  }\n\n  /** @type {Collection<import(\"./Overlay.js\").default>} */\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.overlays).getArray) === 'function',\n        'Expected `overlays` to be an array or an `ol/Collection.js`',\n      );\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values,\n  };\n}\nexport default Map;\n","/**\n * @module ol/control/defaults\n */\nimport Collection from '../Collection.js';\nimport Attribution from './Attribution.js';\nimport Rotate from './Rotate.js';\nimport Zoom from './Zoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n */\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * {@link module:ol/control/Zoom~Zoom}\n * {@link module:ol/control/Rotate~Rotate}\n * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions} [options] Options for the default controls.\n * @return {Collection<import(\"./Control.js\").default>} A collection of controls\n * to be used with the {@link module:ol/Map~Map} constructor's `controls` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Control.js\").default>} */\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl =\n    options.attribution !== undefined ? options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/interaction/defaults\n */\nimport Collection from '../Collection.js';\nimport Kinetic from '../Kinetic.js';\nimport DoubleClickZoom from './DoubleClickZoom.js';\nimport DragPan from './DragPan.js';\nimport DragRotate from './DragRotate.js';\nimport DragZoom from './DragZoom.js';\nimport KeyboardPan from './KeyboardPan.js';\nimport KeyboardZoom from './KeyboardZoom.js';\nimport MouseWheelZoom from './MouseWheelZoom.js';\nimport PinchRotate from './PinchRotate.js';\nimport PinchZoom from './PinchZoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction~Interaction} instances and insert\n * them into a {@link module:ol/Collection~Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * {@link module:ol/interaction/DragRotate~DragRotate}\n * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * {@link module:ol/interaction/DragPan~DragPan}\n * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions} [options] Defaults options.\n * @return {Collection<import(\"./Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Interaction.js\").default>} */\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate =\n    options.altShiftDragRotate !== undefined\n      ? options.altShiftDragRotate\n      : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom =\n    options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(\n      new DoubleClickZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(\n      new DragPan({\n        onFocusOnly: options.onFocusOnly,\n        kinetic: kinetic,\n      }),\n    );\n  }\n\n  const pinchRotate =\n    options.pinchRotate !== undefined ? options.pinchRotate : true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(\n      new PinchZoom({\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(\n      new KeyboardZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const mouseWheelZoom =\n    options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(\n      new MouseWheelZoom({\n        onFocusOnly: options.onFocusOnly,\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const shiftDragZoom =\n    options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(\n      new DragZoom({\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  return interactions;\n}\n","/**\n * @module ol/Tile\n */\nimport TileState from './TileState.js';\nimport {easeIn} from './easing.js';\nimport EventType from './events/EventType.js';\nimport EventTarget from './events/Target.js';\nimport {abstract} from './util.js';\n\n/**\n * A function that takes a {@link module:ol/Tile~Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState.js';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   const xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     const data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~TileSource} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes a {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection~Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @api\n */\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nclass Tile extends EventTarget {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {import(\"./TileState.js\").default}\n     */\n    this.state = state;\n\n    /**\n     * A key assigned to the tile. This is used in conjunction with a source key\n     * to determine if a cached version of this tile may be used by the renderer.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @private\n     * @type {number}\n     */\n    this.transition_ =\n      options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n\n    /**\n     * @type {boolean}\n     */\n    this.interpolate = !!options.interpolate;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Called by the tile cache when the tile is removed from the cache due to expiry\n   */\n  release() {\n    // to remove the `change` listener on this tile in `ol/TileQueue#handleTileChange`\n    this.setState(TileState.EMPTY);\n  }\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {import(\"./TileState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @api\n   */\n  setState(state) {\n    if (this.state === TileState.EMPTY) {\n      // no more state changes\n      return;\n    }\n    if (this.state !== TileState.ERROR && this.state > state) {\n      throw new Error('Tile load sequence violation');\n    }\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + 1000 / 60; // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n\n  /**\n   * @override\n   */\n  disposeInternal() {\n    this.release();\n    super.disposeInternal();\n  }\n}\n\nexport default Tile;\n","/**\n * @module ol/DataTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\n\n/**\n * @typedef {HTMLImageElement|HTMLCanvasElement|OffscreenCanvas|HTMLVideoElement|ImageBitmap} ImageLike\n */\n\n/**\n * @typedef {Uint8Array|Uint8ClampedArray|Float32Array|DataView} ArrayLike\n */\n\n/**\n * Data that can be used with a DataTile.\n * @typedef {ArrayLike|ImageLike} Data\n */\n\n/**\n * @param {Data} data Tile data.\n * @return {ImageLike|null} The image-like data.\n */\nexport function asImageLike(data) {\n  return data instanceof Image ||\n    data instanceof HTMLCanvasElement ||\n    data instanceof HTMLVideoElement ||\n    data instanceof ImageBitmap\n    ? data\n    : null;\n}\n\n/**\n * @param {Data} data Tile data.\n * @return {ArrayLike|null} The array-like data.\n */\nexport function asArrayLike(data) {\n  return data instanceof Uint8Array ||\n    data instanceof Uint8ClampedArray ||\n    data instanceof Float32Array ||\n    data instanceof DataView\n    ? data\n    : null;\n}\n\n/**\n * This is set as the cancellation reason when a tile is disposed.\n */\nexport const disposedError = new Error('disposed');\n\n/**\n * @type {CanvasRenderingContext2D|OffscreenCanvasRenderingContext2D|null}\n */\nlet sharedContext = null;\n\n/**\n * @param {ImageLike} image The image.\n * @return {Uint8ClampedArray} The data.\n */\nexport function toArray(image) {\n  if (!sharedContext) {\n    sharedContext = createCanvasContext2D(\n      image.width,\n      image.height,\n      undefined,\n      {willReadFrequently: true},\n    );\n  }\n  const canvas = sharedContext.canvas;\n  const width = image.width;\n  if (canvas.width !== width) {\n    canvas.width = width;\n  }\n  const height = image.height;\n  if (canvas.height !== height) {\n    canvas.height = height;\n  }\n  sharedContext.clearRect(0, 0, width, height);\n  sharedContext.drawImage(image, 0, 0);\n  return sharedContext.getImageData(0, 0, width, height).data;\n}\n\n/**\n * @type {import('./size.js').Size}\n */\nconst defaultSize = [256, 256];\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @property {function(): Promise<Data>} loader Data loader.  For loaders that generate images,\n * the promise should not resolve until the image is loaded.\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @property {import('./size.js').Size} [size=[256, 256]] Tile size.\n * @property {AbortController} [controller] An abort controller.\n * @api\n */\n\nclass DataTile extends Tile {\n  /**\n   * @param {Options} options Tile options.\n   */\n  constructor(options) {\n    const state = TileState.IDLE;\n\n    super(options.tileCoord, state, {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    });\n\n    /**\n     * @type {function(): Promise<Data>}\n     * @private\n     */\n    this.loader_ = options.loader;\n\n    /**\n     * @type {Data}\n     * @private\n     */\n    this.data_ = null;\n\n    /**\n     * @type {Error}\n     * @private\n     */\n    this.error_ = null;\n\n    /**\n     * @type {import('./size.js').Size|null}\n     * @private\n     */\n    this.size_ = options.size || null;\n\n    /**\n     * @type {AbortController|null}\n     * @private\n     */\n    this.controller_ = options.controller || null;\n  }\n\n  /**\n   * Get the tile size.\n   * @return {import('./size.js').Size} Tile size.\n   */\n  getSize() {\n    if (this.size_) {\n      return this.size_;\n    }\n    const imageData = asImageLike(this.data_);\n    if (imageData) {\n      return [imageData.width, imageData.height];\n    }\n    return defaultSize;\n  }\n\n  /**\n   * Get the data for the tile.\n   * @return {Data} Tile data.\n   * @api\n   */\n  getData() {\n    return this.data_;\n  }\n\n  /**\n   * Get any loading error.\n   * @return {Error} Loading error.\n   * @api\n   */\n  getError() {\n    return this.error_;\n  }\n\n  /**\n   * Load the tile data.\n   * @api\n   * @override\n   */\n  load() {\n    if (this.state !== TileState.IDLE && this.state !== TileState.ERROR) {\n      return;\n    }\n    this.state = TileState.LOADING;\n    this.changed();\n\n    const self = this;\n    this.loader_()\n      .then(function (data) {\n        self.data_ = data;\n        self.state = TileState.LOADED;\n        self.changed();\n      })\n      .catch(function (error) {\n        self.error_ = error;\n        self.state = TileState.ERROR;\n        self.changed();\n      });\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    if (this.controller_) {\n      this.controller_.abort(disposedError);\n      this.controller_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default DataTile;\n","/**\n * @module ol/ImageTile\n */\nimport {listenImage} from './Image.js';\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\nclass ImageTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, src, crossOrigin, tileLoadFunction, options) {\n    super(tileCoord, state, options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    this.key = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement|OffscreenCanvas}\n     */\n    this.image_;\n\n    if (WORKER_OFFSCREEN_CANVAS) {\n      this.image_ = new OffscreenCanvas(1, 1);\n    } else {\n      this.image_ = new Image();\n      if (crossOrigin !== null) {\n        this.image_.crossOrigin = crossOrigin;\n      }\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n  }\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, OffscreenCanvas, Image, or Video).\n   * @return {HTMLCanvasElement|OffscreenCanvas|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Sets an HTML image element for this tile (may be a Canvas or preloaded Image).\n   * @param {HTMLCanvasElement|OffscreenCanvas|HTMLImageElement} element Element.\n   */\n  setImage(element) {\n    this.image_ = element;\n    this.state = TileState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Get the cross origin of the ImageTile.\n   * @return {string} Cross origin.\n   */\n  getCrossOrigin() {\n    return this.crossOrigin_;\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    if (WORKER_OFFSCREEN_CANVAS) {\n      // OffscreenCanvas does not have naturalWidth and naturalHeight\n      this.state = TileState.LOADED;\n    } else {\n      const image = /** @type {HTMLImageElement} */ (this.image_);\n      if (image.naturalWidth && image.naturalHeight) {\n        this.state = TileState.LOADED;\n      } else {\n        this.state = TileState.EMPTY;\n      }\n    }\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   *\n   * To retry loading tiles on failed requests, use a custom `tileLoadFunction`\n   * that checks for error status codes and reloads only when the status code is\n   * 408, 429, 500, 502, 503 and 504, and only when not too many retries have been\n   * made already:\n   *\n   * ```js\n   * const retryCodes = [408, 429, 500, 502, 503, 504];\n   * const retries = {};\n   * source.setTileLoadFunction((tile, src) => {\n   *   const image = tile.getImage();\n   *   fetch(src)\n   *     .then((response) => {\n   *       if (retryCodes.includes(response.status)) {\n   *         retries[src] = (retries[src] || 0) + 1;\n   *         if (retries[src] <= 3) {\n   *           setTimeout(() => tile.load(), retries[src] * 1000);\n   *         }\n   *         return Promise.reject();\n   *       }\n   *       return response.blob();\n   *     })\n   *     .then((blob) => {\n   *       const imageUrl = URL.createObjectURL(blob);\n   *       image.src = imageUrl;\n   *       setTimeout(() => URL.revokeObjectURL(imageUrl), 5000);\n   *     })\n   *     .catch(() => tile.setState(3)); // error\n   * });\n   * ```\n   * @api\n   * @override\n   */\n  load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this),\n      );\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n\n  /**\n   * @override\n   */\n  disposeInternal() {\n    this.unlistenImage_();\n    this.image_ = null;\n    super.disposeInternal();\n  }\n}\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement|OffscreenCanvas} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange} [tileRange] TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  }\n  return new TileRange(minX, maxX, minY, maxY);\n}\n\nexport default TileRange;\n","/**\n * @module ol/reproj\n */\nimport {createCanvasContext2D, releaseCanvas} from './dom.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  extend,\n  forEachCorner,\n  getCenter,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from './extent.js';\nimport {solveLinearSystem} from './math.js';\nimport {getPointResolution, transform} from './proj.js';\n\nlet brokenDiagonalRendering_;\n\n/**\n * @type {Array<HTMLCanvasElement|OffscreenCanvas>}\n */\nexport const canvasPool = [];\n\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D|OffscreenCanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(u1, v1);\n  ctx.lineTo(u2, v2);\n  ctx.closePath();\n  ctx.save();\n  ctx.clip();\n  ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n  ctx.restore();\n}\n\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n  // the values ought to be close to the rgba(210, 0, 0, 0.75)\n  return (\n    Math.abs(data[offset * 4] - 210) > 2 ||\n    Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2\n  );\n}\n\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n  if (brokenDiagonalRendering_ === undefined) {\n    const ctx = createCanvasContext2D(6, 6, canvasPool);\n    ctx.globalCompositeOperation = 'lighter';\n    ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n    drawTestTriangle(ctx, 4, 5, 4, 0);\n    drawTestTriangle(ctx, 4, 5, 0, 5);\n    const data = ctx.getImageData(0, 0, 3, 3).data;\n    brokenDiagonalRendering_ =\n      verifyBrokenDiagonalRendering(data, 0) ||\n      verifyBrokenDiagonalRendering(data, 4) ||\n      verifyBrokenDiagonalRendering(data, 8);\n    releaseCanvas(ctx);\n    canvasPool.push(ctx.canvas);\n  }\n\n  return brokenDiagonalRendering_;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(\n  sourceProj,\n  targetProj,\n  targetCenter,\n  targetResolution,\n) {\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(\n    targetProj,\n    targetResolution,\n    targetCenter,\n  );\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor =\n      getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n      sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(\n  sourceProj,\n  targetProj,\n  targetExtent,\n  targetResolution,\n) {\n  const targetCenter = getCenter(targetExtent);\n  let sourceResolution = calculateSourceResolution(\n    sourceProj,\n    targetProj,\n    targetCenter,\n    targetResolution,\n  );\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    forEachCorner(targetExtent, function (corner) {\n      sourceResolution = calculateSourceResolution(\n        sourceProj,\n        targetProj,\n        corner,\n        targetResolution,\n      );\n      return isFinite(sourceResolution) && sourceResolution > 0;\n    });\n  }\n\n  return sourceResolution;\n}\n\n/**\n * @typedef {Object} ImageExtent\n * @property {import(\"./extent.js\").Extent} extent Extent.\n * @property {import(\"./extent.js\").Extent} [clipExtent] Clip extent.\n * @property {import('./DataTile.js').ImageLike} image Image.\n */\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation Calculated triangulation.\n * @param {Array<ImageExtent>} sources Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean} [renderEdges] Render reprojection edges.\n * @param {boolean} [interpolate] Use linear interpolation when resampling.\n * @param {boolean} [drawSingle] Draw single source images directly without stitchContext.\n * @param {boolean} [clipExtent] Clip stitchContext to sourceExtent.\n * @return {HTMLCanvasElement|OffscreenCanvas} Canvas with reprojected data.\n */\nexport function render(\n  width,\n  height,\n  pixelRatio,\n  sourceResolution,\n  sourceExtent,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  renderEdges,\n  interpolate,\n  drawSingle,\n  clipExtent,\n) {\n  const context = createCanvasContext2D(\n    Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height),\n    canvasPool,\n  );\n\n  if (!interpolate) {\n    context.imageSmoothingEnabled = false;\n  }\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  function pixelRound(value) {\n    return Math.round(value * pixelRatio) / pixelRatio;\n  }\n\n  context.globalCompositeOperation = 'lighter';\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  let stitchContext;\n  const stitchScale = pixelRatio / sourceResolution;\n  // Round up Float32 scale values to prevent interpolation in Firefox.\n  const inverseScale = (interpolate ? 1 : 1 + Math.pow(2, -24)) / stitchScale;\n\n  if (!drawSingle || sources.length !== 1 || gutter !== 0) {\n    stitchContext = createCanvasContext2D(\n      Math.round(getWidth(sourceDataExtent) * stitchScale),\n      Math.round(getHeight(sourceDataExtent) * stitchScale),\n      canvasPool,\n    );\n\n    if (!interpolate) {\n      stitchContext.imageSmoothingEnabled = false;\n    }\n    if (sourceExtent && clipExtent) {\n      const xPos = (sourceExtent[0] - sourceDataExtent[0]) * stitchScale;\n      const yPos = -(sourceExtent[3] - sourceDataExtent[3]) * stitchScale;\n      const width = getWidth(sourceExtent) * stitchScale;\n      const height = getHeight(sourceExtent) * stitchScale;\n      stitchContext.rect(xPos, yPos, width, height);\n      stitchContext.clip();\n    }\n\n    sources.forEach(function (src, i, arr) {\n      // This test should never fail -- but it does. Need to find a fix the upstream condition\n      if (src.image.width > 0 && src.image.height > 0) {\n        if (src.clipExtent) {\n          stitchContext.save();\n          const xPos = (src.clipExtent[0] - sourceDataExtent[0]) * stitchScale;\n          const yPos = -(src.clipExtent[3] - sourceDataExtent[3]) * stitchScale;\n          const width = getWidth(src.clipExtent) * stitchScale;\n          const height = getHeight(src.clipExtent) * stitchScale;\n          stitchContext.rect(\n            interpolate ? xPos : Math.round(xPos),\n            interpolate ? yPos : Math.round(yPos),\n            interpolate ? width : Math.round(xPos + width) - Math.round(xPos),\n            interpolate ? height : Math.round(yPos + height) - Math.round(yPos),\n          );\n          stitchContext.clip();\n        }\n\n        const xPos = (src.extent[0] - sourceDataExtent[0]) * stitchScale;\n        const yPos = -(src.extent[3] - sourceDataExtent[3]) * stitchScale;\n        const srcWidth = getWidth(src.extent) * stitchScale;\n        const srcHeight = getHeight(src.extent) * stitchScale;\n        stitchContext.drawImage(\n          src.image,\n          gutter,\n          gutter,\n          src.image.width - 2 * gutter,\n          src.image.height - 2 * gutter,\n          interpolate ? xPos : Math.round(xPos),\n          interpolate ? yPos : Math.round(yPos),\n          interpolate\n            ? srcWidth\n            : Math.round(xPos + srcWidth) - Math.round(xPos),\n          interpolate\n            ? srcHeight\n            : Math.round(yPos + srcHeight) - Math.round(yPos),\n        );\n\n        if (src.clipExtent) {\n          stitchContext.restore();\n        }\n      }\n    });\n  }\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function (triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0],\n      y0 = source[0][1];\n    let x1 = source[1][0],\n      y1 = source[1][1];\n    let x2 = source[2][0],\n      y2 = source[2][1];\n    // Make sure that everything is on pixel boundaries\n    const u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n    const v0 = pixelRound(\n      -(target[0][1] - targetTopLeft[1]) / targetResolution,\n    );\n    const u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n    const v1 = pixelRound(\n      -(target[1][1] - targetTopLeft[1]) / targetResolution,\n    );\n    const u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n    const v2 = pixelRound(\n      -(target[2][1] - targetTopLeft[1]) / targetResolution,\n    );\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0],\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n\n    if (isBrokenDiagonalRendering() || !interpolate) {\n      // Make sure that all lines are horizontal or vertical\n      context.moveTo(u1, v1);\n      // This is the diagonal line. Do it in 4 steps\n      const steps = 4;\n      const ud = u0 - u1;\n      const vd = v0 - v1;\n      for (let step = 0; step < steps; step++) {\n        // Go horizontally\n        context.lineTo(\n          u1 + pixelRound(((step + 1) * ud) / steps),\n          v1 + pixelRound((step * vd) / (steps - 1)),\n        );\n        // Go vertically\n        if (step != steps - 1) {\n          context.lineTo(\n            u1 + pixelRound(((step + 1) * ud) / steps),\n            v1 + pixelRound(((step + 1) * vd) / (steps - 1)),\n          );\n        }\n      }\n      // We are almost at u0r, v0r\n      context.lineTo(u2, v2);\n    } else {\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n    }\n\n    context.clip();\n\n    context.transform(\n      affineCoefs[0],\n      affineCoefs[2],\n      affineCoefs[1],\n      affineCoefs[3],\n      u0,\n      v0,\n    );\n\n    context.translate(\n      sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY,\n    );\n\n    let image;\n    if (stitchContext) {\n      image = stitchContext.canvas;\n      context.scale(inverseScale, -inverseScale);\n    } else {\n      const source = sources[0];\n      const extent = source.extent;\n      image = source.image;\n      context.scale(\n        getWidth(extent) / image.width,\n        -getHeight(extent) / image.height,\n      );\n    }\n\n    context.drawImage(image, 0, 0);\n    context.restore();\n  });\n\n  if (stitchContext) {\n    releaseCanvas(stitchContext);\n    canvasPool.push(stitchContext.canvas);\n  }\n\n  if (renderEdges) {\n    context.save();\n\n    context.globalCompositeOperation = 'source-over';\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {\n  boundingExtent,\n  createEmpty,\n  extendCoordinate,\n  getArea,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n  intersects,\n} from '../extent.js';\nimport {modulo} from '../math.js';\nimport {\n  createTransformFromCoordinateTransform,\n  getTransform,\n  transform,\n} from '../proj.js';\nimport {apply as applyMatrix} from '../transform.js';\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source Source.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target Target.\n */\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   * @param {?number} destinationResolution The (optional) resolution of the destination.\n   * @param {import(\"../transform.js\").Transform} [sourceMatrix] Source transform matrix.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    maxSourceExtent,\n    errorThreshold,\n    destinationResolution,\n    sourceMatrix,\n  ) {\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = sourceMatrix\n      ? createTransformFromCoordinateTransform((input) =>\n          applyMatrix(\n            sourceMatrix,\n            transform(input, this.targetProj_, this.sourceProj_),\n          ),\n        )\n      : getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function (c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array<Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ =\n      this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      getWidth(maxSourceExtent) >= getWidth(this.sourceProj_.getExtent());\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n      ? getWidth(this.sourceProj_.getExtent())\n      : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent()\n      ? getWidth(this.targetProj_.getExtent())\n      : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    /*\n     * The maxSubdivision controls how many splittings of the target area can\n     * be done. The idea here is to do a linear mapping of the target areas\n     * but the actual overall reprojection (can be) extremely non-linear. The\n     * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n     * tile size. However this function is also called to remap canvas rendered\n     * layers which can be much larger. This calculation increases the maxSubdivision\n     * value by the right factor so that each 256x256 pixel area has\n     * MAX_SUBDIVISION divisions.\n     */\n    const maxSubdivision =\n      MAX_SUBDIVISION +\n      (destinationResolution\n        ? Math.max(\n            0,\n            Math.ceil(\n              Math.log2(\n                getArea(targetExtent) /\n                  (destinationResolution * destinationResolution * 256 * 256),\n              ),\n            ),\n          )\n        : 0);\n\n    this.addQuad_(\n      destinationTopLeft,\n      destinationTopRight,\n      destinationBottomRight,\n      destinationBottomLeft,\n      sourceTopLeft,\n      sourceTopRight,\n      sourceBottomRight,\n      sourceBottomLeft,\n      maxSubdivision,\n    );\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function (triangle, i, arr) {\n        leftBound = Math.min(\n          leftBound,\n          triangle.source[0][0],\n          triangle.source[1][0],\n          triangle.source[2][0],\n        );\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach((triangle) => {\n        if (\n          Math.max(\n            triangle.source[0][0],\n            triangle.source[1][0],\n            triangle.source[2][0],\n          ) -\n            leftBound >\n          this.sourceWorldWidth_ / 2\n        ) {\n          const newTriangle = [\n            [triangle.source[0][0], triangle.source[0][1]],\n            [triangle.source[1][0], triangle.source[1][1]],\n            [triangle.source[2][0], triangle.source[2][1]],\n          ];\n          if (newTriangle[0][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[0][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[1][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[1][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[2][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[2][0] -= this.sourceWorldWidth_;\n          }\n\n          // Rarely (if the extent contains both the dateline and prime meridian)\n          // the shift can in turn break some triangles.\n          // Detect this here and don't shift in such cases.\n          const minX = Math.min(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0],\n          );\n          const maxX = Math.max(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0],\n          );\n          if (maxX - minX < this.sourceWorldWidth_ / 2) {\n            triangle.source = newTriangle;\n          }\n        }\n      });\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c],\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_\n      ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n      : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX =\n      this.sourceProj_.canWrapX() &&\n      sourceCoverageX > 0.5 &&\n      sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX =\n          getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision =\n          targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision =\n          sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (\n        isFinite(sourceQuadExtent[0]) &&\n        isFinite(sourceQuadExtent[1]) &&\n        isFinite(sourceQuadExtent[2]) &&\n        isFinite(sourceQuadExtent[3])\n      ) {\n        if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n          // whole quad outside source projection extent -> ignore\n          return;\n        }\n      }\n    }\n\n    let isNotFinite = 0;\n\n    if (!needsSubdivision) {\n      if (\n        !isFinite(aSrc[0]) ||\n        !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) ||\n        !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) ||\n        !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) ||\n        !isFinite(dSrc[1])\n      ) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          // It might be the case that only 1 of the points is infinite. In this case\n          // we can draw a single triangle with the other three points\n          isNotFinite =\n            (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n          if (\n            isNotFinite != 1 &&\n            isNotFinite != 2 &&\n            isNotFinite != 4 &&\n            isNotFinite != 8\n          ) {\n            return;\n          }\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n              modulo(cSrc[0], sourceWorldWidth)) /\n            2;\n          dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a,\n            b,\n            bc,\n            da,\n            aSrc,\n            bSrc,\n            bcSrc,\n            daSrc,\n            maxSubdivision - 1,\n          );\n          this.addQuad_(\n            da,\n            bc,\n            c,\n            d,\n            daSrc,\n            bcSrc,\n            cSrc,\n            dSrc,\n            maxSubdivision - 1,\n          );\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a,\n            ab,\n            cd,\n            d,\n            aSrc,\n            abSrc,\n            cdSrc,\n            dSrc,\n            maxSubdivision - 1,\n          );\n          this.addQuad_(\n            ab,\n            b,\n            c,\n            cd,\n            abSrc,\n            bSrc,\n            cSrc,\n            cdSrc,\n            maxSubdivision - 1,\n          );\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    // Exactly zero or one of *Src is not finite\n    // The triangles must have the diagonal line as the first side\n    // This is to allow easy code in reproj.s to make it straight for broken\n    // browsers that can't handle diagonal clipping\n    if ((isNotFinite & 0xb) == 0) {\n      this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    }\n    if ((isNotFinite & 0xe) == 0) {\n      this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n    }\n    if (isNotFinite) {\n      // Try the other two triangles\n      if ((isNotFinite & 0xd) == 0) {\n        this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n      }\n      if ((isNotFinite & 0x7) == 0) {\n        this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n      }\n    }\n  }\n\n  /**\n   * Calculates extent of the `source` coordinates from all the triangles.\n   *\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function (triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array<Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n","/**\n * @module ol/reproj/Tile\n */\n\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport {releaseCanvas} from '../dom.js';\nimport EventType from '../events/EventType.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {getArea, getIntersection, getWidth, wrapAndSliceX} from '../extent.js';\nimport {clamp} from '../math.js';\nimport {\n  calculateSourceExtentResolution,\n  canvasPool,\n  render as renderReprojected,\n} from '../reproj.js';\nimport Triangulation from './Triangulation.js';\nimport {ERROR_THRESHOLD} from './common.js';\n\n/**\n * @typedef {function(number, number, number, number) : (import(\"../ImageTile.js\").default)} FunctionType\n */\n\n/**\n * @typedef {Object} TileOffset\n * @property {import(\"../ImageTile.js\").default} tile Tile.\n * @property {number} offset Offset.\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nclass ReprojTile extends Tile {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n   * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} gutter Gutter of the source tiles.\n   * @param {FunctionType} getTileFunction\n   *     Function returning source tiles (z, x, y, pixelRatio).\n   * @param {number} [errorThreshold] Acceptable reprojection error (in px).\n   * @param {boolean} [renderEdges] Render reprojection edges.\n   * @param {import(\"../Tile.js\").Options} [options] Tile options.\n   */\n  constructor(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    errorThreshold,\n    renderEdges,\n    options,\n  ) {\n    super(tileCoord, TileState.IDLE, options);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = renderEdges !== undefined ? renderEdges : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|OffscreenCanvas}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<TileOffset>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.clipExtent_ = sourceProj.canWrapX()\n      ? sourceProj.getExtent()\n      : undefined;\n\n    const targetExtent = targetTileGrid.getTileCoordExtent(\n      this.wrappedTileCoord_,\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0],\n    );\n\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution,\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      errorThreshold !== undefined ? errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution,\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3],\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3],\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      let worldWidth = 0;\n      let worldsAway = 0;\n      if (sourceProj.canWrapX()) {\n        worldWidth = getWidth(sourceProjExtent);\n        worldsAway = Math.floor(\n          (sourceExtent[0] - sourceProjExtent[0]) / worldWidth,\n        );\n      }\n\n      const sourceExtents = wrapAndSliceX(\n        sourceExtent.slice(),\n        sourceProj,\n        true,\n      );\n      sourceExtents.forEach((extent) => {\n        const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n          extent,\n          this.sourceZ_,\n        );\n\n        for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n          for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n            const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n            if (tile) {\n              const offset = worldsAway * worldWidth;\n              this.sourceTiles_.push({tile, offset});\n            }\n          }\n        }\n        ++worldsAway;\n      });\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement|OffscreenCanvas} Canvas.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sources = [];\n    this.sourceTiles_.forEach((source) => {\n      const tile = source.tile;\n      if (tile && tile.getState() == TileState.LOADED) {\n        const extent = this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord);\n        extent[0] += source.offset;\n        extent[2] += source.offset;\n        const clipExtent = this.clipExtent_?.slice();\n        if (clipExtent) {\n          clipExtent[0] += source.offset;\n          clipExtent[2] += source.offset;\n        }\n        sources.push({\n          extent: extent,\n          clipExtent: clipExtent,\n          image: tile.getImage(),\n        });\n      }\n    });\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const width = typeof size === 'number' ? size : size[0];\n      const height = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_,\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_,\n      );\n\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        this.renderEdges_,\n        this.interpolate,\n      );\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @override\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      let leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach(({tile}) => {\n        const state = tile.getState();\n        if (state == TileState.IDLE || state == TileState.LOADING) {\n          leftToLoad++;\n\n          const sourceListenKey = listen(tile, EventType.CHANGE, (e) => {\n            const state = tile.getState();\n            if (\n              state == TileState.LOADED ||\n              state == TileState.ERROR ||\n              state == TileState.EMPTY\n            ) {\n              unlistenByKey(sourceListenKey);\n              leftToLoad--;\n              if (leftToLoad === 0) {\n                this.unlistenSources_();\n                this.reproject_();\n              }\n            }\n          });\n          this.sourcesListenerKeys_.push(sourceListenKey);\n        }\n      });\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      } else {\n        this.sourceTiles_.forEach(function ({tile}, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE) {\n            tile.load();\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   * @override\n   */\n  release() {\n    if (this.canvas_) {\n      releaseCanvas(\n        /** @type {CanvasRenderingContext2D|OffscreenCanvasRenderingContext2D} */ (\n          this.canvas_.getContext('2d')\n        ),\n      );\n      canvasPool.push(this.canvas_);\n      this.canvas_ = null;\n    }\n    super.release();\n  }\n}\n\nexport default ReprojTile;\n","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n","/**\n * @module ol/structs/LRUCache\n */\n\nimport Disposable from '../Disposable.js';\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Entry|null} newer Newer.\n * @property {Entry|null} older Older.\n * @property {*} value_ Value.\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n  /**\n   * @param {number} [highWaterMark] High water mark.\n   */\n  constructor(highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark = highWaterMark !== undefined ? highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n\n  deleteOldest() {\n    const entry = this.pop();\n    if (entry instanceof Disposable) {\n      entry.dispose();\n    }\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  }\n\n  /**\n   * Expire the cache. When the cache entry is a {@link module:ol/Disposable~Disposable},\n   * the entry will be disposed.\n   * @param {!Object<string, boolean>} [keep] Keys to keep. To be implemented by subclasses.\n   */\n  expireCache(keep) {\n    while (this.canExpireCache()) {\n      this.deleteOldest();\n    }\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    while (this.oldest_) {\n      this.deleteOldest();\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {*} [options] Options (reserved for subclasses).\n   * @return {T} Value.\n   */\n  get(key, options) {\n    const entry = this.entries_[key];\n    assert(\n      entry !== undefined,\n      'Tried to get a value for a key that does not exist in the cache',\n    );\n    if (entry === this.newest_) {\n      return entry.value_;\n    }\n    if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(\n      entry !== undefined,\n      'Tried to get a value for a key that does not exist in the cache',\n    );\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n  /**\n   * Return an entry without updating least recently used time.\n   * @param {string} key Key.\n   * @return {T|undefined} Value.\n   */\n  peek(key) {\n    return this.entries_[key]?.value_;\n  }\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(\n      !(key in this.entries_),\n      'Tried to set a value for a key that is used already',\n    );\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value,\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n}\n\nexport default LRUCache;\n","/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord} [tileCoord] Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, tileCoord) {\n  if (tileCoord !== undefined) {\n    tileCoord[0] = z;\n    tileCoord[1] = x;\n    tileCoord[2] = y;\n    return tileCoord;\n  }\n  return [z, x, y];\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get the tile cache key for a tile key obtained through `tile.getKey()`.\n * @param {string} tileKey The tile key.\n * @return {string} The cache key.\n */\nexport function getCacheKeyForTileKey(tileKey) {\n  const [z, x, y] = tileKey\n    .substring(tileKey.lastIndexOf('/') + 1, tileKey.length)\n    .split(',')\n    .map(Number);\n  return getKeyZXY(z, x, y);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return hashZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * @param {number} z The tile z coordinate.\n * @param {number} x The tile x coordinate.\n * @param {number} y The tile y coordinate.\n * @return {number} Hash.\n */\nexport function hashZXY(z, x, y) {\n  return (x << z) + y;\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  }\n  return tileRange.containsXY(x, y);\n}\n","/**\n * @module ol/render/canvas/ZIndexContext\n */\n\nimport {getSharedCanvasContext2D} from '../../dom.js';\n\n/** @typedef {CanvasRenderingContext2D|OffscreenCanvasRenderingContext2D & {globalAlpha: any}} ZIndexContextProxy */\n\n/**\n * @extends {CanvasRenderingContext2D}\n */\nclass ZIndexContext {\n  constructor() {\n    /**\n     * @private\n     * @type {Array<Array<*>>}\n     */\n    this.instructions_ = [];\n    /**\n     * @type {number}\n     */\n    this.zIndex = 0;\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offset_ = 0;\n\n    /**\n     * @private\n     * @type {ZIndexContextProxy}\n     */\n    this.context_ = /** @type {ZIndexContextProxy} */ (\n      new Proxy(getSharedCanvasContext2D(), {\n        get: (target, property) => {\n          if (\n            typeof (/** @type {*} */ (getSharedCanvasContext2D())[property]) !==\n            'function'\n          ) {\n            // we only accept calling functions on the proxy, not accessing properties\n            return undefined;\n          }\n          this.push_(property);\n          return this.pushMethodArgs_;\n        },\n        set: (target, property, value) => {\n          this.push_(property, value);\n          return true;\n        },\n      })\n    );\n  }\n\n  /**\n   * @param {...*} args Arguments to push to the instructions array.\n   * @private\n   */\n  push_(...args) {\n    const instructions = this.instructions_;\n    const index = this.zIndex + this.offset_;\n    if (!instructions[index]) {\n      instructions[index] = [];\n    }\n    instructions[index].push(...args);\n  }\n\n  /**\n   * @private\n   * @param {...*} args Args.\n   * @return {ZIndexContext} This.\n   */\n  pushMethodArgs_ = (...args) => {\n    this.push_(args);\n    return this;\n  };\n\n  /**\n   * Push a function that renders to the context directly.\n   * @param {function(CanvasRenderingContext2D): void} render Function.\n   */\n  pushFunction(render) {\n    this.push_(render);\n  }\n\n  /**\n   * Get a proxy for CanvasRenderingContext2D which does not support getting state\n   * (e.g. `context.globalAlpha`, which will return `undefined`). To set state, if it relies on a\n   * previous state (e.g. `context.globalAlpha = context.globalAlpha / 2`), set a function,\n   * e.g. `context.globalAlpha = (context) => context.globalAlpha / 2`.\n   * @return {ZIndexContextProxy} Context.\n   */\n  getContext() {\n    return this.context_;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D|OffscreenCanvasRenderingContext2D} context Context.\n   */\n  draw(context) {\n    this.instructions_.forEach((instructionsAtIndex) => {\n      for (let i = 0, ii = instructionsAtIndex.length; i < ii; ++i) {\n        const property = instructionsAtIndex[i];\n        if (typeof property === 'function') {\n          property(context);\n          continue;\n        }\n        const instructionAtIndex = instructionsAtIndex[++i];\n        if (typeof (/** @type {*} */ (context)[property]) === 'function') {\n          /** @type {*} */ (context)[property](...instructionAtIndex);\n        } else {\n          if (typeof instructionAtIndex === 'function') {\n            /** @type {*} */ (context)[property] = instructionAtIndex(context);\n            continue;\n          }\n          /** @type {*} */ (context)[property] = instructionAtIndex;\n        }\n      }\n    });\n  }\n\n  clear() {\n    this.instructions_.length = 0;\n    this.zIndex = 0;\n    this.offset_ = 0;\n  }\n\n  /**\n   * Offsets the zIndex by the highest current zIndex. Useful for rendering multiple worlds or tiles, to\n   * avoid conflicting context.clip() or context.save()/restore() calls.\n   */\n  offset() {\n    this.offset_ = this.instructions_.length;\n    this.zIndex = 0;\n  }\n}\n\nexport default ZIndexContext;\n","/**\n * @module ol/renderer/Layer\n */\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport EventType from '../events/EventType.js';\nimport {abstract} from '../util.js';\n\nconst maxStaleKeys = 5;\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /**\n     * The renderer is initialized and ready to render.\n     * @type {boolean}\n     */\n    this.ready = true;\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @private\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {Array<string>}\n     * @private\n     */\n    this.staleKeys_ = new Array();\n\n    /**\n     * @type {number}\n     * @protected\n     */\n    this.maxStaleKeys = maxStaleKeys;\n  }\n\n  /**\n   * @return {Array<string>} Get the list of stale keys.\n   */\n  getStaleKeys() {\n    return this.staleKeys_;\n  }\n\n  /**\n   * @param {string} key The new stale key.\n   */\n  prependStaleKey(key) {\n    this.staleKeys_.unshift(key);\n    if (this.staleKeys_.length > this.maxStaleKeys) {\n      this.staleKeys_.length = this.maxStaleKeys;\n    }\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    return null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement|null} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches,\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (\n      image.getState() === ImageState.LOADED ||\n      image.getState() === ImageState.ERROR\n    ) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../Image.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer && layer.getVisible() && layer.getSourceState() === 'ready') {\n      layer.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeferred(frameState) {}\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    delete this.layer_;\n    super.disposeInternal();\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport {equals} from '../../array.js';\nimport {asArray} from '../../color.js';\nimport {createCanvasContext2D, createMockDiv, isCanvas} from '../../dom.js';\nimport {\n  getBottomLeft,\n  getBottomRight,\n  getHeight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n} from '../../extent.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../../has.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport ZIndexContext from '../../render/canvas/ZIndexContext.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  equivalent,\n  makeInverse,\n  toString as toTransformString,\n} from '../../transform.js';\nimport LayerRenderer from '../Layer.js';\n\n/**\n * @type {Array<HTMLCanvasElement|OffscreenCanvas>}\n */\nexport const canvasPool = [];\n\n/**\n * @type {CanvasRenderingContext2D|OffscreenCanvasRenderingContext2D}\n */\nlet pixelContext = null;\n\nfunction createPixelContext() {\n  pixelContext = createCanvasContext2D(1, 1, undefined, {\n    willReadFrequently: true,\n  });\n}\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * HTMLElement container for the layer to be rendered in.\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D|OffscreenCanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @private\n     * @type {ZIndexContext}\n     */\n    this.deferredContext_ = null;\n\n    /**\n     * true if the container has been reused from the previous renderer\n     * @type {boolean}\n     */\n    this.containerReused = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../Map.js\").FrameState|null}\n     */\n    this.frameState = null;\n  }\n\n  /**\n   * @param {import('../../DataTile.js').ImageLike} image Image.\n   * @param {number} col The column index.\n   * @param {number} row The row index.\n   * @return {Uint8ClampedArray|null} The image data.\n   */\n  getImageData(image, col, row) {\n    if (!pixelContext) {\n      createPixelContext();\n    }\n    pixelContext.clearRect(0, 0, 1, 1);\n\n    let data;\n    try {\n      pixelContext.drawImage(image, col, row, 1, 1, 0, 0, 1, 1);\n      data = pixelContext.getImageData(0, 0, 1, 1).data;\n    } catch {\n      pixelContext = null;\n      return null;\n    }\n    return data;\n  }\n\n  /**\n   * @param {import('../../Map.js').FrameState} frameState Frame state.\n   * @return {string} Background color.\n   */\n  getBackground(frameState) {\n    const layer = this.getLayer();\n    let background = layer.getBackground();\n    if (typeof background === 'function') {\n      background = background(frameState.viewState.resolution);\n    }\n    return background || undefined;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS transform matrix.\n   * @param {string} [backgroundColor] Background color.\n   */\n  useContainer(target, transform, backgroundColor) {\n    // renderer canvas to target canvas\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.className === layerClassName &&\n      (!backgroundColor ||\n        (target &&\n          target.style.backgroundColor &&\n          equals(\n            asArray(target.style.backgroundColor),\n            asArray(backgroundColor),\n          )))\n    ) {\n      const canvas = target.firstElementChild;\n      if (isCanvas(canvas)) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (context && equivalent(context.canvas.style.transform, transform)) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    } else if (this.container) {\n      this.container.style.backgroundColor = null;\n    }\n    if (!this.container) {\n      container = WORKER_OFFSCREEN_CANVAS\n        ? createMockDiv()\n        : document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      context = createCanvasContext2D();\n      const canvas = /** @type {HTMLCanvasElement} */ (context.canvas);\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n    if (\n      !this.containerReused &&\n      backgroundColor &&\n      !this.container.style.backgroundColor\n    ) {\n      this.container.style.backgroundColor = backgroundColor;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D|OffscreenCanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @protected\n   */\n  prepareContainer(frameState, target) {\n    const extent = frameState.extent;\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / pixelRatio,\n      1 / pixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2,\n    );\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n    if (!this.containerReused) {\n      const canvas = this.context.canvas;\n      if (canvas.width != width || canvas.height != height) {\n        canvas.width = width;\n        canvas.height = height;\n      } else {\n        this.context.clearRect(0, 0, width, height);\n      }\n      if (\n        canvasTransform !==\n        /** @type {HTMLCanvasElement} */ (canvas).style.transform\n      ) {\n        /** @type {HTMLCanvasElement} */ (canvas).style.transform =\n          canvasTransform;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D|OffscreenCanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context,\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D|OffscreenCanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.frameState = frameState;\n    if (frameState.declutter) {\n      return;\n    }\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D|OffscreenCanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    if (frameState.declutter) {\n      return;\n    }\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeferredInternal(frameState) {}\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {import('../../render/canvas/ZIndexContext.js').ZIndexContextProxy} Context.\n   */\n  getRenderContext(frameState) {\n    if (frameState.declutter && !this.deferredContext_) {\n      this.deferredContext_ = new ZIndexContext();\n    }\n    return frameState.declutter\n      ? this.deferredContext_.getContext()\n      : this.context;\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @override\n   */\n  renderDeferred(frameState) {\n    if (!frameState.declutter) {\n      return;\n    }\n    this.dispatchRenderEvent_(\n      RenderEventType.PRERENDER,\n      this.context,\n      frameState,\n    );\n    if (frameState.declutter && this.deferredContext_) {\n      this.deferredContext_.draw(this.context);\n      this.deferredContext_.clear();\n    }\n    this.renderDeferredInternal(frameState);\n    this.dispatchRenderEvent_(\n      RenderEventType.POSTRENDER,\n      this.context,\n      frameState,\n    );\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX,\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2,\n    );\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    delete this.frameState;\n    super.disposeInternal();\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport DataTile, {asImageLike} from '../../DataTile.js';\nimport ImageTile from '../../ImageTile.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {ascending} from '../../array.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  equals,\n  getIntersection,\n  getRotatedViewport,\n  getTopLeft,\n  intersects,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\nimport ReprojTile from '../../reproj/Tile.js';\nimport {toSize} from '../../size.js';\nimport LRUCache from '../../structs/LRUCache.js';\nimport {createOrUpdate as createTileCoord, getKeyZXY} from '../../tilecoord.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n} from '../../transform.js';\nimport {getUid} from '../../util.js';\nimport CanvasLayerRenderer from './Layer.js';\n\n/**\n * @param {import(\"../../source/Tile.js\").default} source The tile source.\n * @param {string} sourceKey The source key.\n * @param {number} z The tile z level.\n * @param {number} x The tile x level.\n * @param {number} y The tile y level.\n * @return {string} The cache key.\n */\nfunction getCacheKey(source, sourceKey, z, x, y) {\n  return `${getUid(source)},${sourceKey},${getKeyZXY(z, x, y)}`;\n}\n\n/**\n * @typedef {Object<number, Set<import(\"../../Tile.js\").default>>} TileLookup\n */\n\n/**\n * Add a tile to the lookup.\n * @param {TileLookup} tilesByZ Lookup of tiles by zoom level.\n * @param {import(\"../../Tile.js\").default} tile A tile.\n * @param {number} z The zoom level.\n * @return {boolean} The tile was added to the lookup.\n */\nfunction addTileToLookup(tilesByZ, tile, z) {\n  if (!(z in tilesByZ)) {\n    tilesByZ[z] = new Set([tile]);\n    return true;\n  }\n  const set = tilesByZ[z];\n  const existing = set.has(tile);\n  if (!existing) {\n    set.add(tile);\n  }\n  return !existing;\n}\n\n/**\n * Remove a tile from the lookup.\n * @param {TileLookup} tilesByZ Lookup of tiles by zoom level.\n * @param {import(\"../../Tile.js\").default} tile A tile.\n * @param {number} z The zoom level.\n * @return {boolean} The tile was removed from the lookup.\n */\nfunction removeTileFromLookup(tilesByZ, tile, z) {\n  const set = tilesByZ[z];\n  if (set) {\n    return set.delete(tile);\n  }\n  return false;\n}\n\n/**\n * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n * @param {import(\"../../extent.js\").Extent} extent The frame extent.\n * @return {import(\"../../extent.js\").Extent} Frame extent intersected with layer extents.\n */\nfunction getRenderExtent(frameState, extent) {\n  const layerState = frameState.layerStatesArray[frameState.layerIndex];\n  if (layerState.extent) {\n    extent = getIntersection(\n      extent,\n      fromUserExtent(layerState.extent, frameState.viewState.projection),\n    );\n  }\n  const source = /** @type {import(\"../../source/Tile.js\").default} */ (\n    layerState.layer.getRenderSource()\n  );\n  if (!source.getWrapX()) {\n    const gridExtent = source\n      .getTileGridForProjection(frameState.viewState.projection)\n      .getExtent();\n    if (gridExtent) {\n      extent = getIntersection(extent, gridExtent);\n    }\n  }\n  return extent;\n}\n\n/**\n * @typedef {Object} Options\n * @property {number} [cacheSize=512] The cache size.\n */\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n * @template {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default} [LayerType=import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default]\n * @extends {CanvasLayerRenderer<LayerType>}\n */\nclass CanvasTileLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {LayerType} tileLayer Tile layer.\n   * @param {Options} [options] Options.\n   */\n  constructor(tileLayer, options) {\n    super(tileLayer);\n\n    options = options || {};\n\n    /**\n     * Rendered extent has changed since the previous `renderFrame()` call\n     * @type {boolean}\n     */\n    this.extentChanged = true;\n\n    /**\n     * The last call to `renderFrame` was completed with all tiles loaded\n     * @type {boolean}\n     */\n    this.renderComplete = false;\n\n    /**\n     * @private\n     * @type {?import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedPixelRatio;\n\n    /**\n     * @protected\n     * @type {import(\"../../proj/Projection.js\").default|null}\n     */\n    this.renderedProjection = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.renderedSourceKey_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedSourceRevision_;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tempExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tempTileRange_ = new TileRange(0, 0, 0, 0);\n\n    /**\n     * @type {import(\"../../tilecoord.js\").TileCoord}\n     * @private\n     */\n    this.tempTileCoord_ = createTileCoord(0, 0, 0);\n\n    const cacheSize = options.cacheSize !== undefined ? options.cacheSize : 512;\n\n    /**\n     * @type {import(\"../../structs/LRUCache.js\").default<import(\"../../Tile.js\").default>}\n     * @private\n     */\n    this.tileCache_ = new LRUCache(cacheSize);\n\n    this.maxStaleKeys = cacheSize * 0.5;\n  }\n\n  /**\n   * @return {LRUCache} Tile cache.\n   */\n  getTileCache() {\n    return this.tileCache_;\n  }\n\n  /**\n   * Get a tile from the cache or create one if needed.\n   *\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {import(\"../../Tile.js\").default|null} Tile (or null if outside source extent).\n   * @protected\n   */\n  getOrCreateTile(z, x, y, frameState) {\n    const tileCache = this.tileCache_;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const cacheKey = getCacheKey(tileSource, tileSource.getKey(), z, x, y);\n\n    /** @type {import(\"../../Tile.js\").default} */\n    let tile;\n\n    if (tileCache.containsKey(cacheKey)) {\n      tile = tileCache.get(cacheKey);\n    } else {\n      tile = tileSource.getTile(\n        z,\n        x,\n        y,\n        frameState.pixelRatio,\n        frameState.viewState.projection,\n      );\n      if (!tile) {\n        return null;\n      }\n      tileCache.set(cacheKey, tile);\n    }\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {import(\"../../Tile.js\").default|null} Tile (or null if outside source extent).\n   * @protected\n   */\n  getTile(z, x, y, frameState) {\n    const tile = this.getOrCreateTile(z, x, y, frameState);\n    if (!tile) {\n      return null;\n    }\n    return tile;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   * @override\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice(),\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const viewState = frameState.viewState;\n    const source = layer.getRenderSource();\n    const tileGrid = source.getTileGridForProjection(viewState.projection);\n    const tilePixelRatio = source.getTilePixelRatio(frameState.pixelRatio);\n\n    for (\n      let z = tileGrid.getZForResolution(viewState.resolution);\n      z >= tileGrid.getMinZoom();\n      --z\n    ) {\n      const tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n      const tile = this.getTile(z, tileCoord[1], tileCoord[2], frameState);\n      if (!tile || tile.getState() !== TileState.LOADED) {\n        continue;\n      }\n\n      const tileOrigin = tileGrid.getOrigin(z);\n      const tileSize = toSize(tileGrid.getTileSize(z));\n      const tileResolution = tileGrid.getResolution(z);\n\n      /**\n       * @type {import('../../DataTile.js').ImageLike}\n       */\n      let image;\n      if (tile instanceof ImageTile || tile instanceof ReprojTile) {\n        image = tile.getImage();\n      } else if (tile instanceof DataTile) {\n        image = asImageLike(tile.getData());\n        if (!image) {\n          continue;\n        }\n      } else {\n        continue;\n      }\n\n      const col = Math.floor(\n        tilePixelRatio *\n          ((coordinate[0] - tileOrigin[0]) / tileResolution -\n            tileCoord[1] * tileSize[0]),\n      );\n\n      const row = Math.floor(\n        tilePixelRatio *\n          ((tileOrigin[1] - coordinate[1]) / tileResolution -\n            tileCoord[2] * tileSize[1]),\n      );\n\n      const gutter = Math.round(\n        tilePixelRatio * source.getGutterForProjection(viewState.projection),\n      );\n\n      return this.getImageData(image, col + gutter, row + gutter);\n    }\n\n    return null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   * @override\n   */\n  prepareFrame(frameState) {\n    if (!this.renderedProjection) {\n      this.renderedProjection = frameState.viewState.projection;\n    } else if (frameState.viewState.projection !== this.renderedProjection) {\n      this.tileCache_.clear();\n      this.renderedProjection = frameState.viewState.projection;\n    }\n\n    const source = this.getLayer().getSource();\n    if (!source) {\n      return false;\n    }\n    const sourceRevision = source.getRevision();\n    if (!this.renderedSourceRevision_) {\n      this.renderedSourceRevision_ = sourceRevision;\n    } else if (this.renderedSourceRevision_ !== sourceRevision) {\n      this.renderedSourceRevision_ = sourceRevision;\n      if (this.renderedSourceKey_ === source.getKey()) {\n        this.tileCache_.clear();\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Determine whether tiles for next extent should be enqueued for rendering.\n   * @return {boolean} Rendering tiles for next extent is supported.\n   * @protected\n   */\n  enqueueTilesForNextExtent() {\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent The extent to be rendered.\n   * @param {number} initialZ The zoom level.\n   * @param {TileLookup} tilesByZ Lookup of tiles by zoom level.\n   * @param {number} preload Number of additional levels to load.\n   */\n  enqueueTiles(frameState, extent, initialZ, tilesByZ, preload) {\n    const viewState = frameState.viewState;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getRenderSource();\n    const tileGrid = tileSource.getTileGridForProjection(viewState.projection);\n\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n\n    const map = tileLayer.getMapInternal();\n    const minZ = Math.max(\n      initialZ - preload,\n      tileGrid.getMinZoom(),\n      tileGrid.getZForResolution(\n        Math.min(\n          tileLayer.getMaxResolution(),\n          map\n            ? map\n                .getView()\n                .getResolutionForZoom(Math.max(tileLayer.getMinZoom(), 0))\n            : tileGrid.getResolution(0),\n        ),\n        tileSource.zDirection,\n      ),\n    );\n    const rotation = viewState.rotation;\n    const viewport = rotation\n      ? getRotatedViewport(\n          viewState.center,\n          viewState.resolution,\n          rotation,\n          frameState.size,\n        )\n      : undefined;\n    for (let z = initialZ; z >= minZ; --z) {\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(\n        extent,\n        z,\n        this.tempTileRange_,\n      );\n\n      const tileResolution = tileGrid.getResolution(z);\n\n      for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (\n            rotation &&\n            !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n          ) {\n            continue;\n          }\n          const tile = this.getTile(z, x, y, frameState);\n          if (!tile) {\n            continue;\n          }\n          const added = addTileToLookup(tilesByZ, tile, z);\n          if (!added) {\n            continue;\n          }\n\n          const tileQueueKey = tile.getKey();\n          wantedTiles[tileQueueKey] = true;\n\n          if (tile.getState() === TileState.IDLE) {\n            if (!frameState.tileQueue.isKeyQueued(tileQueueKey)) {\n              const tileCoord = createTileCoord(z, x, y, this.tempTileCoord_);\n              frameState.tileQueue.enqueue([\n                tile,\n                tileSourceKey,\n                tileGrid.getTileCoordCenter(tileCoord),\n                tileResolution,\n              ]);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Look for tiles covering the provided tile coordinate at an alternate\n   * zoom level.  Loaded tiles will be added to the provided tile texture lookup.\n   * @param {import(\"../../tilecoord.js\").TileCoord} tileCoord The target tile coordinate.\n   * @param {TileLookup} tilesByZ Lookup of tiles by zoom level.\n   * @return {boolean} The tile coordinate is covered by loaded tiles at the alternate zoom level.\n   * @private\n   */\n  findStaleTile_(tileCoord, tilesByZ) {\n    const tileCache = this.tileCache_;\n    const z = tileCoord[0];\n    const x = tileCoord[1];\n    const y = tileCoord[2];\n    const staleKeys = this.getStaleKeys();\n    for (let i = 0; i < staleKeys.length; ++i) {\n      const cacheKey = getCacheKey(\n        this.getLayer().getSource(),\n        staleKeys[i],\n        z,\n        x,\n        y,\n      );\n      if (tileCache.containsKey(cacheKey)) {\n        const tile = tileCache.peek(cacheKey);\n        if (tile.getState() === TileState.LOADED) {\n          tile.endTransition(getUid(this));\n          addTileToLookup(tilesByZ, tile, z);\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Look for tiles covering the provided tile coordinate at an alternate\n   * zoom level.  Loaded tiles will be added to the provided tile texture lookup.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid The tile grid.\n   * @param {import(\"../../tilecoord.js\").TileCoord} tileCoord The target tile coordinate.\n   * @param {number} altZ The alternate zoom level.\n   * @param {TileLookup} tilesByZ Lookup of tiles by zoom level.\n   * @return {boolean} The tile coordinate is covered by loaded tiles at the alternate zoom level.\n   * @private\n   */\n  findAltTiles_(tileGrid, tileCoord, altZ, tilesByZ) {\n    const tileRange = tileGrid.getTileRangeForTileCoordAndZ(\n      tileCoord,\n      altZ,\n      this.tempTileRange_,\n    );\n\n    if (!tileRange) {\n      return false;\n    }\n\n    let covered = true;\n    const tileCache = this.tileCache_;\n    const source = this.getLayer().getRenderSource();\n    const sourceKey = source.getKey();\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        const cacheKey = getCacheKey(source, sourceKey, altZ, x, y);\n        let loaded = false;\n        if (tileCache.containsKey(cacheKey)) {\n          const tile = tileCache.peek(cacheKey);\n          if (tile.getState() === TileState.LOADED) {\n            addTileToLookup(tilesByZ, tile, altZ);\n            loaded = true;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * Render the layer.\n   *\n   * The frame rendering logic has three parts:\n   *\n   *  1. Enqueue tiles\n   *  2. Find alt tiles for those that are not yet loaded\n   *  3. Render loaded tiles\n   *\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   * @override\n   */\n  renderFrame(frameState, target) {\n    this.renderComplete = true;\n    /**\n     * TODO:\n     *  maybe skip transition when not fully opaque\n     *  decide if this.renderComplete is useful\n     */\n\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const viewResolution = viewState.resolution;\n    const viewCenter = viewState.center;\n    const pixelRatio = frameState.pixelRatio;\n\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n\n    const sourceKey = tileSource.getKey();\n    if (!this.renderedSourceKey_) {\n      this.renderedSourceKey_ = sourceKey;\n    } else if (this.renderedSourceKey_ !== sourceKey) {\n      this.prependStaleKey(this.renderedSourceKey_);\n      this.renderedSourceKey_ = sourceKey;\n    }\n\n    let frameExtent = frameState.extent;\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n\n    this.prepareContainer(frameState, target);\n\n    // desired dimensions of the canvas in pixels\n    const width = this.context.canvas.width;\n    const height = this.context.canvas.height;\n\n    const layerExtent =\n      layerState.extent && fromUserExtent(layerState.extent, projection);\n    if (layerExtent) {\n      frameExtent = getIntersection(\n        frameExtent,\n        fromUserExtent(layerState.extent, projection),\n      );\n    }\n\n    const dx = (tileResolution * width) / 2 / tilePixelRatio;\n    const dy = (tileResolution * height) / 2 / tilePixelRatio;\n    const canvasExtent = [\n      viewCenter[0] - dx,\n      viewCenter[1] - dy,\n      viewCenter[0] + dx,\n      viewCenter[1] + dy,\n    ];\n\n    /**\n     * @type {TileLookup}\n     */\n    const tilesByZ = {};\n\n    this.renderedTiles.length = 0;\n\n    /**\n     * Part 1: Enqueue tiles\n     */\n\n    const preload = tileLayer.getPreload();\n    if (frameState.nextExtent && this.enqueueTilesForNextExtent()) {\n      const targetZ = tileGrid.getZForResolution(\n        viewState.nextResolution,\n        tileSource.zDirection,\n      );\n      const nextExtent = getRenderExtent(frameState, frameState.nextExtent);\n      this.enqueueTiles(frameState, nextExtent, targetZ, tilesByZ, preload);\n    }\n\n    const renderExtent = getRenderExtent(frameState, frameExtent);\n    this.enqueueTiles(frameState, renderExtent, z, tilesByZ, 0);\n    if (preload > 0) {\n      setTimeout(() => {\n        this.enqueueTiles(\n          frameState,\n          renderExtent,\n          z - 1,\n          tilesByZ,\n          preload - 1,\n        );\n      }, 0);\n    }\n\n    if (!(z in tilesByZ)) {\n      return this.container;\n    }\n\n    /**\n     * Part 2: Find alt tiles for those that are not yet loaded\n     */\n\n    const uid = getUid(this);\n    const time = frameState.time;\n\n    // look for cached tiles to use if a target tile is not ready\n    for (const tile of tilesByZ[z]) {\n      const tileState = tile.getState();\n      if (tileState === TileState.EMPTY) {\n        continue;\n      }\n      const tileCoord = tile.tileCoord;\n\n      if (tileState === TileState.LOADED) {\n        const alpha = tile.getAlpha(uid, time);\n        if (alpha === 1) {\n          // no need to look for alt tiles\n          tile.endTransition(uid);\n          continue;\n        }\n      }\n      if (tileState !== TileState.ERROR) {\n        this.renderComplete = false;\n      }\n\n      const hasStaleTile = this.findStaleTile_(tileCoord, tilesByZ);\n      if (hasStaleTile) {\n        // use the stale tile before the new tile's transition has completed\n        removeTileFromLookup(tilesByZ, tile, z);\n        frameState.animate = true;\n        continue;\n      }\n\n      // first look for child tiles (at z + 1)\n      const coveredByChildren = this.findAltTiles_(\n        tileGrid,\n        tileCoord,\n        z + 1,\n        tilesByZ,\n      );\n\n      if (coveredByChildren) {\n        continue;\n      }\n\n      // next look for parent tiles\n      const minZoom = tileGrid.getMinZoom();\n      for (let parentZ = z - 1; parentZ >= minZoom; --parentZ) {\n        const coveredByParent = this.findAltTiles_(\n          tileGrid,\n          tileCoord,\n          parentZ,\n          tilesByZ,\n        );\n\n        if (coveredByParent) {\n          break;\n        }\n      }\n    }\n\n    /**\n     * Part 3: Render loaded tiles\n     */\n\n    const canvasScale =\n      ((tileResolution / viewResolution) * pixelRatio) / tilePixelRatio;\n\n    const context = this.getRenderContext(frameState);\n\n    // set scale transform for calculating tile positions on the canvas\n    composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      canvasScale,\n      canvasScale,\n      0,\n      -width / 2,\n      -height / 2,\n    );\n\n    if (layerState.extent) {\n      this.clipUnrotated(context, frameState, layerExtent);\n    }\n\n    if (!tileSource.getInterpolate()) {\n      context.imageSmoothingEnabled = false;\n    }\n\n    this.preRender(context, frameState);\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(tilesByZ).map(Number);\n    zs.sort(ascending);\n\n    let currentClip;\n    const clips = [];\n    const clipZs = [];\n    for (let i = zs.length - 1; i >= 0; --i) {\n      const currentZ = zs[i];\n      const currentTilePixelSize = tileSource.getTilePixelSize(\n        currentZ,\n        pixelRatio,\n        projection,\n      );\n      const currentResolution = tileGrid.getResolution(currentZ);\n      const currentScale = currentResolution / tileResolution;\n      const dx = currentTilePixelSize[0] * currentScale * canvasScale;\n      const dy = currentTilePixelSize[1] * currentScale * canvasScale;\n      const originTileCoord = tileGrid.getTileCoordForCoordAndZ(\n        getTopLeft(canvasExtent),\n        currentZ,\n      );\n      const originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n      const origin = applyTransform(this.tempTransform, [\n        (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n          tileResolution,\n        (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n          tileResolution,\n      ]);\n      const tileGutter =\n        tilePixelRatio * tileSource.getGutterForProjection(projection);\n      for (const tile of tilesByZ[currentZ]) {\n        if (tile.getState() !== TileState.LOADED) {\n          continue;\n        }\n        const tileCoord = tile.tileCoord;\n\n        // Calculate integer positions and sizes so that tiles align\n        const xIndex = originTileCoord[1] - tileCoord[1];\n        const nextX = Math.round(origin[0] - (xIndex - 1) * dx);\n        const yIndex = originTileCoord[2] - tileCoord[2];\n        const nextY = Math.round(origin[1] - (yIndex - 1) * dy);\n        const x = Math.round(origin[0] - xIndex * dx);\n        const y = Math.round(origin[1] - yIndex * dy);\n        const w = nextX - x;\n        const h = nextY - y;\n        const transition = zs.length === 1;\n\n        let contextSaved = false;\n\n        // Clip mask for regions in this tile that already filled by a higher z tile\n        currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n        for (let i = 0, ii = clips.length; i < ii; ++i) {\n          if (!transition && currentZ < clipZs[i]) {\n            const clip = clips[i];\n            if (\n              intersects(\n                [x, y, x + w, y + h],\n                [clip[0], clip[3], clip[4], clip[7]],\n              )\n            ) {\n              if (!contextSaved) {\n                context.save();\n                contextSaved = true;\n              }\n              context.beginPath();\n              // counter-clockwise (outer ring) for current tile\n              context.moveTo(currentClip[0], currentClip[1]);\n              context.lineTo(currentClip[2], currentClip[3]);\n              context.lineTo(currentClip[4], currentClip[5]);\n              context.lineTo(currentClip[6], currentClip[7]);\n              // clockwise (inner ring) for higher z tile\n              context.moveTo(clip[6], clip[7]);\n              context.lineTo(clip[4], clip[5]);\n              context.lineTo(clip[2], clip[3]);\n              context.lineTo(clip[0], clip[1]);\n              context.clip();\n            }\n          }\n        }\n        clips.push(currentClip);\n        clipZs.push(currentZ);\n\n        this.drawTile(tile, frameState, x, y, w, h, tileGutter, transition);\n        if (contextSaved) {\n          context.restore();\n        }\n        this.renderedTiles.unshift(tile);\n\n        // TODO: decide if this is necessary\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n      }\n    }\n\n    this.renderedResolution = tileResolution;\n    this.extentChanged =\n      !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n    this.renderedExtent_ = canvasExtent;\n    this.renderedPixelRatio = pixelRatio;\n\n    this.postRender(this.context, frameState);\n\n    if (layerState.extent) {\n      context.restore();\n    }\n    context.imageSmoothingEnabled = true;\n\n    if (this.renderComplete) {\n      /**\n       * @param {import(\"../../Map.js\").default} map Map.\n       * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n       */\n      const postRenderFunction = (map, frameState) => {\n        const tileSourceKey = getUid(tileSource);\n        const wantedTiles = frameState.wantedTiles[tileSourceKey];\n        const tilesCount = wantedTiles ? Object.keys(wantedTiles).length : 0;\n        this.updateCacheSize(tilesCount);\n        this.tileCache_.expireCache();\n      };\n\n      frameState.postRenderFunctions.push(postRenderFunction);\n    }\n\n    // this normally is `div.ol-layer` and is a mocked div in worker\n    return this.container;\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   */\n  updateCacheSize(tileCount) {\n    this.tileCache_.highWaterMark = Math.max(\n      this.tileCache_.highWaterMark,\n      tileCount * 2,\n    );\n  }\n\n  /**\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   * @protected\n   */\n  drawTile(tile, frameState, x, y, w, h, gutter, transition) {\n    let image;\n    if (tile instanceof DataTile) {\n      image = asImageLike(tile.getData());\n      if (!image) {\n        throw new Error('Rendering array data is not yet supported');\n      }\n    } else {\n      image = this.getTileImage(\n        /** @type {import(\"../../ImageTile.js\").default} */ (tile),\n      );\n    }\n\n    if (!image) {\n      return;\n    }\n    const context = this.getRenderContext(frameState);\n    const uid = getUid(this);\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const alpha =\n      layerState.opacity *\n      (transition ? tile.getAlpha(uid, frameState.time) : 1);\n    const alphaChanged = alpha !== context.globalAlpha;\n    if (alphaChanged) {\n      context.save();\n      context.globalAlpha = alpha;\n    }\n    context.drawImage(\n      image,\n      gutter,\n      gutter,\n      image.width - 2 * gutter,\n      image.height - 2 * gutter,\n      x,\n      y,\n      w,\n      h,\n    );\n\n    if (alphaChanged) {\n      context.restore();\n    }\n    if (alpha !== layerState.opacity) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement|OffscreenCanvas} Image\n   */\n  getImage() {\n    const context = this.context;\n    return context ? context.canvas : null;\n  }\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|OffscreenCanvas|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  getTileImage(tile) {\n    return tile.getImage();\n  }\n\n  /**\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import('../../Tile.js').default} tile Tile.\n   * @protected\n   */\n  updateUsedTiles(usedTiles, tileSource, tile) {\n    // FIXME should we use tilesToDrawByZ instead?\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in usedTiles)) {\n      usedTiles[tileSourceKey] = {};\n    }\n    usedTiles[tileSourceKey][tile.getKey()] = true;\n  }\n}\n\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n","/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *   import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} BaseTileLayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {TileSourceType} [source] Source for this layer.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../Map.js\").default#addLayer map.addLayer()}.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [useInterimTilesOnError=true] Deprecated.  Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n * @property {number} [cacheSize=512] The internal tile cache size.  This needs to be large enough to render\n * two zoom levels worth of tiles.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @template {import(\"../renderer/Layer.js\").default} RendererType\n * @extends {Layer<TileSourceType, RendererType>}\n * @api\n */\nclass BaseTileLayer extends Layer {\n  /**\n   * @param {Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    const cacheSize = options.cacheSize;\n    delete options.cacheSize;\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    super(baseOptions);\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.cacheSize_ = cacheSize;\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true,\n    );\n  }\n\n  /**\n   * @return {number|undefined} The suggested cache size\n   * @protected\n   */\n  getCacheSize() {\n    return this.cacheSize_;\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Deprecated.  Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Deprecated.  Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n\n  /**\n   * Get data for a pixel location.  The return type depends on the source data.  For image tiles,\n   * a four element RGBA array will be returned.  For data tiles, the array length will match the\n   * number of bands in the dataset.  For requests outside the layer extent, `null` will be returned.\n   * Data for a image tiles can only be retrieved if the source's `crossOrigin` property is set.\n   *\n   * ```js\n   * // display layer data on every pointer move\n   * map.on('pointermove', (event) => {\n   *   console.log(layer.getData(event.pixel));\n   * });\n   * ```\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   * @api\n   * @override\n   */\n  getData(pixel) {\n    return super.getData(pixel);\n  }\n}\n\nexport default BaseTileLayer;\n","/**\n * @module ol/layer/Tile\n */\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\nimport BaseTileLayer from './BaseTile.js';\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} [TileSourceType=import(\"../source/Tile.js\").default]\n * @extends BaseTileLayer<TileSourceType, CanvasTileLayerRenderer>\n * @api\n */\nclass TileLayer extends BaseTileLayer {\n  /**\n   * @param {import(\"./BaseTile.js\").Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  /**\n   * @override\n   */\n  createRenderer() {\n    return new CanvasTileLayerRenderer(this, {\n      cacheSize: this.getCacheSize(),\n    });\n  }\n}\n\nexport default TileLayer;\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, {\n  createOrUpdate as createOrUpdateTileRange,\n} from '../TileRange.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {assert} from '../asserts.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {intersectsLinearRing} from '../geom/flat/intersectsextent.js';\nimport {ceil, clamp, floor} from '../math.js';\nimport {toSize} from '../size.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\nimport {DEFAULT_TILE_SIZE} from './common.js';\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nconst DECIMALS = 5;\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile~TileSource} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<number|import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(\n      isSorted(\n        this.resolutions_,\n        /**\n         * @param {number} a First resolution\n         * @param {number} b Second resolution\n         * @return {number} Comparison result\n         */\n        (a, b) => b - a,\n        true,\n      ),\n      '`resolutions` must be sorted in descending order',\n    );\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(\n        this.origins_.length == this.resolutions_.length,\n        'Number of `origins` and `resolutions` must be equal',\n      );\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined && !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      'Either `origin` or `origins` must be configured, never both',\n    );\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(\n        this.tileSizes_.length == this.resolutions_.length,\n        'Number of `tileSizes` and `resolutions` must be equal',\n      );\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ =\n      options.tileSize !== undefined\n        ? options.tileSize\n        : !this.tileSizes_\n          ? DEFAULT_TILE_SIZE\n          : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      'Either `tileSize` or `tileSizes` must be configured, never both',\n    );\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = [0, 0, 0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map((size, z) => {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]),\n          Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]),\n          Math.max(size[1] - 1, -1),\n        );\n        if (extent) {\n          const restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n          tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n          tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n          tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n          tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n        }\n        return tileRange;\n      });\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(\n    tileCoord,\n    callback,\n    tempTileRange,\n    tempExtent,\n  ) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, tempExtent);\n    }\n    while (z >= this.minZoom) {\n      if (x !== undefined && y !== undefined) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, tempTileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(\n          tileCoordExtent,\n          z,\n          tempTileRange,\n        );\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    return this.origins_[z];\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, tempTileRange, tempExtent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(\n          minX,\n          minX + 1,\n          minY,\n          minY + 1,\n          tempTileRange,\n        );\n      }\n      const tileCoordExtent = this.getTileCoordExtent(\n        tileCoord,\n        tempExtent || this.tmpExtent_,\n      );\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent,\n        tileCoord[0] + 1,\n        tempTileRange,\n      );\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileRangeForTileCoordAndZ(tileCoord, z, tempTileRange) {\n    if (z > this.maxZoom || z < this.minZoom) {\n      return null;\n    }\n\n    const tileCoordZ = tileCoord[0];\n    const tileCoordX = tileCoord[1];\n    const tileCoordY = tileCoord[2];\n\n    if (z === tileCoordZ) {\n      return createOrUpdateTileRange(\n        tileCoordX,\n        tileCoordY,\n        tileCoordX,\n        tileCoordY,\n        tempTileRange,\n      );\n    }\n\n    if (this.zoomFactor_) {\n      const factor = Math.pow(this.zoomFactor_, z - tileCoordZ);\n      const minX = Math.floor(tileCoordX * factor);\n      const minY = Math.floor(tileCoordY * factor);\n      if (z < tileCoordZ) {\n        return createOrUpdateTileRange(minX, minX, minY, minY, tempTileRange);\n      }\n\n      const maxX = Math.floor(factor * (tileCoordX + 1)) - 1;\n      const maxY = Math.floor(factor * (tileCoordY + 1)) - 1;\n      return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n    }\n\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    return this.getTileRangeForExtentAndZ(tileCoordExtent, z, tempTileRange);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, tempTileRange) {\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tmpTileCoord);\n    const minX = tmpTileCoord[1];\n    const minY = tmpTileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tmpTileCoord);\n    const maxX = tmpTileCoord[1];\n    const maxY = tmpTileCoord[2];\n    return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, tempExtent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, tempExtent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0],\n      coordinate[1],\n      resolution,\n      false,\n      opt_tileCoord,\n    );\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(\n    x,\n    y,\n    resolution,\n    reverseIntersectionPolicy,\n    opt_tileCoord,\n  ) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (scale * (x - origin[0])) / resolution / tileSize[0];\n    let tileCoordY = (scale * (origin[1] - y)) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (x - origin[0]) / resolution / tileSize[0];\n    let tileCoordY = (origin[1] - y) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Integer zoom level, e.g. the result of a `getZForResolution()` method call\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0],\n      coordinate[1],\n      z,\n      false,\n      opt_tileCoord,\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an {@link import(\"../size.js\").Size}, run the result through {@link module:ol/size.toSize}.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    }\n    return this.tileSizes_[z];\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default|null} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return this.extent_\n        ? this.getTileRangeForExtentAndZ(this.extent_, z)\n        : null;\n    }\n    return this.fullTileRanges_[z];\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number|import(\"../array.js\").NearestDirectionFunction} [opt_direction]\n   *     If 0, the nearest resolution will be used.\n   *     If 1, the nearest higher resolution (lower Z) will be used. If -1, the\n   *     nearest lower resolution (higher Z) will be used. Default is 0.\n   *     Use a {@link module:ol/array~NearestDirectionFunction} for more precise control.\n   *\n   * For example to change tile Z at the midpoint of zoom levels\n   * ```js\n   * function(value, high, low) {\n   *   return value - low * Math.sqrt(high / low);\n   * }\n   * ```\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(\n      this.resolutions_,\n      resolution,\n      opt_direction || 0,\n    );\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * The tile with the provided tile coordinate intersects the given viewport.\n   * @param {import('../tilecoord.js').TileCoord} tileCoord Tile coordinate.\n   * @param {Array<number>} viewport Viewport as returned from {@link module:ol/extent.getRotatedViewport}.\n   * @return {boolean} The tile with the provided tile coordinate intersects the given viewport.\n   */\n  tileCoordIntersectsViewport(tileCoord, viewport) {\n    return intersectsLinearRing(\n      viewport,\n      0,\n      viewport.length,\n      2,\n      this.getTileCoordExtent(tileCoord),\n    );\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\nexport default TileGrid;\n","/**\n * @module ol/tilegrid\n */\nimport {\n  containsCoordinate,\n  createOrUpdate,\n  getCorner,\n  getHeight,\n  getWidth,\n} from './extent.js';\nimport {METERS_PER_UNIT, get as getProjection} from './proj.js';\nimport {toSize} from './size.js';\nimport TileGrid from './tilegrid/TileGrid.js';\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\n\nexport {TileGrid};\nexport {default as WMTS} from './tilegrid/WMTS.js';\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil(\n      (projectionExtent[0] - center[0]) / worldWidth,\n    );\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  }\n  return tileCoord;\n}\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, maxZoom, tileSize, corner) {\n  corner = corner !== undefined ? corner : 'top-left';\n\n  const resolutions = resolutionsFromExtent(extent, maxZoom, tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: tileSize,\n  });\n}\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions} [options] Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(options) {\n  const xyzOptions = options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize,\n      xyzOptions.maxResolution,\n    ),\n  };\n  return new TileGrid(gridOptions);\n}\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number} [maxResolution] Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, maxZoom, tileSize, maxResolution) {\n  maxZoom = maxZoom !== undefined ? maxZoom : DEFAULT_MAX_ZOOM;\n  tileSize = toSize(tileSize !== undefined ? tileSize : DEFAULT_TILE_SIZE);\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  maxResolution =\n    maxResolution > 0\n      ? maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, maxZoom, tileSize, corner) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, maxZoom, tileSize, corner);\n}\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half =\n      (180 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/uri\n */\n\nimport {modulo} from './math.js';\nimport {hashZXY} from './tilecoord.js';\n\n/**\n * Appends query parameters to a URI.\n *\n * @param {string} uri The original URI, which may already have query data.\n * @param {!Object} params An object where keys are URI-encoded parameter keys,\n *     and the values are arbitrary types or arrays.\n * @return {string} The new URI.\n */\nexport function appendParams(uri, params) {\n  /** @type {Array<string>} */\n  const keyParams = [];\n  // Skip any null or undefined parameter values\n  Object.keys(params).forEach(function (k) {\n    if (params[k] !== null && params[k] !== undefined) {\n      keyParams.push(k + '=' + encodeURIComponent(params[k]));\n    }\n  });\n  const qs = keyParams.join('&');\n  // remove any trailing ? or &\n  uri = uri.replace(/[?&]$/, '');\n  // append ? or & depending on whether uri has existing parameters\n  uri += uri.includes('?') ? '&' : '?';\n  return uri + qs;\n}\n\nconst zRegEx = /\\{z\\}/g;\nconst xRegEx = /\\{x\\}/g;\nconst yRegEx = /\\{y\\}/g;\nconst dashYRegEx = /\\{-y\\}/g;\n\n/**\n * @param {string} template The URL template.  Should have `{x}`, `{y}`, and `{z}` placeholders.  If\n * the template has a `{-y}` placeholder, the `maxY` parameter must be supplied.\n * @param {number} z The tile z coordinate.\n * @param {number} x The tile x coordinate.\n * @param {number} y The tile y coordinate.\n * @param {number} [maxY] The maximum y coordinate at the given z level.\n * @return {string} The URL.\n */\nexport function renderXYZTemplate(template, z, x, y, maxY) {\n  return template\n    .replace(zRegEx, z.toString())\n    .replace(xRegEx, x.toString())\n    .replace(yRegEx, y.toString())\n    .replace(dashYRegEx, function () {\n      if (maxY === undefined) {\n        throw new Error(\n          'If the URL template has a {-y} placeholder, the grid extent must be known',\n        );\n      }\n      return (maxY - y).toString();\n    });\n}\n\n/**\n * @param {Array<string>} urls List of URLs.\n * @param {number} z The tile z coordinate.\n * @param {number} x The tile x coordinate.\n * @param {number} y The tile y coordinate.\n * @return {string} The chosen URL.\n */\nexport function pickUrl(urls, z, x, y) {\n  const hash = hashZXY(z, x, y);\n  const index = modulo(hash, urls.length);\n  return urls[index];\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","/**\n * @module ol/tileurlfunction\n */\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\nimport {renderXYZTemplate} from './uri.js';\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default|null} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      let maxY;\n      const z = tileCoord[0];\n      if (tileGrid) {\n        // The `{-y}` placeholder only works for sources that have a tile grid at construction\n        const range = tileGrid.getFullTileRange(z);\n        if (range) {\n          maxY = range.getHeight() - 1;\n        }\n      }\n      return renderXYZTemplate(template, z, tileCoord[1], tileCoord[2], maxY);\n    }\n  );\n}\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      const h = tileCoordHash(tileCoord);\n      const index = modulo(h, tileUrlFunctions.length);\n      return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n    }\n  );\n}\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {'undefined' | 'loading' | 'ready' | 'error'} State\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\n\n/**\n * A function that takes a {@link import(\"../View.js\").ViewStateLayerStateExtent} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../View.js\").ViewStateLayerStateExtent): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * a simple string (e.g. `'© Acme Inc.'`)\n * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./Source.js\").State} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|null}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ = options.attributionsCollapsible ?? true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./Source.js\").State}\n     */\n    this.state_ = options.state !== undefined ? options.state : 'ready';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = !!options.interpolate;\n\n    /**\n     * @protected\n     * @type {function(import(\"../View.js\").ViewOptions):void}\n     */\n    this.viewResolver = null;\n\n    /**\n     * @protected\n     * @type {function(Error):void}\n     */\n    this.viewRejector = null;\n\n    const self = this;\n    /**\n     * @private\n     * @type {Promise<import(\"../View.js\").ViewOptions>}\n     */\n    this.viewPromise_ = new Promise(function (resolve, reject) {\n      self.viewResolver = resolve;\n      self.viewRejector = reject;\n    });\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   * @api\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   * @api\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default|null} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    return null;\n  }\n\n  /**\n   * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n   */\n  getView() {\n    return this.viewPromise_;\n  }\n\n  /**\n   * Get the state of the source, see {@link import(\"./Source.js\").State} for possible states.\n   * @return {import(\"./Source.js\").State} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {boolean} Use linear interpolation when resampling.\n   */\n  getInterpolate() {\n    return this.interpolate_;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./Source.js\").State} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {Attribution|null} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n  if (!Array.isArray(attributionLike)) {\n    attributionLike = [attributionLike];\n  }\n  return (frameState) => attributionLike;\n}\n\nexport default Source;\n","/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport {scale as scaleSize, toSize} from '../size.js';\nimport {withinExtentAndZ} from '../tilecoord.js';\nimport {\n  getForProjection as getTileGridForProjection,\n  wrapX,\n} from '../tilegrid.js';\nimport {abstract, getUid} from '../util.js';\nimport Source from './Source.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./TileEventType\").TileSourceEventTypes, TileSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./TileEventType\").TileSourceEventTypes, Return>} TileSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Deprecated.  Use the cacheSize option on the layer instead.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n *\n * @template {import(\"../Tile.js\").default} [TileType=import(\"../Tile.js\").default]\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX,\n      interpolate: options.interpolate,\n    });\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {TileSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ =\n      options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n\n    /**\n     * @type {import(\"../tilegrid/TileGrid.js\").default|null}\n     * @protected\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    const tileSize = [256, 256];\n    if (this.tileGrid) {\n      toSize(this.tileGrid.getTileSize(this.tileGrid.getMinZoom()), tileSize);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || getUid(this);\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    };\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number|import(\"../array.js\").NearestDirectionFunction}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   * @override\n   */\n  getResolutions(projection) {\n    const tileGrid = projection\n      ? this.getTileGridForProjection(projection)\n      : this.tileGrid;\n    if (!tileGrid) {\n      return null;\n    }\n    return tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {TileType|null} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default|null} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    }\n    return this.tileGrid;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    }\n    return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, projection) {\n    const gridProjection =\n      projection !== undefined ? projection : this.getProjection();\n    const tileGrid =\n      projection !== undefined\n        ? this.getTileGridForProjection(gridProjection)\n        : this.tileGrid || this.getTileGridForProjection(gridProjection);\n    if (this.getWrapX() && gridProjection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, gridProjection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached reprojected tiles from the source. The next render cycle will create new tiles.\n   * @api\n   */\n  clear() {}\n\n  /**\n   * @override\n   */\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n}\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n  }\n}\n\nexport default TileSource;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error. Note that this is not the\n   * right place to re-fetch tiles. See {@link module:ol/ImageTile~ImageTile#load}\n   * for details.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n\n/**\n * @typedef {'tileloadstart'|'tileloadend'|'tileloaderror'} TileSourceEventTypes\n */\n","/**\n * @module ol/source/UrlTile\n */\nimport TileState from '../TileState.js';\nimport {createFromTemplates} from '../tileurlfunction.js';\nimport {expandUrl} from '../uri.js';\nimport {getUid} from '../util.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileEventType from './TileEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Deprecated.  Use the cacheSize option on the layer instead.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Deprecated.  Use an ImageTile source and provide a function\n * for the url option instead.\n * @property {string} [url] Url.\n * @property {Array<string>} [urls] Urls.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @deprecated Use the ol/source/ImageTile.js instead.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate: options.interpolate,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ =\n      this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    if (options.tileUrlFunction) {\n      this.tileUrlFunction = options.tileUrlFunction;\n    }\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n      ? this.tileUrlFunction.bind(this)\n      : this.tileUrlFunction;\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n            ? TileEventType.TILELOADEND\n            : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string} [key] Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = expandUrl(url);\n    this.urls = urls;\n    this.setUrls(urls);\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string|undefined} Tile URL.\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n  }\n}\n\nexport default UrlTile;\n","/**\n * @module ol/source/TileImage\n */\nimport ImageTile from '../ImageTile.js';\nimport TileState from '../TileState.js';\nimport EventType from '../events/EventType.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\nimport {getUid} from '../util.js';\nimport UrlTile from './UrlTile.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Deprecated.  Use the cacheSize option on the layer instead.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./Source.js\").State} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Deprecated.  Use an ImageTile source and provide a function\n * for the url option instead.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @deprecated Use the ol/source/ImageTile.js instead.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass TileImage extends UrlTile {\n  /**\n   * @param {!Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate:\n        options.interpolate !== undefined ? options.interpolate : true,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass =\n      options.tileClass !== undefined ? options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   * @override\n   */\n  getGutterForProjection(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return 0;\n    }\n    return this.getGutter();\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   * @override\n   */\n  getKey() {\n    let key = super.getKey();\n    if (!this.getInterpolate()) {\n      key += ':disable-interpolation';\n    }\n    return key;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   * @override\n   */\n  getTileGridForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    }\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileGridForProjection)) {\n      this.tileGridForProjection[projKey] =\n        getTileGridForProjection(projection);\n    }\n    return this.tileGridForProjection[projKey];\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!ImageTile} Tile.\n   * @private\n   */\n  createTile_(z, x, y, pixelRatio, projection, key) {\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection,\n    );\n    const tileUrl = urlTileCoord\n      ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n      : undefined;\n    const tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions,\n    );\n    tile.key = key;\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!(ImageTile|ReprojTile)} Tile.\n   * @override\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      return this.getTileInternal(\n        z,\n        x,\n        y,\n        pixelRatio,\n        sourceProjection || projection,\n      );\n    }\n    const tileCoord = [z, x, y];\n    const key = this.getKey();\n    const sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n    const targetTileGrid = this.getTileGridForProjection(projection);\n    const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection,\n    );\n    const tile = new ReprojTile(\n      sourceProjection,\n      sourceTileGrid,\n      projection,\n      targetTileGrid,\n      tileCoord,\n      wrappedTileCoord,\n      this.getTilePixelRatio(pixelRatio),\n      this.getGutter(),\n      (z, x, y, pixelRatio) =>\n        this.getTileInternal(z, x, y, pixelRatio, sourceProjection),\n      this.reprojectionErrorThreshold_,\n      this.renderReprojectionEdges_,\n      this.tileOptions,\n    );\n    tile.key = key;\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!ImageTile} Tile.\n   * @protected\n   */\n  getTileInternal(z, x, y, pixelRatio, projection) {\n    const key = this.getKey();\n    return this.createTile_(z, x, y, pixelRatio, projection, key);\n  }\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  setRenderReprojectionEdges(render) {\n    if (this.renderReprojectionEdges_ == render) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    this.changed();\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    const proj = getProjection(projection);\n    if (proj) {\n      const projKey = getUid(proj);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] = tilegrid;\n      }\n    }\n  }\n}\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nexport function defaultTileLoadFunction(imageTile, src) {\n  if (WORKER_OFFSCREEN_CANVAS) {\n    // special treatment for offscreen canvas\n    const crossOrigin = imageTile.getCrossOrigin();\n\n    /** @type {RequestMode} */\n    let mode = 'same-origin';\n    /** @type {RequestCredentials} */\n    let credentials = 'same-origin';\n    if (crossOrigin === 'anonymous' || crossOrigin === '') {\n      mode = 'cors';\n      credentials = 'omit';\n    } else if (crossOrigin === 'use-credentials') {\n      mode = 'cors';\n      credentials = 'include';\n    }\n\n    fetch(src, {\n      mode,\n      credentials,\n    })\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error(`HTTP ${response.status}`);\n        }\n        return response.blob();\n      })\n      .then((blob) => {\n        return createImageBitmap(blob);\n      })\n      .then((imageBitmap) => {\n        const canvas = imageTile.getImage();\n        canvas.width = imageBitmap.width;\n        canvas.height = imageBitmap.height;\n        const ctx = /** @type {OffscreenCanvas} */ (canvas).getContext('2d');\n        ctx.drawImage(imageBitmap, 0, 0);\n        imageBitmap.close?.();\n        // mock the image 'load' event\n        canvas.dispatchEvent(new Event('load'));\n      })\n      .catch(() => {\n        const canvas = imageTile.getImage();\n        canvas.dispatchEvent(new Event('error'));\n      });\n    return;\n  }\n\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src =\n    src;\n}\n\nexport default TileImage;\n","/**\n * @module ol/source/XYZ\n */\n\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\nimport TileImage from './TileImage.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Deprecated.  Use the cacheSize option on the layer instead.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Deprecated.  Use an ImageTile source with a loader\n * instead.  Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Not used if `tileGrid` is provided.\n * @property {number} [gutter=0] The size in pixels of the gutter around image tiles to ignore.\n * This allows artifacts of rendering at tile edges to be ignored.\n * Supported images should be wider and taller than the tile size by a value of `2 x gutter`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Deprecated.  Use an ImageTile source and provide a function\n * for the url option instead.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] Deprecated.  Use an ImageTile source and provide an array of URLs for the\n * url option instead.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case\n * a `tileUrlFunction` can be used, such as:\n * ```js\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *      coordinate[1] + '/' + (-coordinate[2] - 1) + '.png';\n *  }\n * ```\n * @api\n */\nclass XYZ extends TileImage {\n  /**\n   * @param {Options} [options] XYZ options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    const projection =\n      options.projection !== undefined ? options.projection : 'EPSG:3857';\n\n    const tileGrid =\n      options.tileGrid !== undefined\n        ? options.tileGrid\n        : createXYZ({\n            extent: extentFromProjection(projection),\n            maxResolution: options.maxResolution,\n            maxZoom: options.maxZoom,\n            minZoom: options.minZoom,\n            tileSize: options.tileSize,\n          });\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      projection: projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n  }\n\n  /**\n   * @return {number} Gutter.\n   * @override\n   */\n  getGutter() {\n    return this.gutter_;\n  }\n}\n\nexport default XYZ;\n","/**\n * @module ol/source/OSM\n */\n\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {defaultTileLoadFunction} from './TileImage.js';\nimport XYZ from './XYZ.js';\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nexport const ATTRIBUTION =\n  '&#169; ' +\n  '<a href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\">OpenStreetMap</a> ' +\n  'contributors.';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Deprecated.  Use the cacheSize option on the layer instead.\n * @property {null|string} [crossOrigin='anonymous'] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {number} [maxZoom=19] Max zoom.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [url='https://tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n * @api\n */\nclass OSM extends XYZ {\n  /**\n   * @param {Options} [options] Open Street Map options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    let attributions;\n    if (options.attributions !== undefined) {\n      attributions = options.attributions;\n    } else {\n      attributions = [ATTRIBUTION];\n    }\n\n    const crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : 'anonymous';\n\n    const url =\n      options.url !== undefined\n        ? options.url\n        : 'https://tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n    super({\n      attributions: attributions,\n      attributionsCollapsible: false,\n      cacheSize: options.cacheSize,\n      crossOrigin: crossOrigin,\n      interpolate: options.interpolate,\n      maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction:\n        /**\n         * @param {import(\"../ImageTile.js\").default} tile Image tile\n         * @param {string} src Image src\n         */\n        (tile, src) => {\n          const image = tile.getImage();\n          // FIXME referrer policy for worker fetch requests\n          if (!WORKER_OFFSCREEN_CANVAS && image instanceof HTMLImageElement) {\n            image.referrerPolicy = 'origin-when-cross-origin';\n          }\n          (options.tileLoadFunction || defaultTileLoadFunction)(tile, src);\n        },\n      transition: options.transition,\n      url: url,\n      wrapX: options.wrapX,\n      zDirection: options.zDirection,\n    });\n  }\n}\n\nexport default OSM;\n","import Map from '../src/ol/Map.js';\nimport View from '../src/ol/View.js';\nimport TileLayer from '../src/ol/layer/Tile.js';\nimport OSM from '../src/ol/source/OSM.js';\nimport {createXYZ} from '../src/ol/tilegrid.js';\n\nconst worker = self;\n\nconst tileGrid = createXYZ({\n  tileSize: [512, 512],\n});\n\nconst canvas = new OffscreenCanvas(512, 512);\n\nconst map = new Map({\n  target: canvas,\n  layers: [\n    new TileLayer({\n      source: new OSM({\n        // No need to fade in tiles in the worker\n        transition: 0,\n      }),\n    }),\n  ],\n});\n\nworker.addEventListener('message', async ({data: {action, tile}}) => {\n  if (action !== 'render') {\n    return;\n  }\n  const view = new View({\n    center: tileGrid.getTileCoordCenter(tile),\n    resolution: tileGrid.getResolution(tile[0]),\n  });\n  map.setView(view);\n  map.once('rendercomplete', () => {\n    const imageData = canvas.transferToImageBitmap();\n    worker.postMessage({action: 'rendered', imageData: imageData}, [imageData]);\n  });\n});\n"],"names":["constructor","this","disposed","dispose","disposeInternal","ascending","a","b","linearFindNearest","arr","target","direction","n","length","i","candidate","equals","arr1","arr2","len1","TRUE","VOID","toPromise","getter","value","err","Promise","reject","resolve","promiseGetter","clear","object","property","type","propagationStopped","defaultPrevented","preventDefault","stopPropagation","super","eventTarget_","pendingRemovals_","dispatching_","listeners_","addEventListener","listener","listeners","listenersForType","includes","push","dispatchEvent","event","isString","evt","dispatching","pendingRemovals","propagate","ii","handleEvent","call","pr","removeEventListener","getListeners","undefined","hasListener","Object","keys","index","indexOf","splice","listen","thisArg","once","originalListener","bind","eventsKey","listenOnce","unlistenByKey","key","Observable","on","un","revision_","changed","EventType","getRevision","onInternal","Array","isArray","len","onceInternal","ol_key","unInternal","unByKey","prototype","Error","uidCounter_","getUid","obj","ol_uid","String","ObjectEvent","oldValue","values","values_","setProperties","get","hasOwnProperty","getKeys","getProperties","assign","getPropertiesInternal","hasProperties","notify","eventType","ObjectEventType","addChangeListener","removeChangeListener","set","silent","applyProperties","source","unset","Property","CollectionEvent","element","array","options","unique_","unique","array_","assertUnique_","updateLength_","getLength","pop","extend","forEach","f","getArray","item","insertAt","elem","CollectionEventType","removeAt","remove","prev","setAt","except","map","frameState","originalEvent","dragging","activePointers","pixel_","coordinate_","pixel","getEventPixel","coordinate","getCoordinateFromPixel","SINGLECLICK","CLICK","DBLCLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","ua","navigator","userAgent","toLowerCase","WEBKIT","test","DEVICE_PIXEL_RATIO","devicePixelRatio","WORKER_OFFSCREEN_CANVAS","WorkerGlobalScope","OffscreenCanvas","self","Image","decode","PASSIVE_EVENT_LISTENERS","passive","defineProperty","window","moveTolerance","map_","clickTimeoutId_","emulateClicks_","dragging_","dragListenerKeys_","moveTolerance_","down_","getViewport","activePointers_","trackedTouches_","element_","pointerdownListenerKey_","handlePointerDown_","originalPointerMoveEvent_","relayedListenerKey_","relayMoveEvent_","boundHandleTouchMove_","handleTouchMove_","emulateClick_","pointerEvent","newEvent","clearTimeout","setTimeout","updateActivePointers_","id","pointerId","handlePointerUp_","isMouseActionButton_","button","PointerEvent","writable","doc","getOwnerDocument","handlePointerMove_","getRootNode","isMoving_","cancelable","Math","abs","clientX","clientY","assert","assertion","errorMessage","DROP","Infinity","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getCount","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isEmpty","isKeyQueued","isQueued","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","tilePriorityFunction","tileChangeCallback","apply","getKey","boundHandleTileChange_","handleTileChange","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","getTilesLoading","tile","state","getState","TileState","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","load","CENTER","RESOLUTION","ROTATION","min","max","squaredSegmentDistance","x","y","x1","y1","x2","y2","dx","dy","t","angleInRadians","PI","angleInDegrees","r","lerp","decimals","factor","pow","round","floor","ceil","wrap","range","createExtent","extent","onlyCenter","smooth","center","resolution","size","isMoving","centerShift","viewWidth","viewHeight","shiftX","shiftY","minX","maxX","minY","maxY","ratio","log","none","boundingExtent","coordinates","createEmpty","extendCoordinate","closestSquaredDistanceXY","containsCoordinate","containsXY","coordinateRelationship","relationship","Relationship","createOrUpdate","dest","createOrUpdateEmpty","extent1","extent2","extendFlatCoordinates","flatCoordinates","offset","end","stride","extendXY","forEachCorner","callback","val","getBottomLeft","getBottomRight","getTopRight","getTopLeft","getArea","area","getHeight","getCenter","getCorner","corner","getForViewAndSize","rotation","x0","y0","x3","y3","getRotatedViewport","cosRotation","cos","sinRotation","sin","xCos","xSin","yCos","ySin","getIntersection","intersection","intersects","applyTransform","transformFn","stops","width","height","xs","ys","l","_boundingExtentXYs","wrapAndSliceX","projection","multiWorld","canWrapX","projectionExtent","getExtent","isFinite","worldWidth","wrapX","coordinate1","coordinate2","rotate","angle","cosAngle","sinAngle","worldsAway","sourceExtentWidth","easeIn","easeOut","inAndOut","linear","levels","info","warn","error","level","args","console","METERS_PER_UNIT","code_","code","units_","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","getCode","getUnits","getMetersPerUnit","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setExtent","setWorldExtent","setGetPointResolution","func","getPointResolutionFunc","RADIUS","HALF_SIZE","EXTENT","WORLD_EXTENT","MAX_SAFE_Y","tan","EPSG3857Projection","units","point","cosh","PROJECTIONS","fromEPSG4326","input","output","dimension","slice","toEPSG4326","atan","exp","EPSG4326Projection","cache","transforms","destination","sourceCode","destinationCode","K0","E","E2","E3","E_P2","SQRT_E","sqrt","_E","_E2","_E3","_E4","_E5","M1","M3","M4","P2","P3","P4","P5","R","toLonLat","easting","northing","zone","mu","north","pRad","pSin","pSin2","pCos","pTan","pTan2","pTan4","epSin","epSinSqrt","c","c2","d","d2","d3","d4","d5","latitude","longitude","zoneToCentralLongitude","number","fromLonLat","latRad","latSin","latCos","latTan","latTan2","latTan4","lonRad","centralLonRad","a2","a3","a4","a5","a6","m","epsgRegExes","zoneFromCode","epsgId","re","match","parseInt","makeTransformFunction","transformer","coord","DEFAULT_RADIUS","getDistance","c1","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","transformFactories","forward","inverse","projectionFactories","showCoordinateWarning","disableCoordinateWarning","disable","cloneTransform","addProjection","projectionLike","replace","makeProjection","pointResolution","projUnits","getTransformFromProjections","vertices","addEquivalentProjections","projections","addProjections","createProjection","defaultCode","createTransformFromCoordinateTransform","coordTransform","pointLength","j","jj","equivalent","projection1","projection2","equalUnits","transformFunc","sourceTransforms","destinationTransforms","makeTransforms","intermediateCode","composeTransformFuncs","fromSource","toDestination","t1","t2","dimensions","getTransform","transform","transformExtent","userProjection","getUserProjection","toUserCoordinate","sourceProjection","fromUserCoordinate","destProjection","fromUserExtent","projections2","forwardTransform","inverseTransform","compose","dx1","dy1","sx","sy","dx2","dy2","makeInverse","det","mat","e","matrixPrecision","join","fromString","cssTransform","substring","split","parseFloat","tmpTransform","tmpPoint","NaN","extentRevision_","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","simplifyTransformedInternal","fn","lastResult","lastArgs","lastThis","nextArgs","arguments","memoizeOne","revision","squaredTolerance","getSimplifiedGeometry","clone","simplifyTransformed","closestPointXY","closestPoint","minSquaredDistance","Number","MIN_VALUE","getClosestPoint","intersectsCoordinate","computeExtent","isNaN","returnOrUpdate","anchor","scale","simplify","tolerance","getType","intersectsExtent","translate","deltaX","deltaY","sourceProj","inCoordinates","outCoordinates","pixelExtent","projectedExtent","transformed","destinationStride","k","projTransform","getStrideForLayout","layout","createOrUpdateFromFlatCoordinates","getCoordinates","getFirstCoordinate","getFlatCoordinates","getLastCoordinate","getLayout","simplifiedGeometry","getSimplifiedGeometryInternal","getStride","setFlatCoordinates","setCoordinates","setLayout","nesting","getLayoutForStride","startsWith","anchorX","anchorY","linearRing","twiceArea","linearRings","ends","assignClosest","offset1","offset2","maxSquaredDelta","squaredDelta","arrayMaxSquaredDelta","assignClosestPoint","maxDelta","isRing","squaredDistance","assignClosestArrayPoint","deflateCoordinates","deflateCoordinatesArray","coordinatess","inflateCoordinates","inflateCoordinatesArray","douglasPeucker","simplifiedFlatCoordinates","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","snap","quantize","quantizeArray","simplifiedEnds","LinearRing","maxDelta_","maxDeltaRevision_","Point","createOrUpdateFromCoordinate","deflateCoordinate","linearRingContainsExtent","linearRingContainsXY","wn","linearRingsContainsXY","getInteriorPointOfArray","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","sort","segmentLength","intersectsLineString","coordinatesExtent","ret","point1","point2","start","startRel","endRel","startX","startY","endX","endY","slope","intersectsSegment","intersectsLinearRing","intersectsLinearRingArray","tmp","linearRingIsClockwise","edge","linearRingsAreOriented","right","isClockwise","orientLinearRings","Polygon","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","appendLinearRing","data","extension","polygon","getOrientedFlatCoordinates","getEnds","getFlatInteriorPoint","flatCenter","getInteriorPoint","getLinearRingCount","getLinearRing","getLinearRings","fromExtent","getViewportClampedResolution","maxExtent","viewportSize","showFullExtent","xResolution","yResolution","getSmoothClampedResolution","maxResolution","minResolution","result","createMinMaxResolution","cappedMaxRes","DEFAULT_TILE_SIZE","animationCallback","returnValue","isNoopAnimation","animation","sourceCenter","targetCenter","sourceResolution","targetResolution","sourceRotation","targetRotation","calculateCenterOn","position","rotX","rotY","hints_","animations_","updateAnimationKey_","projection_","viewportSize_","targetCenter_","targetResolution_","targetRotation_","nextCenter_","nextResolution_","nextRotation_","cancelAnchor_","applyOptions_","properties","ViewProperty","resolutionConstraintInfo","resolutionConstraint","defaultMaxZoom","defaultZoomFactor","minZoom","maxZoom","zoomFactor","smoothResolutionConstraint","projExtent","constrainOnlyCenter","resolutions","constrainResolution","capped","z","createSnapToResolutions","defaultMaxResolution","degrees","defaultMinResolution","power","minZoomLevel","cappedZoomLevel","zoomLevel","createSnapToPower","constraint","createResolutionConstraint","maxResolution_","minResolution_","zoomFactor_","resolutions_","padding_","padding","minZoom_","centerConstraint","smoothExtentConstraint","createCenterConstraint","rotationConstraint","enableRotation","constrainRotation","createSnapToZero","theta","createSnapToN","createRotationConstraint","constraints_","setRotation","setCenterInternal","setResolution","zoom","setZoom","oldPadding","getCenterInternal","newPadding","getResolution","offsetX","offsetY","getUpdatedOptions_","newOptions","getZoom","getRotation","animate","var_args","isDef","getAnimating","resolveConstraints","getProjection","animateInternal","animationCount","Date","now","series","complete","duration","easing","getResolutionForZoom","delta","setHint","ViewHint","updateAnimations_","getInteracting","cancelAnimations","cancelAnimationFrame","more","seriesComplete","elapsed","fraction","progress","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","filter","Boolean","requestAnimationFrame","currentCenter","currentResolution","w","h","setViewportSize","getConstraints","getConstrainResolution","getHints","hints","calculateExtent","toUserExtent","calculateExtentInternal","getViewportSizeMinusPadding_","getMaxResolution","getMinResolution","getMaxZoom","getZoomForResolution","setMaxZoom","getMinZoom","setMinZoom","setConstrainResolution","enabled","getResolutions","getResolutionForExtent","getResolutionForExtentInternal","getResolutionForValueFunction","getConstrainedResolution","getValueForResolutionFunction","logPower","reducedSize","nextCenter","nextResolution","nextRotation","getViewStateAndExtent","viewState","nearest","baseLevel","fit","geometryOrExtent","geometry","fitInternal","rotatedExtentForGeometry","coords","minRotX","minRotY","maxRotX","maxRotY","rotatedExtent","centerRot","centerX","centerY","getConstrainedCenter","centerOn","centerOnInternal","calculateCenterShift","shiftedCenter","adjustCenter","deltaCoordinates","setCenter","adjustCenterInternal","adjustResolution","adjustResolutionInternal","newResolution","adjustZoom","adjustRotation","adjustRotationInternal","newRotation","hint","doNotCancelAnims","forceMoving","newCenter","resolutionDirection","beginInteraction","endInteraction","endInteractionInternal","getConstrainedZoom","targetZoom","targetRes","CLASS_HIDDEN","CLASS_UNSELECTABLE","CLASS_CONTROL","CLASS_COLLAPSED","fontRegEx","RegExp","fontRegExMatchIndex","fontWeights","normal","bold","getFontParameters","fontSpec","style","lineHeight","weight","variant","trim","families","family","canvasPool","settings","canvas","shift","document","createElement","getContext","sharedCanvasContext","getSharedCanvasContext2D","releaseCanvas","context","clearRect","replaceNode","newNode","oldNode","parent","parentNode","replaceChild","createMockDiv","Proxy","childNodes","appendChild","node","removeChild","insertBefore","referenceNode","prop","receiver","Reflect","isCanvas","HTMLCanvasElement","pointerEvents","target_","listenerKeys","render","setTarget","getMap","setMap","getOverlayContainerStopEvent","MapEventType","mapEvent","getElementById","ulElement_","collapsed_","collapsed","userCollapsed_","overrideCollapsible_","collapsible","collapsible_","attributions_","attributions","className","tipLabel","expandClassName","collapseLabel","collapseClassName","collapseLabel_","textContent","label","label_","activeLabel","toggleButton_","setAttribute","title","handleClick_","cssClasses","renderedAttributions_","renderedVisible_","collectSourceAttributions_","layers","getAllLayers","visibleAttributions","Set","flatMap","layer","getAttributions","add","some","getSource","getAttributionsCollapsible","setCollapsible","from","updateElement_","display","all","attribution","visible","lastChild","removeChildren","innerHTML","handleToggle_","classList","toggle","getCollapsible","setCollapsed","getCollapsed","compassClassName","callResetNorth_","resetNorth","duration_","autoHide_","autoHide","rotation_","resetNorth_","view","getView","contains","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","zoomByDelta_","currentZoom","newZoom","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","begin","update","lastIndex","firstIndex","getAngle","zoomByDelta","setActive","getActive","mapBrowserEvent","active","delta_","stopEvent","browserEvent","shiftKey","conditions","pass","altShiftKeysOnly","altKey","metaKey","ctrlKey","focusWithTabindex","targetElement","getTargetElement","rootNode","ShadowRoot","host","hasAttribute","activeElement","always","mouseActionButton","noModifierKeys","shiftKeyOnly","targetNotEditable","tagName","isContentEditable","mouseOnly","pointerType","primaryAction","isPrimary","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","targetPointers","getPointerCount","updateTrackedPointers_","handledUp","handled","Pointer","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition","condition_","onFocusOnly","noKinetic_","centroid","distance","centerpx","getPixelFromCoordinateInternal","getCoordinateFromPixelInternal","lastAngle_","getSize","geometry_","startPixel_","endPixel_","render_","startPixel","endPixel","px","left","top","getOverlayContainer","setPixels","createOrUpdateGeometry","getGeometry","DragBoxEventType","DragBoxEvent","box_","minArea_","minArea","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","completeBox","out_","out","defaultCondition_","pixelDelta_","pixelDelta","keyEvent","Key","mapUnitsDelta","pan","platformModifierKey","totalDelta_","lastDelta_","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","deltaPerZoom_","endInteraction_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_LINE","DOM_DELTA_PAGE","timeLeft","handleWheelZoom_","setMouseAnchor","pointerOptions","anchor_","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","lastDistance_","lastScaleDelta_","scaleDelta","background_","background","opacity","zIndex","className_","state_","getBackground","getClassName","getLayerState","managed","getZIndex","getOpacity","getVisible","getLayersArray","getLayerStatesArray","states","getSourceState","setBackground","setMaxResolution","setMinResolution","setOpacity","setVisible","setZIndex","zindex","GroupEventType","GroupEvent","LayerGroup","Base","baseOptions","layersListenerKeys_","listenerKeys_","handleLayersChanged_","setLayers","handleLayerChange_","getLayers","handleLayersAdd_","handleLayersRemove_","layersArray","registerLayerListeners_","handleLayerGroupAdd_","handleLayerGroupRemove_","collectionEvent","collection","currentLayers","pos","ownLayerState","defaultZIndex","layerState","inView","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","renderer_","sourceReady_","rendered","handleSourcePropertyChange_","setSource","getRenderSource","handleSourceChange_","getFeatures","getData","isVisible","getMapInternal","layerStatesArray","getLayerGroup","find","layerExtent","layerRenderer","getRenderer","prepareFrame","renderFrame","unrender","getDeclutter","renderDeclutter","renderDeferred","setMapInternal","handlePrecompose_","renderEvent","arrayLayerState","createRenderer","hasRenderer","clearRenderer","quickselect","compare","defaultCompare","s","sd","swap","RBush","maxEntries","_maxEntries","_minEntries","_all","search","bbox","toBBox","nodesToSearch","children","child","childBBox","leaf","collides","insert","_build","_splitRoot","tmpNode","_insert","createNode","equalsFn","path","indexes","goingUp","findItem","_condense","compareMinX","compareMinY","toJSON","fromJSON","items","N","M","calcBBox","N2","N1","multiSelect","right2","right3","_chooseSubtree","targetNode","minEnlargement","bboxArea","enlargement","isNode","insertPath","_split","_adjustParentBBoxes","_chooseSplitAxis","splitIndex","_chooseSplitIndex","minOverlap","bbox1","distBBox","bbox2","overlap","intersectionArea","compareNodeMinX","compareNodeMinY","_allDistMargin","leftBBox","rightBBox","margin","bboxMargin","siblings","p","destNode","mid","NO_COLOR","colorParseContext","rgbModernRegEx","rgbLegacyAbsoluteRegEx","rgbLegacyPercentageRegEx","hexRegEx","toColorComponent","divider","endsWith","throwInvalidColor","color","parseRgba","rgb","alpha","rgbDivider","hex","step","colorFromHex","colorComponent","willReadFrequently","desynchronized","fillStyle","invalidCheckFillStyle","colorString","fillRect","colorFromImage","getImageData","cacheSize","withAlpha","b1","v","b2","a1","rgbaToLcha","g","q","asArray","hasArea","toSize","numTypes","BooleanType","NumberType","StringType","ColorType","NumberArrayType","SizeType","AnyType","typeNames","namedTypes","typeName","names","namedType","includesType","broad","specific","isType","expected","LiteralExpression","isSpecific","CallExpression","operator","newParsingContext","variables","featureId","geometryType","mapState","parse","encoded","expectedType","toString","returnType","parser","parsers","parseCallExpression","Ops","createCallExpressionParser","hasArgsCount","withGetArgs","name","withNoArgs","withArgsOfType","usesMapState","withArgsOfReturnType","hasEvenArgs","argsCount","inputType","fallback","message","interpolationType","base","JSON","stringify","interpolation","stop","operation","argCount","needleType","haystack","arg","colors","parsedColors","minArgs","maxArgs","expression","argType","validators","parsed","computeGeometryType","getGeometries","buildExpression","compileExpression","colorValue","compileAssertionExpression","nameExpression","hasOwn","compileAccessorExpression","concat","op","compileLogicalExpression","compileComparisonExpression","compileNumericExpression","compileCaseExpression","compileMatchExpression","previousInput","previousOutput","isColor","interpolateColor","interpolateNumber","compileInterpolateExpression","compileConvertExpression","input1","output1","input2","output2","along","rgba1","rgba2","lcha1","lcha2","deltaHue","lchaToRgba","decodeFallback","image","src","then","catch","handleLoad","unlisten","handleError","IconImageCache","cache_","patternCache_","cacheSize_","maxCacheSize_","canExpireCache","expire","iconImage","crossOrigin","getCacheKey","getPattern","pattern","getImageState","ImageState","ready","createPattern","getImage","setSize","maxCacheSize","shared","taintedTestContext","IconImage","imageState","hitDetectionImage_","image_","crossOrigin_","canvas_","color_","imageState_","size_","src_","tainted_","ready_","initializeImage_","isTainted_","drawImage","dispatchChangeEvent_","handleImageError_","handleImageLoad_","pixelRatio","replaceColor_","getPixelRatio","getHitDetectionImage","getSrc","HTMLImageElement","ctx","globalCompositeOperation","onChange","cacheKey","asColorLike","canvasPattern","patternCanvasContext","asCanvasPattern","defaultFillStyle","defaultLineCap","defaultLineJoin","checkedFonts","measureFont","measureContext","textHeights","genericFontFamilies","getFontKey","retries","fontFaceSet","async","isAvailable","fontFaces","font","checkFamily","checkWeight","check","done","checkedFontsProperties","fonts","currentRetries","measureElement","measureText","text","ImageStyle","opacity_","rotateWithView_","rotateWithView","scale_","scaleArray_","displacement_","displacement","declutterMode_","declutterMode","getScale","getRotateWithView","getDisplacement","getDeclutterMode","getScaleArray","getAnchor","getImageSize","getOrigin","setDisplacement","setRotateWithView","setScale","listenImageChange","unlistenImageChange","RegularShape","hitDetectionCanvas_","fill_","fill","origin_","points","radius2_","radius2","stroke_","stroke","renderOptions_","loading","getFill","getPoints","getRadius","getRadius2","getStroke","setFill","createHitDetectionCanvas_","fillKey","renderOptions","draw_","setStroke","calculateLineJoinSize_","lineJoin","strokeWidth","miterLimit","r1","r2","miterRatio","bevelAdd","aa","dd","innerMiterRatio","innerLength","createRenderOptions","strokeStyle","lineCap","lineDash","lineDashOffset","getColor","getWidth","getLineDash","getLineDashOffset","getLineJoin","getLineCap","getMiterLimit","maxRadius","createPath_","lineWidth","setLineDash","drawHitDetectionCanvas_","arc","startAngle","angle0","radiusC","lineTo","closePath","setRadius","patternImage_","setColor","patternImage","CanvasPattern","CanvasGradient","calculateScale","wantedWidth","wantedHeight","Icon","normalizedAnchor_","anchorOrigin_","anchorOrigin","anchorXUnits_","anchorXUnits","anchorYUnits_","anchorYUnits","img","iconImage_","offset_","offsetOrigin_","offsetOrigin","initialOptions_","onload","imageSize","setAnchor","iconImageSize","setSrc","lineCap_","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","width_","setLineCap","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","Style","geometryFunction_","defaultGeometryFunction","setGeometry","renderer","hitDetectionRenderer_","hitDetectionRenderer","text_","zIndex_","getText","setRenderer","setHitDetectionRenderer","getHitDetectionRenderer","getGeometryFunction","setImage","setText","feature","defaultStyles","createDefaultStyle","Circle","Text","font_","keepUpright_","keepUpright","textAlign_","textAlign","justify_","justify","repeat_","repeat","textBaseline_","textBaseline","maxAngle_","maxAngle","placement_","placement","overflow_","overflow","offsetX_","offsetY_","backgroundFill_","backgroundFill","backgroundStroke_","backgroundStroke","getFont","getPlacement","getRepeat","getMaxAngle","getOverflow","getKeepUpright","getTextAlign","getJustify","getTextBaseline","getOffsetX","getOffsetY","getBackgroundFill","getBackgroundStroke","getPadding","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setRepeat","setKeepUpright","setTextAlign","setJustify","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","rulesToStyleFunction","rules","parsingContext","evaluator","compiledRules","rule","styles","styleLength","buildStyle","someMatched","filterEvaluator","else","styleEvaluator","buildRuleSet","evaluationContext","getId","flatStylesToStyleFunction","flatStyles","evaluators","nonNullCount","flatStyle","evaluateFill","buildFill","evaluateStroke","buildStroke","evaluateText","prefix","evaluateValue","stringEvaluator","evaluateBackgroundFill","evaluateBackgroundStroke","evaluateFont","evaluateMaxAngle","numberEvaluator","evaluateOffsetX","evaluateOffsetY","evaluateOverflow","booleanEvaluator","evaluatePlacement","evaluateRepeat","evaluateScale","sizeLikeEvaluator","evaluateRotateWithView","evaluateRotation","evaluateAlign","evaluateJustify","evaluateBaseline","evaluateKeepUpright","evaluatePadding","numberArrayEvaluator","optionalDeclutterMode","buildText","evaluateImage","srcName","requireString","evaluateAnchor","coordinateEvaluator","evaluateOpacity","evaluateDisplacement","optionalIconOrigin","optionalIconAnchorUnits","requireColorLike","optionalColorLike","optionalString","requireNumberArray","optionalNumberArray","optionalNumber","optionalSize","icon","buildIcon","pointsName","radiusName","requireNumber","shape","buildShape","evaluateRadius","circle","buildCircle","buildImage","evaluateZIndex","empty","evaluateColor","srcEvaluator","offsetEvaluator","sizeEvaluator","patternSizeEvaluator","colorEvaluator","colorLikeEvaluator","patternEvaluator","evaluateWidth","evaluateLineCap","evaluateLineJoin","evaluateLineDash","evaluateLineDashOffset","evaluateMiterLimit","requireSize","requireSizeLike","renderBuffer","updateWhileAnimating","updateWhileInteracting","declutter_","declutter","renderBuffer_","style_","styleFunction_","setStyle","updateWhileAnimating_","updateWhileInteracting_","getRenderBuffer","getRenderOrder","getStyle","getStyleFunction","getUpdateWhileAnimating","getUpdateWhileInteracting","declutterGroup","setRenderOrder","renderOrder","styleLike","toStyleLike","styleFunction","setDeclutter","inversePixelTransform","expireIconCache","dispatchRenderEvent","calculateMatrices2D","coordinateToPixelTransform","pixelToCoordinateTransform","forEachFeatureAtCoordinate","hitTolerance","checkWrapped","layerFilter","thisArg2","translatedCoordinate","offsets","layerStates","numLayers","matches","tmpCoord","getWrapX","order","distanceSq","hasFeatureAtCoordinate","scheduleExpireIconCache","postRenderFunctions","Map","fontChangeListenerKey_","redrawText","container","firstChild","children_","BaseVector","renderedLayerStates","previousElement","layerIndex","sourceState","oldChildren","oldChild","newChild","replaceChildren","mapCanvas","mapContext","firstElementChild","globalAlpha","setTransform","backgroundColor","removeLayerMapProperty","setLayerMapProperty","optionsInternal","keyboardEventTarget","layerGroup","controls","interactions","overlays","MapProperty","createOptionsInternal","renderComplete_","loaded_","boundHandleBrowserEvent_","handleBrowserEvent","maxTilesLoading_","maxTilesLoading","pixelRatio_","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","overlayContainer_","overlayContainerStopEvent_","mapBrowserEventHandler_","keyboardEventTarget_","targetChangeHandlerKeys_","targetElement_","resizeObserver_","ResizeObserver","updateSize","zoomOptions","rotateOptions","attributionOptions","altShiftDragRotate","doubleClickZoom","zoomDelta","zoomDuration","dragPan","pinchRotate","pinchZoom","keyboard","mouseWheelZoom","shiftDragZoom","overlays_","overlayIdIndex_","postRenderFunctions_","tileQueue_","getTilePriority","handleTileChange_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","viewOptions","setView","addOverlayInternal_","control","interaction","addControl","getControls","addInteraction","getInteractions","addLayer","handleLayerAdd_","addOverlay","overlay","getOverlays","disconnect","forEachFeatureAtPixel","getFeaturesAtPixel","features","addLayersFrom","hasFeatureAtPixel","getEventCoordinate","getEventCoordinateInternal","viewportPosition","getBoundingClientRect","scaleX","scaleY","eventPosition","changedTouches","getTarget","getOverlayById","group","getLoadingOrNotReady","getPixelFromCoordinate","viewCoordinate","ownerDocument","tileSourceKey","tileCenter","tileResolution","wantedTiles","handleMapBrowserEvent","currentDoc","documentElement","interactionsArray","handlePostRender","tileQueue","viewHints","lowOnFrameBudget","time","unobserve","Composite","targetRoot","HTMLElement","observe","handleViewPropertyChanged_","updateViewportSize_","handleLayerRemove_","isRendered","renderFrame_","renderSync","handleFontsChanged","removeControl","removeInteraction","removeLayer","removeOverlay","previousFrameState","usedTiles","mapId","renderTargets","nextExtent","setLayerGroup","oldLayerGroup","computedStyle","getComputedStyle","offsetWidth","offsetHeight","getClientRects","oldSize","tileCoord","transition_","transition","transitionStarts_","interpolate","release","setState","getTileCoord","getAlpha","inTransition","endTransition","asImageLike","HTMLVideoElement","ImageBitmap","disposedError","defaultSize","loader_","loader","data_","error_","controller_","controller","imageData","getError","abort","tileLoadFunction","unlisten_","tileLoadFunction_","unlistenImage_","getCrossOrigin","getBlankImage","naturalWidth","naturalHeight","loadHandler","errorHandler","listening","decoding","loaded","listenImage","TileRange","containsTileRange","tileRange","brokenDiagonalRendering_","drawTestTriangle","u1","v1","u2","v2","beginPath","moveTo","save","clip","restore","verifyBrokenDiagonalRendering","calculateSourceResolution","targetProj","targetMetersPerUnit","sourceMetersPerUnit","sourceExtent","compensationFactor","targetExtent","triangulation","sources","gutter","renderEdges","drawSingle","clipExtent","imageSmoothingEnabled","pixelRound","sourceDataExtent","stitchContext","stitchScale","inverseScale","xPos","yPos","rect","srcWidth","srcHeight","targetTopLeft","getTriangles","triangle","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","affineCoefs","maxRow","maxEl","absValue","coef","solveLinearSystem","isBrokenDiagonalRendering","steps","ud","vd","maxSourceExtent","errorThreshold","destinationResolution","sourceMatrix","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","log2","addQuad_","leftBound","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","isNotFinite","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","sourceTileGrid","targetTileGrid","wrappedTileCoord","getTileFunction","renderEdges_","gutter_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","clipExtent_","getTileCoordExtent","maxTargetExtent","limitedTargetExtent","sourceProjExtent","calculateSourceExtentResolution","errorThresholdInPixels","triangulation_","getZForResolution","sourceRange","getTileRangeForExtentAndZ","srcX","srcY","reproject_","getTileSize","leftToLoad","sourceListenKey","unlistenSources_","highWaterMark","count_","entries_","oldest_","newest_","deleteOldest","entry","expireCache","keep","containsKey","value_","key_","newer","older","getValues","peekLast","peekLastKey","peekFirstKey","peek","getKeyZXY","instructions_","context_","push_","pushMethodArgs_","instructions","pushFunction","draw","instructionsAtIndex","instructionAtIndex","boundHandleImageChange_","handleImageChange_","layer_","staleKeys_","maxStaleKeys","getStaleKeys","prependStaleKey","unshift","getLayer","renderIfReadyAndVisible","loadImage","pixelContext","renderedResolution","tempTransform","pixelTransform","deferredContext_","containerReused","col","row","useContainer","layerClassName","cssTransform1","cssTransform2","mat1","mat2","transformOrigin","clipUnrotated","topLeft","topRight","bottomRight","bottomLeft","inverted","prepareContainer","canvasTransform","dispatchRenderEvent_","preRender","postRender","renderDeferredInternal","getRenderContext","getRenderTransform","sourceKey","addTileToLookup","tilesByZ","existing","has","removeTileFromLookup","delete","getRenderExtent","gridExtent","getTileGridForProjection","tileLayer","extentChanged","renderComplete","renderedExtent_","renderedPixelRatio","renderedProjection","renderedTiles","renderedSourceKey_","renderedSourceRevision_","tempExtent","tempTileRange_","tempTileCoord_","tileCache_","getTileCache","getOrCreateTile","tileCache","tileSource","getTile","tilePixelRatio","getTilePixelRatio","getTileCoordForCoordAndZ","tileOrigin","tileSize","getGutterForProjection","sourceRevision","enqueueTilesForNextExtent","enqueueTiles","initialZ","preload","minZ","zDirection","viewport","tileCoordIntersectsViewport","tileQueueKey","getTileCoordCenter","findStaleTile_","staleKeys","findAltTiles_","altZ","getTileRangeForTileCoordAndZ","covered","viewResolution","viewCenter","frameExtent","canvasExtent","getPreload","targetZ","renderExtent","uid","tileState","parentZ","canvasScale","getInterpolate","zs","currentClip","clips","clipZs","currentZ","currentTilePixelSize","getTilePixelSize","currentScale","originTileCoord","originTileExtent","origin","tileGutter","xIndex","nextX","yIndex","nextY","contextSaved","drawTile","updateUsedTiles","postRenderFunction","tilesCount","updateCacheSize","tileCount","getTileImage","alphaChanged","useInterimTilesOnError","setPreload","setUseInterimTilesOnError","getCacheSize","TileProperty","getUseInterimTilesOnError","BaseTile","tmpTileCoord","strict","every","currentVal","res","isSorted","origins","origins_","tileSizes_","tileSizes","tileSize_","fullTileRanges_","tmpSize_","tmpExtent_","sizes","restrictedTileRange","calculateTileRanges_","forEachTileCoord","forEachTileCoordParentTileRange","tempTileRange","tileCoordExtent","getTileCoordChildTileRange","tileCoordZ","tileCoordX","tileCoordY","getTileCoordForXYAndZ_","getTileCoordForCoordAndResolution","opt_tileCoord","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","getTileCoordResolution","getFullTileRange","opt_direction","fullTileRanges","getForProjection","extentFromProjection","resolutionsFromExtent","createForExtent","createForProjection","createXYZ","xyzOptions","gridOptions","half","zRegEx","xRegEx","yRegEx","dashYRegEx","createFromTemplate","template","renderXYZTemplate","createFromTemplates","templates","tileUrlFunctions","createFromTileUrlFunctions","adaptAttributions","attributionLike","attributionsCollapsible_","attributionsCollapsible","wrapX_","interpolate_","viewResolver","viewRejector","viewPromise_","refresh","setAttributions","TileSourceEvent","tilePixelRatio_","tmpSize","tileOptions","setKey","getTileGrid","getTileCoordForTileUrlFunction","gridProjection","withinExtentAndZ","UrlTile","generateTileUrlFunction_","tileUrlFunction","urls","setUrls","url","setUrl","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","getPrototypeOf","getUrls","TileEventType","setTileLoadFunction","setTileUrlFunction","exec","startCharCode","charCodeAt","stopCharCode","charCode","fromCharCode","expandUrl","defaultTileLoadFunction","imageTile","mode","credentials","fetch","response","ok","status","blob","createImageBitmap","imageBitmap","close","Event","tileClass","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","renderReprojectionEdges_","getGutter","thisProj","projKey","createTile_","urlTileCoord","tileUrl","getTileInternal","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","proj","referrerPolicy","worker","action","transferToImageBitmap","postMessage"],"sourceRoot":""}