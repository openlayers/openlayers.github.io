import TileQueue,{getTilePriority as tilePriorityFunction}from"ol/TileQueue.js";import MVT from"ol/format/MVT.js";import{inView}from"ol/layer/Layer.js";import VectorTileLayer from"ol/layer/VectorTile.js";import{get}from"ol/proj.js";import VectorTileSource from"ol/source/VectorTile.js";import{stylefunction}from"ol-mapbox-style";const key="Get your own API key at https://www.maptiler.com/cloud/",worker=self;let frameState,pixelRatio,rendererTransform;const canvas=new OffscreenCanvas(1,1);canvas.style={};const context=canvas.getContext("2d"),sources={landcover:new VectorTileSource({maxZoom:9,format:new MVT,url:"https://api.maptiler.com/tiles/landcover/{z}/{x}/{y}.pbf?key="+key}),contours:new VectorTileSource({minZoom:9,maxZoom:14,format:new MVT,url:"https://api.maptiler.com/tiles/contours/{z}/{x}/{y}.pbf?key="+key}),maptiler_planet:new VectorTileSource({format:new MVT,maxZoom:14,url:"https://api.maptiler.com/tiles/v3/{z}/{x}/{y}.pbf?key="+key})},layers=[];function getFont(e){return e[0].replace("Noto Sans","serif").replace("Roboto","sans-serif")}function loadStyles(){fetch("https://api.maptiler.com/maps/streets-v2/style.json?key="+key).then((e=>e.json())).then((e=>{const t=[];let r;e.layers.forEach((e=>{e.source&&(r!==e.source&&(r=e.source,t.push({source:e.source,layers:[]})),t[t.length-1].layers.push(e.id))}));const a=e.sprite+(pixelRatio>1?"@2x":"")+".json",o=e.sprite+(pixelRatio>1?"@2x":"")+".png";fetch(a).then((e=>e.json())).then((r=>{t.forEach((t=>{const a=sources[t.source];if(!a)return;const i=new VectorTileLayer({declutter:!0,source:a,minZoom:a.getTileGrid().getMinZoom()});i.getRenderer().useContainer=function(e,t){this.containerReused=this.getLayer()!==layers[0],this.canvas=canvas,this.context=context,this.container={firstElementChild:canvas,style:{opacity:String(i.getOpacity())}},rendererTransform=t},stylefunction(i,e,t.layers,void 0,r,o,getFont),layers.push(i)})),worker.postMessage({action:"requestRender"})}))}))}const tileQueue=new TileQueue(((e,t,r,a)=>tilePriorityFunction(frameState,e,t,r,a)),(()=>worker.postMessage({action:"requestRender"}))),maxTotalLoading=8,maxNewLoads=2;worker.addEventListener("message",(e=>{if("requestFeatures"===e.data.action){const t=layers.filter((e=>inView(e.getLayerState(),frameState.viewState))).map((t=>t.getFeatures(e.data.pixel)));return void Promise.all(t).then((e=>{const t=e.flat();worker.postMessage({action:"getFeatures",features:t.map((e=>e.getProperties()))})}))}if("render"!==e.data.action)return;frameState=e.data.frameState,pixelRatio||(pixelRatio=frameState.pixelRatio,loadStyles()),frameState.tileQueue=tileQueue,frameState.viewState.projection=get("EPSG:3857"),frameState.layerStatesArray=layers.map((e=>e.getLayerState())),layers.forEach((e=>{if(inView(e.getLayerState(),frameState.viewState)){const t=e.getRenderer();if(!t.prepareFrame(frameState))return;e.getDeclutter()&&!frameState.declutter&&(frameState.declutter={}),t.renderFrame(frameState,canvas)}})),layers.forEach((e=>{e.getRenderer().context&&(e.renderDeclutter(frameState,e.getLayerState()),e.renderDeferred(frameState))})),frameState.postRenderFunctions.forEach((e=>e(null,frameState))),tileQueue.getTilesLoading()<8&&(tileQueue.reprioritize(),tileQueue.loadMoreTiles(8,2));const t=canvas.transferToImageBitmap();worker.postMessage({action:"rendered",imageData:t,transform:rendererTransform,frameState:{viewState:{center:frameState.viewState.center.slice(0),resolution:frameState.viewState.resolution,rotation:frameState.viewState.rotation},pixelRatio:frameState.pixelRatio,size:frameState.size.slice(0),extent:frameState.extent.slice(0),coordinateToPixelTransform:frameState.coordinateToPixelTransform.slice(0),pixelToCoordinateTransform:frameState.pixelToCoordinateTransform.slice(0)}},[t])}));