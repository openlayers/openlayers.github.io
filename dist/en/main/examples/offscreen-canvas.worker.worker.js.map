{"version":3,"file":"offscreen-canvas.worker.worker.js","mappings":"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","sources":["webpack:///../node_modules/@maplibre/maplibre-gl-style-spec/dist/index.mjs","webpack:///../node_modules/mapbox-to-css-font/index.js","webpack:///../src/ol/CollectionEventType.js","webpack:///../src/ol/ObjectEventType.js","webpack:///../src/ol/events/EventType.js","webpack:///../src/ol/Disposable.js","webpack:///../src/ol/array.js","webpack:///../src/ol/functions.js","webpack:///../src/ol/obj.js","webpack:///../src/ol/events/Event.js","webpack:///../src/ol/events/Target.js","webpack:///../src/ol/events.js","webpack:///../src/ol/Observable.js","webpack:///../src/ol/util.js","webpack:///../src/ol/Object.js","webpack:///../src/ol/Collection.js","webpack:///../src/ol/MapEvent.js","webpack:///../src/ol/MapBrowserEvent.js","webpack:///../src/ol/MapBrowserEventType.js","webpack:///../src/ol/has.js","webpack:///../src/ol/pointer/EventType.js","webpack:///../src/ol/MapBrowserEventHandler.js","webpack:///../src/ol/MapEventType.js","webpack:///../src/ol/MapProperty.js","webpack:///../src/ol/TileState.js","webpack:///../src/ol/asserts.js","webpack:///../src/ol/structs/PriorityQueue.js","webpack:///../src/ol/TileQueue.js","webpack:///../src/ol/ViewHint.js","webpack:///../src/ol/ViewProperty.js","webpack:///../src/ol/math.js","webpack:///../src/ol/centerconstraint.js","webpack:///../src/ol/extent/Relationship.js","webpack:///../src/ol/extent.js","webpack:///../src/ol/coordinate.js","webpack:///../src/ol/easing.js","webpack:///../src/ol/console.js","webpack:///../src/ol/proj/Units.js","webpack:///../src/ol/proj/Projection.js","webpack:///../src/ol/proj/epsg3857.js","webpack:///../src/ol/proj/epsg4326.js","webpack:///../src/ol/proj/projections.js","webpack:///../src/ol/proj/transforms.js","webpack:///../src/ol/proj/utm.js","webpack:///../src/ol/sphere.js","webpack:///../src/ol/proj.js","webpack:///../src/ol/transform.js","webpack:///../src/ol/geom/flat/transform.js","webpack:///../src/ol/geom/Geometry.js","webpack:///../src/ol/geom/SimpleGeometry.js","webpack:///../src/ol/geom/flat/area.js","webpack:///../src/ol/geom/flat/closest.js","webpack:///../src/ol/geom/flat/deflate.js","webpack:///../src/ol/geom/flat/inflate.js","webpack:///../src/ol/geom/flat/simplify.js","webpack:///../src/ol/geom/LinearRing.js","webpack:///../src/ol/geom/Point.js","webpack:///../src/ol/geom/flat/contains.js","webpack:///../src/ol/geom/flat/interiorpoint.js","webpack:///../src/ol/geom/flat/segments.js","webpack:///../src/ol/geom/flat/intersectsextent.js","webpack:///../src/ol/geom/flat/reverse.js","webpack:///../src/ol/geom/flat/orient.js","webpack:///../src/ol/geom/Polygon.js","webpack:///../src/ol/resolutionconstraint.js","webpack:///../src/ol/rotationconstraint.js","webpack:///../src/ol/tilegrid/common.js","webpack:///../src/ol/View.js","webpack:///../src/ol/css.js","webpack:///../src/ol/dom.js","webpack:///../src/ol/control/Control.js","webpack:///../src/ol/control/Attribution.js","webpack:///../src/ol/control/Rotate.js","webpack:///../src/ol/control/Zoom.js","webpack:///../src/ol/Kinetic.js","webpack:///../src/ol/interaction/Property.js","webpack:///../src/ol/interaction/Interaction.js","webpack:///../src/ol/interaction/DoubleClickZoom.js","webpack:///../src/ol/events/condition.js","webpack:///../src/ol/interaction/Pointer.js","webpack:///../src/ol/interaction/DragPan.js","webpack:///../src/ol/interaction/DragRotate.js","webpack:///../src/ol/render/Box.js","webpack:///../src/ol/interaction/DragBox.js","webpack:///../src/ol/interaction/DragZoom.js","webpack:///../src/ol/events/Key.js","webpack:///../src/ol/interaction/KeyboardPan.js","webpack:///../src/ol/interaction/KeyboardZoom.js","webpack:///../src/ol/interaction/MouseWheelZoom.js","webpack:///../src/ol/interaction/PinchRotate.js","webpack:///../src/ol/interaction/PinchZoom.js","webpack:///../src/ol/layer/Property.js","webpack:///../src/ol/layer/Base.js","webpack:///../src/ol/layer/Group.js","webpack:///../src/ol/render/EventType.js","webpack:///../src/ol/layer/Layer.js","webpack:///../node_modules/quickselect/index.js","webpack:///../node_modules/rbush/index.js","webpack:///../src/ol/color.js","webpack:///../src/ol/size.js","webpack:///../src/ol/expr/expression.js","webpack:///../src/ol/expr/cpu.js","webpack:///../src/ol/ImageState.js","webpack:///../src/ol/Image.js","webpack:///../src/ol/style/IconImageCache.js","webpack:///../src/ol/style/IconImage.js","webpack:///../src/ol/colorlike.js","webpack:///../src/ol/render/canvas.js","webpack:///../src/ol/style/Image.js","webpack:///../src/ol/style/RegularShape.js","webpack:///../src/ol/style/Circle.js","webpack:///../src/ol/style/Fill.js","webpack:///../src/ol/style/Icon.js","webpack:///../src/ol/style/Stroke.js","webpack:///../src/ol/style/Style.js","webpack:///../src/ol/style/Text.js","webpack:///../src/ol/render/canvas/style.js","webpack:///../src/ol/layer/BaseVector.js","webpack:///../src/ol/render/Event.js","webpack:///../src/ol/renderer/Map.js","webpack:///../src/ol/renderer/Composite.js","webpack:///../src/ol/Map.js","webpack:///../src/ol/control/defaults.js","webpack:///../src/ol/interaction/defaults.js","webpack:///../src/ol/geom/flat/center.js","webpack:///../src/ol/geom/flat/interpolate.js","webpack:///../src/ol/render/Feature.js","webpack:///../src/ol/Tile.js","webpack:///../src/ol/VectorTile.js","webpack:///../node_modules/ol-mapbox-style/src/util.js","webpack:///../node_modules/ol-mapbox-style/src/text.js","webpack:///../node_modules/ol-mapbox-style/src/stylefunction.js","webpack:///../src/ol/Feature.js","webpack:///../src/ol/geom/flat/length.js","webpack:///../src/ol/geom/LineString.js","webpack:///../src/ol/geom/MultiPoint.js","webpack:///../src/ol/geom/MultiLineString.js","webpack:///../src/ol/geom/MultiPolygon.js","webpack:///../src/ol/format/Feature.js","webpack:///../node_modules/pbf/index.js","webpack:///../src/ol/format/MVT.js","webpack:///../src/ol/render/VectorContext.js","webpack:///../src/ol/render/canvas/Instruction.js","webpack:///../src/ol/render/canvas/Builder.js","webpack:///../src/ol/render/canvas/ImageBuilder.js","webpack:///../src/ol/render/canvas/LineStringBuilder.js","webpack:///../src/ol/render/canvas/PolygonBuilder.js","webpack:///../src/ol/geom/flat/linechunk.js","webpack:///../src/ol/geom/flat/straightchunk.js","webpack:///../src/ol/render/canvas/TextBuilder.js","webpack:///../src/ol/render/canvas/BuilderGroup.js","webpack:///../src/ol/geom/flat/textpath.js","webpack:///../src/ol/render/canvas/ZIndexContext.js","webpack:///../src/ol/render/canvas/Executor.js","webpack:///../src/ol/render/canvas/ExecutorGroup.js","webpack:///../src/ol/render/canvas/Immediate.js","webpack:///../src/ol/render/canvas/hitdetect.js","webpack:///../src/ol/renderer/vector.js","webpack:///../src/ol/renderer/Layer.js","webpack:///../src/ol/renderer/canvas/Layer.js","webpack:///../src/ol/DataTile.js","webpack:///../src/ol/ImageTile.js","webpack:///../src/ol/TileRange.js","webpack:///../src/ol/reproj.js","webpack:///../src/ol/reproj/Triangulation.js","webpack:///../src/ol/reproj/Tile.js","webpack:///../src/ol/reproj/common.js","webpack:///../src/ol/structs/LRUCache.js","webpack:///../src/ol/tilecoord.js","webpack:///../src/ol/renderer/canvas/TileLayer.js","webpack:///../src/ol/renderer/canvas/VectorTileLayer.js","webpack:///../src/ol/layer/TileProperty.js","webpack:///../src/ol/layer/VectorTile.js","webpack:///../src/ol/source/Source.js","webpack:///../src/ol/net.js","webpack:///../src/ol/tilegrid/TileGrid.js","webpack:///../src/ol/tilegrid.js","webpack:///../src/ol/uri.js","webpack:///../src/ol/tileurlfunction.js","webpack:///../src/ol/source/Tile.js","webpack:///../src/ol/source/TileEventType.js","webpack:///../src/ol/source/UrlTile.js","webpack:///../src/ol/featureloader.js","webpack:///../src/ol/VectorRenderTile.js","webpack:///../src/ol/source/VectorTile.js","webpack:///./offscreen-canvas.worker.js"],"sourcesContent":["var $version = 8;\nvar $root = {\n\tversion: {\n\t\trequired: true,\n\t\ttype: \"enum\",\n\t\tvalues: [\n\t\t\t8\n\t\t]\n\t},\n\tname: {\n\t\ttype: \"string\"\n\t},\n\tmetadata: {\n\t\ttype: \"*\"\n\t},\n\tcenter: {\n\t\ttype: \"array\",\n\t\tvalue: \"number\"\n\t},\n\tcenterAltitude: {\n\t\ttype: \"number\"\n\t},\n\tzoom: {\n\t\ttype: \"number\"\n\t},\n\tbearing: {\n\t\ttype: \"number\",\n\t\t\"default\": 0,\n\t\tperiod: 360,\n\t\tunits: \"degrees\"\n\t},\n\tpitch: {\n\t\ttype: \"number\",\n\t\t\"default\": 0,\n\t\tunits: \"degrees\"\n\t},\n\troll: {\n\t\ttype: \"number\",\n\t\t\"default\": 0,\n\t\tunits: \"degrees\"\n\t},\n\tlight: {\n\t\ttype: \"light\"\n\t},\n\tsky: {\n\t\ttype: \"sky\"\n\t},\n\tprojection: {\n\t\ttype: \"projection\"\n\t},\n\tterrain: {\n\t\ttype: \"terrain\"\n\t},\n\tsources: {\n\t\trequired: true,\n\t\ttype: \"sources\"\n\t},\n\tsprite: {\n\t\ttype: \"sprite\"\n\t},\n\tglyphs: {\n\t\ttype: \"string\"\n\t},\n\ttransition: {\n\t\ttype: \"transition\"\n\t},\n\tlayers: {\n\t\trequired: true,\n\t\ttype: \"array\",\n\t\tvalue: \"layer\"\n\t}\n};\nvar sources = {\n\t\"*\": {\n\t\ttype: \"source\"\n\t}\n};\nvar source = [\n\t\"source_vector\",\n\t\"source_raster\",\n\t\"source_raster_dem\",\n\t\"source_geojson\",\n\t\"source_video\",\n\t\"source_image\"\n];\nvar source_vector = {\n\ttype: {\n\t\trequired: true,\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tvector: {\n\t\t\t}\n\t\t}\n\t},\n\turl: {\n\t\ttype: \"string\"\n\t},\n\ttiles: {\n\t\ttype: \"array\",\n\t\tvalue: \"string\"\n\t},\n\tbounds: {\n\t\ttype: \"array\",\n\t\tvalue: \"number\",\n\t\tlength: 4,\n\t\t\"default\": [\n\t\t\t-180,\n\t\t\t-85.051129,\n\t\t\t180,\n\t\t\t85.051129\n\t\t]\n\t},\n\tscheme: {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\txyz: {\n\t\t\t},\n\t\t\ttms: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"xyz\"\n\t},\n\tminzoom: {\n\t\ttype: \"number\",\n\t\t\"default\": 0\n\t},\n\tmaxzoom: {\n\t\ttype: \"number\",\n\t\t\"default\": 22\n\t},\n\tattribution: {\n\t\ttype: \"string\"\n\t},\n\tpromoteId: {\n\t\ttype: \"promoteId\"\n\t},\n\tvolatile: {\n\t\ttype: \"boolean\",\n\t\t\"default\": false\n\t},\n\t\"*\": {\n\t\ttype: \"*\"\n\t}\n};\nvar source_raster = {\n\ttype: {\n\t\trequired: true,\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\traster: {\n\t\t\t}\n\t\t}\n\t},\n\turl: {\n\t\ttype: \"string\"\n\t},\n\ttiles: {\n\t\ttype: \"array\",\n\t\tvalue: \"string\"\n\t},\n\tbounds: {\n\t\ttype: \"array\",\n\t\tvalue: \"number\",\n\t\tlength: 4,\n\t\t\"default\": [\n\t\t\t-180,\n\t\t\t-85.051129,\n\t\t\t180,\n\t\t\t85.051129\n\t\t]\n\t},\n\tminzoom: {\n\t\ttype: \"number\",\n\t\t\"default\": 0\n\t},\n\tmaxzoom: {\n\t\ttype: \"number\",\n\t\t\"default\": 22\n\t},\n\ttileSize: {\n\t\ttype: \"number\",\n\t\t\"default\": 512,\n\t\tunits: \"pixels\"\n\t},\n\tscheme: {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\txyz: {\n\t\t\t},\n\t\t\ttms: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"xyz\"\n\t},\n\tattribution: {\n\t\ttype: \"string\"\n\t},\n\tvolatile: {\n\t\ttype: \"boolean\",\n\t\t\"default\": false\n\t},\n\t\"*\": {\n\t\ttype: \"*\"\n\t}\n};\nvar source_raster_dem = {\n\ttype: {\n\t\trequired: true,\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\t\"raster-dem\": {\n\t\t\t}\n\t\t}\n\t},\n\turl: {\n\t\ttype: \"string\"\n\t},\n\ttiles: {\n\t\ttype: \"array\",\n\t\tvalue: \"string\"\n\t},\n\tbounds: {\n\t\ttype: \"array\",\n\t\tvalue: \"number\",\n\t\tlength: 4,\n\t\t\"default\": [\n\t\t\t-180,\n\t\t\t-85.051129,\n\t\t\t180,\n\t\t\t85.051129\n\t\t]\n\t},\n\tminzoom: {\n\t\ttype: \"number\",\n\t\t\"default\": 0\n\t},\n\tmaxzoom: {\n\t\ttype: \"number\",\n\t\t\"default\": 22\n\t},\n\ttileSize: {\n\t\ttype: \"number\",\n\t\t\"default\": 512,\n\t\tunits: \"pixels\"\n\t},\n\tattribution: {\n\t\ttype: \"string\"\n\t},\n\tencoding: {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tterrarium: {\n\t\t\t},\n\t\t\tmapbox: {\n\t\t\t},\n\t\t\tcustom: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"mapbox\"\n\t},\n\tredFactor: {\n\t\ttype: \"number\",\n\t\t\"default\": 1\n\t},\n\tblueFactor: {\n\t\ttype: \"number\",\n\t\t\"default\": 1\n\t},\n\tgreenFactor: {\n\t\ttype: \"number\",\n\t\t\"default\": 1\n\t},\n\tbaseShift: {\n\t\ttype: \"number\",\n\t\t\"default\": 0\n\t},\n\tvolatile: {\n\t\ttype: \"boolean\",\n\t\t\"default\": false\n\t},\n\t\"*\": {\n\t\ttype: \"*\"\n\t}\n};\nvar source_geojson = {\n\ttype: {\n\t\trequired: true,\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tgeojson: {\n\t\t\t}\n\t\t}\n\t},\n\tdata: {\n\t\trequired: true,\n\t\ttype: \"*\"\n\t},\n\tmaxzoom: {\n\t\ttype: \"number\",\n\t\t\"default\": 18\n\t},\n\tattribution: {\n\t\ttype: \"string\"\n\t},\n\tbuffer: {\n\t\ttype: \"number\",\n\t\t\"default\": 128,\n\t\tmaximum: 512,\n\t\tminimum: 0\n\t},\n\tfilter: {\n\t\ttype: \"*\"\n\t},\n\ttolerance: {\n\t\ttype: \"number\",\n\t\t\"default\": 0.375\n\t},\n\tcluster: {\n\t\ttype: \"boolean\",\n\t\t\"default\": false\n\t},\n\tclusterRadius: {\n\t\ttype: \"number\",\n\t\t\"default\": 50,\n\t\tminimum: 0\n\t},\n\tclusterMaxZoom: {\n\t\ttype: \"number\"\n\t},\n\tclusterMinPoints: {\n\t\ttype: \"number\"\n\t},\n\tclusterProperties: {\n\t\ttype: \"*\"\n\t},\n\tlineMetrics: {\n\t\ttype: \"boolean\",\n\t\t\"default\": false\n\t},\n\tgenerateId: {\n\t\ttype: \"boolean\",\n\t\t\"default\": false\n\t},\n\tpromoteId: {\n\t\ttype: \"promoteId\"\n\t}\n};\nvar source_video = {\n\ttype: {\n\t\trequired: true,\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tvideo: {\n\t\t\t}\n\t\t}\n\t},\n\turls: {\n\t\trequired: true,\n\t\ttype: \"array\",\n\t\tvalue: \"string\"\n\t},\n\tcoordinates: {\n\t\trequired: true,\n\t\ttype: \"array\",\n\t\tlength: 4,\n\t\tvalue: {\n\t\t\ttype: \"array\",\n\t\t\tlength: 2,\n\t\t\tvalue: \"number\"\n\t\t}\n\t}\n};\nvar source_image = {\n\ttype: {\n\t\trequired: true,\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\timage: {\n\t\t\t}\n\t\t}\n\t},\n\turl: {\n\t\trequired: true,\n\t\ttype: \"string\"\n\t},\n\tcoordinates: {\n\t\trequired: true,\n\t\ttype: \"array\",\n\t\tlength: 4,\n\t\tvalue: {\n\t\t\ttype: \"array\",\n\t\t\tlength: 2,\n\t\t\tvalue: \"number\"\n\t\t}\n\t}\n};\nvar layer = {\n\tid: {\n\t\ttype: \"string\",\n\t\trequired: true\n\t},\n\ttype: {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tfill: {\n\t\t\t},\n\t\t\tline: {\n\t\t\t},\n\t\t\tsymbol: {\n\t\t\t},\n\t\t\tcircle: {\n\t\t\t},\n\t\t\theatmap: {\n\t\t\t},\n\t\t\t\"fill-extrusion\": {\n\t\t\t},\n\t\t\traster: {\n\t\t\t},\n\t\t\thillshade: {\n\t\t\t},\n\t\t\tbackground: {\n\t\t\t}\n\t\t},\n\t\trequired: true\n\t},\n\tmetadata: {\n\t\ttype: \"*\"\n\t},\n\tsource: {\n\t\ttype: \"string\"\n\t},\n\t\"source-layer\": {\n\t\ttype: \"string\"\n\t},\n\tminzoom: {\n\t\ttype: \"number\",\n\t\tminimum: 0,\n\t\tmaximum: 24\n\t},\n\tmaxzoom: {\n\t\ttype: \"number\",\n\t\tminimum: 0,\n\t\tmaximum: 24\n\t},\n\tfilter: {\n\t\ttype: \"filter\"\n\t},\n\tlayout: {\n\t\ttype: \"layout\"\n\t},\n\tpaint: {\n\t\ttype: \"paint\"\n\t}\n};\nvar layout = [\n\t\"layout_fill\",\n\t\"layout_line\",\n\t\"layout_circle\",\n\t\"layout_heatmap\",\n\t\"layout_fill-extrusion\",\n\t\"layout_symbol\",\n\t\"layout_raster\",\n\t\"layout_hillshade\",\n\t\"layout_background\"\n];\nvar layout_background = {\n\tvisibility: {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tvisible: {\n\t\t\t},\n\t\t\tnone: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"visible\",\n\t\t\"property-type\": \"constant\"\n\t}\n};\nvar layout_fill = {\n\t\"fill-sort-key\": {\n\t\ttype: \"number\",\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\tvisibility: {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tvisible: {\n\t\t\t},\n\t\t\tnone: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"visible\",\n\t\t\"property-type\": \"constant\"\n\t}\n};\nvar layout_circle = {\n\t\"circle-sort-key\": {\n\t\ttype: \"number\",\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\tvisibility: {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tvisible: {\n\t\t\t},\n\t\t\tnone: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"visible\",\n\t\t\"property-type\": \"constant\"\n\t}\n};\nvar layout_heatmap = {\n\tvisibility: {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tvisible: {\n\t\t\t},\n\t\t\tnone: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"visible\",\n\t\t\"property-type\": \"constant\"\n\t}\n};\nvar layout_line = {\n\t\"line-cap\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tbutt: {\n\t\t\t},\n\t\t\tround: {\n\t\t\t},\n\t\t\tsquare: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"butt\",\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"line-join\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tbevel: {\n\t\t\t},\n\t\t\tround: {\n\t\t\t},\n\t\t\tmiter: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"miter\",\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"line-miter-limit\": {\n\t\ttype: \"number\",\n\t\t\"default\": 2,\n\t\trequires: [\n\t\t\t{\n\t\t\t\t\"line-join\": \"miter\"\n\t\t\t}\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"line-round-limit\": {\n\t\ttype: \"number\",\n\t\t\"default\": 1.05,\n\t\trequires: [\n\t\t\t{\n\t\t\t\t\"line-join\": \"round\"\n\t\t\t}\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"line-sort-key\": {\n\t\ttype: \"number\",\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\tvisibility: {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tvisible: {\n\t\t\t},\n\t\t\tnone: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"visible\",\n\t\t\"property-type\": \"constant\"\n\t}\n};\nvar layout_symbol = {\n\t\"symbol-placement\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tpoint: {\n\t\t\t},\n\t\t\tline: {\n\t\t\t},\n\t\t\t\"line-center\": {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"point\",\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"symbol-spacing\": {\n\t\ttype: \"number\",\n\t\t\"default\": 250,\n\t\tminimum: 1,\n\t\tunits: \"pixels\",\n\t\trequires: [\n\t\t\t{\n\t\t\t\t\"symbol-placement\": \"line\"\n\t\t\t}\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"symbol-avoid-edges\": {\n\t\ttype: \"boolean\",\n\t\t\"default\": false,\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"symbol-sort-key\": {\n\t\ttype: \"number\",\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"symbol-z-order\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tauto: {\n\t\t\t},\n\t\t\t\"viewport-y\": {\n\t\t\t},\n\t\t\tsource: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"auto\",\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"icon-allow-overlap\": {\n\t\ttype: \"boolean\",\n\t\t\"default\": false,\n\t\trequires: [\n\t\t\t\"icon-image\",\n\t\t\t{\n\t\t\t\t\"!\": \"icon-overlap\"\n\t\t\t}\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"icon-overlap\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tnever: {\n\t\t\t},\n\t\t\talways: {\n\t\t\t},\n\t\t\tcooperative: {\n\t\t\t}\n\t\t},\n\t\trequires: [\n\t\t\t\"icon-image\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"icon-ignore-placement\": {\n\t\ttype: \"boolean\",\n\t\t\"default\": false,\n\t\trequires: [\n\t\t\t\"icon-image\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"icon-optional\": {\n\t\ttype: \"boolean\",\n\t\t\"default\": false,\n\t\trequires: [\n\t\t\t\"icon-image\",\n\t\t\t\"text-field\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"icon-rotation-alignment\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tmap: {\n\t\t\t},\n\t\t\tviewport: {\n\t\t\t},\n\t\t\tauto: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"auto\",\n\t\trequires: [\n\t\t\t\"icon-image\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"icon-size\": {\n\t\ttype: \"number\",\n\t\t\"default\": 1,\n\t\tminimum: 0,\n\t\tunits: \"factor of the original icon size\",\n\t\trequires: [\n\t\t\t\"icon-image\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"icon-text-fit\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tnone: {\n\t\t\t},\n\t\t\twidth: {\n\t\t\t},\n\t\t\theight: {\n\t\t\t},\n\t\t\tboth: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"none\",\n\t\trequires: [\n\t\t\t\"icon-image\",\n\t\t\t\"text-field\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"icon-text-fit-padding\": {\n\t\ttype: \"array\",\n\t\tvalue: \"number\",\n\t\tlength: 4,\n\t\t\"default\": [\n\t\t\t0,\n\t\t\t0,\n\t\t\t0,\n\t\t\t0\n\t\t],\n\t\tunits: \"pixels\",\n\t\trequires: [\n\t\t\t\"icon-image\",\n\t\t\t\"text-field\",\n\t\t\t{\n\t\t\t\t\"icon-text-fit\": [\n\t\t\t\t\t\"both\",\n\t\t\t\t\t\"width\",\n\t\t\t\t\t\"height\"\n\t\t\t\t]\n\t\t\t}\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"icon-image\": {\n\t\ttype: \"resolvedImage\",\n\t\ttokens: true,\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"icon-rotate\": {\n\t\ttype: \"number\",\n\t\t\"default\": 0,\n\t\tperiod: 360,\n\t\tunits: \"degrees\",\n\t\trequires: [\n\t\t\t\"icon-image\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"icon-padding\": {\n\t\ttype: \"padding\",\n\t\t\"default\": [\n\t\t\t2\n\t\t],\n\t\tunits: \"pixels\",\n\t\trequires: [\n\t\t\t\"icon-image\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"icon-keep-upright\": {\n\t\ttype: \"boolean\",\n\t\t\"default\": false,\n\t\trequires: [\n\t\t\t\"icon-image\",\n\t\t\t{\n\t\t\t\t\"icon-rotation-alignment\": \"map\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"symbol-placement\": [\n\t\t\t\t\t\"line\",\n\t\t\t\t\t\"line-center\"\n\t\t\t\t]\n\t\t\t}\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"icon-offset\": {\n\t\ttype: \"array\",\n\t\tvalue: \"number\",\n\t\tlength: 2,\n\t\t\"default\": [\n\t\t\t0,\n\t\t\t0\n\t\t],\n\t\trequires: [\n\t\t\t\"icon-image\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"icon-anchor\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tcenter: {\n\t\t\t},\n\t\t\tleft: {\n\t\t\t},\n\t\t\tright: {\n\t\t\t},\n\t\t\ttop: {\n\t\t\t},\n\t\t\tbottom: {\n\t\t\t},\n\t\t\t\"top-left\": {\n\t\t\t},\n\t\t\t\"top-right\": {\n\t\t\t},\n\t\t\t\"bottom-left\": {\n\t\t\t},\n\t\t\t\"bottom-right\": {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"center\",\n\t\trequires: [\n\t\t\t\"icon-image\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"icon-pitch-alignment\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tmap: {\n\t\t\t},\n\t\t\tviewport: {\n\t\t\t},\n\t\t\tauto: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"auto\",\n\t\trequires: [\n\t\t\t\"icon-image\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"text-pitch-alignment\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tmap: {\n\t\t\t},\n\t\t\tviewport: {\n\t\t\t},\n\t\t\tauto: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"auto\",\n\t\trequires: [\n\t\t\t\"text-field\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"text-rotation-alignment\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tmap: {\n\t\t\t},\n\t\t\tviewport: {\n\t\t\t},\n\t\t\t\"viewport-glyph\": {\n\t\t\t},\n\t\t\tauto: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"auto\",\n\t\trequires: [\n\t\t\t\"text-field\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"text-field\": {\n\t\ttype: \"formatted\",\n\t\t\"default\": \"\",\n\t\ttokens: true,\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"text-font\": {\n\t\ttype: \"array\",\n\t\tvalue: \"string\",\n\t\t\"default\": [\n\t\t\t\"Open Sans Regular\",\n\t\t\t\"Arial Unicode MS Regular\"\n\t\t],\n\t\trequires: [\n\t\t\t\"text-field\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"text-size\": {\n\t\ttype: \"number\",\n\t\t\"default\": 16,\n\t\tminimum: 0,\n\t\tunits: \"pixels\",\n\t\trequires: [\n\t\t\t\"text-field\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"text-max-width\": {\n\t\ttype: \"number\",\n\t\t\"default\": 10,\n\t\tminimum: 0,\n\t\tunits: \"ems\",\n\t\trequires: [\n\t\t\t\"text-field\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"text-line-height\": {\n\t\ttype: \"number\",\n\t\t\"default\": 1.2,\n\t\tunits: \"ems\",\n\t\trequires: [\n\t\t\t\"text-field\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"text-letter-spacing\": {\n\t\ttype: \"number\",\n\t\t\"default\": 0,\n\t\tunits: \"ems\",\n\t\trequires: [\n\t\t\t\"text-field\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"text-justify\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tauto: {\n\t\t\t},\n\t\t\tleft: {\n\t\t\t},\n\t\t\tcenter: {\n\t\t\t},\n\t\t\tright: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"center\",\n\t\trequires: [\n\t\t\t\"text-field\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"text-radial-offset\": {\n\t\ttype: \"number\",\n\t\tunits: \"ems\",\n\t\t\"default\": 0,\n\t\trequires: [\n\t\t\t\"text-field\"\n\t\t],\n\t\t\"property-type\": \"data-driven\",\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t}\n\t},\n\t\"text-variable-anchor\": {\n\t\ttype: \"array\",\n\t\tvalue: \"enum\",\n\t\tvalues: {\n\t\t\tcenter: {\n\t\t\t},\n\t\t\tleft: {\n\t\t\t},\n\t\t\tright: {\n\t\t\t},\n\t\t\ttop: {\n\t\t\t},\n\t\t\tbottom: {\n\t\t\t},\n\t\t\t\"top-left\": {\n\t\t\t},\n\t\t\t\"top-right\": {\n\t\t\t},\n\t\t\t\"bottom-left\": {\n\t\t\t},\n\t\t\t\"bottom-right\": {\n\t\t\t}\n\t\t},\n\t\trequires: [\n\t\t\t\"text-field\",\n\t\t\t{\n\t\t\t\t\"symbol-placement\": [\n\t\t\t\t\t\"point\"\n\t\t\t\t]\n\t\t\t}\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"text-variable-anchor-offset\": {\n\t\ttype: \"variableAnchorOffsetCollection\",\n\t\trequires: [\n\t\t\t\"text-field\",\n\t\t\t{\n\t\t\t\t\"symbol-placement\": [\n\t\t\t\t\t\"point\"\n\t\t\t\t]\n\t\t\t}\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"text-anchor\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tcenter: {\n\t\t\t},\n\t\t\tleft: {\n\t\t\t},\n\t\t\tright: {\n\t\t\t},\n\t\t\ttop: {\n\t\t\t},\n\t\t\tbottom: {\n\t\t\t},\n\t\t\t\"top-left\": {\n\t\t\t},\n\t\t\t\"top-right\": {\n\t\t\t},\n\t\t\t\"bottom-left\": {\n\t\t\t},\n\t\t\t\"bottom-right\": {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"center\",\n\t\trequires: [\n\t\t\t\"text-field\",\n\t\t\t{\n\t\t\t\t\"!\": \"text-variable-anchor\"\n\t\t\t}\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"text-max-angle\": {\n\t\ttype: \"number\",\n\t\t\"default\": 45,\n\t\tunits: \"degrees\",\n\t\trequires: [\n\t\t\t\"text-field\",\n\t\t\t{\n\t\t\t\t\"symbol-placement\": [\n\t\t\t\t\t\"line\",\n\t\t\t\t\t\"line-center\"\n\t\t\t\t]\n\t\t\t}\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"text-writing-mode\": {\n\t\ttype: \"array\",\n\t\tvalue: \"enum\",\n\t\tvalues: {\n\t\t\thorizontal: {\n\t\t\t},\n\t\t\tvertical: {\n\t\t\t}\n\t\t},\n\t\trequires: [\n\t\t\t\"text-field\",\n\t\t\t{\n\t\t\t\t\"symbol-placement\": [\n\t\t\t\t\t\"point\"\n\t\t\t\t]\n\t\t\t}\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"text-rotate\": {\n\t\ttype: \"number\",\n\t\t\"default\": 0,\n\t\tperiod: 360,\n\t\tunits: \"degrees\",\n\t\trequires: [\n\t\t\t\"text-field\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"text-padding\": {\n\t\ttype: \"number\",\n\t\t\"default\": 2,\n\t\tminimum: 0,\n\t\tunits: \"pixels\",\n\t\trequires: [\n\t\t\t\"text-field\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"text-keep-upright\": {\n\t\ttype: \"boolean\",\n\t\t\"default\": true,\n\t\trequires: [\n\t\t\t\"text-field\",\n\t\t\t{\n\t\t\t\t\"text-rotation-alignment\": \"map\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"symbol-placement\": [\n\t\t\t\t\t\"line\",\n\t\t\t\t\t\"line-center\"\n\t\t\t\t]\n\t\t\t}\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"text-transform\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tnone: {\n\t\t\t},\n\t\t\tuppercase: {\n\t\t\t},\n\t\t\tlowercase: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"none\",\n\t\trequires: [\n\t\t\t\"text-field\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"text-offset\": {\n\t\ttype: \"array\",\n\t\tvalue: \"number\",\n\t\tunits: \"ems\",\n\t\tlength: 2,\n\t\t\"default\": [\n\t\t\t0,\n\t\t\t0\n\t\t],\n\t\trequires: [\n\t\t\t\"text-field\",\n\t\t\t{\n\t\t\t\t\"!\": \"text-radial-offset\"\n\t\t\t}\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"text-allow-overlap\": {\n\t\ttype: \"boolean\",\n\t\t\"default\": false,\n\t\trequires: [\n\t\t\t\"text-field\",\n\t\t\t{\n\t\t\t\t\"!\": \"text-overlap\"\n\t\t\t}\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"text-overlap\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tnever: {\n\t\t\t},\n\t\t\talways: {\n\t\t\t},\n\t\t\tcooperative: {\n\t\t\t}\n\t\t},\n\t\trequires: [\n\t\t\t\"text-field\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"text-ignore-placement\": {\n\t\ttype: \"boolean\",\n\t\t\"default\": false,\n\t\trequires: [\n\t\t\t\"text-field\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"text-optional\": {\n\t\ttype: \"boolean\",\n\t\t\"default\": false,\n\t\trequires: [\n\t\t\t\"text-field\",\n\t\t\t\"icon-image\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\tvisibility: {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tvisible: {\n\t\t\t},\n\t\t\tnone: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"visible\",\n\t\t\"property-type\": \"constant\"\n\t}\n};\nvar layout_raster = {\n\tvisibility: {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tvisible: {\n\t\t\t},\n\t\t\tnone: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"visible\",\n\t\t\"property-type\": \"constant\"\n\t}\n};\nvar layout_hillshade = {\n\tvisibility: {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tvisible: {\n\t\t\t},\n\t\t\tnone: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"visible\",\n\t\t\"property-type\": \"constant\"\n\t}\n};\nvar filter = {\n\ttype: \"array\",\n\tvalue: \"*\"\n};\nvar filter_operator = {\n\ttype: \"enum\",\n\tvalues: {\n\t\t\"==\": {\n\t\t},\n\t\t\"!=\": {\n\t\t},\n\t\t\">\": {\n\t\t},\n\t\t\">=\": {\n\t\t},\n\t\t\"<\": {\n\t\t},\n\t\t\"<=\": {\n\t\t},\n\t\t\"in\": {\n\t\t},\n\t\t\"!in\": {\n\t\t},\n\t\tall: {\n\t\t},\n\t\tany: {\n\t\t},\n\t\tnone: {\n\t\t},\n\t\thas: {\n\t\t},\n\t\t\"!has\": {\n\t\t}\n\t}\n};\nvar geometry_type = {\n\ttype: \"enum\",\n\tvalues: {\n\t\tPoint: {\n\t\t},\n\t\tLineString: {\n\t\t},\n\t\tPolygon: {\n\t\t}\n\t}\n};\nvar function_stop = {\n\ttype: \"array\",\n\tminimum: 0,\n\tmaximum: 24,\n\tvalue: [\n\t\t\"number\",\n\t\t\"color\"\n\t],\n\tlength: 2\n};\nvar expression$1 = {\n\ttype: \"array\",\n\tvalue: \"*\",\n\tminimum: 1\n};\nvar light = {\n\tanchor: {\n\t\ttype: \"enum\",\n\t\t\"default\": \"viewport\",\n\t\tvalues: {\n\t\t\tmap: {\n\t\t\t},\n\t\t\tviewport: {\n\t\t\t}\n\t\t},\n\t\t\"property-type\": \"data-constant\",\n\t\ttransition: false,\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t}\n\t},\n\tposition: {\n\t\ttype: \"array\",\n\t\t\"default\": [\n\t\t\t1.15,\n\t\t\t210,\n\t\t\t30\n\t\t],\n\t\tlength: 3,\n\t\tvalue: \"number\",\n\t\t\"property-type\": \"data-constant\",\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t}\n\t},\n\tcolor: {\n\t\ttype: \"color\",\n\t\t\"property-type\": \"data-constant\",\n\t\t\"default\": \"#ffffff\",\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\ttransition: true\n\t},\n\tintensity: {\n\t\ttype: \"number\",\n\t\t\"property-type\": \"data-constant\",\n\t\t\"default\": 0.5,\n\t\tminimum: 0,\n\t\tmaximum: 1,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\ttransition: true\n\t}\n};\nvar sky = {\n\t\"sky-color\": {\n\t\ttype: \"color\",\n\t\t\"property-type\": \"data-constant\",\n\t\t\"default\": \"#88C6FC\",\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\ttransition: true\n\t},\n\t\"horizon-color\": {\n\t\ttype: \"color\",\n\t\t\"property-type\": \"data-constant\",\n\t\t\"default\": \"#ffffff\",\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\ttransition: true\n\t},\n\t\"fog-color\": {\n\t\ttype: \"color\",\n\t\t\"property-type\": \"data-constant\",\n\t\t\"default\": \"#ffffff\",\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\ttransition: true\n\t},\n\t\"fog-ground-blend\": {\n\t\ttype: \"number\",\n\t\t\"property-type\": \"data-constant\",\n\t\t\"default\": 0.5,\n\t\tminimum: 0,\n\t\tmaximum: 1,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\ttransition: true\n\t},\n\t\"horizon-fog-blend\": {\n\t\ttype: \"number\",\n\t\t\"property-type\": \"data-constant\",\n\t\t\"default\": 0.8,\n\t\tminimum: 0,\n\t\tmaximum: 1,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\ttransition: true\n\t},\n\t\"sky-horizon-blend\": {\n\t\ttype: \"number\",\n\t\t\"property-type\": \"data-constant\",\n\t\t\"default\": 0.8,\n\t\tminimum: 0,\n\t\tmaximum: 1,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\ttransition: true\n\t},\n\t\"atmosphere-blend\": {\n\t\ttype: \"number\",\n\t\t\"property-type\": \"data-constant\",\n\t\t\"default\": 0.8,\n\t\tminimum: 0,\n\t\tmaximum: 1,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\ttransition: true\n\t}\n};\nvar terrain = {\n\tsource: {\n\t\ttype: \"string\",\n\t\trequired: true\n\t},\n\texaggeration: {\n\t\ttype: \"number\",\n\t\tminimum: 0,\n\t\t\"default\": 1\n\t}\n};\nvar projection = {\n\ttype: {\n\t\ttype: \"projectionDefinition\",\n\t\t\"default\": \"mercator\",\n\t\t\"property-type\": \"data-constant\",\n\t\ttransition: false,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t}\n\t}\n};\nvar paint = [\n\t\"paint_fill\",\n\t\"paint_line\",\n\t\"paint_circle\",\n\t\"paint_heatmap\",\n\t\"paint_fill-extrusion\",\n\t\"paint_symbol\",\n\t\"paint_raster\",\n\t\"paint_hillshade\",\n\t\"paint_background\"\n];\nvar paint_fill = {\n\t\"fill-antialias\": {\n\t\ttype: \"boolean\",\n\t\t\"default\": true,\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"fill-opacity\": {\n\t\ttype: \"number\",\n\t\t\"default\": 1,\n\t\tminimum: 0,\n\t\tmaximum: 1,\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"fill-color\": {\n\t\ttype: \"color\",\n\t\t\"default\": \"#000000\",\n\t\ttransition: true,\n\t\trequires: [\n\t\t\t{\n\t\t\t\t\"!\": \"fill-pattern\"\n\t\t\t}\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"fill-outline-color\": {\n\t\ttype: \"color\",\n\t\ttransition: true,\n\t\trequires: [\n\t\t\t{\n\t\t\t\t\"!\": \"fill-pattern\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"fill-antialias\": true\n\t\t\t}\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"fill-translate\": {\n\t\ttype: \"array\",\n\t\tvalue: \"number\",\n\t\tlength: 2,\n\t\t\"default\": [\n\t\t\t0,\n\t\t\t0\n\t\t],\n\t\ttransition: true,\n\t\tunits: \"pixels\",\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"fill-translate-anchor\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tmap: {\n\t\t\t},\n\t\t\tviewport: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"map\",\n\t\trequires: [\n\t\t\t\"fill-translate\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"fill-pattern\": {\n\t\ttype: \"resolvedImage\",\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"cross-faded-data-driven\"\n\t}\n};\nvar paint_line = {\n\t\"line-opacity\": {\n\t\ttype: \"number\",\n\t\t\"default\": 1,\n\t\tminimum: 0,\n\t\tmaximum: 1,\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"line-color\": {\n\t\ttype: \"color\",\n\t\t\"default\": \"#000000\",\n\t\ttransition: true,\n\t\trequires: [\n\t\t\t{\n\t\t\t\t\"!\": \"line-pattern\"\n\t\t\t}\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"line-translate\": {\n\t\ttype: \"array\",\n\t\tvalue: \"number\",\n\t\tlength: 2,\n\t\t\"default\": [\n\t\t\t0,\n\t\t\t0\n\t\t],\n\t\ttransition: true,\n\t\tunits: \"pixels\",\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"line-translate-anchor\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tmap: {\n\t\t\t},\n\t\t\tviewport: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"map\",\n\t\trequires: [\n\t\t\t\"line-translate\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"line-width\": {\n\t\ttype: \"number\",\n\t\t\"default\": 1,\n\t\tminimum: 0,\n\t\ttransition: true,\n\t\tunits: \"pixels\",\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"line-gap-width\": {\n\t\ttype: \"number\",\n\t\t\"default\": 0,\n\t\tminimum: 0,\n\t\ttransition: true,\n\t\tunits: \"pixels\",\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"line-offset\": {\n\t\ttype: \"number\",\n\t\t\"default\": 0,\n\t\ttransition: true,\n\t\tunits: \"pixels\",\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"line-blur\": {\n\t\ttype: \"number\",\n\t\t\"default\": 0,\n\t\tminimum: 0,\n\t\ttransition: true,\n\t\tunits: \"pixels\",\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"line-dasharray\": {\n\t\ttype: \"array\",\n\t\tvalue: \"number\",\n\t\tminimum: 0,\n\t\ttransition: true,\n\t\tunits: \"line widths\",\n\t\trequires: [\n\t\t\t{\n\t\t\t\t\"!\": \"line-pattern\"\n\t\t\t}\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"cross-faded\"\n\t},\n\t\"line-pattern\": {\n\t\ttype: \"resolvedImage\",\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"cross-faded-data-driven\"\n\t},\n\t\"line-gradient\": {\n\t\ttype: \"color\",\n\t\ttransition: false,\n\t\trequires: [\n\t\t\t{\n\t\t\t\t\"!\": \"line-dasharray\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"!\": \"line-pattern\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tsource: \"geojson\",\n\t\t\t\thas: {\n\t\t\t\t\tlineMetrics: true\n\t\t\t\t}\n\t\t\t}\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"line-progress\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"color-ramp\"\n\t}\n};\nvar paint_circle = {\n\t\"circle-radius\": {\n\t\ttype: \"number\",\n\t\t\"default\": 5,\n\t\tminimum: 0,\n\t\ttransition: true,\n\t\tunits: \"pixels\",\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"circle-color\": {\n\t\ttype: \"color\",\n\t\t\"default\": \"#000000\",\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"circle-blur\": {\n\t\ttype: \"number\",\n\t\t\"default\": 0,\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"circle-opacity\": {\n\t\ttype: \"number\",\n\t\t\"default\": 1,\n\t\tminimum: 0,\n\t\tmaximum: 1,\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"circle-translate\": {\n\t\ttype: \"array\",\n\t\tvalue: \"number\",\n\t\tlength: 2,\n\t\t\"default\": [\n\t\t\t0,\n\t\t\t0\n\t\t],\n\t\ttransition: true,\n\t\tunits: \"pixels\",\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"circle-translate-anchor\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tmap: {\n\t\t\t},\n\t\t\tviewport: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"map\",\n\t\trequires: [\n\t\t\t\"circle-translate\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"circle-pitch-scale\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tmap: {\n\t\t\t},\n\t\t\tviewport: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"map\",\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"circle-pitch-alignment\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tmap: {\n\t\t\t},\n\t\t\tviewport: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"viewport\",\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"circle-stroke-width\": {\n\t\ttype: \"number\",\n\t\t\"default\": 0,\n\t\tminimum: 0,\n\t\ttransition: true,\n\t\tunits: \"pixels\",\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"circle-stroke-color\": {\n\t\ttype: \"color\",\n\t\t\"default\": \"#000000\",\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"circle-stroke-opacity\": {\n\t\ttype: \"number\",\n\t\t\"default\": 1,\n\t\tminimum: 0,\n\t\tmaximum: 1,\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t}\n};\nvar paint_heatmap = {\n\t\"heatmap-radius\": {\n\t\ttype: \"number\",\n\t\t\"default\": 30,\n\t\tminimum: 1,\n\t\ttransition: true,\n\t\tunits: \"pixels\",\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"heatmap-weight\": {\n\t\ttype: \"number\",\n\t\t\"default\": 1,\n\t\tminimum: 0,\n\t\ttransition: false,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"heatmap-intensity\": {\n\t\ttype: \"number\",\n\t\t\"default\": 1,\n\t\tminimum: 0,\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"heatmap-color\": {\n\t\ttype: \"color\",\n\t\t\"default\": [\n\t\t\t\"interpolate\",\n\t\t\t[\n\t\t\t\t\"linear\"\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"heatmap-density\"\n\t\t\t],\n\t\t\t0,\n\t\t\t\"rgba(0, 0, 255, 0)\",\n\t\t\t0.1,\n\t\t\t\"royalblue\",\n\t\t\t0.3,\n\t\t\t\"cyan\",\n\t\t\t0.5,\n\t\t\t\"lime\",\n\t\t\t0.7,\n\t\t\t\"yellow\",\n\t\t\t1,\n\t\t\t\"red\"\n\t\t],\n\t\ttransition: false,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"heatmap-density\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"color-ramp\"\n\t},\n\t\"heatmap-opacity\": {\n\t\ttype: \"number\",\n\t\t\"default\": 1,\n\t\tminimum: 0,\n\t\tmaximum: 1,\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t}\n};\nvar paint_symbol = {\n\t\"icon-opacity\": {\n\t\ttype: \"number\",\n\t\t\"default\": 1,\n\t\tminimum: 0,\n\t\tmaximum: 1,\n\t\ttransition: true,\n\t\trequires: [\n\t\t\t\"icon-image\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"icon-color\": {\n\t\ttype: \"color\",\n\t\t\"default\": \"#000000\",\n\t\ttransition: true,\n\t\trequires: [\n\t\t\t\"icon-image\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"icon-halo-color\": {\n\t\ttype: \"color\",\n\t\t\"default\": \"rgba(0, 0, 0, 0)\",\n\t\ttransition: true,\n\t\trequires: [\n\t\t\t\"icon-image\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"icon-halo-width\": {\n\t\ttype: \"number\",\n\t\t\"default\": 0,\n\t\tminimum: 0,\n\t\ttransition: true,\n\t\tunits: \"pixels\",\n\t\trequires: [\n\t\t\t\"icon-image\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"icon-halo-blur\": {\n\t\ttype: \"number\",\n\t\t\"default\": 0,\n\t\tminimum: 0,\n\t\ttransition: true,\n\t\tunits: \"pixels\",\n\t\trequires: [\n\t\t\t\"icon-image\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"icon-translate\": {\n\t\ttype: \"array\",\n\t\tvalue: \"number\",\n\t\tlength: 2,\n\t\t\"default\": [\n\t\t\t0,\n\t\t\t0\n\t\t],\n\t\ttransition: true,\n\t\tunits: \"pixels\",\n\t\trequires: [\n\t\t\t\"icon-image\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"icon-translate-anchor\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tmap: {\n\t\t\t},\n\t\t\tviewport: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"map\",\n\t\trequires: [\n\t\t\t\"icon-image\",\n\t\t\t\"icon-translate\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"text-opacity\": {\n\t\ttype: \"number\",\n\t\t\"default\": 1,\n\t\tminimum: 0,\n\t\tmaximum: 1,\n\t\ttransition: true,\n\t\trequires: [\n\t\t\t\"text-field\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"text-color\": {\n\t\ttype: \"color\",\n\t\t\"default\": \"#000000\",\n\t\ttransition: true,\n\t\toverridable: true,\n\t\trequires: [\n\t\t\t\"text-field\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"text-halo-color\": {\n\t\ttype: \"color\",\n\t\t\"default\": \"rgba(0, 0, 0, 0)\",\n\t\ttransition: true,\n\t\trequires: [\n\t\t\t\"text-field\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"text-halo-width\": {\n\t\ttype: \"number\",\n\t\t\"default\": 0,\n\t\tminimum: 0,\n\t\ttransition: true,\n\t\tunits: \"pixels\",\n\t\trequires: [\n\t\t\t\"text-field\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"text-halo-blur\": {\n\t\ttype: \"number\",\n\t\t\"default\": 0,\n\t\tminimum: 0,\n\t\ttransition: true,\n\t\tunits: \"pixels\",\n\t\trequires: [\n\t\t\t\"text-field\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"text-translate\": {\n\t\ttype: \"array\",\n\t\tvalue: \"number\",\n\t\tlength: 2,\n\t\t\"default\": [\n\t\t\t0,\n\t\t\t0\n\t\t],\n\t\ttransition: true,\n\t\tunits: \"pixels\",\n\t\trequires: [\n\t\t\t\"text-field\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"text-translate-anchor\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tmap: {\n\t\t\t},\n\t\t\tviewport: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"map\",\n\t\trequires: [\n\t\t\t\"text-field\",\n\t\t\t\"text-translate\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t}\n};\nvar paint_raster = {\n\t\"raster-opacity\": {\n\t\ttype: \"number\",\n\t\t\"default\": 1,\n\t\tminimum: 0,\n\t\tmaximum: 1,\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"raster-hue-rotate\": {\n\t\ttype: \"number\",\n\t\t\"default\": 0,\n\t\tperiod: 360,\n\t\ttransition: true,\n\t\tunits: \"degrees\",\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"raster-brightness-min\": {\n\t\ttype: \"number\",\n\t\t\"default\": 0,\n\t\tminimum: 0,\n\t\tmaximum: 1,\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"raster-brightness-max\": {\n\t\ttype: \"number\",\n\t\t\"default\": 1,\n\t\tminimum: 0,\n\t\tmaximum: 1,\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"raster-saturation\": {\n\t\ttype: \"number\",\n\t\t\"default\": 0,\n\t\tminimum: -1,\n\t\tmaximum: 1,\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"raster-contrast\": {\n\t\ttype: \"number\",\n\t\t\"default\": 0,\n\t\tminimum: -1,\n\t\tmaximum: 1,\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"raster-resampling\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tlinear: {\n\t\t\t},\n\t\t\tnearest: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"linear\",\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"raster-fade-duration\": {\n\t\ttype: \"number\",\n\t\t\"default\": 300,\n\t\tminimum: 0,\n\t\ttransition: false,\n\t\tunits: \"milliseconds\",\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t}\n};\nvar paint_hillshade = {\n\t\"hillshade-illumination-direction\": {\n\t\ttype: \"number\",\n\t\t\"default\": 335,\n\t\tminimum: 0,\n\t\tmaximum: 359,\n\t\ttransition: false,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"hillshade-illumination-anchor\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tmap: {\n\t\t\t},\n\t\t\tviewport: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"viewport\",\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"hillshade-exaggeration\": {\n\t\ttype: \"number\",\n\t\t\"default\": 0.5,\n\t\tminimum: 0,\n\t\tmaximum: 1,\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"hillshade-shadow-color\": {\n\t\ttype: \"color\",\n\t\t\"default\": \"#000000\",\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"hillshade-highlight-color\": {\n\t\ttype: \"color\",\n\t\t\"default\": \"#FFFFFF\",\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"hillshade-accent-color\": {\n\t\ttype: \"color\",\n\t\t\"default\": \"#000000\",\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t}\n};\nvar paint_background = {\n\t\"background-color\": {\n\t\ttype: \"color\",\n\t\t\"default\": \"#000000\",\n\t\ttransition: true,\n\t\trequires: [\n\t\t\t{\n\t\t\t\t\"!\": \"background-pattern\"\n\t\t\t}\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"background-pattern\": {\n\t\ttype: \"resolvedImage\",\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"cross-faded\"\n\t},\n\t\"background-opacity\": {\n\t\ttype: \"number\",\n\t\t\"default\": 1,\n\t\tminimum: 0,\n\t\tmaximum: 1,\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t}\n};\nvar transition = {\n\tduration: {\n\t\ttype: \"number\",\n\t\t\"default\": 300,\n\t\tminimum: 0,\n\t\tunits: \"milliseconds\"\n\t},\n\tdelay: {\n\t\ttype: \"number\",\n\t\t\"default\": 0,\n\t\tminimum: 0,\n\t\tunits: \"milliseconds\"\n\t}\n};\nvar promoteId = {\n\t\"*\": {\n\t\ttype: \"string\"\n\t}\n};\nvar v8Spec = {\n\t$version: $version,\n\t$root: $root,\n\tsources: sources,\n\tsource: source,\n\tsource_vector: source_vector,\n\tsource_raster: source_raster,\n\tsource_raster_dem: source_raster_dem,\n\tsource_geojson: source_geojson,\n\tsource_video: source_video,\n\tsource_image: source_image,\n\tlayer: layer,\n\tlayout: layout,\n\tlayout_background: layout_background,\n\tlayout_fill: layout_fill,\n\tlayout_circle: layout_circle,\n\tlayout_heatmap: layout_heatmap,\n\t\"layout_fill-extrusion\": {\n\tvisibility: {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tvisible: {\n\t\t\t},\n\t\t\tnone: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"visible\",\n\t\t\"property-type\": \"constant\"\n\t}\n},\n\tlayout_line: layout_line,\n\tlayout_symbol: layout_symbol,\n\tlayout_raster: layout_raster,\n\tlayout_hillshade: layout_hillshade,\n\tfilter: filter,\n\tfilter_operator: filter_operator,\n\tgeometry_type: geometry_type,\n\t\"function\": {\n\texpression: {\n\t\ttype: \"expression\"\n\t},\n\tstops: {\n\t\ttype: \"array\",\n\t\tvalue: \"function_stop\"\n\t},\n\tbase: {\n\t\ttype: \"number\",\n\t\t\"default\": 1,\n\t\tminimum: 0\n\t},\n\tproperty: {\n\t\ttype: \"string\",\n\t\t\"default\": \"$zoom\"\n\t},\n\ttype: {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tidentity: {\n\t\t\t},\n\t\t\texponential: {\n\t\t\t},\n\t\t\tinterval: {\n\t\t\t},\n\t\t\tcategorical: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"exponential\"\n\t},\n\tcolorSpace: {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\trgb: {\n\t\t\t},\n\t\t\tlab: {\n\t\t\t},\n\t\t\thcl: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"rgb\"\n\t},\n\t\"default\": {\n\t\ttype: \"*\",\n\t\trequired: false\n\t}\n},\n\tfunction_stop: function_stop,\n\texpression: expression$1,\n\tlight: light,\n\tsky: sky,\n\tterrain: terrain,\n\tprojection: projection,\n\tpaint: paint,\n\tpaint_fill: paint_fill,\n\t\"paint_fill-extrusion\": {\n\t\"fill-extrusion-opacity\": {\n\t\ttype: \"number\",\n\t\t\"default\": 1,\n\t\tminimum: 0,\n\t\tmaximum: 1,\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"fill-extrusion-color\": {\n\t\ttype: \"color\",\n\t\t\"default\": \"#000000\",\n\t\ttransition: true,\n\t\trequires: [\n\t\t\t{\n\t\t\t\t\"!\": \"fill-extrusion-pattern\"\n\t\t\t}\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"fill-extrusion-translate\": {\n\t\ttype: \"array\",\n\t\tvalue: \"number\",\n\t\tlength: 2,\n\t\t\"default\": [\n\t\t\t0,\n\t\t\t0\n\t\t],\n\t\ttransition: true,\n\t\tunits: \"pixels\",\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"fill-extrusion-translate-anchor\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tmap: {\n\t\t\t},\n\t\t\tviewport: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"map\",\n\t\trequires: [\n\t\t\t\"fill-extrusion-translate\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"fill-extrusion-pattern\": {\n\t\ttype: \"resolvedImage\",\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"cross-faded-data-driven\"\n\t},\n\t\"fill-extrusion-height\": {\n\t\ttype: \"number\",\n\t\t\"default\": 0,\n\t\tminimum: 0,\n\t\tunits: \"meters\",\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"fill-extrusion-base\": {\n\t\ttype: \"number\",\n\t\t\"default\": 0,\n\t\tminimum: 0,\n\t\tunits: \"meters\",\n\t\ttransition: true,\n\t\trequires: [\n\t\t\t\"fill-extrusion-height\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"fill-extrusion-vertical-gradient\": {\n\t\ttype: \"boolean\",\n\t\t\"default\": true,\n\t\ttransition: false,\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t}\n},\n\tpaint_line: paint_line,\n\tpaint_circle: paint_circle,\n\tpaint_heatmap: paint_heatmap,\n\tpaint_symbol: paint_symbol,\n\tpaint_raster: paint_raster,\n\tpaint_hillshade: paint_hillshade,\n\tpaint_background: paint_background,\n\ttransition: transition,\n\t\"property-type\": {\n\t\"data-driven\": {\n\t\ttype: \"property-type\"\n\t},\n\t\"cross-faded\": {\n\t\ttype: \"property-type\"\n\t},\n\t\"cross-faded-data-driven\": {\n\t\ttype: \"property-type\"\n\t},\n\t\"color-ramp\": {\n\t\ttype: \"property-type\"\n\t},\n\t\"data-constant\": {\n\t\ttype: \"property-type\"\n\t},\n\tconstant: {\n\t\ttype: \"property-type\"\n\t}\n},\n\tpromoteId: promoteId\n};\n\nconst refProperties = ['type', 'source', 'source-layer', 'minzoom', 'maxzoom', 'filter', 'layout'];\n\nfunction deref(layer, parent) {\n    const result = {};\n    for (const k in layer) {\n        if (k !== 'ref') {\n            result[k] = layer[k];\n        }\n    }\n    refProperties.forEach((k) => {\n        if (k in parent) {\n            result[k] = parent[k];\n        }\n    });\n    return result;\n}\n/**\n * Given an array of layers, some of which may contain `ref` properties\n * whose value is the `id` of another property, return a new array where\n * such layers have been augmented with the 'type', 'source', etc. properties\n * from the parent layer, and the `ref` property has been removed.\n *\n * The input is not modified. The output may contain references to portions\n * of the input.\n *\n * @private\n * @param {Array<Layer>} layers\n * @returns {Array<Layer>}\n */\nfunction derefLayers(layers) {\n    layers = layers.slice();\n    const map = Object.create(null);\n    for (let i = 0; i < layers.length; i++) {\n        map[layers[i].id] = layers[i];\n    }\n    for (let i = 0; i < layers.length; i++) {\n        if ('ref' in layers[i]) {\n            layers[i] = deref(layers[i], map[layers[i].ref]);\n        }\n    }\n    return layers;\n}\n\n/**\n * Deeply compares two object literals.\n *\n * @private\n */\nfunction deepEqual(a, b) {\n    if (Array.isArray(a)) {\n        if (!Array.isArray(b) || a.length !== b.length)\n            return false;\n        for (let i = 0; i < a.length; i++) {\n            if (!deepEqual(a[i], b[i]))\n                return false;\n        }\n        return true;\n    }\n    if (typeof a === 'object' && a !== null && b !== null) {\n        if (!(typeof b === 'object'))\n            return false;\n        const keys = Object.keys(a);\n        if (keys.length !== Object.keys(b).length)\n            return false;\n        for (const key in a) {\n            if (!deepEqual(a[key], b[key]))\n                return false;\n        }\n        return true;\n    }\n    return a === b;\n}\n\n/**\n * The main reason for this method is to allow type check when adding a command to the array.\n * @param commands - The commands array to add to\n * @param command - The command to add\n */\nfunction addCommand(commands, command) {\n    commands.push(command);\n}\nfunction addSource(sourceId, after, commands) {\n    addCommand(commands, { command: 'addSource', args: [sourceId, after[sourceId]] });\n}\nfunction removeSource(sourceId, commands, sourcesRemoved) {\n    addCommand(commands, { command: 'removeSource', args: [sourceId] });\n    sourcesRemoved[sourceId] = true;\n}\nfunction updateSource(sourceId, after, commands, sourcesRemoved) {\n    removeSource(sourceId, commands, sourcesRemoved);\n    addSource(sourceId, after, commands);\n}\nfunction canUpdateGeoJSON(before, after, sourceId) {\n    let prop;\n    for (prop in before[sourceId]) {\n        if (!Object.prototype.hasOwnProperty.call(before[sourceId], prop))\n            continue;\n        if (prop !== 'data' && !deepEqual(before[sourceId][prop], after[sourceId][prop])) {\n            return false;\n        }\n    }\n    for (prop in after[sourceId]) {\n        if (!Object.prototype.hasOwnProperty.call(after[sourceId], prop))\n            continue;\n        if (prop !== 'data' && !deepEqual(before[sourceId][prop], after[sourceId][prop])) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction diffSources(before, after, commands, sourcesRemoved) {\n    before = before || {};\n    after = after || {};\n    let sourceId;\n    // look for sources to remove\n    for (sourceId in before) {\n        if (!Object.prototype.hasOwnProperty.call(before, sourceId))\n            continue;\n        if (!Object.prototype.hasOwnProperty.call(after, sourceId)) {\n            removeSource(sourceId, commands, sourcesRemoved);\n        }\n    }\n    // look for sources to add/update\n    for (sourceId in after) {\n        if (!Object.prototype.hasOwnProperty.call(after, sourceId))\n            continue;\n        if (!Object.prototype.hasOwnProperty.call(before, sourceId)) {\n            addSource(sourceId, after, commands);\n        }\n        else if (!deepEqual(before[sourceId], after[sourceId])) {\n            if (before[sourceId].type === 'geojson' && after[sourceId].type === 'geojson' && canUpdateGeoJSON(before, after, sourceId)) {\n                addCommand(commands, { command: 'setGeoJSONSourceData', args: [sourceId, after[sourceId].data] });\n            }\n            else {\n                // no update command, must remove then add\n                updateSource(sourceId, after, commands, sourcesRemoved);\n            }\n        }\n    }\n}\nfunction diffLayerPropertyChanges(before, after, commands, layerId, klass, command) {\n    before = before || {};\n    after = after || {};\n    for (const prop in before) {\n        if (!Object.prototype.hasOwnProperty.call(before, prop))\n            continue;\n        if (!deepEqual(before[prop], after[prop])) {\n            commands.push({ command, args: [layerId, prop, after[prop], klass] });\n        }\n    }\n    for (const prop in after) {\n        if (!Object.prototype.hasOwnProperty.call(after, prop) || Object.prototype.hasOwnProperty.call(before, prop))\n            continue;\n        if (!deepEqual(before[prop], after[prop])) {\n            commands.push({ command, args: [layerId, prop, after[prop], klass] });\n        }\n    }\n}\nfunction pluckId(layer) {\n    return layer.id;\n}\nfunction indexById(group, layer) {\n    group[layer.id] = layer;\n    return group;\n}\nfunction diffLayers(before, after, commands) {\n    before = before || [];\n    after = after || [];\n    // order of layers by id\n    const beforeOrder = before.map(pluckId);\n    const afterOrder = after.map(pluckId);\n    // index of layer by id\n    const beforeIndex = before.reduce(indexById, {});\n    const afterIndex = after.reduce(indexById, {});\n    // track order of layers as if they have been mutated\n    const tracker = beforeOrder.slice();\n    // layers that have been added do not need to be diffed\n    const clean = Object.create(null);\n    let layerId;\n    let beforeLayer;\n    let afterLayer;\n    let insertBeforeLayerId;\n    let prop;\n    // remove layers\n    for (let i = 0, d = 0; i < beforeOrder.length; i++) {\n        layerId = beforeOrder[i];\n        if (!Object.prototype.hasOwnProperty.call(afterIndex, layerId)) {\n            addCommand(commands, { command: 'removeLayer', args: [layerId] });\n            tracker.splice(tracker.indexOf(layerId, d), 1);\n        }\n        else {\n            // limit where in tracker we need to look for a match\n            d++;\n        }\n    }\n    // add/reorder layers\n    for (let i = 0, d = 0; i < afterOrder.length; i++) {\n        // work backwards as insert is before an existing layer\n        layerId = afterOrder[afterOrder.length - 1 - i];\n        if (tracker[tracker.length - 1 - i] === layerId)\n            continue;\n        if (Object.prototype.hasOwnProperty.call(beforeIndex, layerId)) {\n            // remove the layer before we insert at the correct position\n            addCommand(commands, { command: 'removeLayer', args: [layerId] });\n            tracker.splice(tracker.lastIndexOf(layerId, tracker.length - d), 1);\n        }\n        else {\n            // limit where in tracker we need to look for a match\n            d++;\n        }\n        // add layer at correct position\n        insertBeforeLayerId = tracker[tracker.length - i];\n        addCommand(commands, { command: 'addLayer', args: [afterIndex[layerId], insertBeforeLayerId] });\n        tracker.splice(tracker.length - i, 0, layerId);\n        clean[layerId] = true;\n    }\n    // update layers\n    for (let i = 0; i < afterOrder.length; i++) {\n        layerId = afterOrder[i];\n        beforeLayer = beforeIndex[layerId];\n        afterLayer = afterIndex[layerId];\n        // no need to update if previously added (new or moved)\n        if (clean[layerId] || deepEqual(beforeLayer, afterLayer))\n            continue;\n        // If source, source-layer, or type have changes, then remove the layer\n        // and add it back 'from scratch'.\n        if (!deepEqual(beforeLayer.source, afterLayer.source) || !deepEqual(beforeLayer['source-layer'], afterLayer['source-layer']) || !deepEqual(beforeLayer.type, afterLayer.type)) {\n            addCommand(commands, { command: 'removeLayer', args: [layerId] });\n            // we add the layer back at the same position it was already in, so\n            // there's no need to update the `tracker`\n            insertBeforeLayerId = tracker[tracker.lastIndexOf(layerId) + 1];\n            addCommand(commands, { command: 'addLayer', args: [afterLayer, insertBeforeLayerId] });\n            continue;\n        }\n        // layout, paint, filter, minzoom, maxzoom\n        diffLayerPropertyChanges(beforeLayer.layout, afterLayer.layout, commands, layerId, null, 'setLayoutProperty');\n        diffLayerPropertyChanges(beforeLayer.paint, afterLayer.paint, commands, layerId, null, 'setPaintProperty');\n        if (!deepEqual(beforeLayer.filter, afterLayer.filter)) {\n            addCommand(commands, { command: 'setFilter', args: [layerId, afterLayer.filter] });\n        }\n        if (!deepEqual(beforeLayer.minzoom, afterLayer.minzoom) || !deepEqual(beforeLayer.maxzoom, afterLayer.maxzoom)) {\n            addCommand(commands, { command: 'setLayerZoomRange', args: [layerId, afterLayer.minzoom, afterLayer.maxzoom] });\n        }\n        // handle all other layer props, including paint.*\n        for (prop in beforeLayer) {\n            if (!Object.prototype.hasOwnProperty.call(beforeLayer, prop))\n                continue;\n            if (prop === 'layout' || prop === 'paint' || prop === 'filter' ||\n                prop === 'metadata' || prop === 'minzoom' || prop === 'maxzoom')\n                continue;\n            if (prop.indexOf('paint.') === 0) {\n                diffLayerPropertyChanges(beforeLayer[prop], afterLayer[prop], commands, layerId, prop.slice(6), 'setPaintProperty');\n            }\n            else if (!deepEqual(beforeLayer[prop], afterLayer[prop])) {\n                addCommand(commands, { command: 'setLayerProperty', args: [layerId, prop, afterLayer[prop]] });\n            }\n        }\n        for (prop in afterLayer) {\n            if (!Object.prototype.hasOwnProperty.call(afterLayer, prop) || Object.prototype.hasOwnProperty.call(beforeLayer, prop))\n                continue;\n            if (prop === 'layout' || prop === 'paint' || prop === 'filter' ||\n                prop === 'metadata' || prop === 'minzoom' || prop === 'maxzoom')\n                continue;\n            if (prop.indexOf('paint.') === 0) {\n                diffLayerPropertyChanges(beforeLayer[prop], afterLayer[prop], commands, layerId, prop.slice(6), 'setPaintProperty');\n            }\n            else if (!deepEqual(beforeLayer[prop], afterLayer[prop])) {\n                addCommand(commands, { command: 'setLayerProperty', args: [layerId, prop, afterLayer[prop]] });\n            }\n        }\n    }\n}\n/**\n * Diff two stylesheet\n *\n * Creates semanticly aware diffs that can easily be applied at runtime.\n * Operations produced by the diff closely resemble the maplibre-gl-js API. Any\n * error creating the diff will fall back to the 'setStyle' operation.\n *\n * Example diff:\n * [\n *     { command: 'setConstant', args: ['@water', '#0000FF'] },\n *     { command: 'setPaintProperty', args: ['background', 'background-color', 'black'] }\n * ]\n *\n * @private\n * @param {*} [before] stylesheet to compare from\n * @param {*} after stylesheet to compare to\n * @returns Array list of changes\n */\nfunction diff(before, after) {\n    if (!before)\n        return [{ command: 'setStyle', args: [after] }];\n    let commands = [];\n    try {\n        // Handle changes to top-level properties\n        if (!deepEqual(before.version, after.version)) {\n            return [{ command: 'setStyle', args: [after] }];\n        }\n        if (!deepEqual(before.center, after.center)) {\n            commands.push({ command: 'setCenter', args: [after.center] });\n        }\n        if (!deepEqual(before.centerAltitude, after.centerAltitude)) {\n            commands.push({ command: 'setCenterAltitude', args: [after.centerAltitude] });\n        }\n        if (!deepEqual(before.zoom, after.zoom)) {\n            commands.push({ command: 'setZoom', args: [after.zoom] });\n        }\n        if (!deepEqual(before.bearing, after.bearing)) {\n            commands.push({ command: 'setBearing', args: [after.bearing] });\n        }\n        if (!deepEqual(before.pitch, after.pitch)) {\n            commands.push({ command: 'setPitch', args: [after.pitch] });\n        }\n        if (!deepEqual(before.roll, after.roll)) {\n            commands.push({ command: 'setRoll', args: [after.roll] });\n        }\n        if (!deepEqual(before.sprite, after.sprite)) {\n            commands.push({ command: 'setSprite', args: [after.sprite] });\n        }\n        if (!deepEqual(before.glyphs, after.glyphs)) {\n            commands.push({ command: 'setGlyphs', args: [after.glyphs] });\n        }\n        if (!deepEqual(before.transition, after.transition)) {\n            commands.push({ command: 'setTransition', args: [after.transition] });\n        }\n        if (!deepEqual(before.light, after.light)) {\n            commands.push({ command: 'setLight', args: [after.light] });\n        }\n        if (!deepEqual(before.terrain, after.terrain)) {\n            commands.push({ command: 'setTerrain', args: [after.terrain] });\n        }\n        if (!deepEqual(before.sky, after.sky)) {\n            commands.push({ command: 'setSky', args: [after.sky] });\n        }\n        if (!deepEqual(before.projection, after.projection)) {\n            commands.push({ command: 'setProjection', args: [after.projection] });\n        }\n        // Handle changes to `sources`\n        // If a source is to be removed, we also--before the removeSource\n        // command--need to remove all the style layers that depend on it.\n        const sourcesRemoved = {};\n        // First collect the {add,remove}Source commands\n        const removeOrAddSourceCommands = [];\n        diffSources(before.sources, after.sources, removeOrAddSourceCommands, sourcesRemoved);\n        // Push a removeLayer command for each style layer that depends on a\n        // source that's being removed.\n        // Also, exclude any such layers them from the input to `diffLayers`\n        // below, so that diffLayers produces the appropriate `addLayers`\n        // command\n        const beforeLayers = [];\n        if (before.layers) {\n            before.layers.forEach((layer) => {\n                if ('source' in layer && sourcesRemoved[layer.source]) {\n                    commands.push({ command: 'removeLayer', args: [layer.id] });\n                }\n                else {\n                    beforeLayers.push(layer);\n                }\n            });\n        }\n        commands = commands.concat(removeOrAddSourceCommands);\n        // Handle changes to `layers`\n        diffLayers(beforeLayers, after.layers, commands);\n    }\n    catch (e) {\n        // fall back to setStyle\n        console.warn('Unable to compute style diff:', e);\n        commands = [{ command: 'setStyle', args: [after] }];\n    }\n    return commands;\n}\n\n// Note: Do not inherit from Error. It breaks when transpiling to ES5.\nclass ValidationError {\n    constructor(key, value, message, identifier) {\n        this.message = (key ? `${key}: ` : '') + message;\n        if (identifier)\n            this.identifier = identifier;\n        if (value !== null && value !== undefined && value.__line__) {\n            this.line = value.__line__;\n        }\n    }\n}\n\n// Note: Do not inherit from Error. It breaks when transpiling to ES5.\nclass ParsingError {\n    constructor(error) {\n        this.error = error;\n        this.message = error.message;\n        const match = error.message.match(/line (\\d+)/);\n        this.line = match ? parseInt(match[1], 10) : 0;\n    }\n}\n\nfunction extendBy(output, ...inputs) {\n    for (const input of inputs) {\n        for (const k in input) {\n            output[k] = input[k];\n        }\n    }\n    return output;\n}\n\nclass ExpressionParsingError extends Error {\n    constructor(key, message) {\n        super(message);\n        this.message = message;\n        this.key = key;\n    }\n}\n\n/**\n * Tracks `let` bindings during expression parsing.\n * @private\n */\nclass Scope {\n    constructor(parent, bindings = []) {\n        this.parent = parent;\n        this.bindings = {};\n        for (const [name, expression] of bindings) {\n            this.bindings[name] = expression;\n        }\n    }\n    concat(bindings) {\n        return new Scope(this, bindings);\n    }\n    get(name) {\n        if (this.bindings[name]) {\n            return this.bindings[name];\n        }\n        if (this.parent) {\n            return this.parent.get(name);\n        }\n        throw new Error(`${name} not found in scope.`);\n    }\n    has(name) {\n        if (this.bindings[name])\n            return true;\n        return this.parent ? this.parent.has(name) : false;\n    }\n}\n\nconst NullType = { kind: 'null' };\nconst NumberType = { kind: 'number' };\nconst StringType = { kind: 'string' };\nconst BooleanType = { kind: 'boolean' };\nconst ColorType = { kind: 'color' };\nconst ProjectionDefinitionType = { kind: 'projectionDefinition' };\nconst ObjectType = { kind: 'object' };\nconst ValueType = { kind: 'value' };\nconst ErrorType = { kind: 'error' };\nconst CollatorType = { kind: 'collator' };\nconst FormattedType = { kind: 'formatted' };\nconst PaddingType = { kind: 'padding' };\nconst ResolvedImageType = { kind: 'resolvedImage' };\nconst VariableAnchorOffsetCollectionType = { kind: 'variableAnchorOffsetCollection' };\nfunction array(itemType, N) {\n    return {\n        kind: 'array',\n        itemType,\n        N\n    };\n}\nfunction typeToString(type) {\n    if (type.kind === 'array') {\n        const itemType = typeToString(type.itemType);\n        return typeof type.N === 'number' ?\n            `array<${itemType}, ${type.N}>` :\n            type.itemType.kind === 'value' ? 'array' : `array<${itemType}>`;\n    }\n    else {\n        return type.kind;\n    }\n}\nconst valueMemberTypes = [\n    NullType,\n    NumberType,\n    StringType,\n    BooleanType,\n    ColorType,\n    ProjectionDefinitionType,\n    FormattedType,\n    ObjectType,\n    array(ValueType),\n    PaddingType,\n    ResolvedImageType,\n    VariableAnchorOffsetCollectionType\n];\n/**\n * Returns null if `t` is a subtype of `expected`; otherwise returns an\n * error message.\n * @private\n */\nfunction checkSubtype(expected, t) {\n    if (t.kind === 'error') {\n        // Error is a subtype of every type\n        return null;\n    }\n    else if (expected.kind === 'array') {\n        if (t.kind === 'array' &&\n            ((t.N === 0 && t.itemType.kind === 'value') || !checkSubtype(expected.itemType, t.itemType)) &&\n            (typeof expected.N !== 'number' || expected.N === t.N)) {\n            return null;\n        }\n    }\n    else if (expected.kind === t.kind) {\n        return null;\n    }\n    else if (expected.kind === 'value') {\n        for (const memberType of valueMemberTypes) {\n            if (!checkSubtype(memberType, t)) {\n                return null;\n            }\n        }\n    }\n    return `Expected ${typeToString(expected)} but found ${typeToString(t)} instead.`;\n}\nfunction isValidType(provided, allowedTypes) {\n    return allowedTypes.some(t => t.kind === provided.kind);\n}\nfunction isValidNativeType(provided, allowedTypes) {\n    return allowedTypes.some(t => {\n        if (t === 'null') {\n            return provided === null;\n        }\n        else if (t === 'array') {\n            return Array.isArray(provided);\n        }\n        else if (t === 'object') {\n            return provided && !Array.isArray(provided) && typeof provided === 'object';\n        }\n        else {\n            return t === typeof provided;\n        }\n    });\n}\n/**\n * Verify whether the specified type is of the same type as the specified sample.\n *\n * @param provided Type to verify\n * @param sample Sample type to reference\n * @returns `true` if both objects are of the same type, `false` otherwise\n * @example basic types\n * if (verifyType(outputType, ValueType)) {\n *     // type narrowed to:\n *     outputType.kind; // 'value'\n * }\n * @example array types\n * if (verifyType(outputType, array(NumberType))) {\n *     // type narrowed to:\n *     outputType.kind; // 'array'\n *     outputType.itemType; // NumberTypeT\n *     outputType.itemType.kind; // 'number'\n * }\n */\nfunction verifyType(provided, sample) {\n    if (provided.kind === 'array' && sample.kind === 'array') {\n        return provided.itemType.kind === sample.itemType.kind && typeof provided.N === 'number';\n    }\n    return provided.kind === sample.kind;\n}\n\n// See https://observablehq.com/@mbostock/lab-and-rgb\nconst Xn = 0.96422, Yn = 1, Zn = 0.82521, t0 = 4 / 29, t1 = 6 / 29, t2 = 3 * t1 * t1, t3 = t1 * t1 * t1, deg2rad = Math.PI / 180, rad2deg = 180 / Math.PI;\nfunction constrainAngle(angle) {\n    angle = angle % 360;\n    if (angle < 0) {\n        angle += 360;\n    }\n    return angle;\n}\nfunction rgbToLab([r, g, b, alpha]) {\n    r = rgb2xyz(r);\n    g = rgb2xyz(g);\n    b = rgb2xyz(b);\n    let x, z;\n    const y = xyz2lab((0.2225045 * r + 0.7168786 * g + 0.0606169 * b) / Yn);\n    if (r === g && g === b) {\n        x = z = y;\n    }\n    else {\n        x = xyz2lab((0.4360747 * r + 0.3850649 * g + 0.1430804 * b) / Xn);\n        z = xyz2lab((0.0139322 * r + 0.0971045 * g + 0.7141733 * b) / Zn);\n    }\n    const l = 116 * y - 16;\n    return [(l < 0) ? 0 : l, 500 * (x - y), 200 * (y - z), alpha];\n}\nfunction rgb2xyz(x) {\n    return (x <= 0.04045) ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\nfunction xyz2lab(t) {\n    return (t > t3) ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\nfunction labToRgb([l, a, b, alpha]) {\n    let y = (l + 16) / 116, x = isNaN(a) ? y : y + a / 500, z = isNaN(b) ? y : y - b / 200;\n    y = Yn * lab2xyz(y);\n    x = Xn * lab2xyz(x);\n    z = Zn * lab2xyz(z);\n    return [\n        xyz2rgb(3.1338561 * x - 1.6168667 * y - 0.4906146 * z), // D50 -> sRGB\n        xyz2rgb(-0.9787684 * x + 1.9161415 * y + 0.0334540 * z),\n        xyz2rgb(0.0719453 * x - 0.2289914 * y + 1.4052427 * z),\n        alpha,\n    ];\n}\nfunction xyz2rgb(x) {\n    x = (x <= 0.00304) ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055;\n    return (x < 0) ? 0 : (x > 1) ? 1 : x; // clip to 0..1 range\n}\nfunction lab2xyz(t) {\n    return (t > t1) ? t * t * t : t2 * (t - t0);\n}\nfunction rgbToHcl(rgbColor) {\n    const [l, a, b, alpha] = rgbToLab(rgbColor);\n    const c = Math.sqrt(a * a + b * b);\n    const h = Math.round(c * 10000) ? constrainAngle(Math.atan2(b, a) * rad2deg) : NaN;\n    return [h, c, l, alpha];\n}\nfunction hclToRgb([h, c, l, alpha]) {\n    h = isNaN(h) ? 0 : h * deg2rad;\n    return labToRgb([l, Math.cos(h) * c, Math.sin(h) * c, alpha]);\n}\n// https://drafts.csswg.org/css-color-4/#hsl-to-rgb\nfunction hslToRgb([h, s, l, alpha]) {\n    h = constrainAngle(h);\n    s /= 100;\n    l /= 100;\n    function f(n) {\n        const k = (n + h / 30) % 12;\n        const a = s * Math.min(l, 1 - l);\n        return l - a * Math.max(-1, Math.min(k - 3, 9 - k, 1));\n    }\n    return [f(0), f(8), f(4), alpha];\n}\n\n/**\n * CSS color parser compliant with CSS Color 4 Specification.\n * Supports: named colors, `transparent` keyword, all rgb hex notations,\n * rgb(), rgba(), hsl() and hsla() functions.\n * Does not round the parsed values to integers from the range 0..255.\n *\n * Syntax:\n *\n * <alpha-value> = <number> | <percentage>\n *         <hue> = <number> | <angle>\n *\n *         rgb() = rgb( <percentage>{3} [ / <alpha-value> ]? ) | rgb( <number>{3} [ / <alpha-value> ]? )\n *         rgb() = rgb( <percentage>#{3} , <alpha-value>? )    | rgb( <number>#{3} , <alpha-value>? )\n *\n *         hsl() = hsl( <hue> <percentage> <percentage> [ / <alpha-value> ]? )\n *         hsl() = hsl( <hue>, <percentage>, <percentage>, <alpha-value>? )\n *\n * Caveats:\n *   - <angle> - <number> with optional `deg` suffix; `grad`, `rad`, `turn` are not supported\n *   - `none` keyword is not supported\n *   - comments inside rgb()/hsl() are not supported\n *   - legacy color syntax rgba() is supported with an identical grammar and behavior to rgb()\n *   - legacy color syntax hsla() is supported with an identical grammar and behavior to hsl()\n *\n * @param input CSS color string to parse.\n * @returns Color in sRGB color space, with `red`, `green`, `blue`\n * and `alpha` channels normalized to the range 0..1,\n * or `undefined` if the input is not a valid color string.\n */\nfunction parseCssColor(input) {\n    input = input.toLowerCase().trim();\n    if (input === 'transparent') {\n        return [0, 0, 0, 0];\n    }\n    // 'white', 'black', 'blue'\n    const namedColorsMatch = namedColors[input];\n    if (namedColorsMatch) {\n        const [r, g, b] = namedColorsMatch;\n        return [r / 255, g / 255, b / 255, 1];\n    }\n    // #f0c, #f0cf, #ff00cc, #ff00ccff\n    if (input.startsWith('#')) {\n        const hexRegexp = /^#(?:[0-9a-f]{3,4}|[0-9a-f]{6}|[0-9a-f]{8})$/;\n        if (hexRegexp.test(input)) {\n            const step = input.length < 6 ? 1 : 2;\n            let i = 1;\n            return [\n                parseHex(input.slice(i, i += step)),\n                parseHex(input.slice(i, i += step)),\n                parseHex(input.slice(i, i += step)),\n                parseHex(input.slice(i, i + step) || 'ff'),\n            ];\n        }\n    }\n    // rgb(128 0 0), rgb(50% 0% 0%), rgba(255,0,255,0.6), rgb(255 0 255 / 60%), rgb(100% 0% 100% /.6)\n    if (input.startsWith('rgb')) {\n        const rgbRegExp = /^rgba?\\(\\s*([\\de.+-]+)(%)?(?:\\s+|\\s*(,)\\s*)([\\de.+-]+)(%)?(?:\\s+|\\s*(,)\\s*)([\\de.+-]+)(%)?(?:\\s*([,\\/])\\s*([\\de.+-]+)(%)?)?\\s*\\)$/;\n        const rgbMatch = input.match(rgbRegExp);\n        if (rgbMatch) {\n            const [_, // eslint-disable-line @typescript-eslint/no-unused-vars\n            r, // <numeric>\n            rp, // %         (optional)\n            f1, // ,         (optional)\n            g, // <numeric>\n            gp, // %         (optional)\n            f2, // ,         (optional)\n            b, // <numeric>\n            bp, // %         (optional)\n            f3, // ,|/       (optional)\n            a, // <numeric> (optional)\n            ap, // %         (optional)\n            ] = rgbMatch;\n            const argFormat = [f1 || ' ', f2 || ' ', f3].join('');\n            if (argFormat === '  ' ||\n                argFormat === '  /' ||\n                argFormat === ',,' ||\n                argFormat === ',,,') {\n                const valFormat = [rp, gp, bp].join('');\n                const maxValue = (valFormat === '%%%') ? 100 :\n                    (valFormat === '') ? 255 : 0;\n                if (maxValue) {\n                    const rgba = [\n                        clamp(+r / maxValue, 0, 1),\n                        clamp(+g / maxValue, 0, 1),\n                        clamp(+b / maxValue, 0, 1),\n                        a ? parseAlpha(+a, ap) : 1,\n                    ];\n                    if (validateNumbers(rgba)) {\n                        return rgba;\n                    }\n                    // invalid numbers\n                }\n                // values must be all numbers or all percentages\n            }\n            return; // comma optional syntax requires no commas at all\n        }\n    }\n    // hsl(120 50% 80%), hsla(120deg,50%,80%,.9), hsl(12e1 50% 80% / 90%)\n    const hslRegExp = /^hsla?\\(\\s*([\\de.+-]+)(?:deg)?(?:\\s+|\\s*(,)\\s*)([\\de.+-]+)%(?:\\s+|\\s*(,)\\s*)([\\de.+-]+)%(?:\\s*([,\\/])\\s*([\\de.+-]+)(%)?)?\\s*\\)$/;\n    const hslMatch = input.match(hslRegExp);\n    if (hslMatch) {\n        const [_, // eslint-disable-line @typescript-eslint/no-unused-vars\n        h, // <numeric>\n        f1, // ,         (optional)\n        s, // <numeric>\n        f2, // ,         (optional)\n        l, // <numeric>\n        f3, // ,|/       (optional)\n        a, // <numeric> (optional)\n        ap, // %         (optional)\n        ] = hslMatch;\n        const argFormat = [f1 || ' ', f2 || ' ', f3].join('');\n        if (argFormat === '  ' ||\n            argFormat === '  /' ||\n            argFormat === ',,' ||\n            argFormat === ',,,') {\n            const hsla = [\n                +h,\n                clamp(+s, 0, 100),\n                clamp(+l, 0, 100),\n                a ? parseAlpha(+a, ap) : 1,\n            ];\n            if (validateNumbers(hsla)) {\n                return hslToRgb(hsla);\n            }\n            // invalid numbers\n        }\n        // comma optional syntax requires no commas at all\n    }\n}\nfunction parseHex(hex) {\n    return parseInt(hex.padEnd(2, hex), 16) / 255;\n}\nfunction parseAlpha(a, asPercentage) {\n    return clamp(asPercentage ? (a / 100) : a, 0, 1);\n}\nfunction clamp(n, min, max) {\n    return Math.min(Math.max(min, n), max);\n}\n/**\n * The regular expression for numeric values is not super specific, and it may\n * happen that it will accept a value that is not a valid number. In order to\n * detect and eliminate such values this function exists.\n *\n * @param array Array of uncertain numbers.\n * @returns `true` if the specified array contains only valid numbers, `false` otherwise.\n */\nfunction validateNumbers(array) {\n    return !array.some(Number.isNaN);\n}\n/**\n * To generate:\n * - visit {@link https://www.w3.org/TR/css-color-4/#named-colors}\n * - run in the console:\n * @example\n * copy(`{\\n${[...document.querySelector('.named-color-table tbody').children].map((tr) => `${tr.cells[2].textContent.trim()}: [${tr.cells[4].textContent.trim().split(/\\s+/).join(', ')}],`).join('\\n')}\\n}`);\n */\nconst namedColors = {\n    aliceblue: [240, 248, 255],\n    antiquewhite: [250, 235, 215],\n    aqua: [0, 255, 255],\n    aquamarine: [127, 255, 212],\n    azure: [240, 255, 255],\n    beige: [245, 245, 220],\n    bisque: [255, 228, 196],\n    black: [0, 0, 0],\n    blanchedalmond: [255, 235, 205],\n    blue: [0, 0, 255],\n    blueviolet: [138, 43, 226],\n    brown: [165, 42, 42],\n    burlywood: [222, 184, 135],\n    cadetblue: [95, 158, 160],\n    chartreuse: [127, 255, 0],\n    chocolate: [210, 105, 30],\n    coral: [255, 127, 80],\n    cornflowerblue: [100, 149, 237],\n    cornsilk: [255, 248, 220],\n    crimson: [220, 20, 60],\n    cyan: [0, 255, 255],\n    darkblue: [0, 0, 139],\n    darkcyan: [0, 139, 139],\n    darkgoldenrod: [184, 134, 11],\n    darkgray: [169, 169, 169],\n    darkgreen: [0, 100, 0],\n    darkgrey: [169, 169, 169],\n    darkkhaki: [189, 183, 107],\n    darkmagenta: [139, 0, 139],\n    darkolivegreen: [85, 107, 47],\n    darkorange: [255, 140, 0],\n    darkorchid: [153, 50, 204],\n    darkred: [139, 0, 0],\n    darksalmon: [233, 150, 122],\n    darkseagreen: [143, 188, 143],\n    darkslateblue: [72, 61, 139],\n    darkslategray: [47, 79, 79],\n    darkslategrey: [47, 79, 79],\n    darkturquoise: [0, 206, 209],\n    darkviolet: [148, 0, 211],\n    deeppink: [255, 20, 147],\n    deepskyblue: [0, 191, 255],\n    dimgray: [105, 105, 105],\n    dimgrey: [105, 105, 105],\n    dodgerblue: [30, 144, 255],\n    firebrick: [178, 34, 34],\n    floralwhite: [255, 250, 240],\n    forestgreen: [34, 139, 34],\n    fuchsia: [255, 0, 255],\n    gainsboro: [220, 220, 220],\n    ghostwhite: [248, 248, 255],\n    gold: [255, 215, 0],\n    goldenrod: [218, 165, 32],\n    gray: [128, 128, 128],\n    green: [0, 128, 0],\n    greenyellow: [173, 255, 47],\n    grey: [128, 128, 128],\n    honeydew: [240, 255, 240],\n    hotpink: [255, 105, 180],\n    indianred: [205, 92, 92],\n    indigo: [75, 0, 130],\n    ivory: [255, 255, 240],\n    khaki: [240, 230, 140],\n    lavender: [230, 230, 250],\n    lavenderblush: [255, 240, 245],\n    lawngreen: [124, 252, 0],\n    lemonchiffon: [255, 250, 205],\n    lightblue: [173, 216, 230],\n    lightcoral: [240, 128, 128],\n    lightcyan: [224, 255, 255],\n    lightgoldenrodyellow: [250, 250, 210],\n    lightgray: [211, 211, 211],\n    lightgreen: [144, 238, 144],\n    lightgrey: [211, 211, 211],\n    lightpink: [255, 182, 193],\n    lightsalmon: [255, 160, 122],\n    lightseagreen: [32, 178, 170],\n    lightskyblue: [135, 206, 250],\n    lightslategray: [119, 136, 153],\n    lightslategrey: [119, 136, 153],\n    lightsteelblue: [176, 196, 222],\n    lightyellow: [255, 255, 224],\n    lime: [0, 255, 0],\n    limegreen: [50, 205, 50],\n    linen: [250, 240, 230],\n    magenta: [255, 0, 255],\n    maroon: [128, 0, 0],\n    mediumaquamarine: [102, 205, 170],\n    mediumblue: [0, 0, 205],\n    mediumorchid: [186, 85, 211],\n    mediumpurple: [147, 112, 219],\n    mediumseagreen: [60, 179, 113],\n    mediumslateblue: [123, 104, 238],\n    mediumspringgreen: [0, 250, 154],\n    mediumturquoise: [72, 209, 204],\n    mediumvioletred: [199, 21, 133],\n    midnightblue: [25, 25, 112],\n    mintcream: [245, 255, 250],\n    mistyrose: [255, 228, 225],\n    moccasin: [255, 228, 181],\n    navajowhite: [255, 222, 173],\n    navy: [0, 0, 128],\n    oldlace: [253, 245, 230],\n    olive: [128, 128, 0],\n    olivedrab: [107, 142, 35],\n    orange: [255, 165, 0],\n    orangered: [255, 69, 0],\n    orchid: [218, 112, 214],\n    palegoldenrod: [238, 232, 170],\n    palegreen: [152, 251, 152],\n    paleturquoise: [175, 238, 238],\n    palevioletred: [219, 112, 147],\n    papayawhip: [255, 239, 213],\n    peachpuff: [255, 218, 185],\n    peru: [205, 133, 63],\n    pink: [255, 192, 203],\n    plum: [221, 160, 221],\n    powderblue: [176, 224, 230],\n    purple: [128, 0, 128],\n    rebeccapurple: [102, 51, 153],\n    red: [255, 0, 0],\n    rosybrown: [188, 143, 143],\n    royalblue: [65, 105, 225],\n    saddlebrown: [139, 69, 19],\n    salmon: [250, 128, 114],\n    sandybrown: [244, 164, 96],\n    seagreen: [46, 139, 87],\n    seashell: [255, 245, 238],\n    sienna: [160, 82, 45],\n    silver: [192, 192, 192],\n    skyblue: [135, 206, 235],\n    slateblue: [106, 90, 205],\n    slategray: [112, 128, 144],\n    slategrey: [112, 128, 144],\n    snow: [255, 250, 250],\n    springgreen: [0, 255, 127],\n    steelblue: [70, 130, 180],\n    tan: [210, 180, 140],\n    teal: [0, 128, 128],\n    thistle: [216, 191, 216],\n    tomato: [255, 99, 71],\n    turquoise: [64, 224, 208],\n    violet: [238, 130, 238],\n    wheat: [245, 222, 179],\n    white: [255, 255, 255],\n    whitesmoke: [245, 245, 245],\n    yellow: [255, 255, 0],\n    yellowgreen: [154, 205, 50],\n};\n\nfunction interpolateNumber(from, to, t) {\n    return from + t * (to - from);\n}\nfunction interpolateArray(from, to, t) {\n    return from.map((d, i) => {\n        return interpolateNumber(d, to[i], t);\n    });\n}\n\n/**\n * Checks whether the specified color space is one of the supported interpolation color spaces.\n *\n * @param colorSpace Color space key to verify.\n * @returns `true` if the specified color space is one of the supported\n * interpolation color spaces, `false` otherwise\n */\nfunction isSupportedInterpolationColorSpace(colorSpace) {\n    return colorSpace === 'rgb' || colorSpace === 'hcl' || colorSpace === 'lab';\n}\n/**\n * Color representation used by WebGL.\n * Defined in sRGB color space and pre-blended with alpha.\n * @private\n */\nclass Color {\n    /**\n     * @param r Red component premultiplied by `alpha` 0..1\n     * @param g Green component premultiplied by `alpha` 0..1\n     * @param b Blue component premultiplied by `alpha` 0..1\n     * @param [alpha=1] Alpha component 0..1\n     * @param [premultiplied=true] Whether the `r`, `g` and `b` values have already\n     * been multiplied by alpha. If `true` nothing happens if `false` then they will\n     * be multiplied automatically.\n     */\n    constructor(r, g, b, alpha = 1, premultiplied = true) {\n        this.r = r;\n        this.g = g;\n        this.b = b;\n        this.a = alpha;\n        if (!premultiplied) {\n            this.r *= alpha;\n            this.g *= alpha;\n            this.b *= alpha;\n            if (!alpha) {\n                // alpha = 0 erases completely rgb channels. This behavior is not desirable\n                // if this particular color is later used in color interpolation.\n                // Because of that, a reference to original color is saved.\n                this.overwriteGetter('rgb', [r, g, b, alpha]);\n            }\n        }\n    }\n    /**\n     * Parses CSS color strings and converts colors to sRGB color space if needed.\n     * Officially supported color formats:\n     * - keyword, e.g. 'aquamarine' or 'steelblue'\n     * - hex (with 3, 4, 6 or 8 digits), e.g. '#f0f' or '#e9bebea9'\n     * - rgb and rgba, e.g. 'rgb(0,240,120)' or 'rgba(0%,94%,47%,0.1)' or 'rgb(0 240 120 / .3)'\n     * - hsl and hsla, e.g. 'hsl(0,0%,83%)' or 'hsla(0,0%,83%,.5)' or 'hsl(0 0% 83% / 20%)'\n     *\n     * @param input CSS color string to parse.\n     * @returns A `Color` instance, or `undefined` if the input is not a valid color string.\n     */\n    static parse(input) {\n        // in zoom-and-property function input could be an instance of Color class\n        if (input instanceof Color) {\n            return input;\n        }\n        if (typeof input !== 'string') {\n            return;\n        }\n        const rgba = parseCssColor(input);\n        if (rgba) {\n            return new Color(...rgba, false);\n        }\n    }\n    /**\n     * Used in color interpolation and by 'to-rgba' expression.\n     *\n     * @returns Gien color, with reversed alpha blending, in sRGB color space.\n     */\n    get rgb() {\n        const { r, g, b, a } = this;\n        const f = a || Infinity; // reverse alpha blending factor\n        return this.overwriteGetter('rgb', [r / f, g / f, b / f, a]);\n    }\n    /**\n     * Used in color interpolation.\n     *\n     * @returns Gien color, with reversed alpha blending, in HCL color space.\n     */\n    get hcl() {\n        return this.overwriteGetter('hcl', rgbToHcl(this.rgb));\n    }\n    /**\n     * Used in color interpolation.\n     *\n     * @returns Gien color, with reversed alpha blending, in LAB color space.\n     */\n    get lab() {\n        return this.overwriteGetter('lab', rgbToLab(this.rgb));\n    }\n    /**\n     * Lazy getter pattern. When getter is called for the first time lazy value\n     * is calculated and then overwrites getter function in given object instance.\n     *\n     * @example:\n     * const redColor = Color.parse('red');\n     * let x = redColor.hcl; // this will invoke `get hcl()`, which will calculate\n     * // the value of red in HCL space and invoke this `overwriteGetter` function\n     * // which in turn will set a field with a key 'hcl' in the `redColor` object.\n     * // In other words it will override `get hcl()` from its `Color` prototype\n     * // with its own property: hcl = [calculated red value in hcl].\n     * let y = redColor.hcl; // next call will no longer invoke getter but simply\n     * // return the previously calculated value\n     * x === y; // true - `x` is exactly the same object as `y`\n     *\n     * @param getterKey Getter key\n     * @param lazyValue Lazily calculated value to be memoized by current instance\n     * @private\n     */\n    overwriteGetter(getterKey, lazyValue) {\n        Object.defineProperty(this, getterKey, { value: lazyValue });\n        return lazyValue;\n    }\n    /**\n     * Used by 'to-string' expression.\n     *\n     * @returns Serialized color in format `rgba(r,g,b,a)`\n     * where r,g,b are numbers within 0..255 and alpha is number within 1..0\n     *\n     * @example\n     * var purple = new Color.parse('purple');\n     * purple.toString; // = \"rgba(128,0,128,1)\"\n     * var translucentGreen = new Color.parse('rgba(26, 207, 26, .73)');\n     * translucentGreen.toString(); // = \"rgba(26,207,26,0.73)\"\n     */\n    toString() {\n        const [r, g, b, a] = this.rgb;\n        return `rgba(${[r, g, b].map(n => Math.round(n * 255)).join(',')},${a})`;\n    }\n    static interpolate(from, to, t, spaceKey = 'rgb') {\n        switch (spaceKey) {\n            case 'rgb': {\n                const [r, g, b, alpha] = interpolateArray(from.rgb, to.rgb, t);\n                return new Color(r, g, b, alpha, false);\n            }\n            case 'hcl': {\n                const [hue0, chroma0, light0, alphaF] = from.hcl;\n                const [hue1, chroma1, light1, alphaT] = to.hcl;\n                // https://github.com/gka/chroma.js/blob/cd1b3c0926c7a85cbdc3b1453b3a94006de91a92/src/interpolator/_hsx.js\n                let hue, chroma;\n                if (!isNaN(hue0) && !isNaN(hue1)) {\n                    let dh = hue1 - hue0;\n                    if (hue1 > hue0 && dh > 180) {\n                        dh -= 360;\n                    }\n                    else if (hue1 < hue0 && hue0 - hue1 > 180) {\n                        dh += 360;\n                    }\n                    hue = hue0 + t * dh;\n                }\n                else if (!isNaN(hue0)) {\n                    hue = hue0;\n                    if (light1 === 1 || light1 === 0)\n                        chroma = chroma0;\n                }\n                else if (!isNaN(hue1)) {\n                    hue = hue1;\n                    if (light0 === 1 || light0 === 0)\n                        chroma = chroma1;\n                }\n                else {\n                    hue = NaN;\n                }\n                const [r, g, b, alpha] = hclToRgb([\n                    hue,\n                    chroma !== null && chroma !== undefined ? chroma : interpolateNumber(chroma0, chroma1, t),\n                    interpolateNumber(light0, light1, t),\n                    interpolateNumber(alphaF, alphaT, t),\n                ]);\n                return new Color(r, g, b, alpha, false);\n            }\n            case 'lab': {\n                const [r, g, b, alpha] = labToRgb(interpolateArray(from.lab, to.lab, t));\n                return new Color(r, g, b, alpha, false);\n            }\n        }\n    }\n}\nColor.black = new Color(0, 0, 0, 1);\nColor.white = new Color(1, 1, 1, 1);\nColor.transparent = new Color(0, 0, 0, 0);\nColor.red = new Color(1, 0, 0, 1);\n\n// Flow type declarations for Intl cribbed from\n// https://github.com/facebook/flow/issues/1270\nclass Collator {\n    constructor(caseSensitive, diacriticSensitive, locale) {\n        if (caseSensitive)\n            this.sensitivity = diacriticSensitive ? 'variant' : 'case';\n        else\n            this.sensitivity = diacriticSensitive ? 'accent' : 'base';\n        this.locale = locale;\n        this.collator = new Intl.Collator(this.locale ? this.locale : [], { sensitivity: this.sensitivity, usage: 'search' });\n    }\n    compare(lhs, rhs) {\n        return this.collator.compare(lhs, rhs);\n    }\n    resolvedLocale() {\n        // We create a Collator without \"usage: search\" because we don't want\n        // the search options encoded in our result (e.g. \"en-u-co-search\")\n        return new Intl.Collator(this.locale ? this.locale : [])\n            .resolvedOptions().locale;\n    }\n}\n\nconst VERTICAL_ALIGN_OPTIONS = ['bottom', 'center', 'top'];\nclass FormattedSection {\n    constructor(text, image, scale, fontStack, textColor, verticalAlign) {\n        this.text = text;\n        this.image = image;\n        this.scale = scale;\n        this.fontStack = fontStack;\n        this.textColor = textColor;\n        this.verticalAlign = verticalAlign;\n    }\n}\nclass Formatted {\n    constructor(sections) {\n        this.sections = sections;\n    }\n    static fromString(unformatted) {\n        return new Formatted([new FormattedSection(unformatted, null, null, null, null, null)]);\n    }\n    isEmpty() {\n        if (this.sections.length === 0)\n            return true;\n        return !this.sections.some(section => section.text.length !== 0 ||\n            (section.image && section.image.name.length !== 0));\n    }\n    static factory(text) {\n        if (text instanceof Formatted) {\n            return text;\n        }\n        else {\n            return Formatted.fromString(text);\n        }\n    }\n    toString() {\n        if (this.sections.length === 0)\n            return '';\n        return this.sections.map(section => section.text).join('');\n    }\n}\n\n/**\n * A set of four numbers representing padding around a box. Create instances from\n * bare arrays or numeric values using the static method `Padding.parse`.\n * @private\n */\nclass Padding {\n    constructor(values) {\n        this.values = values.slice();\n    }\n    /**\n     * Numeric padding values\n     * @param input A padding value\n     * @returns A `Padding` instance, or `undefined` if the input is not a valid padding value.\n     */\n    static parse(input) {\n        if (input instanceof Padding) {\n            return input;\n        }\n        // Backwards compatibility: bare number is treated the same as array with single value.\n        // Padding applies to all four sides.\n        if (typeof input === 'number') {\n            return new Padding([input, input, input, input]);\n        }\n        if (!Array.isArray(input)) {\n            return undefined;\n        }\n        if (input.length < 1 || input.length > 4) {\n            return undefined;\n        }\n        for (const val of input) {\n            if (typeof val !== 'number') {\n                return undefined;\n            }\n        }\n        // Expand shortcut properties into explicit 4-sided values\n        switch (input.length) {\n            case 1:\n                input = [input[0], input[0], input[0], input[0]];\n                break;\n            case 2:\n                input = [input[0], input[1], input[0], input[1]];\n                break;\n            case 3:\n                input = [input[0], input[1], input[2], input[1]];\n                break;\n        }\n        return new Padding(input);\n    }\n    toString() {\n        return JSON.stringify(this.values);\n    }\n    static interpolate(from, to, t) {\n        return new Padding(interpolateArray(from.values, to.values, t));\n    }\n}\n\nclass RuntimeError {\n    constructor(message) {\n        this.name = 'ExpressionEvaluationError';\n        this.message = message;\n    }\n    toJSON() {\n        return this.message;\n    }\n}\n\n/** Set of valid anchor positions, as a set for validation */\nconst anchors = new Set(['center', 'left', 'right', 'top', 'bottom', 'top-left', 'top-right', 'bottom-left', 'bottom-right']);\n/**\n * Utility class to assist managing values for text-variable-anchor-offset property. Create instances from\n * bare arrays using the static method `VariableAnchorOffsetCollection.parse`.\n * @private\n */\nclass VariableAnchorOffsetCollection {\n    constructor(values) {\n        this.values = values.slice();\n    }\n    static parse(input) {\n        if (input instanceof VariableAnchorOffsetCollection) {\n            return input;\n        }\n        if (!Array.isArray(input) ||\n            input.length < 1 ||\n            input.length % 2 !== 0) {\n            return undefined;\n        }\n        for (let i = 0; i < input.length; i += 2) {\n            // Elements in even positions should be anchor positions; Elements in odd positions should be offset values\n            const anchorValue = input[i];\n            const offsetValue = input[i + 1];\n            if (typeof anchorValue !== 'string' || !anchors.has(anchorValue)) {\n                return undefined;\n            }\n            if (!Array.isArray(offsetValue) || offsetValue.length !== 2 || typeof offsetValue[0] !== 'number' || typeof offsetValue[1] !== 'number') {\n                return undefined;\n            }\n        }\n        return new VariableAnchorOffsetCollection(input);\n    }\n    toString() {\n        return JSON.stringify(this.values);\n    }\n    static interpolate(from, to, t) {\n        const fromValues = from.values;\n        const toValues = to.values;\n        if (fromValues.length !== toValues.length) {\n            throw new RuntimeError(`Cannot interpolate values of different length. from: ${from.toString()}, to: ${to.toString()}`);\n        }\n        const output = [];\n        for (let i = 0; i < fromValues.length; i += 2) {\n            // Anchor entries must match\n            if (fromValues[i] !== toValues[i]) {\n                throw new RuntimeError(`Cannot interpolate values containing mismatched anchors. from[${i}]: ${fromValues[i]}, to[${i}]: ${toValues[i]}`);\n            }\n            output.push(fromValues[i]);\n            // Interpolate the offset values for each anchor\n            const [fx, fy] = fromValues[i + 1];\n            const [tx, ty] = toValues[i + 1];\n            output.push([interpolateNumber(fx, tx, t), interpolateNumber(fy, ty, t)]);\n        }\n        return new VariableAnchorOffsetCollection(output);\n    }\n}\n\nclass ResolvedImage {\n    constructor(options) {\n        this.name = options.name;\n        this.available = options.available;\n    }\n    toString() {\n        return this.name;\n    }\n    static fromString(name) {\n        if (!name)\n            return null; // treat empty values as no image\n        return new ResolvedImage({ name, available: false });\n    }\n}\n\nclass ProjectionDefinition {\n    constructor(from, to, transition) {\n        this.from = from;\n        this.to = to;\n        this.transition = transition;\n    }\n    static interpolate(from, to, t) {\n        return new ProjectionDefinition(from, to, t);\n    }\n    static parse(input) {\n        if (input instanceof ProjectionDefinition) {\n            return input;\n        }\n        if (Array.isArray(input) && input.length === 3 && typeof input[0] === 'string' && typeof input[1] === 'string' && typeof input[2] === 'number') {\n            return new ProjectionDefinition(input[0], input[1], input[2]);\n        }\n        if (typeof input === 'object' && typeof input.from === 'string' && typeof input.to === 'string' && typeof input.transition === 'number') {\n            return new ProjectionDefinition(input.from, input.to, input.transition);\n        }\n        if (typeof input === 'string') {\n            return new ProjectionDefinition(input, input, 1);\n        }\n        return undefined;\n    }\n}\n\nfunction validateRGBA(r, g, b, a) {\n    if (!(typeof r === 'number' && r >= 0 && r <= 255 &&\n        typeof g === 'number' && g >= 0 && g <= 255 &&\n        typeof b === 'number' && b >= 0 && b <= 255)) {\n        const value = typeof a === 'number' ? [r, g, b, a] : [r, g, b];\n        return `Invalid rgba value [${value.join(', ')}]: 'r', 'g', and 'b' must be between 0 and 255.`;\n    }\n    if (!(typeof a === 'undefined' || (typeof a === 'number' && a >= 0 && a <= 1))) {\n        return `Invalid rgba value [${[r, g, b, a].join(', ')}]: 'a' must be between 0 and 1.`;\n    }\n    return null;\n}\nfunction isValue(mixed) {\n    if (mixed === null ||\n        typeof mixed === 'string' ||\n        typeof mixed === 'boolean' ||\n        typeof mixed === 'number' ||\n        mixed instanceof ProjectionDefinition ||\n        mixed instanceof Color ||\n        mixed instanceof Collator ||\n        mixed instanceof Formatted ||\n        mixed instanceof Padding ||\n        mixed instanceof VariableAnchorOffsetCollection ||\n        mixed instanceof ResolvedImage) {\n        return true;\n    }\n    else if (Array.isArray(mixed)) {\n        for (const item of mixed) {\n            if (!isValue(item)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    else if (typeof mixed === 'object') {\n        for (const key in mixed) {\n            if (!isValue(mixed[key])) {\n                return false;\n            }\n        }\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nfunction typeOf(value) {\n    if (value === null) {\n        return NullType;\n    }\n    else if (typeof value === 'string') {\n        return StringType;\n    }\n    else if (typeof value === 'boolean') {\n        return BooleanType;\n    }\n    else if (typeof value === 'number') {\n        return NumberType;\n    }\n    else if (value instanceof Color) {\n        return ColorType;\n    }\n    else if (value instanceof ProjectionDefinition) {\n        return ProjectionDefinitionType;\n    }\n    else if (value instanceof Collator) {\n        return CollatorType;\n    }\n    else if (value instanceof Formatted) {\n        return FormattedType;\n    }\n    else if (value instanceof Padding) {\n        return PaddingType;\n    }\n    else if (value instanceof VariableAnchorOffsetCollection) {\n        return VariableAnchorOffsetCollectionType;\n    }\n    else if (value instanceof ResolvedImage) {\n        return ResolvedImageType;\n    }\n    else if (Array.isArray(value)) {\n        const length = value.length;\n        let itemType;\n        for (const item of value) {\n            const t = typeOf(item);\n            if (!itemType) {\n                itemType = t;\n            }\n            else if (itemType === t) {\n                continue;\n            }\n            else {\n                itemType = ValueType;\n                break;\n            }\n        }\n        return array(itemType || ValueType, length);\n    }\n    else {\n        return ObjectType;\n    }\n}\nfunction valueToString(value) {\n    const type = typeof value;\n    if (value === null) {\n        return '';\n    }\n    else if (type === 'string' || type === 'number' || type === 'boolean') {\n        return String(value);\n    }\n    else if (value instanceof Color || value instanceof ProjectionDefinition || value instanceof Formatted || value instanceof Padding || value instanceof VariableAnchorOffsetCollection || value instanceof ResolvedImage) {\n        return value.toString();\n    }\n    else {\n        return JSON.stringify(value);\n    }\n}\n\nclass Literal {\n    constructor(type, value) {\n        this.type = type;\n        this.value = value;\n    }\n    static parse(args, context) {\n        if (args.length !== 2)\n            return context.error(`'literal' expression requires exactly one argument, but found ${args.length - 1} instead.`);\n        if (!isValue(args[1]))\n            return context.error('invalid value');\n        const value = args[1];\n        let type = typeOf(value);\n        // special case: infer the item type if possible for zero-length arrays\n        const expected = context.expectedType;\n        if (type.kind === 'array' &&\n            type.N === 0 &&\n            expected &&\n            expected.kind === 'array' &&\n            (typeof expected.N !== 'number' || expected.N === 0)) {\n            type = expected;\n        }\n        return new Literal(type, value);\n    }\n    evaluate() {\n        return this.value;\n    }\n    eachChild() { }\n    outputDefined() {\n        return true;\n    }\n}\n\nconst types$1 = {\n    string: StringType,\n    number: NumberType,\n    boolean: BooleanType,\n    object: ObjectType\n};\nclass Assertion {\n    constructor(type, args) {\n        this.type = type;\n        this.args = args;\n    }\n    static parse(args, context) {\n        if (args.length < 2)\n            return context.error('Expected at least one argument.');\n        let i = 1;\n        let type;\n        const name = args[0];\n        if (name === 'array') {\n            let itemType;\n            if (args.length > 2) {\n                const type = args[1];\n                if (typeof type !== 'string' || !(type in types$1) || type === 'object')\n                    return context.error('The item type argument of \"array\" must be one of string, number, boolean', 1);\n                itemType = types$1[type];\n                i++;\n            }\n            else {\n                itemType = ValueType;\n            }\n            let N;\n            if (args.length > 3) {\n                if (args[2] !== null &&\n                    (typeof args[2] !== 'number' ||\n                        args[2] < 0 ||\n                        args[2] !== Math.floor(args[2]))) {\n                    return context.error('The length argument to \"array\" must be a positive integer literal', 2);\n                }\n                N = args[2];\n                i++;\n            }\n            type = array(itemType, N);\n        }\n        else {\n            if (!types$1[name])\n                throw new Error(`Types doesn't contain name = ${name}`);\n            type = types$1[name];\n        }\n        const parsed = [];\n        for (; i < args.length; i++) {\n            const input = context.parse(args[i], i, ValueType);\n            if (!input)\n                return null;\n            parsed.push(input);\n        }\n        return new Assertion(type, parsed);\n    }\n    evaluate(ctx) {\n        for (let i = 0; i < this.args.length; i++) {\n            const value = this.args[i].evaluate(ctx);\n            const error = checkSubtype(this.type, typeOf(value));\n            if (!error) {\n                return value;\n            }\n            else if (i === this.args.length - 1) {\n                throw new RuntimeError(`Expected value to be of type ${typeToString(this.type)}, but found ${typeToString(typeOf(value))} instead.`);\n            }\n        }\n        throw new Error();\n    }\n    eachChild(fn) {\n        this.args.forEach(fn);\n    }\n    outputDefined() {\n        return this.args.every(arg => arg.outputDefined());\n    }\n}\n\nconst types = {\n    'to-boolean': BooleanType,\n    'to-color': ColorType,\n    'to-number': NumberType,\n    'to-string': StringType\n};\n/**\n * Special form for error-coalescing coercion expressions \"to-number\",\n * \"to-color\".  Since these coercions can fail at runtime, they accept multiple\n * arguments, only evaluating one at a time until one succeeds.\n *\n * @private\n */\nclass Coercion {\n    constructor(type, args) {\n        this.type = type;\n        this.args = args;\n    }\n    static parse(args, context) {\n        if (args.length < 2)\n            return context.error('Expected at least one argument.');\n        const name = args[0];\n        if (!types[name])\n            throw new Error(`Can't parse ${name} as it is not part of the known types`);\n        if ((name === 'to-boolean' || name === 'to-string') && args.length !== 2)\n            return context.error('Expected one argument.');\n        const type = types[name];\n        const parsed = [];\n        for (let i = 1; i < args.length; i++) {\n            const input = context.parse(args[i], i, ValueType);\n            if (!input)\n                return null;\n            parsed.push(input);\n        }\n        return new Coercion(type, parsed);\n    }\n    evaluate(ctx) {\n        switch (this.type.kind) {\n            case 'boolean':\n                return Boolean(this.args[0].evaluate(ctx));\n            case 'color': {\n                let input;\n                let error;\n                for (const arg of this.args) {\n                    input = arg.evaluate(ctx);\n                    error = null;\n                    if (input instanceof Color) {\n                        return input;\n                    }\n                    else if (typeof input === 'string') {\n                        const c = ctx.parseColor(input);\n                        if (c)\n                            return c;\n                    }\n                    else if (Array.isArray(input)) {\n                        if (input.length < 3 || input.length > 4) {\n                            error = `Invalid rgba value ${JSON.stringify(input)}: expected an array containing either three or four numeric values.`;\n                        }\n                        else {\n                            error = validateRGBA(input[0], input[1], input[2], input[3]);\n                        }\n                        if (!error) {\n                            return new Color(input[0] / 255, input[1] / 255, input[2] / 255, input[3]);\n                        }\n                    }\n                }\n                throw new RuntimeError(error || `Could not parse color from value '${typeof input === 'string' ? input : JSON.stringify(input)}'`);\n            }\n            case 'padding': {\n                let input;\n                for (const arg of this.args) {\n                    input = arg.evaluate(ctx);\n                    const pad = Padding.parse(input);\n                    if (pad) {\n                        return pad;\n                    }\n                }\n                throw new RuntimeError(`Could not parse padding from value '${typeof input === 'string' ? input : JSON.stringify(input)}'`);\n            }\n            case 'variableAnchorOffsetCollection': {\n                let input;\n                for (const arg of this.args) {\n                    input = arg.evaluate(ctx);\n                    const coll = VariableAnchorOffsetCollection.parse(input);\n                    if (coll) {\n                        return coll;\n                    }\n                }\n                throw new RuntimeError(`Could not parse variableAnchorOffsetCollection from value '${typeof input === 'string' ? input : JSON.stringify(input)}'`);\n            }\n            case 'number': {\n                let value = null;\n                for (const arg of this.args) {\n                    value = arg.evaluate(ctx);\n                    if (value === null)\n                        return 0;\n                    const num = Number(value);\n                    if (isNaN(num))\n                        continue;\n                    return num;\n                }\n                throw new RuntimeError(`Could not convert ${JSON.stringify(value)} to number.`);\n            }\n            case 'formatted':\n                // There is no explicit 'to-formatted' but this coercion can be implicitly\n                // created by properties that expect the 'formatted' type.\n                return Formatted.fromString(valueToString(this.args[0].evaluate(ctx)));\n            case 'resolvedImage':\n                return ResolvedImage.fromString(valueToString(this.args[0].evaluate(ctx)));\n            case 'projectionDefinition':\n                return this.args[0].evaluate(ctx);\n            default:\n                return valueToString(this.args[0].evaluate(ctx));\n        }\n    }\n    eachChild(fn) {\n        this.args.forEach(fn);\n    }\n    outputDefined() {\n        return this.args.every(arg => arg.outputDefined());\n    }\n}\n\nconst geometryTypes = ['Unknown', 'Point', 'LineString', 'Polygon'];\nclass EvaluationContext {\n    constructor() {\n        this.globals = null;\n        this.feature = null;\n        this.featureState = null;\n        this.formattedSection = null;\n        this._parseColorCache = {};\n        this.availableImages = null;\n        this.canonical = null;\n    }\n    id() {\n        return this.feature && 'id' in this.feature ? this.feature.id : null;\n    }\n    geometryType() {\n        return this.feature ? typeof this.feature.type === 'number' ? geometryTypes[this.feature.type] : this.feature.type : null;\n    }\n    geometry() {\n        return this.feature && 'geometry' in this.feature ? this.feature.geometry : null;\n    }\n    canonicalID() {\n        return this.canonical;\n    }\n    properties() {\n        return this.feature && this.feature.properties || {};\n    }\n    parseColor(input) {\n        let cached = this._parseColorCache[input];\n        if (!cached) {\n            cached = this._parseColorCache[input] = Color.parse(input);\n        }\n        return cached;\n    }\n}\n\n/**\n * State associated parsing at a given point in an expression tree.\n * @private\n */\nclass ParsingContext {\n    constructor(registry, isConstantFunc, path = [], expectedType, scope = new Scope(), errors = []) {\n        this.registry = registry;\n        this.path = path;\n        this.key = path.map(part => `[${part}]`).join('');\n        this.scope = scope;\n        this.errors = errors;\n        this.expectedType = expectedType;\n        this._isConstant = isConstantFunc;\n    }\n    /**\n     * @param expr the JSON expression to parse\n     * @param index the optional argument index if this expression is an argument of a parent expression that's being parsed\n     * @param options\n     * @param options.omitTypeAnnotations set true to omit inferred type annotations.  Caller beware: with this option set, the parsed expression's type will NOT satisfy `expectedType` if it would normally be wrapped in an inferred annotation.\n     * @private\n     */\n    parse(expr, index, expectedType, bindings, options = {}) {\n        if (index) {\n            return this.concat(index, expectedType, bindings)._parse(expr, options);\n        }\n        return this._parse(expr, options);\n    }\n    _parse(expr, options) {\n        if (expr === null || typeof expr === 'string' || typeof expr === 'boolean' || typeof expr === 'number') {\n            expr = ['literal', expr];\n        }\n        function annotate(parsed, type, typeAnnotation) {\n            if (typeAnnotation === 'assert') {\n                return new Assertion(type, [parsed]);\n            }\n            else if (typeAnnotation === 'coerce') {\n                return new Coercion(type, [parsed]);\n            }\n            else {\n                return parsed;\n            }\n        }\n        if (Array.isArray(expr)) {\n            if (expr.length === 0) {\n                return this.error('Expected an array with at least one element. If you wanted a literal array, use [\"literal\", []].');\n            }\n            const op = expr[0];\n            if (typeof op !== 'string') {\n                this.error(`Expression name must be a string, but found ${typeof op} instead. If you wanted a literal array, use [\"literal\", [...]].`, 0);\n                return null;\n            }\n            const Expr = this.registry[op];\n            if (Expr) {\n                let parsed = Expr.parse(expr, this);\n                if (!parsed)\n                    return null;\n                if (this.expectedType) {\n                    const expected = this.expectedType;\n                    const actual = parsed.type;\n                    // When we expect a number, string, boolean, or array but have a value, wrap it in an assertion.\n                    // When we expect a color or formatted string, but have a string or value, wrap it in a coercion.\n                    // Otherwise, we do static type-checking.\n                    //\n                    // These behaviors are overridable for:\n                    //   * The \"coalesce\" operator, which needs to omit type annotations.\n                    //   * String-valued properties (e.g. `text-field`), where coercion is more convenient than assertion.\n                    //\n                    if ((expected.kind === 'string' || expected.kind === 'number' || expected.kind === 'boolean' || expected.kind === 'object' || expected.kind === 'array') && actual.kind === 'value') {\n                        parsed = annotate(parsed, expected, options.typeAnnotation || 'assert');\n                    }\n                    else if ((expected.kind === 'projectionDefinition') && (actual.kind === 'string' || actual.kind === 'array')) {\n                        parsed = annotate(parsed, expected, options.typeAnnotation || 'coerce');\n                    }\n                    else if ((expected.kind === 'color' || expected.kind === 'formatted' || expected.kind === 'resolvedImage') && (actual.kind === 'value' || actual.kind === 'string')) {\n                        parsed = annotate(parsed, expected, options.typeAnnotation || 'coerce');\n                    }\n                    else if (expected.kind === 'padding' && (actual.kind === 'value' || actual.kind === 'number' || actual.kind === 'array')) {\n                        parsed = annotate(parsed, expected, options.typeAnnotation || 'coerce');\n                    }\n                    else if (expected.kind === 'variableAnchorOffsetCollection' && (actual.kind === 'value' || actual.kind === 'array')) {\n                        parsed = annotate(parsed, expected, options.typeAnnotation || 'coerce');\n                    }\n                    else if (this.checkSubtype(expected, actual)) {\n                        return null;\n                    }\n                }\n                // If an expression's arguments are all literals, we can evaluate\n                // it immediately and replace it with a literal value in the\n                // parsed/compiled result. Expressions that expect an image should\n                // not be resolved here so we can later get the available images.\n                if (!(parsed instanceof Literal) && (parsed.type.kind !== 'resolvedImage') && this._isConstant(parsed)) {\n                    const ec = new EvaluationContext();\n                    try {\n                        parsed = new Literal(parsed.type, parsed.evaluate(ec));\n                    }\n                    catch (e) {\n                        this.error(e.message);\n                        return null;\n                    }\n                }\n                return parsed;\n            }\n            return this.error(`Unknown expression \"${op}\". If you wanted a literal array, use [\"literal\", [...]].`, 0);\n        }\n        else if (typeof expr === 'undefined') {\n            return this.error('\\'undefined\\' value invalid. Use null instead.');\n        }\n        else if (typeof expr === 'object') {\n            return this.error('Bare objects invalid. Use [\"literal\", {...}] instead.');\n        }\n        else {\n            return this.error(`Expected an array, but found ${typeof expr} instead.`);\n        }\n    }\n    /**\n     * Returns a copy of this context suitable for parsing the subexpression at\n     * index `index`, optionally appending to 'let' binding map.\n     *\n     * Note that `errors` property, intended for collecting errors while\n     * parsing, is copied by reference rather than cloned.\n     * @private\n     */\n    concat(index, expectedType, bindings) {\n        const path = typeof index === 'number' ? this.path.concat(index) : this.path;\n        const scope = bindings ? this.scope.concat(bindings) : this.scope;\n        return new ParsingContext(this.registry, this._isConstant, path, expectedType || null, scope, this.errors);\n    }\n    /**\n     * Push a parsing (or type checking) error into the `this.errors`\n     * @param error The message\n     * @param keys Optionally specify the source of the error at a child\n     * of the current expression at `this.key`.\n     * @private\n     */\n    error(error, ...keys) {\n        const key = `${this.key}${keys.map(k => `[${k}]`).join('')}`;\n        this.errors.push(new ExpressionParsingError(key, error));\n    }\n    /**\n     * Returns null if `t` is a subtype of `expected`; otherwise returns an\n     * error message and also pushes it to `this.errors`.\n     * @param expected The expected type\n     * @param t The actual type\n     * @returns null if `t` is a subtype of `expected`; otherwise returns an error message\n     */\n    checkSubtype(expected, t) {\n        const error = checkSubtype(expected, t);\n        if (error)\n            this.error(error);\n        return error;\n    }\n}\n\nclass Let {\n    constructor(bindings, result) {\n        this.type = result.type;\n        this.bindings = [].concat(bindings);\n        this.result = result;\n    }\n    evaluate(ctx) {\n        return this.result.evaluate(ctx);\n    }\n    eachChild(fn) {\n        for (const binding of this.bindings) {\n            fn(binding[1]);\n        }\n        fn(this.result);\n    }\n    static parse(args, context) {\n        if (args.length < 4)\n            return context.error(`Expected at least 3 arguments, but found ${args.length - 1} instead.`);\n        const bindings = [];\n        for (let i = 1; i < args.length - 1; i += 2) {\n            const name = args[i];\n            if (typeof name !== 'string') {\n                return context.error(`Expected string, but found ${typeof name} instead.`, i);\n            }\n            if (/[^a-zA-Z0-9_]/.test(name)) {\n                return context.error('Variable names must contain only alphanumeric characters or \\'_\\'.', i);\n            }\n            const value = context.parse(args[i + 1], i + 1);\n            if (!value)\n                return null;\n            bindings.push([name, value]);\n        }\n        const result = context.parse(args[args.length - 1], args.length - 1, context.expectedType, bindings);\n        if (!result)\n            return null;\n        return new Let(bindings, result);\n    }\n    outputDefined() {\n        return this.result.outputDefined();\n    }\n}\n\nclass Var {\n    constructor(name, boundExpression) {\n        this.type = boundExpression.type;\n        this.name = name;\n        this.boundExpression = boundExpression;\n    }\n    static parse(args, context) {\n        if (args.length !== 2 || typeof args[1] !== 'string')\n            return context.error('\\'var\\' expression requires exactly one string literal argument.');\n        const name = args[1];\n        if (!context.scope.has(name)) {\n            return context.error(`Unknown variable \"${name}\". Make sure \"${name}\" has been bound in an enclosing \"let\" expression before using it.`, 1);\n        }\n        return new Var(name, context.scope.get(name));\n    }\n    evaluate(ctx) {\n        return this.boundExpression.evaluate(ctx);\n    }\n    eachChild() { }\n    outputDefined() {\n        return false;\n    }\n}\n\nclass At {\n    constructor(type, index, input) {\n        this.type = type;\n        this.index = index;\n        this.input = input;\n    }\n    static parse(args, context) {\n        if (args.length !== 3)\n            return context.error(`Expected 2 arguments, but found ${args.length - 1} instead.`);\n        const index = context.parse(args[1], 1, NumberType);\n        const input = context.parse(args[2], 2, array(context.expectedType || ValueType));\n        if (!index || !input)\n            return null;\n        const t = input.type;\n        return new At(t.itemType, index, input);\n    }\n    evaluate(ctx) {\n        const index = this.index.evaluate(ctx);\n        const array = this.input.evaluate(ctx);\n        if (index < 0) {\n            throw new RuntimeError(`Array index out of bounds: ${index} < 0.`);\n        }\n        if (index >= array.length) {\n            throw new RuntimeError(`Array index out of bounds: ${index} > ${array.length - 1}.`);\n        }\n        if (index !== Math.floor(index)) {\n            throw new RuntimeError(`Array index must be an integer, but found ${index} instead.`);\n        }\n        return array[index];\n    }\n    eachChild(fn) {\n        fn(this.index);\n        fn(this.input);\n    }\n    outputDefined() {\n        return false;\n    }\n}\n\nclass In {\n    constructor(needle, haystack) {\n        this.type = BooleanType;\n        this.needle = needle;\n        this.haystack = haystack;\n    }\n    static parse(args, context) {\n        if (args.length !== 3) {\n            return context.error(`Expected 2 arguments, but found ${args.length - 1} instead.`);\n        }\n        const needle = context.parse(args[1], 1, ValueType);\n        const haystack = context.parse(args[2], 2, ValueType);\n        if (!needle || !haystack)\n            return null;\n        if (!isValidType(needle.type, [BooleanType, StringType, NumberType, NullType, ValueType])) {\n            return context.error(`Expected first argument to be of type boolean, string, number or null, but found ${typeToString(needle.type)} instead`);\n        }\n        return new In(needle, haystack);\n    }\n    evaluate(ctx) {\n        const needle = this.needle.evaluate(ctx);\n        const haystack = this.haystack.evaluate(ctx);\n        if (!haystack)\n            return false;\n        if (!isValidNativeType(needle, ['boolean', 'string', 'number', 'null'])) {\n            throw new RuntimeError(`Expected first argument to be of type boolean, string, number or null, but found ${typeToString(typeOf(needle))} instead.`);\n        }\n        if (!isValidNativeType(haystack, ['string', 'array'])) {\n            throw new RuntimeError(`Expected second argument to be of type array or string, but found ${typeToString(typeOf(haystack))} instead.`);\n        }\n        return haystack.indexOf(needle) >= 0;\n    }\n    eachChild(fn) {\n        fn(this.needle);\n        fn(this.haystack);\n    }\n    outputDefined() {\n        return true;\n    }\n}\n\nclass IndexOf {\n    constructor(needle, haystack, fromIndex) {\n        this.type = NumberType;\n        this.needle = needle;\n        this.haystack = haystack;\n        this.fromIndex = fromIndex;\n    }\n    static parse(args, context) {\n        if (args.length <= 2 || args.length >= 5) {\n            return context.error(`Expected 3 or 4 arguments, but found ${args.length - 1} instead.`);\n        }\n        const needle = context.parse(args[1], 1, ValueType);\n        const haystack = context.parse(args[2], 2, ValueType);\n        if (!needle || !haystack)\n            return null;\n        if (!isValidType(needle.type, [BooleanType, StringType, NumberType, NullType, ValueType])) {\n            return context.error(`Expected first argument to be of type boolean, string, number or null, but found ${typeToString(needle.type)} instead`);\n        }\n        if (args.length === 4) {\n            const fromIndex = context.parse(args[3], 3, NumberType);\n            if (!fromIndex)\n                return null;\n            return new IndexOf(needle, haystack, fromIndex);\n        }\n        else {\n            return new IndexOf(needle, haystack);\n        }\n    }\n    evaluate(ctx) {\n        const needle = this.needle.evaluate(ctx);\n        const haystack = this.haystack.evaluate(ctx);\n        if (!isValidNativeType(needle, ['boolean', 'string', 'number', 'null'])) {\n            throw new RuntimeError(`Expected first argument to be of type boolean, string, number or null, but found ${typeToString(typeOf(needle))} instead.`);\n        }\n        let fromIndex;\n        if (this.fromIndex) {\n            fromIndex = this.fromIndex.evaluate(ctx);\n        }\n        if (isValidNativeType(haystack, ['string'])) {\n            const rawIndex = haystack.indexOf(needle, fromIndex);\n            if (rawIndex === -1) {\n                return -1;\n            }\n            else {\n                // The index may be affected by surrogate pairs, so get the length of the preceding substring.\n                return [...haystack.slice(0, rawIndex)].length;\n            }\n        }\n        else if (isValidNativeType(haystack, ['array'])) {\n            return haystack.indexOf(needle, fromIndex);\n        }\n        else {\n            throw new RuntimeError(`Expected second argument to be of type array or string, but found ${typeToString(typeOf(haystack))} instead.`);\n        }\n    }\n    eachChild(fn) {\n        fn(this.needle);\n        fn(this.haystack);\n        if (this.fromIndex) {\n            fn(this.fromIndex);\n        }\n    }\n    outputDefined() {\n        return false;\n    }\n}\n\nclass Match {\n    constructor(inputType, outputType, input, cases, outputs, otherwise) {\n        this.inputType = inputType;\n        this.type = outputType;\n        this.input = input;\n        this.cases = cases;\n        this.outputs = outputs;\n        this.otherwise = otherwise;\n    }\n    static parse(args, context) {\n        if (args.length < 5)\n            return context.error(`Expected at least 4 arguments, but found only ${args.length - 1}.`);\n        if (args.length % 2 !== 1)\n            return context.error('Expected an even number of arguments.');\n        let inputType;\n        let outputType;\n        if (context.expectedType && context.expectedType.kind !== 'value') {\n            outputType = context.expectedType;\n        }\n        const cases = {};\n        const outputs = [];\n        for (let i = 2; i < args.length - 1; i += 2) {\n            let labels = args[i];\n            const value = args[i + 1];\n            if (!Array.isArray(labels)) {\n                labels = [labels];\n            }\n            const labelContext = context.concat(i);\n            if (labels.length === 0) {\n                return labelContext.error('Expected at least one branch label.');\n            }\n            for (const label of labels) {\n                if (typeof label !== 'number' && typeof label !== 'string') {\n                    return labelContext.error('Branch labels must be numbers or strings.');\n                }\n                else if (typeof label === 'number' && Math.abs(label) > Number.MAX_SAFE_INTEGER) {\n                    return labelContext.error(`Branch labels must be integers no larger than ${Number.MAX_SAFE_INTEGER}.`);\n                }\n                else if (typeof label === 'number' && Math.floor(label) !== label) {\n                    return labelContext.error('Numeric branch labels must be integer values.');\n                }\n                else if (!inputType) {\n                    inputType = typeOf(label);\n                }\n                else if (labelContext.checkSubtype(inputType, typeOf(label))) {\n                    return null;\n                }\n                if (typeof cases[String(label)] !== 'undefined') {\n                    return labelContext.error('Branch labels must be unique.');\n                }\n                cases[String(label)] = outputs.length;\n            }\n            const result = context.parse(value, i, outputType);\n            if (!result)\n                return null;\n            outputType = outputType || result.type;\n            outputs.push(result);\n        }\n        const input = context.parse(args[1], 1, ValueType);\n        if (!input)\n            return null;\n        const otherwise = context.parse(args[args.length - 1], args.length - 1, outputType);\n        if (!otherwise)\n            return null;\n        if (input.type.kind !== 'value' && context.concat(1).checkSubtype(inputType, input.type)) {\n            return null;\n        }\n        return new Match(inputType, outputType, input, cases, outputs, otherwise);\n    }\n    evaluate(ctx) {\n        const input = this.input.evaluate(ctx);\n        const output = (typeOf(input) === this.inputType && this.outputs[this.cases[input]]) || this.otherwise;\n        return output.evaluate(ctx);\n    }\n    eachChild(fn) {\n        fn(this.input);\n        this.outputs.forEach(fn);\n        fn(this.otherwise);\n    }\n    outputDefined() {\n        return this.outputs.every(out => out.outputDefined()) && this.otherwise.outputDefined();\n    }\n}\n\nclass Case {\n    constructor(type, branches, otherwise) {\n        this.type = type;\n        this.branches = branches;\n        this.otherwise = otherwise;\n    }\n    static parse(args, context) {\n        if (args.length < 4)\n            return context.error(`Expected at least 3 arguments, but found only ${args.length - 1}.`);\n        if (args.length % 2 !== 0)\n            return context.error('Expected an odd number of arguments.');\n        let outputType;\n        if (context.expectedType && context.expectedType.kind !== 'value') {\n            outputType = context.expectedType;\n        }\n        const branches = [];\n        for (let i = 1; i < args.length - 1; i += 2) {\n            const test = context.parse(args[i], i, BooleanType);\n            if (!test)\n                return null;\n            const result = context.parse(args[i + 1], i + 1, outputType);\n            if (!result)\n                return null;\n            branches.push([test, result]);\n            outputType = outputType || result.type;\n        }\n        const otherwise = context.parse(args[args.length - 1], args.length - 1, outputType);\n        if (!otherwise)\n            return null;\n        if (!outputType)\n            throw new Error('Can\\'t infer output type');\n        return new Case(outputType, branches, otherwise);\n    }\n    evaluate(ctx) {\n        for (const [test, expression] of this.branches) {\n            if (test.evaluate(ctx)) {\n                return expression.evaluate(ctx);\n            }\n        }\n        return this.otherwise.evaluate(ctx);\n    }\n    eachChild(fn) {\n        for (const [test, expression] of this.branches) {\n            fn(test);\n            fn(expression);\n        }\n        fn(this.otherwise);\n    }\n    outputDefined() {\n        return this.branches.every(([_, out]) => out.outputDefined()) && this.otherwise.outputDefined();\n    }\n}\n\nclass Slice {\n    constructor(type, input, beginIndex, endIndex) {\n        this.type = type;\n        this.input = input;\n        this.beginIndex = beginIndex;\n        this.endIndex = endIndex;\n    }\n    static parse(args, context) {\n        if (args.length <= 2 || args.length >= 5) {\n            return context.error(`Expected 3 or 4 arguments, but found ${args.length - 1} instead.`);\n        }\n        const input = context.parse(args[1], 1, ValueType);\n        const beginIndex = context.parse(args[2], 2, NumberType);\n        if (!input || !beginIndex)\n            return null;\n        if (!isValidType(input.type, [array(ValueType), StringType, ValueType])) {\n            return context.error(`Expected first argument to be of type array or string, but found ${typeToString(input.type)} instead`);\n        }\n        if (args.length === 4) {\n            const endIndex = context.parse(args[3], 3, NumberType);\n            if (!endIndex)\n                return null;\n            return new Slice(input.type, input, beginIndex, endIndex);\n        }\n        else {\n            return new Slice(input.type, input, beginIndex);\n        }\n    }\n    evaluate(ctx) {\n        const input = this.input.evaluate(ctx);\n        const beginIndex = this.beginIndex.evaluate(ctx);\n        let endIndex;\n        if (this.endIndex) {\n            endIndex = this.endIndex.evaluate(ctx);\n        }\n        if (isValidNativeType(input, ['string'])) {\n            // Indices may be affected by surrogate pairs.\n            return [...input].slice(beginIndex, endIndex).join('');\n        }\n        else if (isValidNativeType(input, ['array'])) {\n            return input.slice(beginIndex, endIndex);\n        }\n        else {\n            throw new RuntimeError(`Expected first argument to be of type array or string, but found ${typeToString(typeOf(input))} instead.`);\n        }\n    }\n    eachChild(fn) {\n        fn(this.input);\n        fn(this.beginIndex);\n        if (this.endIndex) {\n            fn(this.endIndex);\n        }\n    }\n    outputDefined() {\n        return false;\n    }\n}\n\n/**\n * Returns the index of the last stop <= input, or 0 if it doesn't exist.\n * @private\n */\nfunction findStopLessThanOrEqualTo(stops, input) {\n    const lastIndex = stops.length - 1;\n    let lowerIndex = 0;\n    let upperIndex = lastIndex;\n    let currentIndex = 0;\n    let currentValue, nextValue;\n    while (lowerIndex <= upperIndex) {\n        currentIndex = Math.floor((lowerIndex + upperIndex) / 2);\n        currentValue = stops[currentIndex];\n        nextValue = stops[currentIndex + 1];\n        if (currentValue <= input) {\n            if (currentIndex === lastIndex || input < nextValue) { // Search complete\n                return currentIndex;\n            }\n            lowerIndex = currentIndex + 1;\n        }\n        else if (currentValue > input) {\n            upperIndex = currentIndex - 1;\n        }\n        else {\n            throw new RuntimeError('Input is not a number.');\n        }\n    }\n    return 0;\n}\n\nclass Step {\n    constructor(type, input, stops) {\n        this.type = type;\n        this.input = input;\n        this.labels = [];\n        this.outputs = [];\n        for (const [label, expression] of stops) {\n            this.labels.push(label);\n            this.outputs.push(expression);\n        }\n    }\n    static parse(args, context) {\n        if (args.length - 1 < 4) {\n            return context.error(`Expected at least 4 arguments, but found only ${args.length - 1}.`);\n        }\n        if ((args.length - 1) % 2 !== 0) {\n            return context.error('Expected an even number of arguments.');\n        }\n        const input = context.parse(args[1], 1, NumberType);\n        if (!input)\n            return null;\n        const stops = [];\n        let outputType = null;\n        if (context.expectedType && context.expectedType.kind !== 'value') {\n            outputType = context.expectedType;\n        }\n        for (let i = 1; i < args.length; i += 2) {\n            const label = i === 1 ? -Infinity : args[i];\n            const value = args[i + 1];\n            const labelKey = i;\n            const valueKey = i + 1;\n            if (typeof label !== 'number') {\n                return context.error('Input/output pairs for \"step\" expressions must be defined using literal numeric values (not computed expressions) for the input values.', labelKey);\n            }\n            if (stops.length && stops[stops.length - 1][0] >= label) {\n                return context.error('Input/output pairs for \"step\" expressions must be arranged with input values in strictly ascending order.', labelKey);\n            }\n            const parsed = context.parse(value, valueKey, outputType);\n            if (!parsed)\n                return null;\n            outputType = outputType || parsed.type;\n            stops.push([label, parsed]);\n        }\n        return new Step(outputType, input, stops);\n    }\n    evaluate(ctx) {\n        const labels = this.labels;\n        const outputs = this.outputs;\n        if (labels.length === 1) {\n            return outputs[0].evaluate(ctx);\n        }\n        const value = this.input.evaluate(ctx);\n        if (value <= labels[0]) {\n            return outputs[0].evaluate(ctx);\n        }\n        const stopCount = labels.length;\n        if (value >= labels[stopCount - 1]) {\n            return outputs[stopCount - 1].evaluate(ctx);\n        }\n        const index = findStopLessThanOrEqualTo(labels, value);\n        return outputs[index].evaluate(ctx);\n    }\n    eachChild(fn) {\n        fn(this.input);\n        for (const expression of this.outputs) {\n            fn(expression);\n        }\n    }\n    outputDefined() {\n        return this.outputs.every(out => out.outputDefined());\n    }\n}\n\nfunction getDefaultExportFromCjs (x) {\n\treturn x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;\n}\n\nvar unitbezier;\nvar hasRequiredUnitbezier;\n\nfunction requireUnitbezier () {\n\tif (hasRequiredUnitbezier) return unitbezier;\n\thasRequiredUnitbezier = 1;\n\n\tunitbezier = UnitBezier;\n\n\tfunction UnitBezier(p1x, p1y, p2x, p2y) {\n\t    // Calculate the polynomial coefficients, implicit first and last control points are (0,0) and (1,1).\n\t    this.cx = 3.0 * p1x;\n\t    this.bx = 3.0 * (p2x - p1x) - this.cx;\n\t    this.ax = 1.0 - this.cx - this.bx;\n\n\t    this.cy = 3.0 * p1y;\n\t    this.by = 3.0 * (p2y - p1y) - this.cy;\n\t    this.ay = 1.0 - this.cy - this.by;\n\n\t    this.p1x = p1x;\n\t    this.p1y = p1y;\n\t    this.p2x = p2x;\n\t    this.p2y = p2y;\n\t}\n\n\tUnitBezier.prototype = {\n\t    sampleCurveX: function (t) {\n\t        // `ax t^3 + bx t^2 + cx t' expanded using Horner's rule.\n\t        return ((this.ax * t + this.bx) * t + this.cx) * t;\n\t    },\n\n\t    sampleCurveY: function (t) {\n\t        return ((this.ay * t + this.by) * t + this.cy) * t;\n\t    },\n\n\t    sampleCurveDerivativeX: function (t) {\n\t        return (3.0 * this.ax * t + 2.0 * this.bx) * t + this.cx;\n\t    },\n\n\t    solveCurveX: function (x, epsilon) {\n\t        if (epsilon === undefined) epsilon = 1e-6;\n\n\t        if (x < 0.0) return 0.0;\n\t        if (x > 1.0) return 1.0;\n\n\t        var t = x;\n\n\t        // First try a few iterations of Newton's method - normally very fast.\n\t        for (var i = 0; i < 8; i++) {\n\t            var x2 = this.sampleCurveX(t) - x;\n\t            if (Math.abs(x2) < epsilon) return t;\n\n\t            var d2 = this.sampleCurveDerivativeX(t);\n\t            if (Math.abs(d2) < 1e-6) break;\n\n\t            t = t - x2 / d2;\n\t        }\n\n\t        // Fall back to the bisection method for reliability.\n\t        var t0 = 0.0;\n\t        var t1 = 1.0;\n\t        t = x;\n\n\t        for (i = 0; i < 20; i++) {\n\t            x2 = this.sampleCurveX(t);\n\t            if (Math.abs(x2 - x) < epsilon) break;\n\n\t            if (x > x2) {\n\t                t0 = t;\n\t            } else {\n\t                t1 = t;\n\t            }\n\n\t            t = (t1 - t0) * 0.5 + t0;\n\t        }\n\n\t        return t;\n\t    },\n\n\t    solve: function (x, epsilon) {\n\t        return this.sampleCurveY(this.solveCurveX(x, epsilon));\n\t    }\n\t};\n\treturn unitbezier;\n}\n\nvar unitbezierExports = requireUnitbezier();\nvar UnitBezier = /*@__PURE__*/getDefaultExportFromCjs(unitbezierExports);\n\nclass Interpolate {\n    constructor(type, operator, interpolation, input, stops) {\n        this.type = type;\n        this.operator = operator;\n        this.interpolation = interpolation;\n        this.input = input;\n        this.labels = [];\n        this.outputs = [];\n        for (const [label, expression] of stops) {\n            this.labels.push(label);\n            this.outputs.push(expression);\n        }\n    }\n    static interpolationFactor(interpolation, input, lower, upper) {\n        let t = 0;\n        if (interpolation.name === 'exponential') {\n            t = exponentialInterpolation(input, interpolation.base, lower, upper);\n        }\n        else if (interpolation.name === 'linear') {\n            t = exponentialInterpolation(input, 1, lower, upper);\n        }\n        else if (interpolation.name === 'cubic-bezier') {\n            const c = interpolation.controlPoints;\n            const ub = new UnitBezier(c[0], c[1], c[2], c[3]);\n            t = ub.solve(exponentialInterpolation(input, 1, lower, upper));\n        }\n        return t;\n    }\n    static parse(args, context) {\n        let [operator, interpolation, input, ...rest] = args;\n        if (!Array.isArray(interpolation) || interpolation.length === 0) {\n            return context.error('Expected an interpolation type expression.', 1);\n        }\n        if (interpolation[0] === 'linear') {\n            interpolation = { name: 'linear' };\n        }\n        else if (interpolation[0] === 'exponential') {\n            const base = interpolation[1];\n            if (typeof base !== 'number')\n                return context.error('Exponential interpolation requires a numeric base.', 1, 1);\n            interpolation = {\n                name: 'exponential',\n                base\n            };\n        }\n        else if (interpolation[0] === 'cubic-bezier') {\n            const controlPoints = interpolation.slice(1);\n            if (controlPoints.length !== 4 ||\n                controlPoints.some(t => typeof t !== 'number' || t < 0 || t > 1)) {\n                return context.error('Cubic bezier interpolation requires four numeric arguments with values between 0 and 1.', 1);\n            }\n            interpolation = {\n                name: 'cubic-bezier',\n                controlPoints: controlPoints\n            };\n        }\n        else {\n            return context.error(`Unknown interpolation type ${String(interpolation[0])}`, 1, 0);\n        }\n        if (args.length - 1 < 4) {\n            return context.error(`Expected at least 4 arguments, but found only ${args.length - 1}.`);\n        }\n        if ((args.length - 1) % 2 !== 0) {\n            return context.error('Expected an even number of arguments.');\n        }\n        input = context.parse(input, 2, NumberType);\n        if (!input)\n            return null;\n        const stops = [];\n        let outputType = null;\n        if (operator === 'interpolate-hcl' || operator === 'interpolate-lab') {\n            outputType = ColorType;\n        }\n        else if (context.expectedType && context.expectedType.kind !== 'value') {\n            outputType = context.expectedType;\n        }\n        for (let i = 0; i < rest.length; i += 2) {\n            const label = rest[i];\n            const value = rest[i + 1];\n            const labelKey = i + 3;\n            const valueKey = i + 4;\n            if (typeof label !== 'number') {\n                return context.error('Input/output pairs for \"interpolate\" expressions must be defined using literal numeric values (not computed expressions) for the input values.', labelKey);\n            }\n            if (stops.length && stops[stops.length - 1][0] >= label) {\n                return context.error('Input/output pairs for \"interpolate\" expressions must be arranged with input values in strictly ascending order.', labelKey);\n            }\n            const parsed = context.parse(value, valueKey, outputType);\n            if (!parsed)\n                return null;\n            outputType = outputType || parsed.type;\n            stops.push([label, parsed]);\n        }\n        if (!verifyType(outputType, NumberType) &&\n            !verifyType(outputType, ProjectionDefinitionType) &&\n            !verifyType(outputType, ColorType) &&\n            !verifyType(outputType, PaddingType) &&\n            !verifyType(outputType, VariableAnchorOffsetCollectionType) &&\n            !verifyType(outputType, array(NumberType))) {\n            return context.error(`Type ${typeToString(outputType)} is not interpolatable.`);\n        }\n        return new Interpolate(outputType, operator, interpolation, input, stops);\n    }\n    evaluate(ctx) {\n        const labels = this.labels;\n        const outputs = this.outputs;\n        if (labels.length === 1) {\n            return outputs[0].evaluate(ctx);\n        }\n        const value = this.input.evaluate(ctx);\n        if (value <= labels[0]) {\n            return outputs[0].evaluate(ctx);\n        }\n        const stopCount = labels.length;\n        if (value >= labels[stopCount - 1]) {\n            return outputs[stopCount - 1].evaluate(ctx);\n        }\n        const index = findStopLessThanOrEqualTo(labels, value);\n        const lower = labels[index];\n        const upper = labels[index + 1];\n        const t = Interpolate.interpolationFactor(this.interpolation, value, lower, upper);\n        const outputLower = outputs[index].evaluate(ctx);\n        const outputUpper = outputs[index + 1].evaluate(ctx);\n        switch (this.operator) {\n            case 'interpolate':\n                switch (this.type.kind) {\n                    case 'number':\n                        return interpolateNumber(outputLower, outputUpper, t);\n                    case 'color':\n                        return Color.interpolate(outputLower, outputUpper, t);\n                    case 'padding':\n                        return Padding.interpolate(outputLower, outputUpper, t);\n                    case 'variableAnchorOffsetCollection':\n                        return VariableAnchorOffsetCollection.interpolate(outputLower, outputUpper, t);\n                    case 'array':\n                        return interpolateArray(outputLower, outputUpper, t);\n                    case 'projectionDefinition':\n                        return ProjectionDefinition.interpolate(outputLower, outputUpper, t);\n                }\n            case 'interpolate-hcl':\n                return Color.interpolate(outputLower, outputUpper, t, 'hcl');\n            case 'interpolate-lab':\n                return Color.interpolate(outputLower, outputUpper, t, 'lab');\n        }\n    }\n    eachChild(fn) {\n        fn(this.input);\n        for (const expression of this.outputs) {\n            fn(expression);\n        }\n    }\n    outputDefined() {\n        return this.outputs.every(out => out.outputDefined());\n    }\n}\n/**\n * Returns a ratio that can be used to interpolate between exponential function\n * stops.\n * How it works: Two consecutive stop values define a (scaled and shifted) exponential function `f(x) = a * base^x + b`, where `base` is the user-specified base,\n * and `a` and `b` are constants affording sufficient degrees of freedom to fit\n * the function to the given stops.\n *\n * Here's a bit of algebra that lets us compute `f(x)` directly from the stop\n * values without explicitly solving for `a` and `b`:\n *\n * First stop value: `f(x0) = y0 = a * base^x0 + b`\n * Second stop value: `f(x1) = y1 = a * base^x1 + b`\n * => `y1 - y0 = a(base^x1 - base^x0)`\n * => `a = (y1 - y0)/(base^x1 - base^x0)`\n *\n * Desired value: `f(x) = y = a * base^x + b`\n * => `f(x) = y0 + a * (base^x - base^x0)`\n *\n * From the above, we can replace the `a` in `a * (base^x - base^x0)` and do a\n * little algebra:\n * ```\n * a * (base^x - base^x0) = (y1 - y0)/(base^x1 - base^x0) * (base^x - base^x0)\n *                     = (y1 - y0) * (base^x - base^x0) / (base^x1 - base^x0)\n * ```\n *\n * If we let `(base^x - base^x0) / (base^x1 base^x0)`, then we have\n * `f(x) = y0 + (y1 - y0) * ratio`.  In other words, `ratio` may be treated as\n * an interpolation factor between the two stops' output values.\n *\n * (Note: a slightly different form for `ratio`,\n * `(base^(x-x0) - 1) / (base^(x1-x0) - 1) `, is equivalent, but requires fewer\n * expensive `Math.pow()` operations.)\n *\n * @private\n*/\nfunction exponentialInterpolation(input, base, lowerValue, upperValue) {\n    const difference = upperValue - lowerValue;\n    const progress = input - lowerValue;\n    if (difference === 0) {\n        return 0;\n    }\n    else if (base === 1) {\n        return progress / difference;\n    }\n    else {\n        return (Math.pow(base, progress) - 1) / (Math.pow(base, difference) - 1);\n    }\n}\nconst interpolateFactory = {\n    color: Color.interpolate,\n    number: interpolateNumber,\n    padding: Padding.interpolate,\n    variableAnchorOffsetCollection: VariableAnchorOffsetCollection.interpolate,\n    array: interpolateArray\n};\n\nclass Coalesce {\n    constructor(type, args) {\n        this.type = type;\n        this.args = args;\n    }\n    static parse(args, context) {\n        if (args.length < 2) {\n            return context.error('Expected at least one argument.');\n        }\n        let outputType = null;\n        const expectedType = context.expectedType;\n        if (expectedType && expectedType.kind !== 'value') {\n            outputType = expectedType;\n        }\n        const parsedArgs = [];\n        for (const arg of args.slice(1)) {\n            const parsed = context.parse(arg, 1 + parsedArgs.length, outputType, undefined, { typeAnnotation: 'omit' });\n            if (!parsed)\n                return null;\n            outputType = outputType || parsed.type;\n            parsedArgs.push(parsed);\n        }\n        if (!outputType)\n            throw new Error('No output type');\n        // Above, we parse arguments without inferred type annotation so that\n        // they don't produce a runtime error for `null` input, which would\n        // preempt the desired null-coalescing behavior.\n        // Thus, if any of our arguments would have needed an annotation, we\n        // need to wrap the enclosing coalesce expression with it instead.\n        const needsAnnotation = expectedType &&\n            parsedArgs.some(arg => checkSubtype(expectedType, arg.type));\n        return needsAnnotation ?\n            new Coalesce(ValueType, parsedArgs) :\n            new Coalesce(outputType, parsedArgs);\n    }\n    evaluate(ctx) {\n        let result = null;\n        let argCount = 0;\n        let requestedImageName;\n        for (const arg of this.args) {\n            argCount++;\n            result = arg.evaluate(ctx);\n            // we need to keep track of the first requested image in a coalesce statement\n            // if coalesce can't find a valid image, we return the first image name so styleimagemissing can fire\n            if (result && result instanceof ResolvedImage && !result.available) {\n                if (!requestedImageName) {\n                    requestedImageName = result.name;\n                }\n                result = null;\n                if (argCount === this.args.length) {\n                    result = requestedImageName;\n                }\n            }\n            if (result !== null)\n                break;\n        }\n        return result;\n    }\n    eachChild(fn) {\n        this.args.forEach(fn);\n    }\n    outputDefined() {\n        return this.args.every(arg => arg.outputDefined());\n    }\n}\n\nfunction isComparableType(op, type) {\n    if (op === '==' || op === '!=') {\n        // equality operator\n        return type.kind === 'boolean' ||\n            type.kind === 'string' ||\n            type.kind === 'number' ||\n            type.kind === 'null' ||\n            type.kind === 'value';\n    }\n    else {\n        // ordering operator\n        return type.kind === 'string' ||\n            type.kind === 'number' ||\n            type.kind === 'value';\n    }\n}\nfunction eq(ctx, a, b) { return a === b; }\nfunction neq(ctx, a, b) { return a !== b; }\nfunction lt(ctx, a, b) { return a < b; }\nfunction gt(ctx, a, b) { return a > b; }\nfunction lteq(ctx, a, b) { return a <= b; }\nfunction gteq(ctx, a, b) { return a >= b; }\nfunction eqCollate(ctx, a, b, c) { return c.compare(a, b) === 0; }\nfunction neqCollate(ctx, a, b, c) { return !eqCollate(ctx, a, b, c); }\nfunction ltCollate(ctx, a, b, c) { return c.compare(a, b) < 0; }\nfunction gtCollate(ctx, a, b, c) { return c.compare(a, b) > 0; }\nfunction lteqCollate(ctx, a, b, c) { return c.compare(a, b) <= 0; }\nfunction gteqCollate(ctx, a, b, c) { return c.compare(a, b) >= 0; }\n/**\n * Special form for comparison operators, implementing the signatures:\n * - (T, T, ?Collator) => boolean\n * - (T, value, ?Collator) => boolean\n * - (value, T, ?Collator) => boolean\n *\n * For inequalities, T must be either value, string, or number. For ==/!=, it\n * can also be boolean or null.\n *\n * Equality semantics are equivalent to Javascript's strict equality (===/!==)\n * -- i.e., when the arguments' types don't match, == evaluates to false, != to\n * true.\n *\n * When types don't match in an ordering comparison, a runtime error is thrown.\n *\n * @private\n */\nfunction makeComparison(op, compareBasic, compareWithCollator) {\n    const isOrderComparison = op !== '==' && op !== '!=';\n    return class Comparison {\n        constructor(lhs, rhs, collator) {\n            this.type = BooleanType;\n            this.lhs = lhs;\n            this.rhs = rhs;\n            this.collator = collator;\n            this.hasUntypedArgument = lhs.type.kind === 'value' || rhs.type.kind === 'value';\n        }\n        static parse(args, context) {\n            if (args.length !== 3 && args.length !== 4)\n                return context.error('Expected two or three arguments.');\n            const op = args[0];\n            let lhs = context.parse(args[1], 1, ValueType);\n            if (!lhs)\n                return null;\n            if (!isComparableType(op, lhs.type)) {\n                return context.concat(1).error(`\"${op}\" comparisons are not supported for type '${typeToString(lhs.type)}'.`);\n            }\n            let rhs = context.parse(args[2], 2, ValueType);\n            if (!rhs)\n                return null;\n            if (!isComparableType(op, rhs.type)) {\n                return context.concat(2).error(`\"${op}\" comparisons are not supported for type '${typeToString(rhs.type)}'.`);\n            }\n            if (lhs.type.kind !== rhs.type.kind &&\n                lhs.type.kind !== 'value' &&\n                rhs.type.kind !== 'value') {\n                return context.error(`Cannot compare types '${typeToString(lhs.type)}' and '${typeToString(rhs.type)}'.`);\n            }\n            if (isOrderComparison) {\n                // typing rules specific to less/greater than operators\n                if (lhs.type.kind === 'value' && rhs.type.kind !== 'value') {\n                    // (value, T)\n                    lhs = new Assertion(rhs.type, [lhs]);\n                }\n                else if (lhs.type.kind !== 'value' && rhs.type.kind === 'value') {\n                    // (T, value)\n                    rhs = new Assertion(lhs.type, [rhs]);\n                }\n            }\n            let collator = null;\n            if (args.length === 4) {\n                if (lhs.type.kind !== 'string' &&\n                    rhs.type.kind !== 'string' &&\n                    lhs.type.kind !== 'value' &&\n                    rhs.type.kind !== 'value') {\n                    return context.error('Cannot use collator to compare non-string types.');\n                }\n                collator = context.parse(args[3], 3, CollatorType);\n                if (!collator)\n                    return null;\n            }\n            return new Comparison(lhs, rhs, collator);\n        }\n        evaluate(ctx) {\n            const lhs = this.lhs.evaluate(ctx);\n            const rhs = this.rhs.evaluate(ctx);\n            if (isOrderComparison && this.hasUntypedArgument) {\n                const lt = typeOf(lhs);\n                const rt = typeOf(rhs);\n                // check that type is string or number, and equal\n                if (lt.kind !== rt.kind || !(lt.kind === 'string' || lt.kind === 'number')) {\n                    throw new RuntimeError(`Expected arguments for \"${op}\" to be (string, string) or (number, number), but found (${lt.kind}, ${rt.kind}) instead.`);\n                }\n            }\n            if (this.collator && !isOrderComparison && this.hasUntypedArgument) {\n                const lt = typeOf(lhs);\n                const rt = typeOf(rhs);\n                if (lt.kind !== 'string' || rt.kind !== 'string') {\n                    return compareBasic(ctx, lhs, rhs);\n                }\n            }\n            return this.collator ?\n                compareWithCollator(ctx, lhs, rhs, this.collator.evaluate(ctx)) :\n                compareBasic(ctx, lhs, rhs);\n        }\n        eachChild(fn) {\n            fn(this.lhs);\n            fn(this.rhs);\n            if (this.collator) {\n                fn(this.collator);\n            }\n        }\n        outputDefined() {\n            return true;\n        }\n    };\n}\nconst Equals = makeComparison('==', eq, eqCollate);\nconst NotEquals = makeComparison('!=', neq, neqCollate);\nconst LessThan = makeComparison('<', lt, ltCollate);\nconst GreaterThan = makeComparison('>', gt, gtCollate);\nconst LessThanOrEqual = makeComparison('<=', lteq, lteqCollate);\nconst GreaterThanOrEqual = makeComparison('>=', gteq, gteqCollate);\n\nclass CollatorExpression {\n    constructor(caseSensitive, diacriticSensitive, locale) {\n        this.type = CollatorType;\n        this.locale = locale;\n        this.caseSensitive = caseSensitive;\n        this.diacriticSensitive = diacriticSensitive;\n    }\n    static parse(args, context) {\n        if (args.length !== 2)\n            return context.error('Expected one argument.');\n        const options = args[1];\n        if (typeof options !== 'object' || Array.isArray(options))\n            return context.error('Collator options argument must be an object.');\n        const caseSensitive = context.parse(options['case-sensitive'] === undefined ? false : options['case-sensitive'], 1, BooleanType);\n        if (!caseSensitive)\n            return null;\n        const diacriticSensitive = context.parse(options['diacritic-sensitive'] === undefined ? false : options['diacritic-sensitive'], 1, BooleanType);\n        if (!diacriticSensitive)\n            return null;\n        let locale = null;\n        if (options['locale']) {\n            locale = context.parse(options['locale'], 1, StringType);\n            if (!locale)\n                return null;\n        }\n        return new CollatorExpression(caseSensitive, diacriticSensitive, locale);\n    }\n    evaluate(ctx) {\n        return new Collator(this.caseSensitive.evaluate(ctx), this.diacriticSensitive.evaluate(ctx), this.locale ? this.locale.evaluate(ctx) : null);\n    }\n    eachChild(fn) {\n        fn(this.caseSensitive);\n        fn(this.diacriticSensitive);\n        if (this.locale) {\n            fn(this.locale);\n        }\n    }\n    outputDefined() {\n        // Technically the set of possible outputs is the combinatoric set of Collators produced\n        // by all possible outputs of locale/caseSensitive/diacriticSensitive\n        // But for the primary use of Collators in comparison operators, we ignore the Collator's\n        // possible outputs anyway, so we can get away with leaving this false for now.\n        return false;\n    }\n}\n\nclass NumberFormat {\n    constructor(number, locale, currency, minFractionDigits, maxFractionDigits) {\n        this.type = StringType;\n        this.number = number;\n        this.locale = locale;\n        this.currency = currency;\n        this.minFractionDigits = minFractionDigits;\n        this.maxFractionDigits = maxFractionDigits;\n    }\n    static parse(args, context) {\n        if (args.length !== 3)\n            return context.error('Expected two arguments.');\n        const number = context.parse(args[1], 1, NumberType);\n        if (!number)\n            return null;\n        const options = args[2];\n        if (typeof options !== 'object' || Array.isArray(options))\n            return context.error('NumberFormat options argument must be an object.');\n        let locale = null;\n        if (options['locale']) {\n            locale = context.parse(options['locale'], 1, StringType);\n            if (!locale)\n                return null;\n        }\n        let currency = null;\n        if (options['currency']) {\n            currency = context.parse(options['currency'], 1, StringType);\n            if (!currency)\n                return null;\n        }\n        let minFractionDigits = null;\n        if (options['min-fraction-digits']) {\n            minFractionDigits = context.parse(options['min-fraction-digits'], 1, NumberType);\n            if (!minFractionDigits)\n                return null;\n        }\n        let maxFractionDigits = null;\n        if (options['max-fraction-digits']) {\n            maxFractionDigits = context.parse(options['max-fraction-digits'], 1, NumberType);\n            if (!maxFractionDigits)\n                return null;\n        }\n        return new NumberFormat(number, locale, currency, minFractionDigits, maxFractionDigits);\n    }\n    evaluate(ctx) {\n        return new Intl.NumberFormat(this.locale ? this.locale.evaluate(ctx) : [], {\n            style: this.currency ? 'currency' : 'decimal',\n            currency: this.currency ? this.currency.evaluate(ctx) : undefined,\n            minimumFractionDigits: this.minFractionDigits ? this.minFractionDigits.evaluate(ctx) : undefined,\n            maximumFractionDigits: this.maxFractionDigits ? this.maxFractionDigits.evaluate(ctx) : undefined,\n        }).format(this.number.evaluate(ctx));\n    }\n    eachChild(fn) {\n        fn(this.number);\n        if (this.locale) {\n            fn(this.locale);\n        }\n        if (this.currency) {\n            fn(this.currency);\n        }\n        if (this.minFractionDigits) {\n            fn(this.minFractionDigits);\n        }\n        if (this.maxFractionDigits) {\n            fn(this.maxFractionDigits);\n        }\n    }\n    outputDefined() {\n        return false;\n    }\n}\n\nclass FormatExpression {\n    constructor(sections) {\n        this.type = FormattedType;\n        this.sections = sections;\n    }\n    static parse(args, context) {\n        if (args.length < 2) {\n            return context.error('Expected at least one argument.');\n        }\n        const firstArg = args[1];\n        if (!Array.isArray(firstArg) && typeof firstArg === 'object') {\n            return context.error('First argument must be an image or text section.');\n        }\n        const sections = [];\n        let nextTokenMayBeObject = false;\n        for (let i = 1; i <= args.length - 1; ++i) {\n            const arg = args[i];\n            if (nextTokenMayBeObject && typeof arg === 'object' && !Array.isArray(arg)) {\n                nextTokenMayBeObject = false;\n                let scale = null;\n                if (arg['font-scale']) {\n                    scale = context.parse(arg['font-scale'], 1, NumberType);\n                    if (!scale)\n                        return null;\n                }\n                let font = null;\n                if (arg['text-font']) {\n                    font = context.parse(arg['text-font'], 1, array(StringType));\n                    if (!font)\n                        return null;\n                }\n                let textColor = null;\n                if (arg['text-color']) {\n                    textColor = context.parse(arg['text-color'], 1, ColorType);\n                    if (!textColor)\n                        return null;\n                }\n                let verticalAlign = null;\n                if (arg['vertical-align']) {\n                    if (typeof arg['vertical-align'] === 'string' && !VERTICAL_ALIGN_OPTIONS.includes(arg['vertical-align'])) {\n                        return context.error(`'vertical-align' must be one of: 'bottom', 'center', 'top' but found '${arg['vertical-align']}' instead.`);\n                    }\n                    verticalAlign = context.parse(arg['vertical-align'], 1, StringType);\n                    if (!verticalAlign)\n                        return null;\n                }\n                const lastExpression = sections[sections.length - 1];\n                lastExpression.scale = scale;\n                lastExpression.font = font;\n                lastExpression.textColor = textColor;\n                lastExpression.verticalAlign = verticalAlign;\n            }\n            else {\n                const content = context.parse(args[i], 1, ValueType);\n                if (!content)\n                    return null;\n                const kind = content.type.kind;\n                if (kind !== 'string' && kind !== 'value' && kind !== 'null' && kind !== 'resolvedImage')\n                    return context.error('Formatted text type must be \\'string\\', \\'value\\', \\'image\\' or \\'null\\'.');\n                nextTokenMayBeObject = true;\n                sections.push({ content, scale: null, font: null, textColor: null, verticalAlign: null });\n            }\n        }\n        return new FormatExpression(sections);\n    }\n    evaluate(ctx) {\n        const evaluateSection = section => {\n            const evaluatedContent = section.content.evaluate(ctx);\n            if (typeOf(evaluatedContent) === ResolvedImageType) {\n                return new FormattedSection('', evaluatedContent, null, null, null, section.verticalAlign ? section.verticalAlign.evaluate(ctx) : null);\n            }\n            return new FormattedSection(valueToString(evaluatedContent), null, section.scale ? section.scale.evaluate(ctx) : null, section.font ? section.font.evaluate(ctx).join(',') : null, section.textColor ? section.textColor.evaluate(ctx) : null, section.verticalAlign ? section.verticalAlign.evaluate(ctx) : null);\n        };\n        return new Formatted(this.sections.map(evaluateSection));\n    }\n    eachChild(fn) {\n        for (const section of this.sections) {\n            fn(section.content);\n            if (section.scale) {\n                fn(section.scale);\n            }\n            if (section.font) {\n                fn(section.font);\n            }\n            if (section.textColor) {\n                fn(section.textColor);\n            }\n            if (section.verticalAlign) {\n                fn(section.verticalAlign);\n            }\n        }\n    }\n    outputDefined() {\n        // Technically the combinatoric set of all children\n        // Usually, this.text will be undefined anyway\n        return false;\n    }\n}\n\nclass ImageExpression {\n    constructor(input) {\n        this.type = ResolvedImageType;\n        this.input = input;\n    }\n    static parse(args, context) {\n        if (args.length !== 2) {\n            return context.error('Expected two arguments.');\n        }\n        const name = context.parse(args[1], 1, StringType);\n        if (!name)\n            return context.error('No image name provided.');\n        return new ImageExpression(name);\n    }\n    evaluate(ctx) {\n        const evaluatedImageName = this.input.evaluate(ctx);\n        const value = ResolvedImage.fromString(evaluatedImageName);\n        if (value && ctx.availableImages)\n            value.available = ctx.availableImages.indexOf(evaluatedImageName) > -1;\n        return value;\n    }\n    eachChild(fn) {\n        fn(this.input);\n    }\n    outputDefined() {\n        // The output of image is determined by the list of available images in the evaluation context\n        return false;\n    }\n}\n\nclass Length {\n    constructor(input) {\n        this.type = NumberType;\n        this.input = input;\n    }\n    static parse(args, context) {\n        if (args.length !== 2)\n            return context.error(`Expected 1 argument, but found ${args.length - 1} instead.`);\n        const input = context.parse(args[1], 1);\n        if (!input)\n            return null;\n        if (input.type.kind !== 'array' && input.type.kind !== 'string' && input.type.kind !== 'value')\n            return context.error(`Expected argument of type string or array, but found ${typeToString(input.type)} instead.`);\n        return new Length(input);\n    }\n    evaluate(ctx) {\n        const input = this.input.evaluate(ctx);\n        if (typeof input === 'string') {\n            // The length may be affected by surrogate pairs.\n            return [...input].length;\n        }\n        else if (Array.isArray(input)) {\n            return input.length;\n        }\n        else {\n            throw new RuntimeError(`Expected value to be of type string or array, but found ${typeToString(typeOf(input))} instead.`);\n        }\n    }\n    eachChild(fn) {\n        fn(this.input);\n    }\n    outputDefined() {\n        return false;\n    }\n}\n\nconst EXTENT = 8192;\nfunction getTileCoordinates(p, canonical) {\n    const x = mercatorXfromLng(p[0]);\n    const y = mercatorYfromLat(p[1]);\n    const tilesAtZoom = Math.pow(2, canonical.z);\n    return [Math.round(x * tilesAtZoom * EXTENT), Math.round(y * tilesAtZoom * EXTENT)];\n}\nfunction getLngLatFromTileCoord(coord, canonical) {\n    const tilesAtZoom = Math.pow(2, canonical.z);\n    const x = (coord[0] / EXTENT + canonical.x) / tilesAtZoom;\n    const y = (coord[1] / EXTENT + canonical.y) / tilesAtZoom;\n    return [lngFromMercatorXfromLng(x), latFromMercatorY(y)];\n}\nfunction mercatorXfromLng(lng) {\n    return (180 + lng) / 360;\n}\nfunction lngFromMercatorXfromLng(mercatorX) {\n    return mercatorX * 360 - 180;\n}\nfunction mercatorYfromLat(lat) {\n    return (180 - (180 / Math.PI * Math.log(Math.tan(Math.PI / 4 + lat * Math.PI / 360)))) / 360;\n}\nfunction latFromMercatorY(mercatorY) {\n    return 360 / Math.PI * Math.atan(Math.exp((180 - mercatorY * 360) * Math.PI / 180)) - 90;\n}\nfunction updateBBox(bbox, coord) {\n    bbox[0] = Math.min(bbox[0], coord[0]);\n    bbox[1] = Math.min(bbox[1], coord[1]);\n    bbox[2] = Math.max(bbox[2], coord[0]);\n    bbox[3] = Math.max(bbox[3], coord[1]);\n}\nfunction boxWithinBox(bbox1, bbox2) {\n    if (bbox1[0] <= bbox2[0])\n        return false;\n    if (bbox1[2] >= bbox2[2])\n        return false;\n    if (bbox1[1] <= bbox2[1])\n        return false;\n    if (bbox1[3] >= bbox2[3])\n        return false;\n    return true;\n}\nfunction rayIntersect(p, p1, p2) {\n    return ((p1[1] > p[1]) !== (p2[1] > p[1])) && (p[0] < (p2[0] - p1[0]) * (p[1] - p1[1]) / (p2[1] - p1[1]) + p1[0]);\n}\nfunction pointOnBoundary(p, p1, p2) {\n    const x1 = p[0] - p1[0];\n    const y1 = p[1] - p1[1];\n    const x2 = p[0] - p2[0];\n    const y2 = p[1] - p2[1];\n    return (x1 * y2 - x2 * y1 === 0) && (x1 * x2 <= 0) && (y1 * y2 <= 0);\n}\n// a, b are end points for line segment1, c and d are end points for line segment2\nfunction segmentIntersectSegment(a, b, c, d) {\n    // check if two segments are parallel or not\n    // precondition is end point a, b is inside polygon, if line a->b is\n    // parallel to polygon edge c->d, then a->b won't intersect with c->d\n    const vectorP = [b[0] - a[0], b[1] - a[1]];\n    const vectorQ = [d[0] - c[0], d[1] - c[1]];\n    if (perp(vectorQ, vectorP) === 0)\n        return false;\n    // If lines are intersecting with each other, the relative location should be:\n    // a and b lie in different sides of segment c->d\n    // c and d lie in different sides of segment a->b\n    if (twoSided(a, b, c, d) && twoSided(c, d, a, b))\n        return true;\n    return false;\n}\nfunction lineIntersectPolygon(p1, p2, polygon) {\n    for (const ring of polygon) {\n        // loop through every edge of the ring\n        for (let j = 0; j < ring.length - 1; ++j) {\n            if (segmentIntersectSegment(p1, p2, ring[j], ring[j + 1])) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n// ray casting algorithm for detecting if point is in polygon\nfunction pointWithinPolygon(point, rings, trueIfOnBoundary = false) {\n    let inside = false;\n    for (const ring of rings) {\n        for (let j = 0; j < ring.length - 1; j++) {\n            if (pointOnBoundary(point, ring[j], ring[j + 1]))\n                return trueIfOnBoundary;\n            if (rayIntersect(point, ring[j], ring[j + 1]))\n                inside = !inside;\n        }\n    }\n    return inside;\n}\nfunction pointWithinPolygons(point, polygons) {\n    for (const polygon of polygons) {\n        if (pointWithinPolygon(point, polygon))\n            return true;\n    }\n    return false;\n}\nfunction lineStringWithinPolygon(line, polygon) {\n    // First, check if geometry points of line segments are all inside polygon\n    for (const point of line) {\n        if (!pointWithinPolygon(point, polygon)) {\n            return false;\n        }\n    }\n    // Second, check if there is line segment intersecting polygon edge\n    for (let i = 0; i < line.length - 1; ++i) {\n        if (lineIntersectPolygon(line[i], line[i + 1], polygon)) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction lineStringWithinPolygons(line, polygons) {\n    for (const polygon of polygons) {\n        if (lineStringWithinPolygon(line, polygon))\n            return true;\n    }\n    return false;\n}\nfunction perp(v1, v2) {\n    return (v1[0] * v2[1] - v1[1] * v2[0]);\n}\n// check if p1 and p2 are in different sides of line segment q1->q2\nfunction twoSided(p1, p2, q1, q2) {\n    // q1->p1 (x1, y1), q1->p2 (x2, y2), q1->q2 (x3, y3)\n    const x1 = p1[0] - q1[0];\n    const y1 = p1[1] - q1[1];\n    const x2 = p2[0] - q1[0];\n    const y2 = p2[1] - q1[1];\n    const x3 = q2[0] - q1[0];\n    const y3 = q2[1] - q1[1];\n    const det1 = (x1 * y3 - x3 * y1);\n    const det2 = (x2 * y3 - x3 * y2);\n    if ((det1 > 0 && det2 < 0) || (det1 < 0 && det2 > 0))\n        return true;\n    return false;\n}\n\nfunction getTilePolygon(coordinates, bbox, canonical) {\n    const polygon = [];\n    for (let i = 0; i < coordinates.length; i++) {\n        const ring = [];\n        for (let j = 0; j < coordinates[i].length; j++) {\n            const coord = getTileCoordinates(coordinates[i][j], canonical);\n            updateBBox(bbox, coord);\n            ring.push(coord);\n        }\n        polygon.push(ring);\n    }\n    return polygon;\n}\nfunction getTilePolygons(coordinates, bbox, canonical) {\n    const polygons = [];\n    for (let i = 0; i < coordinates.length; i++) {\n        const polygon = getTilePolygon(coordinates[i], bbox, canonical);\n        polygons.push(polygon);\n    }\n    return polygons;\n}\nfunction updatePoint(p, bbox, polyBBox, worldSize) {\n    if (p[0] < polyBBox[0] || p[0] > polyBBox[2]) {\n        const halfWorldSize = worldSize * 0.5;\n        let shift = (p[0] - polyBBox[0] > halfWorldSize) ? -worldSize : (polyBBox[0] - p[0] > halfWorldSize) ? worldSize : 0;\n        if (shift === 0) {\n            shift = (p[0] - polyBBox[2] > halfWorldSize) ? -worldSize : (polyBBox[2] - p[0] > halfWorldSize) ? worldSize : 0;\n        }\n        p[0] += shift;\n    }\n    updateBBox(bbox, p);\n}\nfunction resetBBox(bbox) {\n    bbox[0] = bbox[1] = Infinity;\n    bbox[2] = bbox[3] = -Infinity;\n}\nfunction getTilePoints(geometry, pointBBox, polyBBox, canonical) {\n    const worldSize = Math.pow(2, canonical.z) * EXTENT;\n    const shifts = [canonical.x * EXTENT, canonical.y * EXTENT];\n    const tilePoints = [];\n    for (const points of geometry) {\n        for (const point of points) {\n            const p = [point.x + shifts[0], point.y + shifts[1]];\n            updatePoint(p, pointBBox, polyBBox, worldSize);\n            tilePoints.push(p);\n        }\n    }\n    return tilePoints;\n}\nfunction getTileLines(geometry, lineBBox, polyBBox, canonical) {\n    const worldSize = Math.pow(2, canonical.z) * EXTENT;\n    const shifts = [canonical.x * EXTENT, canonical.y * EXTENT];\n    const tileLines = [];\n    for (const line of geometry) {\n        const tileLine = [];\n        for (const point of line) {\n            const p = [point.x + shifts[0], point.y + shifts[1]];\n            updateBBox(lineBBox, p);\n            tileLine.push(p);\n        }\n        tileLines.push(tileLine);\n    }\n    if (lineBBox[2] - lineBBox[0] <= worldSize / 2) {\n        resetBBox(lineBBox);\n        for (const line of tileLines) {\n            for (const p of line) {\n                updatePoint(p, lineBBox, polyBBox, worldSize);\n            }\n        }\n    }\n    return tileLines;\n}\nfunction pointsWithinPolygons(ctx, polygonGeometry) {\n    const pointBBox = [Infinity, Infinity, -Infinity, -Infinity];\n    const polyBBox = [Infinity, Infinity, -Infinity, -Infinity];\n    const canonical = ctx.canonicalID();\n    if (polygonGeometry.type === 'Polygon') {\n        const tilePolygon = getTilePolygon(polygonGeometry.coordinates, polyBBox, canonical);\n        const tilePoints = getTilePoints(ctx.geometry(), pointBBox, polyBBox, canonical);\n        if (!boxWithinBox(pointBBox, polyBBox))\n            return false;\n        for (const point of tilePoints) {\n            if (!pointWithinPolygon(point, tilePolygon))\n                return false;\n        }\n    }\n    if (polygonGeometry.type === 'MultiPolygon') {\n        const tilePolygons = getTilePolygons(polygonGeometry.coordinates, polyBBox, canonical);\n        const tilePoints = getTilePoints(ctx.geometry(), pointBBox, polyBBox, canonical);\n        if (!boxWithinBox(pointBBox, polyBBox))\n            return false;\n        for (const point of tilePoints) {\n            if (!pointWithinPolygons(point, tilePolygons))\n                return false;\n        }\n    }\n    return true;\n}\nfunction linesWithinPolygons(ctx, polygonGeometry) {\n    const lineBBox = [Infinity, Infinity, -Infinity, -Infinity];\n    const polyBBox = [Infinity, Infinity, -Infinity, -Infinity];\n    const canonical = ctx.canonicalID();\n    if (polygonGeometry.type === 'Polygon') {\n        const tilePolygon = getTilePolygon(polygonGeometry.coordinates, polyBBox, canonical);\n        const tileLines = getTileLines(ctx.geometry(), lineBBox, polyBBox, canonical);\n        if (!boxWithinBox(lineBBox, polyBBox))\n            return false;\n        for (const line of tileLines) {\n            if (!lineStringWithinPolygon(line, tilePolygon))\n                return false;\n        }\n    }\n    if (polygonGeometry.type === 'MultiPolygon') {\n        const tilePolygons = getTilePolygons(polygonGeometry.coordinates, polyBBox, canonical);\n        const tileLines = getTileLines(ctx.geometry(), lineBBox, polyBBox, canonical);\n        if (!boxWithinBox(lineBBox, polyBBox))\n            return false;\n        for (const line of tileLines) {\n            if (!lineStringWithinPolygons(line, tilePolygons))\n                return false;\n        }\n    }\n    return true;\n}\nclass Within {\n    constructor(geojson, geometries) {\n        this.type = BooleanType;\n        this.geojson = geojson;\n        this.geometries = geometries;\n    }\n    static parse(args, context) {\n        if (args.length !== 2)\n            return context.error(`'within' expression requires exactly one argument, but found ${args.length - 1} instead.`);\n        if (isValue(args[1])) {\n            const geojson = args[1];\n            if (geojson.type === 'FeatureCollection') {\n                const polygonsCoords = [];\n                for (const polygon of geojson.features) {\n                    const { type, coordinates } = polygon.geometry;\n                    if (type === 'Polygon') {\n                        polygonsCoords.push(coordinates);\n                    }\n                    if (type === 'MultiPolygon') {\n                        polygonsCoords.push(...coordinates);\n                    }\n                }\n                if (polygonsCoords.length) {\n                    const multipolygonWrapper = {\n                        type: 'MultiPolygon',\n                        coordinates: polygonsCoords\n                    };\n                    return new Within(geojson, multipolygonWrapper);\n                }\n            }\n            else if (geojson.type === 'Feature') {\n                const type = geojson.geometry.type;\n                if (type === 'Polygon' || type === 'MultiPolygon') {\n                    return new Within(geojson, geojson.geometry);\n                }\n            }\n            else if (geojson.type === 'Polygon' || geojson.type === 'MultiPolygon') {\n                return new Within(geojson, geojson);\n            }\n        }\n        return context.error('\\'within\\' expression requires valid geojson object that contains polygon geometry type.');\n    }\n    evaluate(ctx) {\n        if (ctx.geometry() != null && ctx.canonicalID() != null) {\n            if (ctx.geometryType() === 'Point') {\n                return pointsWithinPolygons(ctx, this.geometries);\n            }\n            else if (ctx.geometryType() === 'LineString') {\n                return linesWithinPolygons(ctx, this.geometries);\n            }\n        }\n        return false;\n    }\n    eachChild() { }\n    outputDefined() {\n        return true;\n    }\n}\n\nclass TinyQueue {\n    constructor(data = [], compare = (a, b) => (a < b ? -1 : a > b ? 1 : 0)) {\n        this.data = data;\n        this.length = this.data.length;\n        this.compare = compare;\n\n        if (this.length > 0) {\n            for (let i = (this.length >> 1) - 1; i >= 0; i--) this._down(i);\n        }\n    }\n\n    push(item) {\n        this.data.push(item);\n        this._up(this.length++);\n    }\n\n    pop() {\n        if (this.length === 0) return undefined;\n\n        const top = this.data[0];\n        const bottom = this.data.pop();\n\n        if (--this.length > 0) {\n            this.data[0] = bottom;\n            this._down(0);\n        }\n\n        return top;\n    }\n\n    peek() {\n        return this.data[0];\n    }\n\n    _up(pos) {\n        const {data, compare} = this;\n        const item = data[pos];\n\n        while (pos > 0) {\n            const parent = (pos - 1) >> 1;\n            const current = data[parent];\n            if (compare(item, current) >= 0) break;\n            data[pos] = current;\n            pos = parent;\n        }\n\n        data[pos] = item;\n    }\n\n    _down(pos) {\n        const {data, compare} = this;\n        const halfLength = this.length >> 1;\n        const item = data[pos];\n\n        while (pos < halfLength) {\n            let bestChild = (pos << 1) + 1; // initially it is the left child\n            const right = bestChild + 1;\n\n            if (right < this.length && compare(data[right], data[bestChild]) < 0) {\n                bestChild = right;\n            }\n            if (compare(data[bestChild], item) >= 0) break;\n\n            data[pos] = data[bestChild];\n            pos = bestChild;\n        }\n\n        data[pos] = item;\n    }\n}\n\n/**\n * Rearranges items so that all items in the [left, k] are the smallest.\n * The k-th element will have the (k - left + 1)-th smallest value in [left, right].\n *\n * @template T\n * @param {T[]} arr the array to partially sort (in place)\n * @param {number} k middle index for partial sorting (as defined above)\n * @param {number} [left=0] left index of the range to sort\n * @param {number} [right=arr.length-1] right index\n * @param {(a: T, b: T) => number} [compare = (a, b) => a - b] compare function\n */\nfunction quickselect(arr, k, left = 0, right = arr.length - 1, compare = defaultCompare) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            const n = right - left + 1;\n            const m = k - left + 1;\n            const z = Math.log(n);\n            const s = 0.5 * Math.exp(2 * z / 3);\n            const sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            const newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            const newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            quickselect(arr, k, newLeft, newRight, compare);\n        }\n\n        const t = arr[k];\n        let i = left;\n        /** @type {number} */\n        let j = right;\n\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) i++;\n            while (compare(arr[j], t) > 0) j--;\n        }\n\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\n/**\n * @template T\n * @param {T[]} arr\n * @param {number} i\n * @param {number} j\n */\nfunction swap(arr, i, j) {\n    const tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\n/**\n * @template T\n * @param {T} a\n * @param {T} b\n * @returns {number}\n */\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n\n/**\n * Classifies an array of rings into polygons with outer rings and holes\n * @param rings - the rings to classify\n * @param maxRings - the maximum number of rings to include in a polygon, use 0 to include all rings\n * @returns an array of polygons with internal rings as holes\n */\nfunction classifyRings(rings, maxRings) {\n    const len = rings.length;\n    if (len <= 1)\n        return [rings];\n    const polygons = [];\n    let polygon;\n    let ccw;\n    for (const ring of rings) {\n        const area = calculateSignedArea(ring);\n        if (area === 0)\n            continue;\n        ring.area = Math.abs(area);\n        if (ccw === undefined)\n            ccw = area < 0;\n        if (ccw === area < 0) {\n            if (polygon)\n                polygons.push(polygon);\n            polygon = [ring];\n        }\n        else {\n            polygon.push(ring);\n        }\n    }\n    if (polygon)\n        polygons.push(polygon);\n    // Earcut performance degrades with the # of rings in a polygon. For this\n    // reason, we limit strip out all but the `maxRings` largest rings.\n    if (maxRings > 1) {\n        for (let j = 0; j < polygons.length; j++) {\n            if (polygons[j].length <= maxRings)\n                continue;\n            quickselect(polygons[j], maxRings, 1, polygons[j].length - 1, compareAreas);\n            polygons[j] = polygons[j].slice(0, maxRings);\n        }\n    }\n    return polygons;\n}\nfunction compareAreas(a, b) {\n    return b.area - a.area;\n}\n/**\n * Returns the signed area for the polygon ring.  Positive areas are exterior rings and\n * have a clockwise winding.  Negative areas are interior rings and have a counter clockwise\n * ordering.\n *\n * @param ring - Exterior or interior ring\n * @returns Signed area\n */\nfunction calculateSignedArea(ring) {\n    let sum = 0;\n    for (let i = 0, len = ring.length, j = len - 1, p1, p2; i < len; j = i++) {\n        p1 = ring[i];\n        p2 = ring[j];\n        sum += (p2.x - p1.x) * (p1.y + p2.y);\n    }\n    return sum;\n}\n\n// This is taken from https://github.com/mapbox/cheap-ruler/ in order to take only the relevant parts\n// Values that define WGS84 ellipsoid model of the Earth\nconst RE = 6378.137; // equatorial radius\nconst FE = 1 / 298.257223563; // flattening\nconst E2 = FE * (2 - FE);\nconst RAD = Math.PI / 180;\nclass CheapRuler {\n    constructor(lat) {\n        // Curvature formulas from https://en.wikipedia.org/wiki/Earth_radius#Meridional\n        const m = RAD * RE * 1000;\n        const coslat = Math.cos(lat * RAD);\n        const w2 = 1 / (1 - E2 * (1 - coslat * coslat));\n        const w = Math.sqrt(w2);\n        // multipliers for converting longitude and latitude degrees into distance\n        this.kx = m * w * coslat; // based on normal radius of curvature\n        this.ky = m * w * w2 * (1 - E2); // based on meridional radius of curvature\n    }\n    /**\n     * Given two points of the form [longitude, latitude], returns the distance.\n     *\n     * @param a - point [longitude, latitude]\n     * @param b - point [longitude, latitude]\n     * @returns distance\n     * @example\n     * const distance = ruler.distance([30.5, 50.5], [30.51, 50.49]);\n     * //=distance\n     */\n    distance(a, b) {\n        const dx = this.wrap(a[0] - b[0]) * this.kx;\n        const dy = (a[1] - b[1]) * this.ky;\n        return Math.sqrt(dx * dx + dy * dy);\n    }\n    /**\n     * Returns an object of the form {point, index, t}, where point is closest point on the line\n     * from the given point, index is the start index of the segment with the closest point,\n     * and t is a parameter from 0 to 1 that indicates where the closest point is on that segment.\n     *\n     * @param line - an array of points that form the line\n     * @param p - point [longitude, latitude]\n     * @returns the nearest point, its index in the array and the proportion along the line\n     * @example\n     * const point = ruler.pointOnLine(line, [-67.04, 50.5]).point;\n     * //=point\n     */\n    pointOnLine(line, p) {\n        let minDist = Infinity;\n        let minX, minY, minI, minT;\n        for (let i = 0; i < line.length - 1; i++) {\n            let x = line[i][0];\n            let y = line[i][1];\n            let dx = this.wrap(line[i + 1][0] - x) * this.kx;\n            let dy = (line[i + 1][1] - y) * this.ky;\n            let t = 0;\n            if (dx !== 0 || dy !== 0) {\n                t = (this.wrap(p[0] - x) * this.kx * dx + (p[1] - y) * this.ky * dy) / (dx * dx + dy * dy);\n                if (t > 1) {\n                    x = line[i + 1][0];\n                    y = line[i + 1][1];\n                }\n                else if (t > 0) {\n                    x += (dx / this.kx) * t;\n                    y += (dy / this.ky) * t;\n                }\n            }\n            dx = this.wrap(p[0] - x) * this.kx;\n            dy = (p[1] - y) * this.ky;\n            const sqDist = dx * dx + dy * dy;\n            if (sqDist < minDist) {\n                minDist = sqDist;\n                minX = x;\n                minY = y;\n                minI = i;\n                minT = t;\n            }\n        }\n        return {\n            point: [minX, minY],\n            index: minI,\n            t: Math.max(0, Math.min(1, minT))\n        };\n    }\n    wrap(deg) {\n        while (deg < -180)\n            deg += 360;\n        while (deg > 180)\n            deg -= 360;\n        return deg;\n    }\n}\n\nconst MinPointsSize = 100;\nconst MinLinePointsSize = 50;\nfunction compareDistPair(a, b) {\n    return b[0] - a[0];\n}\nfunction getRangeSize(range) {\n    return range[1] - range[0] + 1;\n}\nfunction isRangeSafe(range, threshold) {\n    return range[1] >= range[0] && range[1] < threshold;\n}\nfunction splitRange(range, isLine) {\n    if (range[0] > range[1]) {\n        return [null, null];\n    }\n    const size = getRangeSize(range);\n    if (isLine) {\n        if (size === 2) {\n            return [range, null];\n        }\n        const size1 = Math.floor(size / 2);\n        return [[range[0], range[0] + size1],\n            [range[0] + size1, range[1]]];\n    }\n    if (size === 1) {\n        return [range, null];\n    }\n    const size1 = Math.floor(size / 2) - 1;\n    return [[range[0], range[0] + size1],\n        [range[0] + size1 + 1, range[1]]];\n}\nfunction getBBox(coords, range) {\n    if (!isRangeSafe(range, coords.length)) {\n        return [Infinity, Infinity, -Infinity, -Infinity];\n    }\n    const bbox = [Infinity, Infinity, -Infinity, -Infinity];\n    for (let i = range[0]; i <= range[1]; ++i) {\n        updateBBox(bbox, coords[i]);\n    }\n    return bbox;\n}\nfunction getPolygonBBox(polygon) {\n    const bbox = [Infinity, Infinity, -Infinity, -Infinity];\n    for (const ring of polygon) {\n        for (const coord of ring) {\n            updateBBox(bbox, coord);\n        }\n    }\n    return bbox;\n}\nfunction isValidBBox(bbox) {\n    return bbox[0] !== -Infinity && bbox[1] !== -Infinity && bbox[2] !== Infinity && bbox[3] !== Infinity;\n}\n// Calculate the distance between two bounding boxes.\n// Calculate the delta in x and y direction, and use two fake points {0.0, 0.0}\n// and {dx, dy} to calculate the distance. Distance will be 0.0 if bounding box are overlapping.\nfunction bboxToBBoxDistance(bbox1, bbox2, ruler) {\n    if (!isValidBBox(bbox1) || !isValidBBox(bbox2)) {\n        return NaN;\n    }\n    let dx = 0.0;\n    let dy = 0.0;\n    // bbox1 in left side\n    if (bbox1[2] < bbox2[0]) {\n        dx = bbox2[0] - bbox1[2];\n    }\n    // bbox1 in right side\n    if (bbox1[0] > bbox2[2]) {\n        dx = bbox1[0] - bbox2[2];\n    }\n    // bbox1 in above side\n    if (bbox1[1] > bbox2[3]) {\n        dy = bbox1[1] - bbox2[3];\n    }\n    // bbox1 in down side\n    if (bbox1[3] < bbox2[1]) {\n        dy = bbox2[1] - bbox1[3];\n    }\n    return ruler.distance([0.0, 0.0], [dx, dy]);\n}\nfunction pointToLineDistance(point, line, ruler) {\n    const nearestPoint = ruler.pointOnLine(line, point);\n    return ruler.distance(point, nearestPoint.point);\n}\nfunction segmentToSegmentDistance(p1, p2, q1, q2, ruler) {\n    const dist1 = Math.min(pointToLineDistance(p1, [q1, q2], ruler), pointToLineDistance(p2, [q1, q2], ruler));\n    const dist2 = Math.min(pointToLineDistance(q1, [p1, p2], ruler), pointToLineDistance(q2, [p1, p2], ruler));\n    return Math.min(dist1, dist2);\n}\nfunction lineToLineDistance(line1, range1, line2, range2, ruler) {\n    const rangeSafe = isRangeSafe(range1, line1.length) && isRangeSafe(range2, line2.length);\n    if (!rangeSafe) {\n        return Infinity;\n    }\n    let dist = Infinity;\n    for (let i = range1[0]; i < range1[1]; ++i) {\n        const p1 = line1[i];\n        const p2 = line1[i + 1];\n        for (let j = range2[0]; j < range2[1]; ++j) {\n            const q1 = line2[j];\n            const q2 = line2[j + 1];\n            if (segmentIntersectSegment(p1, p2, q1, q2)) {\n                return 0.0;\n            }\n            dist = Math.min(dist, segmentToSegmentDistance(p1, p2, q1, q2, ruler));\n        }\n    }\n    return dist;\n}\nfunction pointsToPointsDistance(points1, range1, points2, range2, ruler) {\n    const rangeSafe = isRangeSafe(range1, points1.length) && isRangeSafe(range2, points2.length);\n    if (!rangeSafe) {\n        return NaN;\n    }\n    let dist = Infinity;\n    for (let i = range1[0]; i <= range1[1]; ++i) {\n        for (let j = range2[0]; j <= range2[1]; ++j) {\n            dist = Math.min(dist, ruler.distance(points1[i], points2[j]));\n            if (dist === 0.0) {\n                return dist;\n            }\n        }\n    }\n    return dist;\n}\nfunction pointToPolygonDistance(point, polygon, ruler) {\n    if (pointWithinPolygon(point, polygon, true)) {\n        return 0.0;\n    }\n    let dist = Infinity;\n    for (const ring of polygon) {\n        const front = ring[0];\n        const back = ring[ring.length - 1];\n        if (front !== back) {\n            dist = Math.min(dist, pointToLineDistance(point, [back, front], ruler));\n            if (dist === 0.0) {\n                return dist;\n            }\n        }\n        const nearestPoint = ruler.pointOnLine(ring, point);\n        dist = Math.min(dist, ruler.distance(point, nearestPoint.point));\n        if (dist === 0.0) {\n            return dist;\n        }\n    }\n    return dist;\n}\nfunction lineToPolygonDistance(line, range, polygon, ruler) {\n    if (!isRangeSafe(range, line.length)) {\n        return NaN;\n    }\n    for (let i = range[0]; i <= range[1]; ++i) {\n        if (pointWithinPolygon(line[i], polygon, true)) {\n            return 0.0;\n        }\n    }\n    let dist = Infinity;\n    for (let i = range[0]; i < range[1]; ++i) {\n        const p1 = line[i];\n        const p2 = line[i + 1];\n        for (const ring of polygon) {\n            for (let j = 0, len = ring.length, k = len - 1; j < len; k = j++) {\n                const q1 = ring[k];\n                const q2 = ring[j];\n                if (segmentIntersectSegment(p1, p2, q1, q2)) {\n                    return 0.0;\n                }\n                dist = Math.min(dist, segmentToSegmentDistance(p1, p2, q1, q2, ruler));\n            }\n        }\n    }\n    return dist;\n}\nfunction polygonIntersect(poly1, poly2) {\n    for (const ring of poly1) {\n        for (const point of ring) {\n            if (pointWithinPolygon(point, poly2, true)) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\nfunction polygonToPolygonDistance(polygon1, polygon2, ruler, currentMiniDist = Infinity) {\n    const bbox1 = getPolygonBBox(polygon1);\n    const bbox2 = getPolygonBBox(polygon2);\n    if (currentMiniDist !== Infinity && bboxToBBoxDistance(bbox1, bbox2, ruler) >= currentMiniDist) {\n        return currentMiniDist;\n    }\n    if (boxWithinBox(bbox1, bbox2)) {\n        if (polygonIntersect(polygon1, polygon2)) {\n            return 0.0;\n        }\n    }\n    else if (polygonIntersect(polygon2, polygon1)) {\n        return 0.0;\n    }\n    let dist = Infinity;\n    for (const ring1 of polygon1) {\n        for (let i = 0, len1 = ring1.length, l = len1 - 1; i < len1; l = i++) {\n            const p1 = ring1[l];\n            const p2 = ring1[i];\n            for (const ring2 of polygon2) {\n                for (let j = 0, len2 = ring2.length, k = len2 - 1; j < len2; k = j++) {\n                    const q1 = ring2[k];\n                    const q2 = ring2[j];\n                    if (segmentIntersectSegment(p1, p2, q1, q2)) {\n                        return 0.0;\n                    }\n                    dist = Math.min(dist, segmentToSegmentDistance(p1, p2, q1, q2, ruler));\n                }\n            }\n        }\n    }\n    return dist;\n}\nfunction updateQueue(distQueue, miniDist, ruler, points, polyBBox, rangeA) {\n    if (!rangeA) {\n        return;\n    }\n    const tempDist = bboxToBBoxDistance(getBBox(points, rangeA), polyBBox, ruler);\n    // Insert new pair to the queue if the bbox distance is less than\n    // miniDist, The pair with biggest distance will be at the top\n    if (tempDist < miniDist) {\n        distQueue.push([tempDist, rangeA, [0, 0]]);\n    }\n}\nfunction updateQueueTwoSets(distQueue, miniDist, ruler, pointSet1, pointSet2, range1, range2) {\n    if (!range1 || !range2) {\n        return;\n    }\n    const tempDist = bboxToBBoxDistance(getBBox(pointSet1, range1), getBBox(pointSet2, range2), ruler);\n    // Insert new pair to the queue if the bbox distance is less than\n    // miniDist, The pair with biggest distance will be at the top\n    if (tempDist < miniDist) {\n        distQueue.push([tempDist, range1, range2]);\n    }\n}\n// Divide and conquer, the time complexity is O(n*lgn), faster than Brute force\n// O(n*n) Most of the time, use index for in-place processing.\nfunction pointsToPolygonDistance(points, isLine, polygon, ruler, currentMiniDist = Infinity) {\n    let miniDist = Math.min(ruler.distance(points[0], polygon[0][0]), currentMiniDist);\n    if (miniDist === 0.0) {\n        return miniDist;\n    }\n    const distQueue = new TinyQueue([[0, [0, points.length - 1], [0, 0]]], compareDistPair);\n    const polyBBox = getPolygonBBox(polygon);\n    while (distQueue.length > 0) {\n        const distPair = distQueue.pop();\n        if (distPair[0] >= miniDist) {\n            continue;\n        }\n        const range = distPair[1];\n        // In case the set size are relatively small, we could use brute-force directly\n        const threshold = isLine ? MinLinePointsSize : MinPointsSize;\n        if (getRangeSize(range) <= threshold) {\n            if (!isRangeSafe(range, points.length)) {\n                return NaN;\n            }\n            if (isLine) {\n                const tempDist = lineToPolygonDistance(points, range, polygon, ruler);\n                if (isNaN(tempDist) || tempDist === 0.0) {\n                    return tempDist;\n                }\n                miniDist = Math.min(miniDist, tempDist);\n            }\n            else {\n                for (let i = range[0]; i <= range[1]; ++i) {\n                    const tempDist = pointToPolygonDistance(points[i], polygon, ruler);\n                    miniDist = Math.min(miniDist, tempDist);\n                    if (miniDist === 0.0) {\n                        return 0.0;\n                    }\n                }\n            }\n        }\n        else {\n            const newRangesA = splitRange(range, isLine);\n            updateQueue(distQueue, miniDist, ruler, points, polyBBox, newRangesA[0]);\n            updateQueue(distQueue, miniDist, ruler, points, polyBBox, newRangesA[1]);\n        }\n    }\n    return miniDist;\n}\nfunction pointSetToPointSetDistance(pointSet1, isLine1, pointSet2, isLine2, ruler, currentMiniDist = Infinity) {\n    let miniDist = Math.min(currentMiniDist, ruler.distance(pointSet1[0], pointSet2[0]));\n    if (miniDist === 0.0) {\n        return miniDist;\n    }\n    const distQueue = new TinyQueue([[0, [0, pointSet1.length - 1], [0, pointSet2.length - 1]]], compareDistPair);\n    while (distQueue.length > 0) {\n        const distPair = distQueue.pop();\n        if (distPair[0] >= miniDist) {\n            continue;\n        }\n        const rangeA = distPair[1];\n        const rangeB = distPair[2];\n        const threshold1 = isLine1 ? MinLinePointsSize : MinPointsSize;\n        const threshold2 = isLine2 ? MinLinePointsSize : MinPointsSize;\n        // In case the set size are relatively small, we could use brute-force directly\n        if (getRangeSize(rangeA) <= threshold1 && getRangeSize(rangeB) <= threshold2) {\n            if (!isRangeSafe(rangeA, pointSet1.length) && isRangeSafe(rangeB, pointSet2.length)) {\n                return NaN;\n            }\n            let tempDist;\n            if (isLine1 && isLine2) {\n                tempDist = lineToLineDistance(pointSet1, rangeA, pointSet2, rangeB, ruler);\n                miniDist = Math.min(miniDist, tempDist);\n            }\n            else if (isLine1 && !isLine2) {\n                const sublibe = pointSet1.slice(rangeA[0], rangeA[1] + 1);\n                for (let i = rangeB[0]; i <= rangeB[1]; ++i) {\n                    tempDist = pointToLineDistance(pointSet2[i], sublibe, ruler);\n                    miniDist = Math.min(miniDist, tempDist);\n                    if (miniDist === 0.0) {\n                        return miniDist;\n                    }\n                }\n            }\n            else if (!isLine1 && isLine2) {\n                const sublibe = pointSet2.slice(rangeB[0], rangeB[1] + 1);\n                for (let i = rangeA[0]; i <= rangeA[1]; ++i) {\n                    tempDist = pointToLineDistance(pointSet1[i], sublibe, ruler);\n                    miniDist = Math.min(miniDist, tempDist);\n                    if (miniDist === 0.0) {\n                        return miniDist;\n                    }\n                }\n            }\n            else {\n                tempDist = pointsToPointsDistance(pointSet1, rangeA, pointSet2, rangeB, ruler);\n                miniDist = Math.min(miniDist, tempDist);\n            }\n        }\n        else {\n            const newRangesA = splitRange(rangeA, isLine1);\n            const newRangesB = splitRange(rangeB, isLine2);\n            updateQueueTwoSets(distQueue, miniDist, ruler, pointSet1, pointSet2, newRangesA[0], newRangesB[0]);\n            updateQueueTwoSets(distQueue, miniDist, ruler, pointSet1, pointSet2, newRangesA[0], newRangesB[1]);\n            updateQueueTwoSets(distQueue, miniDist, ruler, pointSet1, pointSet2, newRangesA[1], newRangesB[0]);\n            updateQueueTwoSets(distQueue, miniDist, ruler, pointSet1, pointSet2, newRangesA[1], newRangesB[1]);\n        }\n    }\n    return miniDist;\n}\nfunction pointToGeometryDistance(ctx, geometries) {\n    const tilePoints = ctx.geometry();\n    const pointPosition = tilePoints.flat().map(p => getLngLatFromTileCoord([p.x, p.y], ctx.canonical));\n    if (tilePoints.length === 0) {\n        return NaN;\n    }\n    const ruler = new CheapRuler(pointPosition[0][1]);\n    let dist = Infinity;\n    for (const geometry of geometries) {\n        switch (geometry.type) {\n            case 'Point':\n                dist = Math.min(dist, pointSetToPointSetDistance(pointPosition, false, [geometry.coordinates], false, ruler, dist));\n                break;\n            case 'LineString':\n                dist = Math.min(dist, pointSetToPointSetDistance(pointPosition, false, geometry.coordinates, true, ruler, dist));\n                break;\n            case 'Polygon':\n                dist = Math.min(dist, pointsToPolygonDistance(pointPosition, false, geometry.coordinates, ruler, dist));\n                break;\n        }\n        if (dist === 0.0) {\n            return dist;\n        }\n    }\n    return dist;\n}\nfunction lineStringToGeometryDistance(ctx, geometries) {\n    const tileLine = ctx.geometry();\n    const linePositions = tileLine.flat().map(p => getLngLatFromTileCoord([p.x, p.y], ctx.canonical));\n    if (tileLine.length === 0) {\n        return NaN;\n    }\n    const ruler = new CheapRuler(linePositions[0][1]);\n    let dist = Infinity;\n    for (const geometry of geometries) {\n        switch (geometry.type) {\n            case 'Point':\n                dist = Math.min(dist, pointSetToPointSetDistance(linePositions, true, [geometry.coordinates], false, ruler, dist));\n                break;\n            case 'LineString':\n                dist = Math.min(dist, pointSetToPointSetDistance(linePositions, true, geometry.coordinates, true, ruler, dist));\n                break;\n            case 'Polygon':\n                dist = Math.min(dist, pointsToPolygonDistance(linePositions, true, geometry.coordinates, ruler, dist));\n                break;\n        }\n        if (dist === 0.0) {\n            return dist;\n        }\n    }\n    return dist;\n}\nfunction polygonToGeometryDistance(ctx, geometries) {\n    const tilePolygon = ctx.geometry();\n    if (tilePolygon.length === 0 || tilePolygon[0].length === 0) {\n        return NaN;\n    }\n    const polygons = classifyRings(tilePolygon, 0).map(polygon => {\n        return polygon.map(ring => {\n            return ring.map(p => getLngLatFromTileCoord([p.x, p.y], ctx.canonical));\n        });\n    });\n    const ruler = new CheapRuler(polygons[0][0][0][1]);\n    let dist = Infinity;\n    for (const geometry of geometries) {\n        for (const polygon of polygons) {\n            switch (geometry.type) {\n                case 'Point':\n                    dist = Math.min(dist, pointsToPolygonDistance([geometry.coordinates], false, polygon, ruler, dist));\n                    break;\n                case 'LineString':\n                    dist = Math.min(dist, pointsToPolygonDistance(geometry.coordinates, true, polygon, ruler, dist));\n                    break;\n                case 'Polygon':\n                    dist = Math.min(dist, polygonToPolygonDistance(polygon, geometry.coordinates, ruler, dist));\n                    break;\n            }\n            if (dist === 0.0) {\n                return dist;\n            }\n        }\n    }\n    return dist;\n}\nfunction toSimpleGeometry(geometry) {\n    if (geometry.type === 'MultiPolygon') {\n        return geometry.coordinates.map(polygon => {\n            return {\n                type: 'Polygon',\n                coordinates: polygon\n            };\n        });\n    }\n    if (geometry.type === 'MultiLineString') {\n        return geometry.coordinates.map(lineString => {\n            return {\n                type: 'LineString',\n                coordinates: lineString\n            };\n        });\n    }\n    if (geometry.type === 'MultiPoint') {\n        return geometry.coordinates.map(point => {\n            return {\n                type: 'Point',\n                coordinates: point\n            };\n        });\n    }\n    return [geometry];\n}\nclass Distance {\n    constructor(geojson, geometries) {\n        this.type = NumberType;\n        this.geojson = geojson;\n        this.geometries = geometries;\n    }\n    static parse(args, context) {\n        if (args.length !== 2)\n            return context.error(`'distance' expression requires exactly one argument, but found ${args.length - 1} instead.`);\n        if (isValue(args[1])) {\n            const geojson = args[1];\n            if (geojson.type === 'FeatureCollection') {\n                return new Distance(geojson, geojson.features.map(feature => toSimpleGeometry(feature.geometry)).flat());\n            }\n            else if (geojson.type === 'Feature') {\n                return new Distance(geojson, toSimpleGeometry(geojson.geometry));\n            }\n            else if ('type' in geojson && 'coordinates' in geojson) {\n                return new Distance(geojson, toSimpleGeometry(geojson));\n            }\n        }\n        return context.error('\\'distance\\' expression requires valid geojson object that contains polygon geometry type.');\n    }\n    evaluate(ctx) {\n        if (ctx.geometry() != null && ctx.canonicalID() != null) {\n            if (ctx.geometryType() === 'Point') {\n                return pointToGeometryDistance(ctx, this.geometries);\n            }\n            else if (ctx.geometryType() === 'LineString') {\n                return lineStringToGeometryDistance(ctx, this.geometries);\n            }\n            else if (ctx.geometryType() === 'Polygon') {\n                return polygonToGeometryDistance(ctx, this.geometries);\n            }\n        }\n        return NaN;\n    }\n    eachChild() { }\n    outputDefined() {\n        return true;\n    }\n}\n\nconst expressions$1 = {\n    // special forms\n    '==': Equals,\n    '!=': NotEquals,\n    '>': GreaterThan,\n    '<': LessThan,\n    '>=': GreaterThanOrEqual,\n    '<=': LessThanOrEqual,\n    'array': Assertion,\n    'at': At,\n    'boolean': Assertion,\n    'case': Case,\n    'coalesce': Coalesce,\n    'collator': CollatorExpression,\n    'format': FormatExpression,\n    'image': ImageExpression,\n    'in': In,\n    'index-of': IndexOf,\n    'interpolate': Interpolate,\n    'interpolate-hcl': Interpolate,\n    'interpolate-lab': Interpolate,\n    'length': Length,\n    'let': Let,\n    'literal': Literal,\n    'match': Match,\n    'number': Assertion,\n    'number-format': NumberFormat,\n    'object': Assertion,\n    'slice': Slice,\n    'step': Step,\n    'string': Assertion,\n    'to-boolean': Coercion,\n    'to-color': Coercion,\n    'to-number': Coercion,\n    'to-string': Coercion,\n    'var': Var,\n    'within': Within,\n    'distance': Distance\n};\n\nclass CompoundExpression {\n    constructor(name, type, evaluate, args) {\n        this.name = name;\n        this.type = type;\n        this._evaluate = evaluate;\n        this.args = args;\n    }\n    evaluate(ctx) {\n        return this._evaluate(ctx, this.args);\n    }\n    eachChild(fn) {\n        this.args.forEach(fn);\n    }\n    outputDefined() {\n        return false;\n    }\n    static parse(args, context) {\n        const op = args[0];\n        const definition = CompoundExpression.definitions[op];\n        if (!definition) {\n            return context.error(`Unknown expression \"${op}\". If you wanted a literal array, use [\"literal\", [...]].`, 0);\n        }\n        // Now check argument types against each signature\n        const type = Array.isArray(definition) ?\n            definition[0] : definition.type;\n        const availableOverloads = Array.isArray(definition) ?\n            [[definition[1], definition[2]]] :\n            definition.overloads;\n        const overloads = availableOverloads.filter(([signature]) => (!Array.isArray(signature) || // varags\n            signature.length === args.length - 1 // correct param count\n        ));\n        let signatureContext = null;\n        for (const [params, evaluate] of overloads) {\n            // Use a fresh context for each attempted signature so that, if\n            // we eventually succeed, we haven't polluted `context.errors`.\n            signatureContext = new ParsingContext(context.registry, isExpressionConstant, context.path, null, context.scope);\n            // First parse all the args, potentially coercing to the\n            // types expected by this overload.\n            const parsedArgs = [];\n            let argParseFailed = false;\n            for (let i = 1; i < args.length; i++) {\n                const arg = args[i];\n                const expectedType = Array.isArray(params) ?\n                    params[i - 1] :\n                    params.type;\n                const parsed = signatureContext.parse(arg, 1 + parsedArgs.length, expectedType);\n                if (!parsed) {\n                    argParseFailed = true;\n                    break;\n                }\n                parsedArgs.push(parsed);\n            }\n            if (argParseFailed) {\n                // Couldn't coerce args of this overload to expected type, move\n                // on to next one.\n                continue;\n            }\n            if (Array.isArray(params)) {\n                if (params.length !== parsedArgs.length) {\n                    signatureContext.error(`Expected ${params.length} arguments, but found ${parsedArgs.length} instead.`);\n                    continue;\n                }\n            }\n            for (let i = 0; i < parsedArgs.length; i++) {\n                const expected = Array.isArray(params) ? params[i] : params.type;\n                const arg = parsedArgs[i];\n                signatureContext.concat(i + 1).checkSubtype(expected, arg.type);\n            }\n            if (signatureContext.errors.length === 0) {\n                return new CompoundExpression(op, type, evaluate, parsedArgs);\n            }\n        }\n        if (overloads.length === 1) {\n            context.errors.push(...signatureContext.errors);\n        }\n        else {\n            const expected = overloads.length ? overloads : availableOverloads;\n            const signatures = expected\n                .map(([params]) => stringifySignature(params))\n                .join(' | ');\n            const actualTypes = [];\n            // For error message, re-parse arguments without trying to\n            // apply any coercions\n            for (let i = 1; i < args.length; i++) {\n                const parsed = context.parse(args[i], 1 + actualTypes.length);\n                if (!parsed)\n                    return null;\n                actualTypes.push(typeToString(parsed.type));\n            }\n            context.error(`Expected arguments of type ${signatures}, but found (${actualTypes.join(', ')}) instead.`);\n        }\n        return null;\n    }\n    static register(registry, definitions) {\n        CompoundExpression.definitions = definitions;\n        for (const name in definitions) {\n            registry[name] = CompoundExpression;\n        }\n    }\n}\nfunction rgba(ctx, [r, g, b, a]) {\n    r = r.evaluate(ctx);\n    g = g.evaluate(ctx);\n    b = b.evaluate(ctx);\n    const alpha = a ? a.evaluate(ctx) : 1;\n    const error = validateRGBA(r, g, b, alpha);\n    if (error)\n        throw new RuntimeError(error);\n    return new Color(r / 255, g / 255, b / 255, alpha, false);\n}\nfunction has(key, obj) {\n    return key in obj;\n}\nfunction get(key, obj) {\n    const v = obj[key];\n    return typeof v === 'undefined' ? null : v;\n}\nfunction binarySearch(v, a, i, j) {\n    while (i <= j) {\n        const m = (i + j) >> 1;\n        if (a[m] === v)\n            return true;\n        if (a[m] > v)\n            j = m - 1;\n        else\n            i = m + 1;\n    }\n    return false;\n}\nfunction varargs(type) {\n    return { type };\n}\nCompoundExpression.register(expressions$1, {\n    'error': [\n        ErrorType,\n        [StringType],\n        (ctx, [v]) => { throw new RuntimeError(v.evaluate(ctx)); }\n    ],\n    'typeof': [\n        StringType,\n        [ValueType],\n        (ctx, [v]) => typeToString(typeOf(v.evaluate(ctx)))\n    ],\n    'to-rgba': [\n        array(NumberType, 4),\n        [ColorType],\n        (ctx, [v]) => {\n            const [r, g, b, a] = v.evaluate(ctx).rgb;\n            return [r * 255, g * 255, b * 255, a];\n        },\n    ],\n    'rgb': [\n        ColorType,\n        [NumberType, NumberType, NumberType],\n        rgba\n    ],\n    'rgba': [\n        ColorType,\n        [NumberType, NumberType, NumberType, NumberType],\n        rgba\n    ],\n    'has': {\n        type: BooleanType,\n        overloads: [\n            [\n                [StringType],\n                (ctx, [key]) => has(key.evaluate(ctx), ctx.properties())\n            ], [\n                [StringType, ObjectType],\n                (ctx, [key, obj]) => has(key.evaluate(ctx), obj.evaluate(ctx))\n            ]\n        ]\n    },\n    'get': {\n        type: ValueType,\n        overloads: [\n            [\n                [StringType],\n                (ctx, [key]) => get(key.evaluate(ctx), ctx.properties())\n            ], [\n                [StringType, ObjectType],\n                (ctx, [key, obj]) => get(key.evaluate(ctx), obj.evaluate(ctx))\n            ]\n        ]\n    },\n    'feature-state': [\n        ValueType,\n        [StringType],\n        (ctx, [key]) => get(key.evaluate(ctx), ctx.featureState || {})\n    ],\n    'properties': [\n        ObjectType,\n        [],\n        (ctx) => ctx.properties()\n    ],\n    'geometry-type': [\n        StringType,\n        [],\n        (ctx) => ctx.geometryType()\n    ],\n    'id': [\n        ValueType,\n        [],\n        (ctx) => ctx.id()\n    ],\n    'zoom': [\n        NumberType,\n        [],\n        (ctx) => ctx.globals.zoom\n    ],\n    'heatmap-density': [\n        NumberType,\n        [],\n        (ctx) => ctx.globals.heatmapDensity || 0\n    ],\n    'line-progress': [\n        NumberType,\n        [],\n        (ctx) => ctx.globals.lineProgress || 0\n    ],\n    'accumulated': [\n        ValueType,\n        [],\n        (ctx) => ctx.globals.accumulated === undefined ? null : ctx.globals.accumulated\n    ],\n    '+': [\n        NumberType,\n        varargs(NumberType),\n        (ctx, args) => {\n            let result = 0;\n            for (const arg of args) {\n                result += arg.evaluate(ctx);\n            }\n            return result;\n        }\n    ],\n    '*': [\n        NumberType,\n        varargs(NumberType),\n        (ctx, args) => {\n            let result = 1;\n            for (const arg of args) {\n                result *= arg.evaluate(ctx);\n            }\n            return result;\n        }\n    ],\n    '-': {\n        type: NumberType,\n        overloads: [\n            [\n                [NumberType, NumberType],\n                (ctx, [a, b]) => a.evaluate(ctx) - b.evaluate(ctx)\n            ], [\n                [NumberType],\n                (ctx, [a]) => -a.evaluate(ctx)\n            ]\n        ]\n    },\n    '/': [\n        NumberType,\n        [NumberType, NumberType],\n        (ctx, [a, b]) => a.evaluate(ctx) / b.evaluate(ctx)\n    ],\n    '%': [\n        NumberType,\n        [NumberType, NumberType],\n        (ctx, [a, b]) => a.evaluate(ctx) % b.evaluate(ctx)\n    ],\n    'ln2': [\n        NumberType,\n        [],\n        () => Math.LN2\n    ],\n    'pi': [\n        NumberType,\n        [],\n        () => Math.PI\n    ],\n    'e': [\n        NumberType,\n        [],\n        () => Math.E\n    ],\n    '^': [\n        NumberType,\n        [NumberType, NumberType],\n        (ctx, [b, e]) => Math.pow(b.evaluate(ctx), e.evaluate(ctx))\n    ],\n    'sqrt': [\n        NumberType,\n        [NumberType],\n        (ctx, [x]) => Math.sqrt(x.evaluate(ctx))\n    ],\n    'log10': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.log(n.evaluate(ctx)) / Math.LN10\n    ],\n    'ln': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.log(n.evaluate(ctx))\n    ],\n    'log2': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.log(n.evaluate(ctx)) / Math.LN2\n    ],\n    'sin': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.sin(n.evaluate(ctx))\n    ],\n    'cos': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.cos(n.evaluate(ctx))\n    ],\n    'tan': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.tan(n.evaluate(ctx))\n    ],\n    'asin': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.asin(n.evaluate(ctx))\n    ],\n    'acos': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.acos(n.evaluate(ctx))\n    ],\n    'atan': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.atan(n.evaluate(ctx))\n    ],\n    'min': [\n        NumberType,\n        varargs(NumberType),\n        (ctx, args) => Math.min(...args.map(arg => arg.evaluate(ctx)))\n    ],\n    'max': [\n        NumberType,\n        varargs(NumberType),\n        (ctx, args) => Math.max(...args.map(arg => arg.evaluate(ctx)))\n    ],\n    'abs': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.abs(n.evaluate(ctx))\n    ],\n    'round': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => {\n            const v = n.evaluate(ctx);\n            // Javascript's Math.round() rounds towards +Infinity for halfway\n            // values, even when they're negative. It's more common to round\n            // away from 0 (e.g., this is what python and C++ do)\n            return v < 0 ? -Math.round(-v) : Math.round(v);\n        }\n    ],\n    'floor': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.floor(n.evaluate(ctx))\n    ],\n    'ceil': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.ceil(n.evaluate(ctx))\n    ],\n    'filter-==': [\n        BooleanType,\n        [StringType, ValueType],\n        (ctx, [k, v]) => ctx.properties()[k.value] === v.value\n    ],\n    'filter-id-==': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => ctx.id() === v.value\n    ],\n    'filter-type-==': [\n        BooleanType,\n        [StringType],\n        (ctx, [v]) => ctx.geometryType() === v.value\n    ],\n    'filter-<': [\n        BooleanType,\n        [StringType, ValueType],\n        (ctx, [k, v]) => {\n            const a = ctx.properties()[k.value];\n            const b = v.value;\n            return typeof a === typeof b && a < b;\n        }\n    ],\n    'filter-id-<': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => {\n            const a = ctx.id();\n            const b = v.value;\n            return typeof a === typeof b && a < b;\n        }\n    ],\n    'filter->': [\n        BooleanType,\n        [StringType, ValueType],\n        (ctx, [k, v]) => {\n            const a = ctx.properties()[k.value];\n            const b = v.value;\n            return typeof a === typeof b && a > b;\n        }\n    ],\n    'filter-id->': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => {\n            const a = ctx.id();\n            const b = v.value;\n            return typeof a === typeof b && a > b;\n        }\n    ],\n    'filter-<=': [\n        BooleanType,\n        [StringType, ValueType],\n        (ctx, [k, v]) => {\n            const a = ctx.properties()[k.value];\n            const b = v.value;\n            return typeof a === typeof b && a <= b;\n        }\n    ],\n    'filter-id-<=': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => {\n            const a = ctx.id();\n            const b = v.value;\n            return typeof a === typeof b && a <= b;\n        }\n    ],\n    'filter->=': [\n        BooleanType,\n        [StringType, ValueType],\n        (ctx, [k, v]) => {\n            const a = ctx.properties()[k.value];\n            const b = v.value;\n            return typeof a === typeof b && a >= b;\n        }\n    ],\n    'filter-id->=': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => {\n            const a = ctx.id();\n            const b = v.value;\n            return typeof a === typeof b && a >= b;\n        }\n    ],\n    'filter-has': [\n        BooleanType,\n        [ValueType],\n        (ctx, [k]) => k.value in ctx.properties()\n    ],\n    'filter-has-id': [\n        BooleanType,\n        [],\n        (ctx) => (ctx.id() !== null && ctx.id() !== undefined)\n    ],\n    'filter-type-in': [\n        BooleanType,\n        [array(StringType)],\n        (ctx, [v]) => v.value.indexOf(ctx.geometryType()) >= 0\n    ],\n    'filter-id-in': [\n        BooleanType,\n        [array(ValueType)],\n        (ctx, [v]) => v.value.indexOf(ctx.id()) >= 0\n    ],\n    'filter-in-small': [\n        BooleanType,\n        [StringType, array(ValueType)],\n        // assumes v is an array literal\n        (ctx, [k, v]) => v.value.indexOf(ctx.properties()[k.value]) >= 0\n    ],\n    'filter-in-large': [\n        BooleanType,\n        [StringType, array(ValueType)],\n        // assumes v is a array literal with values sorted in ascending order and of a single type\n        (ctx, [k, v]) => binarySearch(ctx.properties()[k.value], v.value, 0, v.value.length - 1)\n    ],\n    'all': {\n        type: BooleanType,\n        overloads: [\n            [\n                [BooleanType, BooleanType],\n                (ctx, [a, b]) => a.evaluate(ctx) && b.evaluate(ctx)\n            ],\n            [\n                varargs(BooleanType),\n                (ctx, args) => {\n                    for (const arg of args) {\n                        if (!arg.evaluate(ctx))\n                            return false;\n                    }\n                    return true;\n                }\n            ]\n        ]\n    },\n    'any': {\n        type: BooleanType,\n        overloads: [\n            [\n                [BooleanType, BooleanType],\n                (ctx, [a, b]) => a.evaluate(ctx) || b.evaluate(ctx)\n            ],\n            [\n                varargs(BooleanType),\n                (ctx, args) => {\n                    for (const arg of args) {\n                        if (arg.evaluate(ctx))\n                            return true;\n                    }\n                    return false;\n                }\n            ]\n        ]\n    },\n    '!': [\n        BooleanType,\n        [BooleanType],\n        (ctx, [b]) => !b.evaluate(ctx)\n    ],\n    'is-supported-script': [\n        BooleanType,\n        [StringType],\n        // At parse time this will always return true, so we need to exclude this expression with isGlobalPropertyConstant\n        (ctx, [s]) => {\n            const isSupportedScript = ctx.globals && ctx.globals.isSupportedScript;\n            if (isSupportedScript) {\n                return isSupportedScript(s.evaluate(ctx));\n            }\n            return true;\n        }\n    ],\n    'upcase': [\n        StringType,\n        [StringType],\n        (ctx, [s]) => s.evaluate(ctx).toUpperCase()\n    ],\n    'downcase': [\n        StringType,\n        [StringType],\n        (ctx, [s]) => s.evaluate(ctx).toLowerCase()\n    ],\n    'concat': [\n        StringType,\n        varargs(ValueType),\n        (ctx, args) => args.map(arg => valueToString(arg.evaluate(ctx))).join('')\n    ],\n    'resolved-locale': [\n        StringType,\n        [CollatorType],\n        (ctx, [collator]) => collator.evaluate(ctx).resolvedLocale()\n    ]\n});\nfunction stringifySignature(signature) {\n    if (Array.isArray(signature)) {\n        return `(${signature.map(typeToString).join(', ')})`;\n    }\n    else {\n        return `(${typeToString(signature.type)}...)`;\n    }\n}\nfunction isExpressionConstant(expression) {\n    if (expression instanceof Var) {\n        return isExpressionConstant(expression.boundExpression);\n    }\n    else if (expression instanceof CompoundExpression && expression.name === 'error') {\n        return false;\n    }\n    else if (expression instanceof CollatorExpression) {\n        // Although the results of a Collator expression with fixed arguments\n        // generally shouldn't change between executions, we can't serialize them\n        // as constant expressions because results change based on environment.\n        return false;\n    }\n    else if (expression instanceof Within) {\n        return false;\n    }\n    else if (expression instanceof Distance) {\n        return false;\n    }\n    const isTypeAnnotation = expression instanceof Coercion ||\n        expression instanceof Assertion;\n    let childrenConstant = true;\n    expression.eachChild(child => {\n        // We can _almost_ assume that if `expressions` children are constant,\n        // they would already have been evaluated to Literal values when they\n        // were parsed.  Type annotations are the exception, because they might\n        // have been inferred and added after a child was parsed.\n        // So we recurse into isConstant() for the children of type annotations,\n        // but otherwise simply check whether they are Literals.\n        if (isTypeAnnotation) {\n            childrenConstant = childrenConstant && isExpressionConstant(child);\n        }\n        else {\n            childrenConstant = childrenConstant && child instanceof Literal;\n        }\n    });\n    if (!childrenConstant) {\n        return false;\n    }\n    return isFeatureConstant(expression) &&\n        isGlobalPropertyConstant(expression, ['zoom', 'heatmap-density', 'line-progress', 'accumulated', 'is-supported-script']);\n}\nfunction isFeatureConstant(e) {\n    if (e instanceof CompoundExpression) {\n        if (e.name === 'get' && e.args.length === 1) {\n            return false;\n        }\n        else if (e.name === 'feature-state') {\n            return false;\n        }\n        else if (e.name === 'has' && e.args.length === 1) {\n            return false;\n        }\n        else if (e.name === 'properties' ||\n            e.name === 'geometry-type' ||\n            e.name === 'id') {\n            return false;\n        }\n        else if (/^filter-/.test(e.name)) {\n            return false;\n        }\n    }\n    if (e instanceof Within) {\n        return false;\n    }\n    if (e instanceof Distance) {\n        return false;\n    }\n    let result = true;\n    e.eachChild(arg => {\n        if (result && !isFeatureConstant(arg)) {\n            result = false;\n        }\n    });\n    return result;\n}\nfunction isStateConstant(e) {\n    if (e instanceof CompoundExpression) {\n        if (e.name === 'feature-state') {\n            return false;\n        }\n    }\n    let result = true;\n    e.eachChild(arg => {\n        if (result && !isStateConstant(arg)) {\n            result = false;\n        }\n    });\n    return result;\n}\nfunction isGlobalPropertyConstant(e, properties) {\n    if (e instanceof CompoundExpression && properties.indexOf(e.name) >= 0) {\n        return false;\n    }\n    let result = true;\n    e.eachChild((arg) => {\n        if (result && !isGlobalPropertyConstant(arg, properties)) {\n            result = false;\n        }\n    });\n    return result;\n}\n\nfunction success(value) {\n    return { result: 'success', value };\n}\nfunction error(value) {\n    return { result: 'error', value };\n}\n\nfunction supportsPropertyExpression(spec) {\n    return spec['property-type'] === 'data-driven' || spec['property-type'] === 'cross-faded-data-driven';\n}\nfunction supportsZoomExpression(spec) {\n    return !!spec.expression && spec.expression.parameters.indexOf('zoom') > -1;\n}\nfunction supportsInterpolation(spec) {\n    return !!spec.expression && spec.expression.interpolated;\n}\n\nfunction getType(val) {\n    if (val instanceof Number) {\n        return 'number';\n    }\n    else if (val instanceof String) {\n        return 'string';\n    }\n    else if (val instanceof Boolean) {\n        return 'boolean';\n    }\n    else if (Array.isArray(val)) {\n        return 'array';\n    }\n    else if (val === null) {\n        return 'null';\n    }\n    else {\n        return typeof val;\n    }\n}\n\nfunction isFunction$1(value) {\n    return typeof value === 'object' && value !== null && !Array.isArray(value);\n}\nfunction identityFunction(x) {\n    return x;\n}\nfunction createFunction(parameters, propertySpec) {\n    const isColor = propertySpec.type === 'color';\n    const zoomAndFeatureDependent = parameters.stops && typeof parameters.stops[0][0] === 'object';\n    const featureDependent = zoomAndFeatureDependent || parameters.property !== undefined;\n    const zoomDependent = zoomAndFeatureDependent || !featureDependent;\n    const type = parameters.type || (supportsInterpolation(propertySpec) ? 'exponential' : 'interval');\n    if (isColor || propertySpec.type === 'padding') {\n        const parseFn = isColor ? Color.parse : Padding.parse;\n        parameters = extendBy({}, parameters);\n        if (parameters.stops) {\n            parameters.stops = parameters.stops.map((stop) => {\n                return [stop[0], parseFn(stop[1])];\n            });\n        }\n        if (parameters.default) {\n            parameters.default = parseFn(parameters.default);\n        }\n        else {\n            parameters.default = parseFn(propertySpec.default);\n        }\n    }\n    if (parameters.colorSpace && !isSupportedInterpolationColorSpace(parameters.colorSpace)) {\n        throw new Error(`Unknown color space: \"${parameters.colorSpace}\"`);\n    }\n    let innerFun;\n    let hashedStops;\n    let categoricalKeyType;\n    if (type === 'exponential') {\n        innerFun = evaluateExponentialFunction;\n    }\n    else if (type === 'interval') {\n        innerFun = evaluateIntervalFunction;\n    }\n    else if (type === 'categorical') {\n        innerFun = evaluateCategoricalFunction;\n        // For categorical functions, generate an Object as a hashmap of the stops for fast searching\n        hashedStops = Object.create(null);\n        for (const stop of parameters.stops) {\n            hashedStops[stop[0]] = stop[1];\n        }\n        // Infer key type based on first stop key-- used to encforce strict type checking later\n        categoricalKeyType = typeof parameters.stops[0][0];\n    }\n    else if (type === 'identity') {\n        innerFun = evaluateIdentityFunction;\n    }\n    else {\n        throw new Error(`Unknown function type \"${type}\"`);\n    }\n    if (zoomAndFeatureDependent) {\n        const featureFunctions = {};\n        const zoomStops = [];\n        for (let s = 0; s < parameters.stops.length; s++) {\n            const stop = parameters.stops[s];\n            const zoom = stop[0].zoom;\n            if (featureFunctions[zoom] === undefined) {\n                featureFunctions[zoom] = {\n                    zoom,\n                    type: parameters.type,\n                    property: parameters.property,\n                    default: parameters.default,\n                    stops: []\n                };\n                zoomStops.push(zoom);\n            }\n            featureFunctions[zoom].stops.push([stop[0].value, stop[1]]);\n        }\n        const featureFunctionStops = [];\n        for (const z of zoomStops) {\n            featureFunctionStops.push([featureFunctions[z].zoom, createFunction(featureFunctions[z], propertySpec)]);\n        }\n        const interpolationType = { name: 'linear' };\n        return {\n            kind: 'composite',\n            interpolationType,\n            interpolationFactor: Interpolate.interpolationFactor.bind(undefined, interpolationType),\n            zoomStops: featureFunctionStops.map(s => s[0]),\n            evaluate({ zoom }, properties) {\n                return evaluateExponentialFunction({\n                    stops: featureFunctionStops,\n                    base: parameters.base\n                }, propertySpec, zoom).evaluate(zoom, properties);\n            }\n        };\n    }\n    else if (zoomDependent) {\n        const interpolationType = type === 'exponential' ?\n            { name: 'exponential', base: parameters.base !== undefined ? parameters.base : 1 } : null;\n        return {\n            kind: 'camera',\n            interpolationType,\n            interpolationFactor: Interpolate.interpolationFactor.bind(undefined, interpolationType),\n            zoomStops: parameters.stops.map(s => s[0]),\n            evaluate: ({ zoom }) => innerFun(parameters, propertySpec, zoom, hashedStops, categoricalKeyType)\n        };\n    }\n    else {\n        return {\n            kind: 'source',\n            evaluate(_, feature) {\n                const value = feature && feature.properties ? feature.properties[parameters.property] : undefined;\n                if (value === undefined) {\n                    return coalesce$1(parameters.default, propertySpec.default);\n                }\n                return innerFun(parameters, propertySpec, value, hashedStops, categoricalKeyType);\n            }\n        };\n    }\n}\nfunction coalesce$1(a, b, c) {\n    if (a !== undefined)\n        return a;\n    if (b !== undefined)\n        return b;\n    if (c !== undefined)\n        return c;\n}\nfunction evaluateCategoricalFunction(parameters, propertySpec, input, hashedStops, keyType) {\n    const evaluated = typeof input === keyType ? hashedStops[input] : undefined; // Enforce strict typing on input\n    return coalesce$1(evaluated, parameters.default, propertySpec.default);\n}\nfunction evaluateIntervalFunction(parameters, propertySpec, input) {\n    // Edge cases\n    if (getType(input) !== 'number')\n        return coalesce$1(parameters.default, propertySpec.default);\n    const n = parameters.stops.length;\n    if (n === 1)\n        return parameters.stops[0][1];\n    if (input <= parameters.stops[0][0])\n        return parameters.stops[0][1];\n    if (input >= parameters.stops[n - 1][0])\n        return parameters.stops[n - 1][1];\n    const index = findStopLessThanOrEqualTo(parameters.stops.map((stop) => stop[0]), input);\n    return parameters.stops[index][1];\n}\nfunction evaluateExponentialFunction(parameters, propertySpec, input) {\n    const base = parameters.base !== undefined ? parameters.base : 1;\n    // Edge cases\n    if (getType(input) !== 'number')\n        return coalesce$1(parameters.default, propertySpec.default);\n    const n = parameters.stops.length;\n    if (n === 1)\n        return parameters.stops[0][1];\n    if (input <= parameters.stops[0][0])\n        return parameters.stops[0][1];\n    if (input >= parameters.stops[n - 1][0])\n        return parameters.stops[n - 1][1];\n    const index = findStopLessThanOrEqualTo(parameters.stops.map((stop) => stop[0]), input);\n    const t = interpolationFactor(input, base, parameters.stops[index][0], parameters.stops[index + 1][0]);\n    const outputLower = parameters.stops[index][1];\n    const outputUpper = parameters.stops[index + 1][1];\n    const interp = interpolateFactory[propertySpec.type] || identityFunction;\n    if (typeof outputLower.evaluate === 'function') {\n        return {\n            evaluate(...args) {\n                const evaluatedLower = outputLower.evaluate.apply(undefined, args);\n                const evaluatedUpper = outputUpper.evaluate.apply(undefined, args);\n                // Special case for fill-outline-color, which has no spec default.\n                if (evaluatedLower === undefined || evaluatedUpper === undefined) {\n                    return undefined;\n                }\n                return interp(evaluatedLower, evaluatedUpper, t, parameters.colorSpace);\n            }\n        };\n    }\n    return interp(outputLower, outputUpper, t, parameters.colorSpace);\n}\nfunction evaluateIdentityFunction(parameters, propertySpec, input) {\n    switch (propertySpec.type) {\n        case 'color':\n            input = Color.parse(input);\n            break;\n        case 'formatted':\n            input = Formatted.fromString(input.toString());\n            break;\n        case 'resolvedImage':\n            input = ResolvedImage.fromString(input.toString());\n            break;\n        case 'padding':\n            input = Padding.parse(input);\n            break;\n        default:\n            if (getType(input) !== propertySpec.type && (propertySpec.type !== 'enum' || !propertySpec.values[input])) {\n                input = undefined;\n            }\n    }\n    return coalesce$1(input, parameters.default, propertySpec.default);\n}\n/**\n * Returns a ratio that can be used to interpolate between exponential function\n * stops.\n *\n * How it works:\n * Two consecutive stop values define a (scaled and shifted) exponential\n * function `f(x) = a * base^x + b`, where `base` is the user-specified base,\n * and `a` and `b` are constants affording sufficient degrees of freedom to fit\n * the function to the given stops.\n *\n * Here's a bit of algebra that lets us compute `f(x)` directly from the stop\n * values without explicitly solving for `a` and `b`:\n *\n * First stop value: `f(x0) = y0 = a * base^x0 + b`\n * Second stop value: `f(x1) = y1 = a * base^x1 + b`\n * => `y1 - y0 = a(base^x1 - base^x0)`\n * => `a = (y1 - y0)/(base^x1 - base^x0)`\n *\n * Desired value: `f(x) = y = a * base^x + b`\n * => `f(x) = y0 + a * (base^x - base^x0)`\n *\n * From the above, we can replace the `a` in `a * (base^x - base^x0)` and do a\n * little algebra:\n * ```\n * a * (base^x - base^x0) = (y1 - y0)/(base^x1 - base^x0) * (base^x - base^x0)\n *                     = (y1 - y0) * (base^x - base^x0) / (base^x1 - base^x0)\n * ```\n *\n * If we let `(base^x - base^x0) / (base^x1 base^x0)`, then we have\n * `f(x) = y0 + (y1 - y0) * ratio`.  In other words, `ratio` may be treated as\n * an interpolation factor between the two stops' output values.\n *\n * (Note: a slightly different form for `ratio`,\n * `(base^(x-x0) - 1) / (base^(x1-x0) - 1) `, is equivalent, but requires fewer\n * expensive `Math.pow()` operations.)\n *\n * @private\n */\nfunction interpolationFactor(input, base, lowerValue, upperValue) {\n    const difference = upperValue - lowerValue;\n    const progress = input - lowerValue;\n    if (difference === 0) {\n        return 0;\n    }\n    else if (base === 1) {\n        return progress / difference;\n    }\n    else {\n        return (Math.pow(base, progress) - 1) / (Math.pow(base, difference) - 1);\n    }\n}\n\nclass StyleExpression {\n    constructor(expression, propertySpec) {\n        this.expression = expression;\n        this._warningHistory = {};\n        this._evaluator = new EvaluationContext();\n        this._defaultValue = propertySpec ? getDefaultValue(propertySpec) : null;\n        this._enumValues = propertySpec && propertySpec.type === 'enum' ? propertySpec.values : null;\n    }\n    evaluateWithoutErrorHandling(globals, feature, featureState, canonical, availableImages, formattedSection) {\n        this._evaluator.globals = globals;\n        this._evaluator.feature = feature;\n        this._evaluator.featureState = featureState;\n        this._evaluator.canonical = canonical;\n        this._evaluator.availableImages = availableImages || null;\n        this._evaluator.formattedSection = formattedSection;\n        return this.expression.evaluate(this._evaluator);\n    }\n    evaluate(globals, feature, featureState, canonical, availableImages, formattedSection) {\n        this._evaluator.globals = globals;\n        this._evaluator.feature = feature || null;\n        this._evaluator.featureState = featureState || null;\n        this._evaluator.canonical = canonical;\n        this._evaluator.availableImages = availableImages || null;\n        this._evaluator.formattedSection = formattedSection || null;\n        try {\n            const val = this.expression.evaluate(this._evaluator);\n            if (val === null || val === undefined || (typeof val === 'number' && val !== val)) {\n                return this._defaultValue;\n            }\n            if (this._enumValues && !(val in this._enumValues)) {\n                throw new RuntimeError(`Expected value to be one of ${Object.keys(this._enumValues).map(v => JSON.stringify(v)).join(', ')}, but found ${JSON.stringify(val)} instead.`);\n            }\n            return val;\n        }\n        catch (e) {\n            if (!this._warningHistory[e.message]) {\n                this._warningHistory[e.message] = true;\n                if (typeof console !== 'undefined') {\n                    console.warn(e.message);\n                }\n            }\n            return this._defaultValue;\n        }\n    }\n}\nfunction isExpression(expression) {\n    return Array.isArray(expression) && expression.length > 0 &&\n        typeof expression[0] === 'string' && expression[0] in expressions$1;\n}\n/**\n * Parse and typecheck the given style spec JSON expression.  If\n * options.defaultValue is provided, then the resulting StyleExpression's\n * `evaluate()` method will handle errors by logging a warning (once per\n * message) and returning the default value.  Otherwise, it will throw\n * evaluation errors.\n *\n * @private\n */\nfunction createExpression(expression, propertySpec) {\n    const parser = new ParsingContext(expressions$1, isExpressionConstant, [], propertySpec ? getExpectedType(propertySpec) : undefined);\n    // For string-valued properties, coerce to string at the top level rather than asserting.\n    const parsed = parser.parse(expression, undefined, undefined, undefined, propertySpec && propertySpec.type === 'string' ? { typeAnnotation: 'coerce' } : undefined);\n    if (!parsed) {\n        return error(parser.errors);\n    }\n    return success(new StyleExpression(parsed, propertySpec));\n}\nclass ZoomConstantExpression {\n    constructor(kind, expression) {\n        this.kind = kind;\n        this._styleExpression = expression;\n        this.isStateDependent = kind !== 'constant' && !isStateConstant(expression.expression);\n    }\n    evaluateWithoutErrorHandling(globals, feature, featureState, canonical, availableImages, formattedSection) {\n        return this._styleExpression.evaluateWithoutErrorHandling(globals, feature, featureState, canonical, availableImages, formattedSection);\n    }\n    evaluate(globals, feature, featureState, canonical, availableImages, formattedSection) {\n        return this._styleExpression.evaluate(globals, feature, featureState, canonical, availableImages, formattedSection);\n    }\n}\nclass ZoomDependentExpression {\n    constructor(kind, expression, zoomStops, interpolationType) {\n        this.kind = kind;\n        this.zoomStops = zoomStops;\n        this._styleExpression = expression;\n        this.isStateDependent = kind !== 'camera' && !isStateConstant(expression.expression);\n        this.interpolationType = interpolationType;\n    }\n    evaluateWithoutErrorHandling(globals, feature, featureState, canonical, availableImages, formattedSection) {\n        return this._styleExpression.evaluateWithoutErrorHandling(globals, feature, featureState, canonical, availableImages, formattedSection);\n    }\n    evaluate(globals, feature, featureState, canonical, availableImages, formattedSection) {\n        return this._styleExpression.evaluate(globals, feature, featureState, canonical, availableImages, formattedSection);\n    }\n    interpolationFactor(input, lower, upper) {\n        if (this.interpolationType) {\n            return Interpolate.interpolationFactor(this.interpolationType, input, lower, upper);\n        }\n        else {\n            return 0;\n        }\n    }\n}\nfunction isZoomExpression(expression) {\n    return expression._styleExpression !== undefined;\n}\nfunction createPropertyExpression(expressionInput, propertySpec) {\n    const expression = createExpression(expressionInput, propertySpec);\n    if (expression.result === 'error') {\n        return expression;\n    }\n    const parsed = expression.value.expression;\n    const isFeatureConstantResult = isFeatureConstant(parsed);\n    if (!isFeatureConstantResult && !supportsPropertyExpression(propertySpec)) {\n        return error([new ExpressionParsingError('', 'data expressions not supported')]);\n    }\n    const isZoomConstant = isGlobalPropertyConstant(parsed, ['zoom']);\n    if (!isZoomConstant && !supportsZoomExpression(propertySpec)) {\n        return error([new ExpressionParsingError('', 'zoom expressions not supported')]);\n    }\n    const zoomCurve = findZoomCurve(parsed);\n    if (!zoomCurve && !isZoomConstant) {\n        return error([new ExpressionParsingError('', '\"zoom\" expression may only be used as input to a top-level \"step\" or \"interpolate\" expression.')]);\n    }\n    else if (zoomCurve instanceof ExpressionParsingError) {\n        return error([zoomCurve]);\n    }\n    else if (zoomCurve instanceof Interpolate && !supportsInterpolation(propertySpec)) {\n        return error([new ExpressionParsingError('', '\"interpolate\" expressions cannot be used with this property')]);\n    }\n    if (!zoomCurve) {\n        return success(isFeatureConstantResult ?\n            new ZoomConstantExpression('constant', expression.value) :\n            new ZoomConstantExpression('source', expression.value));\n    }\n    const interpolationType = zoomCurve instanceof Interpolate ? zoomCurve.interpolation : undefined;\n    return success(isFeatureConstantResult ?\n        new ZoomDependentExpression('camera', expression.value, zoomCurve.labels, interpolationType) :\n        new ZoomDependentExpression('composite', expression.value, zoomCurve.labels, interpolationType));\n}\n// serialization wrapper for old-style stop functions normalized to the\n// expression interface\nclass StylePropertyFunction {\n    constructor(parameters, specification) {\n        this._parameters = parameters;\n        this._specification = specification;\n        extendBy(this, createFunction(this._parameters, this._specification));\n    }\n    static deserialize(serialized) {\n        return new StylePropertyFunction(serialized._parameters, serialized._specification);\n    }\n    static serialize(input) {\n        return {\n            _parameters: input._parameters,\n            _specification: input._specification\n        };\n    }\n}\nfunction normalizePropertyExpression(value, specification) {\n    if (isFunction$1(value)) {\n        return new StylePropertyFunction(value, specification);\n    }\n    else if (isExpression(value)) {\n        const expression = createPropertyExpression(value, specification);\n        if (expression.result === 'error') {\n            // this should have been caught in validation\n            throw new Error(expression.value.map(err => `${err.key}: ${err.message}`).join(', '));\n        }\n        return expression.value;\n    }\n    else {\n        let constant = value;\n        if (specification.type === 'color' && typeof value === 'string') {\n            constant = Color.parse(value);\n        }\n        else if (specification.type === 'padding' && (typeof value === 'number' || Array.isArray(value))) {\n            constant = Padding.parse(value);\n        }\n        else if (specification.type === 'variableAnchorOffsetCollection' && Array.isArray(value)) {\n            constant = VariableAnchorOffsetCollection.parse(value);\n        }\n        else if (specification.type === 'projectionDefinition' && typeof value === 'string') {\n            constant = ProjectionDefinition.parse(value);\n        }\n        return {\n            kind: 'constant',\n            evaluate: () => constant\n        };\n    }\n}\n// Zoom-dependent expressions may only use [\"zoom\"] as the input to a top-level \"step\" or \"interpolate\"\n// expression (collectively referred to as a \"curve\"). The curve may be wrapped in one or more \"let\" or\n// \"coalesce\" expressions.\nfunction findZoomCurve(expression) {\n    let result = null;\n    if (expression instanceof Let) {\n        result = findZoomCurve(expression.result);\n    }\n    else if (expression instanceof Coalesce) {\n        for (const arg of expression.args) {\n            result = findZoomCurve(arg);\n            if (result) {\n                break;\n            }\n        }\n    }\n    else if ((expression instanceof Step || expression instanceof Interpolate) &&\n        expression.input instanceof CompoundExpression &&\n        expression.input.name === 'zoom') {\n        result = expression;\n    }\n    if (result instanceof ExpressionParsingError) {\n        return result;\n    }\n    expression.eachChild((child) => {\n        const childResult = findZoomCurve(child);\n        if (childResult instanceof ExpressionParsingError) {\n            result = childResult;\n        }\n        else if (!result && childResult) {\n            result = new ExpressionParsingError('', '\"zoom\" expression may only be used as input to a top-level \"step\" or \"interpolate\" expression.');\n        }\n        else if (result && childResult && result !== childResult) {\n            result = new ExpressionParsingError('', 'Only one zoom-based \"step\" or \"interpolate\" subexpression may be used in an expression.');\n        }\n    });\n    return result;\n}\nfunction getExpectedType(spec) {\n    const types = {\n        color: ColorType,\n        string: StringType,\n        number: NumberType,\n        enum: StringType,\n        boolean: BooleanType,\n        formatted: FormattedType,\n        padding: PaddingType,\n        projectionDefinition: ProjectionDefinitionType,\n        resolvedImage: ResolvedImageType,\n        variableAnchorOffsetCollection: VariableAnchorOffsetCollectionType\n    };\n    if (spec.type === 'array') {\n        return array(types[spec.value] || ValueType, spec.length);\n    }\n    return types[spec.type];\n}\nfunction getDefaultValue(spec) {\n    if (spec.type === 'color' && isFunction$1(spec.default)) {\n        // Special case for heatmap-color: it uses the 'default:' to define a\n        // default color ramp, but createExpression expects a simple value to fall\n        // back to in case of runtime errors\n        return new Color(0, 0, 0, 0);\n    }\n    else if (spec.type === 'color') {\n        return Color.parse(spec.default) || null;\n    }\n    else if (spec.type === 'padding') {\n        return Padding.parse(spec.default) || null;\n    }\n    else if (spec.type === 'variableAnchorOffsetCollection') {\n        return VariableAnchorOffsetCollection.parse(spec.default) || null;\n    }\n    else if (spec.type === 'projectionDefinition') {\n        return ProjectionDefinition.parse(spec.default) || null;\n    }\n    else if (spec.default === undefined) {\n        return null;\n    }\n    else {\n        return spec.default;\n    }\n}\n\nfunction isExpressionFilter(filter) {\n    if (filter === true || filter === false) {\n        return true;\n    }\n    if (!Array.isArray(filter) || filter.length === 0) {\n        return false;\n    }\n    switch (filter[0]) {\n        case 'has':\n            return filter.length >= 2 && filter[1] !== '$id' && filter[1] !== '$type';\n        case 'in':\n            return filter.length >= 3 && (typeof filter[1] !== 'string' || Array.isArray(filter[2]));\n        case '!in':\n        case '!has':\n        case 'none':\n            return false;\n        case '==':\n        case '!=':\n        case '>':\n        case '>=':\n        case '<':\n        case '<=':\n            return filter.length !== 3 || (Array.isArray(filter[1]) || Array.isArray(filter[2]));\n        case 'any':\n        case 'all':\n            for (const f of filter.slice(1)) {\n                if (!isExpressionFilter(f) && typeof f !== 'boolean') {\n                    return false;\n                }\n            }\n            return true;\n        default:\n            return true;\n    }\n}\nconst filterSpec = {\n    'type': 'boolean',\n    'default': false,\n    'transition': false,\n    'property-type': 'data-driven',\n    'expression': {\n        'interpolated': false,\n        'parameters': ['zoom', 'feature']\n    }\n};\n/**\n * Given a filter expressed as nested arrays, return a new function\n * that evaluates whether a given feature (with a .properties or .tags property)\n * passes its test.\n *\n * @private\n * @param {Array} filter MapLibre filter\n * @returns {Function} filter-evaluating function\n */\nfunction featureFilter(filter) {\n    if (filter === null || filter === undefined) {\n        return { filter: () => true, needGeometry: false };\n    }\n    if (!isExpressionFilter(filter)) {\n        filter = convertFilter$1(filter);\n    }\n    const compiled = createExpression(filter, filterSpec);\n    if (compiled.result === 'error') {\n        throw new Error(compiled.value.map(err => `${err.key}: ${err.message}`).join(', '));\n    }\n    else {\n        const needGeometry = geometryNeeded(filter);\n        return { filter: (globalProperties, feature, canonical) => compiled.value.evaluate(globalProperties, feature, {}, canonical),\n            needGeometry };\n    }\n}\n// Comparison function to sort numbers and strings\nfunction compare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\nfunction geometryNeeded(filter) {\n    if (!Array.isArray(filter))\n        return false;\n    if (filter[0] === 'within' || filter[0] === 'distance')\n        return true;\n    for (let index = 1; index < filter.length; index++) {\n        if (geometryNeeded(filter[index]))\n            return true;\n    }\n    return false;\n}\nfunction convertFilter$1(filter) {\n    if (!filter)\n        return true;\n    const op = filter[0];\n    if (filter.length <= 1)\n        return (op !== 'any');\n    const converted = op === '==' ? convertComparisonOp$1(filter[1], filter[2], '==') :\n        op === '!=' ? convertNegation(convertComparisonOp$1(filter[1], filter[2], '==')) :\n            op === '<' ||\n                op === '>' ||\n                op === '<=' ||\n                op === '>=' ? convertComparisonOp$1(filter[1], filter[2], op) :\n                op === 'any' ? convertDisjunctionOp(filter.slice(1)) :\n                    op === 'all' ? ['all'].concat(filter.slice(1).map(convertFilter$1)) :\n                        op === 'none' ? ['all'].concat(filter.slice(1).map(convertFilter$1).map(convertNegation)) :\n                            op === 'in' ? convertInOp$1(filter[1], filter.slice(2)) :\n                                op === '!in' ? convertNegation(convertInOp$1(filter[1], filter.slice(2))) :\n                                    op === 'has' ? convertHasOp$1(filter[1]) :\n                                        op === '!has' ? convertNegation(convertHasOp$1(filter[1])) :\n                                            true;\n    return converted;\n}\nfunction convertComparisonOp$1(property, value, op) {\n    switch (property) {\n        case '$type':\n            return [`filter-type-${op}`, value];\n        case '$id':\n            return [`filter-id-${op}`, value];\n        default:\n            return [`filter-${op}`, property, value];\n    }\n}\nfunction convertDisjunctionOp(filters) {\n    return ['any'].concat(filters.map(convertFilter$1));\n}\nfunction convertInOp$1(property, values) {\n    if (values.length === 0) {\n        return false;\n    }\n    switch (property) {\n        case '$type':\n            return ['filter-type-in', ['literal', values]];\n        case '$id':\n            return ['filter-id-in', ['literal', values]];\n        default:\n            if (values.length > 200 && !values.some(v => typeof v !== typeof values[0])) {\n                return ['filter-in-large', property, ['literal', values.sort(compare)]];\n            }\n            else {\n                return ['filter-in-small', property, ['literal', values]];\n            }\n    }\n}\nfunction convertHasOp$1(property) {\n    switch (property) {\n        case '$type':\n            return true;\n        case '$id':\n            return ['filter-has-id'];\n        default:\n            return ['filter-has', property];\n    }\n}\nfunction convertNegation(filter) {\n    return ['!', filter];\n}\n\n/*\n * Convert the given filter to an expression, storing the expected types for\n * any feature properties referenced in expectedTypes.\n *\n * These expected types are needed in order to construct preflight type checks\n * needed for handling 'any' filters. A preflight type check is necessary in\n * order to mimic legacy filters' semantics around expected type mismatches.\n * For example, consider the legacy filter:\n *\n *     [\"any\", [\"all\", [\">\", \"y\", 0], [\">\", \"y\", 0]], [\">\", \"x\", 0]]\n *\n * Naively, we might convert this to the expression:\n *\n *     [\"any\", [\"all\", [\">\", [\"get\", \"y\"], 0], [\">\", [\"get\", \"z\"], 0]], [\">\", [\"get\", \"x\"], 0]]\n *\n * But if we tried to evaluate this against, say `{x: 1, y: null, z: 0}`, the\n * [\">\", [\"get\", \"y\"], 0] would cause an evaluation error, leading to the\n * entire filter returning false. Legacy filter semantics, though, ask for\n * [\">\", \"y\", 0] to simply return `false` when `y` is of the wrong type,\n * allowing the subsequent terms of the outer \"any\" expression to be evaluated\n * (resulting, in this case, in a `true` value, because x > 0).\n *\n * We account for this by inserting a preflight type-checking expression before\n * each \"any\" term, allowing us to avoid evaluating the actual converted filter\n * if any type mismatches would cause it to produce an evaluation error:\n *\n *     [\"any\",\n *       [\"case\",\n *         [\"all\", [\"==\", [\"typeof\", [\"get\", \"y\"]], \"number\"], [\"==\", [\"typeof\", [\"get\", \"z\"], \"number]],\n *         [\"all\", [\">\", [\"get\", \"y\"], 0], [\">\", [\"get\", \"z\"], 0]],\n *         false\n *       ],\n *       [\"case\",\n *         [\"==\", [\"typeof\", [\"get\", \"x\"], \"number\"]],\n *         [\">\", [\"get\", \"x\"], 0],\n *         false\n *       ]\n *     ]\n *\n * An alternative, possibly more direct approach would be to use type checks\n * in the conversion of each comparison operator, so that the converted version\n * of each individual ==, >=, etc. would mimic the legacy filter semantics. The\n * downside of this approach is that it can lead to many more type checks than\n * would otherwise be necessary: outside the context of an \"any\" expression,\n * bailing out due to a runtime type error (expression semantics) and returning\n * false (legacy filter semantics) are equivalent: they cause the filter to\n * produce a `false` result.\n */\nfunction convertFilter(filter, expectedTypes = {}) {\n    if (isExpressionFilter(filter))\n        return filter;\n    if (!filter)\n        return true;\n    const legacyFilter = filter;\n    const legacyOp = legacyFilter[0];\n    if (filter.length <= 1)\n        return (legacyOp !== 'any');\n    switch (legacyOp) {\n        case '==':\n        case '!=':\n        case '<':\n        case '>':\n        case '<=':\n        case '>=': {\n            const [, property, value] = filter;\n            return convertComparisonOp(property, value, legacyOp, expectedTypes);\n        }\n        case 'any': {\n            const [, ...conditions] = legacyFilter;\n            const children = conditions.map((f) => {\n                const types = {};\n                const child = convertFilter(f, types);\n                const typechecks = runtimeTypeChecks(types);\n                return typechecks === true ? child : ['case', typechecks, child, false];\n            });\n            return ['any', ...children];\n        }\n        case 'all': {\n            const [, ...conditions] = legacyFilter;\n            const children = conditions.map(f => convertFilter(f, expectedTypes));\n            return children.length > 1 ? ['all', ...children] : children[0];\n        }\n        case 'none': {\n            const [, ...conditions] = legacyFilter;\n            return ['!', convertFilter(['any', ...conditions], {})];\n        }\n        case 'in': {\n            const [, property, ...values] = legacyFilter;\n            return convertInOp(property, values);\n        }\n        case '!in': {\n            const [, property, ...values] = legacyFilter;\n            return convertInOp(property, values, true);\n        }\n        case 'has':\n            return convertHasOp(legacyFilter[1]);\n        case '!has':\n            return ['!', convertHasOp(legacyFilter[1])];\n        default:\n            return true;\n    }\n}\n// Given a set of feature properties and an expected type for each one,\n// construct an boolean expression that tests whether each property has the\n// right type.\n// E.g.: for {name: 'string', population: 'number'}, return\n// [ 'all',\n//   ['==', ['typeof', ['get', 'name'], 'string']],\n//   ['==', ['typeof', ['get', 'population'], 'number]]\n// ]\nfunction runtimeTypeChecks(expectedTypes) {\n    const conditions = [];\n    for (const property in expectedTypes) {\n        const get = property === '$id' ? ['id'] : ['get', property];\n        conditions.push(['==', ['typeof', get], expectedTypes[property]]);\n    }\n    if (conditions.length === 0)\n        return true;\n    if (conditions.length === 1)\n        return conditions[0];\n    return ['all', ...conditions];\n}\nfunction convertComparisonOp(property, value, op, expectedTypes) {\n    let get;\n    if (property === '$type') {\n        return [op, ['geometry-type'], value];\n    }\n    else if (property === '$id') {\n        get = ['id'];\n    }\n    else {\n        get = ['get', property];\n    }\n    if (expectedTypes && value !== null) {\n        const type = typeof value;\n        expectedTypes[property] = type;\n    }\n    if (op === '==' && property !== '$id' && value === null) {\n        return [\n            'all',\n            ['has', property], // missing property != null for legacy filters\n            ['==', get, null]\n        ];\n    }\n    else if (op === '!=' && property !== '$id' && value === null) {\n        return [\n            'any',\n            ['!', ['has', property]], // missing property != null for legacy filters\n            ['!=', get, null]\n        ];\n    }\n    return [op, get, value];\n}\nfunction convertInOp(property, values, negate = false) {\n    if (values.length === 0)\n        return negate;\n    let get;\n    if (property === '$type') {\n        get = ['geometry-type'];\n    }\n    else if (property === '$id') {\n        get = ['id'];\n    }\n    else {\n        get = ['get', property];\n    }\n    // Determine if the list of values to be searched is homogenously typed.\n    // If so (and if the type is string or number), then we can use a\n    // [match, input, [...values], true, false] construction rather than a\n    // bunch of `==` tests.\n    let uniformTypes = true;\n    const type = typeof values[0];\n    for (const value of values) {\n        if (typeof value !== type) {\n            uniformTypes = false;\n            break;\n        }\n    }\n    if (uniformTypes && (type === 'string' || type === 'number')) {\n        // Match expressions must have unique values.\n        const uniqueValues = values.sort().filter((v, i) => i === 0 || values[i - 1] !== v);\n        return ['match', get, uniqueValues, !negate, negate];\n    }\n    if (negate) {\n        return ['all', ...values.map(v => ['!=', get, v])];\n    }\n    else {\n        return ['any', ...values.map(v => ['==', get, v])];\n    }\n}\nfunction convertHasOp(property) {\n    if (property === '$type') {\n        return true;\n    }\n    else if (property === '$id') {\n        return ['!=', ['id'], null];\n    }\n    else {\n        return ['has', property];\n    }\n}\n\nfunction convertLiteral(value) {\n    return typeof value === 'object' ? ['literal', value] : value;\n}\nfunction convertFunction(parameters, propertySpec) {\n    let stops = parameters.stops;\n    if (!stops) {\n        // identity function\n        return convertIdentityFunction(parameters, propertySpec);\n    }\n    const zoomAndFeatureDependent = stops && typeof stops[0][0] === 'object';\n    const featureDependent = zoomAndFeatureDependent || parameters.property !== undefined;\n    const zoomDependent = zoomAndFeatureDependent || !featureDependent;\n    stops = stops.map((stop) => {\n        if (!featureDependent && propertySpec.tokens && typeof stop[1] === 'string') {\n            return [stop[0], convertTokenString(stop[1])];\n        }\n        return [stop[0], convertLiteral(stop[1])];\n    });\n    if (zoomAndFeatureDependent) {\n        return convertZoomAndPropertyFunction(parameters, propertySpec, stops);\n    }\n    else if (zoomDependent) {\n        return convertZoomFunction(parameters, propertySpec, stops);\n    }\n    else {\n        return convertPropertyFunction(parameters, propertySpec, stops);\n    }\n}\nfunction convertIdentityFunction(parameters, propertySpec) {\n    const get = ['get', parameters.property];\n    if (parameters.default === undefined) {\n        // By default, expressions for string-valued properties get coerced. To preserve\n        // legacy function semantics, insert an explicit assertion instead.\n        return propertySpec.type === 'string' ? ['string', get] : get;\n    }\n    else if (propertySpec.type === 'enum') {\n        return [\n            'match',\n            get,\n            Object.keys(propertySpec.values),\n            get,\n            parameters.default\n        ];\n    }\n    else {\n        const expression = [propertySpec.type === 'color' ? 'to-color' : propertySpec.type, get, convertLiteral(parameters.default)];\n        if (propertySpec.type === 'array') {\n            expression.splice(1, 0, propertySpec.value, propertySpec.length || null);\n        }\n        return expression;\n    }\n}\nfunction getInterpolateOperator(parameters) {\n    switch (parameters.colorSpace) {\n        case 'hcl': return 'interpolate-hcl';\n        case 'lab': return 'interpolate-lab';\n        default: return 'interpolate';\n    }\n}\nfunction convertZoomAndPropertyFunction(parameters, propertySpec, stops) {\n    const featureFunctionParameters = {};\n    const featureFunctionStops = {};\n    const zoomStops = [];\n    for (let s = 0; s < stops.length; s++) {\n        const stop = stops[s];\n        const zoom = stop[0].zoom;\n        if (featureFunctionParameters[zoom] === undefined) {\n            featureFunctionParameters[zoom] = {\n                zoom,\n                type: parameters.type,\n                property: parameters.property,\n                default: parameters.default,\n            };\n            featureFunctionStops[zoom] = [];\n            zoomStops.push(zoom);\n        }\n        featureFunctionStops[zoom].push([stop[0].value, stop[1]]);\n    }\n    // the interpolation type for the zoom dimension of a zoom-and-property\n    // function is determined directly from the style property specification\n    // for which it's being used: linear for interpolatable properties, step\n    // otherwise.\n    const functionType = getFunctionType({}, propertySpec);\n    if (functionType === 'exponential') {\n        const expression = [getInterpolateOperator(parameters), ['linear'], ['zoom']];\n        for (const z of zoomStops) {\n            const output = convertPropertyFunction(featureFunctionParameters[z], propertySpec, featureFunctionStops[z]);\n            appendStopPair(expression, z, output, false);\n        }\n        return expression;\n    }\n    else {\n        const expression = ['step', ['zoom']];\n        for (const z of zoomStops) {\n            const output = convertPropertyFunction(featureFunctionParameters[z], propertySpec, featureFunctionStops[z]);\n            appendStopPair(expression, z, output, true);\n        }\n        fixupDegenerateStepCurve(expression);\n        return expression;\n    }\n}\nfunction coalesce(a, b) {\n    if (a !== undefined)\n        return a;\n    if (b !== undefined)\n        return b;\n}\nfunction getFallback(parameters, propertySpec) {\n    const defaultValue = convertLiteral(coalesce(parameters.default, propertySpec.default));\n    /*\n     * Some fields with type: resolvedImage have an undefined default.\n     * Because undefined is an invalid value for resolvedImage, set fallback to\n     * an empty string instead of undefined to ensure output\n     * passes validation.\n     */\n    if (defaultValue === undefined && propertySpec.type === 'resolvedImage') {\n        return '';\n    }\n    return defaultValue;\n}\nfunction convertPropertyFunction(parameters, propertySpec, stops) {\n    const type = getFunctionType(parameters, propertySpec);\n    const get = ['get', parameters.property];\n    if (type === 'categorical' && typeof stops[0][0] === 'boolean') {\n        const expression = ['case'];\n        for (const stop of stops) {\n            expression.push(['==', get, stop[0]], stop[1]);\n        }\n        expression.push(getFallback(parameters, propertySpec));\n        return expression;\n    }\n    else if (type === 'categorical') {\n        const expression = ['match', get];\n        for (const stop of stops) {\n            appendStopPair(expression, stop[0], stop[1], false);\n        }\n        expression.push(getFallback(parameters, propertySpec));\n        return expression;\n    }\n    else if (type === 'interval') {\n        const expression = ['step', ['number', get]];\n        for (const stop of stops) {\n            appendStopPair(expression, stop[0], stop[1], true);\n        }\n        fixupDegenerateStepCurve(expression);\n        return parameters.default === undefined ? expression : [\n            'case',\n            ['==', ['typeof', get], 'number'],\n            expression,\n            convertLiteral(parameters.default)\n        ];\n    }\n    else if (type === 'exponential') {\n        const base = parameters.base !== undefined ? parameters.base : 1;\n        const expression = [\n            getInterpolateOperator(parameters),\n            base === 1 ? ['linear'] : ['exponential', base],\n            ['number', get]\n        ];\n        for (const stop of stops) {\n            appendStopPair(expression, stop[0], stop[1], false);\n        }\n        return parameters.default === undefined ? expression : [\n            'case',\n            ['==', ['typeof', get], 'number'],\n            expression,\n            convertLiteral(parameters.default)\n        ];\n    }\n    else {\n        throw new Error(`Unknown property function type ${type}`);\n    }\n}\nfunction convertZoomFunction(parameters, propertySpec, stops, input = ['zoom']) {\n    const type = getFunctionType(parameters, propertySpec);\n    let expression;\n    let isStep = false;\n    if (type === 'interval') {\n        expression = ['step', input];\n        isStep = true;\n    }\n    else if (type === 'exponential') {\n        const base = parameters.base !== undefined ? parameters.base : 1;\n        expression = [getInterpolateOperator(parameters), base === 1 ? ['linear'] : ['exponential', base], input];\n    }\n    else {\n        throw new Error(`Unknown zoom function type \"${type}\"`);\n    }\n    for (const stop of stops) {\n        appendStopPair(expression, stop[0], stop[1], isStep);\n    }\n    fixupDegenerateStepCurve(expression);\n    return expression;\n}\nfunction fixupDegenerateStepCurve(expression) {\n    // degenerate step curve (i.e. a constant function): add a noop stop\n    if (expression[0] === 'step' && expression.length === 3) {\n        expression.push(0);\n        expression.push(expression[3]);\n    }\n}\nfunction appendStopPair(curve, input, output, isStep) {\n    // Skip duplicate stop values. They were not validated for functions, but they are for expressions.\n    // https://github.com/mapbox/mapbox-gl-js/issues/4107\n    if (curve.length > 3 && input === curve[curve.length - 2]) {\n        return;\n    }\n    // step curves don't get the first input value, as it is redundant.\n    if (!(isStep && curve.length === 2)) {\n        curve.push(input);\n    }\n    curve.push(output);\n}\nfunction getFunctionType(parameters, propertySpec) {\n    if (parameters.type) {\n        return parameters.type;\n    }\n    else {\n        return propertySpec.expression.interpolated ? 'exponential' : 'interval';\n    }\n}\n// \"String with {name} token\" => [\"concat\", \"String with \", [\"get\", \"name\"], \" token\"]\nfunction convertTokenString(s) {\n    const result = ['concat'];\n    const re = /{([^{}]+)}/g;\n    let pos = 0;\n    for (let match = re.exec(s); match !== null; match = re.exec(s)) {\n        const literal = s.slice(pos, re.lastIndex - match[0].length);\n        pos = re.lastIndex;\n        if (literal.length > 0)\n            result.push(literal);\n        result.push(['get', match[1]]);\n    }\n    if (result.length === 1) {\n        return s;\n    }\n    if (pos < s.length) {\n        result.push(s.slice(pos));\n    }\n    else if (result.length === 2) {\n        return ['to-string', result[1]];\n    }\n    return result;\n}\n\nfunction getPropertyReference(propertyName) {\n    for (let i = 0; i < v8Spec.layout.length; i++) {\n        for (const key in v8Spec[v8Spec.layout[i]]) {\n            if (key === propertyName)\n                return v8Spec[v8Spec.layout[i]][key];\n        }\n    }\n    for (let i = 0; i < v8Spec.paint.length; i++) {\n        for (const key in v8Spec[v8Spec.paint[i]]) {\n            if (key === propertyName)\n                return v8Spec[v8Spec.paint[i]][key];\n        }\n    }\n    return null;\n}\nfunction eachSource(style, callback) {\n    for (const k in style.sources) {\n        callback(style.sources[k]);\n    }\n}\nfunction eachLayer(style, callback) {\n    for (const layer of style.layers) {\n        callback(layer);\n    }\n}\nfunction eachProperty(style, options, callback) {\n    function inner(layer, propertyType) {\n        const properties = layer[propertyType];\n        if (!properties)\n            return;\n        Object.keys(properties).forEach((key) => {\n            callback({\n                path: [layer.id, propertyType, key],\n                key,\n                value: properties[key],\n                reference: getPropertyReference(key),\n                set(x) {\n                    properties[key] = x;\n                }\n            });\n        });\n    }\n    eachLayer(style, (layer) => {\n        if (options.paint) {\n            inner(layer, 'paint');\n        }\n        if (options.layout) {\n            inner(layer, 'layout');\n        }\n    });\n}\n\nfunction stringify$1(obj) {\n    const type = typeof obj;\n    if (type === 'number' || type === 'boolean' || type === 'string' || obj === undefined || obj === null)\n        return JSON.stringify(obj);\n    if (Array.isArray(obj)) {\n        let str = '[';\n        for (const val of obj) {\n            str += `${stringify$1(val)},`;\n        }\n        return `${str}]`;\n    }\n    const keys = Object.keys(obj).sort();\n    let str = '{';\n    for (let i = 0; i < keys.length; i++) {\n        str += `${JSON.stringify(keys[i])}:${stringify$1(obj[keys[i]])},`;\n    }\n    return `${str}}`;\n}\nfunction getKey(layer) {\n    let key = '';\n    for (const k of refProperties) {\n        key += `/${stringify$1(layer[k])}`;\n    }\n    return key;\n}\n/**\n * Given an array of layers, return an array of arrays of layers where all\n * layers in each group have identical layout-affecting properties. These\n * are the properties that were formerly used by explicit `ref` mechanism\n * for layers: 'type', 'source', 'source-layer', 'minzoom', 'maxzoom',\n * 'filter', and 'layout'.\n *\n * The input is not modified. The output layers are references to the\n * input layers.\n *\n * @private\n * @param {Array<Layer>} layers\n * @param {Object} [cachedKeys] - an object to keep already calculated keys.\n * @returns {Array<Array<Layer>>}\n */\nfunction groupByLayout(layers, cachedKeys) {\n    const groups = {};\n    for (let i = 0; i < layers.length; i++) {\n        const k = (cachedKeys && cachedKeys[layers[i].id]) || getKey(layers[i]);\n        // update the cache if there is one\n        if (cachedKeys)\n            cachedKeys[layers[i].id] = k;\n        let group = groups[k];\n        if (!group) {\n            group = groups[k] = [];\n        }\n        group.push(layers[i]);\n    }\n    const result = [];\n    for (const k in groups) {\n        result.push(groups[k]);\n    }\n    return result;\n}\n\nfunction emptyStyle() {\n    const style = {};\n    const version = v8Spec['$version'];\n    for (const styleKey in v8Spec['$root']) {\n        const specification = v8Spec['$root'][styleKey];\n        if (specification.required) {\n            let value = null;\n            if (styleKey === 'version') {\n                value = version;\n            }\n            else {\n                if (specification.type === 'array') {\n                    value = [];\n                }\n                else {\n                    value = {};\n                }\n            }\n            if (value != null) {\n                style[styleKey] = value;\n            }\n        }\n    }\n    return style;\n}\n\nfunction validateConstants(options) {\n    const key = options.key;\n    const constants = options.value;\n    if (constants) {\n        return [new ValidationError(key, constants, 'constants have been deprecated as of v8')];\n    }\n    else {\n        return [];\n    }\n}\n\n// Turn jsonlint-lines-primitives objects into primitive objects\nfunction unbundle(value) {\n    if (value instanceof Number || value instanceof String || value instanceof Boolean) {\n        return value.valueOf();\n    }\n    else {\n        return value;\n    }\n}\nfunction deepUnbundle(value) {\n    if (Array.isArray(value)) {\n        return value.map(deepUnbundle);\n    }\n    else if (value instanceof Object && !(value instanceof Number || value instanceof String || value instanceof Boolean)) {\n        const unbundledValue = {};\n        for (const key in value) {\n            unbundledValue[key] = deepUnbundle(value[key]);\n        }\n        return unbundledValue;\n    }\n    return unbundle(value);\n}\n\nfunction validateObject(options) {\n    const key = options.key;\n    const object = options.value;\n    const elementSpecs = options.valueSpec || {};\n    const elementValidators = options.objectElementValidators || {};\n    const style = options.style;\n    const styleSpec = options.styleSpec;\n    const validateSpec = options.validateSpec;\n    let errors = [];\n    const type = getType(object);\n    if (type !== 'object') {\n        return [new ValidationError(key, object, `object expected, ${type} found`)];\n    }\n    for (const objectKey in object) {\n        const elementSpecKey = objectKey.split('.')[0]; // treat 'paint.*' as 'paint'\n        const elementSpec = elementSpecs[elementSpecKey] || elementSpecs['*'];\n        let validateElement;\n        if (elementValidators[elementSpecKey]) {\n            validateElement = elementValidators[elementSpecKey];\n        }\n        else if (elementSpecs[elementSpecKey]) {\n            validateElement = validateSpec;\n        }\n        else if (elementValidators['*']) {\n            validateElement = elementValidators['*'];\n        }\n        else if (elementSpecs['*']) {\n            validateElement = validateSpec;\n        }\n        else {\n            errors.push(new ValidationError(key, object[objectKey], `unknown property \"${objectKey}\"`));\n            continue;\n        }\n        errors = errors.concat(validateElement({\n            key: (key ? `${key}.` : key) + objectKey,\n            value: object[objectKey],\n            valueSpec: elementSpec,\n            style,\n            styleSpec,\n            object,\n            objectKey,\n            validateSpec,\n        }, object));\n    }\n    for (const elementSpecKey in elementSpecs) {\n        // Don't check `required` when there's a custom validator for that property.\n        if (elementValidators[elementSpecKey]) {\n            continue;\n        }\n        if (elementSpecs[elementSpecKey].required && elementSpecs[elementSpecKey]['default'] === undefined && object[elementSpecKey] === undefined) {\n            errors.push(new ValidationError(key, object, `missing required property \"${elementSpecKey}\"`));\n        }\n    }\n    return errors;\n}\n\nfunction validateArray(options) {\n    const array = options.value;\n    const arraySpec = options.valueSpec;\n    const validateSpec = options.validateSpec;\n    const style = options.style;\n    const styleSpec = options.styleSpec;\n    const key = options.key;\n    const validateArrayElement = options.arrayElementValidator || validateSpec;\n    if (getType(array) !== 'array') {\n        return [new ValidationError(key, array, `array expected, ${getType(array)} found`)];\n    }\n    if (arraySpec.length && array.length !== arraySpec.length) {\n        return [new ValidationError(key, array, `array length ${arraySpec.length} expected, length ${array.length} found`)];\n    }\n    if (arraySpec['min-length'] && array.length < arraySpec['min-length']) {\n        return [new ValidationError(key, array, `array length at least ${arraySpec['min-length']} expected, length ${array.length} found`)];\n    }\n    let arrayElementSpec = {\n        'type': arraySpec.value,\n        'values': arraySpec.values\n    };\n    if (styleSpec.$version < 7) {\n        arrayElementSpec['function'] = arraySpec.function;\n    }\n    if (getType(arraySpec.value) === 'object') {\n        arrayElementSpec = arraySpec.value;\n    }\n    let errors = [];\n    for (let i = 0; i < array.length; i++) {\n        errors = errors.concat(validateArrayElement({\n            array,\n            arrayIndex: i,\n            value: array[i],\n            valueSpec: arrayElementSpec,\n            validateSpec: options.validateSpec,\n            style,\n            styleSpec,\n            key: `${key}[${i}]`\n        }));\n    }\n    return errors;\n}\n\nfunction validateNumber(options) {\n    const key = options.key;\n    const value = options.value;\n    const valueSpec = options.valueSpec;\n    let type = getType(value);\n    if (type === 'number' && value !== value) {\n        type = 'NaN';\n    }\n    if (type !== 'number') {\n        return [new ValidationError(key, value, `number expected, ${type} found`)];\n    }\n    if ('minimum' in valueSpec && value < valueSpec.minimum) {\n        return [new ValidationError(key, value, `${value} is less than the minimum value ${valueSpec.minimum}`)];\n    }\n    if ('maximum' in valueSpec && value > valueSpec.maximum) {\n        return [new ValidationError(key, value, `${value} is greater than the maximum value ${valueSpec.maximum}`)];\n    }\n    return [];\n}\n\nfunction validateFunction(options) {\n    const functionValueSpec = options.valueSpec;\n    const functionType = unbundle(options.value.type);\n    let stopKeyType;\n    let stopDomainValues = {};\n    let previousStopDomainValue;\n    let previousStopDomainZoom;\n    const isZoomFunction = functionType !== 'categorical' && options.value.property === undefined;\n    const isPropertyFunction = !isZoomFunction;\n    const isZoomAndPropertyFunction = getType(options.value.stops) === 'array' &&\n        getType(options.value.stops[0]) === 'array' &&\n        getType(options.value.stops[0][0]) === 'object';\n    const errors = validateObject({\n        key: options.key,\n        value: options.value,\n        valueSpec: options.styleSpec.function,\n        validateSpec: options.validateSpec,\n        style: options.style,\n        styleSpec: options.styleSpec,\n        objectElementValidators: {\n            stops: validateFunctionStops,\n            default: validateFunctionDefault\n        }\n    });\n    if (functionType === 'identity' && isZoomFunction) {\n        errors.push(new ValidationError(options.key, options.value, 'missing required property \"property\"'));\n    }\n    if (functionType !== 'identity' && !options.value.stops) {\n        errors.push(new ValidationError(options.key, options.value, 'missing required property \"stops\"'));\n    }\n    if (functionType === 'exponential' && options.valueSpec.expression && !supportsInterpolation(options.valueSpec)) {\n        errors.push(new ValidationError(options.key, options.value, 'exponential functions not supported'));\n    }\n    if (options.styleSpec.$version >= 8) {\n        if (isPropertyFunction && !supportsPropertyExpression(options.valueSpec)) {\n            errors.push(new ValidationError(options.key, options.value, 'property functions not supported'));\n        }\n        else if (isZoomFunction && !supportsZoomExpression(options.valueSpec)) {\n            errors.push(new ValidationError(options.key, options.value, 'zoom functions not supported'));\n        }\n    }\n    if ((functionType === 'categorical' || isZoomAndPropertyFunction) && options.value.property === undefined) {\n        errors.push(new ValidationError(options.key, options.value, '\"property\" property is required'));\n    }\n    return errors;\n    function validateFunctionStops(options) {\n        if (functionType === 'identity') {\n            return [new ValidationError(options.key, options.value, 'identity function may not have a \"stops\" property')];\n        }\n        let errors = [];\n        const value = options.value;\n        errors = errors.concat(validateArray({\n            key: options.key,\n            value,\n            valueSpec: options.valueSpec,\n            validateSpec: options.validateSpec,\n            style: options.style,\n            styleSpec: options.styleSpec,\n            arrayElementValidator: validateFunctionStop\n        }));\n        if (getType(value) === 'array' && value.length === 0) {\n            errors.push(new ValidationError(options.key, value, 'array must have at least one stop'));\n        }\n        return errors;\n    }\n    function validateFunctionStop(options) {\n        let errors = [];\n        const value = options.value;\n        const key = options.key;\n        if (getType(value) !== 'array') {\n            return [new ValidationError(key, value, `array expected, ${getType(value)} found`)];\n        }\n        if (value.length !== 2) {\n            return [new ValidationError(key, value, `array length 2 expected, length ${value.length} found`)];\n        }\n        if (isZoomAndPropertyFunction) {\n            if (getType(value[0]) !== 'object') {\n                return [new ValidationError(key, value, `object expected, ${getType(value[0])} found`)];\n            }\n            if (value[0].zoom === undefined) {\n                return [new ValidationError(key, value, 'object stop key must have zoom')];\n            }\n            if (value[0].value === undefined) {\n                return [new ValidationError(key, value, 'object stop key must have value')];\n            }\n            if (previousStopDomainZoom && previousStopDomainZoom > unbundle(value[0].zoom)) {\n                return [new ValidationError(key, value[0].zoom, 'stop zoom values must appear in ascending order')];\n            }\n            if (unbundle(value[0].zoom) !== previousStopDomainZoom) {\n                previousStopDomainZoom = unbundle(value[0].zoom);\n                previousStopDomainValue = undefined;\n                stopDomainValues = {};\n            }\n            errors = errors.concat(validateObject({\n                key: `${key}[0]`,\n                value: value[0],\n                valueSpec: { zoom: {} },\n                validateSpec: options.validateSpec,\n                style: options.style,\n                styleSpec: options.styleSpec,\n                objectElementValidators: { zoom: validateNumber, value: validateStopDomainValue }\n            }));\n        }\n        else {\n            errors = errors.concat(validateStopDomainValue({\n                key: `${key}[0]`,\n                value: value[0],\n                valueSpec: {},\n                validateSpec: options.validateSpec,\n                style: options.style,\n                styleSpec: options.styleSpec\n            }, value));\n        }\n        if (isExpression(deepUnbundle(value[1]))) {\n            return errors.concat([new ValidationError(`${key}[1]`, value[1], 'expressions are not allowed in function stops.')]);\n        }\n        return errors.concat(options.validateSpec({\n            key: `${key}[1]`,\n            value: value[1],\n            valueSpec: functionValueSpec,\n            validateSpec: options.validateSpec,\n            style: options.style,\n            styleSpec: options.styleSpec\n        }));\n    }\n    function validateStopDomainValue(options, stop) {\n        const type = getType(options.value);\n        const value = unbundle(options.value);\n        const reportValue = options.value !== null ? options.value : stop;\n        if (!stopKeyType) {\n            stopKeyType = type;\n        }\n        else if (type !== stopKeyType) {\n            return [new ValidationError(options.key, reportValue, `${type} stop domain type must match previous stop domain type ${stopKeyType}`)];\n        }\n        if (type !== 'number' && type !== 'string' && type !== 'boolean') {\n            return [new ValidationError(options.key, reportValue, 'stop domain value must be a number, string, or boolean')];\n        }\n        if (type !== 'number' && functionType !== 'categorical') {\n            let message = `number expected, ${type} found`;\n            if (supportsPropertyExpression(functionValueSpec) && functionType === undefined) {\n                message += '\\nIf you intended to use a categorical function, specify `\"type\": \"categorical\"`.';\n            }\n            return [new ValidationError(options.key, reportValue, message)];\n        }\n        if (functionType === 'categorical' && type === 'number' && (!isFinite(value) || Math.floor(value) !== value)) {\n            return [new ValidationError(options.key, reportValue, `integer expected, found ${value}`)];\n        }\n        if (functionType !== 'categorical' && type === 'number' && previousStopDomainValue !== undefined && value < previousStopDomainValue) {\n            return [new ValidationError(options.key, reportValue, 'stop domain values must appear in ascending order')];\n        }\n        else {\n            previousStopDomainValue = value;\n        }\n        if (functionType === 'categorical' && value in stopDomainValues) {\n            return [new ValidationError(options.key, reportValue, 'stop domain values must be unique')];\n        }\n        else {\n            stopDomainValues[value] = true;\n        }\n        return [];\n    }\n    function validateFunctionDefault(options) {\n        return options.validateSpec({\n            key: options.key,\n            value: options.value,\n            valueSpec: functionValueSpec,\n            validateSpec: options.validateSpec,\n            style: options.style,\n            styleSpec: options.styleSpec\n        });\n    }\n}\n\nfunction validateExpression(options) {\n    const expression = (options.expressionContext === 'property' ? createPropertyExpression : createExpression)(deepUnbundle(options.value), options.valueSpec);\n    if (expression.result === 'error') {\n        return expression.value.map((error) => {\n            return new ValidationError(`${options.key}${error.key}`, options.value, error.message);\n        });\n    }\n    const expressionObj = expression.value.expression || expression.value._styleExpression.expression;\n    if (options.expressionContext === 'property' && (options.propertyKey === 'text-font') &&\n        !expressionObj.outputDefined()) {\n        return [new ValidationError(options.key, options.value, `Invalid data expression for \"${options.propertyKey}\". Output values must be contained as literals within the expression.`)];\n    }\n    if (options.expressionContext === 'property' && options.propertyType === 'layout' &&\n        (!isStateConstant(expressionObj))) {\n        return [new ValidationError(options.key, options.value, '\"feature-state\" data expressions are not supported with layout properties.')];\n    }\n    if (options.expressionContext === 'filter' && !isStateConstant(expressionObj)) {\n        return [new ValidationError(options.key, options.value, '\"feature-state\" data expressions are not supported with filters.')];\n    }\n    if (options.expressionContext && options.expressionContext.indexOf('cluster') === 0) {\n        if (!isGlobalPropertyConstant(expressionObj, ['zoom', 'feature-state'])) {\n            return [new ValidationError(options.key, options.value, '\"zoom\" and \"feature-state\" expressions are not supported with cluster properties.')];\n        }\n        if (options.expressionContext === 'cluster-initial' && !isFeatureConstant(expressionObj)) {\n            return [new ValidationError(options.key, options.value, 'Feature data expressions are not supported with initial expression part of cluster properties.')];\n        }\n    }\n    return [];\n}\n\nfunction validateBoolean(options) {\n    const value = options.value;\n    const key = options.key;\n    const type = getType(value);\n    if (type !== 'boolean') {\n        return [new ValidationError(key, value, `boolean expected, ${type} found`)];\n    }\n    return [];\n}\n\nfunction validateColor(options) {\n    const key = options.key;\n    const value = options.value;\n    const type = getType(value);\n    if (type !== 'string') {\n        return [new ValidationError(key, value, `color expected, ${type} found`)];\n    }\n    if (!Color.parse(String(value))) { // cast String object to string primitive\n        return [new ValidationError(key, value, `color expected, \"${value}\" found`)];\n    }\n    return [];\n}\n\nfunction validateEnum(options) {\n    const key = options.key;\n    const value = options.value;\n    const valueSpec = options.valueSpec;\n    const errors = [];\n    if (Array.isArray(valueSpec.values)) { // <=v7\n        if (valueSpec.values.indexOf(unbundle(value)) === -1) {\n            errors.push(new ValidationError(key, value, `expected one of [${valueSpec.values.join(', ')}], ${JSON.stringify(value)} found`));\n        }\n    }\n    else { // >=v8\n        if (Object.keys(valueSpec.values).indexOf(unbundle(value)) === -1) {\n            errors.push(new ValidationError(key, value, `expected one of [${Object.keys(valueSpec.values).join(', ')}], ${JSON.stringify(value)} found`));\n        }\n    }\n    return errors;\n}\n\nfunction validateFilter(options) {\n    if (isExpressionFilter(deepUnbundle(options.value))) {\n        return validateExpression(extendBy({}, options, {\n            expressionContext: 'filter',\n            valueSpec: { value: 'boolean' }\n        }));\n    }\n    else {\n        return validateNonExpressionFilter(options);\n    }\n}\nfunction validateNonExpressionFilter(options) {\n    const value = options.value;\n    const key = options.key;\n    if (getType(value) !== 'array') {\n        return [new ValidationError(key, value, `array expected, ${getType(value)} found`)];\n    }\n    const styleSpec = options.styleSpec;\n    let type;\n    let errors = [];\n    if (value.length < 1) {\n        return [new ValidationError(key, value, 'filter array must have at least 1 element')];\n    }\n    errors = errors.concat(validateEnum({\n        key: `${key}[0]`,\n        value: value[0],\n        valueSpec: styleSpec.filter_operator,\n        style: options.style,\n        styleSpec: options.styleSpec\n    }));\n    switch (unbundle(value[0])) {\n        case '<':\n        case '<=':\n        case '>':\n        case '>=':\n            if (value.length >= 2 && unbundle(value[1]) === '$type') {\n                errors.push(new ValidationError(key, value, `\"$type\" cannot be use with operator \"${value[0]}\"`));\n            }\n        /* falls through */\n        case '==':\n        case '!=':\n            if (value.length !== 3) {\n                errors.push(new ValidationError(key, value, `filter array for operator \"${value[0]}\" must have 3 elements`));\n            }\n        /* falls through */\n        case 'in':\n        case '!in':\n            if (value.length >= 2) {\n                type = getType(value[1]);\n                if (type !== 'string') {\n                    errors.push(new ValidationError(`${key}[1]`, value[1], `string expected, ${type} found`));\n                }\n            }\n            for (let i = 2; i < value.length; i++) {\n                type = getType(value[i]);\n                if (unbundle(value[1]) === '$type') {\n                    errors = errors.concat(validateEnum({\n                        key: `${key}[${i}]`,\n                        value: value[i],\n                        valueSpec: styleSpec.geometry_type,\n                        style: options.style,\n                        styleSpec: options.styleSpec\n                    }));\n                }\n                else if (type !== 'string' && type !== 'number' && type !== 'boolean') {\n                    errors.push(new ValidationError(`${key}[${i}]`, value[i], `string, number, or boolean expected, ${type} found`));\n                }\n            }\n            break;\n        case 'any':\n        case 'all':\n        case 'none':\n            for (let i = 1; i < value.length; i++) {\n                errors = errors.concat(validateNonExpressionFilter({\n                    key: `${key}[${i}]`,\n                    value: value[i],\n                    style: options.style,\n                    styleSpec: options.styleSpec\n                }));\n            }\n            break;\n        case 'has':\n        case '!has':\n            type = getType(value[1]);\n            if (value.length !== 2) {\n                errors.push(new ValidationError(key, value, `filter array for \"${value[0]}\" operator must have 2 elements`));\n            }\n            else if (type !== 'string') {\n                errors.push(new ValidationError(`${key}[1]`, value[1], `string expected, ${type} found`));\n            }\n            break;\n    }\n    return errors;\n}\n\nfunction validateProperty(options, propertyType) {\n    const key = options.key;\n    const validateSpec = options.validateSpec;\n    const style = options.style;\n    const styleSpec = options.styleSpec;\n    const value = options.value;\n    const propertyKey = options.objectKey;\n    const layerSpec = styleSpec[`${propertyType}_${options.layerType}`];\n    if (!layerSpec)\n        return [];\n    const transitionMatch = propertyKey.match(/^(.*)-transition$/);\n    if (propertyType === 'paint' && transitionMatch && layerSpec[transitionMatch[1]] && layerSpec[transitionMatch[1]].transition) {\n        return validateSpec({\n            key,\n            value,\n            valueSpec: styleSpec.transition,\n            style,\n            styleSpec\n        });\n    }\n    const valueSpec = options.valueSpec || layerSpec[propertyKey];\n    if (!valueSpec) {\n        return [new ValidationError(key, value, `unknown property \"${propertyKey}\"`)];\n    }\n    let tokenMatch;\n    if (getType(value) === 'string' && supportsPropertyExpression(valueSpec) && !valueSpec.tokens && (tokenMatch = /^{([^}]+)}$/.exec(value))) {\n        return [new ValidationError(key, value, `\"${propertyKey}\" does not support interpolation syntax\\n` +\n                `Use an identity property function instead: \\`{ \"type\": \"identity\", \"property\": ${JSON.stringify(tokenMatch[1])} }\\`.`)];\n    }\n    const errors = [];\n    if (options.layerType === 'symbol') {\n        if (propertyKey === 'text-field' && style && !style.glyphs) {\n            errors.push(new ValidationError(key, value, 'use of \"text-field\" requires a style \"glyphs\" property'));\n        }\n        if (propertyKey === 'text-font' && isFunction$1(deepUnbundle(value)) && unbundle(value.type) === 'identity') {\n            errors.push(new ValidationError(key, value, '\"text-font\" does not support identity functions'));\n        }\n    }\n    return errors.concat(validateSpec({\n        key: options.key,\n        value,\n        valueSpec,\n        style,\n        styleSpec,\n        expressionContext: 'property',\n        propertyType,\n        propertyKey\n    }));\n}\n\nfunction validatePaintProperty(options) {\n    return validateProperty(options, 'paint');\n}\n\nfunction validateLayoutProperty(options) {\n    return validateProperty(options, 'layout');\n}\n\nfunction validateLayer(options) {\n    let errors = [];\n    const layer = options.value;\n    const key = options.key;\n    const style = options.style;\n    const styleSpec = options.styleSpec;\n    if (!layer.type && !layer.ref) {\n        errors.push(new ValidationError(key, layer, 'either \"type\" or \"ref\" is required'));\n    }\n    let type = unbundle(layer.type);\n    const ref = unbundle(layer.ref);\n    if (layer.id) {\n        const layerId = unbundle(layer.id);\n        for (let i = 0; i < options.arrayIndex; i++) {\n            const otherLayer = style.layers[i];\n            if (unbundle(otherLayer.id) === layerId) {\n                errors.push(new ValidationError(key, layer.id, `duplicate layer id \"${layer.id}\", previously used at line ${otherLayer.id.__line__}`));\n            }\n        }\n    }\n    if ('ref' in layer) {\n        ['type', 'source', 'source-layer', 'filter', 'layout'].forEach((p) => {\n            if (p in layer) {\n                errors.push(new ValidationError(key, layer[p], `\"${p}\" is prohibited for ref layers`));\n            }\n        });\n        let parent;\n        style.layers.forEach((layer) => {\n            if (unbundle(layer.id) === ref)\n                parent = layer;\n        });\n        if (!parent) {\n            errors.push(new ValidationError(key, layer.ref, `ref layer \"${ref}\" not found`));\n        }\n        else if (parent.ref) {\n            errors.push(new ValidationError(key, layer.ref, 'ref cannot reference another ref layer'));\n        }\n        else {\n            type = unbundle(parent.type);\n        }\n    }\n    else if (type !== 'background') {\n        if (!layer.source) {\n            errors.push(new ValidationError(key, layer, 'missing required property \"source\"'));\n        }\n        else {\n            const source = style.sources && style.sources[layer.source];\n            const sourceType = source && unbundle(source.type);\n            if (!source) {\n                errors.push(new ValidationError(key, layer.source, `source \"${layer.source}\" not found`));\n            }\n            else if (sourceType === 'vector' && type === 'raster') {\n                errors.push(new ValidationError(key, layer.source, `layer \"${layer.id}\" requires a raster source`));\n            }\n            else if (sourceType !== 'raster-dem' && type === 'hillshade') {\n                errors.push(new ValidationError(key, layer.source, `layer \"${layer.id}\" requires a raster-dem source`));\n            }\n            else if (sourceType === 'raster' && type !== 'raster') {\n                errors.push(new ValidationError(key, layer.source, `layer \"${layer.id}\" requires a vector source`));\n            }\n            else if (sourceType === 'vector' && !layer['source-layer']) {\n                errors.push(new ValidationError(key, layer, `layer \"${layer.id}\" must specify a \"source-layer\"`));\n            }\n            else if (sourceType === 'raster-dem' && type !== 'hillshade') {\n                errors.push(new ValidationError(key, layer.source, 'raster-dem source can only be used with layer type \\'hillshade\\'.'));\n            }\n            else if (type === 'line' && layer.paint && layer.paint['line-gradient'] &&\n                (sourceType !== 'geojson' || !source.lineMetrics)) {\n                errors.push(new ValidationError(key, layer, `layer \"${layer.id}\" specifies a line-gradient, which requires a GeoJSON source with \\`lineMetrics\\` enabled.`));\n            }\n        }\n    }\n    errors = errors.concat(validateObject({\n        key,\n        value: layer,\n        valueSpec: styleSpec.layer,\n        style: options.style,\n        styleSpec: options.styleSpec,\n        validateSpec: options.validateSpec,\n        objectElementValidators: {\n            '*'() {\n                return [];\n            },\n            // We don't want to enforce the spec's `\"requires\": true` for backward compatibility with refs;\n            // the actual requirement is validated above. See https://github.com/mapbox/mapbox-gl-js/issues/5772.\n            type() {\n                return options.validateSpec({\n                    key: `${key}.type`,\n                    value: layer.type,\n                    valueSpec: styleSpec.layer.type,\n                    style: options.style,\n                    styleSpec: options.styleSpec,\n                    validateSpec: options.validateSpec,\n                    object: layer,\n                    objectKey: 'type'\n                });\n            },\n            filter: validateFilter,\n            layout(options) {\n                return validateObject({\n                    layer,\n                    key: options.key,\n                    value: options.value,\n                    style: options.style,\n                    styleSpec: options.styleSpec,\n                    validateSpec: options.validateSpec,\n                    objectElementValidators: {\n                        '*'(options) {\n                            return validateLayoutProperty(extendBy({ layerType: type }, options));\n                        }\n                    }\n                });\n            },\n            paint(options) {\n                return validateObject({\n                    layer,\n                    key: options.key,\n                    value: options.value,\n                    style: options.style,\n                    styleSpec: options.styleSpec,\n                    validateSpec: options.validateSpec,\n                    objectElementValidators: {\n                        '*'(options) {\n                            return validatePaintProperty(extendBy({ layerType: type }, options));\n                        }\n                    }\n                });\n            }\n        }\n    }));\n    return errors;\n}\n\nfunction validateString(options) {\n    const value = options.value;\n    const key = options.key;\n    const type = getType(value);\n    if (type !== 'string') {\n        return [new ValidationError(key, value, `string expected, ${type} found`)];\n    }\n    return [];\n}\n\nfunction validateRasterDEMSource(options) {\n    var _a;\n    const sourceName = (_a = options.sourceName) !== null && _a !== undefined ? _a : '';\n    const rasterDEM = options.value;\n    const styleSpec = options.styleSpec;\n    const rasterDEMSpec = styleSpec.source_raster_dem;\n    const style = options.style;\n    let errors = [];\n    const rootType = getType(rasterDEM);\n    if (rasterDEM === undefined) {\n        return errors;\n    }\n    else if (rootType !== 'object') {\n        errors.push(new ValidationError('source_raster_dem', rasterDEM, `object expected, ${rootType} found`));\n        return errors;\n    }\n    const encoding = unbundle(rasterDEM.encoding);\n    const isCustomEncoding = encoding === 'custom';\n    const customEncodingKeys = ['redFactor', 'greenFactor', 'blueFactor', 'baseShift'];\n    const encodingName = options.value.encoding ? `\"${options.value.encoding}\"` : 'Default';\n    for (const key in rasterDEM) {\n        if (!isCustomEncoding && customEncodingKeys.includes(key)) {\n            errors.push(new ValidationError(key, rasterDEM[key], `In \"${sourceName}\": \"${key}\" is only valid when \"encoding\" is set to \"custom\". ${encodingName} encoding found`));\n        }\n        else if (rasterDEMSpec[key]) {\n            errors = errors.concat(options.validateSpec({\n                key,\n                value: rasterDEM[key],\n                valueSpec: rasterDEMSpec[key],\n                validateSpec: options.validateSpec,\n                style,\n                styleSpec\n            }));\n        }\n        else {\n            errors.push(new ValidationError(key, rasterDEM[key], `unknown property \"${key}\"`));\n        }\n    }\n    return errors;\n}\n\nconst objectElementValidators = {\n    promoteId: validatePromoteId\n};\nfunction validateSource(options) {\n    const value = options.value;\n    const key = options.key;\n    const styleSpec = options.styleSpec;\n    const style = options.style;\n    const validateSpec = options.validateSpec;\n    if (!value.type) {\n        return [new ValidationError(key, value, '\"type\" is required')];\n    }\n    const type = unbundle(value.type);\n    let errors;\n    switch (type) {\n        case 'vector':\n        case 'raster':\n            errors = validateObject({\n                key,\n                value,\n                valueSpec: styleSpec[`source_${type.replace('-', '_')}`],\n                style: options.style,\n                styleSpec,\n                objectElementValidators,\n                validateSpec,\n            });\n            return errors;\n        case 'raster-dem':\n            errors = validateRasterDEMSource({\n                sourceName: key,\n                value,\n                style: options.style,\n                styleSpec,\n                validateSpec,\n            });\n            return errors;\n        case 'geojson':\n            errors = validateObject({\n                key,\n                value,\n                valueSpec: styleSpec.source_geojson,\n                style,\n                styleSpec,\n                validateSpec,\n                objectElementValidators\n            });\n            if (value.cluster) {\n                for (const prop in value.clusterProperties) {\n                    const [operator, mapExpr] = value.clusterProperties[prop];\n                    const reduceExpr = typeof operator === 'string' ? [operator, ['accumulated'], ['get', prop]] : operator;\n                    errors.push(...validateExpression({\n                        key: `${key}.${prop}.map`,\n                        value: mapExpr,\n                        validateSpec,\n                        expressionContext: 'cluster-map'\n                    }));\n                    errors.push(...validateExpression({\n                        key: `${key}.${prop}.reduce`,\n                        value: reduceExpr,\n                        validateSpec,\n                        expressionContext: 'cluster-reduce'\n                    }));\n                }\n            }\n            return errors;\n        case 'video':\n            return validateObject({\n                key,\n                value,\n                valueSpec: styleSpec.source_video,\n                style,\n                validateSpec,\n                styleSpec\n            });\n        case 'image':\n            return validateObject({\n                key,\n                value,\n                valueSpec: styleSpec.source_image,\n                style,\n                validateSpec,\n                styleSpec\n            });\n        case 'canvas':\n            return [new ValidationError(key, null, 'Please use runtime APIs to add canvas sources, rather than including them in stylesheets.', 'source.canvas')];\n        default:\n            return validateEnum({\n                key: `${key}.type`,\n                value: value.type,\n                valueSpec: { values: ['vector', 'raster', 'raster-dem', 'geojson', 'video', 'image'] },\n                style,\n                validateSpec,\n                styleSpec\n            });\n    }\n}\nfunction validatePromoteId({ key, value }) {\n    if (getType(value) === 'string') {\n        return validateString({ key, value });\n    }\n    else {\n        const errors = [];\n        for (const prop in value) {\n            errors.push(...validateString({ key: `${key}.${prop}`, value: value[prop] }));\n        }\n        return errors;\n    }\n}\n\nfunction validateLight(options) {\n    const light = options.value;\n    const styleSpec = options.styleSpec;\n    const lightSpec = styleSpec.light;\n    const style = options.style;\n    let errors = [];\n    const rootType = getType(light);\n    if (light === undefined) {\n        return errors;\n    }\n    else if (rootType !== 'object') {\n        errors = errors.concat([new ValidationError('light', light, `object expected, ${rootType} found`)]);\n        return errors;\n    }\n    for (const key in light) {\n        const transitionMatch = key.match(/^(.*)-transition$/);\n        if (transitionMatch && lightSpec[transitionMatch[1]] && lightSpec[transitionMatch[1]].transition) {\n            errors = errors.concat(options.validateSpec({\n                key,\n                value: light[key],\n                valueSpec: styleSpec.transition,\n                validateSpec: options.validateSpec,\n                style,\n                styleSpec\n            }));\n        }\n        else if (lightSpec[key]) {\n            errors = errors.concat(options.validateSpec({\n                key,\n                value: light[key],\n                valueSpec: lightSpec[key],\n                validateSpec: options.validateSpec,\n                style,\n                styleSpec\n            }));\n        }\n        else {\n            errors = errors.concat([new ValidationError(key, light[key], `unknown property \"${key}\"`)]);\n        }\n    }\n    return errors;\n}\n\nfunction validateSky(options) {\n    const sky = options.value;\n    const styleSpec = options.styleSpec;\n    const skySpec = styleSpec.sky;\n    const style = options.style;\n    const rootType = getType(sky);\n    if (sky === undefined) {\n        return [];\n    }\n    else if (rootType !== 'object') {\n        return [new ValidationError('sky', sky, `object expected, ${rootType} found`)];\n    }\n    let errors = [];\n    for (const key in sky) {\n        if (skySpec[key]) {\n            errors = errors.concat(options.validateSpec({\n                key,\n                value: sky[key],\n                valueSpec: skySpec[key],\n                style,\n                styleSpec\n            }));\n        }\n        else {\n            errors = errors.concat([new ValidationError(key, sky[key], `unknown property \"${key}\"`)]);\n        }\n    }\n    return errors;\n}\n\nfunction validateTerrain(options) {\n    const terrain = options.value;\n    const styleSpec = options.styleSpec;\n    const terrainSpec = styleSpec.terrain;\n    const style = options.style;\n    let errors = [];\n    const rootType = getType(terrain);\n    if (terrain === undefined) {\n        return errors;\n    }\n    else if (rootType !== 'object') {\n        errors = errors.concat([new ValidationError('terrain', terrain, `object expected, ${rootType} found`)]);\n        return errors;\n    }\n    for (const key in terrain) {\n        if (terrainSpec[key]) {\n            errors = errors.concat(options.validateSpec({\n                key,\n                value: terrain[key],\n                valueSpec: terrainSpec[key],\n                validateSpec: options.validateSpec,\n                style,\n                styleSpec\n            }));\n        }\n        else {\n            errors = errors.concat([new ValidationError(key, terrain[key], `unknown property \"${key}\"`)]);\n        }\n    }\n    return errors;\n}\n\nfunction validateFormatted(options) {\n    if (validateString(options).length === 0) {\n        return [];\n    }\n    return validateExpression(options);\n}\n\nfunction validateImage(options) {\n    if (validateString(options).length === 0) {\n        return [];\n    }\n    return validateExpression(options);\n}\n\nfunction validatePadding(options) {\n    const key = options.key;\n    const value = options.value;\n    const type = getType(value);\n    if (type === 'array') {\n        if (value.length < 1 || value.length > 4) {\n            return [new ValidationError(key, value, `padding requires 1 to 4 values; ${value.length} values found`)];\n        }\n        const arrayElementSpec = {\n            type: 'number'\n        };\n        let errors = [];\n        for (let i = 0; i < value.length; i++) {\n            errors = errors.concat(options.validateSpec({\n                key: `${key}[${i}]`,\n                value: value[i],\n                validateSpec: options.validateSpec,\n                valueSpec: arrayElementSpec\n            }));\n        }\n        return errors;\n    }\n    else {\n        return validateNumber({\n            key,\n            value,\n            valueSpec: {}\n        });\n    }\n}\n\nfunction validateVariableAnchorOffsetCollection(options) {\n    const key = options.key;\n    const value = options.value;\n    const type = getType(value);\n    const styleSpec = options.styleSpec;\n    if (type !== 'array' || value.length < 1 || value.length % 2 !== 0) {\n        return [new ValidationError(key, value, 'variableAnchorOffsetCollection requires a non-empty array of even length')];\n    }\n    let errors = [];\n    for (let i = 0; i < value.length; i += 2) {\n        // Elements in even positions should be values from text-anchor enum\n        errors = errors.concat(validateEnum({\n            key: `${key}[${i}]`,\n            value: value[i],\n            valueSpec: styleSpec['layout_symbol']['text-anchor']\n        }));\n        // Elements in odd positions should be points (2-element numeric arrays)\n        errors = errors.concat(validateArray({\n            key: `${key}[${i + 1}]`,\n            value: value[i + 1],\n            valueSpec: {\n                length: 2,\n                value: 'number'\n            },\n            validateSpec: options.validateSpec,\n            style: options.style,\n            styleSpec\n        }));\n    }\n    return errors;\n}\n\nfunction validateSprite(options) {\n    let errors = [];\n    const sprite = options.value;\n    const key = options.key;\n    if (!Array.isArray(sprite)) {\n        return validateString({\n            key,\n            value: sprite\n        });\n    }\n    else {\n        const allSpriteIds = [];\n        const allSpriteURLs = [];\n        for (const i in sprite) {\n            if (sprite[i].id && allSpriteIds.includes(sprite[i].id))\n                errors.push(new ValidationError(key, sprite, `all the sprites' ids must be unique, but ${sprite[i].id} is duplicated`));\n            allSpriteIds.push(sprite[i].id);\n            if (sprite[i].url && allSpriteURLs.includes(sprite[i].url))\n                errors.push(new ValidationError(key, sprite, `all the sprites' URLs must be unique, but ${sprite[i].url} is duplicated`));\n            allSpriteURLs.push(sprite[i].url);\n            const pairSpec = {\n                id: {\n                    type: 'string',\n                    required: true,\n                },\n                url: {\n                    type: 'string',\n                    required: true,\n                }\n            };\n            errors = errors.concat(validateObject({\n                key: `${key}[${i}]`,\n                value: sprite[i],\n                valueSpec: pairSpec,\n                validateSpec: options.validateSpec,\n            }));\n        }\n        return errors;\n    }\n}\n\nfunction validateProjection(options) {\n    const projection = options.value;\n    const styleSpec = options.styleSpec;\n    const projectionSpec = styleSpec.projection;\n    const style = options.style;\n    const rootType = getType(projection);\n    if (projection === undefined) {\n        return [];\n    }\n    else if (rootType !== 'object') {\n        return [new ValidationError('projection', projection, `object expected, ${rootType} found`)];\n    }\n    let errors = [];\n    for (const key in projection) {\n        if (projectionSpec[key]) {\n            errors = errors.concat(options.validateSpec({\n                key,\n                value: projection[key],\n                valueSpec: projectionSpec[key],\n                style,\n                styleSpec\n            }));\n        }\n        else {\n            errors = errors.concat([new ValidationError(key, projection[key], `unknown property \"${key}\"`)]);\n        }\n    }\n    return errors;\n}\n\nfunction validateProjectionDefinition(options) {\n    const key = options.key;\n    let value = options.value;\n    value = value instanceof String ? value.valueOf() : value;\n    const type = getType(value);\n    if (type === 'array' && !isProjectionDefinitionValue(value) && !isPropertyValueSpecification(value)) {\n        return [new ValidationError(key, value, `projection expected, invalid array ${JSON.stringify(value)} found`)];\n    }\n    else if (!['array', 'string'].includes(type)) {\n        return [new ValidationError(key, value, `projection expected, invalid type \"${type}\" found`)];\n    }\n    return [];\n}\nfunction isPropertyValueSpecification(value) {\n    if (['interpolate', 'step', 'literal'].includes(value[0])) {\n        return true;\n    }\n    return false;\n}\nfunction isProjectionDefinitionValue(value) {\n    return Array.isArray(value) &&\n        value.length === 3 &&\n        typeof value[0] === 'string' &&\n        typeof value[1] === 'string' &&\n        typeof value[2] === 'number';\n}\n\nconst VALIDATORS = {\n    '*'() {\n        return [];\n    },\n    'array': validateArray,\n    'boolean': validateBoolean,\n    'number': validateNumber,\n    'color': validateColor,\n    'constants': validateConstants,\n    'enum': validateEnum,\n    'filter': validateFilter,\n    'function': validateFunction,\n    'layer': validateLayer,\n    'object': validateObject,\n    'source': validateSource,\n    'light': validateLight,\n    'sky': validateSky,\n    'terrain': validateTerrain,\n    'projection': validateProjection,\n    'projectionDefinition': validateProjectionDefinition,\n    'string': validateString,\n    'formatted': validateFormatted,\n    'resolvedImage': validateImage,\n    'padding': validatePadding,\n    'variableAnchorOffsetCollection': validateVariableAnchorOffsetCollection,\n    'sprite': validateSprite,\n};\n/**\n * Main recursive validation function used internally.\n * You should use `validateStyleMin` in the browser or `validateStyle` in node env.\n * @param options - the options object\n * @param options.key - string representing location of validation in style tree. Used only\n * for more informative error reporting.\n * @param options.value - current value from style being evaluated. May be anything from a\n * high level object that needs to be descended into deeper or a simple\n * scalar value.\n * @param options.valueSpec - current spec being evaluated. Tracks value.\n * @param options.styleSpec - current full spec being evaluated.\n * @param options.validateSpec - the validate function itself\n * @param options.style - the style object\n * @param options.objectElementValidators - optional object of functions that will be called\n * @returns an array of errors, or an empty array if no errors are found.\n */\nfunction validate(options) {\n    const value = options.value;\n    const valueSpec = options.valueSpec;\n    const styleSpec = options.styleSpec;\n    options.validateSpec = validate;\n    if (valueSpec.expression && isFunction$1(unbundle(value))) {\n        return validateFunction(options);\n    }\n    else if (valueSpec.expression && isExpression(deepUnbundle(value))) {\n        return validateExpression(options);\n    }\n    else if (valueSpec.type && VALIDATORS[valueSpec.type]) {\n        return VALIDATORS[valueSpec.type](options);\n    }\n    else {\n        const valid = validateObject(extendBy({}, options, {\n            valueSpec: valueSpec.type ? styleSpec[valueSpec.type] : valueSpec\n        }));\n        return valid;\n    }\n}\n\nfunction validateGlyphsUrl(options) {\n    const value = options.value;\n    const key = options.key;\n    const errors = validateString(options);\n    if (errors.length)\n        return errors;\n    if (value.indexOf('{fontstack}') === -1) {\n        errors.push(new ValidationError(key, value, '\"glyphs\" url must include a \"{fontstack}\" token'));\n    }\n    if (value.indexOf('{range}') === -1) {\n        errors.push(new ValidationError(key, value, '\"glyphs\" url must include a \"{range}\" token'));\n    }\n    return errors;\n}\n\n/**\n * Validate a MapLibre style against the style specification.\n * Use this when running in the browser.\n *\n * @param style - The style to be validated.\n * @param styleSpec - The style specification to validate against.\n * If omitted, the latest style spec is used.\n * @returns an array of errors, or an empty array if no errors are found.\n * @example\n *   const validate = require('@maplibre/maplibre-gl-style-spec/').validateStyleMin;\n *   const errors = validate(style);\n */\nfunction validateStyleMin(style, styleSpec = v8Spec) {\n    let errors = [];\n    errors = errors.concat(validate({\n        key: '',\n        value: style,\n        valueSpec: styleSpec.$root,\n        styleSpec,\n        style,\n        validateSpec: validate,\n        objectElementValidators: {\n            glyphs: validateGlyphsUrl,\n            '*'() {\n                return [];\n            }\n        }\n    }));\n    if (style['constants']) {\n        errors = errors.concat(validateConstants({\n            key: 'constants',\n            value: style['constants'],\n            style,\n            styleSpec,\n            validateSpec: validate,\n        }));\n    }\n    return sortErrors(errors);\n}\nvalidateStyleMin.source = wrapCleanErrors(injectValidateSpec(validateSource));\nvalidateStyleMin.sprite = wrapCleanErrors(injectValidateSpec(validateSprite));\nvalidateStyleMin.glyphs = wrapCleanErrors(injectValidateSpec(validateGlyphsUrl));\nvalidateStyleMin.light = wrapCleanErrors(injectValidateSpec(validateLight));\nvalidateStyleMin.sky = wrapCleanErrors(injectValidateSpec(validateSky));\nvalidateStyleMin.terrain = wrapCleanErrors(injectValidateSpec(validateTerrain));\nvalidateStyleMin.layer = wrapCleanErrors(injectValidateSpec(validateLayer));\nvalidateStyleMin.filter = wrapCleanErrors(injectValidateSpec(validateFilter));\nvalidateStyleMin.paintProperty = wrapCleanErrors(injectValidateSpec(validatePaintProperty));\nvalidateStyleMin.layoutProperty = wrapCleanErrors(injectValidateSpec(validateLayoutProperty));\nfunction injectValidateSpec(validator) {\n    return function (options) {\n        return validator({\n            ...options,\n            validateSpec: validate,\n        });\n    };\n}\nfunction sortErrors(errors) {\n    return [].concat(errors).sort((a, b) => {\n        return a.line - b.line;\n    });\n}\nfunction wrapCleanErrors(inner) {\n    return function (...args) {\n        return sortErrors(inner.apply(this, args));\n    };\n}\n\n// Note: This regex matches even invalid JSON strings, but since we’re\n// working on the output of `JSON.stringify` we know that only valid strings\n// are present (unless the user supplied a weird `options.indent` but in\n// that case we don’t care since the output would be invalid anyway).\nconst stringOrChar = /(\"(?:[^\\\\\"]|\\\\.)*\")|[:,]/g;\n\nfunction stringify(passedObj, options = {}) {\n  const indent = JSON.stringify(\n    [1],\n    undefined,\n    options.indent === undefined ? 2 : options.indent\n  ).slice(2, -3);\n\n  const maxLength =\n    indent === \"\"\n      ? Infinity\n      : options.maxLength === undefined\n      ? 80\n      : options.maxLength;\n\n  let { replacer } = options;\n\n  return (function _stringify(obj, currentIndent, reserved) {\n    if (obj && typeof obj.toJSON === \"function\") {\n      obj = obj.toJSON();\n    }\n\n    const string = JSON.stringify(obj, replacer);\n\n    if (string === undefined) {\n      return string;\n    }\n\n    const length = maxLength - currentIndent.length - reserved;\n\n    if (string.length <= length) {\n      const prettified = string.replace(\n        stringOrChar,\n        (match, stringLiteral) => {\n          return stringLiteral || `${match} `;\n        }\n      );\n      if (prettified.length <= length) {\n        return prettified;\n      }\n    }\n\n    if (replacer != null) {\n      obj = JSON.parse(string);\n      replacer = undefined;\n    }\n\n    if (typeof obj === \"object\" && obj !== null) {\n      const nextIndent = currentIndent + indent;\n      const items = [];\n      let index = 0;\n      let start;\n      let end;\n\n      if (Array.isArray(obj)) {\n        start = \"[\";\n        end = \"]\";\n        const { length } = obj;\n        for (; index < length; index++) {\n          items.push(\n            _stringify(obj[index], nextIndent, index === length - 1 ? 0 : 1) ||\n              \"null\"\n          );\n        }\n      } else {\n        start = \"{\";\n        end = \"}\";\n        const keys = Object.keys(obj);\n        const { length } = keys;\n        for (; index < length; index++) {\n          const key = keys[index];\n          const keyPart = `${JSON.stringify(key)}: `;\n          const value = _stringify(\n            obj[key],\n            nextIndent,\n            keyPart.length + (index === length - 1 ? 0 : 1)\n          );\n          if (value !== undefined) {\n            items.push(keyPart + value);\n          }\n        }\n      }\n\n      if (items.length > 0) {\n        return [start, indent + items.join(`,\\n${nextIndent}`), end].join(\n          `\\n${currentIndent}`\n        );\n      }\n    }\n\n    return string;\n  })(passedObj, \"\", 0);\n}\n\nfunction sortKeysBy(obj, reference) {\n    const result = {};\n    for (const key in reference) {\n        if (obj[key] !== undefined) {\n            result[key] = obj[key];\n        }\n    }\n    for (const key in obj) {\n        if (result[key] === undefined) {\n            result[key] = obj[key];\n        }\n    }\n    return result;\n}\n/**\n * Format a MapLibre Style.  Returns a stringified style with its keys\n * sorted in the same order as the reference style.\n *\n * The optional `space` argument is passed to\n * [`JSON.stringify`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify)\n * to generate formatted output.\n *\n * If `space` is unspecified, a default of `2` spaces will be used.\n *\n * @private\n * @param {Object} style a MapLibre Style\n * @param {number} [space] space argument to pass to `JSON.stringify`\n * @returns {string} stringified formatted JSON\n * @example\n * var fs = require('fs');\n * var format = require('maplibre-gl-style-spec').format;\n * var style = fs.readFileSync('./source.json', 'utf8');\n * fs.writeFileSync('./dest.json', format(style));\n * fs.writeFileSync('./dest.min.json', format(style, 0));\n */\nfunction format(style, space = 2) {\n    style = sortKeysBy(style, v8Spec.$root);\n    if (style.layers) {\n        style.layers = style.layers.map((layer) => sortKeysBy(layer, v8Spec.layer));\n    }\n    return stringify(style, { indent: space });\n}\n\nfunction eachLayout(layer, callback) {\n    for (const k in layer) {\n        if (k.indexOf('layout') === 0) {\n            callback(layer[k], k);\n        }\n    }\n}\nfunction eachPaint(layer, callback) {\n    for (const k in layer) {\n        if (k.indexOf('paint') === 0) {\n            callback(layer[k], k);\n        }\n    }\n}\nfunction resolveConstant(style, value) {\n    if (typeof value === 'string' && value[0] === '@') {\n        return resolveConstant(style, style.constants[value]);\n    }\n    else {\n        return value;\n    }\n}\nfunction isFunction(value) {\n    return Array.isArray(value.stops);\n}\nfunction renameProperty(obj, from, to) {\n    obj[to] = obj[from];\n    delete obj[from];\n}\nfunction migrateV8(style) {\n    style.version = 8;\n    // Rename properties, reverse coordinates in source and layers\n    eachSource(style, (source) => {\n        if (source.type === 'video' && source['url'] !== undefined) {\n            renameProperty(source, 'url', 'urls');\n        }\n        if (source.type === 'video') {\n            source.coordinates.forEach((coord) => {\n                return coord.reverse();\n            });\n        }\n    });\n    eachLayer(style, (layer) => {\n        eachLayout(layer, (layout) => {\n            if (layout['symbol-min-distance'] !== undefined) {\n                renameProperty(layout, 'symbol-min-distance', 'symbol-spacing');\n            }\n        });\n        eachPaint(layer, (paint) => {\n            if (paint['background-image'] !== undefined) {\n                renameProperty(paint, 'background-image', 'background-pattern');\n            }\n            if (paint['line-image'] !== undefined) {\n                renameProperty(paint, 'line-image', 'line-pattern');\n            }\n            if (paint['fill-image'] !== undefined) {\n                renameProperty(paint, 'fill-image', 'fill-pattern');\n            }\n        });\n    });\n    // Inline Constants\n    eachProperty(style, { paint: true, layout: true }, (property) => {\n        const value = resolveConstant(style, property.value);\n        if (isFunction(value)) {\n            value.stops.forEach((stop) => {\n                stop[1] = resolveConstant(style, stop[1]);\n            });\n        }\n        property.set(value);\n    });\n    delete style['constants'];\n    eachLayer(style, (layer) => {\n        // get rid of text-max-size, icon-max-size\n        // turn text-size, icon-size into layout properties\n        // https://github.com/mapbox/mapbox-gl-style-spec/issues/255\n        eachLayout(layer, (layout) => {\n            delete layout['text-max-size'];\n            delete layout['icon-max-size'];\n        });\n        eachPaint(layer, (paint) => {\n            if (paint['text-size']) {\n                if (!layer.layout)\n                    layer.layout = {};\n                layer.layout['text-size'] = paint['text-size'];\n                delete paint['text-size'];\n            }\n            if (paint['icon-size']) {\n                if (!layer.layout)\n                    layer.layout = {};\n                layer.layout['icon-size'] = paint['icon-size'];\n                delete paint['icon-size'];\n            }\n        });\n    });\n    function migrateFontStack(font) {\n        function splitAndTrim(string) {\n            return string.split(',').map((s) => {\n                return s.trim();\n            });\n        }\n        if (Array.isArray(font)) {\n            // Assume it's a previously migrated font-array.\n            return font;\n        }\n        else if (typeof font === 'string') {\n            return splitAndTrim(font);\n        }\n        else if (typeof font === 'object') {\n            font.stops.forEach((stop) => {\n                stop[1] = splitAndTrim(stop[1]);\n            });\n            return font;\n        }\n        else {\n            throw new Error('unexpected font value');\n        }\n    }\n    eachLayer(style, (layer) => {\n        eachLayout(layer, (layout) => {\n            if (layout['text-font']) {\n                layout['text-font'] = migrateFontStack(layout['text-font']);\n            }\n        });\n    });\n    // Reverse order of symbol layers. This is an imperfect migration.\n    //\n    // The order of a symbol layer in the layers list affects two things:\n    // - how it is drawn relative to other layers (like oneway arrows below bridges)\n    // - the placement priority compared to other layers\n    //\n    // It's impossible to reverse the placement priority without breaking the draw order\n    // in some cases. This migration only reverses the order of symbol layers that\n    // are above all other types of layers.\n    //\n    // Symbol layers that are at the top of the map preserve their priority.\n    // Symbol layers that are below another type (line, fill) of layer preserve their draw order.\n    let firstSymbolLayer = 0;\n    for (let i = style.layers.length - 1; i >= 0; i--) {\n        const layer = style.layers[i];\n        if (layer.type !== 'symbol') {\n            firstSymbolLayer = i + 1;\n            break;\n        }\n    }\n    const symbolLayers = style.layers.splice(firstSymbolLayer);\n    symbolLayers.reverse();\n    style.layers = style.layers.concat(symbolLayers);\n    return style;\n}\n\n/**\n * Migrate the given style object in place to use expressions. Specifically,\n * this will convert (a) \"stop\" functions, and (b) legacy filters to their\n * expression equivalents.\n * @param style The style object to migrate.\n * @returns The migrated style object.\n */\nfunction expressions(style) {\n    const converted = [];\n    eachLayer(style, (layer) => {\n        if (layer.filter) {\n            layer.filter = convertFilter(layer.filter);\n        }\n    });\n    eachProperty(style, { paint: true, layout: true }, ({ path, value, reference, set }) => {\n        if (isExpression(value))\n            return;\n        if (typeof value === 'object' && !Array.isArray(value)) {\n            set(convertFunction(value, reference));\n            converted.push(path.join('.'));\n        }\n        else if (reference.tokens && typeof value === 'string') {\n            set(convertTokenString(value));\n        }\n    });\n    return style;\n}\n\n/**\n * Migrate color style values to supported format.\n *\n * @param colorToMigrate Color value to migrate, could be a string or an expression.\n * @returns Color style value in supported format.\n */\nfunction migrateColors(colorToMigrate) {\n    return JSON.parse(migrateHslColors(JSON.stringify(colorToMigrate)));\n}\n/**\n * Created to migrate from colors supported by the former CSS color parsing\n * library `csscolorparser` but not compliant with the CSS Color specification,\n * like `hsl(900, 0.15, 90%)`.\n *\n * @param colorToMigrate Serialized color style value.\n * @returns A serialized color style value in which all non-standard hsl color values\n * have been converted to a format that complies with the CSS Color specification.\n *\n * @example\n * migrateHslColors('\"hsl(900, 0.15, 90%)\"'); // returns '\"hsl(900, 15%, 90%)\"'\n * migrateHslColors('\"hsla(900, .15, .9)\"'); // returns '\"hsl(900, 15%, 90%)\"'\n * migrateHslColors('\"hsl(900, 15%, 90%)\"'); // returns '\"hsl(900, 15%, 90%)\"' - no changes\n */\nfunction migrateHslColors(colorToMigrate) {\n    return colorToMigrate.replace(/\"hsla?\\((.+?)\\)\"/gi, (match, hslArgs) => {\n        const argsMatch = hslArgs.match(/^(.+?)\\s*,\\s*(.+?)\\s*,\\s*(.+?)(?:\\s*,\\s*(.+))?$/i);\n        if (argsMatch) {\n            let [h, s, l, a] = argsMatch.slice(1);\n            [s, l] = [s, l].map(v => v.endsWith('%') ? v : `${parseFloat(v) * 100}%`);\n            return `\"hsl${typeof a === 'string' ? 'a' : ''}(${[h, s, l, a].filter(Boolean).join(',')})\"`;\n        }\n        return match;\n    });\n}\n\n/**\n * Migrate a Mapbox/MapLibre GL Style to the latest version.\n *\n * @param style - a MapLibre Style\n * @returns a migrated style\n * @example\n * const fs = require('fs');\n * const migrate = require('@maplibre/maplibre-gl-style-spec').migrate;\n * const style = fs.readFileSync('./style.json', 'utf8');\n * fs.writeFileSync('./style.json', JSON.stringify(migrate(style)));\n */\nfunction migrate(style) {\n    let migrated = false;\n    if (style.version === 7) {\n        style = migrateV8(style);\n        migrated = true;\n    }\n    if (style.version === 8) {\n        migrated = !!expressions(style);\n        migrated = true;\n    }\n    eachProperty(style, { paint: true, layout: true }, ({ value, reference, set }) => {\n        if (reference.type === 'color') {\n            set(migrateColors(value));\n        }\n    });\n    if (!migrated) {\n        throw new Error(`Cannot migrate from ${style.version}`);\n    }\n    return style;\n}\n\nconst v8 = v8Spec;\nconst expression = {\n    StyleExpression,\n    StylePropertyFunction,\n    ZoomConstantExpression,\n    ZoomDependentExpression,\n    createExpression,\n    createPropertyExpression,\n    isExpression,\n    isExpressionFilter,\n    isZoomExpression,\n    normalizePropertyExpression,\n};\nconst styleFunction = {\n    convertFunction,\n    createFunction,\n    isFunction: isFunction$1\n};\nconst visit = { eachLayer, eachProperty, eachSource };\n\nexport { Color, ColorType, CompoundExpression, EvaluationContext, FormatExpression, Formatted, FormattedSection, FormattedType, Interpolate, Literal, NullType, Padding, ParsingError, ProjectionDefinition, ProjectionDefinitionType, ResolvedImage, Step, StyleExpression, StylePropertyFunction, ValidationError, VariableAnchorOffsetCollection, ZoomConstantExpression, ZoomDependentExpression, classifyRings, convertFilter, convertFunction, createExpression, createFunction, createPropertyExpression, derefLayers, diff, emptyStyle, expression, expressions$1 as expressions, featureFilter, format, styleFunction as function, groupByLayout, interpolateFactory as interpolates, isExpression, isFunction$1 as isFunction, isZoomExpression, v8Spec as latest, migrate, normalizePropertyExpression, supportsPropertyExpression, typeToString as toString, typeOf, v8, validate, validateStyleMin, visit };\n//# sourceMappingURL=index.mjs.map\n","var fontWeights = {\n  thin: 100,\n  hairline: 100,\n  'ultra-light': 200,\n  'extra-light': 200,\n  light: 300,\n  book: 300,\n  regular: 400,\n  normal: 400,\n  plain: 400,\n  roman: 400,\n  standard: 400,\n  medium: 500,\n  'semi-bold': 600,\n  'demi-bold': 600,\n  bold: 700,\n  'extra-bold': 800,\n  'ultra-bold': 800,\n  heavy: 900,\n  black: 900,\n  'heavy-black': 900,\n  fat: 900,\n  poster: 900,\n  'ultra-black': 950,\n  'extra-black': 950\n};\nvar sp = ' ';\nvar italicRE = /(italic|oblique)$/i;\n\nvar fontCache = {};\n\n/**\n * @param {string|Array<string>} fonts Mapbox GL Style fontstack or single font, e.g. `['Open Sans Regular', 'Arial Unicode MS Regular']` or `'Open Sans Regular'`.\n * @param {number} size Font size in pixels.\n * @param {string|number} [lineHeight] Line height as css line-height.\n * @returns {string} CSS font definition, e.g. `'normal 400 16px/1.2 \"Open Sans\"'`.\n */\nexport default function(fonts, size, lineHeight) {\n  var cssData = fontCache[fonts];\n  if (!cssData) {\n    if (!Array.isArray(fonts)) {\n      fonts = [fonts];\n    }\n    var weight = 400;\n    var style = 'normal';\n    var fontFamilies = [];\n    var haveWeight, haveStyle;\n    for (var i = 0, ii = fonts.length; i < ii; ++i) {\n      var font = fonts[i];\n      var parts = font.split(' ');\n      var maybeWeight = parts[parts.length - 1].toLowerCase();\n      if (maybeWeight == 'normal' || maybeWeight == 'italic' || maybeWeight == 'oblique') {\n        style = haveStyle ? style : maybeWeight;\n        haveStyle = true;\n        parts.pop();\n        maybeWeight = parts[parts.length - 1].toLowerCase();\n      } else if (italicRE.test(maybeWeight)) {\n        maybeWeight = maybeWeight.replace(italicRE, '');\n        style = haveStyle ? style : parts[parts.length - 1].replace(maybeWeight, '');\n        haveStyle = true;\n      }\n      for (var w in fontWeights) {\n        var previousPart = parts.length > 1 ? parts[parts.length - 2].toLowerCase() : '';\n        if (maybeWeight == w || maybeWeight == w.replace('-', '') || previousPart + '-' + maybeWeight == w) {\n          weight = haveWeight ? weight : fontWeights[w];\n          parts.pop();\n          if (previousPart && w.startsWith(previousPart)) {\n            parts.pop();\n          }\n          break;\n        }\n      }\n      if (!haveWeight && typeof maybeWeight == 'number') {\n        weight = maybeWeight;\n        haveWeight = true;\n      }\n      var fontFamily = parts.join(sp)\n        .replace('Klokantech Noto Sans', 'Noto Sans')\n        .replace('DIN Pro', 'Barlow')\n        .replace('Arial Unicode MS', 'Arial');\n      if (fontFamily.indexOf(sp) !== -1) {\n        fontFamily = '\"' + fontFamily + '\"';\n      }\n      fontFamilies.push(fontFamily);\n    }\n    // CSS font property: font-style font-weight font-size/line-height font-family\n    cssData = fontCache[fonts] = [style, weight, fontFamilies];\n  }\n  return cssData[0] + sp + cssData[1] + sp + size + 'px' + (lineHeight ? '/' + lineHeight : '') + sp + cssData[2];\n}\n","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove',\n};\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n\n/**\n * @typedef {'propertychange'} Types\n */\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, comparator) {\n  let mid, cmp;\n  comparator = comparator || ascending;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function sorting arrays in ascending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function ascending(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * Compare function sorting arrays in descending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is greater than, equal to, or less than the second.\n */\nexport function descending(a, b) {\n  return a < b ? 1 : a > b ? -1 : 0;\n}\n\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n\n/**\n * @param {Array<number>} arr Array in descending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  if (arr[0] <= target) {\n    return 0;\n  }\n\n  const n = arr.length;\n  if (target <= arr[n - 1]) {\n    return n - 1;\n  }\n\n  if (typeof direction === 'function') {\n    for (let i = 1; i < n; ++i) {\n      const candidate = arr[i];\n      if (candidate === target) {\n        return i;\n      }\n      if (candidate < target) {\n        if (direction(target, arr[i - 1], candidate) > 0) {\n          return i - 1;\n        }\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction > 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] < target) {\n        return i - 1;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction < 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] <= target) {\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  for (let i = 1; i < n; ++i) {\n    if (arr[i] == target) {\n      return i;\n    }\n    if (arr[i] < target) {\n      if (arr[i - 1] - target < target - arr[i]) {\n        return i - 1;\n      }\n      return i;\n    }\n  }\n  return n - 1;\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array<any>|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array<any>|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preserved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n * @deprecated\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [func] Comparison function.\n * @param {boolean} [strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, func, strict) {\n  const compare = func || ascending;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (strict && res === 0));\n  });\n}\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>|undefined} */\n  let lastArgs;\n\n  let lastThis;\n\n  /**\n   * @this {*} Only need to know if `this` changed, don't care what type\n   * @return {ReturnType} Memoized value\n   */\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!lastArgs || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n\n/**\n * @template T\n * @param {function(): (T | Promise<T>)} getter A function that returns a value or a promise for a value.\n * @return {Promise<T>} A promise for the value.\n */\nexport function toPromise(getter) {\n  function promiseGetter() {\n    let value;\n    try {\n      value = getter();\n    } catch (err) {\n      return Promise.reject(err);\n    }\n    if (value instanceof Promise) {\n      return value;\n    }\n    return Promise.resolve(value);\n  }\n  return promiseGetter();\n}\n","/**\n * @module ol/obj\n */\n\n/**\n * Removes all properties from an object.\n * @param {Object<string, unknown>} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\nimport Event from './Event.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [target] Default event target for dispatched events.\n   */\n  constructor(target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = target;\n\n    /**\n     * @private\n     * @type {Object<string, number>|null}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>|null}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>|null}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (!listenersForType.includes(listener)) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    const isString = typeof event === 'string';\n    const type = isString ? event : event.type;\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n\n    const evt = isString ? new Event(event) : /** @type {Event} */ (event);\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const dispatching = this.dispatching_ || (this.dispatching_ = {});\n    const pendingRemovals =\n      this.pendingRemovals_ || (this.pendingRemovals_ = {});\n    if (!(type in dispatching)) {\n      dispatching[type] = 0;\n      pendingRemovals[type] = 0;\n    }\n    ++dispatching[type];\n    let propagate;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      if ('handleEvent' in listeners[i]) {\n        propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n          listeners[i]\n        ).handleEvent(evt);\n      } else {\n        propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n          listeners[i]\n        ).call(this, evt);\n      }\n      if (propagate === false || evt.propagationStopped) {\n        propagate = false;\n        break;\n      }\n    }\n    if (--dispatching[type] === 0) {\n      let pr = pendingRemovals[type];\n      delete pendingRemovals[type];\n      while (pr--) {\n        this.removeEventListener(type, VOID);\n      }\n      delete dispatching[type];\n    }\n    return propagate;\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return type\n      ? type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    if (!this.listeners_) {\n      return;\n    }\n    const listeners = this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n      if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n        // make listener a no-op, and remove later in #dispatchEvent()\n        listeners[index] = VOID;\n        ++this.pendingRemovals_[type];\n      } else {\n        listeners.splice(index, 1);\n        if (listeners.length === 0) {\n          delete this.listeners_[type];\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable.unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, thisArg, once) {\n  if (once) {\n    const originalListener = listener;\n    /**\n     * @param {Event|import('./events/Event.js').default} event The event\n     * @return {void|boolean} When the function returns `false`, event propagation will stop.\n     * @this {typeof target}\n     */\n    listener = function (event) {\n      target.removeEventListener(type, listener);\n      return originalListener.call(thisArg ?? this, event);\n    };\n  } else if (thisArg && thisArg !== target) {\n    listener = listener.bind(thisArg);\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, thisArg) {\n  return listen(target, type, listener, thisArg, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/Observable\n */\nimport EventType from './events/EventType.js';\nimport EventTarget from './events/Target.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type, listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return extends void ? void : Return[]} CombinedOnSignature\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/***\n * @template Return\n * @typedef {OnSignature<EventTypes, import(\"./events/Event.js\").default, Return> & CombinedOnSignature<EventTypes, Return>} ObservableOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    this.on =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onInternal\n      );\n\n    this.once =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onceInternal\n      );\n\n    this.un = /** @type {ObservableOnSignature<void>} */ (this.unInternal);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    }\n    return listen(this, /** @type {string} */ (type), listener);\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/util\n */\n\n/**\n * @return {never} Any return.\n */\nexport function abstract() {\n  throw new Error('Unimplemented abstract method.');\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = 'latest';\n","/**\n * @module ol/Object\n */\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport Event from './events/Event.js';\nimport {isEmpty} from './obj.js';\nimport {getUid} from './util.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable~Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [values] An object with key-value pairs.\n   */\n  constructor(values) {\n    super();\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ObjectOnSignature<void>}\n     */\n    this.un;\n\n    // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>|null}\n     */\n    this.values_ = null;\n\n    if (values !== undefined) {\n      this.setProperties(values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && Object.assign({}, this.values_)) || {};\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>?} Object.\n   */\n  getPropertiesInternal() {\n    return this.values_;\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = `change:${key}`;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  addChangeListener(key, listener) {\n    this.addEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  removeChangeListener(key, listener) {\n    this.removeEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, silent) {\n    for (const key in values) {\n      this.set(key, values[key], silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    Object.assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\nexport default BaseObject;\n","/**\n * @module ol/Collection\n */\nimport CollectionEventType from './CollectionEventType.js';\nimport BaseObject from './Object.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n * @template T\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {T} element Element.\n   * @param {number} index The index of the added or removed element.\n   */\n  constructor(type, element, index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {T}\n     * @api\n     */\n    this.element = element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = index;\n  }\n}\n\n/***\n * @template T\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:length', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'add'|'remove', CollectionEvent<T>, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types|\n *     'change:length'|'add'|'remove',Return>} CollectionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>} [array] Array.\n   * @param {Options} [options] Collection options.\n   */\n  constructor(array, options) {\n    super();\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {CollectionOnSignature<T, void>}\n     */\n    this.un;\n\n    options = options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = array ?? [];\n\n    if (this.unique_) {\n      for (let i = 1, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (index < 0 || index > this.getLength()) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index),\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    if (index < 0 || index >= this.getLength()) {\n      return undefined;\n    }\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      ),\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index >= n) {\n      this.insertAt(index, elem);\n      return;\n    }\n    if (index < 0) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem, index);\n    }\n    const prev = this.array_[index];\n    this.array_[index] = elem;\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      ),\n    );\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      ),\n    );\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number} [except] Optional index to ignore.\n   */\n  assertUnique_(elem, except) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      if (array[i] === elem && i !== except) {\n        throw new Error('Duplicate item added to a unique collection');\n      }\n    }\n  }\n}\n\nexport default Collection;\n","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {?import(\"./Map.js\").FrameState} [frameState] Frame state.\n   */\n  constructor(type, map, frameState) {\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./Map.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./Map.js\").FrameState}\n     * @api\n     */\n    this.frameState = frameState !== undefined ? frameState : null;\n  }\n}\n\nexport default MapEvent;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map browser event.\n * @template {PointerEvent|KeyboardEvent|WheelEvent} [EVENT=PointerEvent|KeyboardEvent|WheelEvent]\n */\nclass MapBrowserEvent extends MapEvent {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean} [dragging] Is the map currently being dragged?\n   * @param {import(\"./Map.js\").FrameState} [frameState] Frame state.\n   * @param {Array<PointerEvent>} [activePointers] Active pointers.\n   */\n  constructor(type, map, originalEvent, dragging, frameState, activePointers) {\n    super(type, map, frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n    this.originalEvent = originalEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     * @private\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     * @private\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = dragging !== undefined ? dragging : false;\n\n    /**\n     * @type {Array<PointerEvent>|undefined}\n     */\n    this.activePointers = activePointers;\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @api\n   * @override\n   */\n  preventDefault() {\n    super.preventDefault();\n    if ('preventDefault' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).preventDefault();\n    }\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @api\n   * @override\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    if ('stopPropagation' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\n    }\n  }\n}\n\nexport default MapBrowserEvent;\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n\n/***\n * @typedef {'singleclick'|'click'|'dblclick'|'pointerdrag'|'pointermove'} Types\n */\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.includes('safari') && !ua.includes('chrom');\n\n/**\n * https://bugs.webkit.org/show_bug.cgi?id=237906\n * @type {boolean}\n */\nexport const SAFARI_BUG_237906 =\n  SAFARI &&\n  (ua.includes('version/15.4') ||\n    /cpu (os|iphone os) 15_4 like mac os x/.test(ua));\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.includes('webkit') && !ua.includes('edge');\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.includes('macintosh');\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * createImageBitmap() is supported.\n * @type {boolean}\n */\nexport const CREATE_IMAGE_BITMAP = typeof createImageBitmap === 'function';\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    // @ts-ignore Ignore invalid event type '_'\n    window.addEventListener('_', null, options);\n    // @ts-ignore Ignore invalid event type '_'\n    window.removeEventListener('_', null, options);\n  } catch {\n    // passive not supported\n  }\n  return passive;\n})();\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/MapBrowserEventHandler\n */\n\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport EventType from './events/EventType.js';\nimport Target from './events/Target.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {PASSIVE_EVENT_LISTENERS} from './has.js';\nimport PointerEventType from './pointer/EventType.js';\n\nclass MapBrowserEventHandler extends Target {\n  /**\n   * @param {import(\"./Map.js\").default} map The map with the viewport to listen to events on.\n   * @param {number} [moveTolerance] The minimal distance the pointer must travel to trigger a move.\n   */\n  constructor(map, moveTolerance) {\n    super(map);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./Map.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {ReturnType<typeof setTimeout>}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n     * @type {boolean}\n     */\n    this.emulateClicks_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance === undefined ? 1 : moveTolerance;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {PointerEvent|null}\n     * @private\n     */\n    this.down_ = null;\n\n    const element = this.map_.getViewport();\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @private\n     */\n    this.activePointers_ = [];\n\n    /**\n     * @type {!Object<number, Event>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    /**\n     * @private\n     */\n    this.element_ = element;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_,\n      this,\n    );\n\n    /**\n     * @type {PointerEvent}\n     * @private\n     */\n    this.originalPointerMoveEvent_;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERMOVE,\n      this.relayMoveEvent_,\n      this,\n    );\n\n    /**\n     * @private\n     */\n    this.boundHandleTouchMove_ = this.handleTouchMove_.bind(this);\n\n    this.element_.addEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false,\n    );\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  emulateClick_(pointerEvent) {\n    let newEvent = new MapBrowserEvent(\n      MapBrowserEventType.CLICK,\n      this.map_,\n      pointerEvent,\n    );\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserEvent(\n        MapBrowserEventType.DBLCLICK,\n        this.map_,\n        pointerEvent,\n      );\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(() => {\n        this.clickTimeoutId_ = undefined;\n        const newEvent = new MapBrowserEvent(\n          MapBrowserEventType.SINGLECLICK,\n          this.map_,\n          pointerEvent,\n        );\n        this.dispatchEvent(newEvent);\n      }, 250);\n    }\n  }\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  updateActivePointers_(pointerEvent) {\n    const event = pointerEvent;\n    const id = event.pointerId;\n\n    if (\n      event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL\n    ) {\n      delete this.trackedTouches_[id];\n      for (const pointerId in this.trackedTouches_) {\n        if (this.trackedTouches_[pointerId].target !== event.target) {\n          // Some platforms assign a new pointerId when the target changes.\n          // If this happens, delete one tracked pointer. If there is more\n          // than one tracked pointer for the old target, it will be cleared\n          // by subsequent POINTERUP events from other pointers.\n          delete this.trackedTouches_[pointerId];\n          break;\n        }\n      }\n    } else if (\n      event.type == MapBrowserEventType.POINTERDOWN ||\n      event.type == MapBrowserEventType.POINTERMOVE\n    ) {\n      this.trackedTouches_[id] = event;\n    }\n    this.activePointers_ = Object.values(this.trackedTouches_);\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerUp_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERUP,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_,\n    );\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.preventDefault().\n    if (\n      this.emulateClicks_ &&\n      !newEvent.defaultPrevented &&\n      !this.dragging_ &&\n      this.isMouseActionButton_(pointerEvent)\n    ) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_.length === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  isMouseActionButton_(pointerEvent) {\n    return pointerEvent.button === 0;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerDown_(pointerEvent) {\n    this.emulateClicks_ = this.activePointers_.length === 0;\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERDOWN,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_,\n    );\n    this.dispatchEvent(newEvent);\n\n    this.down_ = new PointerEvent(pointerEvent.type, pointerEvent);\n    Object.defineProperty(this.down_, 'target', {\n      writable: false,\n      value: pointerEvent.target,\n    });\n\n    if (this.dragListenerKeys_.length === 0) {\n      const doc = this.map_.getOwnerDocument();\n      this.dragListenerKeys_.push(\n        listen(\n          doc,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_,\n          this,\n        ),\n        listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(\n          this.element_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_,\n          this,\n        ),\n      );\n      if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n        this.dragListenerKeys_.push(\n          listen(\n            this.element_.getRootNode(),\n            MapBrowserEventType.POINTERUP,\n            this.handlePointerUp_,\n            this,\n          ),\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerMove_(pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.updateActivePointers_(pointerEvent);\n      this.dragging_ = true;\n      const newEvent = new MapBrowserEvent(\n        MapBrowserEventType.POINTERDRAG,\n        this.map_,\n        pointerEvent,\n        this.dragging_,\n        undefined,\n        this.activePointers_,\n      );\n      this.dispatchEvent(newEvent);\n    }\n  }\n\n  /**\n   * Wrap and relay a pointermove event.\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  relayMoveEvent_(pointerEvent) {\n    this.originalPointerMoveEvent_ = pointerEvent;\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(\n      new MapBrowserEvent(\n        MapBrowserEventType.POINTERMOVE,\n        this.map_,\n        pointerEvent,\n        dragging,\n      ),\n    );\n  }\n\n  /**\n   * Flexible handling of a `touch-action: none` css equivalent: because calling\n   * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n   * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n   * when an interaction (currently `DragPan` handles the event.\n   * @param {TouchEvent} event Event.\n   * @private\n   */\n  handleTouchMove_(event) {\n    // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n    // may not be initialized yet when we get here on a platform without native pointer events,\n    // when elm-pep is used as pointer events polyfill.\n    const originalEvent = this.originalPointerMoveEvent_;\n    if (\n      (!originalEvent || originalEvent.defaultPrevented) &&\n      (typeof event.cancelable !== 'boolean' || event.cancelable === true)\n    ) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  isMoving_(pointerEvent) {\n    return (\n      this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) >\n        this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_\n    );\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    this.element_.removeEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n    );\n\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    this.element_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n\n  /**\n   * Triggered when loading of additional map data (tiles, images, features) starts.\n   * @event module:ol/MapEvent~MapEvent#loadstart\n   * @api\n   */\n  LOADSTART: 'loadstart',\n\n  /**\n   * Triggered when loading of additional map data has completed.\n   * @event module:ol/MapEvent~MapEvent#loadend\n   * @api\n   */\n  LOADEND: 'loadend',\n};\n\n/***\n * @typedef {'postrender'|'movestart'|'moveend'|'loadstart'|'loadend'} Types\n */\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view',\n};\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/asserts\n */\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {string} errorMessage Error message.\n */\nexport function assert(assertion, errorMessage) {\n  if (!assertion) {\n    throw new Error(errorMessage);\n  }\n}\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = /** @type {T} */ (elements.pop());\n      priorities[0] = /** @type {number} */ (priorities.pop());\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(\n      !(this.keyFunction_(element) in this.queuedElements_),\n      'Tried to enqueue an `element` that was already added to the queue',\n    );\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/TileQueue\n */\nimport TileState from './TileState.js';\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import('./tilecoord.js').TileCoord, number): number} PriorityFunction\n */\n\n/**\n * @typedef {[import('./Tile.js').default, string, import('./tilecoord.js').TileCoord, number]} TileQueueElement\n */\n\n/**\n * @extends PriorityQueue<TileQueueElement>}\n */\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      (element) => tilePriorityFunction.apply(null, element),\n      (element) => element[0].getKey(),\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {TileQueueElement} element Element.\n   * @return {boolean} The element was added to the queue.\n   * @override\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      state === TileState.LOADED ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      if (state !== TileState.ERROR) {\n        tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      }\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      const tile = this.dequeue()[0];\n      const tileKey = tile.getKey();\n      const state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./Map.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution,\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>|null} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n/**\n * Returns a number with a limited number of decimal digits.\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The input number with a limited number of decimal digits.\n */\nexport function toFixed(n, decimals) {\n  const factor = Math.pow(10, decimals);\n  return Math.round(n * factor) / factor;\n}\n\n/**\n * Rounds a number to the nearest integer value considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The nearest integer.\n */\nexport function round(n, decimals) {\n  return Math.round(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next smaller integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next smaller integer.\n */\nexport function floor(n, decimals) {\n  return Math.floor(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next bigger integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next bigger integer.\n */\nexport function ceil(n, decimals) {\n  return Math.ceil(toFixed(n, decimals));\n}\n\n/**\n * Wraps a number between some minimum and maximum values.\n * @param {number} n The number to wrap.\n * @param {number} min The minimum of the range (inclusive).\n * @param {number} max The maximum of the range (exclusive).\n * @return {number} The wrapped number.\n */\nexport function wrap(n, min, max) {\n  if (n >= min && n < max) {\n    return n;\n  }\n  const range = max - min;\n  return ((((n - min) % range) + range) % range) + min;\n}\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number|undefined} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, isMoving, centerShift) {\n      if (!center) {\n        return undefined;\n      }\n      if (!resolution && !onlyCenter) {\n        return center;\n      }\n      const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n      const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n      const shiftX = centerShift ? centerShift[0] : 0;\n      const shiftY = centerShift ? centerShift[1] : 0;\n      let minX = extent[0] + viewWidth / 2 + shiftX;\n      let maxX = extent[2] - viewWidth / 2 + shiftX;\n      let minY = extent[1] + viewHeight / 2 + shiftY;\n      let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n      // note: when zooming out of bounds, min and max values for x and y may\n      // end up inverted (min > max); this has to be accounted for\n      if (minX > maxX) {\n        minX = (maxX + minX) / 2;\n        maxX = minX;\n      }\n      if (minY > maxY) {\n        minY = (maxY + minY) / 2;\n        maxY = minY;\n      }\n\n      let x = clamp(center[0], minX, maxX);\n      let y = clamp(center[1], minY, maxY);\n\n      // during an interaction, allow some overscroll\n      if (isMoving && smooth && resolution) {\n        const ratio = 30 * resolution;\n        x +=\n          -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n        y +=\n          -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n      }\n\n      return [x, y];\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/extent\n */\nimport Relationship from './extent/Relationship.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Extent corner.\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} Corner\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [dest] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, dest) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, dest);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, dest) {\n  if (dest) {\n    dest[0] = extent[0] - value;\n    dest[1] = extent[1] - value;\n    dest[2] = extent[2] + value;\n    dest[3] = extent[3] + value;\n    return dest;\n  }\n  return [\n    extent[0] - value,\n    extent[1] - value,\n    extent[2] + value,\n    extent[3] + value,\n  ];\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [dest] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent.slice();\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, dest) {\n  if (dest) {\n    dest[0] = minX;\n    dest[1] = minY;\n    dest[2] = maxX;\n    dest[3] = maxY;\n    return dest;\n  }\n  return [minX, minY, maxX, maxY];\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(dest) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, dest);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, dest) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, dest);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  dest,\n) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === 'bottom-left') {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === 'bottom-right') {\n    coordinate = getBottomRight(extent);\n  } else if (corner === 'top-left') {\n    coordinate = getTopLeft(extent);\n  } else if (corner === 'top-right') {\n    coordinate = getTopRight(extent);\n  } else {\n    throw new Error('Invalid corner');\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, dest) {\n  const [x0, y0, x1, y1, x2, y2, x3, y3] = getRotatedViewport(\n    center,\n    resolution,\n    rotation,\n    size,\n  );\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    dest,\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @return {Array<number>} Linear ring representing the viewport.\n */\nexport function getRotatedViewport(center, resolution, rotation, size) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  return [\n    x - xCos + ySin,\n    y - xSin - yCos,\n    x - xCos - ySin,\n    y - xSin + yCos,\n    x + xCos - ySin,\n    y + xSin + yCos,\n    x + xCos + ySin,\n    y + xSin - yCos,\n    x - xCos + ySin,\n    y - xSin - yCos,\n  ];\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [dest] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, dest) {\n  const intersection = dest ? dest : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [dest] Destination extent.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, dest, stops) {\n  if (isEmpty(extent)) {\n    return createOrUpdateEmpty(dest);\n  }\n  let coordinates = [];\n  if (stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / stops,\n        extent[2] - (width * i) / stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / stops,\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, dest);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth,\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n\n/**\n * Fits the extent to the real world\n *\n * If the extent does not cross the anti meridian, this will return the extent in an array\n * If the extent crosses the anti meridian, the extent will be sliced, so each part fits within the\n * real world\n *\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @param {boolean} [multiWorld] Return all worlds\n * @return {Array<Extent>} The extent within the real world extent.\n */\nexport function wrapAndSliceX(extent, projection, multiWorld) {\n  if (projection.canWrapX()) {\n    const projectionExtent = projection.getExtent();\n\n    if (!isFinite(extent[0]) || !isFinite(extent[2])) {\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n\n    wrapX(extent, projection);\n    const worldWidth = getWidth(projectionExtent);\n\n    if (getWidth(extent) > worldWidth && !multiWorld) {\n      // the extent wraps around on itself\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n    if (extent[0] < projectionExtent[0]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0] + worldWidth, extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2], extent[3]],\n      ];\n    }\n    if (extent[2] > projectionExtent[2]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0], extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2] - worldWidth, extent[3]],\n      ];\n    }\n  }\n\n  return [extent];\n}\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo, toFixed} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an `xy`, `xyz` or `xyzm` coordinate.\n * Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY();\n *     const out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY(2);\n *     const out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const decimals = fractionDigits || 0;\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = toFixed(x - deg * 3600 - min * 60, decimals);\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  let hdms = deg + '\\u00b0';\n  if (min !== 0 || sec !== 0) {\n    hdms += ' ' + padNumber(min, 2) + '\\u2032';\n  }\n  if (sec !== 0) {\n    hdms += ' ' + padNumber(sec, 2, decimals) + '\\u2033';\n  }\n  if (normalizedDegrees !== 0) {\n    hdms += ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0);\n  }\n\n  return hdms;\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(fractionDigits));\n  }\n  return '';\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], fractionDigits)\n    );\n  }\n  return '';\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, fractionDigits) {\n  return format(coordinate, '{x}, {y}', fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    sourceExtentWidth = sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth,\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing.inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  }\n  return 1 - inAndOut(2 * (t - 0.5));\n}\n","/**\n * @module ol/console\n */\n\n/**\n * @typedef {'info'|'warn'|'error'|'none'} Level\n */\n\n/**\n * @type {Object<Level, number>}\n */\nconst levels = {\n  info: 1,\n  warn: 2,\n  error: 3,\n  none: 4,\n};\n\n/**\n * @type {number}\n */\nlet level = levels.info;\n\n/**\n * Set the logging level.  By default, the level is set to 'info' and all\n * messages will be logged.  Set to 'warn' to only display warnings and errors.\n * Set to 'error' to only display errors.  Set to 'none' to silence all messages.\n *\n * @param {Level} l The new level.\n */\nexport function setLevel(l) {\n  level = levels[l];\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function log(...args) {\n  if (level > levels.info) {\n    return;\n  }\n  console.log(...args); // eslint-disable-line no-console\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function warn(...args) {\n  if (level > levels.warn) {\n    return;\n  }\n  console.warn(...args); // eslint-disable-line no-console\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function error(...args) {\n  if (level > levels.error) {\n    return;\n  }\n  console.error(...args); // eslint-disable-line no-console\n}\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * @typedef {'radians' | 'degrees' | 'ft' | 'm' | 'pixels' | 'tile-pixels' | 'us-ft'} Units\n * Projection units.\n */\n\n/**\n * See http://duff.ess.washington.edu/data/raster/drg/docs/geotiff.txt\n * @type {Object<number, Units>}\n */\nconst unitByCode = {\n  '9001': 'm',\n  '9002': 'ft',\n  '9003': 'us-ft',\n  '9101': 'radians',\n  '9102': 'degrees',\n};\n\n/**\n * @param {number} code Unit code.\n * @return {Units} Units.\n */\nexport function fromCode(code) {\n  return unitByCode[code];\n}\n\n/**\n * @typedef {Object} MetersPerUnitLookup\n * @property {number} radians Radians\n * @property {number} degrees Degrees\n * @property {number} ft  Feet\n * @property {number} m Meters\n * @property {number} us-ft US feet\n */\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {MetersPerUnitLookup}\n * @api\n */\nexport const METERS_PER_UNIT = {\n  // use the radius of the Normal sphere\n  'radians': 6370997 / (2 * Math.PI),\n  'degrees': (2 * Math.PI * 6370997) / 360,\n  'ft': 0.3048,\n  'm': 1,\n  'us-ft': 1200 / 3937,\n};\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * The function is called with a `number` view resolution and a\n * {@link module:ol/coordinate~Coordinate} as arguments, and returns the `number` resolution\n * in projection units at the passed coordinate.\n * @typedef {function(number, import(\"../coordinate.js\").Coordinate):number} GetPointResolution\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").Units} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {GetPointResolution} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `number` view resolution and a {@link module:ol/coordinate~Coordinate} as arguments, and returns\n * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj.getPointResolution} function will be used.\n */\n\n/**\n * @classdesc\n * In most cases, you should not need to create instances of this class.\n * Instead, where projection information is required, you can use a string\n * projection code or identifier (e.g. `EPSG:4326`) instead of a projection\n * instance.\n *\n * The library includes support for transforming coordinates between the following\n * projections:\n *\n *  WGS 84 / Geographic - Using codes `EPSG:4326`, `CRS:84`, `urn:ogc:def:crs:EPSG:6.6:4326`,\n *    `urn:ogc:def:crs:OGC:1.3:CRS84`, `urn:ogc:def:crs:OGC:2:84`, `http://www.opengis.net/gml/srs/epsg.xml#4326`,\n *    or `urn:x-ogc:def:crs:EPSG:4326`\n *  WGS 84 / Spherical Mercator - Using codes `EPSG:3857`, `EPSG:102100`, `EPSG:102113`, `EPSG:900913`,\n *    `urn:ogc:def:crs:EPSG:6.18:3:3857`, or `http://www.opengis.net/gml/srs/epsg.xml#3857`\n *  WGS 84 / UTM zones - Using codes `EPSG:32601` through `EPSG:32660` for northern zones\n *    and `EPSG:32701` through `EPSG:32760` for southern zones. Note that the built-in UTM transforms\n *    are lower accuracy (with errors on the order of 0.1 m) than those that you might get in a\n *    library like [proj4js](https://github.com/proj4js/proj4js).\n *\n * For additional projection support, or to use higher accuracy transforms than the built-in ones, you can use\n * the [proj4js](https://github.com/proj4js/proj4js) library. With `proj4js`, after adding any new projection\n * definitions, call the {@link module:ol/proj/proj4.register} function.\n *\n * You can use the {@link module:ol/proj.get} function to retrieve a projection instance\n * for one of the registered projections.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").Units}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").Units} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {GetPointResolution|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").Units} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {GetPointResolution|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: 'm',\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / Math.cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/def/crs/EPSG/0/3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @param {number} [stride] Stride (default is `dimension`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, output, dimension, stride) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  stride = stride ?? dimension;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += stride) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @param {number} [stride] Stride (default is `dimension`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, output, dimension, stride) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  stride = stride ?? dimension;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += stride) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [axisOrientation] Axis orientation.\n   */\n  constructor(code, axisOrientation) {\n    super({\n      code: code,\n      units: 'degrees',\n      extent: EXTENT,\n      axisOrientation: axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/OGC/1.3/CRS84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/EPSG/0/4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default|null} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|null} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    return transforms[sourceCode][destinationCode];\n  }\n  return null;\n}\n","/**\n * @module ol/proj/utm\n */\n\n/**\n * Adapted from https://github.com/Turbo87/utm\n * Copyright (c) 2012-2017 Tobias Bieniek\n *\n * The functions here provide approximate transforms to and from UTM.\n * They are not appropriate for use beyond the validity extend of a UTM\n * zone, and the accuracy of the transform decreases toward the zone\n * edges.\n */\n\nimport {toDegrees, toRadians, wrap} from '../math.js';\nimport Projection from './Projection.js';\n\n/**\n * @typedef {Object} UTMZone\n * @property {number} number The zone number (1 - 60).\n * @property {boolean} north The northern hemisphere.\n */\n\nconst K0 = 0.9996;\n\nconst E = 0.00669438;\nconst E2 = E * E;\nconst E3 = E2 * E;\nconst E_P2 = E / (1 - E);\n\nconst SQRT_E = Math.sqrt(1 - E);\nconst _E = (1 - SQRT_E) / (1 + SQRT_E);\nconst _E2 = _E * _E;\nconst _E3 = _E2 * _E;\nconst _E4 = _E3 * _E;\nconst _E5 = _E4 * _E;\n\nconst M1 = 1 - E / 4 - (3 * E2) / 64 - (5 * E3) / 256;\nconst M2 = (3 * E) / 8 + (3 * E2) / 32 + (45 * E3) / 1024;\nconst M3 = (15 * E2) / 256 + (45 * E3) / 1024;\nconst M4 = (35 * E3) / 3072;\n\nconst P2 = (3 / 2) * _E - (27 / 32) * _E3 + (269 / 512) * _E5;\nconst P3 = (21 / 16) * _E2 - (55 / 32) * _E4;\nconst P4 = (151 / 96) * _E3 - (417 / 128) * _E5;\nconst P5 = (1097 / 512) * _E4;\n\nconst R = 6378137;\n\n/**\n * @param {number} easting Easting value of coordinate.\n * @param {number} northing Northing value of coordinate.\n * @param {UTMZone} zone The UTM zone.\n * @return {import(\"../coordinate.js\").Coordinate} The transformed coordinate.\n */\nfunction toLonLat(easting, northing, zone) {\n  const x = easting - 500000;\n  const y = zone.north ? northing : northing - 10000000;\n\n  const m = y / K0;\n  const mu = m / (R * M1);\n\n  const pRad =\n    mu +\n    P2 * Math.sin(2 * mu) +\n    P3 * Math.sin(4 * mu) +\n    P4 * Math.sin(6 * mu) +\n    P5 * Math.sin(8 * mu);\n\n  const pSin = Math.sin(pRad);\n  const pSin2 = pSin * pSin;\n\n  const pCos = Math.cos(pRad);\n\n  const pTan = pSin / pCos;\n  const pTan2 = pTan * pTan;\n  const pTan4 = pTan2 * pTan2;\n\n  const epSin = 1 - E * pSin2;\n  const epSinSqrt = Math.sqrt(1 - E * pSin2);\n\n  const n = R / epSinSqrt;\n  const r = (1 - E) / epSin;\n\n  const c = E_P2 * pCos ** 2;\n  const c2 = c * c;\n\n  const d = x / (n * K0);\n  const d2 = d * d;\n  const d3 = d2 * d;\n  const d4 = d3 * d;\n  const d5 = d4 * d;\n  const d6 = d5 * d;\n\n  const latitude =\n    pRad -\n    (pTan / r) *\n      (d2 / 2 - (d4 / 24) * (5 + 3 * pTan2 + 10 * c - 4 * c2 - 9 * E_P2)) +\n    (d6 / 720) * (61 + 90 * pTan2 + 298 * c + 45 * pTan4 - 252 * E_P2 - 3 * c2);\n\n  let longitude =\n    (d -\n      (d3 / 6) * (1 + 2 * pTan2 + c) +\n      (d5 / 120) * (5 - 2 * c + 28 * pTan2 - 3 * c2 + 8 * E_P2 + 24 * pTan4)) /\n    pCos;\n\n  longitude = wrap(\n    longitude + toRadians(zoneToCentralLongitude(zone.number)),\n    -Math.PI,\n    Math.PI,\n  );\n\n  return [toDegrees(longitude), toDegrees(latitude)];\n}\n\nconst MIN_LATITUDE = -80;\nconst MAX_LATITUDE = 84;\nconst MIN_LONGITUDE = -180;\nconst MAX_LONGITUDE = 180;\n\n/**\n * @param {number} longitude The longitude.\n * @param {number} latitude The latitude.\n * @param {UTMZone} zone The UTM zone.\n * @return {import('../coordinate.js').Coordinate} The UTM coordinate.\n */\nfunction fromLonLat(longitude, latitude, zone) {\n  longitude = wrap(longitude, MIN_LONGITUDE, MAX_LONGITUDE);\n\n  if (latitude < MIN_LATITUDE) {\n    latitude = MIN_LATITUDE;\n  } else if (latitude > MAX_LATITUDE) {\n    latitude = MAX_LATITUDE;\n  }\n\n  const latRad = toRadians(latitude);\n  const latSin = Math.sin(latRad);\n  const latCos = Math.cos(latRad);\n\n  const latTan = latSin / latCos;\n  const latTan2 = latTan * latTan;\n  const latTan4 = latTan2 * latTan2;\n\n  const lonRad = toRadians(longitude);\n  const centralLon = zoneToCentralLongitude(zone.number);\n  const centralLonRad = toRadians(centralLon);\n\n  const n = R / Math.sqrt(1 - E * latSin ** 2);\n  const c = E_P2 * latCos ** 2;\n\n  const a = latCos * wrap(lonRad - centralLonRad, -Math.PI, Math.PI);\n  const a2 = a * a;\n  const a3 = a2 * a;\n  const a4 = a3 * a;\n  const a5 = a4 * a;\n  const a6 = a5 * a;\n\n  const m =\n    R *\n    (M1 * latRad -\n      M2 * Math.sin(2 * latRad) +\n      M3 * Math.sin(4 * latRad) -\n      M4 * Math.sin(6 * latRad));\n\n  const easting =\n    K0 *\n      n *\n      (a +\n        (a3 / 6) * (1 - latTan2 + c) +\n        (a5 / 120) * (5 - 18 * latTan2 + latTan4 + 72 * c - 58 * E_P2)) +\n    500000;\n\n  let northing =\n    K0 *\n    (m +\n      n *\n        latTan *\n        (a2 / 2 +\n          (a4 / 24) * (5 - latTan2 + 9 * c + 4 * c ** 2) +\n          (a6 / 720) * (61 - 58 * latTan2 + latTan4 + 600 * c - 330 * E_P2)));\n\n  if (!zone.north) {\n    northing += 10000000;\n  }\n\n  return [easting, northing];\n}\n\n/**\n * @param {number} zone The zone number.\n * @return {number} The central longitude in degrees.\n */\nfunction zoneToCentralLongitude(zone) {\n  return (zone - 1) * 6 - 180 + 3;\n}\n\n/**\n * @type {Array<RegExp>}\n */\nconst epsgRegExes = [\n  /^EPSG:(\\d+)$/,\n  /^urn:ogc:def:crs:EPSG::(\\d+)$/,\n  /^http:\\/\\/www\\.opengis\\.net\\/def\\/crs\\/EPSG\\/0\\/(\\d+)$/,\n];\n\n/**\n * @param {string} code The projection code.\n * @return {UTMZone|null} The UTM zone info (or null if not UTM).\n */\nexport function zoneFromCode(code) {\n  let epsgId = 0;\n  for (const re of epsgRegExes) {\n    const match = code.match(re);\n    if (match) {\n      epsgId = parseInt(match[1]);\n      break;\n    }\n  }\n  if (!epsgId) {\n    return null;\n  }\n\n  let number = 0;\n  let north = false;\n  if (epsgId > 32700 && epsgId < 32761) {\n    number = epsgId - 32700;\n  } else if (epsgId > 32600 && epsgId < 32661) {\n    north = true;\n    number = epsgId - 32600;\n  }\n  if (!number) {\n    return null;\n  }\n\n  return {number, north};\n}\n\n/**\n * @param {function(number, number, UTMZone): import('../coordinate.js').Coordinate} transformer The transformer.\n * @param {UTMZone} zone The UTM zone.\n * @return {import('../proj.js').TransformFunction} The transform function.\n */\nfunction makeTransformFunction(transformer, zone) {\n  return function (input, output, dimension, stride) {\n    const length = input.length;\n    dimension = dimension > 1 ? dimension : 2;\n    stride = stride ?? dimension;\n    if (!output) {\n      if (dimension > 2) {\n        output = input.slice();\n      } else {\n        output = new Array(length);\n      }\n    }\n    for (let i = 0; i < length; i += stride) {\n      const x = input[i];\n      const y = input[i + 1];\n      const coord = transformer(x, y, zone);\n      output[i] = coord[0];\n      output[i + 1] = coord[1];\n    }\n    return output;\n  };\n}\n\n/**\n * @param {string} code The projection code.\n * @return {import('./Projection.js').default|null} A projection or null if unable to create one.\n */\nexport function makeProjection(code) {\n  const zone = zoneFromCode(code);\n  if (!zone) {\n    return null;\n  }\n  return new Projection({code, units: 'm'});\n}\n\n/**\n * @param {import('./Projection.js').default} projection The projection.\n * @return {import('../proj.js').Transforms|null} The transforms lookup or null if unable to handle projection.\n */\nexport function makeTransforms(projection) {\n  const zone = zoneFromCode(projection.getCode());\n  if (!zone) {\n    return null;\n  }\n\n  return {\n    forward: makeTransformFunction(fromLonLat, zone),\n    inverse: makeTransformFunction(toLonLat, zone),\n  };\n}\n","/**\n * @module ol/sphere\n */\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint': {\n      break;\n    }\n    case 'LineString':\n    case 'LinearRing': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case 'MultiLineString':\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint':\n    case 'LineString':\n    case 'MultiLineString':\n    case 'LinearRing': {\n      break;\n    }\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing),\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat),\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * a list of {@link module:ol/proj/Projection~Projection}\n * objects, one for each projection supported by the application\n * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj.addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection~Projection} object for the new projection and add it with\n * {@link module:ol/proj.addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj.addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection~Projection} with\n * {@link module:ol/proj.addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport {warn} from './console.js';\nimport {equals, getWorldsAway} from './coordinate.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport Projection from './proj/Projection.js';\nimport {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {\n  makeProjection as makeUTMProjection,\n  makeTransforms as makeUTMTransforms,\n} from './proj/utm.js';\nimport {getDistance} from './sphere.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection~Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * @typedef {Object} Transforms\n * @property {TransformFunction} forward The forward transform (from geographic).\n * @property {TransformFunction} inverse The inverse transform (to geographic).\n */\n\n/**\n * @type {Array<function(Projection): Transforms|null>}\n */\nconst transformFactories = [makeUTMTransforms];\n\n/**\n * @type {Array<function(string): Projection|null>}\n */\nconst projectionFactories = [makeUTMProjection];\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @callback TransformFunction\n * @param {Array<number>} input\n * @param {Array<number>} [output]\n * @param {number} [dimension]\n * @param {number} [stride]\n * @return {Array<number>}\n *\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\nlet showCoordinateWarning = true;\n\n/**\n * @param {boolean} [disable] Disable console info about `useGeographic()`\n */\nexport function disableCoordinateWarning(disable) {\n  const hide = disable === undefined ? true : disable;\n  showCoordinateWarning = !hide;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, output) {\n  if (output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    output = output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, output) {\n  if (output !== undefined && input !== output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    input = output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection|null} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  if (!(typeof projectionLike === 'string')) {\n    return projectionLike;\n  }\n  const projection = getProj(projectionLike);\n  if (projection) {\n    return projection;\n  }\n  for (const makeProjection of projectionFactories) {\n    const projection = makeProjection(projectionLike);\n    if (projection) {\n      return projection;\n    }\n  }\n  return null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the `point` pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").Units} [units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (units && units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[units];\n      }\n    }\n  } else {\n    const projUnits = projection.getUnits();\n    if ((projUnits == 'degrees' && !units) || units == 'degrees') {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326'),\n      );\n      if (!toEPSG4326 && projUnits !== 'degrees') {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = units\n        ? METERS_PER_UNIT[units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform,\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  }\n  if (typeof projection === 'string') {\n    return get(projection);\n  }\n  return /** @type {Projection} */ (projection);\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [output] Output.\n     * @param {number} [dimension] Dimensions that should be transformed.\n     * @param {number} [stride] Stride.\n     * @return {Array<number>} Output.\n     */\n    function (input, output, dimension, stride) {\n      const length = input.length;\n      dimension = dimension !== undefined ? dimension : 2;\n      stride = stride ?? dimension;\n      output = output !== undefined ? output : new Array(length);\n      for (let i = 0; i < length; i += stride) {\n        const point = coordTransform(input.slice(i, i + dimension));\n        const pointLength = point.length;\n        for (let j = 0, jj = stride; j < jj; ++j) {\n          output[i + j] = j >= pointLength ? input[i + j] : point[j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}. If the transform function can only\n *     transform less dimensions than the input coordinate, it is supposeed to return a coordinate\n *     with only the length it can transform. The other dimensions will be taken unchanged from the\n *     source.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward),\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse),\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, projection) {\n  disableCoordinateWarning();\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    projection !== undefined ? projection : 'EPSG:3857',\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, projection) {\n  const lonLat = transform(\n    coordinate,\n    projection !== undefined ? projection : 'EPSG:3857',\n    'EPSG:4326',\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  }\n  const transformFunc = getTransformFromProjections(projection1, projection2);\n  return transformFunc === cloneTransform && equalUnits;\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} source Source Projection object.\n * @param {Projection} destination Destination Projection\n *     object.\n * @return {TransformFunction|null} Transform function.\n */\nexport function getTransformFromProjections(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (transformFunc) {\n    return transformFunc;\n  }\n\n  /**\n   * @type {Transforms|null}\n   */\n  let sourceTransforms = null;\n\n  /**\n   * @type {Transforms|null}\n   */\n  let destinationTransforms = null;\n\n  // lazily add projections if we have supported transforms\n  for (const makeTransforms of transformFactories) {\n    if (!sourceTransforms) {\n      sourceTransforms = makeTransforms(source);\n    }\n    if (!destinationTransforms) {\n      destinationTransforms = makeTransforms(destination);\n    }\n  }\n\n  if (!sourceTransforms && !destinationTransforms) {\n    return null;\n  }\n\n  const intermediateCode = 'EPSG:4326';\n  if (!destinationTransforms) {\n    const toDestination = getTransformFunc(intermediateCode, destinationCode);\n    if (toDestination) {\n      transformFunc = composeTransformFuncs(\n        sourceTransforms.inverse,\n        toDestination,\n      );\n    }\n  } else if (!sourceTransforms) {\n    const fromSource = getTransformFunc(sourceCode, intermediateCode);\n    if (fromSource) {\n      transformFunc = composeTransformFuncs(\n        fromSource,\n        destinationTransforms.forward,\n      );\n    }\n  } else {\n    transformFunc = composeTransformFuncs(\n      sourceTransforms.inverse,\n      destinationTransforms.forward,\n    );\n  }\n\n  if (transformFunc) {\n    addProjection(source);\n    addProjection(destination);\n    addTransformFunc(source, destination, transformFunc);\n  }\n\n  return transformFunc;\n}\n\n/**\n * @param {TransformFunction} t1 The first transform function.\n * @param {TransformFunction} t2 The second transform function.\n * @return {TransformFunction} The composed transform function.\n */\nfunction composeTransformFuncs(t1, t2) {\n  return function (input, output, dimensions, stride) {\n    output = t1(input, output, dimensions, stride);\n    return t2(output, output, dimensions, stride);\n  };\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original). If there\n * is no available transform between the two projection, the function will throw\n * an error.\n *\n * See {@link module:ol/proj.transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  if (!transformFunc) {\n    const sourceCode = get(source).getCode();\n    const destinationCode = get(destination).getCode();\n    throw new Error(\n      `No transform available between ${sourceCode} and ${destinationCode}`,\n    );\n  }\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection,\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection,\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {Projection|null}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @param {ProjectionLike} projection The user projection.\n * @api\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.\n * @api\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * @return {Projection|null} The user projection (or null if not set).\n * @api\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @api\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    if (\n      showCoordinateWarning &&\n      !equals(coordinate, [0, 0]) &&\n      coordinate[0] >= -180 &&\n      coordinate[0] <= 180 &&\n      coordinate[1] >= -90 &&\n      coordinate[1] <= 90\n    ) {\n      showCoordinateWarning = false;\n      warn(\n        'Call useGeographic() from ol/proj once to work with [longitude, latitude] coordinates.',\n      );\n    }\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in input projection units per pixel.\n * @param {ProjectionLike} sourceProjection The input projection.\n * @return {number} Resolution in user projection units per pixel.\n */\nexport function toUserResolution(resolution, sourceProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceMetersPerUnit = get(sourceProjection).getMetersPerUnit();\n  const userMetersPerUnit = userProjection.getMetersPerUnit();\n  return sourceMetersPerUnit && userMetersPerUnit\n    ? (resolution * sourceMetersPerUnit) / userMetersPerUnit\n    : resolution;\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in user projection units per pixel.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {number} Resolution in destination projection units per pixel.\n */\nexport function fromUserResolution(resolution, destProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const destMetersPerUnit = get(destProjection).getMetersPerUnit();\n  const userMetersPerUnit = userProjection.getMetersPerUnit();\n  return destMetersPerUnit && userMetersPerUnit\n    ? (resolution * userMetersPerUnit) / destMetersPerUnit\n    : resolution;\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destination).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destination).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      coord = coord.slice(0);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        coord[0] = coord[0] - worldsAway * sourceExtentWidth;\n      }\n      coord[0] = clamp(coord[0], sourceExtent[0], sourceExtent[2]);\n      coord[1] = clamp(coord[1], sourceExtent[1], sourceExtent[3]);\n      transformed = transform(coord);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326,\n  );\n}\n\naddCommon();\n","/**\n * @module ol/transform\n */\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 'Transformation matrix cannot be inverted');\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * @type {Array}\n */\nconst matrixPrecision = [1e5, 1e5, 1e5, 1e5, 2, 2];\n\n/**\n * A matrix string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  const transformString = 'matrix(' + mat.join(', ') + ')';\n  return transformString;\n}\n\n/**\n * Create a transform from a CSS transform matrix string.\n * @param {string} cssTransform The CSS string to parse.\n * @return {!Transform} The transform.\n */\nexport function fromString(cssTransform) {\n  const values = cssTransform.substring(7, cssTransform.length - 1).split(',');\n  return values.map(parseFloat);\n}\n\n/**\n * Compare two matrices for equality.\n * @param {!string} cssTransform1 A CSS transform matrix string.\n * @param {!string} cssTransform2 A CSS transform matrix string.\n * @return {boolean} The two matrices are equal.\n */\nexport function equivalent(cssTransform1, cssTransform2) {\n  const mat1 = fromString(cssTransform1);\n  const mat2 = fromString(cssTransform2);\n  for (let i = 0; i < 6; ++i) {\n    if (Math.round((mat1[i] - mat2[i]) * matrixPrecision[i]) !== 0) {\n      return false;\n    }\n  }\n  return true;\n}\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @param {number} [destinationStride] Stride of destination coordinates; if unspecified, assumed to be 2.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  dest,\n  destinationStride,\n) {\n  dest = dest ? dest : [];\n  destinationStride = destinationStride ? destinationStride : 2;\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n\n    for (let k = 2; k < destinationStride; k++) {\n      dest[i++] = flatCoordinates[j + k];\n    }\n  }\n\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  dest,\n) {\n  dest = dest ? dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  dest,\n) {\n  dest = dest ? dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  dest,\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {memoizeOne} from '../functions.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {abstract} from '../util.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @typedef {'XY' | 'XYZ' | 'XYM' | 'XYZM'} GeometryLayout\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available.\n */\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString' | 'MultiPolygon' | 'GeometryCollection' | 'Circle'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, or `'Circle'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/** @type {import('../coordinate.js').Coordinate} */\nconst tmpPoint = [NaN, NaN];\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(\n      (revision, squaredTolerance, transform) => {\n        if (!transform) {\n          return this.getSimplifiedGeometry(squaredTolerance);\n        }\n        const clone = this.clone();\n        clone.applyTransform(transform);\n        return clone.getSimplifiedGeometry(squaredTolerance);\n      },\n    );\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      transform,\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return this.closestPointXY(x, y, tmpPoint, Number.MIN_VALUE) === 0;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, closestPoint) {\n    closestPoint = closestPoint ? closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {Type} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {this} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == 'tile-pixels'\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0,\n            );\n            const transformed = transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates,\n            );\n            const projTransform = getTransform(sourceProj, destination);\n            if (projTransform) {\n              return projTransform(transformed, transformed, stride);\n            }\n            return transformed;\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {abstract} from '../util.js';\nimport Geometry from './Geometry.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./Geometry.js\").GeometryLayout}\n     */\n    this.layout = 'XY';\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @override\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*> | null} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride,\n    );\n  }\n\n  /**\n   * Return the {@link import(\"./Geometry.js\").GeometryLayout layout} of the geometry.\n   * @return {import(\"./Geometry.js\").GeometryLayout} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @override\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry =\n      this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    }\n    // Simplification did not actually remove any coordinates.  We now know\n    // that any calls to getSimplifiedGeometry with a squaredTolerance less\n    // than or equal to the current squaredTolerance will also not have any\n    // effect.  This allows us to short circuit simplification (saving CPU\n    // cycles) and prevents the cache of simplified geometries from filling\n    // up with useless identical copies of this geometry (saving memory).\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  setCoordinates(coordinates, layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = 'XY';\n          this.stride = 2;\n          return;\n        }\n        coordinates = /** @type {Array<unknown>} */ (coordinates[0]);\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   * @override\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(\n        this.flatCoordinates,\n        this.flatCoordinates,\n        this.layout.startsWith('XYZ') ? 3 : 2,\n        this.stride,\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   * @override\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates,\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   * @override\n   */\n  scale(sx, sy, anchor) {\n    if (sy === undefined) {\n      sy = sx;\n    }\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates,\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   * @override\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates,\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n */\nexport function getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = 'XY';\n  } else if (stride == 3) {\n    layout = 'XYZ';\n  } else if (stride == 4) {\n    layout = 'XYZM';\n  }\n  return /** @type {import(\"./Geometry.js\").GeometryLayout} */ (layout);\n}\n\n/**\n * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == 'XY') {\n    stride = 2;\n  } else if (layout == 'XYZ' || layout == 'XYM') {\n    stride = 3;\n  } else if (layout == 'XYZM') {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  }\n  const stride = simpleGeometry.getStride();\n  return transform2D(\n    flatCoordinates,\n    0,\n    flatCoordinates.length,\n    stride,\n    transform,\n    dest,\n  );\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  const x0 = flatCoordinates[end - stride];\n  const y0 = flatCoordinates[end - stride + 1];\n  let dx1 = 0;\n  let dy1 = 0;\n  for (; offset < end; offset += stride) {\n    const dx2 = flatCoordinates[offset] - x0;\n    const dy2 = flatCoordinates[offset + 1] - y0;\n    twiceArea += dy1 * dx2 - dx1 * dy2;\n    dx1 = dx2;\n    dy1 = dy2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint,\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t,\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint,\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1],\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint,\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1,\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint,\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint,\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint,\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint,\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint,\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride,\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  ends,\n) {\n  ends = ends ? ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride,\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  endss,\n) {\n  endss = endss ? endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i],\n    );\n    if (ends.length === 0) {\n      ends[0] = offset;\n    }\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  coordinates,\n) {\n  coordinates = coordinates !== undefined ? coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  coordinatess,\n) {\n  coordinatess = coordinatess !== undefined ? coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i],\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  coordinatesss,\n) {\n  coordinatesss = coordinatesss !== undefined ? coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] =\n      ends.length === 1 && ends[0] === offset\n        ? []\n        : inflateCoordinatesArray(\n            flatCoordinates,\n            offset,\n            ends,\n            stride,\n            coordinatesss[i],\n          );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  simplifiedFlatCoordinates,\n) {\n  simplifiedFlatCoordinates =\n    simplifiedFlatCoordinates !== undefined ? simplifiedFlatCoordinates : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0,\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds,\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds,\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/LinearRing\n */\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   * @override\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n    );\n    return new LinearRing(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'LinearRing';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/Point\n */\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {squaredDistance as squaredDx} from '../math.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {deflateCoordinate} from './flat/deflate.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    this.setCoordinates(coordinates, layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1],\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates() {\n    return this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @override\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'Point';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent,\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1],\n      );\n    },\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y,\n) {\n  // https://web.archive.org/web/20210504233957/http://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y,\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y,\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {ascending} from '../../array.js';\nimport {linearRingsContainsXY} from './contains.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  dest,\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(ascending);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (dest) {\n    dest.push(pointX, y, maxSegmentLength);\n    return dest;\n  }\n  return [pointX, y, maxSegmentLength];\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters,\n) {\n  /** @type {Array<number>} */\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints,\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  let ret;\n  offset += stride;\n  for (; offset < end; offset += stride) {\n    ret = callback(\n      flatCoordinates.slice(offset - stride, offset),\n      flatCoordinates.slice(offset, offset + stride),\n    );\n    if (ret) {\n      return ret;\n    }\n  }\n  return false;\n}\n\n/**\n * Calculate the intersection point of two line segments.\n * Reference: https://stackoverflow.com/a/72474223/2389327\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} segment1 The first line segment as an array of two points.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} segment2 The second line segment as an array of two points.\n * @return {import(\"../../coordinate.js\").Coordinate|undefined} The intersection point or `undefined` if no intersection.\n */\nexport function getIntersectionPoint(segment1, segment2) {\n  const [a, b] = segment1;\n  const [c, d] = segment2;\n  const t =\n    ((a[0] - c[0]) * (c[1] - d[1]) - (a[1] - c[1]) * (c[0] - d[0])) /\n    ((a[0] - b[0]) * (c[1] - d[1]) - (a[1] - b[1]) * (c[0] - d[0]));\n  const u =\n    ((a[0] - c[0]) * (a[1] - b[1]) - (a[1] - c[1]) * (a[0] - b[0])) /\n    ((a[0] - b[0]) * (c[1] - d[1]) - (a[1] - b[1]) * (c[0] - d[0]));\n\n  // Check if lines actually intersect\n  if (0 <= t && t <= 1 && 0 <= u && u <= 1) {\n    return [a[0] + t * (b[0] - a[0]), a[1] + t * (b[1] - a[1])];\n  }\n  return undefined;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\nimport {forEach as forEachSegment} from './segments.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @param {import('../../extent.js').Extent} [coordinatesExtent] Coordinates extent\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent,\n  coordinatesExtent,\n) {\n  coordinatesExtent =\n    coordinatesExtent ??\n    extendFlatCoordinates(createEmpty(), flatCoordinates, offset, end, stride);\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (\n    (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) ||\n    (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3])\n  ) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    },\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent,\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1],\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3],\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1],\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3],\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent,\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent,\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent,\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean|undefined} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right,\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (!linearRingsAreOriented(flatCoordinates, offset, ends, stride, right)) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right,\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      right,\n    );\n  }\n  return offset;\n}\n\n/**\n * Return a two-dimensional endss\n * @param {Array<number>} flatCoordinates Flat coordinates\n * @param {Array<number>} ends Linear ring end indexes\n * @return {Array<Array<number>>} Two dimensional endss array that can\n * be used to construct a MultiPolygon\n */\nexport function inflateEnds(flatCoordinates, ends) {\n  const endss = [];\n  let offset = 0;\n  let prevEndIndex = 0;\n  let startOrientation;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    // classifies an array of rings into polygons with outer rings and holes\n    const orientation = linearRingIsClockwise(flatCoordinates, offset, end, 2);\n    if (startOrientation === undefined) {\n      startOrientation = orientation;\n    }\n    if (orientation === startOrientation) {\n      endss.push(ends.slice(prevEndIndex, i + 1));\n    } else {\n      if (endss.length === 0) {\n        continue;\n      }\n      endss[endss.length - 1].push(ends[prevEndIndex]);\n    }\n    prevEndIndex = i + 1;\n    offset = end;\n  }\n  return endss;\n}\n","/**\n * @module ol/geom/Polygon\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, getCenter, isEmpty} from '../extent.js';\nimport {modulo} from '../math.js';\nimport {offset as sphereOffset} from '../sphere.js';\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {quantizeArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n      this.ends_ = ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice(),\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   * @override\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y,\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0,\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return /** @type {import(\"../coordinate.js\").Coordinate} */ (\n      this.flatInteriorPoint_\n    );\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), 'XYM');\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing|null} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index],\n      ),\n      this.layout,\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout,\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride,\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.orientedFlatCoordinates_);\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   * @override\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds,\n    );\n    return new Polygon(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'Polygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_,\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, n, sphereRadius) {\n  n = n ? n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, sphereRadius),\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  if (isEmpty(extent)) {\n    throw new Error('Cannot create polygon from empty extent');\n  }\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [sides] Number of sides of the polygon. Default is 32.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, sides, angle) {\n  sides = sides ? sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = angle ? angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {linearFindNearest} from './array.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent,\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  smooth,\n  maxExtent,\n  showFullExtent,\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent,\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution,\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [minResolution] Minimum resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent,\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  minResolution = minResolution !== undefined ? minResolution : 0;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent,\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution,\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance,\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset,\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent,\n) {\n  smooth = smooth !== undefined ? smooth : true;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent,\n            )\n          : maxResolution;\n\n        if (!smooth || !isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution,\n        );\n      }\n      return undefined;\n    }\n  );\n}\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  }\n  return undefined;\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  }\n  return undefined;\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} [tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(tolerance) {\n  const t = tolerance === undefined ? toRadians(5) : tolerance;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving || rotation === undefined) {\n        return rotation;\n      }\n\n      if (Math.abs(rotation) <= t) {\n        return 0;\n      }\n      return rotation;\n    }\n  );\n}\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {linearFindNearest} from './array.js';\nimport {assert} from './asserts.js';\nimport {createExtent, none as centerNone} from './centerconstraint.js';\nimport {\n  add as addCoordinate,\n  equals,\n  equals as coordinatesEqual,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {easeOut, inAndOut} from './easing.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {VOID} from './functions.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\nimport {clamp, modulo} from './math.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  disableCoordinateWarning,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {\n  createMinMaxResolution,\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to\n * fit the extent into. Defaults to the size of the map the view is associated with.\n * If no map or multiple maps are connected to the view, provide the desired box size\n * (e.g. `map.getSize()`).\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions that determine the\n * zoom levels if specified. The index in the array corresponds to the zoom level,\n * therefore the resolution values have to be in descending order. It also constrains\n * the resolution by the minimum and maximum value. If set the `maxResolution`,\n * `minResolution`, `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center (in view projection coordinates).\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {import(\"./coordinate.js\").Coordinate} [nextCenter] The next center during an animation series.\n * @property {number} [nextResolution] The next resolution during an animation series.\n * @property {number} [nextRotation] The next rotation during an animation series.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Like {@link import(\"./Map.js\").FrameState}, but just `viewState` and `extent`.\n * @typedef {Object} ViewStateLayerStateExtent\n * @property {State} viewState View state.\n * @property {import(\"./extent.js\").Extent} extent Extent (in user projection coordinates).\n * @property {Array<import(\"./layer/Layer.js\").State>} [layerStatesArray] Layer states.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:center'|'change:resolution'|'change:rotation'} ViewObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<ViewObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|ViewObjectEventTypes, Return>} ViewOnSignature\n */\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Web Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [options] View options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ViewOnSignature<void>}\n     */\n    this.un;\n\n    options = Object.assign({}, options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.nextCenter_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextResolution_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.projection) {\n      disableCoordinateWarning();\n    }\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    const properties = Object.assign({}, options);\n    for (const key in ViewProperty) {\n      delete properties[key];\n    }\n    this.setProperties(properties, true);\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null,\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenterInternal();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = this.getProperties();\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return Object.assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = Object.assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection(),\n        );\n      }\n      if (options.anchor) {\n        options = Object.assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection(),\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n\n    let i = 0;\n    for (; i < animationCount && !this.isDef(); ++i) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[i];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      } else if (state.resolution) {\n        this.setResolution(state.resolution);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n    }\n    if (i === animationCount) {\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n    this.nextCenter_ = null;\n    this.nextResolution_ = NaN;\n    this.nextRotation_ = NaN;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          this.nextCenter_ = animation.targetCenter;\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true,\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor,\n            );\n          }\n          this.nextResolution_ = animation.targetResolution;\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true,\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor,\n            );\n          }\n          this.nextRotation_ = animation.targetRotation;\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        this.nextCenter_ = null;\n        this.nextResolution_ = NaN;\n        this.nextRotation_ = NaN;\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this),\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(rotation) {\n    const size = this.viewportSize_;\n    if (rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(rotation)) + Math.abs(h * Math.sin(rotation)),\n        Math.abs(w * Math.sin(rotation)) + Math.abs(h * Math.cos(rotation)),\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(size) {\n    this.viewportSize_ = Array.isArray(size) ? size.slice() : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(ViewProperty.CENTER)\n    );\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.get('constrainResolution');\n  }\n\n  /**\n   * @param {Array<number>} [hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(hints) {\n    if (hints !== undefined) {\n      hints[0] = this.hints_[0];\n      hints[1] = this.hints_[1];\n      return hints;\n    }\n    return this.hints_.slice();\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed box size.\n   * @param {import(\"./size.js\").Size} [size] The pixel dimensions of the box\n   * into which the calculated extent should fit. Defaults to the size of the\n   * map the view is associated with.\n   * If no map or multiple maps are connected to the view, provide the desired\n   * box size (e.g. `map.getSize()`).\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(size) {\n    const extent = this.calculateExtentInternal(size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    assert(center, 'The view center is not defined');\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 'The view resolution is not defined');\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 'The view rotation is not defined');\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.minResolution_)\n    );\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.maxResolution_)\n    );\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      size,\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(power) {\n    power = power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(power) {\n    const logPower = Math.log(power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(rotation) {\n    let size = this.getViewportSize_(rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = this.getResolution();\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation,\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      nextCenter: this.nextCenter_,\n      nextResolution: this.nextResolution_,\n      nextRotation: this.nextRotation_,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * @return {ViewStateLayerStateExtent} Like `FrameState`, but just `viewState` and `extent`.\n   */\n  getViewStateAndExtent() {\n    return {\n      viewState: this.getState(),\n      extent: this.calculateExtent(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_?.length) {\n      if (this.resolutions_.length === 1) {\n        return this.resolutions_[0];\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2,\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    }\n    return (\n      this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n    );\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      'Invalid extent or geometry provided as `geometry`',\n    );\n    if (Array.isArray(geometryOrExtent)) {\n      assert(\n        !isEmpty(geometryOrExtent),\n        'Cannot fit empty extent provided as `geometry`',\n      );\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === 'Circle') {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection(),\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n          geometryOrExtent\n            .clone()\n            .transform(userProjection, this.getProjection())\n        );\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, options);\n  }\n\n  /**\n   * Calculate rotated extent\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @return {import(\"./extent\").Extent} The rotated extent for the geometry.\n   */\n  rotatedExtentForGeometry(geometry) {\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(rotation);\n    const sinAngle = Math.sin(-rotation);\n    const coords = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n    return [minRotX, minRotY, maxRotX, maxRotY];\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [options] Options.\n   */\n  fitInternal(geometry, options) {\n    options = options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n\n    const rotatedExtent = this.rotatedExtentForGeometry(geometry);\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(rotatedExtent, [\n      size[0] - padding[1] - padding[3],\n      size[1] - padding[0] - padding[2],\n    ]);\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    const rotation = this.getRotation();\n    const sinAngle = Math.sin(rotation);\n    const cosAngle = Math.cos(rotation);\n    const centerRot = getCenter(rotatedExtent);\n    centerRot[0] += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRot[1] += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRot[0] * cosAngle - centerRot[1] * sinAngle;\n    const centerY = centerRot[1] * cosAngle + centerRot[0] * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback,\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position,\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation(),\n      ),\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation,\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving,\n    );\n\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, anchor) {\n    if (anchor) {\n      anchor = fromUserCoordinate(anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving,\n    );\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(\n      center ? fromUserCoordinate(center, this.getProjection()) : center,\n    );\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(doNotCancelAnims, forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving,\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving,\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size,\n      ),\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n      this.set('zoom', this.getZoom(), true);\n    }\n    if (\n      !newCenter ||\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [duration] The animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  resolveConstraints(duration, resolutionDirection, anchor) {\n    duration = duration !== undefined ? duration : 200;\n    const direction = resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size,\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size,\n      ),\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    anchor = anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(duration, resolutionDirection, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.endInteractionInternal(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  endInteractionInternal(duration, resolutionDirection, anchor) {\n    if (!this.getInteracting()) {\n      return;\n    }\n    this.setHint(ViewHint.INTERACTING, -1);\n    this.resolveConstraints(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      targetResolution || this.getResolution(),\n      size,\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [direction] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, direction),\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [direction] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, direction) {\n    direction = direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor),\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    }\n    if (constrainRotation === false) {\n      return rotationNone;\n    }\n    if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    }\n    return rotationNone;\n  }\n  return disable;\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z0-9]+?)\\\\s*$',\n  ].join(''),\n  'i',\n);\n/** @type {Array<'style'|'variant'|'weight'|'size'|'lineHeight'|'family'>} */\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/** @type {Object<string|number, number>} */\nexport const fontWeights = {\n  normal: 400,\n  bold: 700,\n};\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters|null} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: '400',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] =\n        typeof value === 'string' ? value.trim() : value;\n    }\n  }\n  if (isNaN(Number(style.weight)) && style.weight in fontWeights) {\n    style.weight = fontWeights[style.weight];\n  }\n  style.families = style.family\n    .split(/,\\s?/)\n    .map((f) => f.trim().replace(/^['\"]|['\"]$/g, ''));\n  return style;\n};\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [width] Canvas width.\n * @param {number} [height] Canvas height.\n * @param {Array<HTMLCanvasElement|OffscreenCanvas>} [canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [settings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D|OffscreenCanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(width, height, canvasPool, settings) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (canvasPool && canvasPool.length) {\n    canvas = /** @type {HTMLCanvasElement} */ (canvasPool.shift());\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new (class extends OffscreenCanvas {\n      style = {};\n    })(width ?? 300, height ?? 150);\n  } else {\n    canvas = document.createElement('canvas');\n  }\n  if (width) {\n    canvas.width = width;\n  }\n  if (height) {\n    canvas.height = height;\n  }\n  return /** @type {CanvasRenderingContext2D|OffscreenCanvasRenderingContext2D} */ (\n    canvas.getContext('2d', settings)\n  );\n}\n\n/**\n * @type {CanvasRenderingContext2D|OffscreenCanvasRenderingContext2D}\n */\nlet sharedCanvasContext;\n\n/**\n * @return {CanvasRenderingContext2D|OffscreenCanvasRenderingContext2D} Shared canvas context.\n */\nexport function getSharedCanvasContext2D() {\n  if (!sharedCanvasContext) {\n    sharedCanvasContext = createCanvasContext2D(1, 1);\n  }\n  return sharedCanvasContext;\n}\n\n/**\n * Releases canvas memory to avoid exceeding memory limits in Safari.\n * See https://pqina.nl/blog/total-canvas-memory-use-exceeds-the-maximum-limit/\n * @param {CanvasRenderingContext2D|OffscreenCanvasRenderingContext2D} context Context.\n */\nexport function releaseCanvas(context) {\n  const canvas = context.canvas;\n  canvas.width = 1;\n  canvas.height = 1;\n  context.clearRect(0, 0, 1, 1);\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.lastChild.remove();\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n\n/**\n * Creates a minimal structure that mocks a DIV to be used in a worker environment\n * @return {HTMLDivElement} mocked DIV\n */\nexport function createMockDiv() {\n  const mockedDiv = new Proxy(\n    {\n      /**\n       * @type {Array<HTMLElement>}\n       */\n      childNodes: [],\n      /**\n       * @param {HTMLElement} node html node.\n       * @return {HTMLElement} html node.\n       */\n      appendChild: function (node) {\n        this.childNodes.push(node);\n        return node;\n      },\n      /**\n       * @param {HTMLElement} node html node.\n       * @return {HTMLElement} html node.\n       */\n      removeChild: function (node) {\n        const index = this.childNodes.indexOf(node);\n        if (index === -1) {\n          throw new Error('Node to remove was not found');\n        }\n        this.childNodes.splice(index, 1);\n        return node;\n      },\n      /**\n       * @param {HTMLElement} newNode new html node.\n       * @param {HTMLElement} referenceNode reference html node.\n       * @return {HTMLElement} new html node.\n       */\n      insertBefore: function (newNode, referenceNode) {\n        const index = this.childNodes.indexOf(referenceNode);\n        if (index === -1) {\n          throw new Error('Reference node not found');\n        }\n        this.childNodes.splice(index, 0, newNode);\n        return newNode;\n      },\n      style: {},\n    },\n    {\n      get(target, prop, receiver) {\n        if (prop === 'firstElementChild') {\n          return target.childNodes.length > 0 ? target.childNodes[0] : null;\n        }\n        return Reflect.get(target, prop, receiver);\n      },\n    },\n  );\n  return /** @type {HTMLDivElement} */ (/** @type {*} */ (mockedDiv));\n}\n\n/***\n * @param {*} obj The object to check.\n * @return {obj is (HTMLCanvasElement | OffscreenCanvas)} The object is a canvas.\n */\nexport function isCanvas(obj) {\n  return (\n    (typeof HTMLCanvasElement !== 'undefined' &&\n      obj instanceof HTMLCanvasElement) ||\n    (typeof OffscreenCanvas !== 'undefined' && obj instanceof OffscreenCanvas)\n  );\n}\n","/**\n * @module ol/control/Control\n */\nimport MapEventType from '../MapEventType.js';\nimport BaseObject from '../Object.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {VOID} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * const myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.element?.remove();\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.element?.remove();\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (map) {\n      const target = this.target_ ?? map.getOverlayContainerStopEvent();\n      if (this.element) {\n        target.appendChild(this.element);\n      }\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this),\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n","/**\n * @module ol/control/Attribution\n */\nimport {equals} from '../array.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {removeChildren, replaceNode} from '../dom.js';\nimport EventType from '../events/EventType.js';\nimport {toPromise} from '../functions.js';\nimport Control from './Control.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string|HTMLElement} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='›'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {string|Array<string>|undefined} [attributions] Optional attribution(s) that will always be\n * displayed regardless of the layers rendered.\n * **Caution:** Attributions are rendered dynamically using `innerHTML`, which can lead to potential\n * [**XSS (Cross-Site Scripting)**](https://en.wikipedia.org/wiki/Cross-site_scripting) vulnerabilities.\n * Use this feature only for trusted content\n * or ensure that the content is properly sanitized before inserting it.\n */\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n  /**\n   * @param {Options} [options] Attribution options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.userCollapsed_ = this.collapsed_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    /**\n     * @private\n     * @type {string | Array<string> | undefined}\n     */\n    this.attributions_ = options.attributions;\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const expandClassName =\n      options.expandClassName !== undefined\n        ? options.expandClassName\n        : className + '-expand';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u203A';\n\n    const collapseClassName =\n      options.collapseClassName !== undefined\n        ? options.collapseClassName\n        : className + '-collapse';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n      this.collapseLabel_.className = collapseClassName;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n      this.label_.className = expandClassName;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.toggleButton_ = document.createElement('button');\n    this.toggleButton_.setAttribute('type', 'button');\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n    this.toggleButton_.title = tipLabel;\n    this.toggleButton_.appendChild(activeLabel);\n\n    this.toggleButton_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false,\n    );\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.toggleButton_);\n    element.appendChild(this.ulElement_);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  collectSourceAttributions_(frameState) {\n    const layers = this.getMap().getAllLayers();\n    const visibleAttributions = new Set(\n      layers.flatMap((layer) => layer.getAttributions(frameState)),\n    );\n    if (this.attributions_ !== undefined) {\n      Array.isArray(this.attributions_)\n        ? this.attributions_.forEach((item) => visibleAttributions.add(item))\n        : visibleAttributions.add(this.attributions_);\n    }\n\n    if (!this.overrideCollapsible_) {\n      const collapsible = !layers.some(\n        (layer) => layer.getSource()?.getAttributionsCollapsible() === false,\n      );\n      this.setCollapsible(collapsible);\n    }\n    return Array.from(visibleAttributions);\n  }\n\n  /**\n   * @private\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  async updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = await Promise.all(\n      this.collectSourceAttributions_(frameState).map((attribution) =>\n        toPromise(() => attribution),\n      ),\n    );\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n    this.userCollapsed_ = this.collapsed_;\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (this.userCollapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    this.userCollapsed_ = collapsed;\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Update the attribution element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n  }\n}\n\nexport default Attribution;\n","/**\n * @module ol/control/Rotate\n */\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\nimport EventType from '../events/EventType.js';\nimport Control from './Control.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nclass Rotate extends Control {\n  /**\n   * @param {Options} [options] Rotate options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-rotate';\n\n    const label = options.label !== undefined ? options.label : '\\u21E7';\n\n    const compassClassName =\n      options.compassClassName !== undefined\n        ? options.compassClassName\n        : 'ol-compass';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = compassClassName;\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add(compassClassName);\n    }\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    const button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false,\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    /**\n     * @private\n     */\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetNorth_() {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const rotation = view.getRotation();\n    if (rotation !== undefined) {\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  }\n\n  /**\n   * Update the rotate control element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      return;\n    }\n    const rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n      const transform = 'rotate(' + rotation + 'rad)';\n      if (this.autoHide_) {\n        const contains = this.element.classList.contains(CLASS_HIDDEN);\n        if (!contains && rotation === 0) {\n          this.element.classList.add(CLASS_HIDDEN);\n        } else if (contains && rotation !== 0) {\n          this.element.classList.remove(CLASS_HIDDEN);\n        }\n      }\n      this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n  }\n}\n\nexport default Rotate;\n","/**\n * @module ol/control/Zoom\n */\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\nimport EventType from '../events/EventType.js';\nimport Control from './Control.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='–'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n  /**\n   * @param {Options} [options] Zoom options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInClassName =\n      options.zoomInClassName !== undefined\n        ? options.zoomInClassName\n        : className + '-in';\n\n    const zoomOutClassName =\n      options.zoomOutClassName !== undefined\n        ? options.zoomOutClassName\n        : className + '-out';\n\n    const zoomInLabel =\n      options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel =\n      options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2013';\n\n    const zoomInTipLabel =\n      options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel =\n      options.zoomOutTipLabel !== undefined\n        ? options.zoomOutTipLabel\n        : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = zoomInClassName;\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string'\n        ? document.createTextNode(zoomInLabel)\n        : zoomInLabel,\n    );\n\n    inElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, delta),\n      false,\n    );\n\n    const outElement = document.createElement('button');\n    outElement.className = zoomOutClassName;\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string'\n        ? document.createTextNode(zoomOutLabel)\n        : zoomOutLabel,\n    );\n\n    outElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, -delta),\n      false,\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  }\n}\n\nexport default Zoom;\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active',\n};\n","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport {easeOut, linear} from '../easing.js';\nimport InteractionProperty from './Property.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active', Return>} InteractionOnSignature\n */\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {InteractionOnSignature<void>}\n     */\n    this.un;\n\n    if (options && options.handleEvent) {\n      this.handleEvent = options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [duration] Duration.\n */\nexport function pan(view, delta, duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: duration !== undefined ? duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [anchor] Anchor coordinate in the user projection.\n * @param {number} [duration] Duration.\n */\nexport function zoomByDelta(view, delta, anchor, duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: anchor,\n    duration: duration !== undefined ? duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a\n   * doubleclick) and eventually zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @override\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n      const browserEvent = /** @type {MouseEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const map = mapBrowserEvent.map;\n      const anchor = mapBrowserEvent.coordinate;\n      const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, anchor, this.duration_);\n      browserEvent.preventDefault();\n      stopEvent = true;\n    }\n    return !stopEvent;\n  }\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {MAC, WEBKIT} from '../has.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  const conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    let pass = true;\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function (event) {\n  const targetElement = event.map.getTargetElement();\n  const rootNode = targetElement.getRootNode();\n  const activeElement = event.map.getOwnerDocument().activeElement;\n\n  return rootNode instanceof ShadowRoot\n    ? rootNode.host.contains(activeElement)\n    : targetElement.contains(activeElement);\n};\n\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport const focusWithTabindex = function (event) {\n  const targetElement = event.map.getTargetElement();\n  const rootNode = targetElement.getRootNode();\n  const tabIndexCandidate =\n    rootNode instanceof ShadowRoot ? rootNode.host : targetElement;\n\n  return tabIndexCandidate.hasAttribute('tabindex') ? focus(event) : true;\n};\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  return (\n    'pointerId' in originalEvent &&\n    originalEvent.button == 0 &&\n    !(WEBKIT && MAC && originalEvent.ctrlKey)\n  );\n};\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  return (\n    !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKey = function (mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  return MAC ? originalEvent.metaKey : originalEvent.ctrlKey;\n};\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the target element is not editable, i.e. not an `input`,\n * `select`, or `textarea` element and no `contenteditable` attribute is\n * set or inherited, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function (mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return (\n    tagName !== 'INPUT' &&\n    tagName !== 'SELECT' &&\n    tagName !== 'TEXTAREA' &&\n    // `isContentEditable` is only available on `HTMLElement`, but it may also be a\n    // different type like `SVGElement`.\n    // @ts-ignore\n    !originalEvent.target.isContentEditable\n  );\n};\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function (mapBrowserEvent) {\n  const pointerEvent = mapBrowserEvent.originalEvent;\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return 'pointerId' in pointerEvent && pointerEvent.pointerType == 'mouse';\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function (mapBrowserEvent) {\n  const pointerEvt = mapBrowserEvent.originalEvent;\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return 'pointerId' in pointerEvt && pointerEvt.pointerType === 'touch';\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function (mapBrowserEvent) {\n  const pointerEvt = mapBrowserEvent.originalEvent;\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return 'pointerId' in pointerEvt && pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See https://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function (mapBrowserEvent) {\n  const pointerEvent = mapBrowserEvent.originalEvent;\n  return (\n    'pointerId' in pointerEvent &&\n    pointerEvent.isPrimary &&\n    pointerEvent.button === 0\n  );\n};\n","/**\n * @module ol/interaction/Pointer\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Interaction from './Interaction.js';\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options),\n    );\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Returns the current number of pointers involved in the interaction,\n   * e.g. `2` when two fingers are used.\n   * @return {number} The number of pointers.\n   * @api\n   */\n  getPointerCount() {\n    return this.targetPointers.length;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleDragEvent(mapBrowserEvent) {}\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   * @override\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence =\n          handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleMoveEvent(mapBrowserEvent) {}\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (mapBrowserEvent.activePointers) {\n      this.targetPointers = mapBrowserEvent.activePointers;\n    }\n  }\n}\n\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {{clientX: number, clientY: number}} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return {clientX: clientX / length, clientY: clientY / length};\n}\n\nexport default PointerInteraction;\n","/**\n * @module ol/interaction/DragPan\n */\nimport {\n  rotate as rotateCoordinate,\n  scale as scaleCoordinate,\n} from '../coordinate.js';\nimport {easeOut} from '../easing.js';\nimport {\n  all,\n  focusWithTabindex,\n  noModifierKeys,\n  primaryAction,\n} from '../events/condition.js';\nimport {FALSE} from '../functions.js';\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.noModifierKeys} and {@link module:ol/events/condition.primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nclass DragPan extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super({\n      stopDown: FALSE,\n    });\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.panning_ = false;\n\n    const condition = options.condition\n      ? options.condition\n      : all(noModifierKeys, primaryAction);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @override\n   */\n  handleDragEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    if (!this.panning_) {\n      this.panning_ = true;\n      map.getView().beginInteraction();\n    }\n    const targetPointers = this.targetPointers;\n    const centroid = map.getEventPixel(centroidFromPointers(targetPointers));\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        const delta = [\n          this.lastCentroid[0] - centroid[0],\n          centroid[1] - this.lastCentroid[1],\n        ];\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        scaleCoordinate(delta, view.getResolution());\n        rotateCoordinate(delta, view.getRotation());\n        view.adjustCenterInternal(delta);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n    mapBrowserEvent.originalEvent.preventDefault();\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleUpEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        const distance = this.kinetic_.getDistance();\n        const angle = this.kinetic_.getAngle();\n        const center = view.getCenterInternal();\n        const centerpx = map.getPixelFromCoordinateInternal(center);\n        const dest = map.getCoordinateFromPixelInternal([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle),\n        ]);\n        view.animateInternal({\n          center: view.getConstrainedCenter(dest),\n          duration: 500,\n          easing: easeOut,\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.endInteraction();\n      }\n      return false;\n    }\n    if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger up, tiny drag, second finger up\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = null;\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragPan;\n","/**\n * @module ol/interaction/DragRotate\n */\nimport {\n  altShiftKeysOnly,\n  mouseActionButton,\n  mouseOnly,\n} from '../events/condition.js';\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\nimport PointerInteraction from './Pointer.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes a\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with a {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nclass DragRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      stopDown: FALSE,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @override\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      const delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n    this.lastAngle_ = theta;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (\n      mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)\n    ) {\n      const map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragRotate;\n","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nclass RenderBox extends Disposable {\n  /**\n   * @param {string} className CSS class name.\n   */\n  constructor(className) {\n    super();\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = document.createElement('div');\n    this.element_.style.position = 'absolute';\n    this.element_.style.pointerEvents = 'auto';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.setMap(null);\n  }\n\n  /**\n   * @private\n   */\n  render_() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const px = 'px';\n    const style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      const style = this.element_.style;\n      style.left = 'inherit';\n      style.top = 'inherit';\n      style.width = 'inherit';\n      style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  setPixels(startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  }\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  createOrUpdateGeometry() {\n    if (!this.map_) {\n      return;\n    }\n\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]],\n    ];\n    const coordinates = pixels.map(\n      this.map_.getCoordinateFromPixelInternal,\n      this.map_,\n    );\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  }\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n}\n\nexport default RenderBox;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport {mouseActionButton} from '../events/condition.js';\nimport RenderBox from '../render/Box.js';\nimport PointerInteraction from './Pointer.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend',\n\n  /**\n   * Triggered upon drag box canceled.\n   * @event DragBoxEvent#boxcancel\n   * @api\n   */\n  BOXCANCEL: 'boxcancel',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nexport class DragBoxEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n   */\n  constructor(type, coordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'boxcancel'|'boxdrag'|'boxend'|'boxstart', DragBoxEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'boxcancel'|'boxdrag'|'boxend', Return>} DragBoxOnSignature\n */\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with a {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom~DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nclass DragBox extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DragBoxOnSignature<void>}\n     */\n    this.un;\n\n    options = options ?? {};\n\n    /**\n     * @type {import(\"../render/Box.js\").default}\n     * @private\n     */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minArea_ = options.minArea ?? 64;\n\n    if (options.onBoxEnd) {\n      this.onBoxEnd = options.onBoxEnd;\n    }\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ?? mouseActionButton;\n\n    /**\n     * @private\n     * @type {EndCondition}\n     */\n    this.boxEndCondition_ =\n      options.boxEndCondition ?? this.defaultBoxEndCondition;\n  }\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n    const width = endPixel[0] - startPixel[0];\n    const height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  }\n\n  /**\n   * Returns geometry of last drawn box.\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   * @api\n   */\n  getGeometry() {\n    return this.box_.getGeometry();\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @override\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!this.startPixel_) {\n      return;\n    }\n\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(\n      new DragBoxEvent(\n        DragBoxEventType.BOXDRAG,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent,\n      ),\n    );\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!this.startPixel_) {\n      return false;\n    }\n\n    const completeBox = this.boxEndCondition_(\n      mapBrowserEvent,\n      this.startPixel_,\n      mapBrowserEvent.pixel,\n    );\n    if (completeBox) {\n      this.onBoxEnd(mapBrowserEvent);\n    }\n    this.dispatchEvent(\n      new DragBoxEvent(\n        completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent,\n      ),\n    );\n\n    this.box_.setMap(null);\n    this.startPixel_ = null;\n\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(\n        new DragBoxEvent(\n          DragBoxEventType.BOXSTART,\n          mapBrowserEvent.coordinate,\n          mapBrowserEvent,\n        ),\n      );\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {}\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   * @override\n   */\n  setActive(active) {\n    if (!active) {\n      this.box_.setMap(null);\n      if (this.startPixel_) {\n        this.dispatchEvent(\n          new DragBoxEvent(DragBoxEventType.BOXCANCEL, this.startPixel_, null),\n        );\n        this.startPixel_ = null;\n      }\n    }\n\n    super.setActive(active);\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @override\n   */\n  setMap(map) {\n    const oldMap = this.getMap();\n\n    if (oldMap) {\n      this.box_.setMap(null);\n\n      if (this.startPixel_) {\n        this.dispatchEvent(\n          new DragBoxEvent(DragBoxEventType.BOXCANCEL, this.startPixel_, null),\n        );\n        this.startPixel_ = null;\n      }\n    }\n\n    super.setMap(map);\n  }\n}\n\nexport default DragBox;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\nimport DragBox from './DragBox.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with a {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @override\n   */\n  onBoxEnd(event) {\n    const map = this.getMap();\n    const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    let geometry = this.getGeometry();\n\n    if (this.out_) {\n      const rotatedExtent = view.rotatedExtentForGeometry(geometry);\n      const resolution = view.getResolutionForExtentInternal(rotatedExtent);\n      const factor = view.getResolution() / resolution;\n      geometry = geometry.clone();\n      geometry.scale(factor * factor);\n    }\n\n    view.fitInternal(geometry, {\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n}\n\nexport default DragZoom;\n","/**\n * @module ol/events/Key\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  LEFT: 'ArrowLeft',\n  UP: 'ArrowUp',\n  RIGHT: 'ArrowRight',\n  DOWN: 'ArrowDown',\n};\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport {rotate as rotateCoordinate} from '../coordinate.js';\nimport EventType from '../events/EventType.js';\nimport Key from '../events/Key.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport Interaction, {pan} from './Interaction.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.noModifierKeys} and\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nclass KeyboardPan extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function (mapBrowserEvent) {\n      return (\n        noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent)\n      );\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ =\n      options.condition !== undefined\n        ? options.condition\n        : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ =\n      options.pixelDelta !== undefined ? options.pixelDelta : 128;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n   * pressed).\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @override\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const key = keyEvent.key;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (key == Key.DOWN ||\n          key == Key.LEFT ||\n          key == Key.RIGHT ||\n          key == Key.UP)\n      ) {\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n        let deltaX = 0,\n          deltaY = 0;\n        if (key == Key.DOWN) {\n          deltaY = -mapUnitsDelta;\n        } else if (key == Key.LEFT) {\n          deltaX = -mapUnitsDelta;\n        } else if (key == Key.RIGHT) {\n          deltaX = mapUnitsDelta;\n        } else {\n          deltaY = mapUnitsDelta;\n        }\n        const delta = [deltaX, deltaY];\n        rotateCoordinate(delta, view.getRotation());\n        pan(view, delta, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport {platformModifierKey, targetNotEditable} from '../events/condition.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. The default condition is\n * that {@link module:ol/events/condition.targetNotEditable} is fulfilled and that\n * the platform modifier key isn't pressed\n * (!{@link module:ol/events/condition.platformModifierKey}).\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nclass KeyboardZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition\n      ? options.condition\n      : function (mapBrowserEvent) {\n          return (\n            !platformModifierKey(mapBrowserEvent) &&\n            targetNotEditable(mapBrowserEvent)\n          );\n        };\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n   * key pressed was '+' or '-').\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @override\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (\n      mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS\n    ) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const key = keyEvent.key;\n      if (this.condition_(mapBrowserEvent) && (key === '+' || key === '-')) {\n        const map = mapBrowserEvent.map;\n        const delta = key === '+' ? this.delta_ : -this.delta_;\n        const view = map.getView();\n        zoomByDelta(view, delta, undefined, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport {all, always, focusWithTabindex} from '../events/condition.js';\nimport {clamp} from '../math.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\n\n/**\n * @typedef {'trackpad' | 'wheel'} Mode\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n\n/**\n * Mutliplier for the DOM_DELTA_LINE delta value.\n * @type {number}\n */\nconst DELTA_LINE_MULTIPLIER = 40;\n\n/**\n * Mutliplier for the DOM_DELTA_PAGE delta value.\n * @type {number}\n */\nconst DELTA_PAGE_MULTIPLIER = 300;\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options),\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.totalDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ =\n      options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ =\n      options.constrainResolution !== undefined\n        ? options.constrainResolution\n        : false;\n\n    const condition = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {?import(\"../pixel.js\").Pixel}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @private\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.deltaPerZoom_ = 300;\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.trackpadTimeoutId_ = undefined;\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const view = map.getView();\n    view.endInteraction(\n      undefined,\n      this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0,\n      this.lastAnchor_ ? map.getCoordinateFromPixel(this.lastAnchor_) : null,\n    );\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @override\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const wheelEvent = /** @type {WheelEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    wheelEvent.preventDefault();\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.pixel;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    let delta = wheelEvent.deltaY;\n\n    switch (wheelEvent.deltaMode) {\n      case WheelEvent.DOM_DELTA_LINE:\n        delta *= DELTA_LINE_MULTIPLIER;\n        break;\n      case WheelEvent.DOM_DELTA_PAGE:\n        delta *= DELTA_PAGE_MULTIPLIER;\n        break;\n      default:\n      // pass\n    }\n\n    if (delta === 0) {\n      return false;\n    }\n    this.lastDelta_ = delta;\n\n    const now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ? 'trackpad' : 'wheel';\n    }\n\n    const view = map.getView();\n    if (\n      this.mode_ === 'trackpad' &&\n      !(view.getConstrainResolution() || this.constrainResolution_)\n    ) {\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.beginInteraction();\n      }\n      this.trackpadTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        this.timeout_,\n      );\n      view.adjustZoom(\n        -delta / this.deltaPerZoom_,\n        this.lastAnchor_ ? map.getCoordinateFromPixel(this.lastAnchor_) : null,\n      );\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.totalDelta_ += delta;\n\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(\n      this.handleWheelZoom_.bind(this, map),\n      timeLeft,\n    );\n\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  handleWheelZoom_(map) {\n    const view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    let delta =\n      -clamp(\n        this.totalDelta_,\n        -this.maxDelta_ * this.deltaPerZoom_,\n        this.maxDelta_ * this.deltaPerZoom_,\n      ) / this.deltaPerZoom_;\n    if (view.getConstrainResolution() || this.constrainResolution_) {\n      // view has a zoom constraint, zoom by 1\n      delta = delta ? (delta > 0 ? 1 : -1) : 0;\n    }\n    zoomByDelta(\n      view,\n      delta,\n      this.lastAnchor_ ? map.getCoordinateFromPixel(this.lastAnchor_) : null,\n      this.duration_,\n    );\n\n    this.mode_ = undefined;\n    this.totalDelta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @override\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let rotationDelta = 0.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n\n    // angle between touches\n    const angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX,\n    );\n\n    if (this.lastAngle_ !== undefined) {\n      const delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers)),\n    );\n\n    // rotate\n    if (this.rotating_) {\n      map.render();\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      view.endInteraction(this.duration_);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport {FALSE} from '../functions.js';\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @override\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers)),\n    );\n\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchZoom;\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n  MAP: 'map',\n};\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport {assert} from '../asserts.js';\nimport {clamp} from '../math.js';\nimport {abstract} from '../util.js';\nimport LayerProperty from './Property.js';\n\n/**\n * A css color, or a function called with a view resolution returning a css color.\n *\n * @typedef {string|function(number):string} BackgroundColor\n * @api\n */\n\n/**\n * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\n *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number | undefined} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base~BaseLayer} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object~BaseObject} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {BackgroundColor|false}\n     * @private\n     */\n    this.background_ = options.background;\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = Object.assign({}, options);\n    if (typeof options.properties === 'object') {\n      delete properties.properties;\n      Object.assign(properties, options.properties);\n    }\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(\n      typeof properties[LayerProperty.OPACITY] === 'number',\n      'Layer opacity must be a number',\n    );\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? properties.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * Get the background for this layer.\n   * @return {BackgroundColor|false} Layer background.\n   */\n  getBackground() {\n    return this.background_;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: managed === undefined ? true : managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (\n      this.get(LayerProperty.EXTENT)\n    );\n  }\n\n  /**\n   * Return the maximum resolution of the layer. Returns Infinity if\n   * the layer has no maximum resolution set.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer. Returns 0 if\n   * the layer has no minimum resolution set.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer. Returns -Infinity if\n   * the layer has no minimum zoom set.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer. Returns Infinity if\n   * the layer has no maximum zoom set.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the value of this layer's `visible` property. To find out whether the layer\n   * is visible on a map, use `isVisible()` instead.\n   * @return {boolean} The value of the `visible` property of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. Returns undefined if the layer is unmanaged.\n   * @return {number|undefined} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number|undefined} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Sets the background color.\n   * @param {BackgroundColor} [background] Background color.\n   */\n  setBackground(background) {\n    this.background_ = background;\n    this.changed();\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 'Layer opacity must be a number');\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/layer/Group\n */\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {assert} from '../asserts.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {getIntersection} from '../extent.js';\nimport {clear} from '../obj.js';\nimport {getUid} from '../util.js';\nimport BaseLayer from './Base.js';\n\n/**\n * @enum {string}\n */\nconst GroupEventType = {\n  /**\n   * Triggered when a layer is added\n   * @event GroupEvent#addlayer\n   * @api\n   */\n  ADDLAYER: 'addlayer',\n  /**\n   * Triggered when a layer is removed\n   * @event GroupEvent#removelayer\n   * @api\n   */\n  REMOVELAYER: 'removelayer',\n};\n\n/**\n * @classdesc\n * A layer group triggers 'addlayer' and 'removelayer' events when layers are added to or removed from\n * the group or one of its child groups.  When a layer group is added to or removed from another layer group,\n * a single event will be triggered (instead of one per layer in the group added or removed).\n */\nexport class GroupEvent extends Event {\n  /**\n   * @param {GroupEventType} type The event type.\n   * @param {BaseLayer} layer The layer.\n   */\n  constructor(type, layer) {\n    super(type);\n\n    /**\n     * The added or removed layer.\n     * @type {BaseLayer}\n     * @api\n     */\n    this.layer = layer;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:layers', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'addlayer'|'removelayer', GroupEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'addlayer'|'removelayer'|'change:layers', Return>} GroupOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|Collection<import(\"./Base.js\").default>} [layers] Child layers.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @fires GroupEvent\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options} [options] Layer options.\n   */\n  constructor(options) {\n    options = options || {};\n    const baseOptions = /** @type {Options} */ (Object.assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {GroupOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addChangeListener(Property.LAYERS, this.handleLayersChanged_);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(\n          typeof (/** @type {?} */ (layers).getArray) === 'function',\n          'Expected `layers` to be an array or a `Collection`',\n        );\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(\n        layers,\n        CollectionEventType.REMOVE,\n        this.handleLayersRemove_,\n        this,\n      ),\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.registerLayerListeners_(layer);\n      this.dispatchEvent(new GroupEvent(GroupEventType.ADDLAYER, layer));\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {BaseLayer} layer The layer.\n   */\n  registerLayerListeners_(layer) {\n    const listenerKeys = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this,\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n\n    if (layer instanceof LayerGroup) {\n      listenerKeys.push(\n        listen(layer, GroupEventType.ADDLAYER, this.handleLayerGroupAdd_, this),\n        listen(\n          layer,\n          GroupEventType.REMOVELAYER,\n          this.handleLayerGroupRemove_,\n          this,\n        ),\n      );\n    }\n\n    this.listenerKeys_[getUid(layer)] = listenerKeys;\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupAdd_(event) {\n    this.dispatchEvent(new GroupEvent(GroupEventType.ADDLAYER, event.layer));\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupRemove_(event) {\n    this.dispatchEvent(new GroupEvent(GroupEventType.REMOVELAYER, event.layer));\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = collectionEvent.element;\n    this.registerLayerListeners_(layer);\n    this.dispatchEvent(new GroupEvent(GroupEventType.ADDLAYER, layer));\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = collectionEvent.element;\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.dispatchEvent(new GroupEvent(GroupEventType.REMOVELAYER, layer));\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!Collection<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!Collection<import(\"./Base.js\").default>} */ (\n      this.get(Property.LAYERS)\n    );\n  }\n\n  /**\n   * Set the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!Collection<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    const collection = this.getLayers();\n    if (collection) {\n      const currentLayers = collection.getArray();\n      for (let i = 0, ii = currentLayers.length; i < ii; ++i) {\n        this.dispatchEvent(\n          new GroupEvent(GroupEventType.REMOVELAYER, currentLayers[i]),\n        );\n      }\n    }\n\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   * @override\n   */\n  getLayersArray(array) {\n    array = array !== undefined ? array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * Get the layer states list and use this groups z-index as the default\n   * for all layers in this and nested groups, if it is unset at this point.\n   * If dest is not provided and this group's z-index is undefined\n   * 0 is used a the default z-index.\n   * @param {Array<import(\"./Layer.js\").State>} [dest] Optional list\n   * of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   * @override\n   */\n  getLayerStatesArray(dest) {\n    const states = dest !== undefined ? dest : [];\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    let defaultZIndex = ownLayerState.zIndex;\n    if (!dest && ownLayerState.zIndex === undefined) {\n      defaultZIndex = 0;\n    }\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution,\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution,\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent,\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n      if (layerState.zIndex === undefined) {\n        layerState.zIndex = defaultZIndex;\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   * @override\n   */\n  getSourceState() {\n    return 'ready';\n  }\n}\n\nexport default LayerGroup;\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n\n/**\n * @typedef {'postrender'|'precompose'|'postcompose'|'rendercomplete'} MapRenderEventTypes\n */\n\n/**\n * @typedef {'postrender'|'prerender'} LayerRenderEventTypes\n */\n","/**\n * @module ol/layer/Layer\n */\nimport View from '../View.js';\nimport {assert} from '../asserts.js';\nimport EventType from '../events/EventType.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {intersects} from '../extent.js';\nimport RenderEventType from '../render/EventType.js';\nimport BaseLayer from './Base.js';\nimport LayerProperty from './Property.js';\n\n/**\n * @typedef {function(import(\"../Map.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/**\n * @typedef {'sourceready'|'change:source'} LayerEventType\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     LayerEventType, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|LayerEventType|\n *     import(\"../render/EventType\").LayerRenderEventTypes, Return>} LayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {SourceType} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer~Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../Map.js\").default|null} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * Components like {@link module:ol/interaction/Draw~Draw} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * [layer.setMap()]{@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n * A `sourceready` event is fired when the layer's source is ready.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n * @fires import(\"../events/Event.js\").BaseEvent#sourceready\n *\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @template {import(\"../renderer/Layer.js\").default} [RendererType=import(\"../renderer/Layer.js\").default]\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options<SourceType>} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = Object.assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {LayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {RendererType}\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.sourceReady_ = false;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.rendered = false;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addChangeListener(\n      LayerProperty.SOURCE,\n      this.handleSourcePropertyChange_,\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   * @override\n   */\n  getLayersArray(array) {\n    array = array ? array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   * @override\n   */\n  getLayerStatesArray(states) {\n    states = states ? states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType|null} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {SourceType|null} The source being rendered.\n   */\n  getRenderSource() {\n    return this.getSource();\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   * @override\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? 'undefined' : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n    if (this.sourceReady_ || this.getSource().getState() !== 'ready') {\n      return;\n    }\n    this.sourceReady_ = true;\n    this.dispatchEvent('sourceready');\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    this.sourceReady_ = false;\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this,\n      );\n      if (source.getState() === 'ready') {\n        this.sourceReady_ = true;\n        setTimeout(() => {\n          this.dispatchEvent('sourceready');\n        }, 0);\n      }\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return Promise.resolve([]);\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    if (!this.renderer_ || !this.rendered) {\n      return null;\n    }\n    return this.renderer_.getData(pixel);\n  }\n\n  /**\n   * The layer is visible on the map view, i.e. within its min/max resolution or zoom and\n   * extent, not set to `visible: false`, and not inside a layer group that is set\n   * to `visible: false`.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {boolean} The layer is visible in the map view.\n   * @api\n   */\n  isVisible(view) {\n    let frameState;\n    const map = this.getMapInternal();\n    if (!view && map) {\n      view = map.getView();\n    }\n    if (view instanceof View) {\n      frameState = {\n        viewState: view.getState(),\n        extent: view.calculateExtent(),\n      };\n    } else {\n      frameState = view;\n    }\n    if (!frameState.layerStatesArray && map) {\n      frameState.layerStatesArray = map.getLayerGroup().getLayerStatesArray();\n    }\n    let layerState;\n    if (frameState.layerStatesArray) {\n      layerState = frameState.layerStatesArray.find(\n        (layerState) => layerState.layer === this,\n      );\n      if (!layerState) {\n        return false;\n      }\n    } else {\n      layerState = this.getLayerState();\n    }\n\n    const layerExtent = this.getExtent();\n\n    return (\n      inView(layerState, frameState.viewState) &&\n      (!layerExtent || intersects(layerExtent, frameState.extent))\n    );\n  }\n\n  /**\n   * Get the attributions of the source of this layer for the given view.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {Array<string>} Attributions for this layer at the given view.\n   * @api\n   */\n  getAttributions(view) {\n    if (!this.isVisible(view)) {\n      return [];\n    }\n    const getAttributions = this.getSource()?.getAttributions();\n    if (!getAttributions) {\n      return [];\n    }\n    const frameState =\n      view instanceof View ? view.getViewStateAndExtent() : view;\n    let attributions = getAttributions(frameState);\n    if (!Array.isArray(attributions)) {\n      attributions = [attributions];\n    }\n    return attributions;\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      this.rendered = true;\n      return layerRenderer.renderFrame(frameState, target);\n    }\n    return null;\n  }\n\n  /**\n   * Called when a layer is not visible during a map render.\n   */\n  unrender() {\n    this.rendered = false;\n  }\n\n  /** @return {string} Declutter */\n  getDeclutter() {\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../layer/Layer.js\").State} layerState Layer state.\n   */\n  renderDeclutter(frameState, layerState) {}\n\n  /**\n   * When the renderer follows a layout -> render approach, do the final rendering here.\n   * @param {import('../Map.js').FrameState} frameState Frame state\n   */\n  renderDeferred(frameState) {\n    const layerRenderer = this.getRenderer();\n    if (!layerRenderer) {\n      return;\n    }\n    layerRenderer.renderDeferred(frameState);\n  }\n\n  /**\n   * For use inside the library only.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMapInternal(map) {\n    if (!map) {\n      this.unrender();\n    }\n    this.set(LayerProperty.MAP, map);\n  }\n\n  /**\n   * For use inside the library only.\n   * @return {import(\"../Map.js\").default|null} Map.\n   */\n  getMapInternal() {\n    return this.get(LayerProperty.MAP);\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map~Map#addLayer} instead.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        this.handlePrecompose_,\n        this,\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../events/Event.js\").default} renderEvent Render event\n   * @private\n   */\n  handlePrecompose_(renderEvent) {\n    const layerStatesArray =\n      /** @type {import(\"../render/Event.js\").default} */ (renderEvent)\n        .frameState.layerStatesArray;\n    const layerState = this.getLayerState(false);\n    assert(\n      !layerStatesArray.some(\n        (arrayLayerState) => arrayLayerState.layer === layerState.layer,\n      ),\n      'A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.',\n    );\n    layerStatesArray.push(layerState);\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType|null} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {RendererType|null} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {RendererType} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * This will clear the renderer so that a new one can be created next time it is needed\n   */\n  clearRenderer() {\n    if (this.renderer_) {\n      this.renderer_.dispose();\n      delete this.renderer_;\n    }\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.clearRenderer();\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","\n/**\n * Rearranges items so that all items in the [left, k] are the smallest.\n * The k-th element will have the (k - left + 1)-th smallest value in [left, right].\n *\n * @template T\n * @param {T[]} arr the array to partially sort (in place)\n * @param {number} k middle index for partial sorting (as defined above)\n * @param {number} [left=0] left index of the range to sort\n * @param {number} [right=arr.length-1] right index\n * @param {(a: T, b: T) => number} [compare = (a, b) => a - b] compare function\n */\nexport default function quickselect(arr, k, left = 0, right = arr.length - 1, compare = defaultCompare) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            const n = right - left + 1;\n            const m = k - left + 1;\n            const z = Math.log(n);\n            const s = 0.5 * Math.exp(2 * z / 3);\n            const sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            const newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            const newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            quickselect(arr, k, newLeft, newRight, compare);\n        }\n\n        const t = arr[k];\n        let i = left;\n        /** @type {number} */\n        let j = right;\n\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) i++;\n            while (compare(arr[j], t) > 0) j--;\n        }\n\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\n/**\n * @template T\n * @param {T[]} arr\n * @param {number} i\n * @param {number} j\n */\nfunction swap(arr, i, j) {\n    const tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\n/**\n * @template T\n * @param {T} a\n * @param {T} b\n * @returns {number}\n */\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n","import quickselect from 'quickselect';\n\nexport default class RBush {\n    constructor(maxEntries = 9) {\n        // max entries in a node is 9 by default; min node fill is 40% for best performance\n        this._maxEntries = Math.max(4, maxEntries);\n        this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\n        this.clear();\n    }\n\n    all() {\n        return this._all(this.data, []);\n    }\n\n    search(bbox) {\n        let node = this.data;\n        const result = [];\n\n        if (!intersects(bbox, node)) return result;\n\n        const toBBox = this.toBBox;\n        const nodesToSearch = [];\n\n        while (node) {\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf) result.push(child);\n                    else if (contains(bbox, childBBox)) this._all(child, result);\n                    else nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return result;\n    }\n\n    collides(bbox) {\n        let node = this.data;\n\n        if (!intersects(bbox, node)) return false;\n\n        const nodesToSearch = [];\n        while (node) {\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const childBBox = node.leaf ? this.toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf || contains(bbox, childBBox)) return true;\n                    nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return false;\n    }\n\n    load(data) {\n        if (!(data && data.length)) return this;\n\n        if (data.length < this._minEntries) {\n            for (let i = 0; i < data.length; i++) {\n                this.insert(data[i]);\n            }\n            return this;\n        }\n\n        // recursively build the tree with the given data from scratch using OMT algorithm\n        let node = this._build(data.slice(), 0, data.length - 1, 0);\n\n        if (!this.data.children.length) {\n            // save as is if tree is empty\n            this.data = node;\n\n        } else if (this.data.height === node.height) {\n            // split root if trees have the same height\n            this._splitRoot(this.data, node);\n\n        } else {\n            if (this.data.height < node.height) {\n                // swap trees if inserted one is bigger\n                const tmpNode = this.data;\n                this.data = node;\n                node = tmpNode;\n            }\n\n            // insert the small tree into the large tree at appropriate level\n            this._insert(node, this.data.height - node.height - 1, true);\n        }\n\n        return this;\n    }\n\n    insert(item) {\n        if (item) this._insert(item, this.data.height - 1);\n        return this;\n    }\n\n    clear() {\n        this.data = createNode([]);\n        return this;\n    }\n\n    remove(item, equalsFn) {\n        if (!item) return this;\n\n        let node = this.data;\n        const bbox = this.toBBox(item);\n        const path = [];\n        const indexes = [];\n        let i, parent, goingUp;\n\n        // depth-first iterative tree traversal\n        while (node || path.length) {\n\n            if (!node) { // go up\n                node = path.pop();\n                parent = path[path.length - 1];\n                i = indexes.pop();\n                goingUp = true;\n            }\n\n            if (node.leaf) { // check current node\n                const index = findItem(item, node.children, equalsFn);\n\n                if (index !== -1) {\n                    // item found, remove the item and condense tree upwards\n                    node.children.splice(index, 1);\n                    path.push(node);\n                    this._condense(path);\n                    return this;\n                }\n            }\n\n            if (!goingUp && !node.leaf && contains(node, bbox)) { // go down\n                path.push(node);\n                indexes.push(i);\n                i = 0;\n                parent = node;\n                node = node.children[0];\n\n            } else if (parent) { // go right\n                i++;\n                node = parent.children[i];\n                goingUp = false;\n\n            } else node = null; // nothing found\n        }\n\n        return this;\n    }\n\n    toBBox(item) { return item; }\n\n    compareMinX(a, b) { return a.minX - b.minX; }\n    compareMinY(a, b) { return a.minY - b.minY; }\n\n    toJSON() { return this.data; }\n\n    fromJSON(data) {\n        this.data = data;\n        return this;\n    }\n\n    _all(node, result) {\n        const nodesToSearch = [];\n        while (node) {\n            if (node.leaf) result.push(...node.children);\n            else nodesToSearch.push(...node.children);\n\n            node = nodesToSearch.pop();\n        }\n        return result;\n    }\n\n    _build(items, left, right, height) {\n\n        const N = right - left + 1;\n        let M = this._maxEntries;\n        let node;\n\n        if (N <= M) {\n            // reached leaf level; return leaf\n            node = createNode(items.slice(left, right + 1));\n            calcBBox(node, this.toBBox);\n            return node;\n        }\n\n        if (!height) {\n            // target height of the bulk-loaded tree\n            height = Math.ceil(Math.log(N) / Math.log(M));\n\n            // target number of root entries to maximize storage utilization\n            M = Math.ceil(N / Math.pow(M, height - 1));\n        }\n\n        node = createNode([]);\n        node.leaf = false;\n        node.height = height;\n\n        // split the items into M mostly square tiles\n\n        const N2 = Math.ceil(N / M);\n        const N1 = N2 * Math.ceil(Math.sqrt(M));\n\n        multiSelect(items, left, right, N1, this.compareMinX);\n\n        for (let i = left; i <= right; i += N1) {\n\n            const right2 = Math.min(i + N1 - 1, right);\n\n            multiSelect(items, i, right2, N2, this.compareMinY);\n\n            for (let j = i; j <= right2; j += N2) {\n\n                const right3 = Math.min(j + N2 - 1, right2);\n\n                // pack each entry recursively\n                node.children.push(this._build(items, j, right3, height - 1));\n            }\n        }\n\n        calcBBox(node, this.toBBox);\n\n        return node;\n    }\n\n    _chooseSubtree(bbox, node, level, path) {\n        while (true) {\n            path.push(node);\n\n            if (node.leaf || path.length - 1 === level) break;\n\n            let minArea = Infinity;\n            let minEnlargement = Infinity;\n            let targetNode;\n\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const area = bboxArea(child);\n                const enlargement = enlargedArea(bbox, child) - area;\n\n                // choose entry with the least area enlargement\n                if (enlargement < minEnlargement) {\n                    minEnlargement = enlargement;\n                    minArea = area < minArea ? area : minArea;\n                    targetNode = child;\n\n                } else if (enlargement === minEnlargement) {\n                    // otherwise choose one with the smallest area\n                    if (area < minArea) {\n                        minArea = area;\n                        targetNode = child;\n                    }\n                }\n            }\n\n            node = targetNode || node.children[0];\n        }\n\n        return node;\n    }\n\n    _insert(item, level, isNode) {\n        const bbox = isNode ? item : this.toBBox(item);\n        const insertPath = [];\n\n        // find the best node for accommodating the item, saving all nodes along the path too\n        const node = this._chooseSubtree(bbox, this.data, level, insertPath);\n\n        // put the item into the node\n        node.children.push(item);\n        extend(node, bbox);\n\n        // split on node overflow; propagate upwards if necessary\n        while (level >= 0) {\n            if (insertPath[level].children.length > this._maxEntries) {\n                this._split(insertPath, level);\n                level--;\n            } else break;\n        }\n\n        // adjust bboxes along the insertion path\n        this._adjustParentBBoxes(bbox, insertPath, level);\n    }\n\n    // split overflowed node into two\n    _split(insertPath, level) {\n        const node = insertPath[level];\n        const M = node.children.length;\n        const m = this._minEntries;\n\n        this._chooseSplitAxis(node, m, M);\n\n        const splitIndex = this._chooseSplitIndex(node, m, M);\n\n        const newNode = createNode(node.children.splice(splitIndex, node.children.length - splitIndex));\n        newNode.height = node.height;\n        newNode.leaf = node.leaf;\n\n        calcBBox(node, this.toBBox);\n        calcBBox(newNode, this.toBBox);\n\n        if (level) insertPath[level - 1].children.push(newNode);\n        else this._splitRoot(node, newNode);\n    }\n\n    _splitRoot(node, newNode) {\n        // split root node\n        this.data = createNode([node, newNode]);\n        this.data.height = node.height + 1;\n        this.data.leaf = false;\n        calcBBox(this.data, this.toBBox);\n    }\n\n    _chooseSplitIndex(node, m, M) {\n        let index;\n        let minOverlap = Infinity;\n        let minArea = Infinity;\n\n        for (let i = m; i <= M - m; i++) {\n            const bbox1 = distBBox(node, 0, i, this.toBBox);\n            const bbox2 = distBBox(node, i, M, this.toBBox);\n\n            const overlap = intersectionArea(bbox1, bbox2);\n            const area = bboxArea(bbox1) + bboxArea(bbox2);\n\n            // choose distribution with minimum overlap\n            if (overlap < minOverlap) {\n                minOverlap = overlap;\n                index = i;\n\n                minArea = area < minArea ? area : minArea;\n\n            } else if (overlap === minOverlap) {\n                // otherwise choose distribution with minimum area\n                if (area < minArea) {\n                    minArea = area;\n                    index = i;\n                }\n            }\n        }\n\n        return index || M - m;\n    }\n\n    // sorts node children by the best axis for split\n    _chooseSplitAxis(node, m, M) {\n        const compareMinX = node.leaf ? this.compareMinX : compareNodeMinX;\n        const compareMinY = node.leaf ? this.compareMinY : compareNodeMinY;\n        const xMargin = this._allDistMargin(node, m, M, compareMinX);\n        const yMargin = this._allDistMargin(node, m, M, compareMinY);\n\n        // if total distributions margin value is minimal for x, sort by minX,\n        // otherwise it's already sorted by minY\n        if (xMargin < yMargin) node.children.sort(compareMinX);\n    }\n\n    // total margin of all possible split distributions where each node is at least m full\n    _allDistMargin(node, m, M, compare) {\n        node.children.sort(compare);\n\n        const toBBox = this.toBBox;\n        const leftBBox = distBBox(node, 0, m, toBBox);\n        const rightBBox = distBBox(node, M - m, M, toBBox);\n        let margin = bboxMargin(leftBBox) + bboxMargin(rightBBox);\n\n        for (let i = m; i < M - m; i++) {\n            const child = node.children[i];\n            extend(leftBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(leftBBox);\n        }\n\n        for (let i = M - m - 1; i >= m; i--) {\n            const child = node.children[i];\n            extend(rightBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(rightBBox);\n        }\n\n        return margin;\n    }\n\n    _adjustParentBBoxes(bbox, path, level) {\n        // adjust bboxes along the given tree path\n        for (let i = level; i >= 0; i--) {\n            extend(path[i], bbox);\n        }\n    }\n\n    _condense(path) {\n        // go through the path, removing empty nodes and updating bboxes\n        for (let i = path.length - 1, siblings; i >= 0; i--) {\n            if (path[i].children.length === 0) {\n                if (i > 0) {\n                    siblings = path[i - 1].children;\n                    siblings.splice(siblings.indexOf(path[i]), 1);\n\n                } else this.clear();\n\n            } else calcBBox(path[i], this.toBBox);\n        }\n    }\n}\n\nfunction findItem(item, items, equalsFn) {\n    if (!equalsFn) return items.indexOf(item);\n\n    for (let i = 0; i < items.length; i++) {\n        if (equalsFn(item, items[i])) return i;\n    }\n    return -1;\n}\n\n// calculate node's bbox from bboxes of its children\nfunction calcBBox(node, toBBox) {\n    distBBox(node, 0, node.children.length, toBBox, node);\n}\n\n// min bounding rectangle of node children from k to p-1\nfunction distBBox(node, k, p, toBBox, destNode) {\n    if (!destNode) destNode = createNode(null);\n    destNode.minX = Infinity;\n    destNode.minY = Infinity;\n    destNode.maxX = -Infinity;\n    destNode.maxY = -Infinity;\n\n    for (let i = k; i < p; i++) {\n        const child = node.children[i];\n        extend(destNode, node.leaf ? toBBox(child) : child);\n    }\n\n    return destNode;\n}\n\nfunction extend(a, b) {\n    a.minX = Math.min(a.minX, b.minX);\n    a.minY = Math.min(a.minY, b.minY);\n    a.maxX = Math.max(a.maxX, b.maxX);\n    a.maxY = Math.max(a.maxY, b.maxY);\n    return a;\n}\n\nfunction compareNodeMinX(a, b) { return a.minX - b.minX; }\nfunction compareNodeMinY(a, b) { return a.minY - b.minY; }\n\nfunction bboxArea(a)   { return (a.maxX - a.minX) * (a.maxY - a.minY); }\nfunction bboxMargin(a) { return (a.maxX - a.minX) + (a.maxY - a.minY); }\n\nfunction enlargedArea(a, b) {\n    return (Math.max(b.maxX, a.maxX) - Math.min(b.minX, a.minX)) *\n           (Math.max(b.maxY, a.maxY) - Math.min(b.minY, a.minY));\n}\n\nfunction intersectionArea(a, b) {\n    const minX = Math.max(a.minX, b.minX);\n    const minY = Math.max(a.minY, b.minY);\n    const maxX = Math.min(a.maxX, b.maxX);\n    const maxY = Math.min(a.maxY, b.maxY);\n\n    return Math.max(0, maxX - minX) *\n           Math.max(0, maxY - minY);\n}\n\nfunction contains(a, b) {\n    return a.minX <= b.minX &&\n           a.minY <= b.minY &&\n           b.maxX <= a.maxX &&\n           b.maxY <= a.maxY;\n}\n\nfunction intersects(a, b) {\n    return b.minX <= a.maxX &&\n           b.minY <= a.maxY &&\n           b.maxX >= a.minX &&\n           b.maxY >= a.minY;\n}\n\nfunction createNode(children) {\n    return {\n        children,\n        height: 1,\n        leaf: true,\n        minX: Infinity,\n        minY: Infinity,\n        maxX: -Infinity,\n        maxY: -Infinity\n    };\n}\n\n// sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\n// combines selection algorithm with binary divide & conquer approach\n\nfunction multiSelect(arr, left, right, n, compare) {\n    const stack = [left, right];\n\n    while (stack.length) {\n        right = stack.pop();\n        left = stack.pop();\n\n        if (right - left <= n) continue;\n\n        const mid = left + Math.ceil((right - left) / n / 2) * n;\n        quickselect(arr, mid, left, right, compare);\n\n        stack.push(left, mid, mid, right);\n    }\n}\n","/**\n * @module ol/color\n */\nimport {createCanvasContext2D} from './dom.js';\nimport {clamp, toFixed} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * Color to indicate that no color should be rendered. This is meant to be used for per-reference\n * comparisons only.\n * @type {Color}\n */\nexport const NO_COLOR = [NaN, NaN, NaN, 0];\n\nlet colorParseContext;\n/**\n * @return {CanvasRenderingContext2D} The color parse context\n */\nfunction getColorParseContext() {\n  if (!colorParseContext) {\n    colorParseContext = createCanvasContext2D(1, 1, undefined, {\n      willReadFrequently: true,\n      desynchronized: true,\n    });\n  }\n  return colorParseContext;\n}\n\nconst rgbModernRegEx =\n  /^rgba?\\(\\s*(\\d+%?)\\s+(\\d+%?)\\s+(\\d+%?)(?:\\s*\\/\\s*(\\d+%|\\d*\\.\\d+|[01]))?\\s*\\)$/i;\nconst rgbLegacyAbsoluteRegEx =\n  /^rgba?\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)(?:\\s*,\\s*(\\d+%|\\d*\\.\\d+|[01]))?\\s*\\)$/i;\nconst rgbLegacyPercentageRegEx =\n  /^rgba?\\(\\s*(\\d+%)\\s*,\\s*(\\d+%)\\s*,\\s*(\\d+%)(?:\\s*,\\s*(\\d+%|\\d*\\.\\d+|[01]))?\\s*\\)$/i;\nconst hexRegEx = /^#([\\da-f]{3,4}|[\\da-f]{6}|[\\da-f]{8})$/i;\n\n/**\n * @param {string} s Color component as number or percentage.\n * @param {number} divider Divider for percentage.\n * @return {number} Color component.\n */\nfunction toColorComponent(s, divider) {\n  return s.endsWith('%')\n    ? Number(s.substring(0, s.length - 1)) / divider\n    : Number(s);\n}\n\n/**\n * @param {string} color Color string.\n */\nfunction throwInvalidColor(color) {\n  throw new Error('failed to parse \"' + color + '\" as color');\n}\n\n/**\n * @param {string} color Color string.\n * @return {Color} RGBa color array.\n */\nfunction parseRgba(color) {\n  // Fast lane for rgb(a) colors\n  if (color.toLowerCase().startsWith('rgb')) {\n    const rgb =\n      color.match(rgbLegacyAbsoluteRegEx) ||\n      color.match(rgbModernRegEx) ||\n      color.match(rgbLegacyPercentageRegEx);\n    if (rgb) {\n      const alpha = rgb[4];\n      const rgbDivider = 100 / 255;\n      return [\n        clamp((toColorComponent(rgb[1], rgbDivider) + 0.5) | 0, 0, 255),\n        clamp((toColorComponent(rgb[2], rgbDivider) + 0.5) | 0, 0, 255),\n        clamp((toColorComponent(rgb[3], rgbDivider) + 0.5) | 0, 0, 255),\n        alpha !== undefined ? clamp(toColorComponent(alpha, 100), 0, 1) : 1,\n      ];\n    }\n    throwInvalidColor(color);\n  }\n  // Fast lane for hex colors (also with alpha)\n  if (color.startsWith('#')) {\n    if (hexRegEx.test(color)) {\n      const hex = color.substring(1);\n      const step = hex.length <= 4 ? 1 : 2;\n      const colorFromHex = [0, 0, 0, 255];\n      for (let i = 0, ii = hex.length; i < ii; i += step) {\n        let colorComponent = parseInt(hex.substring(i, i + step), 16);\n        if (step === 1) {\n          colorComponent += colorComponent << 4;\n        }\n        colorFromHex[i / step] = colorComponent;\n      }\n      colorFromHex[3] = colorFromHex[3] / 255;\n      return colorFromHex;\n    }\n    throwInvalidColor(color);\n  }\n  // Use canvas color serialization to parse the color into hex or rgba\n  // See https://www.w3.org/TR/2021/SPSD-2dcontext-20210128/#serialization-of-a-color\n  const context = getColorParseContext();\n  context.fillStyle = '#abcdef';\n  let invalidCheckFillStyle = context.fillStyle;\n  context.fillStyle = color;\n  if (context.fillStyle === invalidCheckFillStyle) {\n    context.fillStyle = '#fedcba';\n    invalidCheckFillStyle = context.fillStyle;\n    context.fillStyle = color;\n    if (context.fillStyle === invalidCheckFillStyle) {\n      throwInvalidColor(color);\n    }\n  }\n  const colorString = context.fillStyle;\n  if (colorString.startsWith('#') || colorString.startsWith('rgba')) {\n    return parseRgba(colorString);\n  }\n  context.clearRect(0, 0, 1, 1);\n  context.fillRect(0, 0, 1, 1);\n  const colorFromImage = Array.from(context.getImageData(0, 0, 1, 1).data);\n  colorFromImage[3] = toFixed(colorFromImage[3] / 255, 3);\n  return colorFromImage;\n}\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  }\n  return toString(color);\n}\n\n/**\n * @type {number}\n */\nconst MAX_CACHE_SIZE = 1024;\n\n/**\n * We maintain a small cache of parsed strings.  Whenever the cache grows too large,\n * we delete an arbitrary set of the entries.\n *\n * @type {Object<string, Color>}\n */\nconst cache = {};\n\n/**\n * @type {number}\n */\nlet cacheSize = 0;\n\n/**\n * @param {Color} color A color that may or may not have an alpha channel.\n * @return {Color} The input color with an alpha channel.  If the input color has\n * an alpha channel, the input color will be returned unchanged.  Otherwise, a new\n * array will be returned with the input color and an alpha channel of 1.\n */\nexport function withAlpha(color) {\n  if (color.length === 4) {\n    return color;\n  }\n  const output = color.slice();\n  output[3] = 1;\n  return output;\n}\n\n// The functions b1, b2, a1, a2, rgbaToLcha and lchaToRgba below are adapted from\n// https://stackoverflow.com/a/67219995/2389327\n\n/**\n * @param {number} v Input value.\n * @return {number} Output value.\n */\nfunction b1(v) {\n  return v > 0.0031308 ? Math.pow(v, 1 / 2.4) * 269.025 - 14.025 : v * 3294.6;\n}\n\n/**\n * @param {number} v Input value.\n * @return {number} Output value.\n */\nfunction b2(v) {\n  return v > 0.2068965 ? Math.pow(v, 3) : (v - 4 / 29) * (108 / 841);\n}\n\n/**\n * @param {number} v Input value.\n * @return {number} Output value.\n */\nfunction a1(v) {\n  return v > 10.314724 ? Math.pow((v + 14.025) / 269.025, 2.4) : v / 3294.6;\n}\n\n/**\n * @param {number} v Input value.\n * @return {number} Output value.\n */\nfunction a2(v) {\n  return v > 0.0088564 ? Math.pow(v, 1 / 3) : v / (108 / 841) + 4 / 29;\n}\n\n/**\n * @param {Color} color RGBA color.\n * @return {Color} LCHuv color with alpha.\n */\nexport function rgbaToLcha(color) {\n  const r = a1(color[0]);\n  const g = a1(color[1]);\n  const b = a1(color[2]);\n  const y = a2(r * 0.222488403 + g * 0.716873169 + b * 0.06060791);\n  const l = 500 * (a2(r * 0.452247074 + g * 0.399439023 + b * 0.148375274) - y);\n  const q = 200 * (y - a2(r * 0.016863605 + g * 0.117638439 + b * 0.865350722));\n  const h = Math.atan2(q, l) * (180 / Math.PI);\n  return [\n    116 * y - 16,\n    Math.sqrt(l * l + q * q),\n    h < 0 ? h + 360 : h,\n    color[3],\n  ];\n}\n\n/**\n * @param {Color} color LCHuv color with alpha.\n * @return {Color} RGBA color.\n */\nexport function lchaToRgba(color) {\n  const l = (color[0] + 16) / 116;\n  const c = color[1];\n  const h = (color[2] * Math.PI) / 180;\n  const y = b2(l);\n  const x = b2(l + (c / 500) * Math.cos(h));\n  const z = b2(l - (c / 200) * Math.sin(h));\n  const r = b1(x * 3.021973625 - y * 1.617392459 - z * 0.404875592);\n  const g = b1(x * -0.943766287 + y * 1.916279586 + z * 0.027607165);\n  const b = b1(x * 0.069407491 - y * 0.22898585 + z * 1.159737864);\n  return [\n    clamp((r + 0.5) | 0, 0, 255),\n    clamp((g + 0.5) | 0, 0, 255),\n    clamp((b + 0.5) | 0, 0, 255),\n    color[3],\n  ];\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport function fromString(s) {\n  if (s === 'none') {\n    return NO_COLOR;\n  }\n  if (cache.hasOwnProperty(s)) {\n    return cache[s];\n  }\n  if (cacheSize >= MAX_CACHE_SIZE) {\n    let i = 0;\n    for (const key in cache) {\n      if ((i++ & 3) === 0) {\n        delete cache[key];\n        --cacheSize;\n      }\n    }\n  }\n\n  const color = parseRgba(s);\n  if (color.length !== 4) {\n    throwInvalidColor(s);\n  }\n  for (const c of color) {\n    if (isNaN(c)) {\n      throwInvalidColor(s);\n    }\n  }\n  cache[s] = color;\n  ++cacheSize;\n  return color;\n}\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  }\n  return fromString(color);\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : Math.round(color[3] * 1000) / 1000;\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  try {\n    fromString(s);\n    return true;\n  } catch {\n    return false;\n  }\n}\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = size[0] + 2 * num;\n  dest[1] = size[1] + 2 * num;\n  return dest;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = (size[0] * ratio + 0.5) | 0;\n  dest[1] = (size[1] * ratio + 0.5) | 0;\n  return dest;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, dest) {\n  if (Array.isArray(size)) {\n    return size;\n  }\n  if (dest === undefined) {\n    dest = [size, size];\n  } else {\n    dest[0] = size;\n    dest[1] = size;\n  }\n  return dest;\n}\n","/**\n * @module ol/expr/expression\n */\nimport {ascending} from '../array.js';\nimport {fromString as colorFromString} from '../color.js';\nimport {toSize} from '../size.js';\n\n/**\n * @fileoverview This module includes types and functions for parsing array encoded expressions.\n * The result of parsing an encoded expression is one of the specific expression classes.\n * During parsing, information is added to the parsing context about the data accessed by the\n * expression.\n */\n\n/**\n * Base type used for literal style parameters; can be a number literal or the output of an operator,\n * which in turns takes {@link import(\"./expression.js\").ExpressionValue} arguments.\n *\n * See below for details on the available operators (with notes for those that are WebGL or Canvas only).\n *\n * Reading operators:\n *   * `['band', bandIndex, xOffset, yOffset]` For tile layers only. Fetches pixel values from band\n *     `bandIndex` of the source's data. The first `bandIndex` of the source data is `1`. Fetched values\n *     are in the 0..1 range. {@link import(\"../source/TileImage.js\").default} sources have 4 bands: red,\n *     green, blue and alpha. {@link import(\"../source/DataTile.js\").default} sources can have any number\n *     of bands, depending on the underlying data source and\n *     {@link import(\"../source/GeoTIFF.js\").Options configuration}. `xOffset` and `yOffset` are optional\n *     and allow specifying pixel offsets for x and y. This is used for sampling data from neighboring pixels (WebGL only).\n *   * `['get', attributeName]` fetches a feature property value, similar to `feature.get('attributeName')`.\n *   * `['get', attributeName, keyOrArrayIndex, ...]` (Canvas only) Access nested properties and array items of a\n *     feature property. The result is `undefined` when there is nothing at the specified key or index.\n *   * `['geometry-type']` returns a feature's geometry type as string, either: 'LineString', 'Point' or 'Polygon'\n *     `Multi*` values are returned as their singular equivalent\n *     `Circle` geometries are returned as 'Polygon'\n *     `GeometryCollection` geometries are returned as the type of the first geometry found in the collection (WebGL only).\n *   * `['resolution']` returns the current resolution\n *   * `['time']` The time in seconds since the creation of the layer (WebGL only).\n *   * `['var', 'varName']` fetches a value from the style variables; will throw an error if that variable is undefined\n *   * `['zoom']` The current zoom level (WebGL only).\n *   * `['line-metric']` returns the M component of the current point on a line (WebGL only); in case where the geometry layout of the line\n *      does not contain an M component (e.g. XY or XYZ), 0 is returned; 0 is also returned for geometries other than lines.\n *      Please note that the M component will be linearly interpolated between the two points composing a segment.\n *\n * Math operators:\n *   * `['*', value1, value2, ...]` multiplies the values (either numbers or colors)\n *   * `['/', value1, value2]` divides `value1` by `value2`\n *   * `['+', value1, value2, ...]` adds the values\n *   * `['-', value1, value2]` subtracts `value2` from `value1`\n *   * `['clamp', value, low, high]` clamps `value` between `low` and `high`\n *   * `['%', value1, value2]` returns the result of `value1 % value2` (modulo)\n *   * `['^', value1, value2]` returns the value of `value1` raised to the `value2` power\n *   * `['abs', value1]` returns the absolute value of `value1`\n *   * `['floor', value1]` returns the nearest integer less than or equal to `value1`\n *   * `['round', value1]` returns the nearest integer to `value1`\n *   * `['ceil', value1]` returns the nearest integer greater than or equal to `value1`\n *   * `['sin', value1]` returns the sine of `value1`\n *   * `['cos', value1]` returns the cosine of `value1`\n *   * `['atan', value1, value2]` returns `atan2(value1, value2)`. If `value2` is not provided, returns `atan(value1)`\n *   * `['sqrt', value1]` returns the square root of `value1`\n *\n * * Transform operators:\n *   * `['case', condition1, output1, ...conditionN, outputN, fallback]` selects the first output whose corresponding\n *     condition evaluates to `true`. If no match is found, returns the `fallback` value.\n *     All conditions should be `boolean`, output and fallback can be any kind.\n *   * `['match', input, match1, output1, ...matchN, outputN, fallback]` compares the `input` value against all\n *     provided `matchX` values, returning the output associated with the first valid match. If no match is found,\n *     returns the `fallback` value.\n *     `input` and `matchX` values must all be of the same type, and can be `number` or `string`. `outputX` and\n *     `fallback` values must be of the same type, and can be of any kind.\n *   * `['interpolate', interpolation, input, stop1, output1, ...stopN, outputN]` returns a value by interpolating between\n *     pairs of inputs and outputs; `interpolation` can either be `['linear']` or `['exponential', base]` where `base` is\n *     the rate of increase from stop A to stop B (i.e. power to which the interpolation ratio is raised); a value\n *     of 1 is equivalent to `['linear']`.\n *     `input` and `stopX` values must all be of type `number`. `outputX` values can be `number` or `color` values.\n *     Note: `input` will be clamped between `stop1` and `stopN`, meaning that all output values will be comprised\n *     between `output1` and `outputN`.\n *   * `['string', value1, value2, ...]` returns the first value in the list that evaluates to a string.\n *     An example would be to provide a default value for get: `['string', ['get', 'propertyname'], 'default value']]`\n *     (Canvas only).\n *   * `['number', value1, value2, ...]` returns the first value in the list that evaluates to a number.\n *     An example would be to provide a default value for get: `['string', ['get', 'propertyname'], 42]]`\n *     (Canvas only).\n *   * `['coalesce', value1, value2, ...]` returns the first value in the list which is not null or undefined.\n *     An example would be to provide a default value for get: `['coalesce', ['get','propertyname'], 'default value']]`\n *     (Canvas only).\n *\n * * Logical operators:\n *   * `['<', value1, value2]` returns `true` if `value1` is strictly lower than `value2`, or `false` otherwise.\n *   * `['<=', value1, value2]` returns `true` if `value1` is lower than or equals `value2`, or `false` otherwise.\n *   * `['>', value1, value2]` returns `true` if `value1` is strictly greater than `value2`, or `false` otherwise.\n *   * `['>=', value1, value2]` returns `true` if `value1` is greater than or equals `value2`, or `false` otherwise.\n *   * `['==', value1, value2]` returns `true` if `value1` equals `value2`, or `false` otherwise.\n *   * `['!=', value1, value2]` returns `true` if `value1` does not equal `value2`, or `false` otherwise.\n *   * `['!', value1]` returns `false` if `value1` is `true` or greater than `0`, or `true` otherwise.\n *   * `['all', value1, value2, ...]` returns `true` if all the inputs are `true`, `false` otherwise.\n *   * `['any', value1, value2, ...]` returns `true` if any of the inputs are `true`, `false` otherwise.\n *   * `['has', attributeName, keyOrArrayIndex, ...]` returns `true` if feature properties include the (nested) key `attributeName`,\n *     `false` otherwise.\n *     Note that for WebGL layers, the hardcoded value `-9999999` is used to distinguish when a property is not defined.\n *   * `['between', value1, value2, value3]` returns `true` if `value1` is contained between `value2` and `value3`\n *     (inclusively), or `false` otherwise.\n *   * `['in', needle, haystack]` returns `true` if `needle` is found in `haystack`, and\n *     `false` otherwise.\n *     This operator has the following limitations:\n *     * `haystack` has to be an array of numbers or strings (searching for a substring in a string is not supported yet)\n *     * Only literal arrays are supported as `haystack` for now; this means that `haystack` cannot be the result of an\n *     expression. If `haystack` is an array of strings, use the `literal` operator to disambiguate from an expression:\n *     `['literal', ['abc', 'def', 'ghi']]`\n *\n * * Conversion operators:\n *   * `['array', value1, ...valueN]` creates a numerical array from `number` values; please note that the amount of\n *     values can currently only be 2, 3 or 4 (WebGL only).\n *   * `['color', red, green, blue, alpha]` or `['color', shade, alpha]` creates a `color` value from `number` values;\n *     the `alpha` parameter is optional; if not specified, it will be set to 1 (WebGL only).\n *     Note: `red`, `green` and `blue` or `shade` components must be values between 0 and 255; `alpha` between 0 and 1.\n *   * `['palette', index, colors]` picks a `color` value from an array of colors using the given index; the `index`\n *     expression must evaluate to a number; the items in the `colors` array must be strings with hex colors\n *     (e.g. `'#86A136'`), colors using the rgba[a] functional notation (e.g. `'rgb(134, 161, 54)'` or `'rgba(134, 161, 54, 1)'`),\n *     named colors (e.g. `'red'`), or array literals with 3 ([r, g, b]) or 4 ([r, g, b, a]) values (with r, g, and b\n *     in the 0-255 range and a in the 0-1 range) (WebGL only).\n *   * `['to-string', value]` converts the input value to a string. If the input is a boolean, the result is \"true\" or \"false\".\n *     If the input is a number, it is converted to a string as specified by the \"NumberToString\" algorithm of the ECMAScript\n *     Language Specification. If the input is a color, it is converted to a string of the form \"rgba(r,g,b,a)\". (Canvas only)\n *\n * Values can either be literals or another operator, as they will be evaluated recursively.\n * Literal values can be of the following types:\n * * `boolean`\n * * `number`\n * * `number[]` (number arrays can only have a length of 2, 3 or 4)\n * * `string`\n * * {@link module:ol/color~Color}\n *\n * @typedef {Array<*>|import(\"../color.js\").Color|string|number|boolean} ExpressionValue\n * @api\n */\n\nlet numTypes = 0;\nexport const NoneType = 0;\nexport const BooleanType = 1 << numTypes++;\nexport const NumberType = 1 << numTypes++;\nexport const StringType = 1 << numTypes++;\nexport const ColorType = 1 << numTypes++;\nexport const NumberArrayType = 1 << numTypes++;\nexport const SizeType = 1 << numTypes++;\nexport const AnyType = Math.pow(2, numTypes) - 1;\n\nconst typeNames = {\n  [BooleanType]: 'boolean',\n  [NumberType]: 'number',\n  [StringType]: 'string',\n  [ColorType]: 'color',\n  [NumberArrayType]: 'number[]',\n  [SizeType]: 'size',\n};\n\nconst namedTypes = Object.keys(typeNames).map(Number).sort(ascending);\n\n/**\n * @param {number} type The type.\n * @return {boolean} The type is one of the specific types (not any or a union type).\n */\nfunction isSpecific(type) {\n  return type in typeNames;\n}\n\n/**\n * Get a string representation for a type.\n * @param {number} type The type.\n * @return {string} The type name.\n */\nexport function typeName(type) {\n  const names = [];\n  for (const namedType of namedTypes) {\n    if (includesType(type, namedType)) {\n      names.push(typeNames[namedType]);\n    }\n  }\n  if (names.length === 0) {\n    return 'untyped';\n  }\n  if (names.length < 3) {\n    return names.join(' or ');\n  }\n  return names.slice(0, -1).join(', ') + ', or ' + names[names.length - 1];\n}\n\n/**\n * @param {number} broad The broad type.\n * @param {number} specific The specific type.\n * @return {boolean} The broad type includes the specific type.\n */\nexport function includesType(broad, specific) {\n  return (broad & specific) === specific;\n}\n\n/**\n * @param {number} oneType One type.\n * @param {number} otherType Another type.\n * @return {boolean} The set of types overlap (share a common specific type)\n */\nexport function overlapsType(oneType, otherType) {\n  return !!(oneType & otherType);\n}\n\n/**\n * @param {number} type The type.\n * @param {number} expected The expected type.\n * @return {boolean} The given type is exactly the expected type.\n */\nexport function isType(type, expected) {\n  return type === expected;\n}\n\n/**\n * @typedef {boolean|number|string|Array<number>} LiteralValue\n */\n\nexport class LiteralExpression {\n  /**\n   * @param {number} type The value type.\n   * @param {LiteralValue} value The literal value.\n   */\n  constructor(type, value) {\n    if (!isSpecific(type)) {\n      throw new Error(\n        `literal expressions must have a specific type, got ${typeName(type)}`,\n      );\n    }\n    this.type = type;\n    this.value = value;\n  }\n}\n\nexport class CallExpression {\n  /**\n   * @param {number} type The return type.\n   * @param {string} operator The operator.\n   * @param {...Expression} args The arguments.\n   */\n  constructor(type, operator, ...args) {\n    this.type = type;\n    this.operator = operator;\n    this.args = args;\n  }\n}\n\n/**\n * @typedef {LiteralExpression|CallExpression} Expression\n */\n\n/**\n * @typedef {Object} ParsingContext\n * @property {Set<string>} variables Variables referenced with the 'var' operator.\n * @property {Set<string>} properties Properties referenced with the 'get' operator.\n * @property {boolean} featureId The style uses the feature id.\n * @property {boolean} geometryType The style uses the feature geometry type.\n * @property {boolean} mapState The style uses the map state (view state or time elapsed).\n */\n\n/**\n * @return {ParsingContext} A new parsing context.\n */\nexport function newParsingContext() {\n  return {\n    variables: new Set(),\n    properties: new Set(),\n    featureId: false,\n    geometryType: false,\n    mapState: false,\n  };\n}\n\n/**\n * @typedef {LiteralValue|Array} EncodedExpression\n */\n\n/**\n * @param {EncodedExpression} encoded The encoded expression.\n * @param {number} expectedType The expected type.\n * @param {ParsingContext} context The parsing context.\n * @return {Expression} The parsed expression result.\n */\nexport function parse(encoded, expectedType, context) {\n  switch (typeof encoded) {\n    case 'boolean': {\n      if (isType(expectedType, StringType)) {\n        return new LiteralExpression(StringType, encoded ? 'true' : 'false');\n      }\n      if (!includesType(expectedType, BooleanType)) {\n        throw new Error(\n          `got a boolean, but expected ${typeName(expectedType)}`,\n        );\n      }\n      return new LiteralExpression(BooleanType, encoded);\n    }\n    case 'number': {\n      if (isType(expectedType, SizeType)) {\n        return new LiteralExpression(SizeType, toSize(encoded));\n      }\n      if (isType(expectedType, BooleanType)) {\n        return new LiteralExpression(BooleanType, !!encoded);\n      }\n      if (isType(expectedType, StringType)) {\n        return new LiteralExpression(StringType, encoded.toString());\n      }\n      if (!includesType(expectedType, NumberType)) {\n        throw new Error(`got a number, but expected ${typeName(expectedType)}`);\n      }\n      return new LiteralExpression(NumberType, encoded);\n    }\n    case 'string': {\n      if (isType(expectedType, ColorType)) {\n        return new LiteralExpression(ColorType, colorFromString(encoded));\n      }\n      if (isType(expectedType, BooleanType)) {\n        return new LiteralExpression(BooleanType, !!encoded);\n      }\n      if (!includesType(expectedType, StringType)) {\n        throw new Error(`got a string, but expected ${typeName(expectedType)}`);\n      }\n      return new LiteralExpression(StringType, encoded);\n    }\n    default: {\n      // pass\n    }\n  }\n\n  if (!Array.isArray(encoded)) {\n    throw new Error('expression must be an array or a primitive value');\n  }\n\n  if (encoded.length === 0) {\n    throw new Error('empty expression');\n  }\n\n  if (typeof encoded[0] === 'string') {\n    return parseCallExpression(encoded, expectedType, context);\n  }\n\n  for (const item of encoded) {\n    if (typeof item !== 'number') {\n      throw new Error('expected an array of numbers');\n    }\n  }\n\n  if (isType(expectedType, SizeType)) {\n    if (encoded.length !== 2) {\n      throw new Error(\n        `expected an array of two values for a size, got ${encoded.length}`,\n      );\n    }\n    return new LiteralExpression(SizeType, encoded);\n  }\n\n  if (isType(expectedType, ColorType)) {\n    if (encoded.length === 3) {\n      return new LiteralExpression(ColorType, [...encoded, 1]);\n    }\n    if (encoded.length === 4) {\n      return new LiteralExpression(ColorType, encoded);\n    }\n    throw new Error(\n      `expected an array of 3 or 4 values for a color, got ${encoded.length}`,\n    );\n  }\n\n  if (!includesType(expectedType, NumberArrayType)) {\n    throw new Error(\n      `got an array of numbers, but expected ${typeName(expectedType)}`,\n    );\n  }\n\n  return new LiteralExpression(NumberArrayType, encoded);\n}\n\n/**\n * @type {Object<string, string>}\n */\nexport const Ops = {\n  Get: 'get',\n  Var: 'var',\n  Concat: 'concat',\n  GeometryType: 'geometry-type',\n  LineMetric: 'line-metric',\n  Any: 'any',\n  All: 'all',\n  Not: '!',\n  Resolution: 'resolution',\n  Zoom: 'zoom',\n  Time: 'time',\n  Equal: '==',\n  NotEqual: '!=',\n  GreaterThan: '>',\n  GreaterThanOrEqualTo: '>=',\n  LessThan: '<',\n  LessThanOrEqualTo: '<=',\n  Multiply: '*',\n  Divide: '/',\n  Add: '+',\n  Subtract: '-',\n  Clamp: 'clamp',\n  Mod: '%',\n  Pow: '^',\n  Abs: 'abs',\n  Floor: 'floor',\n  Ceil: 'ceil',\n  Round: 'round',\n  Sin: 'sin',\n  Cos: 'cos',\n  Atan: 'atan',\n  Sqrt: 'sqrt',\n  Match: 'match',\n  Between: 'between',\n  Interpolate: 'interpolate',\n  Coalesce: 'coalesce',\n  Case: 'case',\n  In: 'in',\n  Number: 'number',\n  String: 'string',\n  Array: 'array',\n  Color: 'color',\n  Id: 'id',\n  Band: 'band',\n  Palette: 'palette',\n  ToString: 'to-string',\n  Has: 'has',\n};\n\n/**\n * @typedef {function(Array, number, ParsingContext):Expression} Parser\n *\n * Second argument is the expected type.\n */\n\n/**\n * @type {Object<string, Parser>}\n */\nconst parsers = {\n  [Ops.Get]: createCallExpressionParser(hasArgsCount(1, Infinity), withGetArgs),\n  [Ops.Var]: createCallExpressionParser(hasArgsCount(1, 1), withVarArgs),\n  [Ops.Has]: createCallExpressionParser(hasArgsCount(1, Infinity), withGetArgs),\n  [Ops.Id]: createCallExpressionParser(usesFeatureId, withNoArgs),\n  [Ops.Concat]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfType(StringType),\n  ),\n  [Ops.GeometryType]: createCallExpressionParser(usesGeometryType, withNoArgs),\n  [Ops.LineMetric]: createCallExpressionParser(withNoArgs),\n  [Ops.Resolution]: createCallExpressionParser(usesMapState, withNoArgs),\n  [Ops.Zoom]: createCallExpressionParser(usesMapState, withNoArgs),\n  [Ops.Time]: createCallExpressionParser(usesMapState, withNoArgs),\n  [Ops.Any]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfType(BooleanType),\n  ),\n  [Ops.All]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfType(BooleanType),\n  ),\n  [Ops.Not]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(BooleanType),\n  ),\n  [Ops.Equal]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(AnyType),\n  ),\n  [Ops.NotEqual]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(AnyType),\n  ),\n  [Ops.GreaterThan]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.GreaterThanOrEqualTo]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.LessThan]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.LessThanOrEqualTo]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Multiply]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfReturnType,\n  ),\n  [Ops.Coalesce]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfReturnType,\n  ),\n  [Ops.Divide]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Add]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Subtract]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Clamp]: createCallExpressionParser(\n    hasArgsCount(3, 3),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Mod]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Pow]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Abs]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Floor]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Ceil]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Round]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Sin]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Cos]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Atan]: createCallExpressionParser(\n    hasArgsCount(1, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Sqrt]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Match]: createCallExpressionParser(\n    hasArgsCount(4, Infinity),\n    hasEvenArgs,\n    withMatchArgs,\n  ),\n  [Ops.Between]: createCallExpressionParser(\n    hasArgsCount(3, 3),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Interpolate]: createCallExpressionParser(\n    hasArgsCount(6, Infinity),\n    hasEvenArgs,\n    withInterpolateArgs,\n  ),\n  [Ops.Case]: createCallExpressionParser(\n    hasArgsCount(3, Infinity),\n    hasOddArgs,\n    withCaseArgs,\n  ),\n  [Ops.In]: createCallExpressionParser(hasArgsCount(2, 2), withInArgs),\n  [Ops.Number]: createCallExpressionParser(\n    hasArgsCount(1, Infinity),\n    withArgsOfType(AnyType),\n  ),\n  [Ops.String]: createCallExpressionParser(\n    hasArgsCount(1, Infinity),\n    withArgsOfType(AnyType),\n  ),\n  [Ops.Array]: createCallExpressionParser(\n    hasArgsCount(1, Infinity),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Color]: createCallExpressionParser(\n    hasArgsCount(1, 4),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Band]: createCallExpressionParser(\n    hasArgsCount(1, 3),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Palette]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withPaletteArgs,\n  ),\n  [Ops.ToString]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(BooleanType | NumberType | StringType | ColorType),\n  ),\n};\n\n/**\n * @typedef {function(Array<EncodedExpression>, number, ParsingContext):Array<Expression>|void} ArgValidator\n *\n * An argument validator applies various checks to an encoded expression arguments and\n * returns the parsed arguments if any.  The second argument is the return type of the call expression.\n */\n\n/**\n * @type {ArgValidator}\n */\nfunction withGetArgs(encoded, returnType, context) {\n  const argsCount = encoded.length - 1;\n  const args = new Array(argsCount);\n  for (let i = 0; i < argsCount; ++i) {\n    const key = encoded[i + 1];\n    switch (typeof key) {\n      case 'number': {\n        args[i] = new LiteralExpression(NumberType, key);\n        break;\n      }\n      case 'string': {\n        args[i] = new LiteralExpression(StringType, key);\n        break;\n      }\n      default: {\n        throw new Error(\n          `expected a string key or numeric array index for a get operation, got ${key}`,\n        );\n      }\n    }\n    if (i === 0) {\n      context.properties.add(String(key));\n    }\n  }\n  return args;\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withVarArgs(encoded, returnType, context) {\n  const name = encoded[1];\n  if (typeof name !== 'string') {\n    throw new Error('expected a string argument for var operation');\n  }\n  context.variables.add(name);\n\n  return [new LiteralExpression(StringType, name)];\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction usesFeatureId(encoded, returnType, context) {\n  context.featureId = true;\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction usesGeometryType(encoded, returnType, context) {\n  context.geometryType = true;\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction usesMapState(encoded, returnType, context) {\n  context.mapState = true;\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withNoArgs(encoded, returnType, context) {\n  const operation = encoded[0];\n  if (encoded.length !== 1) {\n    throw new Error(`expected no arguments for ${operation} operation`);\n  }\n  return [];\n}\n\n/**\n * @param {number} minArgs The minimum number of arguments.\n * @param {number} maxArgs The maximum number of arguments.\n * @return {ArgValidator} The argument validator\n */\nfunction hasArgsCount(minArgs, maxArgs) {\n  return function (encoded, returnType, context) {\n    const operation = encoded[0];\n    const argCount = encoded.length - 1;\n    if (minArgs === maxArgs) {\n      if (argCount !== minArgs) {\n        const plural = minArgs === 1 ? '' : 's';\n        throw new Error(\n          `expected ${minArgs} argument${plural} for ${operation}, got ${argCount}`,\n        );\n      }\n    } else if (argCount < minArgs || argCount > maxArgs) {\n      const range =\n        maxArgs === Infinity\n          ? `${minArgs} or more`\n          : `${minArgs} to ${maxArgs}`;\n      throw new Error(\n        `expected ${range} arguments for ${operation}, got ${argCount}`,\n      );\n    }\n  };\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withArgsOfReturnType(encoded, returnType, context) {\n  const argCount = encoded.length - 1;\n  /**\n   * @type {Array<Expression>}\n   */\n  const args = new Array(argCount);\n  for (let i = 0; i < argCount; ++i) {\n    const expression = parse(encoded[i + 1], returnType, context);\n    args[i] = expression;\n  }\n  return args;\n}\n\n/**\n * @param {number} argType The argument type.\n * @return {ArgValidator} The argument validator\n */\nfunction withArgsOfType(argType) {\n  return function (encoded, returnType, context) {\n    const argCount = encoded.length - 1;\n    /**\n     * @type {Array<Expression>}\n     */\n    const args = new Array(argCount);\n    for (let i = 0; i < argCount; ++i) {\n      const expression = parse(encoded[i + 1], argType, context);\n      args[i] = expression;\n    }\n    return args;\n  };\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction hasOddArgs(encoded, returnType, context) {\n  const operation = encoded[0];\n  const argCount = encoded.length - 1;\n  if (argCount % 2 === 0) {\n    throw new Error(\n      `expected an odd number of arguments for ${operation}, got ${argCount} instead`,\n    );\n  }\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction hasEvenArgs(encoded, returnType, context) {\n  const operation = encoded[0];\n  const argCount = encoded.length - 1;\n  if (argCount % 2 === 1) {\n    throw new Error(\n      `expected an even number of arguments for operation ${operation}, got ${argCount} instead`,\n    );\n  }\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withMatchArgs(encoded, returnType, context) {\n  const argsCount = encoded.length - 1;\n\n  const inputType = StringType | NumberType | BooleanType;\n\n  const input = parse(encoded[1], inputType, context);\n\n  const fallback = parse(encoded[encoded.length - 1], returnType, context);\n\n  const args = new Array(argsCount - 2);\n  for (let i = 0; i < argsCount - 2; i += 2) {\n    try {\n      const match = parse(encoded[i + 2], input.type, context);\n      args[i] = match;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 1} of match expression: ${err.message}`,\n      );\n    }\n    try {\n      const output = parse(encoded[i + 3], fallback.type, context);\n      args[i + 1] = output;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 2} of match expression: ${err.message}`,\n      );\n    }\n  }\n\n  return [input, ...args, fallback];\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withInterpolateArgs(encoded, returnType, context) {\n  const interpolationType = encoded[1];\n  /**\n   * @type {number}\n   */\n  let base;\n  switch (interpolationType[0]) {\n    case 'linear':\n      base = 1;\n      break;\n    case 'exponential':\n      const b = interpolationType[1];\n      if (typeof b !== 'number' || b <= 0) {\n        throw new Error(\n          `expected a number base for exponential interpolation` +\n            `, got ${JSON.stringify(b)} instead`,\n        );\n      }\n      base = b;\n      break;\n    default:\n      throw new Error(\n        `invalid interpolation type: ${JSON.stringify(interpolationType)}`,\n      );\n  }\n\n  const interpolation = new LiteralExpression(NumberType, base);\n\n  let input;\n  try {\n    input = parse(encoded[2], NumberType, context);\n  } catch (err) {\n    throw new Error(\n      `failed to parse argument 1 in interpolate expression: ${err.message}`,\n    );\n  }\n\n  const args = new Array(encoded.length - 3);\n  for (let i = 0; i < args.length; i += 2) {\n    try {\n      const stop = parse(encoded[i + 3], NumberType, context);\n      args[i] = stop;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 2} for interpolate expression: ${err.message}`,\n      );\n    }\n    try {\n      const output = parse(encoded[i + 4], returnType, context);\n      args[i + 1] = output;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 3} for interpolate expression: ${err.message}`,\n      );\n    }\n  }\n\n  return [interpolation, input, ...args];\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withCaseArgs(encoded, returnType, context) {\n  const fallback = parse(encoded[encoded.length - 1], returnType, context);\n\n  const args = new Array(encoded.length - 1);\n  for (let i = 0; i < args.length - 1; i += 2) {\n    try {\n      const condition = parse(encoded[i + 1], BooleanType, context);\n      args[i] = condition;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i} of case expression: ${err.message}`,\n      );\n    }\n    try {\n      const output = parse(encoded[i + 2], fallback.type, context);\n      args[i + 1] = output;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 1} of case expression: ${err.message}`,\n      );\n    }\n  }\n\n  args[args.length - 1] = fallback;\n  return args;\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withInArgs(encoded, returnType, context) {\n  let haystack = encoded[2];\n  if (!Array.isArray(haystack)) {\n    throw new Error(\n      `the second argument for the \"in\" operator must be an array`,\n    );\n  }\n  /**\n   * @type {number}\n   */\n  let needleType;\n  if (typeof haystack[0] === 'string') {\n    if (haystack[0] !== 'literal') {\n      throw new Error(\n        `for the \"in\" operator, a string array should be wrapped in a \"literal\" operator to disambiguate from expressions`,\n      );\n    }\n    if (!Array.isArray(haystack[1])) {\n      throw new Error(\n        `failed to parse \"in\" expression: the literal operator must be followed by an array`,\n      );\n    }\n    haystack = haystack[1];\n    needleType = StringType;\n  } else {\n    needleType = NumberType;\n  }\n\n  const args = new Array(haystack.length);\n  for (let i = 0; i < args.length; i++) {\n    try {\n      const arg = parse(haystack[i], needleType, context);\n      args[i] = arg;\n    } catch (err) {\n      throw new Error(\n        `failed to parse haystack item ${i} for \"in\" expression: ${err.message}`,\n      );\n    }\n  }\n\n  const needle = parse(encoded[1], needleType, context);\n  return [needle, ...args];\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withPaletteArgs(encoded, returnType, context) {\n  let index;\n  try {\n    index = parse(encoded[1], NumberType, context);\n  } catch (err) {\n    throw new Error(\n      `failed to parse first argument in palette expression: ${err.message}`,\n    );\n  }\n  const colors = encoded[2];\n  if (!Array.isArray(colors)) {\n    throw new Error('the second argument of palette must be an array');\n  }\n  const parsedColors = new Array(colors.length);\n  for (let i = 0; i < parsedColors.length; i++) {\n    let color;\n    try {\n      color = parse(colors[i], ColorType, context);\n    } catch (err) {\n      throw new Error(\n        `failed to parse color at index ${i} in palette expression: ${err.message}`,\n      );\n    }\n    if (!(color instanceof LiteralExpression)) {\n      throw new Error(\n        `the palette color at index ${i} must be a literal value`,\n      );\n    }\n    parsedColors[i] = color;\n  }\n  return [index, ...parsedColors];\n}\n\n/**\n * @param {Array<ArgValidator>} validators A chain of argument validators.  The last validator is expected\n * to return the parsed arguments.\n * @return {Parser} The parser.\n */\nfunction createCallExpressionParser(...validators) {\n  return function (encoded, returnType, context) {\n    const operator = encoded[0];\n\n    /**\n     * @type {Array<Expression>}\n     */\n    let args;\n    for (let i = 0; i < validators.length; i++) {\n      const parsed = validators[i](encoded, returnType, context);\n      if (i == validators.length - 1) {\n        if (!parsed) {\n          throw new Error(\n            'expected last argument validator to return the parsed args',\n          );\n        }\n        args = parsed;\n      }\n    }\n    return new CallExpression(returnType, operator, ...args);\n  };\n}\n\n/**\n * @param {Array} encoded The encoded expression.\n * @param {number} returnType The expected return type of the call expression.\n * @param {ParsingContext} context The parsing context.\n * @return {Expression} The parsed expression.\n */\nfunction parseCallExpression(encoded, returnType, context) {\n  const operator = encoded[0];\n\n  const parser = parsers[operator];\n  if (!parser) {\n    throw new Error(`unknown operator: ${operator}`);\n  }\n  return parser(encoded, returnType, context);\n}\n\n/**\n * Returns a simplified geometry type suited for the `geometry-type` operator\n * @param {import('../geom/Geometry.js').default|import('../render/Feature.js').default} geometry Geometry object\n * @return {'Point'|'LineString'|'Polygon'|''} Simplified geometry type; empty string of no geometry found\n */\nexport function computeGeometryType(geometry) {\n  if (!geometry) {\n    return '';\n  }\n  const type = geometry.getType();\n  switch (type) {\n    case 'Point':\n    case 'LineString':\n    case 'Polygon':\n      return type;\n    case 'MultiPoint':\n    case 'MultiLineString':\n    case 'MultiPolygon':\n      return /** @type {'Point'|'LineString'|'Polygon'} */ (type.substring(5));\n    case 'Circle':\n      return 'Polygon';\n    case 'GeometryCollection':\n      return computeGeometryType(\n        /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries()[0],\n      );\n    default:\n      return '';\n  }\n}\n","/**\n * @module ol/expr/cpu\n */\n\nimport {\n  fromString,\n  lchaToRgba,\n  rgbaToLcha,\n  toString,\n  withAlpha,\n} from '../color.js';\nimport {ColorType, LiteralExpression, Ops, parse} from './expression.js';\n\n/**\n * @fileoverview This module includes functions to build expressions for evaluation on the CPU.\n * Building is composed of two steps: parsing and compiling.  The parsing step takes an encoded\n * expression and returns an instance of one of the expression classes.  The compiling step takes\n * the expression instance and returns a function that can be evaluated in to return a literal\n * value.  The evaluator function should do as little allocation and work as possible.\n */\n\n/**\n * @typedef {Object} EvaluationContext\n * @property {Object} properties The values for properties used in 'get' expressions.\n * @property {Object} variables The values for variables used in 'var' expressions.\n * @property {number} resolution The map resolution.\n * @property {string|number|null} featureId The feature id.\n * @property {string} geometryType Geometry type of the current object.\n */\n\n/**\n * @return {EvaluationContext} A new evaluation context.\n */\nexport function newEvaluationContext() {\n  return {\n    variables: {},\n    properties: {},\n    resolution: NaN,\n    featureId: null,\n    geometryType: '',\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):import(\"./expression.js\").LiteralValue} ExpressionEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):boolean} BooleanEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):number} NumberEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):string} StringEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>|string)} ColorLikeEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):Array<number>} NumberArrayEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):Array<number>} CoordinateEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>)} SizeEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>|number)} SizeLikeEvaluator\n */\n\n/**\n * @param {import('./expression.js').EncodedExpression} encoded The encoded expression.\n * @param {number} type The expected type.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The expression evaluator.\n */\nexport function buildExpression(encoded, type, context) {\n  const expression = parse(encoded, type, context);\n  return compileExpression(expression, context);\n}\n\n/**\n * @param {import(\"./expression.js\").Expression} expression The expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileExpression(expression, context) {\n  if (expression instanceof LiteralExpression) {\n    // convert colors to array if possible\n    if (expression.type === ColorType && typeof expression.value === 'string') {\n      const colorValue = fromString(expression.value);\n      return function () {\n        return colorValue;\n      };\n    }\n    return function () {\n      return expression.value;\n    };\n  }\n  const operator = expression.operator;\n  switch (operator) {\n    case Ops.Number:\n    case Ops.String:\n    case Ops.Coalesce: {\n      return compileAssertionExpression(expression, context);\n    }\n    case Ops.Get:\n    case Ops.Var:\n    case Ops.Has: {\n      return compileAccessorExpression(expression, context);\n    }\n    case Ops.Id: {\n      return (context) => context.featureId;\n    }\n    case Ops.GeometryType: {\n      return (context) => context.geometryType;\n    }\n    case Ops.Concat: {\n      const args = expression.args.map((e) => compileExpression(e, context));\n      return (context) =>\n        ''.concat(...args.map((arg) => arg(context).toString()));\n    }\n    case Ops.Resolution: {\n      return (context) => context.resolution;\n    }\n    case Ops.Any:\n    case Ops.All:\n    case Ops.Between:\n    case Ops.In:\n    case Ops.Not: {\n      return compileLogicalExpression(expression, context);\n    }\n    case Ops.Equal:\n    case Ops.NotEqual:\n    case Ops.LessThan:\n    case Ops.LessThanOrEqualTo:\n    case Ops.GreaterThan:\n    case Ops.GreaterThanOrEqualTo: {\n      return compileComparisonExpression(expression, context);\n    }\n    case Ops.Multiply:\n    case Ops.Divide:\n    case Ops.Add:\n    case Ops.Subtract:\n    case Ops.Clamp:\n    case Ops.Mod:\n    case Ops.Pow:\n    case Ops.Abs:\n    case Ops.Floor:\n    case Ops.Ceil:\n    case Ops.Round:\n    case Ops.Sin:\n    case Ops.Cos:\n    case Ops.Atan:\n    case Ops.Sqrt: {\n      return compileNumericExpression(expression, context);\n    }\n    case Ops.Case: {\n      return compileCaseExpression(expression, context);\n    }\n    case Ops.Match: {\n      return compileMatchExpression(expression, context);\n    }\n    case Ops.Interpolate: {\n      return compileInterpolateExpression(expression, context);\n    }\n    case Ops.ToString: {\n      return compileConvertExpression(expression, context);\n    }\n    default: {\n      throw new Error(`Unsupported operator ${operator}`);\n    }\n    // TODO: unimplemented\n    // Ops.Zoom\n    // Ops.Time\n    // Ops.Array\n    // Ops.Color\n    // Ops.Band\n    // Ops.Palette\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileAssertionExpression(expression, context) {\n  const type = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (type) {\n    case Ops.Coalesce: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          const value = args[i](context);\n          if (typeof value !== 'undefined' && value !== null) {\n            return value;\n          }\n        }\n        throw new Error('Expected one of the values to be non-null');\n      };\n    }\n    case Ops.Number:\n    case Ops.String: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          const value = args[i](context);\n          if (typeof value === type) {\n            return value;\n          }\n        }\n        throw new Error(`Expected one of the values to be a ${type}`);\n      };\n    }\n    default: {\n      throw new Error(`Unsupported assertion operator ${type}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileAccessorExpression(expression, context) {\n  const nameExpression = /** @type {LiteralExpression} */ (expression.args[0]);\n  const name = /** @type {string} */ (nameExpression.value);\n  switch (expression.operator) {\n    case Ops.Get: {\n      return (context) => {\n        const args = expression.args;\n        let value = context.properties[name];\n        for (let i = 1, ii = args.length; i < ii; ++i) {\n          const keyExpression = /** @type {LiteralExpression} */ (args[i]);\n          const key = /** @type {string|number} */ (keyExpression.value);\n          value = value[key];\n        }\n        return value;\n      };\n    }\n    case Ops.Var: {\n      return (context) => context.variables[name];\n    }\n    case Ops.Has: {\n      return (context) => {\n        const args = expression.args;\n        if (!(name in context.properties)) {\n          return false;\n        }\n        let value = context.properties[name];\n        for (let i = 1, ii = args.length; i < ii; ++i) {\n          const keyExpression = /** @type {LiteralExpression} */ (args[i]);\n          const key = /** @type {string|number} */ (keyExpression.value);\n          if (!value || !Object.hasOwn(value, key)) {\n            return false;\n          }\n          value = value[key];\n        }\n        return true;\n      };\n    }\n    default: {\n      throw new Error(`Unsupported accessor operator ${expression.operator}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {BooleanEvaluator} The evaluator function.\n */\nfunction compileComparisonExpression(expression, context) {\n  const op = expression.operator;\n  const left = compileExpression(expression.args[0], context);\n  const right = compileExpression(expression.args[1], context);\n  switch (op) {\n    case Ops.Equal: {\n      return (context) => left(context) === right(context);\n    }\n    case Ops.NotEqual: {\n      return (context) => left(context) !== right(context);\n    }\n    case Ops.LessThan: {\n      return (context) => left(context) < right(context);\n    }\n    case Ops.LessThanOrEqualTo: {\n      return (context) => left(context) <= right(context);\n    }\n    case Ops.GreaterThan: {\n      return (context) => left(context) > right(context);\n    }\n    case Ops.GreaterThanOrEqualTo: {\n      return (context) => left(context) >= right(context);\n    }\n    default: {\n      throw new Error(`Unsupported comparison operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {BooleanEvaluator} The evaluator function.\n */\nfunction compileLogicalExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.Any: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          if (args[i](context)) {\n            return true;\n          }\n        }\n        return false;\n      };\n    }\n    case Ops.All: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          if (!args[i](context)) {\n            return false;\n          }\n        }\n        return true;\n      };\n    }\n    case Ops.Between: {\n      return (context) => {\n        const value = args[0](context);\n        const min = args[1](context);\n        const max = args[2](context);\n        return value >= min && value <= max;\n      };\n    }\n    case Ops.In: {\n      return (context) => {\n        const value = args[0](context);\n        for (let i = 1; i < length; ++i) {\n          if (value === args[i](context)) {\n            return true;\n          }\n        }\n        return false;\n      };\n    }\n    case Ops.Not: {\n      return (context) => !args[0](context);\n    }\n    default: {\n      throw new Error(`Unsupported logical operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {NumberEvaluator} The evaluator function.\n */\nfunction compileNumericExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.Multiply: {\n      return (context) => {\n        let value = 1;\n        for (let i = 0; i < length; ++i) {\n          value *= args[i](context);\n        }\n        return value;\n      };\n    }\n    case Ops.Divide: {\n      return (context) => args[0](context) / args[1](context);\n    }\n    case Ops.Add: {\n      return (context) => {\n        let value = 0;\n        for (let i = 0; i < length; ++i) {\n          value += args[i](context);\n        }\n        return value;\n      };\n    }\n    case Ops.Subtract: {\n      return (context) => args[0](context) - args[1](context);\n    }\n    case Ops.Clamp: {\n      return (context) => {\n        const value = args[0](context);\n        const min = args[1](context);\n        if (value < min) {\n          return min;\n        }\n        const max = args[2](context);\n        if (value > max) {\n          return max;\n        }\n        return value;\n      };\n    }\n    case Ops.Mod: {\n      return (context) => args[0](context) % args[1](context);\n    }\n    case Ops.Pow: {\n      return (context) => Math.pow(args[0](context), args[1](context));\n    }\n    case Ops.Abs: {\n      return (context) => Math.abs(args[0](context));\n    }\n    case Ops.Floor: {\n      return (context) => Math.floor(args[0](context));\n    }\n    case Ops.Ceil: {\n      return (context) => Math.ceil(args[0](context));\n    }\n    case Ops.Round: {\n      return (context) => Math.round(args[0](context));\n    }\n    case Ops.Sin: {\n      return (context) => Math.sin(args[0](context));\n    }\n    case Ops.Cos: {\n      return (context) => Math.cos(args[0](context));\n    }\n    case Ops.Atan: {\n      if (length === 2) {\n        return (context) => Math.atan2(args[0](context), args[1](context));\n      }\n      return (context) => Math.atan(args[0](context));\n    }\n    case Ops.Sqrt: {\n      return (context) => Math.sqrt(args[0](context));\n    }\n    default: {\n      throw new Error(`Unsupported numeric operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileCaseExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    for (let i = 0; i < length - 1; i += 2) {\n      const condition = args[i](context);\n      if (condition) {\n        return args[i + 1](context);\n      }\n    }\n    return args[length - 1](context);\n  };\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileMatchExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    const value = args[0](context);\n    for (let i = 1; i < length - 1; i += 2) {\n      if (value === args[i](context)) {\n        return args[i + 1](context);\n      }\n    }\n    return args[length - 1](context);\n  };\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileInterpolateExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    const base = args[0](context);\n    const value = args[1](context);\n\n    let previousInput;\n    let previousOutput;\n    for (let i = 2; i < length; i += 2) {\n      const input = args[i](context);\n      let output = args[i + 1](context);\n      const isColor = Array.isArray(output);\n      if (isColor) {\n        output = withAlpha(output);\n      }\n      if (input >= value) {\n        if (i === 2) {\n          return output;\n        }\n        if (isColor) {\n          return interpolateColor(\n            base,\n            value,\n            previousInput,\n            previousOutput,\n            input,\n            output,\n          );\n        }\n        return interpolateNumber(\n          base,\n          value,\n          previousInput,\n          previousOutput,\n          input,\n          output,\n        );\n      }\n      previousInput = input;\n      previousOutput = output;\n    }\n    return previousOutput;\n  };\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileConvertExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.ToString: {\n      return (context) => {\n        const value = args[0](context);\n        if (expression.args[0].type === ColorType) {\n          return toString(value);\n        }\n        return value.toString();\n      };\n    }\n    default: {\n      throw new Error(`Unsupported convert operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {number} base The base.\n * @param {number} value The value.\n * @param {number} input1 The first input value.\n * @param {number} output1 The first output value.\n * @param {number} input2 The second input value.\n * @param {number} output2 The second output value.\n * @return {number} The interpolated value.\n */\nfunction interpolateNumber(base, value, input1, output1, input2, output2) {\n  const delta = input2 - input1;\n  if (delta === 0) {\n    return output1;\n  }\n  const along = value - input1;\n  const factor =\n    base === 1\n      ? along / delta\n      : (Math.pow(base, along) - 1) / (Math.pow(base, delta) - 1);\n  return output1 + factor * (output2 - output1);\n}\n\n/**\n * @param {number} base The base.\n * @param {number} value The value.\n * @param {number} input1 The first input value.\n * @param {import('../color.js').Color} rgba1 The first output value.\n * @param {number} input2 The second input value.\n * @param {import('../color.js').Color} rgba2 The second output value.\n * @return {import('../color.js').Color} The interpolated color.\n */\nfunction interpolateColor(base, value, input1, rgba1, input2, rgba2) {\n  const delta = input2 - input1;\n  if (delta === 0) {\n    return rgba1;\n  }\n  const lcha1 = rgbaToLcha(rgba1);\n  const lcha2 = rgbaToLcha(rgba2);\n  let deltaHue = lcha2[2] - lcha1[2];\n  if (deltaHue > 180) {\n    deltaHue -= 360;\n  } else if (deltaHue < -180) {\n    deltaHue += 360;\n  }\n\n  const lcha = [\n    interpolateNumber(base, value, input1, lcha1[0], input2, lcha2[0]),\n    interpolateNumber(base, value, input1, lcha1[1], input2, lcha2[1]),\n    lcha1[2] + interpolateNumber(base, value, input1, 0, input2, deltaHue),\n    interpolateNumber(base, value, input1, rgba1[3], input2, rgba2[3]),\n  ];\n  return lchaToRgba(lcha);\n}\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/Image\n */\nimport ImageState from './ImageState.js';\nimport EventType from './events/EventType.js';\nimport EventTarget from './events/Target.js';\nimport {listenOnce, unlistenByKey} from './events.js';\nimport {toPromise} from './functions.js';\nimport {CREATE_IMAGE_BITMAP, IMAGE_DECODE} from './has.js';\n\n/**\n * A function that takes an {@link module:ol/Image~ImageWrapper} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~ImageWrapper#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(import(\"./Image.js\").default, string): void} LoadFunction\n * @api\n */\n\n/**\n * @typedef {Object} ImageObject\n * @property {import(\"./extent.js\").Extent} [extent] Extent, if different from the requested one.\n * @property {import(\"./resolution.js\").ResolutionLike} [resolution] Resolution, if different from the requested one.\n * When x and y resolution are different, use the array type (`[xResolution, yResolution]`).\n * @property {number} [pixelRatio] Pixel ratio, if different from the requested one.\n * @property {import('./DataTile.js').ImageLike} image Image.\n */\n\n/**\n * Loader function used for image sources. Receives extent, resolution and pixel ratio as arguments.\n * For images that cover any extent and resolution (static images), the loader function should not accept\n * any arguments. The function returns an {@link import(\"./DataTile.js\").ImageLike image}, an\n * {@link import(\"./Image.js\").ImageObject image object}, or a promise for the same.\n * For loaders that generate images, the promise should not resolve until the image is loaded.\n * If the returned image does not match the extent, resolution or pixel ratio passed to the loader,\n * it has to return an {@link import(\"./Image.js\").ImageObject image object} with the `image` and the\n * correct `extent`, `resolution` and `pixelRatio`.\n *\n * @typedef {function(import(\"./extent.js\").Extent, number, number, (function(HTMLImageElement, string): void)=): import(\"./DataTile.js\").ImageLike|ImageObject|Promise<import(\"./DataTile.js\").ImageLike|ImageObject>} Loader\n * @api\n */\n\n/**\n * Loader function used for image sources. Receives extent, resolution and pixel ratio as arguments.\n * The function returns a promise for an  {@link import(\"./Image.js\").ImageObject image object}.\n *\n * @typedef {function(import(\"./extent.js\").Extent, number, number, (function(HTMLImageElement, string): void)=): Promise<import(\"./DataTile.js\").ImageLike|ImageObject>} ImageObjectPromiseLoader\n */\n\nclass ImageWrapper extends EventTarget {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|Array<number>|undefined} resolution Resolution. If provided as array, x and y\n   * resolution will be assumed.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./ImageState.js\").default|Loader} stateOrLoader State.\n   */\n  constructor(extent, resolution, pixelRatio, stateOrLoader) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|Array<number>|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state =\n      typeof stateOrLoader === 'function' ? ImageState.IDLE : stateOrLoader;\n\n    /**\n     * @private\n     * @type {import('./DataTile.js').ImageLike|null}\n     */\n    this.image_ = null;\n\n    /**\n     * @protected\n     * @type {Loader|null}\n     */\n    this.loader = typeof stateOrLoader === 'function' ? stateOrLoader : null;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @return {import('./DataTile.js').ImageLike} Image.\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number|Array<number>} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */ (this.resolution);\n  }\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      if (this.loader) {\n        this.state = ImageState.LOADING;\n        this.changed();\n        const resolution = this.getResolution();\n        const requestResolution = Array.isArray(resolution)\n          ? resolution[0]\n          : resolution;\n        toPromise(() =>\n          this.loader(\n            this.getExtent(),\n            requestResolution,\n            this.getPixelRatio(),\n          ),\n        )\n          .then((image) => {\n            if ('image' in image) {\n              this.image_ = image.image;\n            }\n            if ('extent' in image) {\n              this.extent = image.extent;\n            }\n            if ('resolution' in image) {\n              this.resolution = image.resolution;\n            }\n            if ('pixelRatio' in image) {\n              this.pixelRatio_ = image.pixelRatio;\n            }\n            if (\n              image instanceof HTMLImageElement ||\n              (CREATE_IMAGE_BITMAP && image instanceof ImageBitmap) ||\n              image instanceof HTMLCanvasElement ||\n              image instanceof HTMLVideoElement\n            ) {\n              this.image_ = image;\n            }\n            this.state = ImageState.LOADED;\n          })\n          .catch((error) => {\n            this.state = ImageState.ERROR;\n            console.error(error); // eslint-disable-line no-console\n          })\n          .finally(() => this.changed());\n      }\n    }\n  }\n\n  /**\n   * @param {import('./DataTile.js').ImageLike} image The image.\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * @param {number|Array<number>} resolution Resolution.\n   */\n  setResolution(resolution) {\n    this.resolution = resolution;\n  }\n}\n\n/**\n * @param {import('./DataTile.js').ImageLike} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n  let listening = true;\n  let decoding = false;\n  let loaded = false;\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, function () {\n      loaded = true;\n      if (!decoding) {\n        loadHandler();\n      }\n    }),\n  ];\n\n  if (img.src && IMAGE_DECODE) {\n    decoding = true;\n    img\n      .decode()\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          if (loaded) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n  } else {\n    listenerKeys.push(listenOnce(img, EventType.ERROR, errorHandler));\n  }\n\n  return function unlisten() {\n    listening = false;\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\n/**\n * Loads an image.\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<HTMLImageElement>} Promise resolving to an `HTMLImageElement`.\n * @api\n */\nexport function load(image, src) {\n  return new Promise((resolve, reject) => {\n    function handleLoad() {\n      unlisten();\n      resolve(image);\n    }\n    function handleError() {\n      unlisten();\n      reject(new Error('Image load error'));\n    }\n    function unlisten() {\n      image.removeEventListener('load', handleLoad);\n      image.removeEventListener('error', handleError);\n    }\n    image.addEventListener('load', handleLoad);\n    image.addEventListener('error', handleError);\n    if (src) {\n      image.src = src;\n    }\n  });\n}\n\n/**\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<HTMLImageElement>} Promise resolving to an `HTMLImageElement`.\n */\nexport function decodeFallback(image, src) {\n  if (src) {\n    image.src = src;\n  }\n  return image.src && IMAGE_DECODE\n    ? new Promise((resolve, reject) =>\n        image\n          .decode()\n          .then(() => resolve(image))\n          .catch((e) =>\n            image.complete && image.width ? resolve(image) : reject(e),\n          ),\n      )\n    : load(image);\n}\n\n/**\n * Loads an image and decodes it to an `ImageBitmap` if `createImageBitmap()` is supported. Returns\n * the loaded image otherwise.\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<ImageBitmap|HTMLImageElement>} Promise resolving to an `ImageBitmap` or an\n * `HTMLImageElement` if `createImageBitmap()` is not supported.\n * @api\n */\nexport function decode(image, src) {\n  if (src) {\n    image.src = src;\n  }\n  return image.src && IMAGE_DECODE && CREATE_IMAGE_BITMAP\n    ? image\n        .decode()\n        .then(() => createImageBitmap(image))\n        .catch((e) => {\n          if (image.complete && image.width) {\n            return image;\n          }\n          throw e;\n        })\n    : decodeFallback(image);\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/style/IconImageCache\n */\nimport ImageState from '../ImageState.js';\nimport {asArray} from '../color.js';\nimport {getSharedCanvasContext2D} from '../dom.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache.shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {!Object<string, CanvasPattern>}\n     * @private\n     */\n    this.patternCache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 1024;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.patternCache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          delete this.patternCache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getCacheKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @return {CanvasPattern} Icon image.\n   */\n  getPattern(src, crossOrigin, color) {\n    const key = getCacheKey(src, crossOrigin, color);\n    return key in this.patternCache_ ? this.patternCache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @param {import(\"./IconImage.js\").default|null} iconImage Icon image.\n   * @param {boolean} [pattern] Also cache a `'repeat'` pattern with this `iconImage`.\n   */\n  set(src, crossOrigin, color, iconImage, pattern) {\n    const key = getCacheKey(src, crossOrigin, color);\n    const update = key in this.cache_;\n    this.cache_[key] = iconImage;\n    if (pattern) {\n      if (iconImage.getImageState() === ImageState.IDLE) {\n        iconImage.load();\n      }\n      if (iconImage.getImageState() === ImageState.LOADING) {\n        iconImage.ready().then(() => {\n          this.patternCache_[key] = getSharedCanvasContext2D().createPattern(\n            iconImage.getImage(1),\n            'repeat',\n          );\n        });\n      } else {\n        this.patternCache_[key] = getSharedCanvasContext2D().createPattern(\n          iconImage.getImage(1),\n          'repeat',\n        );\n      }\n    }\n    if (!update) {\n      ++this.cacheSize_;\n    }\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `1024`. Change this value when\n   * your map uses more than 1024 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color|string|null} color Color.\n * @return {string} Cache key.\n */\nexport function getCacheKey(src, crossOrigin, color) {\n  const colorString = color ? asArray(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/style/IconImage\n */\n\nimport {decodeFallback} from '../Image.js';\nimport ImageState from '../ImageState.js';\nimport {asString} from '../color.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport EventType from '../events/EventType.js';\nimport EventTarget from '../events/Target.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\n\n/**\n * @type {CanvasRenderingContext2D|OffscreenCanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement|OffscreenCanvas|ImageBitmap|null} image Image.\n   * @param {string|undefined} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default|undefined} imageState Image state.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   */\n  constructor(image, src, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|OffscreenCanvas|HTMLCanvasElement|ImageBitmap}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement|OffscreenCanvas|ImageBitmap|null}\n     */\n    this.image_ = image;\n\n    /**\n     * @private\n     * @type {string|null}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement|OffscreenCanvas>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|string|null}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState === undefined ? ImageState.IDLE : imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size|null}\n     */\n    this.size_ =\n      image && image.width && image.height ? [image.width, image.height] : null;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n\n    /**\n     * @private\n     * @type {Promise<void>|null}\n     */\n    this.ready_ = null;\n  }\n\n  /**\n   * @private\n   */\n  initializeImage_() {\n    this.image_ = new Image();\n    if (this.crossOrigin_ !== null) {\n      this.image_.crossOrigin = this.crossOrigin_;\n    }\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1, undefined, {\n          willReadFrequently: true,\n        });\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    this.size_ = [this.image_.width, this.image_.height];\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement|OffscreenCanvas|ImageBitmap} Image or Canvas element or image bitmap.\n   */\n  getImage(pixelRatio) {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement|OffscreenCanvas|ImageBitmap} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ !== ImageState.IDLE) {\n      return;\n    }\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n\n    this.imageState_ = ImageState.LOADING;\n    try {\n      if (this.src_ !== undefined) {\n        /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n      }\n    } catch {\n      this.handleImageError_();\n    }\n    if (this.image_ instanceof HTMLImageElement) {\n      decodeFallback(this.image_, this.src_)\n        .then((image) => {\n          this.image_ = image;\n          this.handleImageLoad_();\n        })\n        .catch(this.handleImageError_.bind(this));\n    }\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (\n      !this.color_ ||\n      this.canvas_[pixelRatio] ||\n      this.imageState_ !== ImageState.LOADED\n    ) {\n      return;\n    }\n\n    const image = this.image_;\n    const ctx = createCanvasContext2D(\n      Math.ceil(image.width * pixelRatio),\n      Math.ceil(image.height * pixelRatio),\n    );\n    const canvas = ctx.canvas;\n\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(image, 0, 0);\n\n    ctx.globalCompositeOperation = 'multiply';\n    ctx.fillStyle = asString(this.color_);\n    ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\n\n    ctx.globalCompositeOperation = 'destination-in';\n    ctx.drawImage(image, 0, 0);\n\n    this.canvas_[pixelRatio] = canvas;\n  }\n\n  /**\n   * @return {Promise<void>} Promise that resolves when the image is loaded.\n   */\n  ready() {\n    if (!this.ready_) {\n      this.ready_ = new Promise((resolve) => {\n        if (\n          this.imageState_ === ImageState.LOADED ||\n          this.imageState_ === ImageState.ERROR\n        ) {\n          resolve();\n        } else {\n          const onChange = () => {\n            if (\n              this.imageState_ === ImageState.LOADED ||\n              this.imageState_ === ImageState.ERROR\n            ) {\n              this.removeEventListener(EventType.CHANGE, onChange);\n              resolve();\n            }\n          };\n          this.addEventListener(EventType.CHANGE, onChange);\n        }\n      });\n    }\n    return this.ready_;\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement|OffscreenCanvas|ImageBitmap|null} image Image.\n * @param {string|undefined} cacheKey Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default|undefined} imageState Image state.\n * @param {import(\"../color.js\").Color|string|null} color Color.\n * @param {boolean} [pattern] Also cache a `repeat` pattern with the icon image.\n * @return {IconImage} Icon image.\n */\nexport function get(image, cacheKey, crossOrigin, imageState, color, pattern) {\n  let iconImage =\n    cacheKey === undefined\n      ? undefined\n      : iconImageCache.get(cacheKey, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(\n      image,\n      image && 'src' in image ? image.src || undefined : cacheKey,\n      crossOrigin,\n      imageState,\n      color,\n    );\n    iconImageCache.set(cacheKey, crossOrigin, color, iconImage, pattern);\n  }\n  if (\n    pattern &&\n    iconImage &&\n    !iconImageCache.getPattern(cacheKey, crossOrigin, color)\n  ) {\n    iconImageCache.set(cacheKey, crossOrigin, color, iconImage, pattern);\n  }\n  return iconImage;\n}\n\nexport default IconImage;\n","/**\n * @module ol/colorlike\n */\nimport ImageState from './ImageState.js';\nimport {toString} from './color.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {get as getIconImage} from './style/IconImage.js';\nimport {shared as iconCache} from './style/IconImageCache.js';\n\n/**\n * @typedef {Object} PatternDescriptor\n * @property {string} src Pattern image URL\n * @property {import(\"./color.js\").Color|string} [color] Color to tint the pattern with.\n * @property {import(\"./size.js\").Size} [size] Size of the desired slice from the pattern image.\n * Use this together with `offset` when the pattern image is a sprite sheet.\n * @property {import(\"./size.js\").Size} [offset] Offset of the desired slice from the pattern image.\n * Use this together with `size` when the pattern image is a sprite sheet.\n */\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, [CanvasPattern](https://developer.mozilla.org/en-US/docs/Web/API/CanvasPattern),\n * or [CanvasGradient](https://developer.mozilla.org/en-US/docs/Web/API/CanvasGradient). The origin for\n * patterns and gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike|PatternDescriptor|null} color Color.\n * @return {ColorLike|null} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (!color) {\n    return null;\n  }\n  if (Array.isArray(color)) {\n    return toString(color);\n  }\n  if (typeof color === 'object' && 'src' in color) {\n    return asCanvasPattern(color);\n  }\n  return color;\n}\n\n/**\n * @param {PatternDescriptor} pattern Pattern descriptor.\n * @return {CanvasPattern|null} Canvas pattern or null if the pattern referenced in the\n * PatternDescriptor was not found in the icon image cache.\n */\nfunction asCanvasPattern(pattern) {\n  if (!pattern.offset || !pattern.size) {\n    return iconCache.getPattern(pattern.src, 'anonymous', pattern.color);\n  }\n\n  const cacheKey = pattern.src + ':' + pattern.offset;\n\n  const canvasPattern = iconCache.getPattern(\n    cacheKey,\n    undefined,\n    pattern.color,\n  );\n  if (canvasPattern) {\n    return canvasPattern;\n  }\n\n  const iconImage = iconCache.get(pattern.src, 'anonymous', null);\n  if (iconImage.getImageState() !== ImageState.LOADED) {\n    return null;\n  }\n  const patternCanvasContext = createCanvasContext2D(\n    pattern.size[0],\n    pattern.size[1],\n  );\n  patternCanvasContext.drawImage(\n    iconImage.getImage(1),\n    pattern.offset[0],\n    pattern.offset[1],\n    pattern.size[0],\n    pattern.size[1],\n    0,\n    0,\n    pattern.size[0],\n    pattern.size[1],\n  );\n  getIconImage(\n    patternCanvasContext.canvas,\n    cacheKey,\n    undefined,\n    ImageState.LOADED,\n    pattern.color,\n    true,\n  );\n  return iconCache.getPattern(cacheKey, undefined, pattern.color);\n}\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport {fontWeights, getFontParameters} from '../css.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {'Circle' | 'Image' | 'LineString' | 'Polygon' | 'Text' | 'Default'} BuilderType\n */\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n * @property {number} [fillPatternScale] Fill pattern scale.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {CanvasTextAlign} [textAlign] TextAlign.\n * @property {number} [repeat] Repeat.\n * @property {import(\"../style/Text.js\").TextJustify} [justify] Justify.\n * @property {CanvasTextBaseline} textBaseline TextBaseline.\n * @property {import(\"../style/Text.js\").TextPlacement} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {CanvasTextAlign}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {CanvasTextBaseline}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * @type {CanvasRenderingContext2D|OffscreenCanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\nconst genericFontFamilies = new Set([\n  'serif',\n  'sans-serif',\n  'monospace',\n  'cursive',\n  'fantasy',\n  'system-ui',\n  'ui-serif',\n  'ui-sans-serif',\n  'ui-monospace',\n  'ui-rounded',\n  'emoji',\n  'math',\n  'fangsong',\n]);\n\n/**\n * @param {string} style Css font-style\n * @param {string} weight Css font-weight\n * @param {string} family Css font-family\n * @return {string} Font key.\n */\nfunction getFontKey(style, weight, family) {\n  return `${style} ${weight} 16px \"${family}\"`;\n}\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  let timeout, fontFaceSet;\n\n  /**\n   * @param {string} fontSpec Css font spec\n   * @return {Promise<boolean>} Font with style and weight is available\n   */\n  async function isAvailable(fontSpec) {\n    await fontFaceSet.ready;\n    const fontFaces = await fontFaceSet.load(fontSpec);\n    if (fontFaces.length === 0) {\n      return false;\n    }\n    const font = getFontParameters(fontSpec);\n    const checkFamily = font.families[0].toLowerCase();\n    const checkWeight = font.weight;\n    return fontFaces.some(\n      /**\n       * @param {import('../css.js').FontParameters} f Font.\n       * @return {boolean} Font matches.\n       */\n      (f) => {\n        const family = f.family.replace(/^['\"]|['\"]$/g, '').toLowerCase();\n        const weight = fontWeights[f.weight] || f.weight;\n        return (\n          family === checkFamily &&\n          f.style === font.style &&\n          weight == checkWeight\n        );\n      },\n    );\n  }\n\n  async function check() {\n    await fontFaceSet.ready;\n    let done = true;\n    const checkedFontsProperties = checkedFonts.getProperties();\n    const fonts = Object.keys(checkedFontsProperties).filter(\n      (key) => checkedFontsProperties[key] < retries,\n    );\n    for (let i = fonts.length - 1; i >= 0; --i) {\n      const font = fonts[i];\n      let currentRetries = checkedFontsProperties[font];\n      if (currentRetries < retries) {\n        if (await isAvailable(font)) {\n          clear(textHeights);\n          checkedFonts.set(font, retries);\n        } else {\n          currentRetries += 10;\n          checkedFonts.set(font, currentRetries, true);\n          if (currentRetries < retries) {\n            done = false;\n          }\n        }\n      }\n    }\n    timeout = undefined;\n    if (!done) {\n      timeout = setTimeout(check, 100);\n    }\n  }\n\n  return async function (fontSpec) {\n    if (!fontFaceSet) {\n      fontFaceSet = WORKER_OFFSCREEN_CANVAS ? self.fonts : document.fonts;\n    }\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    let needCheck = false;\n    for (const family of families) {\n      if (genericFontFamilies.has(family)) {\n        continue;\n      }\n      const key = getFontKey(font.style, font.weight, family);\n      if (checkedFonts.get(key) !== undefined) {\n        continue;\n      }\n      checkedFonts.set(key, 0, true);\n      needCheck = true;\n    }\n    if (needCheck) {\n      clearTimeout(timeout);\n      timeout = setTimeout(check, 100);\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = text\n    .split('\\n')\n    .reduce((prev, curr) => Math.max(prev, measureTextWidth(font, curr)), 0);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {TextState} baseStyle Base style.\n * @param {Array<string>} chunks Text chunks to measure.\n * @return {{width: number, height: number, widths: Array<number>, heights: Array<number>, lineWidths: Array<number>}}} Text metrics.\n */\nexport function getTextDimensions(baseStyle, chunks) {\n  const widths = [];\n  const heights = [];\n  const lineWidths = [];\n  let width = 0;\n  let lineWidth = 0;\n  let height = 0;\n  let lineHeight = 0;\n  for (let i = 0, ii = chunks.length; i <= ii; i += 2) {\n    const text = chunks[i];\n    if (text === '\\n' || i === ii) {\n      width = Math.max(width, lineWidth);\n      lineWidths.push(lineWidth);\n      lineWidth = 0;\n      height += lineHeight;\n      lineHeight = 0;\n      continue;\n    }\n    const font = chunks[i + 1] || baseStyle.font;\n    const currentWidth = measureTextWidth(font, text);\n    widths.push(currentWidth);\n    lineWidth += currentWidth;\n    const currentHeight = measureTextHeight(font);\n    heights.push(currentHeight);\n    lineHeight = Math.max(lineHeight, currentHeight);\n  }\n  return {width, height, widths, heights, lineWidths};\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D|import(\"../render/canvas/ZIndexContext.js\").ZIndexContextProxy} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale,\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    if (context.globalAlpha === undefined) {\n      context.globalAlpha = (context) => (context.globalAlpha *= opacity);\n    } else {\n      context.globalAlpha *= opacity;\n    }\n  }\n  if (transform) {\n    context.transform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h,\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1],\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D|OffscreenCanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1],\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n","/**\n * @module ol/style/Image\n */\nimport {toSize} from '../size.js';\nimport {abstract} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n * @property {import('../style/Style.js').DeclutterMode} declutterMode Declutter mode: `declutter`, `obstacle`, `none`.\n */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.displacement_ = options.displacement;\n\n    /**\n     * @private\n     * @type {import('../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number|import(\"../size.js\").Size} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n  getDisplacement() {\n    return this.displacement_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {import(\"./Style.js\").DeclutterMode} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {import('../DataTile.js').ImageLike} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import('../DataTile.js').ImageLike} Image element.\n   */\n  getHitDetectionImage() {\n    return abstract();\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return 1;\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the displacement.\n   *\n   * @param {Array<number>} displacement Displacement.\n   * @api\n   */\n  setDisplacement(displacement) {\n    this.displacement_ = displacement;\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * @return {Promise<void>} `false` or Promise that resolves when the style is ready to use.\n   */\n  ready() {\n    return Promise.resolve();\n  }\n}\n\nexport default ImageStyle;\n","/**\n * @module ol/style/RegularShape\n */\n\nimport ImageState from '../ImageState.js';\nimport {asArray} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../render/canvas.js';\nimport IconImage from './IconImage.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\nimport ImageStyle from './Image.js';\n\n/**\n * Specify radius for regular polygons, or both radius and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} radius Radius of a regular polygon.\n * @property {number} [radius2] Second radius to make a star instead of a regular polygon.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's points facing up.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the shape in pixels.\n * Positive values will shift the shape right and up.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius` and `radius2`.\n * @property {import('./Style.js').DeclutterMode} [declutterMode] Declutter mode.\n */\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike|undefined} strokeStyle StrokeStyle.\n * @property {number} strokeWidth StrokeWidth.\n * @property {number} size Size.\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>|null} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} miterLimit MiterLimit.\n */\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when both `radius` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    super({\n      opacity: 1,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: options.scale !== undefined ? options.scale : 1,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|OffscreenCanvas|null}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius = options.radius;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_;\n\n    /**\n     * @private\n     * @type {RenderOptions}\n     */\n    this.renderOptions_;\n\n    /**\n     * @private\n     */\n    this.imageState_ =\n      this.fill_ && this.fill_.loading()\n        ? ImageState.LOADING\n        : ImageState.LOADED;\n    if (this.imageState_ === ImageState.LOADING) {\n      this.ready().then(() => (this.imageState_ = ImageState.LOADED));\n    }\n    this.render();\n  }\n\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   * @override\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   * @override\n   */\n  getAnchor() {\n    const size = this.size_;\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      size[0] / 2 - displacement[0] / scale[0],\n      size[1] / 2 + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n    this.render();\n  }\n\n  /**\n   * @return {HTMLCanvasElement|OffscreenCanvas} Image element.\n   * @override\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionCanvas_) {\n      this.hitDetectionCanvas_ = this.createHitDetectionCanvas_(\n        this.renderOptions_,\n      );\n    }\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement|OffscreenCanvas} Image or Canvas element.\n   * @api\n   * @override\n   */\n  getImage(pixelRatio) {\n    const fillKey = this.fill_?.getKey();\n    const cacheKey =\n      `${pixelRatio},${this.angle_},${this.radius},${this.radius2_},${this.points_},${fillKey}` +\n      Object.values(this.renderOptions_).join(',');\n    let image = /** @type {HTMLCanvasElement|OffscreenCanvas} */ (\n      iconImageCache.get(cacheKey, null, null)?.getImage(1)\n    );\n    if (!image) {\n      const renderOptions = this.renderOptions_;\n      const size = Math.ceil(renderOptions.size * pixelRatio);\n      const context = createCanvasContext2D(size, size);\n      this.draw_(renderOptions, context, pixelRatio);\n\n      image = context.canvas;\n      iconImageCache.set(\n        cacheKey,\n        null,\n        null,\n        new IconImage(image, undefined, null, ImageState.LOADED, null),\n      );\n    }\n    return image;\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   * @override\n   */\n  getPixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   * @override\n   */\n  getImageSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   * @override\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   * @override\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @return {import(\"../size.js\").Size} Size.\n   * @api\n   * @override\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n    this.render();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   * @override\n   */\n  listenImageChange(listener) {}\n\n  /**\n   * Load not yet loaded URI.\n   * @override\n   */\n  load() {}\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   * @override\n   */\n  unlistenImageChange(listener) {}\n\n  /**\n   * Calculate additional canvas size needed for the miter.\n   * @param {string} lineJoin Line join\n   * @param {number} strokeWidth Stroke width\n   * @param {number} miterLimit Miter limit\n   * @return {number} Additional canvas size needed\n   * @private\n   */\n  calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit) {\n    if (\n      strokeWidth === 0 ||\n      this.points_ === Infinity ||\n      (lineJoin !== 'bevel' && lineJoin !== 'miter')\n    ) {\n      return strokeWidth;\n    }\n    // m  | ^\n    // i  | |\\                  .\n    // t >|  #\\\n    // e  | |\\ \\              .\n    // r      \\s\\\n    //      |  \\t\\          .                 .\n    //          \\r\\                      .   .\n    //      |    \\o\\      .          .  . . .\n    //          e \\k\\            .  .    . .\n    //      |      \\e\\  .    .  .       . .\n    //       d      \\ \\  .  .          . .\n    //      | _ _a_ _\\#  .            . .\n    //   r1          / `             . .\n    //      |                       . .\n    //       b     /               . .\n    //      |                     . .\n    //           / r2            . .\n    //      |                        .   .\n    //         /                           .   .\n    //      |α                                   .   .\n    //       /                                         .   .\n    //      ° center\n    let r1 = this.radius;\n    let r2 = this.radius2_ === undefined ? r1 : this.radius2_;\n    if (r1 < r2) {\n      const tmp = r1;\n      r1 = r2;\n      r2 = tmp;\n    }\n    const points =\n      this.radius2_ === undefined ? this.points_ : this.points_ * 2;\n    const alpha = (2 * Math.PI) / points;\n    const a = r2 * Math.sin(alpha);\n    const b = Math.sqrt(r2 * r2 - a * a);\n    const d = r1 - b;\n    const e = Math.sqrt(a * a + d * d);\n    const miterRatio = e / a;\n    if (lineJoin === 'miter' && miterRatio <= miterLimit) {\n      return miterRatio * strokeWidth;\n    }\n    // Calculate the distance from center to the stroke corner where\n    // it was cut short because of the miter limit.\n    //              l\n    //        ----+---- <= distance from center to here is maxr\n    //       /####|k ##\\\n    //      /#####^#####\\\n    //     /#### /+\\# s #\\\n    //    /### h/+++\\# t #\\\n    //   /### t/+++++\\# r #\\\n    //  /### a/+++++++\\# o #\\\n    // /### p/++ fill +\\# k #\\\n    ///#### /+++++^+++++\\# e #\\\n    //#####/+++++/+\\+++++\\#####\\\n    const k = strokeWidth / 2 / miterRatio;\n    const l = (strokeWidth / 2) * (d / e);\n    const maxr = Math.sqrt((r1 + k) * (r1 + k) + l * l);\n    const bevelAdd = maxr - r1;\n    if (this.radius2_ === undefined || lineJoin === 'bevel') {\n      return bevelAdd * 2;\n    }\n    // If outer miter is over the miter limit the inner miter may reach through the\n    // center and be longer than the bevel, same calculation as above but swap r1 / r2.\n    const aa = r1 * Math.sin(alpha);\n    const bb = Math.sqrt(r1 * r1 - aa * aa);\n    const dd = r2 - bb;\n    const ee = Math.sqrt(aa * aa + dd * dd);\n    const innerMiterRatio = ee / aa;\n    if (innerMiterRatio <= miterLimit) {\n      const innerLength = (innerMiterRatio * strokeWidth) / 2 - r2 - r1;\n      return 2 * Math.max(bevelAdd, innerLength);\n    }\n    return bevelAdd * 2;\n  }\n\n  /**\n   * @return {RenderOptions}  The render options\n   * @protected\n   */\n  createRenderOptions() {\n    let lineCap = defaultLineCap;\n    let lineJoin = defaultLineJoin;\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = asColorLike(this.stroke_.getColor() ?? defaultStrokeStyle);\n      strokeWidth = this.stroke_.getWidth() ?? defaultLineWidth;\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset() ?? 0;\n      lineJoin = this.stroke_.getLineJoin() ?? defaultLineJoin;\n      lineCap = this.stroke_.getLineCap() ?? defaultLineCap;\n      miterLimit = this.stroke_.getMiterLimit() ?? defaultMiterLimit;\n    }\n\n    const add = this.calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit);\n    const maxRadius = Math.max(this.radius, this.radius2_ || 0);\n    const size = Math.ceil(2 * maxRadius + add);\n\n    return {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineCap: lineCap,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit,\n    };\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.renderOptions_ = this.createRenderOptions();\n    const size = this.renderOptions_.size;\n    this.hitDetectionCanvas_ = null;\n    this.size_ = [size, size];\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D|OffscreenCanvasRenderingContext2D} context The rendering context.\n   * @param {number} pixelRatio The pixel ratio.\n   */\n  draw_(renderOptions, context, pixelRatio) {\n    context.scale(pixelRatio, pixelRatio);\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (renderOptions.strokeStyle) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineCap = renderOptions.lineCap;\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @return {HTMLCanvasElement|OffscreenCanvas} Canvas containing the icon\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    let context;\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n\n      // determine if fill is transparent (or pattern or gradient)\n      let opacity = 0;\n      if (typeof color === 'string') {\n        color = asArray(color);\n      }\n      if (color === null) {\n        opacity = 1;\n      } else if (Array.isArray(color)) {\n        opacity = color.length === 4 ? color[3] : 1;\n      }\n      if (opacity === 0) {\n        // if a transparent fill style is set, create an extra hit-detection image\n        // with a default fill style\n        context = createCanvasContext2D(renderOptions.size, renderOptions.size);\n        this.drawHitDetectionCanvas_(renderOptions, context);\n      }\n    }\n    return context ? context.canvas : this.getImage(1);\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D|OffscreenCanvasRenderingContext2D} context The context to draw in.\n   */\n  createPath_(context) {\n    let points = this.points_;\n    const radius = this.radius;\n    if (points === Infinity) {\n      context.arc(0, 0, radius, 0, 2 * Math.PI);\n    } else {\n      const radius2 = this.radius2_ === undefined ? radius : this.radius2_;\n      if (this.radius2_ !== undefined) {\n        points *= 2;\n      }\n      const startAngle = this.angle_ - Math.PI / 2;\n      const step = (2 * Math.PI) / points;\n      for (let i = 0; i < points; i++) {\n        const angle0 = startAngle + i * step;\n        const radiusC = i % 2 === 0 ? radius : radius2;\n        context.lineTo(radiusC * Math.cos(angle0), radiusC * Math.sin(angle0));\n      }\n      context.closePath();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D|OffscreenCanvasRenderingContext2D} context The context.\n   */\n  drawHitDetectionCanvas_(renderOptions, context) {\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (renderOptions.strokeStyle) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @override\n   */\n  ready() {\n    return this.fill_ ? this.fill_.ready() : Promise.resolve();\n  }\n}\n\nexport default RegularShape;\n","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {import('./Style.js').DeclutterMode} [declutterMode] Declutter mode\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {radius: 5};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n  }\n\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   * @override\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius = radius;\n    this.render();\n  }\n}\n\nexport default CircleStyle;\n","/**\n * @module ol/style/Fill\n */\n\nimport ImageState from '../ImageState.js';\nimport {asArray} from '../color.js';\nimport {getUid} from '../util.js';\nimport {get as getIconImage} from './IconImage.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null} [color=null] A color,\n * gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats. For polygon fills (not for {@link import(\"./RegularShape.js\").default} fills),\n * a pattern can also be provided as {@link module:ol/colorlike~PatternDescriptor}.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nclass Fill {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default|null}\n     */\n    this.patternImage_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null}\n     */\n    this.color_ = null;\n    if (options.color !== undefined) {\n      this.setColor(options.color);\n    }\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is a {@link module:ol/colorlike~ColorLike}.\n   * @return {Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null} color Color.\n   * @api\n   */\n  setColor(color) {\n    if (color !== null && typeof color === 'object' && 'src' in color) {\n      const patternImage = getIconImage(\n        null,\n        color.src,\n        'anonymous',\n        undefined,\n        color.offset ? null : color.color ? color.color : null,\n        !(color.offset && color.size),\n      );\n      patternImage.ready().then(() => {\n        this.patternImage_ = null;\n      });\n      if (patternImage.getImageState() === ImageState.IDLE) {\n        patternImage.load();\n      }\n      if (patternImage.getImageState() === ImageState.LOADING) {\n        this.patternImage_ = patternImage;\n      }\n    }\n    this.color_ = color;\n  }\n\n  /**\n   * @return {string} Key of the fill for cache lookup.\n   */\n  getKey() {\n    const fill = this.getColor();\n    if (!fill) {\n      return '';\n    }\n    return fill instanceof CanvasPattern || fill instanceof CanvasGradient\n      ? getUid(fill)\n      : typeof fill === 'object' && 'src' in fill\n        ? fill.src + ':' + fill.offset\n        : asArray(fill).toString();\n  }\n\n  /**\n   * @return {boolean} The fill style is loading an image pattern.\n   */\n  loading() {\n    return !!this.patternImage_;\n  }\n\n  /**\n   * @return {Promise<void>} `false` or a promise that resolves when the style is ready to use.\n   */\n  ready() {\n    return this.patternImage_ ? this.patternImage_.ready() : Promise.resolve();\n  }\n}\n\nexport default Fill;\n","/**\n * @module ol/style/Icon\n */\nimport ImageState from '../ImageState.js';\nimport {assert} from '../asserts.js';\nimport {asArray} from '../color.js';\nimport EventType from '../events/EventType.js';\nimport {getUid} from '../util.js';\nimport {get as getIconImage} from './IconImage.js';\nimport ImageStyle from './Image.js';\n\n/**\n * @typedef {'fraction' | 'pixels'} IconAnchorUnits\n * Anchor unit can be either a fraction of the icon size or in pixels.\n */\n\n/**\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} IconOrigin\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n */\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {IconOrigin} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {IconAnchorUnits} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {IconAnchorUnits} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement|OffscreenCanvas|ImageBitmap} [img] Image object for the icon.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the icon in pixels.\n * Positive values will shift the icon right and up.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number} [width] The width of the icon in pixels. This can't be used together with `scale`.\n * @property {number} [height] The height of the icon in pixels. This can't be used together with `scale`.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {Array<number>} [offset=[0, 0]] Offset which, together with `size` and `offsetOrigin`, defines the\n * sub-rectangle to use from the original (sprite) image.\n * @property {IconOrigin} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"../size.js\").Size} [size] Icon size in pixels. Used together with `offset` to define the\n * sub-rectangle to use from the original (sprite) image.\n * @property {string} [src] Image source URI.\n * @property {import(\"./Style.js\").DeclutterMode} [declutterMode] Declutter mode.\n */\n\n/**\n * @param {number} width The width.\n * @param {number} height The height.\n * @param {number|undefined} wantedWidth The wanted width.\n * @param {number|undefined} wantedHeight The wanted height.\n * @return {number|Array<number>} The scale.\n */\nfunction calculateScale(width, height, wantedWidth, wantedHeight) {\n  if (wantedWidth !== undefined && wantedHeight !== undefined) {\n    return [wantedWidth / width, wantedHeight / height];\n  }\n  if (wantedWidth !== undefined) {\n    return wantedWidth / width;\n  }\n  if (wantedHeight !== undefined) {\n    return wantedHeight / height;\n  }\n  return 1;\n}\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView,\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.anchorOrigin_ =\n      options.anchorOrigin !== undefined ? options.anchorOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorXUnits_ =\n      options.anchorXUnits !== undefined ? options.anchorXUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorYUnits_ =\n      options.anchorYUnits !== undefined ? options.anchorYUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    const image = options.img !== undefined ? options.img : null;\n\n    let cacheKey = options.src;\n\n    assert(\n      !(cacheKey !== undefined && image),\n      '`image` and `src` cannot be provided at the same time',\n    );\n\n    if ((cacheKey === undefined || cacheKey.length === 0) && image) {\n      cacheKey = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(\n      cacheKey !== undefined && cacheKey.length > 0,\n      'A defined and non-empty `src` or `image` must be provided',\n    );\n\n    assert(\n      !(\n        (options.width !== undefined || options.height !== undefined) &&\n        options.scale !== undefined\n      ),\n      '`width` or `height` cannot be provided together with `scale`',\n    );\n\n    let imageState;\n    if (options.src !== undefined) {\n      imageState = ImageState.IDLE;\n    } else if (image !== undefined) {\n      if ('complete' in image) {\n        if (image.complete) {\n          imageState = image.src ? ImageState.LOADED : ImageState.IDLE;\n        } else {\n          imageState = ImageState.LOADING;\n        }\n      } else {\n        imageState = ImageState.LOADED;\n      }\n    }\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image,\n      /** @type {string} */ (cacheKey),\n      this.crossOrigin_,\n      imageState,\n      this.color_,\n    );\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.offsetOrigin_ =\n      options.offsetOrigin !== undefined ? options.offsetOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n\n    /**\n     * @private\n     */\n    this.initialOptions_;\n\n    /**\n     * Calculate the scale if width or height were given.\n     */\n    if (options.width !== undefined || options.height !== undefined) {\n      let width, height;\n      if (options.size) {\n        [width, height] = options.size;\n      } else {\n        const image = this.getImage(1);\n        if (image.width && image.height) {\n          width = image.width;\n          height = image.height;\n        } else if (image instanceof HTMLImageElement) {\n          this.initialOptions_ = options;\n          const onload = () => {\n            this.unlistenImageChange(onload);\n            if (!this.initialOptions_) {\n              return;\n            }\n            const imageSize = this.iconImage_.getSize();\n            this.setScale(\n              calculateScale(\n                imageSize[0],\n                imageSize[1],\n                options.width,\n                options.height,\n              ),\n            );\n          };\n          this.listenImageChange(onload);\n          return;\n        }\n      }\n      if (width !== undefined) {\n        this.setScale(\n          calculateScale(width, height, options.width, options.height),\n        );\n      }\n    }\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   * @override\n   */\n  clone() {\n    let scale, width, height;\n    if (this.initialOptions_) {\n      width = this.initialOptions_.width;\n      height = this.initialOptions_.height;\n    } else {\n      scale = this.getScale();\n      scale = Array.isArray(scale) ? scale.slice() : scale;\n    }\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      color:\n        this.color_ && this.color_.slice\n          ? this.color_.slice()\n          : this.color_ || undefined,\n      crossOrigin: this.crossOrigin_,\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      opacity: this.getOpacity(),\n      rotateWithView: this.getRotateWithView(),\n      rotation: this.getRotation(),\n      scale,\n      width,\n      height,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      src: this.getSrc(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   * @override\n   */\n  getAnchor() {\n    let anchor = this.normalizedAnchor_;\n    if (!anchor) {\n      anchor = this.anchor_;\n      const size = this.getSize();\n      if (\n        this.anchorXUnits_ == 'fraction' ||\n        this.anchorYUnits_ == 'fraction'\n      ) {\n        if (!size) {\n          return null;\n        }\n        anchor = this.anchor_.slice();\n        if (this.anchorXUnits_ == 'fraction') {\n          anchor[0] *= size[0];\n        }\n        if (this.anchorYUnits_ == 'fraction') {\n          anchor[1] *= size[1];\n        }\n      }\n\n      if (this.anchorOrigin_ != 'top-left') {\n        if (!size) {\n          return null;\n        }\n        if (anchor === this.anchor_) {\n          anchor = this.anchor_.slice();\n        }\n        if (\n          this.anchorOrigin_ == 'top-right' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[0] = -anchor[0] + size[0];\n        }\n        if (\n          this.anchorOrigin_ == 'bottom-left' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[1] = -anchor[1] + size[1];\n        }\n      }\n      this.normalizedAnchor_ = anchor;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      anchor[0] - displacement[0] / scale[0],\n      anchor[1] + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement|OffscreenCanvas|ImageBitmap} Image or Canvas element. If the Icon\n   * style was configured with `src` or with a not let loaded `img`, an `ImageBitmap` will be returned.\n   * @api\n   * @override\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ratio of the image.\n   * @api\n   * @override\n   */\n  getPixelRatio(pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   * @override\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   * @override\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement|OffscreenCanvas|ImageBitmap} Image element.\n   * @override\n   */\n  getHitDetectionImage() {\n    return this.iconImage_.getHitDetectionImage();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   * @override\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n\n    if (this.offsetOrigin_ != 'top-left') {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (\n        this.offsetOrigin_ == 'top-right' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (\n        this.offsetOrigin_ == 'bottom-left' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * Set the image URI\n   * @param {string} src Image source URI\n   * @api\n   */\n  setSrc(src) {\n    this.iconImage_ = getIconImage(\n      null,\n      src,\n      this.crossOrigin_,\n      ImageState.IDLE,\n      this.color_,\n    );\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   * @override\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * Get the width of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon width (in pixels).\n   * @api\n   */\n  getWidth() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[0] * scale[0];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[0] * scale[0];\n    }\n    return undefined;\n  }\n\n  /**\n   * Get the height of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon height (in pixels).\n   * @api\n   */\n  getHeight() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[1] * scale[1];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[1] * scale[1];\n    }\n    return undefined;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   * @override\n   */\n  setScale(scale) {\n    delete this.initialOptions_;\n    super.setScale(scale);\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   * @override\n   */\n  listenImageChange(listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   * @override\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   * @override\n   */\n  unlistenImageChange(listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * @override\n   */\n  ready() {\n    return this.iconImage_.ready();\n  }\n}\n\nexport default Icon;\n","/**\n * @module ol/style/Stroke\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nclass Stroke {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {CanvasLineCap|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {CanvasLineJoin|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth(),\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {CanvasLineCap|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>|null} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {CanvasLineJoin|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * @param {Array<number>|null} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n  }\n}\n\nexport default Stroke;\n","/**\n * @module ol/style/Style\n */\n\nimport {assert} from '../asserts.js';\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport Stroke from './Stroke.js';\n\n/**\n * Defines how symbols and text are decluttered on layers ith `declutter` set to `true`\n * **declutter**: Overlapping symbols and text are decluttered.\n * **obstacle**: Symbols and text are rendered, but serve as obstacle for subsequent attempts\n *   to place a symbol or text at the same location.\n * **none**: No decluttering is done.\n *\n * @typedef {\"declutter\"|\"obstacle\"|\"none\"} DeclutterMode\n */\n\n/**\n * A function that takes a {@link module:ol/Feature~Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style~Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes a {@link module:ol/Feature~Feature} as argument and returns an\n * {@link module:ol/geom/Geometry~Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>|Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>),import(\"../render.js\").State): void} RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {RenderFunction} [hitDetectionRenderer] Custom renderer for hit detection. If provided will be used\n * in hit detection rendering.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)',\n *  });\n *  const stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25,\n *  });\n *  const styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5,\n *      }),\n *      fill: fill,\n *      stroke: stroke,\n *    }),\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const styles = {};\n *  const white = [255, 255, 255, 1];\n *  const blue = [0, 153, 255, 1];\n *  const width = 3;\n *  styles['Polygon'] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5],\n *      }),\n *    }),\n *  ];\n *  styles['MultiPolygon'] =\n *      styles['Polygon'];\n *  styles['LineString'] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2,\n *      }),\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width,\n *      }),\n *    }),\n *  ];\n *  styles['MultiLineString'] = styles['LineString'];\n *\n *  styles['Circle'] = styles['Polygon'].concat(\n *    styles['LineString']\n *  );\n *\n *  styles['Point'] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue,\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2,\n *        }),\n *      }),\n *      zIndex: Infinity,\n *    }),\n *  ];\n *  styles['MultiPoint'] =\n *      styles['Point'];\n *  styles['GeometryCollection'] =\n *      styles['Polygon'].concat(\n *          styles['LineString'],\n *          styles['Point']\n *      );\n * ```\n *\n * @api\n */\nclass Style {\n  /**\n   * @param {Options} [options] Style options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction|null}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {import(\"./Image.js\").default|null}\n     */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.hitDetectionRenderer_ =\n      options.hitDetectionRenderer !== undefined\n        ? options.hitDetectionRenderer\n        : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default|null}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        geometry\n      ).clone();\n    }\n    return new Style({\n      geometry: geometry ?? undefined,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      renderer: this.getRenderer() ?? undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex(),\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Sets a custom renderer function for this style used\n   * in hit detection.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setHitDetectionRenderer(renderer) {\n    this.hitDetectionRenderer_ = renderer;\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setHitDetectionRenderer} or the `hitDetectionRenderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getHitDetectionRenderer() {\n    return this.hitDetectionRenderer_;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction|null}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default|null} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default|null} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction|null} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function (feature) {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (\n          feature.get(geometry)\n        );\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function () {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(\n        typeof (/** @type {?} */ (obj).getZIndex) === 'function',\n        'Expected an `Style` or an array of `Style`',\n      );\n      const style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function () {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n/**\n * @type {Array<Style>|null}\n */\nlet defaultStyles = null;\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)',\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25,\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5,\n        }),\n        fill: fill,\n        stroke: stroke,\n      }),\n    ];\n  }\n  return defaultStyles;\n}\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles['Polygon'] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5],\n      }),\n    }),\n  ];\n  styles['MultiPolygon'] = styles['Polygon'];\n\n  styles['LineString'] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2,\n      }),\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width,\n      }),\n    }),\n  ];\n  styles['MultiLineString'] = styles['LineString'];\n\n  styles['Circle'] = styles['Polygon'].concat(styles['LineString']);\n\n  styles['Point'] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue,\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2,\n        }),\n      }),\n      zIndex: Infinity,\n    }),\n  ];\n  styles['MultiPoint'] = styles['Point'];\n\n  styles['GeometryCollection'] = styles['Polygon'].concat(\n    styles['LineString'],\n    styles['Point'],\n  );\n\n  return styles;\n}\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/style/Text\n */\nimport {toSize} from '../size.js';\nimport Fill from './Fill.js';\n\n/**\n * @typedef {'point' | 'line'} TextPlacement\n * Default text placement is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n */\n\n/**\n * @typedef {'left' | 'center' | 'right'} TextJustify\n */\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nconst DEFAULT_FILL_COLOR = '#333';\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS `font` value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is `'10px sans-serif'`\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {TextPlacement} [placement='point'] Text placement.\n * @property {number} [repeat] Repeat interval. When set, the text will be repeated at this interval, which specifies\n * the distance between two text anchors in pixels. Only available when `placement` is set to `'line'`. Overrides 'textAlign'.\n * @property {number|import(\"../size.js\").Size} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {boolean} [keepUpright=true] Whether the text can be rotated 180° to prevent being rendered upside down.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string|Array<string>} [text] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for `placement: 'line'` or the immediate rendering API.\n * @property {CanvasTextAlign} [textAlign] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {TextJustify} [justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `justify` is ignored for immediate rendering and also for `placement: 'line'`.\n * @property {CanvasTextBaseline} [textBaseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {import(\"./Fill.js\").default|null} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333). Specify `null` for no fill.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n * @property {import('../style/Style.js').DeclutterMode} [declutterMode] Declutter mode: `declutter`, `obstacle`, `none`\n */\n\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nclass Text {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.font_ = options.font;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.keepUpright_ = options.keepUpright;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size|undefined}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale !== undefined ? options.scale : 1);\n\n    /**\n     * @private\n     * @type {string|Array<string>|undefined}\n     */\n    this.text_ = options.text;\n\n    /**\n     * @private\n     * @type {CanvasTextAlign|undefined}\n     */\n    this.textAlign_ = options.textAlign;\n\n    /**\n     * @private\n     * @type {TextJustify|undefined}\n     */\n    this.justify_ = options.justify;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.repeat_ = options.repeat;\n\n    /**\n     * @private\n     * @type {CanvasTextBaseline|undefined}\n     */\n    this.textBaseline_ = options.textBaseline;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ =\n      options.fill !== undefined\n        ? options.fill\n        : new Fill({color: DEFAULT_FILL_COLOR});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxAngle_ =\n      options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n    /**\n     * @private\n     * @type {TextPlacement}\n     */\n    this.placement_ =\n      options.placement !== undefined ? options.placement : 'point';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overflow_ = !!options.overflow;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.backgroundFill_ = options.backgroundFill\n      ? options.backgroundFill\n      : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.backgroundStroke_ = options.backgroundStroke\n      ? options.backgroundStroke\n      : null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.padding_ = options.padding === undefined ? null : options.padding;\n\n    /**\n     * @private\n     * @type {import('../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Text} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Text({\n      font: this.getFont(),\n      placement: this.getPlacement(),\n      repeat: this.getRepeat(),\n      maxAngle: this.getMaxAngle(),\n      overflow: this.getOverflow(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      keepUpright: this.getKeepUpright(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      text: this.getText(),\n      textAlign: this.getTextAlign(),\n      justify: this.getJustify(),\n      textBaseline: this.getTextBaseline(),\n      fill:\n        this.getFill() instanceof Fill\n          ? this.getFill().clone()\n          : this.getFill(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      offsetX: this.getOffsetX(),\n      offsetY: this.getOffsetY(),\n      backgroundFill: this.getBackgroundFill()\n        ? this.getBackgroundFill().clone()\n        : undefined,\n      backgroundStroke: this.getBackgroundStroke()\n        ? this.getBackgroundStroke().clone()\n        : undefined,\n      padding: this.getPadding() || undefined,\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the `overflow` configuration.\n   * @return {boolean} Let text overflow the length of the path they follow.\n   * @api\n   */\n  getOverflow() {\n    return this.overflow_;\n  }\n\n  /**\n   * Get the font name.\n   * @return {string|undefined} Font.\n   * @api\n   */\n  getFont() {\n    return this.font_;\n  }\n\n  /**\n   * Get the maximum angle between adjacent characters.\n   * @return {number} Angle in radians.\n   * @api\n   */\n  getMaxAngle() {\n    return this.maxAngle_;\n  }\n\n  /**\n   * Get the label placement.\n   * @return {TextPlacement} Text placement.\n   * @api\n   */\n  getPlacement() {\n    return this.placement_;\n  }\n\n  /**\n   * Get the repeat interval of the text.\n   * @return {number|undefined} Repeat interval in pixels.\n   * @api\n   */\n  getRepeat() {\n    return this.repeat_;\n  }\n\n  /**\n   * Get the x-offset for the text.\n   * @return {number} Horizontal text offset.\n   * @api\n   */\n  getOffsetX() {\n    return this.offsetX_;\n  }\n\n  /**\n   * Get the y-offset for the text.\n   * @return {number} Vertical text offset.\n   * @api\n   */\n  getOffsetY() {\n    return this.offsetY_;\n  }\n\n  /**\n   * Get the fill style for the text.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Determine whether the text rotates with the map.\n   * @return {boolean|undefined} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Determine whether the text can be rendered upside down.\n   * @return {boolean|undefined} Keep text upright.\n   * @api\n   */\n  getKeepUpright() {\n    return this.keepUpright_;\n  }\n\n  /**\n   * Get the text rotation.\n   * @return {number|undefined} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the text scale.\n   * @return {number|import(\"../size.js\").Size|undefined} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the stroke style for the text.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Get the text to be rendered.\n   * @return {string|Array<string>|undefined} Text.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Get the text alignment.\n   * @return {CanvasTextAlign|undefined} Text align.\n   * @api\n   */\n  getTextAlign() {\n    return this.textAlign_;\n  }\n\n  /**\n   * Get the justification.\n   * @return {TextJustify|undefined} Justification.\n   * @api\n   */\n  getJustify() {\n    return this.justify_;\n  }\n\n  /**\n   * Get the text baseline.\n   * @return {CanvasTextBaseline|undefined} Text baseline.\n   * @api\n   */\n  getTextBaseline() {\n    return this.textBaseline_;\n  }\n\n  /**\n   * Get the background fill style for the text.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getBackgroundFill() {\n    return this.backgroundFill_;\n  }\n\n  /**\n   * Get the background stroke style for the text.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getBackgroundStroke() {\n    return this.backgroundStroke_;\n  }\n\n  /**\n   * Get the padding for the text.\n   * @return {Array<number>|null} Padding.\n   * @api\n   */\n  getPadding() {\n    return this.padding_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {import(\"./Style.js\").DeclutterMode} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Set the `overflow` property.\n   *\n   * @param {boolean} overflow Let text overflow the path that it follows.\n   * @api\n   */\n  setOverflow(overflow) {\n    this.overflow_ = overflow;\n  }\n\n  /**\n   * Set the font.\n   *\n   * @param {string|undefined} font Font.\n   * @api\n   */\n  setFont(font) {\n    this.font_ = font;\n  }\n\n  /**\n   * Set the maximum angle between adjacent characters.\n   *\n   * @param {number} maxAngle Angle in radians.\n   * @api\n   */\n  setMaxAngle(maxAngle) {\n    this.maxAngle_ = maxAngle;\n  }\n\n  /**\n   * Set the x offset.\n   *\n   * @param {number} offsetX Horizontal text offset.\n   * @api\n   */\n  setOffsetX(offsetX) {\n    this.offsetX_ = offsetX;\n  }\n\n  /**\n   * Set the y offset.\n   *\n   * @param {number} offsetY Vertical text offset.\n   * @api\n   */\n  setOffsetY(offsetY) {\n    this.offsetY_ = offsetY;\n  }\n\n  /**\n   * Set the text placement.\n   *\n   * @param {TextPlacement} placement Placement.\n   * @api\n   */\n  setPlacement(placement) {\n    this.placement_ = placement;\n  }\n\n  /**\n   * Set the repeat interval of the text.\n   * @param {number|undefined} [repeat] Repeat interval in pixels.\n   * @api\n   */\n  setRepeat(repeat) {\n    this.repeat_ = repeat;\n  }\n\n  /**\n   * Set whether to rotate the text with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set whether the text can be rendered upside down.\n   *\n   * @param {boolean} keepUpright Keep text upright.\n   * @api\n   */\n  setKeepUpright(keepUpright) {\n    this.keepUpright_ = keepUpright;\n  }\n\n  /**\n   * Set the fill.\n   *\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number|undefined} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size|undefined} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale !== undefined ? scale : 1);\n  }\n\n  /**\n   * Set the stroke.\n   *\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Set the text.\n   *\n   * @param {string|Array<string>|undefined} text Text.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Set the text alignment.\n   *\n   * @param {CanvasTextAlign|undefined} textAlign Text align.\n   * @api\n   */\n  setTextAlign(textAlign) {\n    this.textAlign_ = textAlign;\n  }\n\n  /**\n   * Set the justification.\n   *\n   * @param {TextJustify|undefined} justify Justification.\n   * @api\n   */\n  setJustify(justify) {\n    this.justify_ = justify;\n  }\n\n  /**\n   * Set the text baseline.\n   *\n   * @param {CanvasTextBaseline|undefined} textBaseline Text baseline.\n   * @api\n   */\n  setTextBaseline(textBaseline) {\n    this.textBaseline_ = textBaseline;\n  }\n\n  /**\n   * Set the background fill.\n   *\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setBackgroundFill(fill) {\n    this.backgroundFill_ = fill;\n  }\n\n  /**\n   * Set the background stroke.\n   *\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setBackgroundStroke(stroke) {\n    this.backgroundStroke_ = stroke;\n  }\n\n  /**\n   * Set the padding (`[top, right, bottom, left]`).\n   *\n   * @param {Array<number>|null} padding Padding.\n   * @api\n   */\n  setPadding(padding) {\n    this.padding_ = padding;\n  }\n}\n\nexport default Text;\n","/**\n * @module ol/render/canvas/style\n */\n\nimport {NO_COLOR} from '../../color.js';\nimport {buildExpression, newEvaluationContext} from '../../expr/cpu.js';\nimport {\n  BooleanType,\n  ColorType,\n  NumberArrayType,\n  NumberType,\n  StringType,\n  computeGeometryType,\n  newParsingContext,\n} from '../../expr/expression.js';\nimport {isEmpty} from '../../obj.js';\nimport {toSize} from '../../size.js';\nimport Circle from '../../style/Circle.js';\nimport Fill from '../../style/Fill.js';\nimport Icon from '../../style/Icon.js';\nimport RegularShape from '../../style/RegularShape.js';\nimport Stroke from '../../style/Stroke.js';\nimport Style from '../../style/Style.js';\nimport Text from '../../style/Text.js';\n\n/**\n * @fileoverview This module includes functions to build styles for the canvas renderer.  Building\n * is composed of two steps: parsing and compiling.  The parsing step takes an encoded expression\n * and returns an instance of one of the expression classes.  The compiling step takes the\n * expression instance and returns a function that can be evaluated to return a literal value.  The\n * evaluator function should do as little allocation and work as possible.\n */\n\n/**\n * @typedef {import(\"../../style/flat.js\").FlatStyle} FlatStyle\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").EncodedExpression} EncodedExpression\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").ParsingContext} ParsingContext\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").CallExpression} CallExpression\n */\n\n/**\n * @typedef {import(\"../../expr/cpu.js\").EvaluationContext} EvaluationContext\n */\n\n/**\n * @typedef {import(\"../../expr/cpu.js\").ExpressionEvaluator} ExpressionEvaluator\n */\n\n/**\n * @param {EvaluationContext} context The evaluation context.\n * @return {boolean} Always true.\n */\nfunction always(context) {\n  return true;\n}\n\n/**\n * This function adapts a rule evaluator to the existing style function interface.\n * After we have deprecated the style function, we can use the compiled rules directly\n * and pass a more complete evaluation context (variables, zoom, time, etc.).\n *\n * @param {Array<import('../../style/flat.js').Rule>} rules The rules.\n * @return {import('../../style/Style.js').StyleFunction} A style function.\n */\nexport function rulesToStyleFunction(rules) {\n  const parsingContext = newParsingContext();\n  const evaluator = buildRuleSet(rules, parsingContext);\n  const evaluationContext = newEvaluationContext();\n  return function (feature, resolution) {\n    evaluationContext.properties = feature.getPropertiesInternal();\n    evaluationContext.resolution = resolution;\n    if (parsingContext.featureId) {\n      const id = feature.getId();\n      if (id !== undefined) {\n        evaluationContext.featureId = id;\n      } else {\n        evaluationContext.featureId = null;\n      }\n    }\n    if (parsingContext.geometryType) {\n      evaluationContext.geometryType = computeGeometryType(\n        feature.getGeometry(),\n      );\n    }\n    return evaluator(evaluationContext);\n  };\n}\n\n/**\n * This function adapts a style evaluator to the existing style function interface.\n * After we have deprecated the style function, we can use the compiled rules directly\n * and pass a more complete evaluation context (variables, zoom, time, etc.).\n *\n * @param {Array<import('../../style/flat.js').FlatStyle>} flatStyles The flat styles.\n * @return {import('../../style/Style.js').StyleFunction} A style function.\n */\nexport function flatStylesToStyleFunction(flatStyles) {\n  const parsingContext = newParsingContext();\n  const length = flatStyles.length;\n\n  /**\n   * @type {Array<StyleEvaluator>}\n   */\n  const evaluators = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    evaluators[i] = buildStyle(flatStyles[i], parsingContext);\n  }\n  const evaluationContext = newEvaluationContext();\n\n  /**\n   * @type {Array<Style>}\n   */\n  const styles = new Array(length);\n\n  return function (feature, resolution) {\n    evaluationContext.properties = feature.getPropertiesInternal();\n    evaluationContext.resolution = resolution;\n    if (parsingContext.featureId) {\n      const id = feature.getId();\n      if (id !== undefined) {\n        evaluationContext.featureId = id;\n      } else {\n        evaluationContext.featureId = null;\n      }\n    }\n    let nonNullCount = 0;\n    for (let i = 0; i < length; ++i) {\n      const style = evaluators[i](evaluationContext);\n      if (style) {\n        styles[nonNullCount] = style;\n        nonNullCount += 1;\n      }\n    }\n    styles.length = nonNullCount;\n    return styles;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Array<Style>} RuleSetEvaluator\n */\n\n/**\n * @typedef {Object} CompiledRule\n * @property {ExpressionEvaluator} filter The compiled filter evaluator.\n * @property {Array<StyleEvaluator>} styles The list of compiled style evaluators.\n */\n\n/**\n * @param {Array<import('../../style/flat.js').Rule>} rules The rules.\n * @param {ParsingContext} context The parsing context.\n * @return {RuleSetEvaluator} The evaluator function.\n */\nexport function buildRuleSet(rules, context) {\n  const length = rules.length;\n\n  /**\n   * @type {Array<CompiledRule>}\n   */\n  const compiledRules = new Array(length);\n\n  for (let i = 0; i < length; ++i) {\n    const rule = rules[i];\n    const filter =\n      'filter' in rule\n        ? buildExpression(rule.filter, BooleanType, context)\n        : always;\n\n    /**\n     * @type {Array<StyleEvaluator>}\n     */\n    let styles;\n    if (Array.isArray(rule.style)) {\n      const styleLength = rule.style.length;\n      styles = new Array(styleLength);\n      for (let j = 0; j < styleLength; ++j) {\n        styles[j] = buildStyle(rule.style[j], context);\n      }\n    } else {\n      styles = [buildStyle(rule.style, context)];\n    }\n\n    compiledRules[i] = {filter, styles};\n  }\n\n  return function (context) {\n    /**\n     * @type {Array<Style>}\n     */\n    const styles = [];\n\n    let someMatched = false;\n    for (let i = 0; i < length; ++i) {\n      const filterEvaluator = compiledRules[i].filter;\n      if (!filterEvaluator(context)) {\n        continue;\n      }\n      if (rules[i].else && someMatched) {\n        continue;\n      }\n      someMatched = true;\n      for (const styleEvaluator of compiledRules[i].styles) {\n        const style = styleEvaluator(context);\n        if (!style) {\n          continue;\n        }\n        styles.push(style);\n      }\n    }\n\n    return styles;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Style|null} StyleEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle A flat style literal.\n * @param {ParsingContext} context The parsing context.\n * @return {StyleEvaluator} A function that evaluates to a style.  The style returned by\n * this function will be reused between invocations.\n */\nexport function buildStyle(flatStyle, context) {\n  const evaluateFill = buildFill(flatStyle, '', context);\n  const evaluateStroke = buildStroke(flatStyle, '', context);\n  const evaluateText = buildText(flatStyle, context);\n  const evaluateImage = buildImage(flatStyle, context);\n  const evaluateZIndex = numberEvaluator(flatStyle, 'z-index', context);\n\n  if (\n    !evaluateFill &&\n    !evaluateStroke &&\n    !evaluateText &&\n    !evaluateImage &&\n    !isEmpty(flatStyle)\n  ) {\n    // assume this is a user error\n    // would be nice to check the properties and suggest \"did you mean...\"\n    throw new Error(\n      'No fill, stroke, point, or text symbolizer properties in style: ' +\n        JSON.stringify(flatStyle),\n    );\n  }\n\n  const style = new Style();\n  return function (context) {\n    let empty = true;\n    if (evaluateFill) {\n      const fill = evaluateFill(context);\n      if (fill) {\n        empty = false;\n      }\n      style.setFill(fill);\n    }\n    if (evaluateStroke) {\n      const stroke = evaluateStroke(context);\n      if (stroke) {\n        empty = false;\n      }\n      style.setStroke(stroke);\n    }\n    if (evaluateText) {\n      const text = evaluateText(context);\n      if (text) {\n        empty = false;\n      }\n      style.setText(text);\n    }\n    if (evaluateImage) {\n      const image = evaluateImage(context);\n      if (image) {\n        empty = false;\n      }\n      style.setImage(image);\n    }\n    if (evaluateZIndex) {\n      style.setZIndex(evaluateZIndex(context));\n    }\n    if (empty) {\n      return null;\n    }\n    return style;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Fill|null} FillEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @param {ParsingContext} context The parsing context.\n * @return {FillEvaluator?} A function that evaluates to a fill.\n */\nfunction buildFill(flatStyle, prefix, context) {\n  let evaluateColor;\n  if (prefix + 'fill-pattern-src' in flatStyle) {\n    evaluateColor = patternEvaluator(flatStyle, prefix + 'fill-', context);\n  } else {\n    if (flatStyle[prefix + 'fill-color'] === 'none') {\n      // avoids hit detection\n      return (context) => null;\n    }\n\n    evaluateColor = colorLikeEvaluator(\n      flatStyle,\n      prefix + 'fill-color',\n      context,\n    );\n  }\n  if (!evaluateColor) {\n    return null;\n  }\n\n  const fill = new Fill();\n  return function (context) {\n    const color = evaluateColor(context);\n    if (color === NO_COLOR) {\n      return null;\n    }\n    fill.setColor(color);\n    return fill;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Stroke|null} StrokeEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @param {ParsingContext} context The parsing context.\n * @return {StrokeEvaluator?} A function the evaluates to a stroke.\n */\nfunction buildStroke(flatStyle, prefix, context) {\n  const evaluateWidth = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-width',\n    context,\n  );\n\n  const evaluateColor = colorLikeEvaluator(\n    flatStyle,\n    prefix + 'stroke-color',\n    context,\n  );\n\n  if (!evaluateWidth && !evaluateColor) {\n    return null;\n  }\n\n  const evaluateLineCap = stringEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-cap',\n    context,\n  );\n\n  const evaluateLineJoin = stringEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-join',\n    context,\n  );\n\n  const evaluateLineDash = numberArrayEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-dash',\n    context,\n  );\n\n  const evaluateLineDashOffset = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-dash-offset',\n    context,\n  );\n\n  const evaluateMiterLimit = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-miter-limit',\n    context,\n  );\n\n  const stroke = new Stroke();\n  return function (context) {\n    if (evaluateColor) {\n      const color = evaluateColor(context);\n      if (color === NO_COLOR) {\n        return null;\n      }\n      stroke.setColor(color);\n    }\n\n    if (evaluateWidth) {\n      stroke.setWidth(evaluateWidth(context));\n    }\n\n    if (evaluateLineCap) {\n      const lineCap = evaluateLineCap(context);\n      if (lineCap !== 'butt' && lineCap !== 'round' && lineCap !== 'square') {\n        throw new Error('Expected butt, round, or square line cap');\n      }\n      stroke.setLineCap(lineCap);\n    }\n\n    if (evaluateLineJoin) {\n      const lineJoin = evaluateLineJoin(context);\n      if (\n        lineJoin !== 'bevel' &&\n        lineJoin !== 'round' &&\n        lineJoin !== 'miter'\n      ) {\n        throw new Error('Expected bevel, round, or miter line join');\n      }\n      stroke.setLineJoin(lineJoin);\n    }\n\n    if (evaluateLineDash) {\n      stroke.setLineDash(evaluateLineDash(context));\n    }\n\n    if (evaluateLineDashOffset) {\n      stroke.setLineDashOffset(evaluateLineDashOffset(context));\n    }\n\n    if (evaluateMiterLimit) {\n      stroke.setMiterLimit(evaluateMiterLimit(context));\n    }\n\n    return stroke;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Text} TextEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {TextEvaluator?} A function that evaluates to a text symbolizer.\n */\nfunction buildText(flatStyle, context) {\n  const prefix = 'text-';\n\n  // Currently, an Array<string> may be used for rich text support.  This doesn't\n  // work with our expression syntax where arrays of strings are interpreted as\n  // call expressions.  To support rich text, we could add a 'strings' operator\n  // where all the following arguments would be string values.\n  const evaluateValue = stringEvaluator(flatStyle, prefix + 'value', context);\n  if (!evaluateValue) {\n    return null;\n  }\n\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n\n  const evaluateBackgroundFill = buildFill(\n    flatStyle,\n    prefix + 'background-',\n    context,\n  );\n\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n\n  const evaluateBackgroundStroke = buildStroke(\n    flatStyle,\n    prefix + 'background-',\n    context,\n  );\n\n  const evaluateFont = stringEvaluator(flatStyle, prefix + 'font', context);\n\n  const evaluateMaxAngle = numberEvaluator(\n    flatStyle,\n    prefix + 'max-angle',\n    context,\n  );\n\n  const evaluateOffsetX = numberEvaluator(\n    flatStyle,\n    prefix + 'offset-x',\n    context,\n  );\n\n  const evaluateOffsetY = numberEvaluator(\n    flatStyle,\n    prefix + 'offset-y',\n    context,\n  );\n\n  const evaluateOverflow = booleanEvaluator(\n    flatStyle,\n    prefix + 'overflow',\n    context,\n  );\n\n  const evaluatePlacement = stringEvaluator(\n    flatStyle,\n    prefix + 'placement',\n    context,\n  );\n\n  const evaluateRepeat = numberEvaluator(flatStyle, prefix + 'repeat', context);\n\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n\n  const evaluateAlign = stringEvaluator(flatStyle, prefix + 'align', context);\n\n  const evaluateJustify = stringEvaluator(\n    flatStyle,\n    prefix + 'justify',\n    context,\n  );\n\n  const evaluateBaseline = stringEvaluator(\n    flatStyle,\n    prefix + 'baseline',\n    context,\n  );\n\n  const evaluateKeepUpright = booleanEvaluator(\n    flatStyle,\n    prefix + 'keep-upright',\n    context,\n  );\n\n  const evaluatePadding = numberArrayEvaluator(\n    flatStyle,\n    prefix + 'padding',\n    context,\n  );\n\n  // The following properties are not currently settable\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const text = new Text({declutterMode});\n\n  return function (context) {\n    text.setText(evaluateValue(context));\n\n    if (evaluateFill) {\n      text.setFill(evaluateFill(context));\n    }\n\n    if (evaluateBackgroundFill) {\n      text.setBackgroundFill(evaluateBackgroundFill(context));\n    }\n\n    if (evaluateStroke) {\n      text.setStroke(evaluateStroke(context));\n    }\n\n    if (evaluateBackgroundStroke) {\n      text.setBackgroundStroke(evaluateBackgroundStroke(context));\n    }\n\n    if (evaluateFont) {\n      text.setFont(evaluateFont(context));\n    }\n\n    if (evaluateMaxAngle) {\n      text.setMaxAngle(evaluateMaxAngle(context));\n    }\n\n    if (evaluateOffsetX) {\n      text.setOffsetX(evaluateOffsetX(context));\n    }\n\n    if (evaluateOffsetY) {\n      text.setOffsetY(evaluateOffsetY(context));\n    }\n\n    if (evaluateOverflow) {\n      text.setOverflow(evaluateOverflow(context));\n    }\n\n    if (evaluatePlacement) {\n      const placement = evaluatePlacement(context);\n      if (placement !== 'point' && placement !== 'line') {\n        throw new Error('Expected point or line for text-placement');\n      }\n      text.setPlacement(placement);\n    }\n\n    if (evaluateRepeat) {\n      text.setRepeat(evaluateRepeat(context));\n    }\n\n    if (evaluateScale) {\n      text.setScale(evaluateScale(context));\n    }\n\n    if (evaluateRotateWithView) {\n      text.setRotateWithView(evaluateRotateWithView(context));\n    }\n\n    if (evaluateRotation) {\n      text.setRotation(evaluateRotation(context));\n    }\n\n    if (evaluateAlign) {\n      const textAlign = evaluateAlign(context);\n      if (\n        textAlign !== 'left' &&\n        textAlign !== 'center' &&\n        textAlign !== 'right' &&\n        textAlign !== 'end' &&\n        textAlign !== 'start'\n      ) {\n        throw new Error(\n          'Expected left, right, center, start, or end for text-align',\n        );\n      }\n      text.setTextAlign(textAlign);\n    }\n\n    if (evaluateJustify) {\n      const justify = evaluateJustify(context);\n      if (justify !== 'left' && justify !== 'right' && justify !== 'center') {\n        throw new Error('Expected left, right, or center for text-justify');\n      }\n      text.setJustify(justify);\n    }\n\n    if (evaluateBaseline) {\n      const textBaseline = evaluateBaseline(context);\n      if (\n        textBaseline !== 'bottom' &&\n        textBaseline !== 'top' &&\n        textBaseline !== 'middle' &&\n        textBaseline !== 'alphabetic' &&\n        textBaseline !== 'hanging'\n      ) {\n        throw new Error(\n          'Expected bottom, top, middle, alphabetic, or hanging for text-baseline',\n        );\n      }\n      text.setTextBaseline(textBaseline);\n    }\n\n    if (evaluatePadding) {\n      text.setPadding(evaluatePadding(context));\n    }\n\n    if (evaluateKeepUpright) {\n      text.setKeepUpright(evaluateKeepUpright(context));\n    }\n\n    return text;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):import(\"../../style/Image.js\").default} ImageEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator?} A function that evaluates to an image symbolizer.\n */\nfunction buildImage(flatStyle, context) {\n  if ('icon-src' in flatStyle) {\n    return buildIcon(flatStyle, context);\n  }\n\n  if ('shape-points' in flatStyle) {\n    return buildShape(flatStyle, context);\n  }\n\n  if ('circle-radius' in flatStyle) {\n    return buildCircle(flatStyle, context);\n  }\n\n  return null;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to an image symbolizer.\n */\nfunction buildIcon(flatStyle, context) {\n  const prefix = 'icon-';\n\n  // required property\n  const srcName = prefix + 'src';\n  const src = requireString(flatStyle[srcName], srcName);\n\n  // settable properties\n  const evaluateAnchor = coordinateEvaluator(\n    flatStyle,\n    prefix + 'anchor',\n    context,\n  );\n\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n\n  const evaluateOpacity = numberEvaluator(\n    flatStyle,\n    prefix + 'opacity',\n    context,\n  );\n\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context,\n  );\n\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  // the remaining symbolizer properties are not currently settable\n  const anchorOrigin = optionalIconOrigin(flatStyle, prefix + 'anchor-origin');\n  const anchorXUnits = optionalIconAnchorUnits(\n    flatStyle,\n    prefix + 'anchor-x-units',\n  );\n  const anchorYUnits = optionalIconAnchorUnits(\n    flatStyle,\n    prefix + 'anchor-y-units',\n  );\n  const color = optionalColorLike(flatStyle, prefix + 'color');\n  const crossOrigin = optionalString(flatStyle, prefix + 'cross-origin');\n  const offset = optionalNumberArray(flatStyle, prefix + 'offset');\n  const offsetOrigin = optionalIconOrigin(flatStyle, prefix + 'offset-origin');\n  const width = optionalNumber(flatStyle, prefix + 'width');\n  const height = optionalNumber(flatStyle, prefix + 'height');\n  const size = optionalSize(flatStyle, prefix + 'size');\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const icon = new Icon({\n    src,\n    anchorOrigin,\n    anchorXUnits,\n    anchorYUnits,\n    color,\n    crossOrigin,\n    offset,\n    offsetOrigin,\n    height,\n    width,\n    size,\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateOpacity) {\n      icon.setOpacity(evaluateOpacity(context));\n    }\n\n    if (evaluateDisplacement) {\n      icon.setDisplacement(evaluateDisplacement(context));\n    }\n\n    if (evaluateRotation) {\n      icon.setRotation(evaluateRotation(context));\n    }\n\n    if (evaluateRotateWithView) {\n      icon.setRotateWithView(evaluateRotateWithView(context));\n    }\n\n    if (evaluateScale) {\n      icon.setScale(evaluateScale(context));\n    }\n\n    if (evaluateAnchor) {\n      icon.setAnchor(evaluateAnchor(context));\n    }\n    return icon;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to an icon symbolizer.\n */\nfunction buildShape(flatStyle, context) {\n  const prefix = 'shape-';\n\n  // required property\n  const pointsName = prefix + 'points';\n  const radiusName = prefix + 'radius';\n  const points = requireNumber(flatStyle[pointsName], pointsName);\n  const radius = requireNumber(flatStyle[radiusName], radiusName);\n\n  // settable properties\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context,\n  );\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  // the remaining properties are not currently settable\n  const radius2 = optionalNumber(flatStyle, prefix + 'radius2');\n  const angle = optionalNumber(flatStyle, prefix + 'angle');\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const shape = new RegularShape({\n    points,\n    radius,\n    radius2,\n    angle,\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateFill) {\n      shape.setFill(evaluateFill(context));\n    }\n    if (evaluateStroke) {\n      shape.setStroke(evaluateStroke(context));\n    }\n    if (evaluateDisplacement) {\n      shape.setDisplacement(evaluateDisplacement(context));\n    }\n    if (evaluateRotation) {\n      shape.setRotation(evaluateRotation(context));\n    }\n    if (evaluateRotateWithView) {\n      shape.setRotateWithView(evaluateRotateWithView(context));\n    }\n    if (evaluateScale) {\n      shape.setScale(evaluateScale(context));\n    }\n\n    return shape;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to a circle symbolizer.\n */\nfunction buildCircle(flatStyle, context) {\n  const prefix = 'circle-';\n\n  // settable properties\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n  const evaluateRadius = numberEvaluator(flatStyle, prefix + 'radius', context);\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context,\n  );\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  // the remaining properties are not currently settable\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const circle = new Circle({\n    radius: 5, // this is arbitrary, but required - the evaluated radius is used below\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateRadius) {\n      circle.setRadius(evaluateRadius(context));\n    }\n    if (evaluateFill) {\n      circle.setFill(evaluateFill(context));\n    }\n    if (evaluateStroke) {\n      circle.setStroke(evaluateStroke(context));\n    }\n    if (evaluateDisplacement) {\n      circle.setDisplacement(evaluateDisplacement(context));\n    }\n    if (evaluateRotation) {\n      circle.setRotation(evaluateRotation(context));\n    }\n    if (evaluateRotateWithView) {\n      circle.setRotateWithView(evaluateRotateWithView(context));\n    }\n    if (evaluateScale) {\n      circle.setScale(evaluateScale(context));\n    }\n\n    return circle;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').NumberEvaluator|undefined} The expression evaluator or undefined.\n */\nfunction numberEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return undefined;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberType, context);\n  return function (context) {\n    return requireNumber(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').StringEvaluator?} The expression evaluator.\n */\nfunction stringEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], StringType, context);\n  return function (context) {\n    return requireString(evaluator(context), name);\n  };\n}\n\nfunction patternEvaluator(flatStyle, prefix, context) {\n  const srcEvaluator = stringEvaluator(\n    flatStyle,\n    prefix + 'pattern-src',\n    context,\n  );\n  const offsetEvaluator = sizeEvaluator(\n    flatStyle,\n    prefix + 'pattern-offset',\n    context,\n  );\n  const patternSizeEvaluator = sizeEvaluator(\n    flatStyle,\n    prefix + 'pattern-size',\n    context,\n  );\n  const colorEvaluator = colorLikeEvaluator(\n    flatStyle,\n    prefix + 'color',\n    context,\n  );\n  return function (context) {\n    return {\n      src: srcEvaluator(context),\n      offset: offsetEvaluator && offsetEvaluator(context),\n      size: patternSizeEvaluator && patternSizeEvaluator(context),\n      color: colorEvaluator && colorEvaluator(context),\n    };\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').BooleanEvaluator?} The expression evaluator.\n */\nfunction booleanEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], BooleanType, context);\n  return function (context) {\n    const value = evaluator(context);\n    if (typeof value !== 'boolean') {\n      throw new Error(`Expected a boolean for ${name}`);\n    }\n    return value;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').ColorLikeEvaluator?} The expression evaluator.\n */\nfunction colorLikeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], ColorType, context);\n  return function (context) {\n    return requireColorLike(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').NumberArrayEvaluator?} The expression evaluator.\n */\nfunction numberArrayEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    return requireNumberArray(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').CoordinateEvaluator?} The expression evaluator.\n */\nfunction coordinateEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    const array = requireNumberArray(evaluator(context), name);\n    if (array.length !== 2) {\n      throw new Error(`Expected two numbers for ${name}`);\n    }\n    return array;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').SizeEvaluator?} The expression evaluator.\n */\nfunction sizeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    return requireSize(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').SizeLikeEvaluator?} The expression evaluator.\n */\nfunction sizeLikeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(\n    flatStyle[name],\n    NumberArrayType | NumberType,\n    context,\n  );\n  return function (context) {\n    return requireSizeLike(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {number|undefined} A number or undefined.\n */\nfunction optionalNumber(flatStyle, property) {\n  const value = flatStyle[property];\n  if (value === undefined) {\n    return undefined;\n  }\n  if (typeof value !== 'number') {\n    throw new Error(`Expected a number for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../size.js\").Size|undefined} A size or undefined.\n */\nfunction optionalSize(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded === 'number') {\n    return toSize(encoded);\n  }\n  if (!Array.isArray(encoded)) {\n    throw new Error(`Expected a number or size array for ${property}`);\n  }\n  if (\n    encoded.length !== 2 ||\n    typeof encoded[0] !== 'number' ||\n    typeof encoded[1] !== 'number'\n  ) {\n    throw new Error(`Expected a number or size array for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {string|undefined} A string or undefined.\n */\nfunction optionalString(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../style/Icon.js\").IconOrigin|undefined} An icon origin or undefined.\n */\nfunction optionalIconOrigin(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (\n    encoded !== 'bottom-left' &&\n    encoded !== 'bottom-right' &&\n    encoded !== 'top-left' &&\n    encoded !== 'top-right'\n  ) {\n    throw new Error(\n      `Expected bottom-left, bottom-right, top-left, or top-right for ${property}`,\n    );\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../style/Icon.js\").IconAnchorUnits|undefined} Icon anchor units or undefined.\n */\nfunction optionalIconAnchorUnits(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (encoded !== 'pixels' && encoded !== 'fraction') {\n    throw new Error(`Expected pixels or fraction for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {Array<number>|undefined} An array of numbers or undefined.\n */\nfunction optionalNumberArray(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  return requireNumberArray(encoded, property);\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import('../../style/Style.js').DeclutterMode} Icon declutter mode.\n */\nfunction optionalDeclutterMode(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  if (encoded !== 'declutter' && encoded !== 'obstacle' && encoded !== 'none') {\n    throw new Error(`Expected declutter, obstacle, or none for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {string|Array<number>|undefined} A string or an array of color values or undefined.\n */\nfunction optionalColorLike(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  return requireColorLike(encoded, property);\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>} An array of numbers.\n */\nfunction requireNumberArray(value, property) {\n  if (!Array.isArray(value)) {\n    throw new Error(`Expected an array for ${property}`);\n  }\n  const length = value.length;\n  for (let i = 0; i < length; ++i) {\n    if (typeof value[i] !== 'number') {\n      throw new Error(`Expected an array of numbers for ${property}`);\n    }\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {string} A string.\n */\nfunction requireString(value, property) {\n  if (typeof value !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {number} A number.\n */\nfunction requireNumber(value, property) {\n  if (typeof value !== 'number') {\n    throw new Error(`Expected a number for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>|string} A color.\n */\nfunction requireColorLike(value, property) {\n  if (typeof value === 'string') {\n    return value;\n  }\n  const array = requireNumberArray(value, property);\n  const length = array.length;\n  if (length < 3 || length > 4) {\n    throw new Error(`Expected a color with 3 or 4 values for ${property}`);\n  }\n  return array;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>} A number or an array of two numbers.\n */\nfunction requireSize(value, property) {\n  const size = requireNumberArray(value, property);\n  if (size.length !== 2) {\n    throw new Error(`Expected an array of two numbers for ${property}`);\n  }\n  return size;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {number|Array<number>} A number or an array of two numbers.\n */\nfunction requireSizeLike(value, property) {\n  if (typeof value === 'number') {\n    return value;\n  }\n  return requireSize(value, property);\n}\n","/**\n * @module ol/layer/BaseVector\n */\nimport RBush from 'rbush';\nimport {\n  flatStylesToStyleFunction,\n  rulesToStyleFunction,\n} from '../render/canvas/style.js';\nimport Style, {\n  createDefaultStyle,\n  toFunction as toStyleFunction,\n} from '../style/Style.js';\nimport Layer from './Layer.js';\n\n/***\n * @template T\n * @typedef {T extends import(\"../source/Vector.js\").default<infer U extends import(\"../Feature.js\").FeatureLike> ? U : never} ExtractedFeatureType\n */\n\n/**\n * @template {import('../Feature').FeatureLike} FeatureType\n * @template {import(\"../source/Vector.js\").default<FeatureType>|import(\"../source/VectorTile.js\").default<FeatureType>} VectorSourceType<FeatureType>\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean|string|number} [declutter=false] Declutter images and text. Any truthy value will enable\n * decluttering. Within a layer, a feature rendered before another has higher priority. All layers with the\n * same `declutter` value will be decluttered together. The priority is determined by the drawing order of the\n * layers with the same `declutter` value. Higher in the layer stack means higher priority. To declutter distinct\n * layers or groups of layers separately, use different truthy values for `declutter`.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder',\n};\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import('../Feature').FeatureLike} FeatureType\n * @template {import(\"../source/Vector.js\").default<FeatureType>|import(\"../source/VectorTile.js\").default<FeatureType>} VectorSourceType<FeatureType>\n * @extends {Layer<VectorSourceType, RendererType>}\n * @template {import(\"../renderer/canvas/VectorLayer.js\").default|import(\"../renderer/canvas/VectorTileLayer.js\").default|import(\"../renderer/canvas/VectorImageLayer.js\").default|import(\"../renderer/webgl/VectorLayer.js\").default|import(\"../renderer/webgl/PointsLayer.js\").default} RendererType\n * @api\n */\nclass BaseVectorLayer extends Layer {\n  /**\n   * @param {Options<FeatureType, VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.declutter_ = options.declutter ? String(options.declutter) : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderBuffer_ =\n      options.renderBuffer !== undefined ? options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileAnimating_ =\n      options.updateWhileAnimating !== undefined\n        ? options.updateWhileAnimating\n        : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileInteracting_ =\n      options.updateWhileInteracting !== undefined\n        ? options.updateWhileInteracting\n        : false;\n  }\n\n  /**\n   * @return {string} Declutter group.\n   * @override\n   */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in [map.getFeaturesAtPixel()]{@link import(\"../Map.js\").default#getFeaturesAtPixel}.\n   * Text is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with an array of features.\n   * @api\n   * @override\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n   * @return {import(\"../render.js\").OrderFunction|null|undefined} Render order.\n   */\n  getRenderOrder() {\n    return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (\n      this.get(Property.RENDER_ORDER)\n    );\n  }\n\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null|undefined} Layer style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../layer/Layer.js\").State} layerState Layer state.\n   * @override\n   */\n  renderDeclutter(frameState, layerState) {\n    const declutterGroup = this.getDeclutter();\n    if (declutterGroup in frameState.declutter === false) {\n      frameState.declutter[declutterGroup] = new RBush(9);\n    }\n    this.getRenderer().renderDeclutter(frameState, layerState);\n  }\n\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If set to `null`, the layer has no style (a `null` style),\n   * so only features that have their own styles will be rendered in the layer. Call\n   * `setStyle()` without arguments to reset to the default style. See\n   * [the ol/style/Style module]{@link module:ol/style/Style~Style} for information on the default style.\n   *\n   * If your layer has a static style, you can use [flat style]{@link module:ol/style/flat~FlatStyle} object\n   * literals instead of using the `Style` and symbolizer constructors (`Fill`, `Stroke`, etc.):\n   * ```js\n   * vectorLayer.setStyle({\n   *   \"fill-color\": \"yellow\",\n   *   \"stroke-color\": \"black\",\n   *   \"stroke-width\": 4\n   * })\n   * ```\n   *\n   * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n   * @api\n   */\n  setStyle(style) {\n    this.style_ = style === undefined ? createDefaultStyle : style;\n    const styleLike = toStyleLike(style);\n    this.styleFunction_ =\n      style === null ? undefined : toStyleFunction(styleLike);\n    this.changed();\n  }\n\n  /**\n   * @param {boolean|string|number} declutter Declutter images and text.\n   * @api\n   */\n  setDeclutter(declutter) {\n    this.declutter_ = declutter ? String(declutter) : undefined;\n    this.changed();\n  }\n}\n\n/**\n * Coerce the allowed style types into a shorter list of types.  Flat styles, arrays of flat\n * styles, and arrays of rules are converted into style functions.\n *\n * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n * @return {import(\"../style/Style.js\").StyleLike|null} The style.\n */\nfunction toStyleLike(style) {\n  if (style === undefined) {\n    return createDefaultStyle;\n  }\n  if (!style) {\n    return null;\n  }\n  if (typeof style === 'function') {\n    return style;\n  }\n  if (style instanceof Style) {\n    return style;\n  }\n  if (!Array.isArray(style)) {\n    return flatStylesToStyleFunction([style]);\n  }\n  if (style.length === 0) {\n    return [];\n  }\n\n  const length = style.length;\n  const first = style[0];\n\n  if (first instanceof Style) {\n    /**\n     * @type {Array<Style>}\n     */\n    const styles = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      const candidate = style[i];\n      if (!(candidate instanceof Style)) {\n        throw new Error('Expected a list of style instances');\n      }\n      styles[i] = candidate;\n    }\n    return styles;\n  }\n\n  if ('style' in first) {\n    /**\n     * @type {Array<import(\"../style/flat.js\").Rule>}\n     */\n    const rules = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      const candidate = style[i];\n      if (!('style' in candidate)) {\n        throw new Error('Expected a list of rules with a style property');\n      }\n      rules[i] = candidate;\n    }\n    return rulesToStyleFunction(rules);\n  }\n\n  const flatStyles =\n    /** @type {Array<import(\"../style/flat.js\").FlatStyle>} */ (style);\n  return flatStylesToStyleFunction(flatStyles);\n}\n\nexport default BaseVectorLayer;\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../Map.js\").FrameState} [frameState] Frame state.\n   * @param {?(CanvasRenderingContext2D|OffscreenCanvasRenderingContext2D|WebGLRenderingContext)} [context] Context.\n   */\n  constructor(type, inversePixelTransform, frameState, context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../Map.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. For Canvas 2D layers,\n     * the context will be the 2D rendering context.  For WebGL layers, the context will be the WebGL\n     * context.\n     * @type {CanvasRenderingContext2D|OffscreenCanvasRenderingContext2D|WebGLRenderingContext|undefined}\n     * @api\n     */\n    this.context = context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport {wrapX} from '../coordinate.js';\nimport {getWidth} from '../extent.js';\nimport {TRUE} from '../functions.js';\nimport {inView} from '../layer/Layer.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {compose as composeTransform, makeInverse} from '../transform.js';\nimport {abstract} from '../util.js';\n\n/**\n * @template T\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} distanceSq Squared distance.\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\n */\n\n/**\n * @abstract\n */\nclass MapRenderer extends Disposable {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default}\n     */\n    this.map_ = map;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(\n      coordinateToPixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / viewState.resolution,\n      -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0],\n      -viewState.center[1],\n    );\n\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2,\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\n    }\n\n    const projection = viewState.projection;\n\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\n    const offsets = [[0, 0]];\n    if (projection.canWrapX() && checkWrapped) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    const matches = /** @type {Array<HitMatch<T>>} */ ([]);\n    const tmpCoord = [];\n    for (let i = 0; i < offsets.length; i++) {\n      for (let j = numLayers - 1; j >= 0; --j) {\n        const layerState = layerStates[j];\n        const layer = layerState.layer;\n        if (\n          layer.hasRenderer() &&\n          inView(layerState, viewState) &&\n          layerFilter.call(thisArg2, layer)\n        ) {\n          const layerRenderer = layer.getRenderer();\n          const source = layer.getSource();\n          if (layerRenderer && source) {\n            const coordinates = source.getWrapX()\n              ? translatedCoordinate\n              : coordinate;\n            const callback = forEachFeatureAtCoordinate.bind(\n              null,\n              layerState.managed,\n            );\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(\n              tmpCoord,\n              frameState,\n              hitTolerance,\n              callback,\n              matches,\n            );\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    if (matches.length === 0) {\n      return undefined;\n    }\n    const order = 1 / matches.length;\n    matches.forEach((m, i) => (m.distanceSq += i * order));\n    matches.sort((a, b) => a.distanceSq - b.distanceSq);\n    matches.some((m) => {\n      return (result = m.callback(m.feature, m.layer, m.geometry));\n    });\n    return result;\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    layerFilter,\n    thisArg,\n  ) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      checkWrapped,\n      TRUE,\n      this,\n      layerFilter,\n      thisArg,\n    );\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @return {import(\"../Map.js\").default} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  }\n}\n\n/**\n * @param {import(\"../Map.js\").default} map Map.\n * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\nexport default MapRenderer;\n","/**\n * @module ol/renderer/Composite\n */\nimport ObjectEventType from '../ObjectEventType.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {createMockDiv, isCanvas, replaceChildren} from '../dom.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport BaseVectorLayer from '../layer/BaseVector.js';\nimport {inView} from '../layer/Layer.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport {checkedFonts} from '../render/canvas.js';\nimport {fromString} from '../transform.js';\nimport MapRenderer from './Map.js';\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CompositeMapRenderer extends MapRenderer {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    /**\n     * @private\n     * @type {import(\"../events.js\").EventsKey}\n     */\n    this.fontChangeListenerKey_ = listen(\n      checkedFonts,\n      ObjectEventType.PROPERTYCHANGE,\n      map.redrawText,\n      map,\n    );\n\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this.element_ = WORKER_OFFSCREEN_CANVAS\n      ? createMockDiv()\n      : document.createElement('div');\n    const style = this.element_.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n    style.zIndex = '0';\n\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n\n    const container = map.getViewport();\n    if (container) {\n      // maps in a worker do not have a viewport.\n      container.insertBefore(this.element_, container.firstChild || null);\n    }\n\n    /**\n     * @private\n     * @type {Array<HTMLElement>}\n     */\n    this.children_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @override\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    if (map.hasListener(type)) {\n      const event = new RenderEvent(type, undefined, frameState);\n      map.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @override\n   */\n  disposeInternal() {\n    unlistenByKey(this.fontChangeListenerKey_);\n    this.element_.remove();\n    super.disposeInternal();\n  }\n\n  /**\n   * Render.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   * @override\n   */\n  renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray.sort(\n      (a, b) => a.zIndex - b.zIndex,\n    );\n    const declutter = layerStatesArray.some(\n      (layerState) =>\n        layerState.layer instanceof BaseVectorLayer &&\n        layerState.layer.getDeclutter(),\n    );\n    if (declutter) {\n      // Some layers need decluttering, turn on deferred rendering hint\n      frameState.declutter = {};\n    }\n    const viewState = frameState.viewState;\n\n    this.children_.length = 0;\n\n    const renderedLayerStates = [];\n    let previousElement = null;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      frameState.layerIndex = i;\n\n      const layer = layerState.layer;\n      const sourceState = layer.getSourceState();\n      if (\n        !inView(layerState, viewState) ||\n        (sourceState != 'ready' && sourceState != 'undefined')\n      ) {\n        layer.unrender();\n        continue;\n      }\n\n      const element = layer.render(frameState, previousElement);\n      if (!element) {\n        continue;\n      }\n      if (element !== previousElement) {\n        this.children_.push(element);\n        previousElement = element;\n      }\n\n      renderedLayerStates.push(layerState);\n    }\n\n    this.declutter(frameState, renderedLayerStates);\n\n    replaceChildren(this.element_, this.children_);\n\n    const map = this.getMap();\n    const mapCanvas = map.getTargetElement();\n    if (isCanvas(mapCanvas)) {\n      // Canvas composition when container is a canvas\n      const mapContext = mapCanvas.getContext('2d');\n      for (const container of this.children_) {\n        const canvas = container.firstElementChild || container;\n        if (!isCanvas(canvas)) {\n          continue;\n        }\n        if (canvas.width > 0) {\n          const opacity = container.style.opacity || canvas.style.opacity;\n          mapContext.globalAlpha = opacity === '' ? 1 : Number(opacity);\n          const transform = canvas.style.transform;\n          if (transform) {\n            // Get the transform parameters from the style's transform matrix\n            mapContext.setTransform(\n              .../** @type {[number, number, number, number, number, number]} */ (\n                fromString(transform)\n              ),\n            );\n          } else {\n            const w = parseFloat(canvas.style.width) / canvas.width;\n            const h = parseFloat(canvas.style.height) / canvas.height;\n            mapContext.setTransform(w, 0, 0, h, 0, 0);\n          }\n          const backgroundColor = container.style.backgroundColor;\n          if (backgroundColor) {\n            mapContext.fillStyle = backgroundColor;\n            mapContext.fillRect(0, 0, canvas.width, canvas.height);\n          }\n          mapContext.drawImage(canvas, 0, 0);\n        }\n      }\n      mapContext.globalAlpha = 1;\n      mapContext.setTransform(1, 0, 0, 1, 0, 0);\n    }\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.element_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleExpireIconCache(frameState);\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {Array<import('../layer/Layer.js').State>} layerStates Layers.\n   */\n  declutter(frameState, layerStates) {\n    if (!frameState.declutter) {\n      return;\n    }\n    for (let i = layerStates.length - 1; i >= 0; --i) {\n      const layerState = layerStates[i];\n      const layer = layerState.layer;\n      if (layer.getDeclutter()) {\n        layer.renderDeclutter(frameState, layerState);\n      }\n    }\n    layerStates.forEach((layerState) =>\n      layerState.layer.renderDeferred(frameState),\n    );\n  }\n}\n\nexport default CompositeMapRenderer;\n","/**\n * @module ol/Map\n */\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport BaseObject from './Object.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport TileQueue, {getTilePriority} from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {equals} from './array.js';\nimport {assert} from './asserts.js';\nimport {warn} from './console.js';\nimport {defaults as defaultControls} from './control/defaults.js';\nimport {isCanvas} from './dom.js';\nimport EventType from './events/EventType.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {\n  clone,\n  createOrUpdateEmpty,\n  equals as equalsExtent,\n  getForViewAndSize,\n  isEmpty,\n} from './extent.js';\nimport {TRUE} from './functions.js';\nimport {\n  DEVICE_PIXEL_RATIO,\n  PASSIVE_EVENT_LISTENERS,\n  WORKER_OFFSCREEN_CANVAS,\n} from './has.js';\nimport {defaults as defaultInteractions} from './interaction/defaults.js';\nimport LayerGroup, {GroupEvent} from './layer/Group.js';\nimport Layer from './layer/Layer.js';\nimport PointerEventType from './pointer/EventType.js';\nimport {fromUserCoordinate, toUserCoordinate} from './proj.js';\nimport RenderEventType from './render/EventType.js';\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport {hasArea} from './size.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n} from './transform.js';\nimport {getUid} from './util.js';\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate Animate.\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform CoordinateToPixelTransform.\n * @property {Object<string, import(\"rbush\").default<import('./render/canvas/Executor.js').DeclutterEntry>>|null} declutter\n * Declutter trees by declutter group.\n * When null, no decluttering is needed because no layers have decluttering enabled.\n * @property {null|import(\"./extent.js\").Extent} extent Extent (in view projection coordinates).\n * @property {import(\"./extent.js\").Extent} [nextExtent] Next extent during an animation series.\n * @property {number} index Index.\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray LayerStatesArray.\n * @property {number} layerIndex LayerIndex.\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform PixelToCoordinateTransform.\n * @property {Array<PostRenderFunction>} postRenderFunctions PostRenderFunctions.\n * @property {import(\"./size.js\").Size} size Size.\n * @property {TileQueue} tileQueue TileQueue.\n * @property {!Object<string, Object<string, boolean>>} usedTiles UsedTiles.\n * @property {Array<number>} viewHints ViewHints.\n * @property {!Object<string, Object<string, boolean>>} wantedTiles WantedTiles.\n * @property {string} mapId The id of the map.\n * @property {Object<string, boolean>} renderTargets Identifiers of previously rendered elements.\n */\n\n/**\n * @typedef {function(Map, FrameState): any} PostRenderFunction\n */\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer~Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls] Controls.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions] Interactions.\n * @property {HTMLElement|Document} keyboardEventTarget KeyboardEventTarget.\n * @property {Collection<import(\"./Overlay.js\").default>} overlays Overlays.\n * @property {Object<string, *>} values Values.\n */\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:layergroup'|'change:size'|'change:target'|'change:view'} MapObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<MapObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapBrowserEventType\").Types, import(\"./MapBrowserEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapEventType\").Types, import(\"./MapEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./render/EventType\").MapRenderEventTypes, import(\"./render/Event\").default, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|MapObjectEventTypes|\n *      import(\"./MapBrowserEventType\").Types|import(\"./MapEventType\").Types|\n *      import(\"./render/EventType\").MapRenderEventTypes, Return>} MapEventHandler\n */\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control/defaults.defaults} is used. In a worker, no controls are added by default.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction/defaults.defaults} is used. In a worker, no interactions are added by default.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string|HTMLCanvasElement|OffscreenCanvas} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * For use in workers or when exporting a map, use an `OffscreenCanvas` or `HTMLCanvasElement` as target.\n * For accessibility (focus and keyboard events for map navigation), the `target` element must have a\n *  properly configured `tabindex` attribute. If the `target` element is inside a Shadow DOM, the\n *  `tabindex` atribute must be set on the custom element's host element.\n * **Note:** CSS `transform` support for the target element is limited to `scale`.\n * @property {View|Promise<import(\"./View.js\").ViewOptions>} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n */\nfunction removeLayerMapProperty(layer) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(null);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    layer.getLayers().forEach(removeLayerMapProperty);\n  }\n}\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n * @param {Map} map Map.\n */\nfunction setLayerMapProperty(layer, map) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(map);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    const layers = layer.getLayers().getArray();\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n      setLayerMapProperty(layers[i], map);\n    }\n  }\n}\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map.js';\n *     import View from 'ol/View.js';\n *     import TileLayer from 'ol/layer/Tile.js';\n *     import OSM from 'ol/source/OSM.js';\n *\n *     const map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1,\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM(),\n *         }),\n *       ],\n *       target: 'map',\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile~TileLayer} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~LayerGroup}\n * is a subclass of {@link module:ol/layer/Base~BaseLayer}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nclass Map extends BaseObject {\n  /**\n   * @param {MapOptions} [options] Map options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {MapEventHandler<void>}\n     */\n    this.un;\n\n    const optionsInternal = createOptionsInternal(options);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderComplete_ = false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.loaded_ = true;\n\n    /** @private */\n    this.boundHandleBrowserEvent_ = this.handleBrowserEvent.bind(this);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ =\n      options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ =\n      options.pixelRatio !== undefined\n        ? options.pixelRatio\n        : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.postRenderTimeoutHandle_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = this.animationDelay_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    if (!WORKER_OFFSCREEN_CANVAS) {\n      this.viewport_ = document.createElement('div');\n      this.viewport_.className =\n        'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n      this.viewport_.style.position = 'relative';\n      this.viewport_.style.overflow = 'hidden';\n      this.viewport_.style.width = '100%';\n      this.viewport_.style.height = '100%';\n\n      /**\n       * @private\n       * @type {!HTMLElement}\n       */\n      this.overlayContainer_ = document.createElement('div');\n      this.overlayContainer_.style.position = 'absolute';\n      this.overlayContainer_.style.zIndex = '0';\n      this.overlayContainer_.style.width = '100%';\n      this.overlayContainer_.style.height = '100%';\n      this.overlayContainer_.style.pointerEvents = 'none';\n      this.overlayContainer_.className = 'ol-overlaycontainer';\n      this.viewport_.appendChild(this.overlayContainer_);\n\n      /**\n       * @private\n       * @type {!HTMLElement}\n       */\n      this.overlayContainerStopEvent_ = document.createElement('div');\n      this.overlayContainerStopEvent_.style.position = 'absolute';\n      this.overlayContainerStopEvent_.style.zIndex = '0';\n      this.overlayContainerStopEvent_.style.width = '100%';\n      this.overlayContainerStopEvent_.style.height = '100%';\n      this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n      this.overlayContainerStopEvent_.className =\n        'ol-overlaycontainer-stopevent';\n      this.viewport_.appendChild(this.overlayContainerStopEvent_);\n    }\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.moveTolerance_ = options.moveTolerance;\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.targetChangeHandlerKeys_ = null;\n\n    /**\n     * @private\n     * @type {HTMLElement|null}\n     */\n    this.targetElement_ = null;\n\n    if (!WORKER_OFFSCREEN_CANVAS) {\n      /**\n       * @private\n       * @type {ResizeObserver}\n       */\n      this.resizeObserver_ = new ResizeObserver(() => this.updateSize());\n    }\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls =\n      optionsInternal.controls ||\n      (WORKER_OFFSCREEN_CANVAS ? new Collection() : defaultControls());\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions =\n      optionsInternal.interactions ||\n      (WORKER_OFFSCREEN_CANVAS\n        ? new Collection()\n        : defaultInteractions({\n            onFocusOnly: true,\n          }));\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default|null}\n     * @private\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this),\n    );\n\n    this.addChangeListener(\n      MapProperty.LAYERGROUP,\n      this.handleLayerGroupChanged_,\n    );\n    this.addChangeListener(MapProperty.VIEW, this.handleViewChanged_);\n    this.addChangeListener(MapProperty.SIZE, this.handleSizeChanged_);\n    this.addChangeListener(MapProperty.TARGET, this.handleTargetChanged_);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    const map = this;\n    if (options.view && !(options.view instanceof View)) {\n      options.view.then(function (viewOptions) {\n        map.setView(new View(viewOptions));\n      });\n    }\n\n    this.controls.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent\n       */\n      (event) => {\n        event.element.setMap(this);\n      },\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      },\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(this);\n      },\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      },\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        this.addOverlayInternal_(event.element);\n      },\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        const id = event.element.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      },\n    );\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       */\n      (control) => {\n        control.setMap(this);\n      },\n    );\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       */\n      (interaction) => {\n        interaction.setMap(this);\n      },\n    );\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n  }\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  addControl(control) {\n    this.getControls().push(control);\n  }\n\n  /**\n   * Add the given interaction to the map. If you want to add an interaction\n   * at another point of the collection use `getInteractions()` and the methods\n   * available on {@link module:ol/Collection~Collection}. This can be used to\n   * stop the event propagation from the handleEvent function. The interactions\n   * get to handle the events in the reverse order of this collection.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  addInteraction(interaction) {\n    this.getInteractions().push(interaction);\n  }\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  addLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer add event.\n   * @private\n   */\n  handleLayerAdd_(event) {\n    setLayerMapProperty(event.layer, this);\n  }\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  addOverlay(overlay) {\n    this.getOverlays().push(overlay);\n  }\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  addOverlayInternal_(overlay) {\n    const id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  }\n\n  /**\n   *\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.controls.clear();\n    this.interactions.clear();\n    this.overlays_.clear();\n    this.resizeObserver_?.disconnect();\n    this.setTarget(null);\n    super.disposeInternal();\n  }\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `options`.\n   * For polygons without a fill, only the stroke will be used for hit detection.\n   * Polygons must have a fill style applied to ensure that pixels inside a polygon are detected.\n   * The fill can be transparent.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature~Feature feature} or\n   *     {@link module:ol/render/Feature~RenderFeature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template T\n   * @api\n   */\n  forEachFeatureAtPixel(pixel, callback, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      callback,\n      null,\n      layerFilter,\n      null,\n    );\n  }\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * For polygons without a fill, only the stroke will be used for hit detection.\n   * Polygons must have a fill style applied to ensure that pixels inside a polygon are detected.\n   * The fill can be transparent.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * an empty array if none were found.\n   * @api\n   */\n  getFeaturesAtPixel(pixel, options) {\n    const features = [];\n    this.forEachFeatureAtPixel(\n      pixel,\n      function (feature) {\n        features.push(feature);\n      },\n      options,\n    );\n    return features;\n  }\n\n  /**\n   * Get all layers from all layer groups.\n   * @return {Array<import(\"./layer/Layer.js\").default>} Layers.\n   * @api\n   */\n  getAllLayers() {\n    const layers = [];\n    function addLayersFrom(layerGroup) {\n      layerGroup.forEach(function (layer) {\n        if (layer instanceof LayerGroup) {\n          addLayersFrom(layer.getLayers());\n        } else {\n          layers.push(layer);\n        }\n      });\n    }\n    addLayersFrom(this.getLayers());\n    return layers;\n  }\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through the `layerFilter` option.\n   * For polygons without a fill, only the stroke will be used for hit detection.\n   * Polygons must have a fill style applied to ensure that pixels inside a polygon are detected.\n   * The fill can be transparent.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @api\n   */\n  hasFeatureAtPixel(pixel, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return false;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      layerFilter,\n      null,\n    );\n  }\n\n  /**\n   * Returns the coordinate in user projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getEventCoordinate(event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   */\n  getEventCoordinateInternal(event) {\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {UIEvent|{clientX: number, clientY: number}} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  getEventPixel(event) {\n    const viewport = this.viewport_;\n    const viewportPosition = viewport.getBoundingClientRect();\n    const viewportSize = this.getSize();\n    const scaleX = viewportPosition.width / viewportSize[0];\n    const scaleY = viewportPosition.height / viewportSize[1];\n    const eventPosition =\n      //FIXME Are we really calling this with a TouchEvent anywhere?\n      'changedTouches' in event\n        ? /** @type {TouchEvent} */ (event).changedTouches[0]\n        : /** @type {MouseEvent} */ (event);\n\n    return [\n      (eventPosition.clientX - viewportPosition.left) / scaleX,\n      (eventPosition.clientY - viewportPosition.top) / scaleY,\n    ];\n  }\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  getTarget() {\n    return /** @type {HTMLElement|string|undefined} */ (\n      this.get(MapProperty.TARGET)\n    );\n  }\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  getTargetElement() {\n    return this.targetElement_;\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * user projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  getCoordinateFromPixel(pixel) {\n    return toUserCoordinate(\n      this.getCoordinateFromPixelInternal(pixel),\n      this.getView().getProjection(),\n    );\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   */\n  getCoordinateFromPixelInternal(pixel) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n  }\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  getControls() {\n    return this.controls;\n  }\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  getOverlays() {\n    return this.overlays_;\n  }\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default|null} Overlay.\n   * @api\n   */\n  getOverlayById(id) {\n    const overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  }\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  getInteractions() {\n    return this.interactions;\n  }\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  getLayerGroup() {\n    return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n  }\n\n  /**\n   * Clear any existing layers and add layers to the map.\n   * @param {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>} layers The layers to be added to the map.\n   * @api\n   */\n  setLayers(layers) {\n    const group = this.getLayerGroup();\n    if (layers instanceof Collection) {\n      group.setLayers(layers);\n      return;\n    }\n\n    const collection = group.getLayers();\n    collection.clear();\n    collection.extend(layers);\n  }\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  getLayers() {\n    const layers = this.getLayerGroup().getLayers();\n    return layers;\n  }\n\n  /**\n   * @return {boolean} Layers have sources that are still loading.\n   */\n  getLoadingOrNotReady() {\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const state = layerStatesArray[i];\n      if (!state.visible) {\n        continue;\n      }\n      const renderer = state.layer.getRenderer();\n      if (renderer && !renderer.ready) {\n        return true;\n      }\n      const source = state.layer.getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  getPixelFromCoordinate(coordinate) {\n    const viewCoordinate = fromUserCoordinate(\n      coordinate,\n      this.getView().getProjection(),\n    );\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   */\n  getPixelFromCoordinateInternal(coordinate) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(\n      frameState.coordinateToPixelTransform,\n      coordinate.slice(0, 2),\n    );\n  }\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default|null} Renderer\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  getSize() {\n    return /** @type {import(\"./size.js\").Size|undefined} */ (\n      this.get(MapProperty.SIZE)\n    );\n  }\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  getView() {\n    return /** @type {View} */ (this.get(MapProperty.VIEW));\n  }\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  getViewport() {\n    return this.viewport_;\n  }\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  getOverlayContainer() {\n    return this.overlayContainer_;\n  }\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  getOverlayContainerStopEvent() {\n    return this.overlayContainerStopEvent_;\n  }\n\n  /**\n   * @return {!Document} The document where the map is displayed.\n   */\n  getOwnerDocument() {\n    const targetElement = this.getTargetElement();\n    return targetElement ? targetElement.ownerDocument : document;\n  }\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\n    return getTilePriority(\n      this.frameState_,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution,\n    );\n  }\n\n  /**\n   * @param {PointerEvent|KeyboardEvent|WheelEvent} browserEvent Browser event.\n   * @param {string} [type] Type.\n   */\n  handleBrowserEvent(browserEvent, type) {\n    type = type || browserEvent.type;\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  }\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  handleMapBrowserEvent(mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    const originalEvent = mapBrowserEvent.originalEvent;\n    const eventType = originalEvent.type;\n    if (\n      eventType === PointerEventType.POINTERDOWN ||\n      eventType === EventType.WHEEL ||\n      eventType === EventType.KEYDOWN\n    ) {\n      const doc = this.getOwnerDocument();\n      const rootNode = this.viewport_.getRootNode\n        ? this.viewport_.getRootNode()\n        : doc;\n      const target = /** @type {Node} */ (originalEvent.target);\n\n      const currentDoc =\n        rootNode instanceof ShadowRoot\n          ? rootNode.host === target\n            ? rootNode.host.ownerDocument\n            : rootNode\n          : rootNode === doc\n            ? doc.documentElement\n            : rootNode;\n      if (\n        // Abort if the target is a child of the container for elements whose events are not meant\n        // to be handled by map interactions.\n        this.overlayContainerStopEvent_.contains(target) ||\n        // Abort if the event target is a child of the container that is no longer in the page.\n        // It's possible for the target to no longer be in the page if it has been removed in an\n        // event listener, this might happen in a Control that recreates it's content based on\n        // user interaction either manually or via a render in something like https://reactjs.org/\n        !currentDoc.contains(target)\n      ) {\n        return;\n      }\n    }\n    mapBrowserEvent.frameState = this.frameState_;\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      const interactionsArray = this.getInteractions().getArray().slice();\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\n        const interaction = interactionsArray[i];\n        if (\n          interaction.getMap() !== this ||\n          !interaction.getActive() ||\n          !this.getTargetElement()\n        ) {\n          continue;\n        }\n        const cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont || mapBrowserEvent.propagationStopped) {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePostRender() {\n    const frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    const tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      let maxTotalLoading = this.maxTilesLoading_;\n      let maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        const hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n          const lowOnFrameBudget = Date.now() - frameState.time > 8;\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    if (frameState && this.renderer_ && !frameState.animate) {\n      if (this.renderComplete_) {\n        if (this.hasListener(RenderEventType.RENDERCOMPLETE)) {\n          this.renderer_.dispatchRenderEvent(\n            RenderEventType.RENDERCOMPLETE,\n            frameState,\n          );\n        }\n        if (this.loaded_ === false) {\n          this.loaded_ = true;\n          this.dispatchEvent(\n            new MapEvent(MapEventType.LOADEND, this, frameState),\n          );\n        }\n      } else if (this.loaded_ === true) {\n        this.loaded_ = false;\n        this.dispatchEvent(\n          new MapEvent(MapEventType.LOADSTART, this, frameState),\n        );\n      }\n    }\n\n    const postRenderFunctions = this.postRenderFunctions_;\n    if (frameState) {\n      for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n        postRenderFunctions[i](this, frameState);\n      }\n    }\n    postRenderFunctions.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  handleSizeChanged_() {\n    if (this.getView() && !this.getView().getAnimating()) {\n      this.getView().resolveConstraints(0);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleTargetChanged_() {\n    if (this.mapBrowserEventHandler_) {\n      for (let i = 0, ii = this.targetChangeHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.targetChangeHandlerKeys_[i]);\n      }\n      this.targetChangeHandlerKeys_ = null;\n      this.viewport_.removeEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n      );\n      this.viewport_.removeEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n      );\n      this.mapBrowserEventHandler_.dispose();\n      this.mapBrowserEventHandler_ = null;\n      this.viewport_.remove();\n    }\n\n    if (this.targetElement_ && !isCanvas(this.targetElement_)) {\n      this.resizeObserver_?.unobserve(this.targetElement_);\n      const rootNode = this.targetElement_.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.unobserve(rootNode.host);\n      }\n      this.setSize(undefined);\n    }\n\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    const target = this.getTarget();\n    const targetElement =\n      typeof target === 'string' ? document.getElementById(target) : target;\n    this.targetElement_ = targetElement;\n    if (!targetElement) {\n      if (this.renderer_) {\n        clearTimeout(this.postRenderTimeoutHandle_);\n        this.postRenderTimeoutHandle_ = undefined;\n        this.postRenderFunctions_.length = 0;\n        this.renderer_.dispose();\n        this.renderer_ = null;\n      }\n      if (this.animationDelayKey_) {\n        cancelAnimationFrame(this.animationDelayKey_);\n        this.animationDelayKey_ = undefined;\n      }\n    } else {\n      if (!isCanvas(targetElement)) {\n        targetElement.appendChild(this.viewport_);\n      }\n      if (!this.renderer_) {\n        this.renderer_ = new CompositeMapRenderer(this);\n      }\n\n      if (!isCanvas(targetElement)) {\n        this.mapBrowserEventHandler_ = new MapBrowserEventHandler(\n          this,\n          this.moveTolerance_,\n        );\n        for (const key in MapBrowserEventType) {\n          this.mapBrowserEventHandler_.addEventListener(\n            MapBrowserEventType[key],\n            this.handleMapBrowserEvent.bind(this),\n          );\n        }\n        this.viewport_.addEventListener(\n          EventType.CONTEXTMENU,\n          this.boundHandleBrowserEvent_,\n          false,\n        );\n        this.viewport_.addEventListener(\n          EventType.WHEEL,\n          this.boundHandleBrowserEvent_,\n          PASSIVE_EVENT_LISTENERS ? {passive: false} : false,\n        );\n\n        let keyboardEventTarget;\n        if (!this.keyboardEventTarget_) {\n          // check if map target is in shadowDOM, if yes use host element as target\n          const targetRoot = targetElement.getRootNode();\n          const targetCandidate =\n            targetRoot instanceof ShadowRoot ? targetRoot.host : targetElement;\n          keyboardEventTarget = targetCandidate;\n        } else {\n          keyboardEventTarget = this.keyboardEventTarget_;\n        }\n\n        this.targetChangeHandlerKeys_ = [\n          listen(\n            keyboardEventTarget,\n            EventType.KEYDOWN,\n            this.handleBrowserEvent,\n            this,\n          ),\n          listen(\n            keyboardEventTarget,\n            EventType.KEYPRESS,\n            this.handleBrowserEvent,\n            this,\n          ),\n        ];\n        if (targetElement instanceof HTMLElement) {\n          const rootNode = targetElement.getRootNode();\n          if (rootNode instanceof ShadowRoot) {\n            this.resizeObserver_.observe(rootNode.host);\n          }\n          this.resizeObserver_?.observe(targetElement);\n        }\n      }\n\n      this.updateSize();\n    }\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  }\n\n  /**\n   * @private\n   */\n  handleTileChange_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewPropertyChanged_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewChanged_() {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    const view = this.getView();\n    if (view) {\n      this.updateViewportSize_(this.getSize());\n\n      this.viewPropertyListenerKey_ = listen(\n        view,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_,\n        this,\n      );\n      this.viewChangeListenerKey_ = listen(\n        view,\n        EventType.CHANGE,\n        this.handleViewPropertyChanged_,\n        this,\n      );\n\n      view.resolveConstraints(0);\n    }\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleLayerGroupChanged_() {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    const layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.handleLayerAdd_(new GroupEvent('addlayer', layerGroup));\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n        listen(layerGroup, EventType.CHANGE, this.render, this),\n        listen(layerGroup, 'addlayer', this.handleLayerAdd_, this),\n        listen(layerGroup, 'removelayer', this.handleLayerRemove_, this),\n      ];\n    }\n    this.render();\n  }\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  isRendered() {\n    return !!this.frameState_;\n  }\n\n  /**\n   * @private\n   */\n  animationDelay_() {\n    this.animationDelayKey_ = undefined;\n    this.renderFrame_(Date.now());\n  }\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  renderSync() {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  }\n\n  /**\n   * Redraws all text after new fonts have loaded\n   */\n  redrawText() {\n    if (!this.frameState_) {\n      return;\n    }\n    const layerStates = this.frameState_.layerStatesArray;\n    for (let i = 0, ii = layerStates.length; i < ii; ++i) {\n      const layer = layerStates[i].layer;\n      if (layer.hasRenderer()) {\n        layer.getRenderer().handleFontsChanged();\n      }\n    }\n  }\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  render() {\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  }\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  removeControl(control) {\n    return this.getControls().remove(control);\n  }\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  removeInteraction(interaction) {\n    return this.getInteractions().remove(interaction);\n  }\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  removeLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer remove event.\n   * @private\n   */\n  handleLayerRemove_(event) {\n    removeLayerMapProperty(event.layer);\n  }\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  removeOverlay(overlay) {\n    return this.getOverlays().remove(overlay);\n  }\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  renderFrame_(time) {\n    const size = this.getSize();\n    const view = this.getView();\n    const previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    let frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      const viewHints = view.getHints(\n        this.frameState_ ? this.frameState_.viewHints : undefined,\n      );\n      const viewState = view.getState();\n      frameState = {\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        declutter: null,\n        extent: getForViewAndSize(\n          viewState.center,\n          viewState.resolution,\n          viewState.rotation,\n          size,\n        ),\n        index: this.frameIndex_++,\n        layerIndex: 0,\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {},\n        mapId: getUid(this),\n        renderTargets: {},\n      };\n      if (viewState.nextCenter && viewState.nextResolution) {\n        const rotation = isNaN(viewState.nextRotation)\n          ? viewState.rotation\n          : viewState.nextRotation;\n\n        frameState.nextExtent = getForViewAndSize(\n          viewState.nextCenter,\n          viewState.nextResolution,\n          rotation,\n          size,\n        );\n      }\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(\n        this.postRenderFunctions_,\n        frameState.postRenderFunctions,\n      );\n\n      if (previousFrameState) {\n        const moveStart =\n          !this.previousExtent_ ||\n          (!isEmpty(this.previousExtent_) &&\n            !equalsExtent(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState),\n          );\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      const idle =\n        this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equalsExtent(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVEEND, this, frameState),\n        );\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    this.renderComplete_ =\n      (this.hasListener(MapEventType.LOADSTART) ||\n        this.hasListener(MapEventType.LOADEND) ||\n        this.hasListener(RenderEventType.RENDERCOMPLETE)) &&\n      !this.tileQueue_.getTilesLoading() &&\n      !this.tileQueue_.getCount() &&\n      !this.getLoadingOrNotReady();\n\n    if (!this.postRenderTimeoutHandle_) {\n      this.postRenderTimeoutHandle_ = setTimeout(() => {\n        this.postRenderTimeoutHandle_ = undefined;\n        this.handlePostRender();\n      }, 0);\n    }\n  }\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  setLayerGroup(layerGroup) {\n    const oldLayerGroup = this.getLayerGroup();\n    if (oldLayerGroup) {\n      this.handleLayerRemove_(new GroupEvent('removelayer', oldLayerGroup));\n    }\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  }\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  setSize(size) {\n    this.set(MapProperty.SIZE, size);\n  }\n\n  /**\n   * Set the target element to render this map into.\n   * For accessibility (focus and keyboard events for map navigation), the `target` element must have a\n   *  properly configured `tabindex` attribute. If the `target` element is inside a Shadow DOM, the\n   *  `tabindex` atribute must be set on the custom element's host element.\n   * @param {HTMLElement|string} [target] The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  setTarget(target) {\n    this.set(MapProperty.TARGET, target);\n  }\n\n  /**\n   * Set the view for this map.\n   * @param {View|Promise<import(\"./View.js\").ViewOptions>|null} view The view that controls this map.\n   * It is also possible to pass a promise that resolves to options for constructing a view.  This\n   * alternative allows view properties to be resolved by sources or other components that load\n   * view-related metadata.\n   * @observable\n   * @api\n   */\n  setView(view) {\n    if (!view || view instanceof View) {\n      this.set(MapProperty.VIEW, view);\n      return;\n    }\n    this.set(MapProperty.VIEW, new View());\n\n    const map = this;\n    view.then(function (viewOptions) {\n      map.setView(new View(viewOptions));\n    });\n  }\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  updateSize() {\n    const targetElement = this.getTargetElement();\n\n    let size = undefined;\n    if (targetElement) {\n      let width, height;\n      if (isCanvas(targetElement)) {\n        width = targetElement.width;\n        height = targetElement.height;\n      } else {\n        const computedStyle = getComputedStyle(targetElement);\n        width =\n          targetElement.offsetWidth -\n          parseFloat(computedStyle['borderLeftWidth']) -\n          parseFloat(computedStyle['paddingLeft']) -\n          parseFloat(computedStyle['paddingRight']) -\n          parseFloat(computedStyle['borderRightWidth']);\n        height =\n          targetElement.offsetHeight -\n          parseFloat(computedStyle['borderTopWidth']) -\n          parseFloat(computedStyle['paddingTop']) -\n          parseFloat(computedStyle['paddingBottom']) -\n          parseFloat(computedStyle['borderBottomWidth']);\n      }\n      if (!isNaN(width) && !isNaN(height)) {\n        size = [Math.max(0, width), Math.max(0, height)];\n        if (\n          !hasArea(size) &&\n          !!(\n            targetElement.offsetWidth ||\n            targetElement.offsetHeight ||\n            targetElement.getClientRects().length\n          )\n        ) {\n          warn(\n            \"No map visible because the map container's width or height are 0.\",\n          );\n        }\n      }\n    }\n\n    const oldSize = this.getSize();\n    if (size && (!oldSize || !equals(size, oldSize))) {\n      this.setSize(size);\n      this.updateViewportSize_(size);\n    }\n  }\n\n  /**\n   * Recomputes the viewport size and save it on the view object (if any)\n   * @param {import(\"./size.js\").Size|undefined} size The size.\n   * @private\n   */\n  updateViewportSize_(size) {\n    const view = this.getView();\n    if (view) {\n      view.setViewportSize(size);\n    }\n  }\n}\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n  /**\n   * @type {HTMLElement|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget =\n      typeof options.keyboardEventTarget === 'string'\n        ? document.getElementById(options.keyboardEventTarget)\n        : options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  const values = {};\n\n  const layerGroup =\n    options.layers &&\n    typeof (/** @type {?} */ (options.layers).getLayers) === 'function'\n      ? /** @type {LayerGroup} */ (options.layers)\n      : new LayerGroup({\n          layers:\n            /** @type {Collection<import(\"./layer/Base.js\").default>|Array<import(\"./layer/Base.js\").default>} */ (\n              options.layers\n            ),\n        });\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] =\n    options.view instanceof View ? options.view : new View();\n\n  /** @type {Collection<import(\"./control/Control.js\").default>} */\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.controls).getArray) === 'function',\n        'Expected `controls` to be an array or an `ol/Collection.js`',\n      );\n      controls = options.controls;\n    }\n  }\n\n  /** @type {Collection<import(\"./interaction/Interaction\").default>} */\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.interactions).getArray) ===\n          'function',\n        'Expected `interactions` to be an array or an `ol/Collection.js`',\n      );\n      interactions = options.interactions;\n    }\n  }\n\n  /** @type {Collection<import(\"./Overlay.js\").default>} */\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.overlays).getArray) === 'function',\n        'Expected `overlays` to be an array or an `ol/Collection.js`',\n      );\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values,\n  };\n}\nexport default Map;\n","/**\n * @module ol/control/defaults\n */\nimport Collection from '../Collection.js';\nimport Attribution from './Attribution.js';\nimport Rotate from './Rotate.js';\nimport Zoom from './Zoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n */\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * {@link module:ol/control/Zoom~Zoom}\n * {@link module:ol/control/Rotate~Rotate}\n * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions} [options] Options for the default controls.\n * @return {Collection<import(\"./Control.js\").default>} A collection of controls\n * to be used with the {@link module:ol/Map~Map} constructor's `controls` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Control.js\").default>} */\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl =\n    options.attribution !== undefined ? options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/interaction/defaults\n */\nimport Collection from '../Collection.js';\nimport Kinetic from '../Kinetic.js';\nimport DoubleClickZoom from './DoubleClickZoom.js';\nimport DragPan from './DragPan.js';\nimport DragRotate from './DragRotate.js';\nimport DragZoom from './DragZoom.js';\nimport KeyboardPan from './KeyboardPan.js';\nimport KeyboardZoom from './KeyboardZoom.js';\nimport MouseWheelZoom from './MouseWheelZoom.js';\nimport PinchRotate from './PinchRotate.js';\nimport PinchZoom from './PinchZoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction~Interaction} instances and insert\n * them into a {@link module:ol/Collection~Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * {@link module:ol/interaction/DragRotate~DragRotate}\n * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * {@link module:ol/interaction/DragPan~DragPan}\n * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions} [options] Defaults options.\n * @return {Collection<import(\"./Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Interaction.js\").default>} */\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate =\n    options.altShiftDragRotate !== undefined\n      ? options.altShiftDragRotate\n      : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom =\n    options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(\n      new DoubleClickZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(\n      new DragPan({\n        onFocusOnly: options.onFocusOnly,\n        kinetic: kinetic,\n      }),\n    );\n  }\n\n  const pinchRotate =\n    options.pinchRotate !== undefined ? options.pinchRotate : true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(\n      new PinchZoom({\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(\n      new KeyboardZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const mouseWheelZoom =\n    options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(\n      new MouseWheelZoom({\n        onFocusOnly: options.onFocusOnly,\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const shiftDragZoom =\n    options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(\n      new DragZoom({\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  return interactions;\n}\n","/**\n * @module ol/geom/flat/center\n */\nimport {createEmpty, createOrUpdateFromFlatCoordinates} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  const flatCenters = [];\n  let extent = createEmpty();\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    extent = createOrUpdateFromFlatCoordinates(\n      flatCoordinates,\n      offset,\n      ends[0],\n      stride,\n    );\n    flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n    offset = ends[ends.length - 1];\n  }\n  return flatCenters;\n}\n","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>} [dest] Destination.\n * @param {number} [dimension] Destination dimension (default is `2`)\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  fraction,\n  dest,\n  dimension,\n) {\n  let o, t;\n  const n = (end - offset) / stride;\n  if (n === 1) {\n    o = offset;\n  } else if (n === 2) {\n    o = offset;\n    t = fraction;\n  } else if (n !== 0) {\n    let x1 = flatCoordinates[offset];\n    let y1 = flatCoordinates[offset + 1];\n    let length = 0;\n    const cumulativeLengths = [0];\n    for (let i = offset + stride; i < end; i += stride) {\n      const x2 = flatCoordinates[i];\n      const y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    const target = fraction * length;\n    const index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      t =\n        (target - cumulativeLengths[-index - 2]) /\n        (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      o = offset + (-index - 2) * stride;\n    } else {\n      o = offset + index * stride;\n    }\n  }\n  dimension = dimension > 1 ? dimension : 2;\n  dest = dest ? dest : new Array(dimension);\n  for (let i = 0; i < dimension; ++i) {\n    dest[i] =\n      o === undefined\n        ? NaN\n        : t === undefined\n          ? flatCoordinates[o + i]\n          : lerp(flatCoordinates[o + i], flatCoordinates[o + stride + i], t);\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringCoordinateAtM(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  m,\n  extrapolate,\n) {\n  if (end == offset) {\n    return null;\n  }\n  let coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  let lo = offset / stride;\n  let hi = end / stride;\n  while (lo < hi) {\n    const mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  const m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  const m1 = flatCoordinates[(lo + 1) * stride - 1];\n  const t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (let i = 0; i < stride - 1; ++i) {\n    coordinate.push(\n      lerp(\n        flatCoordinates[(lo - 1) * stride + i],\n        flatCoordinates[lo * stride + i],\n        t,\n      ),\n    );\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  m,\n  extrapolate,\n  interpolate,\n) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates,\n      offset,\n      ends[ends.length - 1],\n      stride,\n      m,\n      extrapolate,\n    );\n  }\n  let coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    }\n    if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        m,\n        false,\n      );\n    }\n    offset = end;\n  }\n  return null;\n}\n","/**\n * @module ol/render/Feature\n */\nimport Feature from '../Feature.js';\nimport {extend} from '../array.js';\nimport {\n  createOrUpdateFromCoordinate,\n  createOrUpdateFromFlatCoordinates,\n  getCenter,\n  getHeight,\n} from '../extent.js';\nimport {memoizeOne} from '../functions.js';\nimport {linearRingss as linearRingssCenter} from '../geom/flat/center.js';\nimport {\n  getInteriorPointOfArray,\n  getInteriorPointsOfMultiArray,\n} from '../geom/flat/interiorpoint.js';\nimport {interpolatePoint} from '../geom/flat/interpolate.js';\nimport {inflateEnds} from '../geom/flat/orient.js';\nimport {\n  douglasPeucker,\n  douglasPeuckerArray,\n  quantizeArray,\n} from '../geom/flat/simplify.js';\nimport {transform2D} from '../geom/flat/transform.js';\nimport {\n  LineString,\n  MultiLineString,\n  MultiPoint,\n  MultiPolygon,\n  Point,\n  Polygon,\n} from '../geom.js';\nimport {get as getProjection} from '../proj.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'` or 'MultiLineString'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * Lightweight, read-only, {@link module:ol/Feature~Feature} and {@link module:ol/geom/Geometry~Geometry} like\n * structure, optimized for vector tile rendering and styling. Geometry access\n * through the API is limited to getting the type and extent of the geometry.\n */\nclass RenderFeature {\n  /**\n   * @param {Type} type Geometry type.\n   * @param {Array<number>} flatCoordinates Flat coordinates. These always need\n   *     to be right-handed for polygons.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Object<string, *>} properties Properties.\n   * @param {number|string|undefined} id Feature id.\n   */\n  constructor(type, flatCoordinates, ends, stride, properties, id) {\n    /**\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent|undefined}\n     */\n    this.extent_;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = id;\n\n    /**\n     * @private\n     * @type {Type}\n     */\n    this.type_ = type;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatCoordinates_ = flatCoordinates;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatMidpoints_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.ends_ = ends || null;\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.properties_ = properties;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.stride_ = stride;\n\n    /**\n     * @private\n     * @type {RenderFeature}\n     */\n    this.simplifiedGeometry_;\n  }\n\n  /**\n   * Get a feature property by its key.\n   * @param {string} key Key\n   * @return {*} Value for the requested key.\n   * @api\n   */\n  get(key) {\n    return this.properties_[key];\n  }\n\n  /**\n   * Get the extent of this feature's geometry.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    if (!this.extent_) {\n      this.extent_ =\n        this.type_ === 'Point'\n          ? createOrUpdateFromCoordinate(this.flatCoordinates_)\n          : createOrUpdateFromFlatCoordinates(\n              this.flatCoordinates_,\n              0,\n              this.flatCoordinates_.length,\n              2,\n            );\n    }\n    return this.extent_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoint() {\n    if (!this.flatInteriorPoints_) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoints_ = getInteriorPointOfArray(\n        this.flatCoordinates_,\n        0,\n        this.ends_,\n        2,\n        flatCenter,\n        0,\n      );\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (!this.flatInteriorPoints_) {\n      const ends = inflateEnds(this.flatCoordinates_, this.ends_);\n      const flatCenters = linearRingssCenter(this.flatCoordinates_, 0, ends, 2);\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.flatCoordinates_,\n        0,\n        ends,\n        2,\n        flatCenters,\n      );\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (!this.flatMidpoints_) {\n      this.flatMidpoints_ = interpolatePoint(\n        this.flatCoordinates_,\n        0,\n        this.flatCoordinates_.length,\n        2,\n        0.5,\n      );\n    }\n    return this.flatMidpoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    if (!this.flatMidpoints_) {\n      this.flatMidpoints_ = [];\n      const flatCoordinates = this.flatCoordinates_;\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (this.ends_);\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        const end = ends[i];\n        const midpoint = interpolatePoint(flatCoordinates, offset, end, 2, 0.5);\n        extend(this.flatMidpoints_, midpoint);\n        offset = end;\n      }\n    }\n    return this.flatMidpoints_;\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is set when reading data from a remote source.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    return this.flatCoordinates_;\n  }\n\n  /**\n   * For API compatibility with {@link module:ol/Feature~Feature}, this method is useful when\n   * determining the geometry type in style function (see {@link #getType}).\n   * @return {RenderFeature} Feature.\n   * @api\n   */\n  getGeometry() {\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {RenderFeature} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {RenderFeature} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this;\n  }\n\n  /**\n   * Get the feature properties.\n   * @return {Object<string, *>} Feature properties.\n   * @api\n   */\n  getProperties() {\n    return this.properties_;\n  }\n\n  /**\n   * Get an object of all property names and values.  This has the same behavior as getProperties,\n   * but is here to conform with the {@link module:ol/Feature~Feature} interface.\n   * @return {Object<string, *>?} Object.\n   */\n  getPropertiesInternal() {\n    return this.properties_;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride_;\n  }\n\n  /**\n   * @return {import('../style/Style.js').StyleFunction|undefined} Style\n   */\n  getStyleFunction() {\n    return this.styleFunction;\n  }\n\n  /**\n   * Get the type of this feature's geometry.\n   * @return {Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return this.type_;\n  }\n\n  /**\n   * Transform geometry coordinates from tile pixel space to projected.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection The data projection\n   */\n  transform(projection) {\n    projection = getProjection(projection);\n    const pixelExtent = projection.getExtent();\n    const projectedExtent = projection.getWorldExtent();\n    if (pixelExtent && projectedExtent) {\n      const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n      composeTransform(\n        tmpTransform,\n        projectedExtent[0],\n        projectedExtent[3],\n        scale,\n        -scale,\n        0,\n        0,\n        0,\n      );\n      transform2D(\n        this.flatCoordinates_,\n        0,\n        this.flatCoordinates_.length,\n        2,\n        tmpTransform,\n        this.flatCoordinates_,\n      );\n    }\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   */\n  applyTransform(transformFn) {\n    transformFn(this.flatCoordinates_, this.flatCoordinates_, this.stride_);\n  }\n\n  /**\n   * @return {RenderFeature} A cloned render feature.\n   */\n  clone() {\n    return new RenderFeature(\n      this.type_,\n      this.flatCoordinates_.slice(),\n      this.ends_?.slice(),\n      this.stride_,\n      Object.assign({}, this.properties_),\n      this.id_,\n    );\n  }\n\n  /**\n   * @return {Array<number>|null} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Add transform and resolution based geometry simplification to this instance.\n   * @return {RenderFeature} This render feature.\n   */\n  enableSimplifyTransformed() {\n    this.simplifyTransformed = memoizeOne((squaredTolerance, transform) => {\n      if (squaredTolerance === this.squaredTolerance_) {\n        return this.simplifiedGeometry_;\n      }\n      this.simplifiedGeometry_ = this.clone();\n      if (transform) {\n        this.simplifiedGeometry_.applyTransform(transform);\n      }\n      const simplifiedFlatCoordinates =\n        this.simplifiedGeometry_.getFlatCoordinates();\n      let simplifiedEnds;\n      switch (this.type_) {\n        case 'LineString':\n          simplifiedFlatCoordinates.length = douglasPeucker(\n            simplifiedFlatCoordinates,\n            0,\n            this.simplifiedGeometry_.flatCoordinates_.length,\n            this.simplifiedGeometry_.stride_,\n            squaredTolerance,\n            simplifiedFlatCoordinates,\n            0,\n          );\n          simplifiedEnds = [simplifiedFlatCoordinates.length];\n          break;\n        case 'MultiLineString':\n          simplifiedEnds = [];\n          simplifiedFlatCoordinates.length = douglasPeuckerArray(\n            simplifiedFlatCoordinates,\n            0,\n            this.simplifiedGeometry_.ends_,\n            this.simplifiedGeometry_.stride_,\n            squaredTolerance,\n            simplifiedFlatCoordinates,\n            0,\n            simplifiedEnds,\n          );\n          break;\n        case 'Polygon':\n          simplifiedEnds = [];\n          simplifiedFlatCoordinates.length = quantizeArray(\n            simplifiedFlatCoordinates,\n            0,\n            this.simplifiedGeometry_.ends_,\n            this.simplifiedGeometry_.stride_,\n            Math.sqrt(squaredTolerance),\n            simplifiedFlatCoordinates,\n            0,\n            simplifiedEnds,\n          );\n          break;\n        default:\n      }\n      if (simplifiedEnds) {\n        this.simplifiedGeometry_ = new RenderFeature(\n          this.type_,\n          simplifiedFlatCoordinates,\n          simplifiedEnds,\n          2,\n          this.properties_,\n          this.id_,\n        );\n      }\n      this.squaredTolerance_ = squaredTolerance;\n      return this.simplifiedGeometry_;\n    });\n    return this;\n  }\n}\n\n/**\n * @return {Array<number>} Flat coordinates.\n */\nRenderFeature.prototype.getFlatCoordinates =\n  RenderFeature.prototype.getOrientedFlatCoordinates;\n\n/**\n * Create a geometry from an `ol/render/Feature`\n * @param {RenderFeature} renderFeature\n * Render Feature\n * @return {Point|MultiPoint|LineString|MultiLineString|Polygon|MultiPolygon}\n * New geometry instance.\n * @api\n */\nexport function toGeometry(renderFeature) {\n  const geometryType = renderFeature.getType();\n  switch (geometryType) {\n    case 'Point':\n      return new Point(renderFeature.getFlatCoordinates());\n    case 'MultiPoint':\n      return new MultiPoint(renderFeature.getFlatCoordinates(), 'XY');\n    case 'LineString':\n      return new LineString(renderFeature.getFlatCoordinates(), 'XY');\n    case 'MultiLineString':\n      return new MultiLineString(\n        renderFeature.getFlatCoordinates(),\n        'XY',\n        /** @type {Array<number>} */ (renderFeature.getEnds()),\n      );\n    case 'Polygon':\n      const flatCoordinates = renderFeature.getFlatCoordinates();\n      const ends = renderFeature.getEnds();\n      const endss = inflateEnds(flatCoordinates, ends);\n      return endss.length > 1\n        ? new MultiPolygon(flatCoordinates, 'XY', endss)\n        : new Polygon(flatCoordinates, 'XY', ends);\n    default:\n      throw new Error('Invalid geometry type:' + geometryType);\n  }\n}\n\n/**\n * Create an `ol/Feature` from an `ol/render/Feature`\n * @param {RenderFeature} renderFeature RenderFeature\n * @param {string} [geometryName] Geometry name to use\n * when creating the Feature.\n * @return {Feature} Newly constructed `ol/Feature` with properties,\n * geometry, and id copied over.\n * @api\n */\nexport function toFeature(renderFeature, geometryName) {\n  const id = renderFeature.getId();\n  const geometry = toGeometry(renderFeature);\n  const properties = renderFeature.getProperties();\n  const feature = new Feature();\n  if (geometryName !== undefined) {\n    feature.setGeometryName(geometryName);\n  }\n  feature.setGeometry(geometry);\n  if (id !== undefined) {\n    feature.setId(id);\n  }\n  feature.setProperties(properties, true);\n  return feature;\n}\n\nexport default RenderFeature;\n","/**\n * @module ol/Tile\n */\nimport TileState from './TileState.js';\nimport {easeIn} from './easing.js';\nimport EventType from './events/EventType.js';\nimport EventTarget from './events/Target.js';\nimport {abstract} from './util.js';\n\n/**\n * A function that takes a {@link module:ol/Tile~Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState.js';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   const xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     const data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~TileSource} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes a {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection~Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @api\n */\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nclass Tile extends EventTarget {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {import(\"./TileState.js\").default}\n     */\n    this.state = state;\n\n    /**\n     * A key assigned to the tile. This is used in conjunction with a source key\n     * to determine if a cached version of this tile may be used by the renderer.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @private\n     * @type {number}\n     */\n    this.transition_ =\n      options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n\n    /**\n     * @type {boolean}\n     */\n    this.interpolate = !!options.interpolate;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Called by the tile cache when the tile is removed from the cache due to expiry\n   */\n  release() {\n    // to remove the `change` listener on this tile in `ol/TileQueue#handleTileChange`\n    this.setState(TileState.EMPTY);\n  }\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {import(\"./TileState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @api\n   */\n  setState(state) {\n    if (this.state === TileState.EMPTY) {\n      // no more state changes\n      return;\n    }\n    if (this.state !== TileState.ERROR && this.state > state) {\n      throw new Error('Tile load sequence violation');\n    }\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + 1000 / 60; // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n\n  /**\n   * @override\n   */\n  disposeInternal() {\n    this.release();\n    super.disposeInternal();\n  }\n}\n\nexport default Tile;\n","/**\n * @module ol/VectorTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\n\n/**\n * @template {import('./Feature.js').FeatureLike} FeatureType\n */\nclass VectorTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Data source url.\n   * @param {import(\"./format/Feature.js\").default<FeatureType>} format Feature format.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, src, format, tileLoadFunction, options) {\n    super(tileCoord, state, options);\n\n    /**\n     * Extent of this tile; set by the source.\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = null;\n\n    /**\n     * @private\n     * @type {import(\"./format/Feature.js\").default<FeatureType>}\n     */\n    this.format_ = format;\n\n    /**\n     * @private\n     * @type {Array<FeatureType>}\n     */\n    this.features_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./featureloader.js\").FeatureLoader}\n     */\n    this.loader_;\n\n    /**\n     * Feature projection of this tile; set by the source.\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection = null;\n\n    /**\n     * Resolution of this tile; set by the source.\n     * @type {number}\n     */\n    this.resolution;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.url_ = src;\n\n    this.key = src;\n  }\n\n  /**\n   * @return {string} Tile url.\n   */\n  getTileUrl() {\n    return this.url_;\n  }\n\n  /**\n   * Get the feature format assigned for reading this tile's features.\n   * @return {import(\"./format/Feature.js\").default<FeatureType>} Feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * Get the features for this tile. Geometries will be in the view projection.\n   * @return {Array<FeatureType>} Features.\n   * @api\n   */\n  getFeatures() {\n    return this.features_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @override\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.setState(TileState.LOADING);\n      this.tileLoadFunction_(this, this.url_);\n      if (this.loader_) {\n        this.loader_(this.extent, this.resolution, this.projection);\n      }\n    }\n  }\n\n  /**\n   * Handler for successful tile load.\n   * @param {Array<FeatureType>} features The loaded features.\n   * @param {import(\"./proj/Projection.js\").default} dataProjection Data projection.\n   */\n  onLoad(features, dataProjection) {\n    this.setFeatures(features);\n  }\n\n  /**\n   * Handler for tile load errors.\n   */\n  onError() {\n    this.setState(TileState.ERROR);\n  }\n\n  /**\n   * Function for use in a {@link module:ol/source/VectorTile~VectorTile}'s `tileLoadFunction`.\n   * Sets the features for the tile.\n   * @param {Array<FeatureType>} features Features.\n   * @api\n   */\n  setFeatures(features) {\n    this.features_ = features;\n    this.setState(TileState.LOADED);\n  }\n\n  /**\n   * Set the feature loader for reading this tile's features.\n   * @param {import(\"./featureloader.js\").FeatureLoader<FeatureType>} loader Feature loader.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n}\n\nexport default VectorTile;\n","import {VectorTile} from 'ol';\nimport TileState from 'ol/TileState.js';\nimport {toPromise} from 'ol/functions.js';\nimport {getUid} from 'ol/util.js';\nimport {normalizeSourceUrl, normalizeStyleUrl} from './mapbox.js';\n\n/** @typedef {'Style'|'Source'|'Sprite'|'SpriteImage'|'Tiles'|'GeoJSON'} ResourceType */\n\n/** @typedef {import(\"ol\").Map} Map */\n/** @typedef {import(\"ol/layer\").Layer} Layer */\n/** @typedef {import(\"ol/layer\").Group} LayerGroup */\n/** @typedef {import(\"ol/layer\").Vector} VectorLayer */\n/** @typedef {import(\"ol/layer\").VectorTile} VectorTileLayer */\n/** @typedef {import(\"ol/source\").Source} Source */\n\nexport const emptyObj = Object.freeze({});\n\nconst functionCacheByStyleId = {};\nconst filterCacheByStyleId = {};\n\nlet styleId = 0;\nexport function getStyleId(glStyle) {\n  if (!glStyle.id) {\n    glStyle.id = styleId++;\n  }\n  return glStyle.id;\n}\n\nexport function getStyleFunctionKey(glStyle, olLayer) {\n  return getStyleId(glStyle) + '.' + getUid(olLayer);\n}\n\n/**\n * @param {Object} glStyle Mapboox style object.\n * @return {Object} Function cache.\n */\nexport function getFunctionCache(glStyle) {\n  let functionCache = functionCacheByStyleId[glStyle.id];\n  if (!functionCache) {\n    functionCache = {};\n    functionCacheByStyleId[getStyleId(glStyle)] = functionCache;\n  }\n  return functionCache;\n}\n\nexport function clearFunctionCache() {\n  for (const key in functionCacheByStyleId) {\n    delete functionCacheByStyleId[key];\n  }\n}\n\n/**\n * @param {Object} glStyle Mapboox style object.\n * @return {Object} Filter cache.\n */\nexport function getFilterCache(glStyle) {\n  let filterCache = filterCacheByStyleId[glStyle.id];\n  if (!filterCache) {\n    filterCache = {};\n    filterCacheByStyleId[getStyleId(glStyle)] = filterCache;\n  }\n  return filterCache;\n}\n\nexport function deg2rad(degrees) {\n  return (degrees * Math.PI) / 180;\n}\n\nexport const defaultResolutions = (function () {\n  const resolutions = [];\n  for (let res = 78271.51696402048; resolutions.length <= 24; res /= 2) {\n    resolutions.push(res);\n  }\n  return resolutions;\n})();\n\n/**\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @return {HTMLCanvasElement} Canvas.\n */\nexport function createCanvas(width, height) {\n  if (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope && typeof OffscreenCanvas !== 'undefined') { // eslint-disable-line\n    return /** @type {?} */ (new OffscreenCanvas(width, height));\n  }\n  const canvas = document.createElement('canvas');\n  canvas.width = width;\n  canvas.height = height;\n  return canvas;\n}\n\nexport function getZoomForResolution(resolution, resolutions) {\n  let i = 0;\n  const ii = resolutions.length;\n  for (; i < ii; ++i) {\n    const candidate = resolutions[i];\n    if (candidate < resolution && i + 1 < ii) {\n      const zoomFactor = resolutions[i] / resolutions[i + 1];\n      return i + Math.log(resolutions[i] / resolution) / Math.log(zoomFactor);\n    }\n  }\n  return ii - 1;\n}\n\nexport function getResolutionForZoom(zoom, resolutions) {\n  const base = Math.floor(zoom);\n  const factor = Math.pow(2, zoom - base);\n  return resolutions[base] / factor;\n}\n\nconst pendingRequests = {};\n/**\n * @param {ResourceType} resourceType Type of resource to load.\n * @param {string} url Url of the resource.\n * @param {Options} [options] Options.\n * @param {{url?: string}} [metadata] Object to be filled with the request.\n * @return {Promise<Object|Response>} Promise that resolves with the loaded resource\n * or rejects with the Response object.\n * @private\n */\nexport function fetchResource(resourceType, url, options = {}, metadata) {\n  if (url in pendingRequests) {\n    if (metadata) {\n      metadata.url = pendingRequests[url][0].url;\n    }\n    return pendingRequests[url][1];\n  }\n  const transformedRequest = options.transformRequest\n    ? options.transformRequest(url, resourceType) || url\n    : url;\n  const handleError = function (error) {\n    delete pendingRequests[url];\n    return Promise.reject(new Error('Error fetching source ' + url));\n  };\n  const handleResponse = function (response) {\n    delete pendingRequests[url];\n    return response.ok\n      ? response.json()\n      : Promise.reject(new Error('Error fetching source ' + url));\n  };\n  const pendingRequest = toPromise(() => transformedRequest)\n    .then((transformedRequest) => {\n      if (transformedRequest instanceof Response) {\n        if (metadata) {\n          metadata.url = transformedRequest.url;\n        }\n        return handleResponse(transformedRequest);\n      }\n      if (!(transformedRequest instanceof Request)) {\n        transformedRequest = new Request(transformedRequest);\n      }\n      if (!transformedRequest.headers.get('Accept')) {\n        transformedRequest.headers.set('Accept', 'application/json');\n      }\n      if (metadata) {\n        metadata.url = transformedRequest.url;\n      }\n      return fetch(transformedRequest).then(handleResponse).catch(handleError);\n    })\n    .catch(handleError);\n  pendingRequests[url] = [transformedRequest, pendingRequest];\n  return pendingRequest;\n}\n\nexport function getGlStyle(glStyleOrUrl, options) {\n  if (typeof glStyleOrUrl === 'string') {\n    if (glStyleOrUrl.trim().startsWith('{')) {\n      try {\n        const glStyle = JSON.parse(glStyleOrUrl);\n        return Promise.resolve(glStyle);\n      } catch (error) {\n        return Promise.reject(error);\n      }\n    } else {\n      glStyleOrUrl = normalizeStyleUrl(glStyleOrUrl, options.accessToken);\n      return fetchResource('Style', glStyleOrUrl, options);\n    }\n  } else {\n    return Promise.resolve(glStyleOrUrl);\n  }\n}\n\nconst tilejsonCache = {};\n/**\n * @param {Object} glSource glStyle source object.\n * @param {string} styleUrl Style URL.\n * @param {Options} options Options.\n * @return {Promise<{tileJson: Object, tileLoadFunction: import('ol/Tile.js').LoadFunction}?>} TileJson and load function\n */\nexport function getTileJson(glSource, styleUrl, options = {}) {\n  const cacheKey = [styleUrl, JSON.stringify(glSource)].toString();\n  let promise = tilejsonCache[cacheKey];\n  if (!promise || options.transformRequest) {\n    let tileLoadFunction;\n    if (options.transformRequest) {\n      tileLoadFunction = (tile, src) => {\n        const transformedRequest = options.transformRequest\n          ? options.transformRequest(src, 'Tiles') || src\n          : src;\n        if (tile instanceof VectorTile) {\n          tile.setLoader((extent, resolution, projection) => {\n            const handleResponse = function (response) {\n              response.arrayBuffer().then((data) => {\n                const format = tile.getFormat();\n                const features = format.readFeatures(data, {\n                  extent: extent,\n                  featureProjection: projection,\n                });\n                // @ts-ignore\n                tile.setFeatures(features);\n              });\n            };\n            toPromise(() => transformedRequest)\n              .then((transformedRequest) => {\n                if (transformedRequest instanceof Response) {\n                  return handleResponse(transformedRequest);\n                }\n                fetch(transformedRequest)\n                  .then(handleResponse)\n                  .catch((e) => tile.setState(TileState.ERROR));\n              })\n              .catch((e) => tile.setState(TileState.ERROR));\n          });\n        } else {\n          const img = tile.getImage();\n          toPromise(() => transformedRequest)\n            .then((transformedRequest) => {\n              if (typeof transformedRequest === 'string') {\n                img.src = transformedRequest;\n                return;\n              }\n              const handleResponse = (response) =>\n                response.blob().then((blob) => {\n                  const url = URL.createObjectURL(blob);\n                  img.addEventListener('load', () => URL.revokeObjectURL(url));\n                  img.addEventListener('error', () => URL.revokeObjectURL(url));\n                  img.src = url;\n                });\n              if (transformedRequest instanceof Response) {\n                return handleResponse(transformedRequest);\n              }\n              fetch(transformedRequest)\n                .then(handleResponse)\n                .catch((e) => tile.setState(TileState.ERROR));\n            })\n            .catch((e) => tile.setState(TileState.ERROR));\n        }\n      };\n    }\n    const url = glSource.url;\n    if (url && !glSource.tiles) {\n      const normalizedSourceUrl = normalizeSourceUrl(\n        url,\n        options.accessToken,\n        options.accessTokenParam || 'access_token',\n        styleUrl || location.href,\n      );\n      if (url.startsWith('mapbox://')) {\n        promise = Promise.resolve({\n          tileJson: Object.assign({}, glSource, {\n            url: undefined,\n            tiles: normalizedSourceUrl,\n          }),\n          tileLoadFunction,\n        });\n      } else {\n        const metadata = {};\n        promise = fetchResource(\n          'Source',\n          normalizedSourceUrl[0],\n          options,\n          metadata,\n        ).then(function (tileJson) {\n          tileJson.tiles = tileJson.tiles.map(function (tileUrl) {\n            if (tileJson.scheme === 'tms') {\n              tileUrl = tileUrl.replace('{y}', '{-y}');\n            }\n            return normalizeSourceUrl(\n              tileUrl,\n              options.accessToken,\n              options.accessTokenParam || 'access_token',\n              metadata.url,\n            )[0];\n          });\n          return Promise.resolve({tileJson, tileLoadFunction});\n        });\n      }\n    } else if (glSource.tiles) {\n      glSource = Object.assign({}, glSource, {\n        tiles: glSource.tiles.map(function (tileUrl) {\n          if (glSource.scheme === 'tms') {\n            tileUrl = tileUrl.replace('{y}', '{-y}');\n          }\n          return normalizeSourceUrl(\n            tileUrl,\n            options.accessToken,\n            options.accessTokenParam || 'access_token',\n            styleUrl || location.href,\n          )[0];\n        }),\n      });\n      promise = Promise.resolve({\n        tileJson: Object.assign({}, glSource),\n        tileLoadFunction,\n      });\n    } else {\n      promise = Promise.reject(new Error('source has no `tiles` nor `url`'));\n    }\n    tilejsonCache[cacheKey] = promise;\n  }\n  return promise;\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} spriteImage Sprite image id.\n * @param {{x: number, y: number, width: number, height: number, pixelRatio: number}} spriteImageData Sprite image data.\n * @param {number} haloWidth Halo width.\n * @param {{r: number, g: number, b: number, a: number}} haloColor Halo color.\n * @return {HTMLCanvasElement} Canvas element with the halo.\n */\nexport function drawIconHalo(\n  spriteImage,\n  spriteImageData,\n  haloWidth,\n  haloColor,\n) {\n  const imgSize = [\n    2 * haloWidth * spriteImageData.pixelRatio + spriteImageData.width,\n    2 * haloWidth * spriteImageData.pixelRatio + spriteImageData.height,\n  ];\n  const imageCanvas = createCanvas(imgSize[0], imgSize[1]);\n  const imageContext = imageCanvas.getContext('2d');\n  imageContext.drawImage(\n    spriteImage,\n    spriteImageData.x,\n    spriteImageData.y,\n    spriteImageData.width,\n    spriteImageData.height,\n    haloWidth * spriteImageData.pixelRatio,\n    haloWidth * spriteImageData.pixelRatio,\n    spriteImageData.width,\n    spriteImageData.height,\n  );\n  const imageData = imageContext.getImageData(0, 0, imgSize[0], imgSize[1]);\n  imageContext.globalCompositeOperation = 'destination-over';\n  imageContext.fillStyle = `rgba(${haloColor.r * 255},${haloColor.g * 255},${\n    haloColor.b * 255\n  },${haloColor.a})`;\n  const data = imageData.data;\n  for (let i = 0, ii = imageData.width; i < ii; ++i) {\n    for (let j = 0, jj = imageData.height; j < jj; ++j) {\n      const index = (j * ii + i) * 4;\n      const alpha = data[index + 3];\n      if (alpha > 0) {\n        imageContext.arc(\n          i,\n          j,\n          haloWidth * spriteImageData.pixelRatio,\n          0,\n          2 * Math.PI,\n        );\n      }\n    }\n  }\n  imageContext.fill();\n  return imageCanvas;\n}\n\nfunction smoothstep(min, max, value) {\n  const x = Math.max(0, Math.min(1, (value - min) / (max - min)));\n  return x * x * (3 - 2 * x);\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} image SDF image\n * @param {{x: number, y: number, width: number, height: number}} area Area to unSDF\n * @param {{r: number, g: number, b: number, a: number}} color Color to use\n * @return {HTMLCanvasElement} Regular image\n */\nexport function drawSDF(image, area, color) {\n  const imageCanvas = createCanvas(area.width, area.height);\n  const imageContext = imageCanvas.getContext('2d');\n  imageContext.drawImage(\n    image,\n    area.x,\n    area.y,\n    area.width,\n    area.height,\n    0,\n    0,\n    area.width,\n    area.height,\n  );\n  const imageData = imageContext.getImageData(0, 0, area.width, area.height);\n  const data = imageData.data;\n  for (let i = 0, ii = imageData.width; i < ii; ++i) {\n    for (let j = 0, jj = imageData.height; j < jj; ++j) {\n      const index = (j * ii + i) * 4;\n      const dist = data[index + 3] / 255;\n\n      const buffer = 0.75;\n      const gamma = 0.1;\n\n      const alpha = smoothstep(buffer - gamma, buffer + gamma, dist);\n      if (alpha > 0) {\n        data[index + 0] = Math.round(255 * color.r * alpha);\n        data[index + 1] = Math.round(255 * color.g * alpha);\n        data[index + 2] = Math.round(255 * color.b * alpha);\n        data[index + 3] = Math.round(255 * alpha);\n      } else {\n        data[index + 3] = 0;\n      }\n    }\n  }\n  imageContext.putImageData(imageData, 0, 0);\n  return imageCanvas;\n}\n\n/**\n * @typedef {import(\"./apply.js\").Options} Options\n * @private\n */\n","import mb2css from 'mapbox-to-css-font';\nimport {checkedFonts} from 'ol/render/canvas.js';\nimport {createCanvas} from './util.js';\n\nconst hairSpacePool = Array(256).join('\\u200A');\nexport function applyLetterSpacing(text, letterSpacing) {\n  if (letterSpacing >= 0.05) {\n    let textWithLetterSpacing = '';\n    const lines = text.split('\\n');\n    const joinSpaceString = hairSpacePool.slice(\n      0,\n      Math.round(letterSpacing / 0.1),\n    );\n    for (let l = 0, ll = lines.length; l < ll; ++l) {\n      if (l > 0) {\n        textWithLetterSpacing += '\\n';\n      }\n      textWithLetterSpacing += lines[l].split('').join(joinSpaceString);\n    }\n    return textWithLetterSpacing;\n  }\n  return text;\n}\n\nlet measureContext;\nfunction getMeasureContext() {\n  if (!measureContext) {\n    measureContext = createCanvas(1, 1).getContext('2d');\n  }\n  return measureContext;\n}\n\nfunction measureText(text, letterSpacing) {\n  return (\n    getMeasureContext().measureText(text).width +\n    (text.length - 1) * letterSpacing\n  );\n}\n\nconst measureCache = {};\ncheckedFonts.on('propertychange', () => {\n  for (const key in measureCache) {\n    delete measureCache[key];\n  }\n});\n\nexport function wrapText(text, font, em, letterSpacing) {\n  if (text.indexOf('\\n') !== -1) {\n    const hardLines = text.split('\\n');\n    const lines = [];\n    for (let i = 0, ii = hardLines.length; i < ii; ++i) {\n      lines.push(wrapText(hardLines[i], font, em, letterSpacing));\n    }\n    return lines.join('\\n');\n  }\n  const key = em + ',' + font + ',' + text + ',' + letterSpacing;\n  let wrappedText = measureCache[key];\n  if (!wrappedText) {\n    const words = text.split(' ');\n    if (words.length > 1) {\n      const ctx = getMeasureContext();\n      ctx.font = font;\n      const oneEm = ctx.measureText('M').width;\n      const maxWidth = oneEm * em;\n      let line = '';\n      const lines = [];\n      // Pass 1 - wrap lines to not exceed maxWidth\n      for (let i = 0, ii = words.length; i < ii; ++i) {\n        const word = words[i];\n        const testLine = line + (line ? ' ' : '') + word;\n        if (measureText(testLine, letterSpacing) <= maxWidth) {\n          line = testLine;\n        } else {\n          if (line) {\n            lines.push(line);\n          }\n          line = word;\n        }\n      }\n      if (line) {\n        lines.push(line);\n      }\n      // Pass 2 - add lines with a width of less than 30% of maxWidth to the previous or next line\n      for (let i = 0, ii = lines.length; i < ii && ii > 1; ++i) {\n        const line = lines[i];\n        if (measureText(line, letterSpacing) < maxWidth * 0.35) {\n          const prevWidth =\n            i > 0 ? measureText(lines[i - 1], letterSpacing) : Infinity;\n          const nextWidth =\n            i < ii - 1 ? measureText(lines[i + 1], letterSpacing) : Infinity;\n          lines.splice(i, 1);\n          ii -= 1;\n          if (prevWidth < nextWidth) {\n            lines[i - 1] += ' ' + line;\n            i -= 1;\n          } else {\n            lines[i] = line + ' ' + lines[i];\n          }\n        }\n      }\n      // Pass 3 - try to fill 80% of maxWidth for each line\n      for (let i = 0, ii = lines.length - 1; i < ii; ++i) {\n        const line = lines[i];\n        const next = lines[i + 1];\n        if (\n          measureText(line, letterSpacing) > maxWidth * 0.7 &&\n          measureText(next, letterSpacing) < maxWidth * 0.6\n        ) {\n          const lineWords = line.split(' ');\n          const lastWord = lineWords.pop();\n          if (measureText(lastWord, letterSpacing) < maxWidth * 0.2) {\n            lines[i] = lineWords.join(' ');\n            lines[i + 1] = lastWord + ' ' + next;\n          }\n          ii -= 1;\n        }\n      }\n      wrappedText = lines.join('\\n');\n    } else {\n      wrappedText = text;\n    }\n    wrappedText = applyLetterSpacing(wrappedText, letterSpacing);\n    measureCache[key] = wrappedText;\n  }\n  return wrappedText;\n}\n\nconst webSafeFonts = [\n  'Arial',\n  'Courier New',\n  'Times New Roman',\n  'Verdana',\n  'sans-serif',\n  'serif',\n  'monospace',\n  'cursive',\n  'fantasy',\n];\n\nconst processedFontFamilies = {};\n\n/**\n * @param {Array} fonts Fonts.\n * @param {string} [templateUrl] Template URL.\n * @return {Array} Processed fonts.\n * @private\n */\nexport function getFonts(\n  fonts,\n  templateUrl = 'https://cdn.jsdelivr.net/npm/@fontsource/{font-family}/{fontweight}{-fontstyle}.css',\n) {\n  let fontDescriptions;\n  for (let i = 0, ii = fonts.length; i < ii; ++i) {\n    const font = fonts[i];\n    if (font in processedFontFamilies) {\n      continue;\n    }\n    processedFontFamilies[font] = true;\n    const cssFont = mb2css(font, 16);\n    const parts = cssFont.split(' ');\n    if (!fontDescriptions) {\n      fontDescriptions = [];\n    }\n    fontDescriptions.push([\n      parts.slice(3).join(' ').replace(/\"/g, ''),\n      parts[1],\n      parts[0],\n    ]);\n  }\n  if (!fontDescriptions) {\n    return fonts;\n  }\n\n  (async () => {\n    await document.fonts.ready;\n    for (let i = 0, ii = fontDescriptions.length; i < ii; ++i) {\n      const fontDescription = fontDescriptions[i];\n      const family = fontDescription[0];\n      if (webSafeFonts.includes(family)) {\n        continue;\n      }\n      const weight = fontDescription[1];\n      const style = fontDescription[2];\n      const loaded = await document.fonts.load(\n        `${style} ${weight} 16px \"${family}\"`,\n      );\n      if (\n        !loaded.some(\n          (f) =>\n            f.family.replace(/^['\"]|['\"]$/g, '').toLowerCase() ===\n              family.toLowerCase() &&\n            f.weight == weight &&\n            f.style === style,\n        )\n      ) {\n        const fontUrl = templateUrl\n          .replace('{font-family}', family.replace(/ /g, '-').toLowerCase())\n          .replace('{Font+Family}', family.replace(/ /g, '+'))\n          .replace('{fontweight}', weight)\n          .replace(\n            '{-fontstyle}',\n            style.replace('normal', '').replace(/(.+)/, '-$1'),\n          )\n          .replace('{fontstyle}', style);\n        if (!document.querySelector('link[href=\"' + fontUrl + '\"]')) {\n          const markup = document.createElement('link');\n          markup.href = fontUrl;\n          markup.rel = 'stylesheet';\n          document.head.appendChild(markup);\n        }\n      }\n    }\n  })();\n\n  return fonts;\n}\n","/*\nol-mapbox-style - Use Mapbox/MapLibre Style objects with OpenLayers\nCopyright 2016-present ol-mapbox-style contributors\nLicense: https://raw.githubusercontent.com/openlayers/ol-mapbox-style/master/LICENSE\n*/\n\nimport {\n  Color,\n  CompoundExpression,\n  convertFunction,\n  createPropertyExpression,\n  derefLayers,\n  expressions,\n  featureFilter as createFilter,\n  isExpression,\n  isFunction,\n  v8 as spec,\n} from '@maplibre/maplibre-gl-style-spec';\nimport mb2css from 'mapbox-to-css-font';\nimport Map from 'ol/Map.js';\nimport {distance} from 'ol/coordinate.js';\nimport {getCenter} from 'ol/extent.js';\nimport {toPromise} from 'ol/functions.js';\nimport RenderFeature from 'ol/render/Feature.js';\nimport Circle from 'ol/style/Circle.js';\nimport Fill from 'ol/style/Fill.js';\nimport Icon from 'ol/style/Icon.js';\nimport Stroke from 'ol/style/Stroke.js';\nimport Style from 'ol/style/Style.js';\nimport Text from 'ol/style/Text.js';\nimport {applyLetterSpacing, wrapText} from './text.js';\nimport {\n  clearFunctionCache,\n  createCanvas,\n  defaultResolutions,\n  deg2rad,\n  drawIconHalo,\n  drawSDF,\n  emptyObj,\n  getFilterCache,\n  getFunctionCache,\n  getStyleFunctionKey,\n  getZoomForResolution,\n} from './util.js';\n\n/**\n * @typedef {import(\"ol/layer/Vector\").default} VectorLayer\n * @typedef {import(\"ol/layer/VectorTile\").default} VectorTileLayer\n * @typedef {import(\"ol/style/Style\").StyleFunction} StyleFunction\n * @typedef {import('./util.js').ResourceType} ResourceType\n */\n\n/** @typedef {string|Request|Response|Promise<string|Request|Response>|Object<string, string|Request|Response|Promise<string|Request|Response>>} SpriteImageUrl */\n\n/**\n * @typedef {Object} SpriteImage\n * @property {HTMLImageElement|HTMLCanvasElement} image Image\n * @property {Array<number>} size Size\n * @property {boolean} [unSDFed] Image has been unSDFed\n */\n\n/** @typedef {Object<string, SpriteImage>} SpriteImages */\n\nconst types = {\n  'Point': 1,\n  'MultiPoint': 1,\n  'LineString': 2,\n  'MultiLineString': 2,\n  'Polygon': 3,\n  'MultiPolygon': 3,\n};\nconst anchor = {\n  'center': [0.5, 0.5],\n  'left': [0, 0.5],\n  'right': [1, 0.5],\n  'top': [0.5, 0],\n  'bottom': [0.5, 1],\n  'top-left': [0, 0],\n  'top-right': [1, 0],\n  'bottom-left': [0, 1],\n  'bottom-right': [1, 1],\n};\n\nconst expressionData = function (rawExpression, propertySpec) {\n  const compiledExpression = createPropertyExpression(\n    rawExpression,\n    propertySpec,\n  );\n  if (compiledExpression.result === 'error') {\n    throw new Error(\n      compiledExpression.value\n        .map((err) => `${err.key}: ${err.message}`)\n        .join(', '),\n    );\n  }\n  return compiledExpression.value;\n};\n\n// Shared camera object for global expression evaluation context\nexport const cameraObj = {zoom: 0, distanceFromCenter: 0};\n\n// Add unsupported expressions to the MapLibre GL Style spec\nCompoundExpression.register(expressions, {\n  ...CompoundExpression.definitions,\n  'pitch': [{kind: 'number'}, [], (ctx) => cameraObj.pitch || 90],\n  'distance-from-center': [\n    {kind: 'number'},\n    [],\n    (ctx) => cameraObj.distanceFromCenter || 0,\n  ],\n});\n\nlet renderFeatureCoordinates, renderFeature;\n\n/**\n * @private\n * @param {Object} layer Gl object layer.\n * @param {string} layoutOrPaint 'layout' or 'paint'.\n * @param {string} property Feature property.\n * @param {Object} feature Gl feature.\n * @param {Object} [functionCache] Function cache.\n * @param {Object} [featureState] Feature state.\n * @return {?} Value.\n */\nexport function getValue(\n  layer,\n  layoutOrPaint,\n  property,\n  feature,\n  functionCache,\n  featureState,\n) {\n  const layerId = layer.id;\n  if (!functionCache) {\n    functionCache = {};\n    console.warn('No functionCache provided to getValue()'); // eslint-disable-line no-console\n  }\n  if (!functionCache[layerId]) {\n    functionCache[layerId] = {};\n  }\n  const functions = functionCache[layerId];\n  if (!functions[property]) {\n    let value = (layer[layoutOrPaint] || emptyObj)[property];\n    const propertySpec = spec[`${layoutOrPaint}_${layer.type}`][property];\n    if (value === undefined) {\n      value = propertySpec.default;\n    }\n    let isExpr = isExpression(value);\n    if (!isExpr && isFunction(value)) {\n      value = convertFunction(value, propertySpec);\n      isExpr = true;\n    }\n    if (isExpr) {\n      const compiledExpression = expressionData(value, propertySpec);\n      functions[property] =\n        compiledExpression.evaluate.bind(compiledExpression);\n    } else {\n      if (propertySpec.type == 'color') {\n        value = Color.parse(value);\n      }\n      functions[property] = function () {\n        return value;\n      };\n    }\n  }\n  return functions[property](cameraObj, feature, featureState);\n}\n\n/**\n * @private\n * @param {Object} layer Gl object layer.\n * @param {Object} feature Gl feature.\n * @param {\"icon\"|\"text\"} prefix Style property prefix.\n * @param {Object} [functionCache] Function cache.\n * @return {\"declutter\"|\"obstacle\"|\"none\"} Value.\n */\nfunction getDeclutterMode(layer, feature, prefix, functionCache) {\n  const allowOverlap = getValue(\n    layer,\n    'layout',\n    `${prefix}-allow-overlap`,\n    feature,\n    functionCache,\n  );\n  if (!allowOverlap) {\n    return 'declutter';\n  }\n  const ignorePlacement = getValue(\n    layer,\n    'layout',\n    `${prefix}-ignore-placement`,\n    feature,\n    functionCache,\n  );\n  if (!ignorePlacement) {\n    return 'obstacle';\n  }\n  return 'none';\n}\n\n/**\n * @private\n * @param {string} layerId Layer id.\n * @param {?} filter Filter.\n * @param {Object} feature Feature.\n * @param {Object} [filterCache] Filter cache.\n * @return {boolean} Filter result.\n */\nfunction evaluateFilter(layerId, filter, feature, filterCache) {\n  if (!filterCache) {\n    console.warn('No filterCache provided to evaluateFilter()'); // eslint-disable-line no-console\n  }\n  if (!(layerId in filterCache)) {\n    try {\n      filterCache[layerId] = createFilter(filter).filter;\n    } catch (e) {\n      console.warn('Filter will evaluate to false: ' + e.message); // eslint-disable-line no-console\n      filterCache[layerId] = function () {\n        return false;\n      };\n    }\n  }\n  return filterCache[layerId](cameraObj, feature);\n}\n\nlet renderTransparentEnabled = false;\n\n/**\n * Configure whether features with a transparent style should be rendered. When\n * set to `true`, it will be possible to hit detect content that is not visible,\n * like transparent fills of polygons, using `ol/layer/Layer#getFeatures()` or\n * `ol/Map#getFeaturesAtPixel()`\n * @param {boolean} enabled Rendering of transparent elements is enabled.\n * Default is `false`.\n */\nexport function renderTransparent(enabled) {\n  if (enabled !== renderTransparentEnabled) {\n    clearFunctionCache();\n    renderTransparentEnabled = enabled;\n  }\n}\n\n/**\n * @private\n * @param {?} color Color.\n * @param {number} [opacity] Opacity.\n * @return {string} Color.\n */\nfunction colorWithOpacity(color, opacity) {\n  if (color) {\n    if (!renderTransparentEnabled && (color.a === 0 || opacity === 0)) {\n      return undefined;\n    }\n    const a = color.a;\n    opacity = opacity === undefined ? 1 : opacity;\n    return a === 0\n      ? 'transparent'\n      : 'rgba(' +\n          Math.round((color.r * 255) / a) +\n          ',' +\n          Math.round((color.g * 255) / a) +\n          ',' +\n          Math.round((color.b * 255) / a) +\n          ',' +\n          a * opacity +\n          ')';\n  }\n  return color;\n}\n\nconst templateRegEx = /\\{[^{}}]*\\}/g;\n\n/**\n * @private\n * @param {string} text Text.\n * @param {Object} properties Properties.\n * @return {string} Text.\n */\nfunction fromTemplate(text, properties) {\n  return text.replace(templateRegEx, function (match) {\n    return properties[match.slice(1, -1)] || '';\n  });\n}\n\n/**\n * @private\n * @param {string} icon Icon identifier (with prefix if not 'default')\n * @param {SpriteImages} spriteImages Sprite images.\n * @return {SpriteImage} Image.\n */\nexport function getSpriteImageForIcon(icon, spriteImages) {\n  let prefix = icon.split(':')[0];\n  if (prefix === icon) {\n    prefix = 'default';\n  }\n  return spriteImages[prefix];\n}\n\nlet recordLayer = false;\n\n/**\n * Turns recording of the Mapbox/MapLibre Style's `layer` on and off. When turned on,\n * the layer that a rendered feature belongs to will be set as the feature's\n * `mapbox-layer` property.\n * @param {boolean} record Recording of the style layer is on.\n */\nexport function recordStyleLayer(record = false) {\n  recordLayer = record;\n}\n\nexport const styleFunctionArgs = {};\n\n/**\n * **Caution**: This is a low level API, which is only useful for advanced use cases.\n * If you want to crete a map or layer group from an entire Mapbox/MapLibre style, use\n * the `apply()` function. If you want to create a vector layer from a single\n * source of a Mapbox/MapLibre style, use the `applyStyle()` function. If you want to\n * create a vector tile layer from a single source of a Mapbox/MapLibre style, use either\n * the `applyStyle()` function or the `MapboxVectorLayer` constructor.\n *\n * Creates a style function from the `glStyle` object for all layers that use\n * the specified `source`, which needs to be a `\"type\": \"vector\"` or\n * `\"type\": \"geojson\"` source and applies it to the specified OpenLayers layer.\n *\n * Two additional properties will be set on the provided layer:\n *\n *  * `mapbox-source`: The `id` of the Mapbox/MapLibre Style document's source that the\n *    OpenLayers layer was created from. Usually `apply()` creates one\n *    OpenLayers layer per Mapbox/MapLibre Style source, unless the layer stack has\n *    layers from different sources in between.\n *  * `mapbox-layers`: The `id`s of the Mapbox/MapLibre Style document's layers that are\n *    included in the OpenLayers layer.\n *\n * This function also works in a web worker. In worker mode, the main thread needs\n * to listen to messages from the worker and respond with another message to make\n * sure that sprite image loading works:\n *\n * ```js\n *  worker.addEventListener('message', event => {\n *   if (event.data.action === 'loadImage') {\n *     const image = new Image();\n *     image.crossOrigin = 'anonymous';\n *     image.addEventListener('load', function() {\n *       createImageBitmap(image, 0, 0, image.width, image.height).then(imageBitmap => {\n *         worker.postMessage({\n *           action: 'imageLoaded',\n *           image: imageBitmap,\n *           src: event.data.src\n *         }, [imageBitmap]);\n *       });\n *     });\n *     image.src = event.data.src;\n *   }\n * });\n * ```\n *\n * @param {VectorLayer|VectorTileLayer} olLayer OpenLayers layer to\n * apply the style to. In addition to the style, the layer will get two\n * properties: `mapbox-source` will be the `id` of the `glStyle`'s source used\n * for the layer, and `mapbox-layers` will be an array of the `id`s of the\n * `glStyle`'s layers.\n * @param {string|Object} glStyle Mapbox/MapLibre Style object.\n * @param {string|Array<string>} sourceOrLayers `source` key or an array of layer `id`s\n * from the Mapbox/MapLibre Style object. When a `source` key is provided, all layers for\n * the specified source will be included in the style function. When layer `id`s\n * are provided, they must be from layers that use the same source.\n * @param {Array<number>} resolutions\n * Resolutions for mapping resolution to zoom level.\n * @param {Object} spriteData Sprite data from the url specified in\n * the Mapbox/MapLibre Style object's `sprite` property. Only required if a `sprite`\n * property is specified in the Mapbox/MapLibre Style object.\n * @param {SpriteImageUrl} spriteImageUrl Sprite image url for the sprite\n * specified in the Mapbox/MapLibre Style object's `sprite` property. Only required if a\n * `sprite` property is specified in the Mapbox/MapLibre Style object. If multiple `sprite`s\n * are defined in the style object, this has to be an object with the sprite id as key and the\n * sprite image URL as value.\n * @param {function(Array<string>, string=):Array<string>} getFonts Function that\n * receives a font stack and the url template from the GL style's `metadata['ol:webfonts']`\n * property (if set) as arguments, and returns a (modified) font stack that\n * is available. Font names are the names used in the Mapbox/MapLibre Style object. If\n * not provided, the font stack will be used as-is. This function can also be\n * used for loading web fonts.\n * @param {function(VectorLayer|VectorTileLayer, string):HTMLImageElement|HTMLCanvasElement|string|undefined} [getImage]\n * Function that returns an image or a URL for an image name. If the result is an HTMLImageElement, it must already be\n * loaded. The layer can be used to call layer.changed() when the loading and processing of the image has finished.\n * This function can be used for icons not in the sprite or to override sprite icons.\n * @return {StyleFunction} Style function for use in\n * `ol.layer.Vector` or `ol.layer.VectorTile`.\n */\nexport function stylefunction(\n  olLayer,\n  glStyle,\n  sourceOrLayers,\n  resolutions = defaultResolutions,\n  spriteData = undefined,\n  spriteImageUrl = undefined,\n  getFonts = undefined,\n  getImage = undefined,\n) {\n  if (typeof glStyle == 'string') {\n    glStyle = JSON.parse(glStyle);\n  }\n  if (glStyle.version != 8) {\n    throw new Error('glStyle version 8 required.');\n  }\n  styleFunctionArgs[getStyleFunctionKey(glStyle, olLayer)] =\n    Array.from(arguments);\n\n  /** @type {SpriteImages} */\n  const spriteImages = {};\n\n  if (\n    typeof spriteImageUrl === 'string' ||\n    spriteImageUrl instanceof Request ||\n    spriteImageUrl instanceof Response ||\n    spriteImageUrl instanceof Promise\n  ) {\n    spriteImageUrl = {'default': spriteImageUrl};\n  }\n\n  for (const prefix in spriteImageUrl) {\n    const imageUrl = spriteImageUrl[prefix];\n    toPromise(() => imageUrl).then(async (imageUrl) => {\n      let blobUrl;\n      if (typeof Image !== 'undefined') {\n        const img = new Image();\n        if (typeof imageUrl === 'string') {\n          img.crossOrigin = 'anonymous';\n          img.src = imageUrl;\n        } else {\n          let response;\n          if (imageUrl instanceof Request) {\n            response = await fetch(imageUrl);\n          } else if (imageUrl instanceof Response) {\n            response = imageUrl;\n          }\n          const blob = await response.blob();\n          blobUrl = URL.createObjectURL(blob);\n          img.src = blobUrl;\n        }\n        img.addEventListener('load', function load() {\n          img.removeEventListener('load', load);\n          spriteImages[prefix] = {\n            image: img,\n            size: [img.width, img.height],\n          };\n          olLayer.changed();\n          if (blobUrl) {\n            URL.revokeObjectURL(blobUrl);\n          }\n        });\n        img.addEventListener('error', function error() {\n          URL.revokeObjectURL(blobUrl);\n          img.removeEventListener('error', error);\n        });\n      } else if (\n        typeof WorkerGlobalScope !== 'undefined' &&\n        self instanceof WorkerGlobalScope // eslint-disable-line\n      ) {\n        const worker = /** @type {*} */ (self);\n        // Main thread needs to handle 'loadImage' and dispatch 'imageLoaded'\n        worker.postMessage({\n          action: 'loadImage',\n          src: imageUrl,\n        });\n        worker.addEventListener('message', function handler(event) {\n          if (\n            event.data.action === 'imageLoaded' &&\n            event.data.src === imageUrl\n          ) {\n            spriteImages[prefix] = {\n              image: event.data.image,\n              size: [event.data.image.width, event.data.image.height],\n            };\n          }\n        });\n      }\n    });\n  }\n\n  const allLayers = derefLayers(glStyle.layers);\n\n  const layersBySourceLayer = {};\n  const mapboxLayers = [];\n\n  const iconImageCache = {};\n  const patternCache = {};\n  const functionCache = getFunctionCache(glStyle);\n  const filterCache = getFilterCache(glStyle);\n\n  let mapboxSource;\n  for (let i = 0, ii = allLayers.length; i < ii; ++i) {\n    const layer = allLayers[i];\n    const layerId = layer.id;\n    if (\n      (typeof sourceOrLayers == 'string' && layer.source == sourceOrLayers) ||\n      (Array.isArray(sourceOrLayers) && sourceOrLayers.indexOf(layerId) !== -1)\n    ) {\n      const sourceLayer = layer['source-layer'];\n      if (!mapboxSource) {\n        mapboxSource = layer.source;\n        const source = glStyle.sources[mapboxSource];\n        if (!source) {\n          throw new Error(`Source \"${mapboxSource}\" is not defined`);\n        }\n        const type = source.type;\n        if (type !== 'vector' && type !== 'geojson') {\n          throw new Error(\n            `Source \"${mapboxSource}\" is not of type \"vector\" or \"geojson\", but \"${type}\"`,\n          );\n        }\n      } else if (layer.source !== mapboxSource) {\n        throw new Error(\n          `Layer \"${layerId}\" does not use source \"${mapboxSource}`,\n        );\n      }\n      let layers = layersBySourceLayer[sourceLayer];\n      if (!layers) {\n        layers = [];\n        layersBySourceLayer[sourceLayer] = layers;\n      }\n      layers.push({\n        layer: layer,\n        index: i,\n      });\n      mapboxLayers.push(layerId);\n    }\n  }\n\n  const textHalo = new Stroke();\n  const textColor = new Fill();\n\n  const styles = [];\n\n  /**\n   * @param {import(\"ol/Feature\").default|import(\"ol/render/Feature\").default} feature Feature.\n   * @param {number} resolution Resolution.\n   * @param {string} [onlyLayer] Calculate style for this layer only.\n   * @return {Array<import(\"ol/style/Style\").default>} Style.\n   */\n  const styleFunction = function (feature, resolution, onlyLayer) {\n    const layerProperty =\n      //@ts-ignore\n      olLayer.getSource?.()?.format_?.layerName_ ?? 'mvt:layer';\n    const properties = feature.getProperties();\n    const layers = layersBySourceLayer[properties[layerProperty]];\n    if (!layers) {\n      return undefined;\n    }\n    let zoom = resolutions.indexOf(resolution);\n    if (zoom == -1) {\n      zoom = getZoomForResolution(resolution, resolutions);\n    }\n    cameraObj.zoom = zoom;\n    cameraObj.distanceFromCenter = 0;\n    const featureGeometry = feature.getGeometry();\n    const type = types[featureGeometry.getType()];\n    const map = olLayer.get('map');\n    if (map && map instanceof Map && type === 1) {\n      const size = map.getSize();\n      if (size) {\n        const mapCenter = map.getView().getCenter();\n        const featureCenter = getCenter(featureGeometry.getExtent());\n        cameraObj.distanceFromCenter =\n          distance(mapCenter, featureCenter) / resolution / size[1];\n      }\n    }\n    const f = {\n      id: feature.getId(),\n      properties: properties,\n      type: type,\n    };\n    const featureState = olLayer.get('mapbox-featurestate')[feature.getId()];\n    let stylesLength = -1;\n    let featureBelongsToLayer;\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n      const layerData = layers[i];\n      const layer = layerData.layer;\n      const layerId = layer.id;\n      if (onlyLayer !== undefined && onlyLayer !== layerId) {\n        continue;\n      }\n\n      const layout = layer.layout || emptyObj;\n      const paint = layer.paint || emptyObj;\n      if (\n        layout.visibility === 'none' ||\n        ('minzoom' in layer && zoom < layer.minzoom) ||\n        ('maxzoom' in layer && zoom >= layer.maxzoom)\n      ) {\n        continue;\n      }\n      const filter = layer.filter;\n      if (!filter || evaluateFilter(layerId, filter, f, filterCache)) {\n        featureBelongsToLayer = layer;\n        let color, opacity, fill, stroke, strokeColor, style;\n        const index = layerData.index;\n        if (\n          type == 3 &&\n          (layer.type == 'fill' || layer.type == 'fill-extrusion')\n        ) {\n          opacity = getValue(\n            layer,\n            'paint',\n            layer.type + '-opacity',\n            f,\n            functionCache,\n            featureState,\n          );\n          if (layer.type + '-pattern' in paint) {\n            const fillIcon = getValue(\n              layer,\n              'paint',\n              layer.type + '-pattern',\n              f,\n              functionCache,\n              featureState,\n            );\n            if (fillIcon) {\n              const icon =\n                typeof fillIcon === 'string'\n                  ? fromTemplate(fillIcon, properties)\n                  : fillIcon.toString();\n              const spriteImage = getSpriteImageForIcon(icon, spriteImages);\n              if (spriteData && spriteData[icon] && spriteImage) {\n                ++stylesLength;\n                style = styles[stylesLength];\n                if (\n                  !style ||\n                  !style.getFill() ||\n                  style.getStroke() ||\n                  style.getText()\n                ) {\n                  style = new Style({\n                    fill: new Fill(),\n                  });\n                  styles[stylesLength] = style;\n                }\n                fill = style.getFill();\n                style.setZIndex(index);\n                const icon_cache_key = icon + '.' + opacity;\n                let pattern = patternCache[icon_cache_key];\n                if (!pattern) {\n                  const spriteImageData = spriteData[icon];\n                  const canvas = createCanvas(\n                    spriteImageData.width,\n                    spriteImageData.height,\n                  );\n                  const ctx = /** @type {CanvasRenderingContext2D} */ (\n                    canvas.getContext('2d')\n                  );\n                  ctx.globalAlpha = opacity;\n                  ctx.drawImage(\n                    spriteImage.image,\n                    spriteImageData.x,\n                    spriteImageData.y,\n                    spriteImageData.width,\n                    spriteImageData.height,\n                    0,\n                    0,\n                    spriteImageData.width,\n                    spriteImageData.height,\n                  );\n                  pattern = ctx.createPattern(canvas, 'repeat');\n                  patternCache[icon_cache_key] = pattern;\n                }\n                fill.setColor(pattern);\n              }\n            }\n          } else {\n            color = colorWithOpacity(\n              getValue(\n                layer,\n                'paint',\n                layer.type + '-color',\n                f,\n                functionCache,\n                featureState,\n              ),\n              opacity,\n            );\n            if (layer.type + '-outline-color' in paint) {\n              strokeColor = colorWithOpacity(\n                getValue(\n                  layer,\n                  'paint',\n                  layer.type + '-outline-color',\n                  f,\n                  functionCache,\n                  featureState,\n                ),\n                opacity,\n              );\n            }\n            if (!strokeColor) {\n              strokeColor = color;\n            }\n            if (color || strokeColor) {\n              ++stylesLength;\n              style = styles[stylesLength];\n              if (\n                !style ||\n                (color && !style.getFill()) ||\n                (!color && style.getFill()) ||\n                (strokeColor && !style.getStroke()) ||\n                (!strokeColor && style.getStroke()) ||\n                style.getText()\n              ) {\n                style = new Style({\n                  fill: color ? new Fill() : undefined,\n                  stroke: strokeColor ? new Stroke() : undefined,\n                });\n                styles[stylesLength] = style;\n              }\n              if (color) {\n                fill = style.getFill();\n                fill.setColor(color);\n              }\n              if (strokeColor) {\n                stroke = style.getStroke();\n                stroke.setColor(strokeColor);\n                stroke.setWidth(0.5);\n              }\n              style.setZIndex(index);\n            }\n          }\n        }\n        if (type != 1 && layer.type == 'line') {\n          if (!('line-pattern' in paint)) {\n            color = colorWithOpacity(\n              getValue(\n                layer,\n                'paint',\n                'line-color',\n                f,\n                functionCache,\n                featureState,\n              ),\n              getValue(\n                layer,\n                'paint',\n                'line-opacity',\n                f,\n                functionCache,\n                featureState,\n              ),\n            );\n          } else {\n            color = undefined;\n          }\n          const width = getValue(\n            layer,\n            'paint',\n            'line-width',\n            f,\n            functionCache,\n            featureState,\n          );\n          if (color && width > 0) {\n            ++stylesLength;\n            style = styles[stylesLength];\n            if (\n              !style ||\n              !style.getStroke() ||\n              style.getFill() ||\n              style.getText()\n            ) {\n              style = new Style({\n                stroke: new Stroke(),\n              });\n              styles[stylesLength] = style;\n            }\n            stroke = style.getStroke();\n            stroke.setLineCap(\n              getValue(\n                layer,\n                'layout',\n                'line-cap',\n                f,\n                functionCache,\n                featureState,\n              ),\n            );\n            stroke.setLineJoin(\n              getValue(\n                layer,\n                'layout',\n                'line-join',\n                f,\n                functionCache,\n                featureState,\n              ),\n            );\n            stroke.setMiterLimit(\n              getValue(\n                layer,\n                'layout',\n                'line-miter-limit',\n                f,\n                functionCache,\n                featureState,\n              ),\n            );\n            stroke.setColor(color);\n            stroke.setWidth(width);\n            stroke.setLineDash(\n              paint['line-dasharray']\n                ? getValue(\n                    layer,\n                    'paint',\n                    'line-dasharray',\n                    f,\n                    functionCache,\n                    featureState,\n                  ).map(function (x) {\n                    return x * width;\n                  })\n                : null,\n            );\n            style.setZIndex(index);\n          }\n        }\n\n        let hasImage = false;\n        let text = null;\n        let placementAngle = 0;\n        let icon, iconImg, skipLabel;\n        if ((type == 1 || type == 2) && 'icon-image' in layout) {\n          const iconImage = getValue(\n            layer,\n            'layout',\n            'icon-image',\n            f,\n            functionCache,\n            featureState,\n          );\n          if (iconImage) {\n            icon =\n              typeof iconImage === 'string'\n                ? fromTemplate(iconImage, properties)\n                : iconImage.toString();\n            let styleGeom = undefined;\n            const imageElement = getImage ? getImage(olLayer, icon) : undefined;\n            const spriteImage = getSpriteImageForIcon(icon, spriteImages);\n            if (\n              (spriteData && spriteData[icon] && spriteImage) ||\n              imageElement\n            ) {\n              const iconRotationAlignment = getValue(\n                layer,\n                'layout',\n                'icon-rotation-alignment',\n                f,\n                functionCache,\n                featureState,\n              );\n              if (type == 2) {\n                const geom = /** @type {*} */ (feature.getGeometry());\n                // ol package and ol-debug.js only\n                if (geom.getFlatMidpoint || geom.getFlatMidpoints) {\n                  const extent = geom.getExtent();\n                  const size = Math.sqrt(\n                    Math.max(\n                      Math.pow((extent[2] - extent[0]) / resolution, 2),\n                      Math.pow((extent[3] - extent[1]) / resolution, 2),\n                    ),\n                  );\n                  if (size > 150) {\n                    //FIXME Do not hard-code a size of 150\n                    const midpoint =\n                      geom.getType() === 'MultiLineString'\n                        ? geom.getFlatMidpoints()\n                        : geom.getFlatMidpoint();\n                    if (!renderFeature) {\n                      renderFeatureCoordinates = [NaN, NaN];\n                      renderFeature = new RenderFeature(\n                        'Point',\n                        renderFeatureCoordinates,\n                        [],\n                        2,\n                        {},\n                        undefined,\n                      );\n                    }\n                    styleGeom = renderFeature;\n                    renderFeatureCoordinates[0] = midpoint[0];\n                    renderFeatureCoordinates[1] = midpoint[1];\n                    const placement = getValue(\n                      layer,\n                      'layout',\n                      'symbol-placement',\n                      f,\n                      functionCache,\n                      featureState,\n                    );\n                    if (\n                      placement === 'line' &&\n                      iconRotationAlignment === 'map'\n                    ) {\n                      const stride = geom.getStride();\n                      const coordinates = geom.getFlatCoordinates();\n                      for (\n                        let i = 0, ii = coordinates.length - stride;\n                        i < ii;\n                        i += stride\n                      ) {\n                        const x1 = coordinates[i];\n                        const y1 = coordinates[i + 1];\n                        const x2 = coordinates[i + stride];\n                        const y2 = coordinates[i + stride + 1];\n                        const minX = Math.min(x1, x2);\n                        const maxX = Math.max(x1, x2);\n                        const xM = midpoint[0];\n                        const yM = midpoint[1];\n                        const dotProduct =\n                          (y2 - y1) * (xM - x1) - (x2 - x1) * (yM - y1);\n                        if (\n                          Math.abs(dotProduct) < 0.001 && //midpoint is aligned with the segment\n                          xM <= maxX &&\n                          xM >= minX //midpoint is on the segment and not outside it\n                        ) {\n                          placementAngle = Math.atan2(y1 - y2, x2 - x1);\n                          break;\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n              if (type !== 2 || styleGeom) {\n                const iconSize = getValue(\n                  layer,\n                  'layout',\n                  'icon-size',\n                  f,\n                  functionCache,\n                  featureState,\n                );\n                const iconColor =\n                  paint['icon-color'] !== undefined\n                    ? getValue(\n                        layer,\n                        'paint',\n                        'icon-color',\n                        f,\n                        functionCache,\n                        featureState,\n                      )\n                    : null;\n                if (!iconColor || iconColor.a !== 0) {\n                  const haloColor = getValue(\n                    layer,\n                    'paint',\n                    'icon-halo-color',\n                    f,\n                    functionCache,\n                    featureState,\n                  );\n                  const haloWidth = getValue(\n                    layer,\n                    'paint',\n                    'icon-halo-width',\n                    f,\n                    functionCache,\n                    featureState,\n                  );\n                  let iconCacheKey = `${icon}.${iconSize}.${haloWidth}.${haloColor}`;\n                  if (iconColor !== null) {\n                    iconCacheKey += `.${iconColor}`;\n                  }\n                  iconImg = iconImageCache[iconCacheKey];\n                  if (!iconImg) {\n                    const declutterMode = getDeclutterMode(\n                      layer,\n                      f,\n                      'icon',\n                      functionCache,\n                    );\n                    let displacement;\n                    if ('icon-offset' in layout) {\n                      displacement = getValue(\n                        layer,\n                        'layout',\n                        'icon-offset',\n                        f,\n                        functionCache,\n                        featureState,\n                      ).slice(0);\n                      displacement[0] *= iconSize;\n                      displacement[1] *= -iconSize;\n                    }\n                    let color = iconColor\n                      ? [\n                          iconColor.r * 255,\n                          iconColor.g * 255,\n                          iconColor.b * 255,\n                          iconColor.a,\n                        ]\n                      : undefined;\n                    if (imageElement) {\n                      const iconOptions = {\n                        color: color,\n                        rotateWithView: iconRotationAlignment === 'map',\n                        displacement: displacement,\n                        declutterMode: declutterMode,\n                        scale: iconSize,\n                      };\n                      if (typeof imageElement === 'string') {\n                        // it is a src URL\n                        iconOptions.src = imageElement;\n                      } else {\n                        iconOptions.img = imageElement;\n                        iconOptions.imgSize = [\n                          imageElement.width,\n                          imageElement.height,\n                        ];\n                      }\n                      iconImg = new Icon(iconOptions);\n                    } else {\n                      const spriteImageData = spriteData[icon];\n                      let img, size, offset;\n                      if (haloWidth) {\n                        if (spriteImageData.sdf) {\n                          img = drawIconHalo(\n                            drawSDF(\n                              spriteImage.image,\n                              spriteImageData,\n                              iconColor || [0, 0, 0, 1],\n                            ),\n                            {\n                              x: 0,\n                              y: 0,\n                              width: spriteImageData.width,\n                              height: spriteImageData.height,\n                              pixelRatio: spriteImageData.pixelRatio,\n                            },\n                            haloWidth,\n                            haloColor,\n                          );\n                          color = undefined; // do not tint haloed icons\n                        } else {\n                          img = drawIconHalo(\n                            spriteImage.image,\n                            spriteImageData,\n                            haloWidth,\n                            haloColor,\n                          );\n                        }\n                      } else {\n                        if (spriteImageData.sdf) {\n                          if (!spriteImage.unSDFed) {\n                            const spriteImageUnSDFed = drawSDF(\n                              spriteImage.image,\n                              {\n                                x: 0,\n                                y: 0,\n                                width: spriteImage.size[0],\n                                height: spriteImage.size[1],\n                              },\n                              {r: 1, g: 1, b: 1, a: 1},\n                            );\n                            spriteImage.image = spriteImageUnSDFed;\n                            spriteImage.unSDFed = true;\n                          }\n                        }\n                        img = spriteImage.image;\n                        size = [spriteImageData.width, spriteImageData.height];\n                        offset = [spriteImageData.x, spriteImageData.y];\n                      }\n                      iconImg = new Icon({\n                        color: color,\n                        img: img,\n                        // @ts-ignore\n                        imgSize: spriteImage.size,\n                        size: size,\n                        offset: offset,\n                        rotateWithView: iconRotationAlignment === 'map',\n                        scale: iconSize / spriteImageData.pixelRatio,\n                        displacement: displacement,\n                        declutterMode: declutterMode,\n                      });\n                    }\n                    iconImageCache[iconCacheKey] = iconImg;\n                  }\n                }\n                if (iconImg) {\n                  ++stylesLength;\n                  style = styles[stylesLength];\n                  if (\n                    !style ||\n                    !style.getImage() ||\n                    style.getFill() ||\n                    style.getStroke()\n                  ) {\n                    style = new Style();\n                    styles[stylesLength] = style;\n                  }\n                  style.setGeometry(styleGeom);\n                  iconImg.setRotation(\n                    placementAngle +\n                      deg2rad(\n                        getValue(\n                          layer,\n                          'layout',\n                          'icon-rotate',\n                          f,\n                          functionCache,\n                          featureState,\n                        ),\n                      ),\n                  );\n                  iconImg.setOpacity(\n                    getValue(\n                      layer,\n                      'paint',\n                      'icon-opacity',\n                      f,\n                      functionCache,\n                      featureState,\n                    ),\n                  );\n                  iconImg.setAnchor(\n                    anchor[\n                      getValue(\n                        layer,\n                        'layout',\n                        'icon-anchor',\n                        f,\n                        functionCache,\n                        featureState,\n                      )\n                    ],\n                  );\n                  style.setImage(iconImg);\n                  text = style.getText();\n                  style.setText(undefined);\n                  style.setZIndex(index);\n                  hasImage = true;\n                  skipLabel = false;\n                }\n              } else {\n                skipLabel = true;\n              }\n            }\n          }\n        }\n\n        if (type == 1 && layer.type === 'circle') {\n          ++stylesLength;\n          style = styles[stylesLength];\n          if (\n            !style ||\n            !style.getImage() ||\n            style.getFill() ||\n            style.getStroke()\n          ) {\n            style = new Style();\n            styles[stylesLength] = style;\n          }\n          const circleRadius =\n            'circle-radius' in paint\n              ? getValue(\n                  layer,\n                  'paint',\n                  'circle-radius',\n                  f,\n                  functionCache,\n                  featureState,\n                )\n              : 5;\n          const circleStrokeColor = colorWithOpacity(\n            getValue(\n              layer,\n              'paint',\n              'circle-stroke-color',\n              f,\n              functionCache,\n              featureState,\n            ),\n            getValue(\n              layer,\n              'paint',\n              'circle-stroke-opacity',\n              f,\n              functionCache,\n              featureState,\n            ),\n          );\n\n          const circleTranslate = getValue(\n            layer,\n            'paint',\n            'circle-translate',\n            f,\n            functionCache,\n            featureState,\n          );\n          const circleColor = colorWithOpacity(\n            getValue(\n              layer,\n              'paint',\n              'circle-color',\n              f,\n              functionCache,\n              featureState,\n            ),\n            getValue(\n              layer,\n              'paint',\n              'circle-opacity',\n              f,\n              functionCache,\n              featureState,\n            ),\n          );\n          const circleStrokeWidth = getValue(\n            layer,\n            'paint',\n            'circle-stroke-width',\n            f,\n            functionCache,\n            featureState,\n          );\n          const cache_key =\n            circleRadius +\n            '.' +\n            circleStrokeColor +\n            '.' +\n            circleColor +\n            '.' +\n            circleStrokeWidth +\n            '.' +\n            circleTranslate[0] +\n            '.' +\n            circleTranslate[1];\n\n          iconImg = iconImageCache[cache_key];\n          if (!iconImg) {\n            iconImg = new Circle({\n              radius: circleRadius,\n              displacement: [circleTranslate[0], -circleTranslate[1]],\n              stroke:\n                circleStrokeColor && circleStrokeWidth > 0\n                  ? new Stroke({\n                      width: circleStrokeWidth,\n                      color: circleStrokeColor,\n                    })\n                  : undefined,\n              fill: circleColor\n                ? new Fill({\n                    color: circleColor,\n                  })\n                : undefined,\n              declutterMode: 'none',\n            });\n            iconImageCache[cache_key] = iconImg;\n          }\n          style.setImage(iconImg);\n          text = style.getText();\n          style.setText(undefined);\n          style.setGeometry(undefined);\n          style.setZIndex(index);\n          hasImage = true;\n        }\n\n        let label, font, textLineHeight, textSize, letterSpacing, maxTextWidth;\n        if ('text-field' in layout) {\n          textSize = Math.round(\n            getValue(\n              layer,\n              'layout',\n              'text-size',\n              f,\n              functionCache,\n              featureState,\n            ),\n          );\n          const fontArray = getValue(\n            layer,\n            'layout',\n            'text-font',\n            f,\n            functionCache,\n            featureState,\n          );\n          textLineHeight = getValue(\n            layer,\n            'layout',\n            'text-line-height',\n            f,\n            functionCache,\n            featureState,\n          );\n          font = mb2css(\n            getFonts\n              ? getFonts(\n                  fontArray,\n                  glStyle.metadata\n                    ? glStyle.metadata['ol:webfonts']\n                    : undefined,\n                )\n              : fontArray,\n            textSize,\n            textLineHeight,\n          );\n          if (!font.includes('sans-serif')) {\n            font += ',sans-serif';\n          }\n          letterSpacing = getValue(\n            layer,\n            'layout',\n            'text-letter-spacing',\n            f,\n            functionCache,\n            featureState,\n          );\n          maxTextWidth = getValue(\n            layer,\n            'layout',\n            'text-max-width',\n            f,\n            functionCache,\n            featureState,\n          );\n          const textField = getValue(\n            layer,\n            'layout',\n            'text-field',\n            f,\n            functionCache,\n            featureState,\n          );\n          if (typeof textField === 'object' && textField.sections) {\n            if (textField.sections.length === 1) {\n              label = textField.toString();\n            } else {\n              label = textField.sections.reduce((acc, chunk, i) => {\n                const fonts = chunk.fontStack\n                  ? chunk.fontStack.split(',')\n                  : fontArray;\n                const chunkFont = mb2css(\n                  getFonts ? getFonts(fonts) : fonts,\n                  textSize * (chunk.scale || 1),\n                  textLineHeight,\n                );\n                let text = chunk.text;\n                if (text === '\\n') {\n                  acc.push('\\n', '');\n                  return acc;\n                }\n                if (type == 2) {\n                  acc.push(applyLetterSpacing(text, letterSpacing), chunkFont);\n                  return acc;\n                }\n                text = wrapText(\n                  text,\n                  chunkFont,\n                  maxTextWidth,\n                  letterSpacing,\n                ).split('\\n');\n                for (let i = 0, ii = text.length; i < ii; ++i) {\n                  if (i > 0) {\n                    acc.push('\\n', '');\n                  }\n                  acc.push(text[i], chunkFont);\n                }\n                return acc;\n              }, []);\n            }\n          } else {\n            label = fromTemplate(textField, properties).trim();\n          }\n          opacity = getValue(\n            layer,\n            'paint',\n            'text-opacity',\n            f,\n            functionCache,\n            featureState,\n          );\n        }\n        if (label && opacity && !skipLabel) {\n          if (!hasImage) {\n            ++stylesLength;\n            style = styles[stylesLength];\n            if (\n              !style ||\n              !style.getText() ||\n              style.getFill() ||\n              style.getStroke()\n            ) {\n              style = new Style();\n              styles[stylesLength] = style;\n            }\n            style.setImage(undefined);\n            style.setGeometry(undefined);\n          }\n          const declutterMode = getDeclutterMode(\n            layer,\n            f,\n            'text',\n            functionCache,\n          );\n          if (!style.getText()) {\n            style.setText(text);\n          }\n          text = style.getText();\n          if (\n            !text ||\n            ('getDeclutterMode' in text &&\n              text.getDeclutterMode() !== declutterMode)\n          ) {\n            text = new Text({\n              padding: [2, 2, 2, 2],\n              // @ts-ignore\n              declutterMode: declutterMode,\n            });\n            style.setText(text);\n          }\n          const textTransform = getValue(\n            layer,\n            'layout',\n            'text-transform',\n            f,\n            functionCache,\n            featureState,\n          );\n          if (textTransform == 'uppercase') {\n            label = Array.isArray(label)\n              ? label.map((t, i) => (i % 2 ? t : t.toUpperCase()))\n              : label.toUpperCase();\n          } else if (textTransform == 'lowercase') {\n            label = Array.isArray(label)\n              ? label.map((t, i) => (i % 2 ? t : t.toLowerCase()))\n              : label.toLowerCase();\n          }\n          const wrappedLabel = Array.isArray(label)\n            ? label\n            : type == 2\n              ? applyLetterSpacing(label, letterSpacing)\n              : wrapText(label, font, maxTextWidth, letterSpacing);\n          text.setText(wrappedLabel);\n          text.setFont(font);\n          text.setRotation(\n            deg2rad(\n              getValue(\n                layer,\n                'layout',\n                'text-rotate',\n                f,\n                functionCache,\n                featureState,\n              ),\n            ),\n          );\n          if (typeof text.setKeepUpright === 'function') {\n            const keepUpright = getValue(\n              layer,\n              'layout',\n              'text-keep-upright',\n              f,\n              functionCache,\n              featureState,\n            );\n            text.setKeepUpright(keepUpright);\n          }\n          const textAnchor = getValue(\n            layer,\n            'layout',\n            'text-anchor',\n            f,\n            functionCache,\n            featureState,\n          );\n          const placement =\n            hasImage || type == 1\n              ? 'point'\n              : getValue(\n                  layer,\n                  'layout',\n                  'symbol-placement',\n                  f,\n                  functionCache,\n                  featureState,\n                );\n          let textAlign;\n          if (placement === 'line-center') {\n            text.setPlacement('line');\n            textAlign = 'center';\n          } else {\n            text.setPlacement(placement);\n          }\n          if (placement === 'line' && typeof text.setRepeat === 'function') {\n            const symbolSpacing = getValue(\n              layer,\n              'layout',\n              'symbol-spacing',\n              f,\n              functionCache,\n              featureState,\n            );\n            text.setRepeat(symbolSpacing * 2);\n          }\n          text.setOverflow(placement === 'point');\n          let textHaloWidth = getValue(\n            layer,\n            'paint',\n            'text-halo-width',\n            f,\n            functionCache,\n            featureState,\n          );\n          const textOffset = getValue(\n            layer,\n            'layout',\n            'text-offset',\n            f,\n            functionCache,\n            featureState,\n          );\n          const textTranslate = getValue(\n            layer,\n            'paint',\n            'text-translate',\n            f,\n            functionCache,\n            featureState,\n          );\n          // Text offset has to take halo width and line height into account\n          let vOffset = 0;\n          let hOffset = 0;\n          if (placement == 'point') {\n            textAlign = 'center';\n            if (textAnchor.indexOf('left') !== -1) {\n              textAlign = 'left';\n              hOffset = textHaloWidth;\n            } else if (textAnchor.indexOf('right') !== -1) {\n              textAlign = 'right';\n              hOffset = -textHaloWidth;\n            }\n            const textRotationAlignment = getValue(\n              layer,\n              'layout',\n              'text-rotation-alignment',\n              f,\n              functionCache,\n              featureState,\n            );\n            text.setRotateWithView(textRotationAlignment == 'map');\n          } else {\n            text.setMaxAngle(\n              (deg2rad(\n                getValue(\n                  layer,\n                  'layout',\n                  'text-max-angle',\n                  f,\n                  functionCache,\n                  featureState,\n                ),\n              ) *\n                label.length) /\n                wrappedLabel.length,\n            );\n            text.setRotateWithView(false);\n          }\n          text.setTextAlign(textAlign);\n          let textBaseline = 'middle';\n          if (textAnchor.indexOf('bottom') == 0) {\n            textBaseline = 'bottom';\n            vOffset = -textHaloWidth - 0.5 * (textLineHeight - 1) * textSize;\n          } else if (textAnchor.indexOf('top') == 0) {\n            textBaseline = 'top';\n            vOffset = textHaloWidth + 0.5 * (textLineHeight - 1) * textSize;\n          }\n          text.setTextBaseline(textBaseline);\n          const textJustify = getValue(\n            layer,\n            'layout',\n            'text-justify',\n            f,\n            functionCache,\n            featureState,\n          );\n          text.setJustify(textJustify === 'auto' ? undefined : textJustify);\n          text.setOffsetX(\n            textOffset[0] * textSize + hOffset + textTranslate[0],\n          );\n          text.setOffsetY(\n            textOffset[1] * textSize + vOffset + textTranslate[1],\n          );\n          textColor.setColor(\n            colorWithOpacity(\n              getValue(\n                layer,\n                'paint',\n                'text-color',\n                f,\n                functionCache,\n                featureState,\n              ),\n              opacity,\n            ),\n          );\n          text.setFill(textColor);\n          const haloColor = colorWithOpacity(\n            getValue(\n              layer,\n              'paint',\n              'text-halo-color',\n              f,\n              functionCache,\n              featureState,\n            ),\n            opacity,\n          );\n          if (haloColor && textHaloWidth > 0) {\n            textHalo.setColor(haloColor);\n            // spec here : https://docs.mapbox.com/mapbox-gl-js/style-spec/#paint-symbol-text-halo-width\n            // Halo width must be doubled because it is applied around the center of the text outline\n            textHaloWidth *= 2;\n            // 1/4 of text size (spec) x 2\n            const halfTextSize = 0.5 * textSize;\n            textHalo.setWidth(\n              textHaloWidth <= halfTextSize ? textHaloWidth : halfTextSize,\n            );\n            text.setStroke(textHalo);\n          } else {\n            text.setStroke(undefined);\n          }\n          const textPadding = getValue(\n            layer,\n            'layout',\n            'text-padding',\n            f,\n            functionCache,\n            featureState,\n          );\n          const padding = text.getPadding();\n          if (textPadding !== padding[0]) {\n            padding[0] = textPadding;\n            padding[1] = textPadding;\n            padding[2] = textPadding;\n            padding[3] = textPadding;\n          }\n          style.setZIndex(index);\n        }\n      }\n    }\n\n    if (stylesLength > -1) {\n      styles.length = stylesLength + 1;\n      if (recordLayer) {\n        if ('set' in feature) {\n          // ol/Feature\n          feature.set('mapbox-layer', featureBelongsToLayer);\n        } else {\n          // ol/render/Feature\n          feature.getProperties()['mapbox-layer'] = featureBelongsToLayer;\n        }\n      }\n      return styles;\n    }\n    return undefined;\n  };\n\n  olLayer.setStyle(styleFunction);\n  olLayer.set('mapbox-layers', mapboxLayers);\n  olLayer.set('mapbox-source', mapboxSource);\n  olLayer.set('mapbox-featurestate', olLayer.get('mapbox-featurestate') || {});\n  return styleFunction;\n}\n\n/**\n * Get the the style for a specific Mapbox layer only. This can be useful for creating a legend.\n * @param {import(\"ol/Feature\").default|import(\"ol/render/Feature\").default} feature OpenLayers feature.\n * @param {number} resolution View resolution.\n * @param {import(\"ol/layer\").Vector|import(\"ol/layer\").VectorTile} olLayer OpenLayers layer.\n * @param {string} layerId Id of the Mapbox layer to get the style for\n * @return {Array<import(\"ol/style\").Style>} Styles for the provided Mapbox layer.\n */\nexport function getStyleForLayer(feature, resolution, olLayer, layerId) {\n  const evaluateStyle = olLayer.getStyleFunction();\n  if (evaluateStyle.length === 3) {\n    // @ts-ignore\n    return evaluateStyle(feature, resolution, layerId);\n  }\n  return undefined;\n}\n\nexport {\n  colorWithOpacity as _colorWithOpacity,\n  evaluateFilter as _evaluateFilter,\n  fromTemplate as _fromTemplate,\n  getValue as _getValue,\n};\n","/**\n * @module ol/Feature\n */\nimport BaseObject from './Object.js';\nimport {assert} from './asserts.js';\nimport EventType from './events/EventType.js';\nimport {listen, unlistenByKey} from './events.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:geometry', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types\n *     |'change:geometry', Return>} FeatureOnSignature\n */\n\n/***\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n * @typedef {Object<string, *> & { geometry?: Geometry }} ObjectWithGeometry\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object~BaseObject} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature.js';\n * import Polygon from 'ol/geom/Polygon.js';\n * import Point from 'ol/geom/Point.js';\n *\n * const feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon',\n * });\n *\n * // get the polygon geometry\n * const poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * const point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n */\nclass Feature extends BaseObject {\n  /**\n   * @param {Geometry|ObjectWithGeometry<Geometry>} [geometryOrProperties]\n   *     You may pass a Geometry object directly, or an object literal containing\n   *     properties. If you pass an object literal, you may include a Geometry\n   *     associated with a `geometry` key.\n   */\n  constructor(geometryOrProperties) {\n    super();\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {FeatureOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n\n    if (geometryOrProperties) {\n      if (\n        typeof (\n          /** @type {?} */ (geometryOrProperties).getSimplifiedGeometry\n        ) === 'function'\n      ) {\n        const geometry = /** @type {Geometry} */ (geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        const properties = geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature<Geometry>} The clone.\n   * @api\n   */\n  clone() {\n    const clone = /** @type {Feature<Geometry>} */ (\n      new Feature(this.hasProperties() ? this.getProperties() : null)\n    );\n    clone.setGeometryName(this.getGeometryName());\n    const geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(/** @type {Geometry} */ (geometry.clone()));\n    }\n    const style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  }\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {Geometry|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  getGeometry() {\n    return /** @type {Geometry|undefined} */ (this.get(this.geometryName_));\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  getGeometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike|undefined} The feature style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChanged_() {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    const geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(\n        geometry,\n        EventType.CHANGE,\n        this.handleGeometryChange_,\n        this,\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {Geometry|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  setGeometry(geometry) {\n    this.set(this.geometryName_, geometry);\n  }\n\n  /**\n   * Set the style for the feature to override the layer style.  This can be a\n   * single style object, an array of styles, or a function that takes a\n   * resolution and returns an array of styles. To unset the feature style, call\n   * `setStyle()` without arguments or a falsey value.\n   * @param {import(\"./style/Style.js\").StyleLike} [style] Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setStyle(style) {\n    this.style_ = style;\n    this.styleFunction_ = !style ? undefined : createStyleFunction(style);\n    this.changed();\n  }\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setId(id) {\n    this.id_ = id;\n    this.changed();\n  }\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  setGeometryName(name) {\n    this.removeChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.geometryName_ = name;\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.handleGeometryChanged_();\n  }\n}\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  }\n  /**\n   * @type {Array<import(\"./style/Style.js\").default>}\n   */\n  let styles;\n  if (Array.isArray(obj)) {\n    styles = obj;\n  } else {\n    assert(\n      typeof (/** @type {?} */ (obj).getZIndex) === 'function',\n      'Expected an `ol/style/Style` or an array of `ol/style/Style.js`',\n    );\n    const style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n    styles = [style];\n  }\n  return function () {\n    return styles;\n  };\n}\nexport default Feature;\n","/**\n * @module ol/geom/flat/length\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n","/**\n * @module ol/geom/LineString\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineString} from './flat/intersectsextent.js';\nimport {lineStringLength} from './flat/length.js';\nimport {forEach as forEachSegment} from './flat/segments.js';\nimport {douglasPeucker} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nclass LineString extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.flatMidpoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatMidpointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Append the passed coordinate to the coordinates of the linestring.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @api\n   */\n  appendCoordinate(coordinate) {\n    extend(this.flatCoordinates, coordinate);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LineString} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const lineString = new LineString(\n      this.flatCoordinates.slice(),\n      this.layout,\n    );\n    lineString.applyProperties(this);\n    return lineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * Iterate over each segment, calling the provided callback.\n   * If the callback returns a truthy value the function returns that\n   * value immediately. Otherwise the function returns `false`.\n   *\n   * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n   *     called for each segment. The function will receive two arguments, the start and end coordinates of the segment.\n   * @return {T|boolean} Value.\n   * @template T,S\n   * @api\n   */\n  forEachSegment(callback) {\n    return forEachSegment(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      callback,\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate) {\n    if (this.layout != 'XYM' && this.layout != 'XYZM') {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    return lineStringCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      m,\n      extrapolate,\n    );\n  }\n\n  /**\n   * Return the coordinates of the linestring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * Return the coordinate at the provided fraction along the linestring.\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\n   * linestring and 1 is the end.\n   * @param {number} fraction Fraction.\n   * @param {import(\"../coordinate.js\").Coordinate} [dest] Optional coordinate whose values will\n   *     be modified. If not provided, a new coordinate will be returned.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n   * @api\n   */\n  getCoordinateAt(fraction, dest) {\n    return interpolatePoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      fraction,\n      dest,\n      this.stride,\n    );\n  }\n\n  /**\n   * Return the length of the linestring on projected plane.\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  getLength() {\n    return lineStringLength(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (this.flatMidpointRevision_ != this.getRevision()) {\n      this.flatMidpoint_ = this.getCoordinateAt(\n        0.5,\n        this.flatMidpoint_ ?? undefined,\n      );\n      this.flatMidpointRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.flatMidpoint_);\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} Simplified LineString.\n   * @protected\n   * @override\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n    );\n    return new LineString(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'LineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return intersectsLineString(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent,\n      this.getExtent(),\n    );\n  }\n\n  /**\n   * Set the coordinates of the linestring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default LineString;\n","/**\n * @module ol/geom/MultiPoint\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport {squaredDistance as squaredDx} from '../math.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {inflateCoordinates} from './flat/inflate.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nclass MultiPoint extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    if (layout && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Append the passed point to this multipoint.\n   * @param {Point} point Point.\n   * @api\n   */\n  appendPoint(point) {\n    extend(this.flatCoordinates, point.getFlatCoordinates());\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPoint} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const multiPoint = new MultiPoint(\n      this.flatCoordinates.slice(),\n      this.layout,\n    );\n    multiPoint.applyProperties(this);\n    return multiPoint;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const squaredDistance = squaredDx(\n        x,\n        y,\n        flatCoordinates[i],\n        flatCoordinates[i + 1],\n      );\n      if (squaredDistance < minSquaredDistance) {\n        minSquaredDistance = squaredDistance;\n        for (let j = 0; j < stride; ++j) {\n          closestPoint[j] = flatCoordinates[i + j];\n        }\n        closestPoint.length = stride;\n      }\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinates of the multipoint.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * Return the point at the specified index.\n   * @param {number} index Index.\n   * @return {Point} Point.\n   * @api\n   */\n  getPoint(index) {\n    const n = this.flatCoordinates.length / this.stride;\n    if (index < 0 || n <= index) {\n      return null;\n    }\n    return new Point(\n      this.flatCoordinates.slice(\n        index * this.stride,\n        (index + 1) * this.stride,\n      ),\n      this.layout,\n    );\n  }\n\n  /**\n   * Return the points of this multipoint.\n   * @return {Array<Point>} Points.\n   * @api\n   */\n  getPoints() {\n    const flatCoordinates = this.flatCoordinates;\n    const layout = this.layout;\n    const stride = this.stride;\n    /** @type {Array<Point>} */\n    const points = [];\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const point = new Point(flatCoordinates.slice(i, i + stride), layout);\n      points.push(point);\n    }\n    return points;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'MultiPoint';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      if (containsXY(extent, x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the multipoint.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default MultiPoint;\n","/**\n * @module ol/geom/MultiLineString\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport LineString from './LineString.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {\n  interpolatePoint,\n  lineStringsCoordinateAtM,\n} from './flat/interpolate.js';\nimport {intersectsLineStringArray} from './flat/intersectsextent.js';\nimport {lineStringLength} from './flat/length.js';\nimport {douglasPeuckerArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nclass MultiLineString extends SimpleGeometry {\n  /**\n   * @param {Array<Array<import(\"../coordinate.js\").Coordinate>|LineString>|Array<number>} coordinates\n   *     Coordinates or LineString geometries. (For internal use, flat coordinates in\n   *     combination with `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Flat coordinate ends for internal use.\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (Array.isArray(coordinates[0])) {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    } else if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n      this.ends_ = ends;\n    } else {\n      const lineStrings = /** @type {Array<LineString>} */ (coordinates);\n      /** @type {Array<number>} */\n      const flatCoordinates = [];\n      const ends = [];\n      for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n        const lineString = lineStrings[i];\n        extend(flatCoordinates, lineString.getFlatCoordinates());\n        ends.push(flatCoordinates.length);\n      }\n      const layout =\n        lineStrings.length === 0\n          ? this.getLayout()\n          : lineStrings[0].getLayout();\n      this.setFlatCoordinates(layout, flatCoordinates);\n      this.ends_ = ends;\n    }\n  }\n\n  /**\n   * Append the passed linestring to the multilinestring.\n   * @param {LineString} lineString LineString.\n   * @api\n   */\n  appendLineString(lineString) {\n    extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiLineString} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const multiLineString = new MultiLineString(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice(),\n    );\n    multiLineString.applyProperties(this);\n    return multiLineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * `interpolate` controls interpolation between consecutive LineStrings\n   * within the MultiLineString. If `interpolate` is `true` the coordinates\n   * will be linearly interpolated between the last coordinate of one LineString\n   * and the first coordinate of the next LineString.  If `interpolate` is\n   * `false` then the function will return `null` for Ms falling between\n   * LineStrings.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @param {boolean} [interpolate] Interpolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate, interpolate) {\n    if (\n      (this.layout != 'XYM' && this.layout != 'XYZM') ||\n      this.flatCoordinates.length === 0\n    ) {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    interpolate = interpolate !== undefined ? interpolate : false;\n    return lineStringsCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      m,\n      extrapolate,\n      interpolate,\n    );\n  }\n\n  /**\n   * Return the coordinates of the multilinestring.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates() {\n    return inflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n    );\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Return the linestring at the specified index.\n   * @param {number} index Index.\n   * @return {LineString} LineString.\n   * @api\n   */\n  getLineString(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LineString(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index],\n      ),\n      this.layout,\n    );\n  }\n\n  /**\n   * Return the linestrings of this multilinestring.\n   * @return {Array<LineString>} LineStrings.\n   * @api\n   */\n  getLineStrings() {\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const layout = this.layout;\n    /** @type {Array<LineString>} */\n    const lineStrings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const lineString = new LineString(\n        flatCoordinates.slice(offset, end),\n        layout,\n      );\n      lineStrings.push(lineString);\n      offset = end;\n    }\n    return lineStrings;\n  }\n\n  /**\n   * Return the sum of all line string lengths\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  getLength() {\n    const ends = this.ends_;\n    let start = 0;\n    let length = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      length += lineStringLength(\n        this.flatCoordinates,\n        start,\n        ends[i],\n        this.stride,\n      );\n      start = ends[i];\n    }\n    return length;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    /** @type {Array<number>} */\n    const midpoints = [];\n    const flatCoordinates = this.flatCoordinates;\n    let offset = 0;\n    const ends = this.ends_;\n    const stride = this.stride;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const midpoint = interpolatePoint(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        0.5,\n      );\n      extend(midpoints, midpoint);\n      offset = end;\n    }\n    return midpoints;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiLineString} Simplified MultiLineString.\n   * @protected\n   * @override\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = douglasPeuckerArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds,\n    );\n    return new MultiLineString(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'MultiLineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return intersectsLineStringArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * Set the coordinates of the multilinestring.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_,\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default MultiLineString;\n","/**\n * @module ol/geom/MultiPolygon\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport MultiPoint from './MultiPoint.js';\nimport Polygon from './Polygon.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {linearRingss as linearRingssArea} from './flat/area.js';\nimport {linearRingss as linearRingssCenter} from './flat/center.js';\nimport {\n  assignClosestMultiArrayPoint,\n  multiArrayMaxSquaredDelta,\n} from './flat/closest.js';\nimport {linearRingssContainsXY} from './flat/contains.js';\nimport {deflateMultiCoordinatesArray} from './flat/deflate.js';\nimport {inflateMultiCoordinatesArray} from './flat/inflate.js';\nimport {getInteriorPointsOfMultiArray} from './flat/interiorpoint.js';\nimport {intersectsLinearRingMultiArray} from './flat/intersectsextent.js';\nimport {\n  linearRingssAreOriented,\n  orientLinearRingsArray,\n} from './flat/orient.js';\nimport {quantizeMultiArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nclass MultiPolygon extends SimpleGeometry {\n  /**\n   * @param {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>|Polygon>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` and `endss` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<Array<number>>} [endss] Array of ends for internal use with flat coordinates.\n   */\n  constructor(coordinates, layout, endss) {\n    super();\n\n    /**\n     * @type {Array<Array<number>>}\n     * @private\n     */\n    this.endss_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointsRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (!endss && !Array.isArray(coordinates[0])) {\n      const polygons = /** @type {Array<Polygon>} */ (coordinates);\n      /** @type {Array<number>} */\n      const flatCoordinates = [];\n      const thisEndss = [];\n      for (let i = 0, ii = polygons.length; i < ii; ++i) {\n        const polygon = polygons[i];\n        const offset = flatCoordinates.length;\n        const ends = polygon.getEnds();\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] += offset;\n        }\n        extend(flatCoordinates, polygon.getFlatCoordinates());\n        thisEndss.push(ends);\n      }\n      layout =\n        polygons.length === 0 ? this.getLayout() : polygons[0].getLayout();\n      coordinates = flatCoordinates;\n      endss = thisEndss;\n    }\n    if (layout !== undefined && endss) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n      this.endss_ = endss;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Append the passed polygon to this multipolygon.\n   * @param {Polygon} polygon Polygon.\n   * @api\n   */\n  appendPolygon(polygon) {\n    /** @type {Array<number>} */\n    let ends;\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = polygon.getFlatCoordinates().slice();\n      ends = polygon.getEnds().slice();\n      this.endss_.push();\n    } else {\n      const offset = this.flatCoordinates.length;\n      extend(this.flatCoordinates, polygon.getFlatCoordinates());\n      ends = polygon.getEnds().slice();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] += offset;\n      }\n    }\n    this.endss_.push(ends);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPolygon} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const len = this.endss_.length;\n    const newEndss = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      newEndss[i] = this.endss_[i].slice();\n    }\n\n    const multiPolygon = new MultiPolygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      newEndss,\n    );\n    multiPolygon.applyProperties(this);\n\n    return multiPolygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        multiArrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.endss_,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestMultiArrayPoint(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   * @override\n   */\n  containsXY(x, y) {\n    return linearRingssContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      x,\n      y,\n    );\n  }\n\n  /**\n   * Return the area of the multipolygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingssArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for multi-polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRingsArray(\n        flatCoordinates,\n        0,\n        this.endss_,\n        this.stride,\n        right,\n      );\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateMultiCoordinatesArray(\n      flatCoordinates,\n      0,\n      this.endss_,\n      this.stride,\n    );\n  }\n\n  /**\n   * @return {Array<Array<number>>} Endss.\n   */\n  getEndss() {\n    return this.endss_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n      const flatCenters = linearRingssCenter(\n        this.flatCoordinates,\n        0,\n        this.endss_,\n        this.stride,\n      );\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.endss_,\n        this.stride,\n        flatCenters,\n      );\n      this.flatInteriorPointsRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.flatInteriorPoints_);\n  }\n\n  /**\n   * Return the interior points as {@link module:ol/geom/MultiPoint~MultiPoint multipoint}.\n   * @return {MultiPoint} Interior points as XYM coordinates, where M is\n   * the length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoints() {\n    return new MultiPoint(this.getFlatInteriorPoints().slice(), 'XYM');\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (\n        linearRingssAreOriented(flatCoordinates, 0, this.endss_, this.stride)\n      ) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRingsArray(\n          this.orientedFlatCoordinates_,\n          0,\n          this.endss_,\n          this.stride,\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.orientedFlatCoordinates_);\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiPolygon} Simplified MultiPolygon.\n   * @protected\n   * @override\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    /** @type {Array<Array<number>>} */\n    const simplifiedEndss = [];\n    simplifiedFlatCoordinates.length = quantizeMultiArray(\n      this.flatCoordinates,\n      0,\n      this.endss_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEndss,\n    );\n    return new MultiPolygon(simplifiedFlatCoordinates, 'XY', simplifiedEndss);\n  }\n\n  /**\n   * Return the polygon at the specified index.\n   * @param {number} index Index.\n   * @return {Polygon} Polygon.\n   * @api\n   */\n  getPolygon(index) {\n    if (index < 0 || this.endss_.length <= index) {\n      return null;\n    }\n    let offset;\n    if (index === 0) {\n      offset = 0;\n    } else {\n      const prevEnds = this.endss_[index - 1];\n      offset = prevEnds[prevEnds.length - 1];\n    }\n    const ends = this.endss_[index].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] -= offset;\n      }\n    }\n    return new Polygon(\n      this.flatCoordinates.slice(offset, end),\n      this.layout,\n      ends,\n    );\n  }\n\n  /**\n   * Return the polygons of this multipolygon.\n   * @return {Array<Polygon>} Polygons.\n   * @api\n   */\n  getPolygons() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const endss = this.endss_;\n    const polygons = [];\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      const ends = endss[i].slice();\n      const end = ends[ends.length - 1];\n      if (offset !== 0) {\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] -= offset;\n        }\n      }\n      const polygon = new Polygon(\n        flatCoordinates.slice(offset, end),\n        layout,\n        ends,\n      );\n      polygons.push(polygon);\n      offset = end;\n    }\n    return polygons;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'MultiPolygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingMultiArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * Set the coordinates of the multipolygon.\n   * @param {!Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = deflateMultiCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.endss_,\n    );\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length =\n        lastEnds.length === 0 ? 0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n}\n\nexport default MultiPolygon;\n","/**\n * @module ol/format/Feature\n */\nimport Feature from '../Feature.js';\nimport {\n  linearRingsAreOriented,\n  linearRingssAreOriented,\n  orientLinearRings,\n  orientLinearRingsArray,\n} from '../geom/flat/orient.js';\nimport {\n  GeometryCollection,\n  LineString,\n  MultiLineString,\n  MultiPoint,\n  MultiPolygon,\n  Point,\n  Polygon,\n} from '../geom.js';\nimport {\n  equivalent as equivalentProjection,\n  get as getProjection,\n  getTransform,\n  transformExtent,\n} from '../proj.js';\nimport RenderFeature from '../render/Feature.js';\nimport {abstract} from '../util.js';\n\n/**\n * @typedef {Object} ReadOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are reading.\n * If not provided, the projection will be derived from the data (where possible) or\n * the `dataProjection` of the format is assigned (where set). If the projection\n * can not be derived from the data and if no `dataProjection` is set for a format,\n * the features will not be reprojected.\n * @property {import(\"../extent.js\").Extent} [extent] Tile extent in map units of the tile being read.\n * This is only required when reading data with tile pixels as geometry units. When configured,\n * a `dataProjection` with `TILE_PIXELS` as `units` and the tile's pixel extent as `extent` needs to be\n * provided.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * created by the format reader. If not provided, features will be returned in the\n * `dataProjection`.\n */\n\n/**\n * @typedef {Object} WriteOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are writing.\n * If not provided, the `dataProjection` of the format is assigned (where set).\n * If no `dataProjection` is set for a format, the features will be returned\n * in the `featureProjection`.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * that will be serialized by the format writer. If not provided, geometries are assumed\n * to be in the `dataProjection` if that is set; in other words, they are not transformed.\n * @property {boolean} [rightHanded] When writing geometries, follow the right-hand\n * rule for linear ring orientation.  This means that polygons will have counter-clockwise\n * exterior rings and clockwise interior rings.  By default, coordinates are serialized\n * as they are provided at construction.  If `true`, the right-hand rule will\n * be applied.  If `false`, the left-hand rule will be applied (clockwise for\n * exterior and counter-clockwise for interior rings).  Note that not all\n * formats support this.  The GeoJSON format does use this property when writing\n * geometries.\n * @property {number} [decimals] Maximum number of decimal places for coordinates.\n * Coordinates are stored internally as floats, but floating-point arithmetic can create\n * coordinates with a large number of decimal places, not generally wanted on output.\n * Set a number here to round coordinates. Can also be used to ensure that\n * coordinates read in can be written back out with the same number of decimals.\n * Default is no rounding.\n */\n\n/**\n * @typedef {'arraybuffer' | 'json' | 'text' | 'xml'} Type\n */\n\n/**\n * @typedef {Object} SimpleGeometryObject\n * @property {import('../geom/Geometry.js').Type} type Type.\n * @property {Array<number>} flatCoordinates Flat coordinates.\n * @property {Array<number>|Array<Array<number>>} [ends] Ends or endss.\n * @property {import('../geom/Geometry.js').GeometryLayout} [layout] Layout.\n */\n\n/**\n * @typedef {Array<GeometryObject>} GeometryCollectionObject\n */\n\n/**\n * @typedef {SimpleGeometryObject|GeometryCollectionObject} GeometryObject\n */\n\n/**\n * @typedef {Object} FeatureObject\n * @property {string|number} [id] Id.\n * @property {GeometryObject} [geometry] Geometry.\n * @property {Object<string, *>} [properties] Properties.\n */\n\n/***\n * @template {import('../Feature.js').FeatureLike} T\n * @typedef {T extends RenderFeature ? typeof RenderFeature : typeof Feature} FeatureToFeatureClass\n */\n\n/***\n * @template {import(\"../Feature.js\").FeatureClass} T\n * @typedef {T[keyof T] extends RenderFeature ? RenderFeature : Feature} FeatureClassToFeature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for feature formats.\n * {@link module:ol/format/Feature~FeatureFormat} subclasses provide the ability to decode and encode\n * {@link module:ol/Feature~Feature} objects from a variety of commonly used geospatial\n * file formats.  See the documentation for each format for more details.\n *\n * @template {import('../Feature.js').FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n * @abstract\n * @api\n */\nclass FeatureFormat {\n  constructor() {\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.dataProjection = undefined;\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.defaultFeatureProjection = undefined;\n\n    /**\n     * @protected\n     * @type {FeatureToFeatureClass<FeatureType>}\n     */\n    this.featureClass = /** @type {FeatureToFeatureClass<FeatureType>} */ (\n      Feature\n    );\n\n    /**\n     * A list media types supported by the format in descending order of preference.\n     * @type {Array<string>}\n     */\n    this.supportedMediaTypes = null;\n  }\n\n  /**\n   * Adds the data projection to the read options.\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Options.\n   * @return {ReadOptions|undefined} Options.\n   * @protected\n   */\n  getReadOptions(source, options) {\n    if (options) {\n      let dataProjection = options.dataProjection\n        ? getProjection(options.dataProjection)\n        : this.readProjection(source);\n      if (\n        options.extent &&\n        dataProjection &&\n        dataProjection.getUnits() === 'tile-pixels'\n      ) {\n        dataProjection = getProjection(dataProjection);\n        dataProjection.setWorldExtent(options.extent);\n      }\n      options = {\n        dataProjection: dataProjection,\n        featureProjection: options.featureProjection,\n      };\n    }\n    return this.adaptOptions(options);\n  }\n\n  /**\n   * Sets the `dataProjection` on the options, if no `dataProjection`\n   * is set.\n   * @param {WriteOptions|ReadOptions|undefined} options\n   *     Options.\n   * @protected\n   * @return {WriteOptions|ReadOptions|undefined}\n   *     Updated options.\n   */\n  adaptOptions(options) {\n    return Object.assign(\n      {\n        dataProjection: this.dataProjection,\n        featureProjection: this.defaultFeatureProjection,\n        featureClass: this.featureClass,\n      },\n      options,\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Type} The format type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Read a single feature from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {FeatureType|Array<FeatureType>} Feature.\n   */\n  readFeature(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read all features from a source.\n   *\n   * @abstract\n   * @param {Document|Element|ArrayBuffer|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {Array<FeatureType>} Features.\n   */\n  readFeatures(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read a single geometry from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometry(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default|undefined} Projection.\n   */\n  readProjection(source) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature in this format.\n   *\n   * @abstract\n   * @param {Feature} feature Feature.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeature(feature, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features in this format.\n   *\n   * @abstract\n   * @param {Array<Feature>} features Features.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeatures(features, options) {\n    return abstract();\n  }\n\n  /**\n   * Write a single geometry in this format.\n   *\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeGeometry(geometry, options) {\n    return abstract();\n  }\n}\n\nexport default FeatureFormat;\n\n/**\n * @template {import(\"../geom/Geometry.js\").default|RenderFeature} T\n * @param {T} geometry Geometry.\n * @param {boolean} write Set to true for writing, false for reading.\n * @param {WriteOptions|ReadOptions} [options] Options.\n * @return {T} Transformed geometry.\n */\nexport function transformGeometryWithOptions(geometry, write, options) {\n  const featureProjection = options\n    ? getProjection(options.featureProjection)\n    : null;\n  const dataProjection = options ? getProjection(options.dataProjection) : null;\n\n  let transformed = geometry;\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    if (write) {\n      transformed = /** @type {T} */ (geometry.clone());\n    }\n    const fromProjection = write ? featureProjection : dataProjection;\n    const toProjection = write ? dataProjection : featureProjection;\n    if (fromProjection.getUnits() === 'tile-pixels') {\n      transformed.transform(fromProjection, toProjection);\n    } else {\n      transformed.applyTransform(getTransform(fromProjection, toProjection));\n    }\n  }\n  if (\n    write &&\n    options &&\n    /** @type {WriteOptions} */ (options).decimals !== undefined\n  ) {\n    const power = Math.pow(10, /** @type {WriteOptions} */ (options).decimals);\n    // if decimals option on write, round each coordinate appropriately\n    /**\n     * @param {Array<number>} coordinates Coordinates.\n     * @return {Array<number>} Transformed coordinates.\n     */\n    const transform = function (coordinates) {\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = Math.round(coordinates[i] * power) / power;\n      }\n      return coordinates;\n    };\n    if (transformed === geometry) {\n      transformed = /** @type {T} */ (geometry.clone());\n    }\n    transformed.applyTransform(transform);\n  }\n  return transformed;\n}\n\n/**\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {ReadOptions} [options] Read options.\n * @return {import(\"../extent.js\").Extent} Transformed extent.\n */\nexport function transformExtentWithOptions(extent, options) {\n  const featureProjection = options\n    ? getProjection(options.featureProjection)\n    : null;\n  const dataProjection = options ? getProjection(options.dataProjection) : null;\n\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    return transformExtent(extent, dataProjection, featureProjection);\n  }\n  return extent;\n}\n\nconst GeometryConstructor = {\n  Point: Point,\n  LineString: LineString,\n  Polygon: Polygon,\n  MultiPoint: MultiPoint,\n  MultiLineString: MultiLineString,\n  MultiPolygon: MultiPolygon,\n};\n\nfunction orientFlatCoordinates(flatCoordinates, ends, stride) {\n  if (Array.isArray(ends[0])) {\n    // MultiPolagon\n    if (!linearRingssAreOriented(flatCoordinates, 0, ends, stride)) {\n      flatCoordinates = flatCoordinates.slice();\n      orientLinearRingsArray(flatCoordinates, 0, ends, stride);\n    }\n    return flatCoordinates;\n  }\n  if (!linearRingsAreOriented(flatCoordinates, 0, ends, stride)) {\n    flatCoordinates = flatCoordinates.slice();\n    orientLinearRings(flatCoordinates, 0, ends, stride);\n  }\n  return flatCoordinates;\n}\n\n/**\n * @param {FeatureObject} object Feature object.\n * @param {WriteOptions|ReadOptions} [options] Options.\n * @return {RenderFeature|Array<RenderFeature>} Render feature.\n */\nexport function createRenderFeature(object, options) {\n  const geometry = object.geometry;\n  if (!geometry) {\n    return [];\n  }\n  if (Array.isArray(geometry)) {\n    return geometry\n      .map((geometry) => createRenderFeature({...object, geometry}))\n      .flat();\n  }\n\n  const geometryType =\n    geometry.type === 'MultiPolygon' ? 'Polygon' : geometry.type;\n  if (geometryType === 'GeometryCollection' || geometryType === 'Circle') {\n    throw new Error('Unsupported geometry type: ' + geometryType);\n  }\n\n  const stride = geometry.layout.length;\n  return transformGeometryWithOptions(\n    new RenderFeature(\n      geometryType,\n      geometryType === 'Polygon'\n        ? orientFlatCoordinates(geometry.flatCoordinates, geometry.ends, stride)\n        : geometry.flatCoordinates,\n      geometry.ends?.flat(),\n      stride,\n      object.properties || {},\n      object.id,\n    ).enableSimplifyTransformed(),\n    false,\n    options,\n  );\n}\n\n/**\n * @param {GeometryObject|null} object Geometry object.\n * @param {WriteOptions|ReadOptions} [options] Options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nexport function createGeometry(object, options) {\n  if (!object) {\n    return null;\n  }\n  if (Array.isArray(object)) {\n    const geometries = object.map((geometry) =>\n      createGeometry(geometry, options),\n    );\n    return new GeometryCollection(geometries);\n  }\n  const Geometry = GeometryConstructor[object.type];\n  return transformGeometryWithOptions(\n    new Geometry(object.flatCoordinates, object.layout || 'XY', object.ends),\n    false,\n    options,\n  );\n}\n","\nconst SHIFT_LEFT_32 = (1 << 16) * (1 << 16);\nconst SHIFT_RIGHT_32 = 1 / SHIFT_LEFT_32;\n\n// Threshold chosen based on both benchmarking and knowledge about browser string\n// data structures (which currently switch structure types at 12 bytes or more)\nconst TEXT_DECODER_MIN_LENGTH = 12;\nconst utf8TextDecoder = typeof TextDecoder === 'undefined' ? null : new TextDecoder('utf-8');\n\nconst PBF_VARINT  = 0; // varint: int32, int64, uint32, uint64, sint32, sint64, bool, enum\nconst PBF_FIXED64 = 1; // 64-bit: double, fixed64, sfixed64\nconst PBF_BYTES   = 2; // length-delimited: string, bytes, embedded messages, packed repeated fields\nconst PBF_FIXED32 = 5; // 32-bit: float, fixed32, sfixed32\n\nexport default class Pbf {\n    /**\n     * @param {Uint8Array | ArrayBuffer} [buf]\n     */\n    constructor(buf = new Uint8Array(16)) {\n        this.buf = ArrayBuffer.isView(buf) ? buf : new Uint8Array(buf);\n        this.dataView = new DataView(this.buf.buffer);\n        this.pos = 0;\n        this.type = 0;\n        this.length = this.buf.length;\n    }\n\n    // === READING =================================================================\n\n    /**\n     * @template T\n     * @param {(tag: number, result: T, pbf: Pbf) => void} readField\n     * @param {T} result\n     * @param {number} [end]\n     */\n    readFields(readField, result, end = this.length) {\n        while (this.pos < end) {\n            const val = this.readVarint(),\n                tag = val >> 3,\n                startPos = this.pos;\n\n            this.type = val & 0x7;\n            readField(tag, result, this);\n\n            if (this.pos === startPos) this.skip(val);\n        }\n        return result;\n    }\n\n    /**\n     * @template T\n     * @param {(tag: number, result: T, pbf: Pbf) => void} readField\n     * @param {T} result\n     */\n    readMessage(readField, result) {\n        return this.readFields(readField, result, this.readVarint() + this.pos);\n    }\n\n    readFixed32() {\n        const val = this.dataView.getUint32(this.pos, true);\n        this.pos += 4;\n        return val;\n    }\n\n    readSFixed32() {\n        const val = this.dataView.getInt32(this.pos, true);\n        this.pos += 4;\n        return val;\n    }\n\n    // 64-bit int handling is based on github.com/dpw/node-buffer-more-ints (MIT-licensed)\n\n    readFixed64() {\n        const val = this.dataView.getUint32(this.pos, true) + this.dataView.getUint32(this.pos + 4, true) * SHIFT_LEFT_32;\n        this.pos += 8;\n        return val;\n    }\n\n    readSFixed64() {\n        const val = this.dataView.getUint32(this.pos, true) + this.dataView.getInt32(this.pos + 4, true) * SHIFT_LEFT_32;\n        this.pos += 8;\n        return val;\n    }\n\n    readFloat() {\n        const val = this.dataView.getFloat32(this.pos, true);\n        this.pos += 4;\n        return val;\n    }\n\n    readDouble() {\n        const val = this.dataView.getFloat64(this.pos, true);\n        this.pos += 8;\n        return val;\n    }\n\n    /**\n     * @param {boolean} [isSigned]\n     */\n    readVarint(isSigned) {\n        const buf = this.buf;\n        let val, b;\n\n        b = buf[this.pos++]; val  =  b & 0x7f;        if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 7;  if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 14; if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 21; if (b < 0x80) return val;\n        b = buf[this.pos];   val |= (b & 0x0f) << 28;\n\n        return readVarintRemainder(val, isSigned, this);\n    }\n\n    readVarint64() { // for compatibility with v2.0.1\n        return this.readVarint(true);\n    }\n\n    readSVarint() {\n        const num = this.readVarint();\n        return num % 2 === 1 ? (num + 1) / -2 : num / 2; // zigzag encoding\n    }\n\n    readBoolean() {\n        return Boolean(this.readVarint());\n    }\n\n    readString() {\n        const end = this.readVarint() + this.pos;\n        const pos = this.pos;\n        this.pos = end;\n\n        if (end - pos >= TEXT_DECODER_MIN_LENGTH && utf8TextDecoder) {\n            // longer strings are fast with the built-in browser TextDecoder API\n            return utf8TextDecoder.decode(this.buf.subarray(pos, end));\n        }\n        // short strings are fast with our custom implementation\n        return readUtf8(this.buf, pos, end);\n    }\n\n    readBytes() {\n        const end = this.readVarint() + this.pos,\n            buffer = this.buf.subarray(this.pos, end);\n        this.pos = end;\n        return buffer;\n    }\n\n    // verbose for performance reasons; doesn't affect gzipped size\n\n    /**\n     * @param {number[]} [arr]\n     * @param {boolean} [isSigned]\n     */\n    readPackedVarint(arr = [], isSigned) {\n        const end = this.readPackedEnd();\n        while (this.pos < end) arr.push(this.readVarint(isSigned));\n        return arr;\n    }\n    /** @param {number[]} [arr] */\n    readPackedSVarint(arr = []) {\n        const end = this.readPackedEnd();\n        while (this.pos < end) arr.push(this.readSVarint());\n        return arr;\n    }\n    /** @param {boolean[]} [arr] */\n    readPackedBoolean(arr = []) {\n        const end = this.readPackedEnd();\n        while (this.pos < end) arr.push(this.readBoolean());\n        return arr;\n    }\n    /** @param {number[]} [arr] */\n    readPackedFloat(arr = []) {\n        const end = this.readPackedEnd();\n        while (this.pos < end) arr.push(this.readFloat());\n        return arr;\n    }\n    /** @param {number[]} [arr] */\n    readPackedDouble(arr = []) {\n        const end = this.readPackedEnd();\n        while (this.pos < end) arr.push(this.readDouble());\n        return arr;\n    }\n    /** @param {number[]} [arr] */\n    readPackedFixed32(arr = []) {\n        const end = this.readPackedEnd();\n        while (this.pos < end) arr.push(this.readFixed32());\n        return arr;\n    }\n    /** @param {number[]} [arr] */\n    readPackedSFixed32(arr = []) {\n        const end = this.readPackedEnd();\n        while (this.pos < end) arr.push(this.readSFixed32());\n        return arr;\n    }\n    /** @param {number[]} [arr] */\n    readPackedFixed64(arr = []) {\n        const end = this.readPackedEnd();\n        while (this.pos < end) arr.push(this.readFixed64());\n        return arr;\n    }\n    /** @param {number[]} [arr] */\n    readPackedSFixed64(arr = []) {\n        const end = this.readPackedEnd();\n        while (this.pos < end) arr.push(this.readSFixed64());\n        return arr;\n    }\n    readPackedEnd() {\n        return this.type === PBF_BYTES ? this.readVarint() + this.pos : this.pos + 1;\n    }\n\n    /** @param {number} val */\n    skip(val) {\n        const type = val & 0x7;\n        if (type === PBF_VARINT) while (this.buf[this.pos++] > 0x7f) {}\n        else if (type === PBF_BYTES) this.pos = this.readVarint() + this.pos;\n        else if (type === PBF_FIXED32) this.pos += 4;\n        else if (type === PBF_FIXED64) this.pos += 8;\n        else throw new Error(`Unimplemented type: ${type}`);\n    }\n\n    // === WRITING =================================================================\n\n    /**\n     * @param {number} tag\n     * @param {number} type\n     */\n    writeTag(tag, type) {\n        this.writeVarint((tag << 3) | type);\n    }\n\n    /** @param {number} min */\n    realloc(min) {\n        let length = this.length || 16;\n\n        while (length < this.pos + min) length *= 2;\n\n        if (length !== this.length) {\n            const buf = new Uint8Array(length);\n            buf.set(this.buf);\n            this.buf = buf;\n            this.dataView = new DataView(buf.buffer);\n            this.length = length;\n        }\n    }\n\n    finish() {\n        this.length = this.pos;\n        this.pos = 0;\n        return this.buf.subarray(0, this.length);\n    }\n\n    /** @param {number} val */\n    writeFixed32(val) {\n        this.realloc(4);\n        this.dataView.setInt32(this.pos, val, true);\n        this.pos += 4;\n    }\n\n    /** @param {number} val */\n    writeSFixed32(val) {\n        this.realloc(4);\n        this.dataView.setInt32(this.pos, val, true);\n        this.pos += 4;\n    }\n\n    /** @param {number} val */\n    writeFixed64(val) {\n        this.realloc(8);\n        this.dataView.setInt32(this.pos, val & -1, true);\n        this.dataView.setInt32(this.pos + 4, Math.floor(val * SHIFT_RIGHT_32), true);\n        this.pos += 8;\n    }\n\n    /** @param {number} val */\n    writeSFixed64(val) {\n        this.realloc(8);\n        this.dataView.setInt32(this.pos, val & -1, true);\n        this.dataView.setInt32(this.pos + 4, Math.floor(val * SHIFT_RIGHT_32), true);\n        this.pos += 8;\n    }\n\n    /** @param {number} val */\n    writeVarint(val) {\n        val = +val || 0;\n\n        if (val > 0xfffffff || val < 0) {\n            writeBigVarint(val, this);\n            return;\n        }\n\n        this.realloc(4);\n\n        this.buf[this.pos++] =           val & 0x7f  | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] =   (val >>> 7) & 0x7f;\n    }\n\n    /** @param {number} val */\n    writeSVarint(val) {\n        this.writeVarint(val < 0 ? -val * 2 - 1 : val * 2);\n    }\n\n    /** @param {boolean} val */\n    writeBoolean(val) {\n        this.writeVarint(+val);\n    }\n\n    /** @param {string} str */\n    writeString(str) {\n        str = String(str);\n        this.realloc(str.length * 4);\n\n        this.pos++; // reserve 1 byte for short string length\n\n        const startPos = this.pos;\n        // write the string directly to the buffer and see how much was written\n        this.pos = writeUtf8(this.buf, str, this.pos);\n        const len = this.pos - startPos;\n\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n        // finally, write the message length in the reserved place and restore the position\n        this.pos = startPos - 1;\n        this.writeVarint(len);\n        this.pos += len;\n    }\n\n    /** @param {number} val */\n    writeFloat(val) {\n        this.realloc(4);\n        this.dataView.setFloat32(this.pos, val, true);\n        this.pos += 4;\n    }\n\n    /** @param {number} val */\n    writeDouble(val) {\n        this.realloc(8);\n        this.dataView.setFloat64(this.pos, val, true);\n        this.pos += 8;\n    }\n\n    /** @param {Uint8Array} buffer */\n    writeBytes(buffer) {\n        const len = buffer.length;\n        this.writeVarint(len);\n        this.realloc(len);\n        for (let i = 0; i < len; i++) this.buf[this.pos++] = buffer[i];\n    }\n\n    /**\n     * @template T\n     * @param {(obj: T, pbf: Pbf) => void} fn\n     * @param {T} obj\n     */\n    writeRawMessage(fn, obj) {\n        this.pos++; // reserve 1 byte for short message length\n\n        // write the message directly to the buffer and see how much was written\n        const startPos = this.pos;\n        fn(obj, this);\n        const len = this.pos - startPos;\n\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n        // finally, write the message length in the reserved place and restore the position\n        this.pos = startPos - 1;\n        this.writeVarint(len);\n        this.pos += len;\n    }\n\n    /**\n     * @template T\n     * @param {number} tag\n     * @param {(obj: T, pbf: Pbf) => void} fn\n     * @param {T} obj\n     */\n    writeMessage(tag, fn, obj) {\n        this.writeTag(tag, PBF_BYTES);\n        this.writeRawMessage(fn, obj);\n    }\n\n    /**\n     * @param {number} tag\n     * @param {number[]} arr\n     */\n    writePackedVarint(tag, arr) {\n        if (arr.length) this.writeMessage(tag, writePackedVarint, arr);\n    }\n    /**\n     * @param {number} tag\n     * @param {number[]} arr\n     */\n    writePackedSVarint(tag, arr) {\n        if (arr.length) this.writeMessage(tag, writePackedSVarint, arr);\n    }\n    /**\n     * @param {number} tag\n     * @param {boolean[]} arr\n     */\n    writePackedBoolean(tag, arr) {\n        if (arr.length) this.writeMessage(tag, writePackedBoolean, arr);\n    }\n    /**\n     * @param {number} tag\n     * @param {number[]} arr\n     */\n    writePackedFloat(tag, arr) {\n        if (arr.length) this.writeMessage(tag, writePackedFloat, arr);\n    }\n    /**\n     * @param {number} tag\n     * @param {number[]} arr\n     */\n    writePackedDouble(tag, arr) {\n        if (arr.length) this.writeMessage(tag, writePackedDouble, arr);\n    }\n    /**\n     * @param {number} tag\n     * @param {number[]} arr\n     */\n    writePackedFixed32(tag, arr) {\n        if (arr.length) this.writeMessage(tag, writePackedFixed32, arr);\n    }\n    /**\n     * @param {number} tag\n     * @param {number[]} arr\n     */\n    writePackedSFixed32(tag, arr) {\n        if (arr.length) this.writeMessage(tag, writePackedSFixed32, arr);\n    }\n    /**\n     * @param {number} tag\n     * @param {number[]} arr\n     */\n    writePackedFixed64(tag, arr) {\n        if (arr.length) this.writeMessage(tag, writePackedFixed64, arr);\n    }\n    /**\n     * @param {number} tag\n     * @param {number[]} arr\n     */\n    writePackedSFixed64(tag, arr) {\n        if (arr.length) this.writeMessage(tag, writePackedSFixed64, arr);\n    }\n\n    /**\n     * @param {number} tag\n     * @param {Uint8Array} buffer\n     */\n    writeBytesField(tag, buffer) {\n        this.writeTag(tag, PBF_BYTES);\n        this.writeBytes(buffer);\n    }\n    /**\n     * @param {number} tag\n     * @param {number} val\n     */\n    writeFixed32Field(tag, val) {\n        this.writeTag(tag, PBF_FIXED32);\n        this.writeFixed32(val);\n    }\n    /**\n     * @param {number} tag\n     * @param {number} val\n     */\n    writeSFixed32Field(tag, val) {\n        this.writeTag(tag, PBF_FIXED32);\n        this.writeSFixed32(val);\n    }\n    /**\n     * @param {number} tag\n     * @param {number} val\n     */\n    writeFixed64Field(tag, val) {\n        this.writeTag(tag, PBF_FIXED64);\n        this.writeFixed64(val);\n    }\n    /**\n     * @param {number} tag\n     * @param {number} val\n     */\n    writeSFixed64Field(tag, val) {\n        this.writeTag(tag, PBF_FIXED64);\n        this.writeSFixed64(val);\n    }\n    /**\n     * @param {number} tag\n     * @param {number} val\n     */\n    writeVarintField(tag, val) {\n        this.writeTag(tag, PBF_VARINT);\n        this.writeVarint(val);\n    }\n    /**\n     * @param {number} tag\n     * @param {number} val\n     */\n    writeSVarintField(tag, val) {\n        this.writeTag(tag, PBF_VARINT);\n        this.writeSVarint(val);\n    }\n    /**\n     * @param {number} tag\n     * @param {string} str\n     */\n    writeStringField(tag, str) {\n        this.writeTag(tag, PBF_BYTES);\n        this.writeString(str);\n    }\n    /**\n     * @param {number} tag\n     * @param {number} val\n     */\n    writeFloatField(tag, val) {\n        this.writeTag(tag, PBF_FIXED32);\n        this.writeFloat(val);\n    }\n    /**\n     * @param {number} tag\n     * @param {number} val\n     */\n    writeDoubleField(tag, val) {\n        this.writeTag(tag, PBF_FIXED64);\n        this.writeDouble(val);\n    }\n    /**\n     * @param {number} tag\n     * @param {boolean} val\n     */\n    writeBooleanField(tag, val) {\n        this.writeVarintField(tag, +val);\n    }\n};\n\n/**\n * @param {number} l\n * @param {boolean | undefined} s\n * @param {Pbf} p\n */\nfunction readVarintRemainder(l, s, p) {\n    const buf = p.buf;\n    let h, b;\n\n    b = buf[p.pos++]; h  = (b & 0x70) >> 4;  if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 3;  if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 10; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 17; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 24; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x01) << 31; if (b < 0x80) return toNum(l, h, s);\n\n    throw new Error('Expected varint not more than 10 bytes');\n}\n\n/**\n * @param {number} low\n * @param {number} high\n * @param {boolean} [isSigned]\n */\nfunction toNum(low, high, isSigned) {\n    return isSigned ? high * 0x100000000 + (low >>> 0) : ((high >>> 0) * 0x100000000) + (low >>> 0);\n}\n\n/**\n * @param {number} val\n * @param {Pbf} pbf\n */\nfunction writeBigVarint(val, pbf) {\n    let low, high;\n\n    if (val >= 0) {\n        low  = (val % 0x100000000) | 0;\n        high = (val / 0x100000000) | 0;\n    } else {\n        low  = ~(-val % 0x100000000);\n        high = ~(-val / 0x100000000);\n\n        if (low ^ 0xffffffff) {\n            low = (low + 1) | 0;\n        } else {\n            low = 0;\n            high = (high + 1) | 0;\n        }\n    }\n\n    if (val >= 0x10000000000000000 || val < -0x10000000000000000) {\n        throw new Error('Given varint doesn\\'t fit into 10 bytes');\n    }\n\n    pbf.realloc(10);\n\n    writeBigVarintLow(low, high, pbf);\n    writeBigVarintHigh(high, pbf);\n}\n\n/**\n * @param {number} high\n * @param {number} low\n * @param {Pbf} pbf\n */\nfunction writeBigVarintLow(low, high, pbf) {\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos]   = low & 0x7f;\n}\n\n/**\n * @param {number} high\n * @param {Pbf} pbf\n */\nfunction writeBigVarintHigh(high, pbf) {\n    const lsb = (high & 0x07) << 4;\n\n    pbf.buf[pbf.pos++] |= lsb         | ((high >>>= 3) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f;\n}\n\n/**\n * @param {number} startPos\n * @param {number} len\n * @param {Pbf} pbf\n */\nfunction makeRoomForExtraLength(startPos, len, pbf) {\n    const extraLen =\n        len <= 0x3fff ? 1 :\n        len <= 0x1fffff ? 2 :\n        len <= 0xfffffff ? 3 : Math.floor(Math.log(len) / (Math.LN2 * 7));\n\n    // if 1 byte isn't enough for encoding message length, shift the data to the right\n    pbf.realloc(extraLen);\n    for (let i = pbf.pos - 1; i >= startPos; i--) pbf.buf[i + extraLen] = pbf.buf[i];\n}\n\n/**\n * @param {number[]} arr\n * @param {Pbf} pbf\n */\nfunction writePackedVarint(arr, pbf) {\n    for (let i = 0; i < arr.length; i++) pbf.writeVarint(arr[i]);\n}\n/**\n * @param {number[]} arr\n * @param {Pbf} pbf\n */\nfunction writePackedSVarint(arr, pbf) {\n    for (let i = 0; i < arr.length; i++) pbf.writeSVarint(arr[i]);\n}\n/**\n * @param {number[]} arr\n * @param {Pbf} pbf\n */\nfunction writePackedFloat(arr, pbf) {\n    for (let i = 0; i < arr.length; i++) pbf.writeFloat(arr[i]);\n}\n/**\n * @param {number[]} arr\n * @param {Pbf} pbf\n */\nfunction writePackedDouble(arr, pbf) {\n    for (let i = 0; i < arr.length; i++) pbf.writeDouble(arr[i]);\n}\n/**\n * @param {boolean[]} arr\n * @param {Pbf} pbf\n */\nfunction writePackedBoolean(arr, pbf) {\n    for (let i = 0; i < arr.length; i++) pbf.writeBoolean(arr[i]);\n}\n/**\n * @param {number[]} arr\n * @param {Pbf} pbf\n */\nfunction writePackedFixed32(arr, pbf) {\n    for (let i = 0; i < arr.length; i++) pbf.writeFixed32(arr[i]);\n}\n/**\n * @param {number[]} arr\n * @param {Pbf} pbf\n */\nfunction writePackedSFixed32(arr, pbf) {\n    for (let i = 0; i < arr.length; i++) pbf.writeSFixed32(arr[i]);\n}\n/**\n * @param {number[]} arr\n * @param {Pbf} pbf\n */\nfunction writePackedFixed64(arr, pbf) {\n    for (let i = 0; i < arr.length; i++) pbf.writeFixed64(arr[i]);\n}\n/**\n * @param {number[]} arr\n * @param {Pbf} pbf\n */\nfunction writePackedSFixed64(arr, pbf) {\n    for (let i = 0; i < arr.length; i++) pbf.writeSFixed64(arr[i]);\n}\n\n// Buffer code below from https://github.com/feross/buffer, MIT-licensed\n\n/**\n * @param {Uint8Array} buf\n * @param {number} pos\n * @param {number} end\n */\nfunction readUtf8(buf, pos, end) {\n    let str = '';\n    let i = pos;\n\n    while (i < end) {\n        const b0 = buf[i];\n        let c = null; // codepoint\n        let bytesPerSequence =\n            b0 > 0xEF ? 4 :\n            b0 > 0xDF ? 3 :\n            b0 > 0xBF ? 2 : 1;\n\n        if (i + bytesPerSequence > end) break;\n\n        let b1, b2, b3;\n\n        if (bytesPerSequence === 1) {\n            if (b0 < 0x80) {\n                c = b0;\n            }\n        } else if (bytesPerSequence === 2) {\n            b1 = buf[i + 1];\n            if ((b1 & 0xC0) === 0x80) {\n                c = (b0 & 0x1F) << 0x6 | (b1 & 0x3F);\n                if (c <= 0x7F) {\n                    c = null;\n                }\n            }\n        } else if (bytesPerSequence === 3) {\n            b1 = buf[i + 1];\n            b2 = buf[i + 2];\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80) {\n                c = (b0 & 0xF) << 0xC | (b1 & 0x3F) << 0x6 | (b2 & 0x3F);\n                if (c <= 0x7FF || (c >= 0xD800 && c <= 0xDFFF)) {\n                    c = null;\n                }\n            }\n        } else if (bytesPerSequence === 4) {\n            b1 = buf[i + 1];\n            b2 = buf[i + 2];\n            b3 = buf[i + 3];\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80) {\n                c = (b0 & 0xF) << 0x12 | (b1 & 0x3F) << 0xC | (b2 & 0x3F) << 0x6 | (b3 & 0x3F);\n                if (c <= 0xFFFF || c >= 0x110000) {\n                    c = null;\n                }\n            }\n        }\n\n        if (c === null) {\n            c = 0xFFFD;\n            bytesPerSequence = 1;\n\n        } else if (c > 0xFFFF) {\n            c -= 0x10000;\n            str += String.fromCharCode(c >>> 10 & 0x3FF | 0xD800);\n            c = 0xDC00 | c & 0x3FF;\n        }\n\n        str += String.fromCharCode(c);\n        i += bytesPerSequence;\n    }\n\n    return str;\n}\n\n/**\n * @param {Uint8Array} buf\n * @param {string} str\n * @param {number} pos\n */\nfunction writeUtf8(buf, str, pos) {\n    for (let i = 0, c, lead; i < str.length; i++) {\n        c = str.charCodeAt(i); // code point\n\n        if (c > 0xD7FF && c < 0xE000) {\n            if (lead) {\n                if (c < 0xDC00) {\n                    buf[pos++] = 0xEF;\n                    buf[pos++] = 0xBF;\n                    buf[pos++] = 0xBD;\n                    lead = c;\n                    continue;\n                } else {\n                    c = lead - 0xD800 << 10 | c - 0xDC00 | 0x10000;\n                    lead = null;\n                }\n            } else {\n                if (c > 0xDBFF || (i + 1 === str.length)) {\n                    buf[pos++] = 0xEF;\n                    buf[pos++] = 0xBF;\n                    buf[pos++] = 0xBD;\n                } else {\n                    lead = c;\n                }\n                continue;\n            }\n        } else if (lead) {\n            buf[pos++] = 0xEF;\n            buf[pos++] = 0xBF;\n            buf[pos++] = 0xBD;\n            lead = null;\n        }\n\n        if (c < 0x80) {\n            buf[pos++] = c;\n        } else {\n            if (c < 0x800) {\n                buf[pos++] = c >> 0x6 | 0xC0;\n            } else {\n                if (c < 0x10000) {\n                    buf[pos++] = c >> 0xC | 0xE0;\n                } else {\n                    buf[pos++] = c >> 0x12 | 0xF0;\n                    buf[pos++] = c >> 0xC & 0x3F | 0x80;\n                }\n                buf[pos++] = c >> 0x6 & 0x3F | 0x80;\n            }\n            buf[pos++] = c & 0x3F | 0x80;\n        }\n    }\n    return pos;\n}\n","/**\n * @module ol/format/MVT\n */\n//FIXME Implement projection handling\n\nimport PBF from 'pbf';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {inflateEnds} from '../geom/flat/orient.js';\nimport Projection from '../proj/Projection.js';\nimport {get} from '../proj.js';\nimport RenderFeature from '../render/Feature.js';\nimport FeatureFormat, {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../render/Feature.js\").default]\n * @typedef {Object} Options\n * @property {import('./Feature.js').FeatureToFeatureClass<FeatureType>} [featureClass] Class for features returned by\n * {@link module:ol/format/MVT~MVT#readFeatures}. Set to {@link module:ol/Feature~Feature} to get full editing and geometry\n * support at the cost of decreased rendering performance. The default is\n * {@link module:ol/render/Feature~RenderFeature}, which is optimized for rendering and hit detection.\n * @property {string} [geometryName='geometry'] Geometry name to use when creating features.\n * @property {string} [layerName='layer'] Name of the feature attribute that holds the layer name.\n * @property {Array<string>} [layers] Layers to read features from. If not provided, features will be read from all\n * @property {string} [idProperty] Optional property that will be assigned as the feature id and removed from the properties.\n * layers.\n */\n\n/**\n * @classdesc\n * Feature format for reading data in the Mapbox MVT format.\n *\n * @template {import('../Feature.js').FeatureLike} [FeatureType=RenderFeature]\n * @extends {FeatureFormat<FeatureType>}\n * @api\n */\nclass MVT extends FeatureFormat {\n  /**\n   * @param {Options<FeatureType>} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {Projection}\n     */\n    this.dataProjection = new Projection({\n      code: '',\n      units: 'tile-pixels',\n    });\n\n    this.featureClass = options.featureClass\n      ? options.featureClass\n      : /** @type {import('./Feature.js').FeatureToFeatureClass<FeatureType>} */ (\n          RenderFeature\n        );\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.layerName_ = options.layerName ? options.layerName : 'layer';\n\n    /**\n     * @private\n     * @type {Array<string>|null}\n     */\n    this.layers_ = options.layers ? options.layers : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.idProperty_ = options.idProperty;\n\n    this.supportedMediaTypes = [\n      'application/vnd.mapbox-vector-tile',\n      'application/x-protobuf',\n    ];\n  }\n\n  /**\n   * Read the raw geometry from the pbf offset stored in a raw feature's geometry\n   * property.\n   * @param {PBF} pbf PBF.\n   * @param {Object} feature Raw feature.\n   * @param {Array<number>} flatCoordinates Array to store flat coordinates in.\n   * @param {Array<number>} ends Array to store ends in.\n   * @private\n   */\n  readRawGeometry_(pbf, feature, flatCoordinates, ends) {\n    pbf.pos = feature.geometry;\n\n    const end = pbf.readVarint() + pbf.pos;\n    let cmd = 1;\n    let length = 0;\n    let x = 0;\n    let y = 0;\n    let coordsLen = 0;\n    let currentEnd = 0;\n\n    while (pbf.pos < end) {\n      if (!length) {\n        const cmdLen = pbf.readVarint();\n        cmd = cmdLen & 0x7;\n        length = cmdLen >> 3;\n      }\n\n      length--;\n\n      if (cmd === 1 || cmd === 2) {\n        x += pbf.readSVarint();\n        y += pbf.readSVarint();\n\n        if (cmd === 1) {\n          // moveTo\n          if (coordsLen > currentEnd) {\n            ends.push(coordsLen);\n            currentEnd = coordsLen;\n          }\n        }\n\n        flatCoordinates.push(x, y);\n        coordsLen += 2;\n      } else if (cmd === 7) {\n        if (coordsLen > currentEnd) {\n          // close polygon\n          flatCoordinates.push(\n            flatCoordinates[currentEnd],\n            flatCoordinates[currentEnd + 1],\n          );\n          coordsLen += 2;\n        }\n      } else {\n        throw new Error('Invalid command found in the PBF');\n      }\n    }\n\n    if (coordsLen > currentEnd) {\n      ends.push(coordsLen);\n      currentEnd = coordsLen;\n    }\n  }\n\n  /**\n   * @private\n   * @param {PBF} pbf PBF\n   * @param {Object} rawFeature Raw Mapbox feature.\n   * @param {import(\"./Feature.js\").ReadOptions} options Read options.\n   * @return {FeatureType|null} Feature.\n   */\n  createFeature_(pbf, rawFeature, options) {\n    const type = rawFeature.type;\n    if (type === 0) {\n      return null;\n    }\n\n    let feature;\n    const values = rawFeature.properties;\n\n    let id;\n    if (!this.idProperty_) {\n      id = rawFeature.id;\n    } else {\n      id = values[this.idProperty_];\n      delete values[this.idProperty_];\n    }\n\n    values[this.layerName_] = rawFeature.layer.name;\n\n    const flatCoordinates = /** @type {Array<number>} */ ([]);\n    const ends = /** @type {Array<number>} */ ([]);\n    this.readRawGeometry_(pbf, rawFeature, flatCoordinates, ends);\n\n    const geometryType = getGeometryType(type, ends.length);\n\n    if (this.featureClass === RenderFeature) {\n      feature =\n        new /** @type {import('./Feature.js').FeatureToFeatureClass<RenderFeature>} */ (\n          this.featureClass\n        )(geometryType, flatCoordinates, ends, 2, values, id);\n      feature.transform(options.dataProjection);\n    } else {\n      let geom;\n      if (geometryType == 'Polygon') {\n        const endss = inflateEnds(flatCoordinates, ends);\n        geom =\n          endss.length > 1\n            ? new MultiPolygon(flatCoordinates, 'XY', endss)\n            : new Polygon(flatCoordinates, 'XY', ends);\n      } else {\n        geom =\n          geometryType === 'Point'\n            ? new Point(flatCoordinates, 'XY')\n            : geometryType === 'LineString'\n              ? new LineString(flatCoordinates, 'XY')\n              : geometryType === 'MultiPoint'\n                ? new MultiPoint(flatCoordinates, 'XY')\n                : geometryType === 'MultiLineString'\n                  ? new MultiLineString(flatCoordinates, 'XY', ends)\n                  : null;\n      }\n      const ctor = /** @type {typeof import(\"../Feature.js\").default} */ (\n        this.featureClass\n      );\n      feature = new ctor();\n      if (this.geometryName_) {\n        feature.setGeometryName(this.geometryName_);\n      }\n      const geometry = transformGeometryWithOptions(geom, false, options);\n      feature.setGeometry(geometry);\n      if (id !== undefined) {\n        feature.setId(id);\n      }\n      feature.setProperties(values, true);\n    }\n\n    return /** @type {FeatureType} */ (feature);\n  }\n\n  /**\n   * @return {import(\"./Feature.js\").Type} Format.\n   * @override\n   */\n  getType() {\n    return 'arraybuffer';\n  }\n\n  /**\n   * Read all features.\n   *\n   * @param {ArrayBuffer} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {Array<FeatureType>} Features.\n   * @api\n   * @override\n   */\n  readFeatures(source, options) {\n    const layers = this.layers_;\n    options = this.adaptOptions(options);\n    const dataProjection = get(options.dataProjection);\n    dataProjection.setWorldExtent(options.extent);\n    options.dataProjection = dataProjection;\n\n    const pbf = new PBF(/** @type {ArrayBuffer} */ (source));\n    const pbfLayers = pbf.readFields(layersPBFReader, {});\n    const features = [];\n    for (const name in pbfLayers) {\n      if (layers && !layers.includes(name)) {\n        continue;\n      }\n      const pbfLayer = pbfLayers[name];\n\n      const extent = pbfLayer ? [0, 0, pbfLayer.extent, pbfLayer.extent] : null;\n      dataProjection.setExtent(extent);\n\n      for (let i = 0, ii = pbfLayer.length; i < ii; ++i) {\n        const rawFeature = readRawFeature(pbf, pbfLayer, i);\n        const feature = this.createFeature_(pbf, rawFeature, options);\n        if (feature !== null) {\n          features.push(feature);\n        }\n      }\n    }\n\n    return /** @type {Array<FeatureType>} */ (features);\n  }\n\n  /**\n   * Read the projection from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   * @override\n   */\n  readProjection(source) {\n    return this.dataProjection;\n  }\n\n  /**\n   * Sets the layers that features will be read from.\n   * @param {Array<string>} layers Layers.\n   * @api\n   */\n  setLayers(layers) {\n    this.layers_ = layers;\n  }\n}\n\n/**\n * Reader callback for parsing layers.\n * @param {number} tag The tag.\n * @param {Object} layers The layers object.\n * @param {PBF} pbf The PBF.\n */\nfunction layersPBFReader(tag, layers, pbf) {\n  if (tag === 3) {\n    const layer = {\n      keys: [],\n      values: [],\n      features: [],\n    };\n    const end = pbf.readVarint() + pbf.pos;\n    pbf.readFields(layerPBFReader, layer, end);\n    layer.length = layer.features.length;\n    if (layer.length) {\n      layers[layer.name] = layer;\n    }\n  }\n}\n\n/**\n * Reader callback for parsing layer.\n * @param {number} tag The tag.\n * @param {Object} layer The layer object.\n * @param {PBF} pbf The PBF.\n */\nfunction layerPBFReader(tag, layer, pbf) {\n  if (tag === 15) {\n    layer.version = pbf.readVarint();\n  } else if (tag === 1) {\n    layer.name = pbf.readString();\n  } else if (tag === 5) {\n    layer.extent = pbf.readVarint();\n  } else if (tag === 2) {\n    layer.features.push(pbf.pos);\n  } else if (tag === 3) {\n    layer.keys.push(pbf.readString());\n  } else if (tag === 4) {\n    let value = null;\n    const end = pbf.readVarint() + pbf.pos;\n    while (pbf.pos < end) {\n      tag = pbf.readVarint() >> 3;\n      value =\n        tag === 1\n          ? pbf.readString()\n          : tag === 2\n            ? pbf.readFloat()\n            : tag === 3\n              ? pbf.readDouble()\n              : tag === 4\n                ? pbf.readVarint64()\n                : tag === 5\n                  ? pbf.readVarint()\n                  : tag === 6\n                    ? pbf.readSVarint()\n                    : tag === 7\n                      ? pbf.readBoolean()\n                      : null;\n    }\n    layer.values.push(value);\n  }\n}\n\n/**\n * Reader callback for parsing feature.\n * @param {number} tag The tag.\n * @param {Object} feature The feature object.\n * @param {PBF} pbf The PBF.\n */\nfunction featurePBFReader(tag, feature, pbf) {\n  if (tag == 1) {\n    feature.id = pbf.readVarint();\n  } else if (tag == 2) {\n    const end = pbf.readVarint() + pbf.pos;\n    while (pbf.pos < end) {\n      const key = feature.layer.keys[pbf.readVarint()];\n      const value = feature.layer.values[pbf.readVarint()];\n      feature.properties[key] = value;\n    }\n  } else if (tag == 3) {\n    feature.type = pbf.readVarint();\n  } else if (tag == 4) {\n    feature.geometry = pbf.pos;\n  }\n}\n\n/**\n * Read a raw feature from the pbf offset stored at index `i` in the raw layer.\n * @param {PBF} pbf PBF.\n * @param {Object} layer Raw layer.\n * @param {number} i Index of the feature in the raw layer's `features` array.\n * @return {Object} Raw feature.\n */\nfunction readRawFeature(pbf, layer, i) {\n  pbf.pos = layer.features[i];\n  const end = pbf.readVarint() + pbf.pos;\n\n  const feature = {\n    layer: layer,\n    type: 0,\n    properties: {},\n  };\n  pbf.readFields(featurePBFReader, feature, end);\n  return feature;\n}\n\n/**\n * @param {number} type The raw feature's geometry type\n * @param {number} numEnds Number of ends of the flat coordinates of the\n * geometry.\n * @return {import(\"../render/Feature.js\").Type} The geometry type.\n */\nfunction getGeometryType(type, numEnds) {\n  /** @type {import(\"../render/Feature.js\").Type} */\n  let geometryType;\n  if (type === 1) {\n    geometryType = numEnds === 1 ? 'Point' : 'MultiPoint';\n  } else if (type === 2) {\n    geometryType = numEnds === 1 ? 'LineString' : 'MultiLineString';\n  } else if (type === 3) {\n    geometryType = 'Polygon';\n    // MultiPolygon not relevant for rendering - winding order determines\n    // outer rings of polygons.\n  }\n  return geometryType;\n}\n\nexport default MVT;\n","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nclass VectorContext {\n  /**\n   * Render a geometry with a custom renderer.\n   *\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   * @param {number} [index] Render order index.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer, index) {}\n\n  /**\n   * Render a geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n   */\n  drawGeometry(geometry) {}\n\n  /**\n   * Set the rendering style.\n   *\n   * @param {import(\"../style/Style.js\").default} style The rendering style.\n   */\n  setStyle(style) {}\n\n  /**\n   * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawCircle(circleGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../style/Style.js\").default} style Style.\n   * @param {number} [index] Render order index.\n   */\n  drawFeature(feature, style, index) {}\n\n  /**\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawGeometryCollection(geometryCollectionGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawLineString(lineStringGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiPoint(multiPointGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawPoint(pointGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawPolygon(polygonGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawText(geometry, feature, index) {}\n\n  /**\n   * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {}\n\n  /**\n   * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with a text style.\n   */\n  setImageStyle(imageStyle, declutterImageWithText) {}\n\n  /**\n   * @param {import(\"../style/Text.js\").default} textStyle Text style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with an image style.\n   */\n  setTextStyle(textStyle, declutterImageWithText) {}\n}\n\nexport default VectorContext;\n","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12,\n};\n\n/**\n * @type {Array<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\nexport default Instruction;\n","/**\n * @module ol/render/canvas/Builder\n */\nimport {equals, reverseSubArray} from '../../array.js';\nimport {asColorLike} from '../../colorlike.js';\nimport Relationship from '../../extent/Relationship.js';\nimport {\n  buffer,\n  clone,\n  containsCoordinate,\n  coordinateRelationship,\n} from '../../extent.js';\nimport {\n  inflateCoordinates,\n  inflateCoordinatesArray,\n  inflateMultiCoordinatesArray,\n} from '../../geom/flat/inflate.js';\nimport VectorContext from '../VectorContext.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../canvas.js';\nimport CanvasInstruction from './Instruction.js';\n\nclass CanvasBuilder extends VectorContext {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.tmpCoordinate_ = [];\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n  }\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  applyPixelRatio(dashArray) {\n    const pixelRatio = this.pixelRatio;\n    return pixelRatio == 1\n      ? dashArray\n      : dashArray.map(function (dash) {\n          return dash * pixelRatio;\n        });\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @protected\n   * @return {number} My end\n   */\n  appendFlatPointCoordinates(flatCoordinates, stride) {\n    const extent = this.getBufferedMaxExtent();\n    const tmpCoord = this.tmpCoordinate_;\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      tmpCoord[0] = flatCoordinates[i];\n      tmpCoord[1] = flatCoordinates[i + 1];\n      if (containsCoordinate(extent, tmpCoord)) {\n        coordinates[myEnd++] = tmpCoord[0];\n        coordinates[myEnd++] = tmpCoord[1];\n      }\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  appendFlatLineCoordinates(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    closed,\n    skipFirst,\n  ) {\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    const extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    let lastXCoord = flatCoordinates[offset];\n    let lastYCoord = flatCoordinates[offset + 1];\n    const nextCoord = this.tmpCoordinate_;\n    let skipped = true;\n\n    let i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          coordinates[myEnd++] = lastXCoord;\n          coordinates[myEnd++] = lastYCoord;\n          skipped = false;\n        }\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n      } else if (nextRel === Relationship.INTERSECTING) {\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastXCoord = nextCoord[0];\n      lastYCoord = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      coordinates[myEnd++] = lastXCoord;\n      coordinates[myEnd++] = lastYCoord;\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} builderEnds Builder ends.\n   * @return {number} Offset.\n   */\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, builderEnds) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        false,\n        false,\n      );\n      builderEnds.push(builderEnd);\n      offset = end;\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer, index) {\n    this.beginGeometry(geometry, feature, index);\n\n    const type = geometry.getType();\n    const stride = geometry.getStride();\n    const builderBegin = this.coordinates.length;\n\n    let flatCoordinates, builderEnd, builderEnds, builderEndss;\n    let offset;\n\n    switch (type) {\n      case 'MultiPolygon':\n        flatCoordinates =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getOrientedFlatCoordinates();\n        builderEndss = [];\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        offset = 0;\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          const myEnds = [];\n          offset = this.drawCustomCoordinates_(\n            flatCoordinates,\n            offset,\n            endss[i],\n            stride,\n            myEnds,\n          );\n          builderEndss.push(myEnds);\n        }\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          renderer,\n          inflateMultiCoordinatesArray,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateMultiCoordinatesArray,\n          index,\n        ]);\n        break;\n      case 'Polygon':\n      case 'MultiLineString':\n        builderEnds = [];\n        flatCoordinates =\n          type == 'Polygon'\n            ? /** @type {import(\"../../geom/Polygon.js\").default} */ (\n                geometry\n              ).getOrientedFlatCoordinates()\n            : geometry.getFlatCoordinates();\n        offset = this.drawCustomCoordinates_(\n          flatCoordinates,\n          0,\n          /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ).getEnds(),\n          stride,\n          builderEnds,\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          renderer,\n          inflateCoordinatesArray,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinatesArray,\n          index,\n        ]);\n        break;\n      case 'LineString':\n      case 'Circle':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatLineCoordinates(\n          flatCoordinates,\n          0,\n          flatCoordinates.length,\n          stride,\n          false,\n          false,\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          inflateCoordinates,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinates,\n          index,\n        ]);\n        break;\n      case 'MultiPoint':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n\n        if (builderEnd > builderBegin) {\n          this.instructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            renderer,\n            inflateCoordinates,\n            index,\n          ]);\n          this.hitDetectionInstructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            hitDetectionRenderer || renderer,\n            inflateCoordinates,\n            index,\n          ]);\n        }\n        break;\n      case 'Point':\n        flatCoordinates = geometry.getFlatCoordinates();\n        this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n        builderEnd = this.coordinates.length;\n\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          undefined,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          undefined,\n          index,\n        ]);\n        break;\n      default:\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} index Render order index\n   */\n  beginGeometry(geometry, feature, index) {\n    this.beginGeometryInstruction1_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n      index,\n    ];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n      index,\n    ];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    return {\n      instructions: this.instructions,\n      hitDetectionInstructions: this.hitDetectionInstructions,\n      coordinates: this.coordinates,\n    };\n  }\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  reverseHitDetectionInstructions() {\n    const hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    let i;\n    const n = hitDetectionInstructions.length;\n    let instruction;\n    let type;\n    let begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import('../canvas.js').FillStrokeState} [state] State.\n   * @return {import('../canvas.js').FillStrokeState} State.\n   */\n  fillStyleToState(\n    fillStyle,\n    state = /** @type {import('../canvas.js').FillStrokeState} */ ({}),\n  ) {\n    if (fillStyle) {\n      const fillStyleColor = fillStyle.getColor();\n      state.fillPatternScale =\n        fillStyleColor &&\n        typeof fillStyleColor === 'object' &&\n        'src' in fillStyleColor\n          ? this.pixelRatio\n          : 1;\n      state.fillStyle = asColorLike(\n        fillStyleColor ? fillStyleColor : defaultFillStyle,\n      );\n    } else {\n      state.fillStyle = undefined;\n    }\n    return state;\n  }\n\n  /**\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {import(\"../canvas.js\").FillStrokeState} State.\n   */\n  strokeStyleToState(\n    strokeStyle,\n    state = /** @type {import('../canvas.js').FillStrokeState} */ ({}),\n  ) {\n    if (strokeStyle) {\n      const strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(\n        strokeStyleColor ? strokeStyleColor : defaultStrokeStyle,\n      );\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap =\n        strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash.slice()\n        : defaultLineDash;\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset\n        ? strokeStyleLineDashOffset\n        : defaultLineDashOffset;\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin =\n        strokeStyleLineJoin !== undefined\n          ? strokeStyleLineJoin\n          : defaultLineJoin;\n      const strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth =\n        strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit =\n        strokeStyleMiterLimit !== undefined\n          ? strokeStyleMiterLimit\n          : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n    return state;\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   * @override\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    const state = this.state;\n    this.fillStyleToState(fillStyle, state);\n    this.strokeStyleToState(strokeStyle, state);\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Fill instruction.\n   */\n  createFill(state) {\n    const fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align and scale it!\n      fillInstruction.push(state.fillPatternScale);\n    }\n    return fillInstruction;\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    this.instructions.push(this.createStroke(state));\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  createStroke(state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle,\n      state.lineWidth * this.pixelRatio,\n      state.lineCap,\n      state.lineJoin,\n      state.miterLimit,\n      state.lineDash ? this.applyPixelRatio(state.lineDash) : null,\n      state.lineDashOffset * this.pixelRatio,\n    ];\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n   */\n  updateFillStyle(state, createFill) {\n    const fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      this.instructions.push(createFill.call(this, state));\n      state.currentFillStyle = fillStyle;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n   */\n  updateStrokeStyle(state, applyStroke) {\n    const strokeStyle = state.strokeStyle;\n    const lineCap = state.lineCap;\n    const lineDash = state.lineDash;\n    const lineDashOffset = state.lineDashOffset;\n    const lineJoin = state.lineJoin;\n    const lineWidth = state.lineWidth;\n    const miterLimit = state.miterLimit;\n    if (\n      state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash &&\n        !equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit\n    ) {\n      applyStroke.call(this, state);\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  endGeometry(feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  }\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  getBufferedMaxExtent() {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        const width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  }\n}\n\nexport default CanvasBuilder;\n","/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport {containsCoordinate} from '../../extent.js';\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\n\nclass CanvasImageBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.imagePixelRatio_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n    /**\n     * @private\n     * @type {import('../../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = undefined;\n\n    /**\n     * Data shared with a text builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawPoint(pointGeometry, feature, index) {\n    if (\n      !this.image_ ||\n      (this.maxExtent &&\n        !containsCoordinate(this.maxExtent, pointGeometry.getFlatCoordinates()))\n    ) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature, index);\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\n    const stride = pointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      1,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawMultiPoint(multiPointGeometry, feature, index) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature, index);\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    const filteredFlatCoordinates = [];\n    for (\n      let i = 0, ii = flatCoordinates.length;\n      i < ii;\n      i += multiPointGeometry.getStride()\n    ) {\n      if (\n        !this.maxExtent ||\n        containsCoordinate(this.maxExtent, flatCoordinates.slice(i, i + 2))\n      ) {\n        filteredFlatCoordinates.push(\n          flatCoordinates[i],\n          flatCoordinates[i + 1],\n        );\n      }\n    }\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(filteredFlatCoordinates, 2);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      1,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   * @override\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.imagePixelRatio_ = undefined;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @param {Object} [sharedData] Shared data.\n   * @override\n   */\n  setImageStyle(imageStyle, sharedData) {\n    const anchor = imageStyle.getAnchor();\n    const size = imageStyle.getSize();\n    const origin = imageStyle.getOrigin();\n    this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.hitDetectionImage_ = imageStyle.getHitDetectionImage();\n    this.image_ = imageStyle.getImage(this.pixelRatio);\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScaleArray();\n    this.width_ = size[0];\n    this.declutterMode_ = imageStyle.getDeclutterMode();\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasImageBuilder;\n","/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport {defaultLineDash, defaultLineDashOffset} from '../canvas.js';\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  strokeInstruction,\n} from './Instruction.js';\n\nclass CanvasLineStringBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatLineCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      false,\n      false,\n    );\n    const moveToLineToInstruction = [\n      CanvasInstruction.MOVE_TO_LINE_TO,\n      myBegin,\n      myEnd,\n    ];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  }\n\n  /**\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawLineString(lineStringGeometry, feature, index) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature, index);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction,\n    );\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n    );\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawMultiLineString(multiLineStringGeometry, feature, index) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature, index);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction,\n    );\n    const ends = multiLineStringGeometry.getEnds();\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(\n        flatCoordinates,\n        offset,\n        /** @type {number} */ (ends[i]),\n        stride,\n      );\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   * @override\n   */\n  finish() {\n    const state = this.state;\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @override\n   */\n  applyStroke(state) {\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    super.applyStroke(state);\n    this.instructions.push(beginPathInstruction);\n  }\n}\n\nexport default CanvasLineStringBuilder;\n","/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport {snap} from '../../geom/flat/simplify.js';\nimport {\n  defaultFillStyle,\n  defaultLineDash,\n  defaultLineDashOffset,\n} from '../canvas.js';\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  closePathInstruction,\n  fillInstruction,\n  strokeInstruction,\n} from './Instruction.js';\n\nclass CanvasPolygonBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\n    const state = this.state;\n    const fill = state.fillStyle !== undefined;\n    const stroke = state.strokeStyle !== undefined;\n    const numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (let i = 0; i < numEnds; ++i) {\n      const end = ends[i];\n      const myBegin = this.coordinates.length;\n      const myEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        true,\n        !stroke,\n      );\n      const moveToLineToInstruction = [\n        CanvasInstruction.MOVE_TO_LINE_TO,\n        myBegin,\n        myEnd,\n      ];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawCircle(circleGeometry, feature, index) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(circleGeometry, feature, index);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const flatCoordinates = circleGeometry.getFlatCoordinates();\n    const stride = circleGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    this.appendFlatLineCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      false,\n      false,\n    );\n    const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawPolygon(polygonGeometry, feature, index) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(polygonGeometry, feature, index);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const ends = polygonGeometry.getEnds();\n    const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    const stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(\n      flatCoordinates,\n      0,\n      /** @type {Array<number>} */ (ends),\n      stride,\n    );\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature, index) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(multiPolygonGeometry, feature, index);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const endss = multiPolygonGeometry.getEndss();\n    const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    const stride = multiPolygonGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(\n        flatCoordinates,\n        offset,\n        endss[i],\n        stride,\n      );\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   * @override\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    const tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      const coordinates = this.coordinates;\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n    return super.finish();\n  }\n\n  /**\n   * @private\n   */\n  setFillStrokeStyles_() {\n    const state = this.state;\n    this.updateFillStyle(state, this.createFill);\n    this.updateStrokeStyle(state, this.applyStroke);\n  }\n}\n\nexport default CanvasPolygonBuilder;\n","import {lerp} from '../../math.js';\n\n/**\n * Creates chunks of equal length from a linestring\n * @param {number} chunkLength Length of each chunk.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @return {Array<Array<number>>} Chunks of linestrings with stride 2.\n */\nexport function lineChunk(chunkLength, flatCoordinates, offset, end, stride) {\n  const chunks = [];\n  let cursor = offset;\n  let chunkM = 0;\n  let currentChunk = flatCoordinates.slice(offset, 2);\n  while (chunkM < chunkLength && cursor + stride < end) {\n    const [x1, y1] = currentChunk.slice(-2);\n    const x2 = flatCoordinates[cursor + stride];\n    const y2 = flatCoordinates[cursor + stride + 1];\n    const segmentLength = Math.sqrt(\n      (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1),\n    );\n    chunkM += segmentLength;\n    if (chunkM >= chunkLength) {\n      const m = (chunkLength - chunkM + segmentLength) / segmentLength;\n      const x = lerp(x1, x2, m);\n      const y = lerp(y1, y2, m);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      if (chunkM == chunkLength) {\n        cursor += stride;\n      }\n      chunkM = 0;\n    } else if (chunkM < chunkLength) {\n      currentChunk.push(\n        flatCoordinates[cursor + stride],\n        flatCoordinates[cursor + stride + 1],\n      );\n      cursor += stride;\n    } else {\n      const missing = segmentLength - chunkM;\n      const x = lerp(x1, x2, missing / segmentLength);\n      const y = lerp(y1, y2, missing / segmentLength);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      chunkM = 0;\n      cursor += stride;\n    }\n  }\n  if (chunkM > 0) {\n    chunks.push(currentChunk);\n  }\n  return chunks;\n}\n","/**\n * @module ol/geom/flat/straightchunk\n */\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n","/**\n * @module ol/render/canvas/TextBuilder\n */\nimport {asColorLike} from '../../colorlike.js';\nimport {intersects} from '../../extent.js';\nimport {lineChunk} from '../../geom/flat/linechunk.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\nimport {getUid} from '../../util.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultPadding,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n  registerFont,\n} from '../canvas.js';\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\n/**\n * @const\n * @type {{left: 0, center: 0.5, right: 1, top: 0, middle: 0.5, hanging: 0.2, alphabetic: 0.8, ideographic: 0.8, bottom: 1}}\n */\nexport const TEXT_ALIGN = {\n  'left': 0,\n  'center': 0.5,\n  'right': 1,\n  'top': 0,\n  'middle': 0.5,\n  'hanging': 0.2,\n  'alphabetic': 0.8,\n  'ideographic': 0.8,\n  'bottom': 1,\n};\n\nclass CanvasTextBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string|Array<string>}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textKeepUpright_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n    this.fillStates[defaultFillStyle] = {fillStyle: defaultFillStyle};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * @private\n     * @type {import('../../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = undefined;\n\n    /**\n     * Data shared with an image builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   * @override\n   */\n  finish() {\n    const instructions = super.finish();\n    instructions.textStates = this.textStates;\n    instructions.fillStates = this.fillStates;\n    instructions.strokeStates = this.strokeStates;\n    return instructions;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawText(geometry, feature, index) {\n    const fillState = this.textFillState_;\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    const coordinates = this.coordinates;\n    let begin = coordinates.length;\n\n    const geometryType = geometry.getType();\n    let flatCoordinates = null;\n    let stride = geometry.getStride();\n\n    if (\n      textState.placement === 'line' &&\n      (geometryType == 'LineString' ||\n        geometryType == 'MultiLineString' ||\n        geometryType == 'Polygon' ||\n        geometryType == 'MultiPolygon')\n    ) {\n      if (!intersects(this.maxExtent, geometry.getExtent())) {\n        return;\n      }\n      let ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      if (geometryType == 'LineString') {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == 'MultiLineString') {\n        ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry\n        ).getEnds();\n      } else if (geometryType == 'Polygon') {\n        ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n          .getEnds()\n          .slice(0, 1);\n      } else if (geometryType == 'MultiPolygon') {\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        ends = [];\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature, index);\n      const repeat = textState.repeat;\n      const textAlign = repeat ? undefined : textState.textAlign;\n      // No `justify` support for line placement.\n      let flatOffset = 0;\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\n        let chunks;\n        if (repeat) {\n          chunks = lineChunk(\n            repeat * this.resolution,\n            flatCoordinates,\n            flatOffset,\n            ends[o],\n            stride,\n          );\n        } else {\n          chunks = [flatCoordinates.slice(flatOffset, ends[o])];\n        }\n        for (let c = 0, cc = chunks.length; c < cc; ++c) {\n          const chunk = chunks[c];\n          let chunkBegin = 0;\n          let chunkEnd = chunk.length;\n          if (textAlign == undefined) {\n            const range = matchingChunk(\n              textState.maxAngle,\n              chunk,\n              0,\n              chunk.length,\n              2,\n            );\n            chunkBegin = range[0];\n            chunkEnd = range[1];\n          }\n          for (let i = chunkBegin; i < chunkEnd; i += stride) {\n            coordinates.push(chunk[i], chunk[i + 1]);\n          }\n          const end = coordinates.length;\n          flatOffset = ends[o];\n          this.drawChars_(begin, end);\n          begin = end;\n        }\n      }\n      this.endGeometry(feature);\n    } else {\n      let geometryWidths = textState.overflow ? null : [];\n      switch (geometryType) {\n        case 'Point':\n        case 'MultiPoint':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n              geometry\n            ).getFlatCoordinates();\n          break;\n        case 'LineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/LineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoint();\n          break;\n        case 'Circle':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Circle.js\").default} */ (\n              geometry\n            ).getCenter();\n          break;\n        case 'MultiLineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoints();\n          stride = 2;\n          break;\n        case 'Polygon':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Polygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoint();\n          if (!textState.overflow) {\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\n          }\n          stride = 3;\n          break;\n        case 'MultiPolygon':\n          const interiorPoints =\n            /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (let i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (!textState.overflow) {\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n            }\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n          if (flatCoordinates.length === 0) {\n            return;\n          }\n          stride = 2;\n          break;\n        default:\n      }\n      const end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (end === begin) {\n        return;\n      }\n      if (\n        geometryWidths &&\n        (end - begin) / 2 !== flatCoordinates.length / stride\n      ) {\n        let beg = begin / 2;\n        geometryWidths = geometryWidths.filter((w, i) => {\n          const keep =\n            coordinates[(beg + i) * 2] === flatCoordinates[i * stride] &&\n            coordinates[(beg + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n          if (!keep) {\n            --beg;\n          }\n          return keep;\n        });\n      }\n\n      this.saveTextStates_();\n\n      const backgroundFill = textState.backgroundFill\n        ? this.createFill(this.fillStyleToState(textState.backgroundFill))\n        : null;\n      const backgroundStroke = textState.backgroundStroke\n        ? this.createStroke(this.strokeStyleToState(textState.backgroundStroke))\n        : null;\n\n      this.beginGeometry(geometry, feature, index);\n\n      // adjust padding for negative scale\n      let padding = textState.padding;\n      if (\n        padding != defaultPadding &&\n        (textState.scale[0] < 0 || textState.scale[1] < 0)\n      ) {\n        let p0 = textState.padding[0];\n        let p1 = textState.padding[1];\n        let p2 = textState.padding[2];\n        let p3 = textState.padding[3];\n        if (textState.scale[0] < 0) {\n          p1 = -p1;\n          p3 = -p3;\n        }\n        if (textState.scale[1] < 0) {\n          p0 = -p0;\n          p2 = -p2;\n        }\n        padding = [p0, p1, p2, p3];\n      }\n\n      // The image is unknown at this stage so we pass null; it will be computed at render time.\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n      // render time.\n      const pixelRatio = this.pixelRatio;\n      this.instructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [1, 1],\n        NaN,\n        this.declutterMode_,\n        this.declutterImageWithText_,\n        padding == defaultPadding\n          ? defaultPadding\n          : padding.map(function (p) {\n              return p * pixelRatio;\n            }),\n        backgroundFill,\n        backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      const scale = 1 / pixelRatio;\n      // Set default fill for hit detection background\n      const hitDetectionBackgroundFill = backgroundFill\n        ? backgroundFill.slice(0)\n        : null;\n      if (hitDetectionBackgroundFill) {\n        hitDetectionBackgroundFill[1] = defaultFillStyle;\n      }\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [scale, scale],\n        NaN,\n        this.declutterMode_,\n        this.declutterImageWithText_,\n        padding,\n        hitDetectionBackgroundFill,\n        backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_ ? defaultFillStyle : this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n\n      this.endGeometry(feature);\n    }\n  }\n\n  /**\n   * @private\n   */\n  saveTextStates_() {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    const fillState = this.textFillState_;\n\n    const strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = {\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash,\n        };\n      }\n    }\n    const textKey = this.textKey_;\n    if (!(textKey in this.textStates)) {\n      this.textStates[textKey] = {\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        justify: textState.justify,\n        textBaseline: textState.textBaseline || defaultTextBaseline,\n        scale: textState.scale,\n      };\n    }\n    const fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = {\n          fillStyle: fillState.fillStyle,\n        };\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  drawChars_(begin, end) {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n\n    const strokeKey = this.strokeKey_;\n    const textKey = this.textKey_;\n    const fillKey = this.fillKey_;\n    this.saveTextStates_();\n\n    const pixelRatio = this.pixelRatio;\n    const baseline = TEXT_ALIGN[textState.textBaseline];\n\n    const offsetY = this.textOffsetY_ * pixelRatio;\n    const text = this.text_;\n    const strokeWidth = strokeState\n      ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n      : 0;\n\n    this.instructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1,\n      this.declutterMode_,\n      this.textKeepUpright_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey ? defaultFillStyle : fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1 / pixelRatio,\n      this.declutterMode_,\n      this.textKeepUpright_,\n    ]);\n  }\n\n  /**\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @param {Object} [sharedData] Shared data.\n   * @override\n   */\n  setTextStyle(textStyle, sharedData) {\n    let textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = null;\n        this.textFillState_ = fillState;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n          this.textFillState_ = fillState;\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle,\n        );\n      }\n\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = null;\n        this.textStrokeState_ = strokeState;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n          this.textStrokeState_ = strokeState;\n        }\n        const lineDash = textStrokeStyle.getLineDash();\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\n        const lineWidth = textStrokeStyle.getWidth();\n        const miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle,\n        );\n      }\n\n      textState = this.textState_;\n      const font = textStyle.getFont() || defaultFont;\n      registerFont(font);\n      const textScale = textStyle.getScaleArray();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.repeat = textStyle.getRepeat();\n      textState.justify = textStyle.getJustify();\n      textState.textBaseline =\n        textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? [1, 1] : textScale;\n\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textKeepUpright = textStyle.getKeepUpright();\n      const textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ =\n        textRotateWithView === undefined ? false : textRotateWithView;\n      this.textKeepUpright_ =\n        textKeepUpright === undefined ? true : textKeepUpright;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState\n        ? (typeof strokeState.strokeStyle == 'string'\n            ? strokeState.strokeStyle\n            : getUid(strokeState.strokeStyle)) +\n          strokeState.lineCap +\n          strokeState.lineDashOffset +\n          '|' +\n          strokeState.lineWidth +\n          strokeState.lineJoin +\n          strokeState.miterLimit +\n          '[' +\n          strokeState.lineDash.join() +\n          ']'\n        : '';\n      this.textKey_ =\n        textState.font +\n        textState.scale +\n        (textState.textAlign || '?') +\n        (textState.repeat || '?') +\n        (textState.justify || '?') +\n        (textState.textBaseline || '?');\n      this.fillKey_ =\n        fillState && fillState.fillStyle\n          ? typeof fillState.fillStyle == 'string'\n            ? fillState.fillStyle\n            : '|' + getUid(fillState.fillStyle)\n          : '';\n    }\n    this.declutterMode_ = textStyle.getDeclutterMode();\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasTextBuilder;\n","/**\n * @module ol/render/canvas/BuilderGroup\n */\n\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n\n/**\n * @type {Object<import(\"../canvas.js\").BuilderType, typeof Builder>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder,\n};\n\nclass BuilderGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n\n  /**\n   * @return {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  finish() {\n    const builderInstructions = {};\n    for (const zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      const builders = this.buildersByZIndex_[zKey];\n      for (const builderKey in builders) {\n        const builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  }\n\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"../canvas.js\").BuilderType} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  getBuilder(zIndex, builderType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[builderType];\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(\n        this.tolerance_,\n        this.maxExtent_,\n        this.resolution_,\n        this.pixelRatio_,\n      );\n      replays[builderType] = replay;\n    }\n    return replay;\n  }\n}\n\nexport default BuilderGroup;\n","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\nimport {rotate} from './transform.js';\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @param {boolean} keepUpright Whether the text needs to be kept upright\n * @return {Array<Array<*>>|null} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  text,\n  startM,\n  maxAngle,\n  scale,\n  measureAndCacheTextWidth,\n  font,\n  cache,\n  rotation,\n  keepUpright = true,\n) {\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let x1 = 0;\n  let y1 = 0;\n  let segmentLength = 0;\n  let segmentM = 0;\n\n  function advance() {\n    x1 = x2;\n    y1 = y2;\n    offset += stride;\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    segmentM += segmentLength;\n    segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  }\n  do {\n    advance();\n  } while (offset < end - stride && segmentM + segmentLength < startM);\n\n  let interpolate =\n    segmentLength === 0 ? 0 : (startM - segmentM) / segmentLength;\n  const beginX = lerp(x1, x2, interpolate);\n  const beginY = lerp(y1, y2, interpolate);\n\n  const startOffset = offset - stride;\n  const startLength = segmentM;\n  const endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\n  while (offset < end - stride && segmentM + segmentLength < endM) {\n    advance();\n  }\n  interpolate = segmentLength === 0 ? 0 : (endM - segmentM) / segmentLength;\n  const endX = lerp(x1, x2, interpolate);\n  const endY = lerp(y1, y2, interpolate);\n\n  // Keep text upright if the option is selected\n  let reverse = false;\n  if (keepUpright) {\n    if (rotation) {\n      const flat = [beginX, beginY, endX, endY];\n      rotate(flat, 0, 4, 2, rotation, flat, flat);\n      reverse = flat[0] > flat[2];\n    } else {\n      reverse = beginX > endX;\n    }\n  }\n\n  const PI = Math.PI;\n  const result = [];\n  const singleSegment = startOffset + stride === offset;\n\n  offset = startOffset;\n  segmentLength = 0;\n  segmentM = startLength;\n  x2 = flatCoordinates[offset];\n  y2 = flatCoordinates[offset + 1];\n\n  let previousAngle;\n  // All on the same segment\n  if (singleSegment) {\n    advance();\n\n    previousAngle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      previousAngle += previousAngle > 0 ? -PI : PI;\n    }\n    const x = (endX + beginX) / 2;\n    const y = (endY + beginY) / 2;\n    result[0] = [x, y, (endM - startM) / 2, previousAngle, text];\n    return result;\n  }\n\n  // rendering across line segments\n  text = text.replace(/\\n/g, ' '); // ensure rendering in single-line as all calculations below don't handle multi-lines\n\n  for (let i = 0, ii = text.length; i < ii; ) {\n    advance();\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -PI : PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    previousAngle = angle;\n\n    const iStart = i;\n    let charLength = 0;\n    for (; i < ii; ++i) {\n      const index = reverse ? ii - i - 1 : i;\n      const len = scale * measureAndCacheTextWidth(font, text[index], cache);\n      if (\n        offset + stride < end &&\n        segmentM + segmentLength < startM + charLength + len / 2\n      ) {\n        break;\n      }\n      charLength += len;\n    }\n    if (i === iStart) {\n      continue;\n    }\n    const chars = reverse\n      ? text.substring(ii - iStart, ii - i)\n      : text.substring(iStart, i);\n    interpolate =\n      segmentLength === 0\n        ? 0\n        : (startM + charLength / 2 - segmentM) / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    result.push([x, y, charLength / 2, angle, chars]);\n    startM += charLength;\n  }\n  return result;\n}\n","/**\n * @module ol/render/canvas/ZIndexContext\n */\n\nimport {getSharedCanvasContext2D} from '../../dom.js';\n\n/** @typedef {CanvasRenderingContext2D|OffscreenCanvasRenderingContext2D & {globalAlpha: any}} ZIndexContextProxy */\n\n/**\n * @extends {CanvasRenderingContext2D}\n */\nclass ZIndexContext {\n  constructor() {\n    /**\n     * @private\n     * @type {Array<Array<*>>}\n     */\n    this.instructions_ = [];\n    /**\n     * @type {number}\n     */\n    this.zIndex = 0;\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offset_ = 0;\n\n    /**\n     * @private\n     * @type {ZIndexContextProxy}\n     */\n    this.context_ = /** @type {ZIndexContextProxy} */ (\n      new Proxy(getSharedCanvasContext2D(), {\n        get: (target, property) => {\n          if (\n            typeof (/** @type {*} */ (getSharedCanvasContext2D())[property]) !==\n            'function'\n          ) {\n            // we only accept calling functions on the proxy, not accessing properties\n            return undefined;\n          }\n          this.push_(property);\n          return this.pushMethodArgs_;\n        },\n        set: (target, property, value) => {\n          this.push_(property, value);\n          return true;\n        },\n      })\n    );\n  }\n\n  /**\n   * @param {...*} args Arguments to push to the instructions array.\n   * @private\n   */\n  push_(...args) {\n    const instructions = this.instructions_;\n    const index = this.zIndex + this.offset_;\n    if (!instructions[index]) {\n      instructions[index] = [];\n    }\n    instructions[index].push(...args);\n  }\n\n  /**\n   * @private\n   * @param {...*} args Args.\n   * @return {ZIndexContext} This.\n   */\n  pushMethodArgs_ = (...args) => {\n    this.push_(args);\n    return this;\n  };\n\n  /**\n   * Push a function that renders to the context directly.\n   * @param {function(CanvasRenderingContext2D): void} render Function.\n   */\n  pushFunction(render) {\n    this.push_(render);\n  }\n\n  /**\n   * Get a proxy for CanvasRenderingContext2D which does not support getting state\n   * (e.g. `context.globalAlpha`, which will return `undefined`). To set state, if it relies on a\n   * previous state (e.g. `context.globalAlpha = context.globalAlpha / 2`), set a function,\n   * e.g. `context.globalAlpha = (context) => context.globalAlpha / 2`.\n   * @return {ZIndexContextProxy} Context.\n   */\n  getContext() {\n    return this.context_;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D|OffscreenCanvasRenderingContext2D} context Context.\n   */\n  draw(context) {\n    this.instructions_.forEach((instructionsAtIndex) => {\n      for (let i = 0, ii = instructionsAtIndex.length; i < ii; ++i) {\n        const property = instructionsAtIndex[i];\n        if (typeof property === 'function') {\n          property(context);\n          continue;\n        }\n        const instructionAtIndex = instructionsAtIndex[++i];\n        if (typeof (/** @type {*} */ (context)[property]) === 'function') {\n          /** @type {*} */ (context)[property](...instructionAtIndex);\n        } else {\n          if (typeof instructionAtIndex === 'function') {\n            /** @type {*} */ (context)[property] = instructionAtIndex(context);\n            continue;\n          }\n          /** @type {*} */ (context)[property] = instructionAtIndex;\n        }\n      }\n    });\n  }\n\n  clear() {\n    this.instructions_.length = 0;\n    this.zIndex = 0;\n    this.offset_ = 0;\n  }\n\n  /**\n   * Offsets the zIndex by the highest current zIndex. Useful for rendering multiple worlds or tiles, to\n   * avoid conflicting context.clip() or context.save()/restore() calls.\n   */\n  offset() {\n    this.offset_ = this.instructions_.length;\n    this.zIndex = 0;\n  }\n}\n\nexport default ZIndexContext;\n","/**\n * @module ol/render/canvas/Executor\n */\nimport {equals} from '../../array.js';\nimport {createEmpty, createOrUpdate, intersects} from '../../extent.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  setFromArray as transformSetFromArray,\n} from '../../transform.js';\nimport ZIndexContext from '../canvas/ZIndexContext.js';\nimport {\n  defaultPadding,\n  defaultTextAlign,\n  defaultTextBaseline,\n  drawImageOrLabel,\n  getTextDimensions,\n  measureAndCacheTextWidth,\n} from '../canvas.js';\nimport CanvasInstruction from './Instruction.js';\nimport {TEXT_ALIGN} from './TextBuilder.js';\n\n/**\n * @typedef {import('../../structs/RBush.js').Entry<import('../../Feature.js').FeatureLike>} DeclutterEntry\n */\n\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX DrawImageX.\n * @property {number} drawImageY DrawImageY.\n * @property {number} drawImageW DrawImageW.\n * @property {number} drawImageH DrawImageH.\n * @property {number} originX OriginX.\n * @property {number} originY OriginY.\n * @property {Array<number>} scale Scale.\n * @property {DeclutterEntry} declutterBox DeclutterBox.\n * @property {import(\"../../transform.js\").Transform} canvasTransform CanvasTransform.\n */\n\n/**\n * @typedef {{0: CanvasRenderingContext2D|OffscreenCanvasRenderingContext2D, 1: import('../../size.js').Size, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, import(\"../../style/Style.js\").DeclutterMode): T} FeatureCallback\n */\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nconst tmpExtent = createEmpty();\n\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p4 = [];\n\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {DeclutterEntry} Declutter rbush entry.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n  return replayImageOrLabelArgs[3].declutterBox;\n}\n\nconst rtlRegEx = new RegExp(\n  /* eslint-disable prettier/prettier */\n  '[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n  ']'\n  /* eslint-enable prettier/prettier */\n);\n\n/**\n * @param {string} text Text.\n * @param {CanvasTextAlign} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n  if (align === 'start') {\n    align = rtlRegEx.test(text) ? 'right' : 'left';\n  } else if (align === 'end') {\n    align = rtlRegEx.test(text) ? 'left' : 'right';\n  }\n  return TEXT_ALIGN[align];\n}\n\n/**\n * @param {Array<string>} acc Accumulator.\n * @param {string} line Line of text.\n * @param {number} i Index\n * @return {Array<string>} Accumulator.\n */\nfunction createTextChunks(acc, line, i) {\n  if (i > 0) {\n    acc.push('\\n', '');\n  }\n  acc.push(line, '');\n  return acc;\n}\n\n/**\n * Converts rich text to plain text for text along lines.\n * @param {string} result The resulting plain text.\n * @param {string} part Item of the rich text array.\n * @param {number} index Index of the item in the rich text array.\n * @return {string} The resulting plain text.\n */\nfunction richTextToPlainText(result, part, index) {\n  if (index % 2 === 0) {\n    result += part;\n  }\n  return result;\n}\n\nclass Executor {\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions.\n   * @param {boolean} [deferredRendering] Enable deferred rendering.\n   */\n  constructor(\n    resolution,\n    pixelRatio,\n    overlaps,\n    instructions,\n    deferredRendering,\n  ) {\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.alignAndScaleFill_;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = instructions.instructions;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = instructions.coordinates;\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = instructions.fillStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = instructions.strokeStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = instructions.textStates || {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../canvas.js\").Label>}\n     */\n    this.labels_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas/ZIndexContext.js\").default}\n     */\n    this.zIndexContext_ = deferredRendering ? new ZIndexContext() : null;\n  }\n\n  /**\n   * @return {ZIndexContext} ZIndex context.\n   */\n  getZIndexContext() {\n    return this.zIndexContext_;\n  }\n\n  /**\n   * @param {string|Array<string>} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {import(\"../canvas.js\").Label} Label.\n   */\n  createLabel(text, textKey, fillKey, strokeKey) {\n    const key = text + textKey + fillKey + strokeKey;\n    if (this.labels_[key]) {\n      return this.labels_[key];\n    }\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n    const fillState = fillKey ? this.fillStates[fillKey] : null;\n    const textState = this.textStates[textKey];\n    const pixelRatio = this.pixelRatio;\n    const scale = [\n      textState.scale[0] * pixelRatio,\n      textState.scale[1] * pixelRatio,\n    ];\n    const align = textState.justify\n      ? TEXT_ALIGN[textState.justify]\n      : horizontalTextAlign(\n          Array.isArray(text) ? text[0] : text,\n          textState.textAlign || defaultTextAlign,\n        );\n    const strokeWidth =\n      strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const chunks = Array.isArray(text)\n      ? text\n      : String(text).split('\\n').reduce(createTextChunks, []);\n\n    const {width, height, widths, heights, lineWidths} = getTextDimensions(\n      textState,\n      chunks,\n    );\n    const renderWidth = width + strokeWidth;\n    const contextInstructions = [];\n    // make canvas 2 pixels wider to account for italic text width measurement errors\n    const w = (renderWidth + 2) * scale[0];\n    const h = (height + strokeWidth) * scale[1];\n    /** @type {import(\"../canvas.js\").Label} */\n    const label = {\n      width: w < 0 ? Math.floor(w) : Math.ceil(w),\n      height: h < 0 ? Math.floor(h) : Math.ceil(h),\n      contextInstructions: contextInstructions,\n    };\n    if (scale[0] != 1 || scale[1] != 1) {\n      contextInstructions.push('scale', scale);\n    }\n    if (strokeKey) {\n      contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n      contextInstructions.push('lineWidth', strokeWidth);\n      contextInstructions.push('lineCap', strokeState.lineCap);\n      contextInstructions.push('lineJoin', strokeState.lineJoin);\n      contextInstructions.push('miterLimit', strokeState.miterLimit);\n      contextInstructions.push('setLineDash', [strokeState.lineDash]);\n      contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n    }\n    if (fillKey) {\n      contextInstructions.push('fillStyle', fillState.fillStyle);\n    }\n    contextInstructions.push('textBaseline', 'middle');\n    contextInstructions.push('textAlign', 'center');\n    const leftRight = 0.5 - align;\n    let x = align * renderWidth + leftRight * strokeWidth;\n    const strokeInstructions = [];\n    const fillInstructions = [];\n    let lineHeight = 0;\n    let lineOffset = 0;\n    let widthHeightIndex = 0;\n    let lineWidthIndex = 0;\n    let previousFont;\n    for (let i = 0, ii = chunks.length; i < ii; i += 2) {\n      const text = chunks[i];\n      if (text === '\\n') {\n        lineOffset += lineHeight;\n        lineHeight = 0;\n        x = align * renderWidth + leftRight * strokeWidth;\n        ++lineWidthIndex;\n        continue;\n      }\n      const font = chunks[i + 1] || textState.font;\n      if (font !== previousFont) {\n        if (strokeKey) {\n          strokeInstructions.push('font', font);\n        }\n        if (fillKey) {\n          fillInstructions.push('font', font);\n        }\n        previousFont = font;\n      }\n      lineHeight = Math.max(lineHeight, heights[widthHeightIndex]);\n      const fillStrokeArgs = [\n        text,\n        x +\n          leftRight * widths[widthHeightIndex] +\n          align * (widths[widthHeightIndex] - lineWidths[lineWidthIndex]),\n        0.5 * (strokeWidth + lineHeight) + lineOffset,\n      ];\n      x += widths[widthHeightIndex];\n      if (strokeKey) {\n        strokeInstructions.push('strokeText', fillStrokeArgs);\n      }\n      if (fillKey) {\n        fillInstructions.push('fillText', fillStrokeArgs);\n      }\n      ++widthHeightIndex;\n    }\n    Array.prototype.push.apply(contextInstructions, strokeInstructions);\n    Array.prototype.push.apply(contextInstructions, fillInstructions);\n    this.labels_[key] = label;\n    return label;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  replayTextBackground_(\n    context,\n    p1,\n    p2,\n    p3,\n    p4,\n    fillInstruction,\n    strokeInstruction,\n  ) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignAndScaleFill_ = /** @type {number} */ (fillInstruction[2]);\n      context.fillStyle = /** @type {string} */ (fillInstruction[1]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(\n        context,\n        /** @type {Array<*>} */ (strokeInstruction),\n      );\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} sheetWidth Width of the sprite sheet.\n   * @param {number} sheetHeight Height of the sprite sheet.\n   * @param {number} centerX X.\n   * @param {number} centerY Y.\n   * @param {number} width Width.\n   * @param {number} height Height.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {Array<number>} padding Padding.\n   * @param {boolean} fillStroke Background fill or stroke.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n   */\n  calculateImageOrLabelDimensions_(\n    sheetWidth,\n    sheetHeight,\n    centerX,\n    centerY,\n    width,\n    height,\n    anchorX,\n    anchorY,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    padding,\n    fillStroke,\n    feature,\n  ) {\n    anchorX *= scale[0];\n    anchorY *= scale[1];\n    let x = centerX - anchorX;\n    let y = centerY - anchorY;\n\n    const w = width + originX > sheetWidth ? sheetWidth - originX : width;\n    const h = height + originY > sheetHeight ? sheetHeight - originY : height;\n    const boxW = padding[3] + w * scale[0] + padding[1];\n    const boxH = padding[0] + h * scale[1] + padding[2];\n    const boxX = x - padding[3];\n    const boxY = y - padding[0];\n\n    if (fillStroke || rotation !== 0) {\n      p1[0] = boxX;\n      p4[0] = boxX;\n      p1[1] = boxY;\n      p2[1] = boxY;\n      p2[0] = boxX + boxW;\n      p3[0] = p2[0];\n      p3[1] = boxY + boxH;\n      p4[1] = p3[1];\n    }\n\n    let transform;\n    if (rotation !== 0) {\n      transform = composeTransform(\n        createTransform(),\n        centerX,\n        centerY,\n        1,\n        1,\n        rotation,\n        -centerX,\n        -centerY,\n      );\n\n      applyTransform(transform, p1);\n      applyTransform(transform, p2);\n      applyTransform(transform, p3);\n      applyTransform(transform, p4);\n      createOrUpdate(\n        Math.min(p1[0], p2[0], p3[0], p4[0]),\n        Math.min(p1[1], p2[1], p3[1], p4[1]),\n        Math.max(p1[0], p2[0], p3[0], p4[0]),\n        Math.max(p1[1], p2[1], p3[1], p4[1]),\n        tmpExtent,\n      );\n    } else {\n      createOrUpdate(\n        Math.min(boxX, boxX + boxW),\n        Math.min(boxY, boxY + boxH),\n        Math.max(boxX, boxX + boxW),\n        Math.max(boxY, boxY + boxH),\n        tmpExtent,\n      );\n    }\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    return {\n      drawImageX: x,\n      drawImageY: y,\n      drawImageW: w,\n      drawImageH: h,\n      originX: originX,\n      originY: originY,\n      declutterBox: {\n        minX: tmpExtent[0],\n        minY: tmpExtent[1],\n        maxX: tmpExtent[2],\n        maxY: tmpExtent[3],\n        value: feature,\n      },\n      canvasTransform: transform,\n      scale: scale,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scaled canvas size.\n   * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n   * @param {ImageOrLabelDimensions} dimensions Dimensions.\n   * @param {number} opacity Opacity.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   * @return {boolean} The image or label was rendered.\n   */\n  replayImageOrLabel_(\n    context,\n    scaledCanvasSize,\n    imageOrLabel,\n    dimensions,\n    opacity,\n    fillInstruction,\n    strokeInstruction,\n  ) {\n    const fillStroke = !!(fillInstruction || strokeInstruction);\n\n    const box = dimensions.declutterBox;\n    const strokePadding = strokeInstruction\n      ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n      : 0;\n    const intersects =\n      box.minX - strokePadding <= scaledCanvasSize[0] &&\n      box.maxX + strokePadding >= 0 &&\n      box.minY - strokePadding <= scaledCanvasSize[1] &&\n      box.maxY + strokePadding >= 0;\n\n    if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(\n          context,\n          p1,\n          p2,\n          p3,\n          p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction),\n        );\n      }\n      drawImageOrLabel(\n        context,\n        dimensions.canvasTransform,\n        opacity,\n        imageOrLabel,\n        dimensions.originX,\n        dimensions.originY,\n        dimensions.drawImageW,\n        dimensions.drawImageH,\n        dimensions.drawImageX,\n        dimensions.drawImageY,\n        dimensions.scale,\n      );\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D|OffscreenCanvasRenderingContext2D} context Context.\n   */\n  fill_(context) {\n    const alignAndScale = this.alignAndScaleFill_;\n    if (alignAndScale) {\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\n      const repeatSize = 512 * this.pixelRatio;\n      context.save();\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      if (alignAndScale !== 1) {\n        context.scale(alignAndScale, alignAndScale);\n      }\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (alignAndScale) {\n      context.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D|OffscreenCanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  setStrokeStyle_(context, instruction) {\n    context.strokeStyle =\n      /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    if (!instruction[1]) {\n      return;\n    }\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    context.lineDashOffset = /** @type {number} */ (instruction[7]);\n    context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n  }\n\n  /**\n   * @private\n   * @param {string|Array<string>} text The text to draw.\n   * @param {string} textKey The key of the text state.\n   * @param {string} strokeKey The key for the stroke state.\n   * @param {string} fillKey The key for the fill state.\n   * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n   */\n  drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey) {\n    const textState = this.textStates[textKey];\n\n    const label = this.createLabel(text, textKey, fillKey, strokeKey);\n\n    const strokeState = this.strokeStates[strokeKey];\n    const pixelRatio = this.pixelRatio;\n    const align = horizontalTextAlign(\n      Array.isArray(text) ? text[0] : text,\n      textState.textAlign || defaultTextAlign,\n    );\n    const baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n    const strokeWidth =\n      strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    // Remove the 2 pixels we added in createLabel() for the anchor\n    const width = label.width / pixelRatio - 2 * textState.scale[0];\n    const anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n    const anchorY =\n      (baseline * label.height) / pixelRatio +\n      2 * (0.5 - baseline) * strokeWidth;\n\n    return {\n      label: label,\n      anchorX: anchorX,\n      anchorY: anchorY,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D|OffscreenCanvasRenderingContext2D} context Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scaled canvas size\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @param {import(\"rbush\").default<DeclutterEntry>} [declutterTree] Declutter tree.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  execute_(\n    context,\n    scaledCanvasSize,\n    transform,\n    instructions,\n    snapToPixel,\n    featureCallback,\n    hitExtent,\n    declutterTree,\n  ) {\n    const zIndexContext = this.zIndexContext_;\n    /** @type {Array<number>} */\n    let pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates,\n        0,\n        this.coordinates.length,\n        2,\n        transform,\n        this.pixelCoordinates_,\n      );\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    let i = 0; // instruction index\n    const ii = instructions.length; // end of instructions\n    let d = 0; // data index\n    let dd; // end of per-instruction data\n    let anchorX,\n      anchorY,\n      /** @type {import('../../style/Style.js').DeclutterMode} */\n      declutterMode,\n      prevX,\n      prevY,\n      roundX,\n      roundY,\n      image,\n      text,\n      textKey,\n      strokeKey,\n      fillKey;\n    let pendingFill = 0;\n    let pendingStroke = 0;\n    const coordinateCache = this.coordinateCache_;\n    const viewRotation = this.viewRotation_;\n    const viewRotationFromTransform =\n      Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n\n    const state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation,\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    const batchSize =\n      this.instructions != instructions || this.overlaps ? 0 : 200;\n    let /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n    let x, y, currentGeometry;\n    while (i < ii) {\n      const instruction = instructions[i];\n      const type = /** @type {import(\"./Instruction.js\").default} */ (\n        instruction[0]\n      );\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n            instruction[1]\n          );\n          currentGeometry = instruction[3];\n          if (!feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (\n            hitExtent !== undefined &&\n            !intersects(hitExtent, currentGeometry.getExtent())\n          ) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          if (zIndexContext) {\n            zIndexContext.zIndex = instruction[4];\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = NaN;\n            prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          const x1 = pixelCoordinates[d];\n          const y1 = pixelCoordinates[d + 1];\n          const x2 = pixelCoordinates[d + 2];\n          const y2 = pixelCoordinates[d + 3];\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          const geometry =\n            /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (\n              instruction[3]\n            );\n          const renderer = instruction[4];\n          const fn = instruction[5];\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          const coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          if (zIndexContext) {\n            zIndexContext.zIndex = instruction[6];\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image =\n            /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (\n              instruction[3]\n            );\n\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          let height = /** @type {number} */ (instruction[6]);\n          const opacity = /** @type {number} */ (instruction[7]);\n          const originX = /** @type {number} */ (instruction[8]);\n          const originY = /** @type {number} */ (instruction[9]);\n          const rotateWithView = /** @type {boolean} */ (instruction[10]);\n          let rotation = /** @type {number} */ (instruction[11]);\n          const scale = /** @type {import(\"../../size.js\").Size} */ (\n            instruction[12]\n          );\n          let width = /** @type {number} */ (instruction[13]);\n          declutterMode = instruction[14] || 'declutter';\n          const declutterImageWithText =\n            /** @type {{args: import(\"../canvas.js\").DeclutterImageWithText, declutterMode: import('../../style/Style.js').DeclutterMode}} */ (\n              instruction[15]\n            );\n\n          if (!image && instruction.length >= 20) {\n            // create label images\n            text = /** @type {string} */ (instruction[19]);\n            textKey = /** @type {string} */ (instruction[20]);\n            strokeKey = /** @type {string} */ (instruction[21]);\n            fillKey = /** @type {string} */ (instruction[22]);\n            const labelWithAnchor = this.drawLabelWithPointPlacement_(\n              text,\n              textKey,\n              strokeKey,\n              fillKey,\n            );\n            image = labelWithAnchor.label;\n            instruction[3] = image;\n            const textOffsetX = /** @type {number} */ (instruction[23]);\n            anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n            instruction[4] = anchorX;\n            const textOffsetY = /** @type {number} */ (instruction[24]);\n            anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n            instruction[5] = anchorY;\n            height = image.height;\n            instruction[6] = height;\n            width = image.width;\n            instruction[13] = width;\n          }\n\n          let geometryWidths;\n          if (instruction.length > 25) {\n            geometryWidths = /** @type {number} */ (instruction[25]);\n          }\n\n          let padding, backgroundFillInstruction, backgroundStrokeInstruction;\n          if (instruction.length > 17) {\n            padding = /** @type {Array<number>} */ (instruction[16]);\n            backgroundFillInstruction = /** @type {Array<*>} */ (\n              instruction[17]\n            );\n            backgroundStrokeInstruction = /** @type {Array<*>} */ (\n              instruction[18]\n            );\n          } else {\n            padding = defaultPadding;\n            backgroundFillInstruction = null;\n            backgroundStrokeInstruction = null;\n          }\n\n          if (rotateWithView && viewRotationFromTransform) {\n            // Canvas is expected to be rotated to reverse view rotation.\n            rotation += viewRotation;\n          } else if (!rotateWithView && !viewRotationFromTransform) {\n            // Canvas is not rotated, images need to be rotated back to be north-up.\n            rotation -= viewRotation;\n          }\n          let widthIndex = 0;\n          for (; d < dd; d += 2) {\n            if (\n              geometryWidths &&\n              geometryWidths[widthIndex++] < width / this.pixelRatio\n            ) {\n              continue;\n            }\n            const dimensions = this.calculateImageOrLabelDimensions_(\n              image.width,\n              image.height,\n              pixelCoordinates[d],\n              pixelCoordinates[d + 1],\n              width,\n              height,\n              anchorX,\n              anchorY,\n              originX,\n              originY,\n              rotation,\n              scale,\n              snapToPixel,\n              padding,\n              !!backgroundFillInstruction || !!backgroundStrokeInstruction,\n              feature,\n            );\n            /** @type {ReplayImageOrLabelArgs} */\n            const args = [\n              context,\n              scaledCanvasSize,\n              image,\n              dimensions,\n              opacity,\n              backgroundFillInstruction,\n              backgroundStrokeInstruction,\n            ];\n            if (declutterTree) {\n              let imageArgs, imageDeclutterMode, imageDeclutterBox;\n              if (declutterImageWithText) {\n                const index = dd - d;\n                if (!declutterImageWithText[index]) {\n                  // We now have the image for an image+text combination.\n                  declutterImageWithText[index] = {args, declutterMode};\n                  // Don't render anything for now, wait for the text.\n                  continue;\n                }\n                const imageDeclutter = declutterImageWithText[index];\n                imageArgs = imageDeclutter.args;\n                imageDeclutterMode = imageDeclutter.declutterMode;\n                delete declutterImageWithText[index];\n                imageDeclutterBox = getDeclutterBox(imageArgs);\n              }\n              // We now have image and text for an image+text combination.\n              let renderImage, renderText;\n              if (\n                imageArgs &&\n                (imageDeclutterMode !== 'declutter' ||\n                  !declutterTree.collides(imageDeclutterBox))\n              ) {\n                renderImage = true;\n              }\n              if (\n                declutterMode !== 'declutter' ||\n                !declutterTree.collides(dimensions.declutterBox)\n              ) {\n                renderText = true;\n              }\n              if (\n                imageDeclutterMode === 'declutter' &&\n                declutterMode === 'declutter'\n              ) {\n                const render = renderImage && renderText;\n                renderImage = render;\n                renderText = render;\n              }\n              if (renderImage) {\n                if (imageDeclutterMode !== 'none') {\n                  declutterTree.insert(imageDeclutterBox);\n                }\n                this.replayImageOrLabel_.apply(this, imageArgs);\n              }\n              if (renderText) {\n                if (declutterMode !== 'none') {\n                  declutterTree.insert(dimensions.declutterBox);\n                }\n                this.replayImageOrLabel_.apply(this, args);\n              }\n            } else {\n              this.replayImageOrLabel_.apply(this, args);\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          const begin = /** @type {number} */ (instruction[1]);\n          const end = /** @type {number} */ (instruction[2]);\n          const baseline = /** @type {number} */ (instruction[3]);\n          const overflow = /** @type {number} */ (instruction[4]);\n          fillKey = /** @type {string} */ (instruction[5]);\n          const maxAngle = /** @type {number} */ (instruction[6]);\n          const measurePixelRatio = /** @type {number} */ (instruction[7]);\n          const offsetY = /** @type {number} */ (instruction[8]);\n          strokeKey = /** @type {string} */ (instruction[9]);\n          const strokeWidth = /** @type {number} */ (instruction[10]);\n          text = /** @type {string|Array<string>} */ (instruction[11]);\n          if (Array.isArray(text)) {\n            //FIXME Add support for rich text along lines\n            text = text.reduce(richTextToPlainText, '');\n          }\n          textKey = /** @type {string} */ (instruction[12]);\n          const pixelRatioScale = [\n            /** @type {number} */ (instruction[13]),\n            /** @type {number} */ (instruction[13]),\n          ];\n          declutterMode = instruction[14] || 'declutter';\n\n          const textKeepUpright = /** @type {boolean} */ (instruction[15]);\n          const textState = this.textStates[textKey];\n          const font = textState.font;\n          const textScale = [\n            textState.scale[0] * measurePixelRatio,\n            textState.scale[1] * measurePixelRatio,\n          ];\n\n          let cachedWidths;\n          if (font in this.widths_) {\n            cachedWidths = this.widths_[font];\n          } else {\n            cachedWidths = {};\n            this.widths_[font] = cachedWidths;\n          }\n\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          const textLength =\n            Math.abs(textScale[0]) *\n            measureAndCacheTextWidth(font, text, cachedWidths);\n          if (overflow || textLength <= pathLength) {\n            const textAlign = this.textStates[textKey].textAlign;\n            const startM =\n              (pathLength - textLength) * horizontalTextAlign(text, textAlign);\n            const parts = drawTextOnPath(\n              pixelCoordinates,\n              begin,\n              end,\n              2,\n              text,\n              startM,\n              maxAngle,\n              Math.abs(textScale[0]),\n              measureAndCacheTextWidth,\n              font,\n              cachedWidths,\n              viewRotationFromTransform ? 0 : this.viewRotation_,\n              textKeepUpright,\n            );\n            drawChars: if (parts) {\n              /** @type {Array<ReplayImageOrLabelArgs>} */\n              const replayImageOrLabelArgs = [];\n              let c, cc, chars, label, part;\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, '', strokeKey);\n                  anchorX =\n                    /** @type {number} */ (part[2]) +\n                    (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                  anchorY =\n                    baseline * label.height +\n                    ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                      textScale[0] -\n                    offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature,\n                  );\n                  if (\n                    declutterTree &&\n                    declutterMode === 'declutter' &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    scaledCanvasSize,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature,\n                  );\n                  if (\n                    declutterTree &&\n                    declutterMode === 'declutter' &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    scaledCanvasSize,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (declutterTree && declutterMode !== 'none') {\n                declutterTree.load(replayImageOrLabelArgs.map(getDeclutterBox));\n              }\n              for (let i = 0, ii = replayImageOrLabelArgs.length; i < ii; ++i) {\n                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i]);\n              }\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n              instruction[1]\n            );\n            const result = featureCallback(\n              feature,\n              currentGeometry,\n              declutterMode,\n            );\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          context.moveTo(x, y);\n          prevX = (x + 0.5) | 0;\n          prevY = (y + 0.5) | 0;\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          this.alignAndScaleFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          /** @type {import(\"../../colorlike.js\").ColorLike} */\n          context.fillStyle = instruction[1];\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default: // consume the instruction anyway, to avoid an infinite loop\n          ++i;\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D|OffscreenCanvasRenderingContext2D} context Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scaled canvas size.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {import(\"rbush\").default<DeclutterEntry>} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    scaledCanvasSize,\n    transform,\n    viewRotation,\n    snapToPixel,\n    declutterTree,\n  ) {\n    this.viewRotation_ = viewRotation;\n    this.execute_(\n      context,\n      scaledCanvasSize,\n      transform,\n      this.instructions,\n      snapToPixel,\n      undefined,\n      undefined,\n      declutterTree,\n    );\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D|OffscreenCanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  executeHitDetection(\n    context,\n    transform,\n    viewRotation,\n    featureCallback,\n    hitExtent,\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.execute_(\n      context,\n      [context.canvas.width, context.canvas.height],\n      transform,\n      this.hitDetectionInstructions,\n      true,\n      featureCallback,\n      hitExtent,\n    );\n  }\n}\n\nexport default Executor;\n","/**\n * @module ol/render/canvas/ExecutorGroup\n */\n\nimport {ascending, descending} from '../../array.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {isEmpty} from '../../obj.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport Executor from './Executor.js';\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nexport const ALL = [\n  'Polygon',\n  'Circle',\n  'LineString',\n  'Image',\n  'Text',\n  'Default',\n];\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nexport const DECLUTTER = ['Image', 'Text'];\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nexport const NON_DECLUTTER = ALL.filter(\n  (builderType) => !DECLUTTER.includes(builderType),\n);\n\nclass ExecutorGroup {\n  /**\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n   * `maxExtent` was set on the Builder for this executor group, the same `maxExtent`\n   * should be set here, unless the target context does not exceed that extent (which\n   * can be the case when rendering to tiles).\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The executor group can have overlapping geometries.\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n   * The serializable instructions.\n   * @param {number} [renderBuffer] Optional rendering buffer.\n   * @param {boolean} [deferredRendering] Enable deferred rendering with renderDeferred().\n   */\n  constructor(\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    allInstructions,\n    renderBuffer,\n    deferredRendering,\n  ) {\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<string, import(\"./Executor\").default>>}\n     */\n    this.executorsByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D|OffscreenCanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D|OffscreenCanvasRenderingContext2D}\n     */\n    this.renderedContext_ = null;\n\n    /**\n     * @private\n     * @type {Object<number, Array<import(\"./ZIndexContext.js\").default>>}\n     */\n    this.deferredZIndexContexts_ = {};\n\n    this.createExecutors_(allInstructions, deferredRendering);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D|OffscreenCanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  clip(context, transform) {\n    const flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  }\n\n  /**\n   * Create executors and populate them using the provided instructions.\n   * @private\n   * @param {!Object<string, !Object<string, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n   * @param {boolean} deferredRendering Enable deferred rendering.\n   */\n  createExecutors_(allInstructions, deferredRendering) {\n    for (const zIndex in allInstructions) {\n      let executors = this.executorsByZIndex_[zIndex];\n      if (executors === undefined) {\n        executors = {};\n        this.executorsByZIndex_[zIndex] = executors;\n      }\n      const instructionByZindex = allInstructions[zIndex];\n      for (const builderType in instructionByZindex) {\n        const instructions = instructionByZindex[builderType];\n        executors[builderType] = new Executor(\n          this.resolution_,\n          this.pixelRatio_,\n          this.overlaps_,\n          instructions,\n          deferredRendering,\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Array<import(\"../canvas.js\").BuilderType>} executors Executors.\n   * @return {boolean} Has executors of the provided types.\n   */\n  hasExecutors(executors) {\n    for (const zIndex in this.executorsByZIndex_) {\n      const candidates = this.executorsByZIndex_[zIndex];\n      for (let i = 0, ii = executors.length; i < ii; ++i) {\n        if (executors[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n   * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    callback,\n    declutteredFeatures,\n  ) {\n    hitTolerance = Math.round(hitTolerance);\n    const contextSize = hitTolerance * 2 + 1;\n    const transform = composeTransform(\n      this.hitDetectionTransform_,\n      hitTolerance + 0.5,\n      hitTolerance + 0.5,\n      1 / resolution,\n      -1 / resolution,\n      -rotation,\n      -coordinate[0],\n      -coordinate[1],\n    );\n\n    const newContext = !this.hitDetectionContext_;\n    if (newContext) {\n      // Refrain from adding a 'willReadFrequently' hint in the options here.\n      // While it will remove the \"Canvas2D: Multiple readback operations using\n      // getImageData are faster with the willReadFrequently attribute set\n      // to true\" warnings in the console, it makes hitDetection extremely\n      // slow in Chrome when there are many features on the map\n      this.hitDetectionContext_ = createCanvasContext2D(\n        contextSize,\n        contextSize,\n      );\n    }\n    const context = this.hitDetectionContext_;\n\n    if (\n      context.canvas.width !== contextSize ||\n      context.canvas.height !== contextSize\n    ) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else if (!newContext) {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /** @type {import(\"../../extent.js\").Extent|undefined} */\n    let hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(\n        hitExtent,\n        resolution * (this.renderBuffer_ + hitTolerance),\n        hitExtent,\n      );\n    }\n\n    const indexes = getPixelIndexArray(hitTolerance);\n\n    /** @type {import(\"../canvas.js\").BuilderType} */\n    let builderType;\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {import('../../style/Style.js').DeclutterMode} declutterMode Declutter mode.\n     * @return {T|undefined} Callback result.\n     */\n    function featureCallback(feature, geometry, declutterMode) {\n      const imageData = context.getImageData(\n        0,\n        0,\n        contextSize,\n        contextSize,\n      ).data;\n      for (let i = 0, ii = indexes.length; i < ii; i++) {\n        if (imageData[indexes[i]] > 0) {\n          if (\n            !declutteredFeatures ||\n            declutterMode === 'none' ||\n            (builderType !== 'Image' && builderType !== 'Text') ||\n            declutteredFeatures.includes(feature)\n          ) {\n            const idx = (indexes[i] - 3) / 4;\n            const x = hitTolerance - (idx % contextSize);\n            const y = hitTolerance - ((idx / contextSize) | 0);\n            const result = callback(feature, geometry, x * x + y * y);\n            if (result) {\n              return result;\n            }\n          }\n          context.clearRect(0, 0, contextSize, contextSize);\n          break;\n        }\n      }\n      return undefined;\n    }\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    let i, j, executors, executor, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      const zIndexKey = zs[i].toString();\n      executors = this.executorsByZIndex_[zIndexKey];\n      for (j = ALL.length - 1; j >= 0; --j) {\n        builderType = ALL[j];\n        executor = executors[builderType];\n        if (executor !== undefined) {\n          result = executor.executeHitDetection(\n            context,\n            transform,\n            rotation,\n            featureCallback,\n            hitExtent,\n          );\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>|null} Clip coordinates.\n   */\n  getClipCoords(transform) {\n    const maxExtent = this.maxExtent_;\n    if (!maxExtent) {\n      return null;\n    }\n    const minX = maxExtent[0];\n    const minY = maxExtent[1];\n    const maxX = maxExtent[2];\n    const maxY = maxExtent[3];\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.executorsByZIndex_);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D|OffscreenCanvasRenderingContext2D} targetContext Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<import(\"../canvas.js\").BuilderType>} [builderTypes] Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ALL}\n   * @param {import(\"rbush\").default<import('./Executor.js').DeclutterEntry>|null} [declutterTree] Declutter tree.\n   *     When set to null, no decluttering is done, even when the executor group has a `ZIndexContext`.\n   */\n  execute(\n    targetContext,\n    scaledCanvasSize,\n    transform,\n    viewRotation,\n    snapToPixel,\n    builderTypes,\n    declutterTree,\n  ) {\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(declutterTree ? descending : ascending);\n\n    builderTypes = builderTypes ? builderTypes : ALL;\n    const maxBuilderTypes = ALL.length;\n    for (let i = 0, ii = zs.length; i < ii; ++i) {\n      const zIndexKey = zs[i].toString();\n      const replays = this.executorsByZIndex_[zIndexKey];\n      for (let j = 0, jj = builderTypes.length; j < jj; ++j) {\n        const builderType = builderTypes[j];\n        const replay = replays[builderType];\n        if (replay !== undefined) {\n          const zIndexContext =\n            declutterTree === null ? undefined : replay.getZIndexContext();\n          const context = zIndexContext\n            ? zIndexContext.getContext()\n            : targetContext;\n          const requireClip =\n            this.maxExtent_ &&\n            builderType !== 'Image' &&\n            builderType !== 'Text';\n          if (requireClip) {\n            context.save();\n            // setup clipping so that the parts of over-simplified geometries are not\n            // visible outside the current extent when panning\n            this.clip(context, transform);\n          }\n          if (\n            !zIndexContext ||\n            builderType === 'Text' ||\n            builderType === 'Image'\n          ) {\n            replay.execute(\n              context,\n              scaledCanvasSize,\n              transform,\n              viewRotation,\n              snapToPixel,\n              declutterTree,\n            );\n          } else {\n            zIndexContext.pushFunction((context) =>\n              replay.execute(\n                context,\n                scaledCanvasSize,\n                transform,\n                viewRotation,\n                snapToPixel,\n                declutterTree,\n              ),\n            );\n          }\n          if (requireClip) {\n            context.restore();\n          }\n          if (zIndexContext) {\n            zIndexContext.offset();\n            const index = zs[i] * maxBuilderTypes + ALL.indexOf(builderType);\n            if (!this.deferredZIndexContexts_[index]) {\n              this.deferredZIndexContexts_[index] = [];\n            }\n            this.deferredZIndexContexts_[index].push(zIndexContext);\n          }\n        }\n      }\n    }\n\n    this.renderedContext_ = targetContext;\n  }\n\n  getDeferredZIndexContexts() {\n    return this.deferredZIndexContexts_;\n  }\n\n  getRenderedContext() {\n    return this.renderedContext_;\n  }\n\n  renderDeferred() {\n    const deferredZIndexContexts = this.deferredZIndexContexts_;\n    const zs = Object.keys(deferredZIndexContexts).map(Number).sort(ascending);\n    for (let i = 0, ii = zs.length; i < ii; ++i) {\n      deferredZIndexContexts[zs[i]].forEach((zIndexContext) => {\n        zIndexContext.draw(this.renderedContext_); // FIXME Pass clip to replay for temporarily enabling clip\n        zIndexContext.clear();\n      });\n      deferredZIndexContexts[zs[i]].length = 0;\n    }\n  }\n}\n\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nconst circlePixelIndexArrayCache = {};\n\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @return {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n  if (circlePixelIndexArrayCache[radius] !== undefined) {\n    return circlePixelIndexArrayCache[radius];\n  }\n\n  const size = radius * 2 + 1;\n  const maxDistanceSq = radius * radius;\n  const distances = new Array(maxDistanceSq + 1);\n  for (let i = 0; i <= radius; ++i) {\n    for (let j = 0; j <= radius; ++j) {\n      const distanceSq = i * i + j * j;\n      if (distanceSq > maxDistanceSq) {\n        break;\n      }\n      let distance = distances[distanceSq];\n      if (!distance) {\n        distance = [];\n        distances[distanceSq] = distance;\n      }\n      distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n      if (i > 0) {\n        distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n      }\n      if (j > 0) {\n        distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n        if (i > 0) {\n          distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n        }\n      }\n    }\n  }\n\n  const pixelIndex = [];\n  for (let i = 0, ii = distances.length; i < ii; ++i) {\n    if (distances[i]) {\n      pixelIndex.push(...distances[i]);\n    }\n  }\n\n  circlePixelIndexArrayCache[radius] = pixelIndex;\n  return pixelIndex;\n}\n\nexport default ExecutorGroup;\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport {equals} from '../../array.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {intersects} from '../../extent.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {toFixed} from '../../math.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport VectorContext from '../VectorContext.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n} from '../canvas.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext~VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\n   * @param {CanvasRenderingContext2D|OffscreenCanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number} [squaredTolerance] Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction} [userTransform] Transform from user to view projection.\n   */\n  constructor(\n    context,\n    pixelRatio,\n    extent,\n    transform,\n    viewRotation,\n    squaredTolerance,\n    userTransform,\n  ) {\n    super();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D|OffscreenCanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.transformRotation_ = transform\n      ? toFixed(Math.atan2(transform[1], transform[0]), 10)\n      : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_ = squaredTolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n    this.userTransform_ = userTransform;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.imageScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.textScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_,\n    );\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (\n        rotation !== 0 ||\n        this.imageScale_[0] != 1 ||\n        this.imageScale_[1] != 1\n      ) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(\n          localTransform,\n          centerX,\n          centerY,\n          1,\n          1,\n          rotation,\n          -centerX,\n          -centerY,\n        );\n        context.save();\n        context.transform.apply(context, localTransform);\n        context.translate(centerX, centerY);\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          -this.imageAnchorX_,\n          -this.imageAnchorY_,\n          this.imageWidth_,\n          this.imageHeight_,\n        );\n        context.restore();\n      } else {\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          x,\n          y,\n          this.imageWidth_,\n          this.imageHeight_,\n        );\n      }\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_,\n    );\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (\n        rotation !== 0 ||\n        this.textScale_[0] != 1 ||\n        this.textScale_[1] != 1\n      ) {\n        context.save();\n        context.translate(x - this.textOffsetX_, y - this.textOffsetY_);\n        context.rotate(rotation);\n        context.translate(this.textOffsetX_, this.textOffsetY_);\n        context.scale(this.textScale_[0], this.textScale_[1]);\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, 0, 0);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, 0, 0);\n        }\n        context.restore();\n      } else {\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, x, y);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, x, y);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_,\n    );\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(\n        flatCoordinates,\n        offset,\n        ends[i],\n        stride,\n        true,\n      );\n    }\n    return offset;\n  }\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @api\n   * @override\n   */\n  drawCircle(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Circle.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(\n        geometry,\n        this.transform_,\n        this.pixelCoordinates_,\n      );\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0],\n        pixelCoordinates[1],\n        radius,\n        0,\n        2 * Math.PI,\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @api\n   * @override\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  setTransform(transform) {\n    this.transform_ = transform;\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate~CanvasImmediateRenderer#setStyle renderer.setStyle()} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @api\n   * @override\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case 'Point':\n        this.drawPoint(\n          /** @type {import(\"../../geom/Point.js\").default} */ (geometry),\n        );\n        break;\n      case 'LineString':\n        this.drawLineString(\n          /** @type {import(\"../../geom/LineString.js\").default} */ (geometry),\n        );\n        break;\n      case 'Polygon':\n        this.drawPolygon(\n          /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry),\n        );\n        break;\n      case 'MultiPoint':\n        this.drawMultiPoint(\n          /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry),\n        );\n        break;\n      case 'MultiLineString':\n        this.drawMultiLineString(\n          /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ),\n        );\n        break;\n      case 'MultiPolygon':\n        this.drawMultiPolygon(\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ),\n        );\n        break;\n      case 'GeometryCollection':\n        this.drawGeometryCollection(\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          ),\n        );\n        break;\n      case 'Circle':\n        this.drawCircle(\n          /** @type {import(\"../../geom/Circle.js\").default} */ (geometry),\n        );\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @api\n   * @override\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   * @override\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   * @override\n   */\n  drawPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   * @override\n   */\n  drawMultiPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   * @override\n   */\n  drawLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        geometry.getStride(),\n        false,\n      );\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   * @override\n   */\n  drawMultiLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry =\n        /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry.simplifyTransformed(\n            this.squaredTolerance_,\n            this.userTransform_,\n          )\n        );\n    }\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(\n          flatCoordinates,\n          offset,\n          ends[i],\n          stride,\n          false,\n        );\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   * @override\n   */\n  drawPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(\n        geometry.getOrientedFlatCoordinates(),\n        0,\n        /** @type {Array<number>} */ (geometry.getEnds()),\n        geometry.getStride(),\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   * @override\n   */\n  drawMultiPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle,\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      context.setLineDash(strokeState.lineDash);\n      context.lineDashOffset = strokeState.lineDashOffset;\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle,\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n      if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n        context.setLineDash(\n          (contextStrokeState.lineDash = strokeState.lineDash),\n        );\n      }\n      if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n        contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign\n      ? textState.textAlign\n      : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = textAlign;\n      context.textBaseline = textState.textBaseline;\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline,\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = textAlign;\n        context.textAlign = textAlign;\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = textState.textBaseline;\n        context.textBaseline = textState.textBaseline;\n      }\n    }\n  }\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   * @override\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(\n          fillStyleColor ? fillStyleColor : defaultFillStyle,\n        ),\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      const lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash\n        : defaultLineDash;\n      this.strokeState_ = {\n        lineCap:\n          strokeStyleLineCap !== undefined\n            ? strokeStyleLineCap\n            : defaultLineCap,\n        lineDash:\n          this.pixelRatio_ === 1\n            ? lineDash\n            : lineDash.map((n) => n * this.pixelRatio_),\n        lineDashOffset:\n          (strokeStyleLineDashOffset\n            ? strokeStyleLineDashOffset\n            : defaultLineDashOffset) * this.pixelRatio_,\n        lineJoin:\n          strokeStyleLineJoin !== undefined\n            ? strokeStyleLineJoin\n            : defaultLineJoin,\n        lineWidth:\n          (strokeStyleWidth !== undefined\n            ? strokeStyleWidth\n            : defaultLineWidth) * this.pixelRatio_,\n        miterLimit:\n          strokeStyleMiterLimit !== undefined\n            ? strokeStyleMiterLimit\n            : defaultMiterLimit,\n        strokeStyle: asColorLike(\n          strokeStyleColor ? strokeStyleColor : defaultStrokeStyle,\n        ),\n      };\n    }\n  }\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @override\n   */\n  setImageStyle(imageStyle) {\n    let imageSize;\n    if (!imageStyle || !(imageSize = imageStyle.getSize())) {\n      this.image_ = null;\n      return;\n    }\n    const imagePixelRatio = imageStyle.getPixelRatio(this.pixelRatio_);\n    const imageAnchor = imageStyle.getAnchor();\n    const imageOrigin = imageStyle.getOrigin();\n    this.image_ = imageStyle.getImage(this.pixelRatio_);\n    this.imageAnchorX_ = imageAnchor[0] * imagePixelRatio;\n    this.imageAnchorY_ = imageAnchor[1] * imagePixelRatio;\n    this.imageHeight_ = imageSize[1] * imagePixelRatio;\n    this.imageOpacity_ = imageStyle.getOpacity();\n    this.imageOriginX_ = imageOrigin[0];\n    this.imageOriginY_ = imageOrigin[1];\n    this.imageRotateWithView_ = imageStyle.getRotateWithView();\n    this.imageRotation_ = imageStyle.getRotation();\n    const imageScale = imageStyle.getScaleArray();\n    this.imageScale_ = [\n      (imageScale[0] * this.pixelRatio_) / imagePixelRatio,\n      (imageScale[1] * this.pixelRatio_) / imagePixelRatio,\n    ];\n    this.imageWidth_ = imageSize[0] * imagePixelRatio;\n  }\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @override\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(\n            textFillStyleColor ? textFillStyleColor : defaultFillStyle,\n          ),\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset =\n          textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap:\n            textStrokeStyleLineCap !== undefined\n              ? textStrokeStyleLineCap\n              : defaultLineCap,\n          lineDash: textStrokeStyleLineDash\n            ? textStrokeStyleLineDash\n            : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset\n            ? textStrokeStyleLineDashOffset\n            : defaultLineDashOffset,\n          lineJoin:\n            textStrokeStyleLineJoin !== undefined\n              ? textStrokeStyleLineJoin\n              : defaultLineJoin,\n          lineWidth:\n            textStrokeStyleWidth !== undefined\n              ? textStrokeStyleWidth\n              : defaultLineWidth,\n          miterLimit:\n            textStrokeStyleMiterLimit !== undefined\n              ? textStrokeStyleMiterLimit\n              : defaultMiterLimit,\n          strokeStyle: asColorLike(\n            textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle,\n          ),\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScaleArray();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ? textFont : defaultFont,\n        textAlign:\n          textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n        textBaseline:\n          textTextBaseline !== undefined\n            ? textTextBaseline\n            : defaultTextBaseline,\n      };\n      this.text_ =\n        textText !== undefined\n          ? Array.isArray(textText)\n            ? textText.reduce((acc, t, i) => (acc += i % 2 ? ' ' : t), '')\n            : textText\n          : '';\n      this.textOffsetX_ =\n        textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n      this.textOffsetY_ =\n        textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n      this.textRotateWithView_ =\n        textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = [\n        this.pixelRatio_ * textScale[0],\n        this.pixelRatio_ * textScale[1],\n      ];\n    }\n  }\n}\n\nexport default CanvasImmediateRenderer;\n","/**\n * @module ol/render/canvas/hitdetect\n */\n\nimport {ascending} from '../../array.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\nimport {clamp} from '../../math.js';\nimport {\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n} from '../../proj.js';\nimport {Icon} from '../../style.js';\nimport CanvasImmediateRenderer from './Immediate.js';\n\nexport const HIT_DETECT_RESOLUTION = 0.5;\n\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent in render projection.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {number} [squaredTolerance] Squared tolerance.\n * @param {import(\"../../proj/Projection.js\").default} [projection] Render projection.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(\n  size,\n  transforms,\n  features,\n  styleFunction,\n  extent,\n  resolution,\n  rotation,\n  squaredTolerance,\n  projection,\n) {\n  const userExtent = projection ? toUserExtent(extent, projection) : extent;\n  const width = size[0] * HIT_DETECT_RESOLUTION;\n  const height = size[1] * HIT_DETECT_RESOLUTION;\n  const context = createCanvasContext2D(width, height);\n  context.imageSmoothingEnabled = false;\n  const canvas = context.canvas;\n  const renderer = new CanvasImmediateRenderer(\n    context,\n    HIT_DETECT_RESOLUTION,\n    extent,\n    null,\n    rotation,\n    squaredTolerance,\n    projection\n      ? getTransformFromProjections(getUserProjection(), projection)\n      : null,\n  );\n  const featureCount = features.length;\n  // Stretch hit detection index to use the whole available color range\n  const indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n  const featuresByZIndex = {};\n  for (let i = 1; i <= featureCount; ++i) {\n    const feature = features[i - 1];\n    const featureStyleFunction = feature.getStyleFunction() || styleFunction;\n    if (!featureStyleFunction) {\n      continue;\n    }\n    let styles = featureStyleFunction(feature, resolution);\n    if (!styles) {\n      continue;\n    }\n    if (!Array.isArray(styles)) {\n      styles = [styles];\n    }\n    const index = i * indexFactor;\n    const color = index.toString(16).padStart(7, '#00000');\n    for (let j = 0, jj = styles.length; j < jj; ++j) {\n      const originalStyle = styles[j];\n      const geometry = originalStyle.getGeometryFunction()(feature);\n      if (!geometry || !intersects(userExtent, geometry.getExtent())) {\n        continue;\n      }\n      const style = originalStyle.clone();\n      const fill = style.getFill();\n      if (fill) {\n        fill.setColor(color);\n      }\n      const stroke = style.getStroke();\n      if (stroke) {\n        stroke.setColor(color);\n        stroke.setLineDash(null);\n      }\n      style.setText(undefined);\n      const image = originalStyle.getImage();\n      if (image) {\n        const imgSize = image.getImageSize();\n        if (!imgSize) {\n          continue;\n        }\n\n        const imgContext = createCanvasContext2D(\n          imgSize[0],\n          imgSize[1],\n          undefined,\n          {alpha: false},\n        );\n        const img = imgContext.canvas;\n        imgContext.fillStyle = color;\n        imgContext.fillRect(0, 0, img.width, img.height);\n        style.setImage(\n          new Icon({\n            img: img,\n            anchor: image.getAnchor(),\n            anchorXUnits: 'pixels',\n            anchorYUnits: 'pixels',\n            offset: image.getOrigin(),\n            opacity: 1,\n            size: image.getSize(),\n            scale: image.getScale(),\n            rotation: image.getRotation(),\n            rotateWithView: image.getRotateWithView(),\n          }),\n        );\n      }\n      const zIndex = style.getZIndex() || 0;\n      let byGeometryType = featuresByZIndex[zIndex];\n      if (!byGeometryType) {\n        byGeometryType = {};\n        featuresByZIndex[zIndex] = byGeometryType;\n        byGeometryType['Polygon'] = [];\n        byGeometryType['Circle'] = [];\n        byGeometryType['LineString'] = [];\n        byGeometryType['Point'] = [];\n      }\n      const type = geometry.getType();\n      if (type === 'GeometryCollection') {\n        const geometries =\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          ).getGeometriesArrayRecursive();\n        for (let i = 0, ii = geometries.length; i < ii; ++i) {\n          const geometry = geometries[i];\n          byGeometryType[geometry.getType().replace('Multi', '')].push(\n            geometry,\n            style,\n          );\n        }\n      } else {\n        byGeometryType[type.replace('Multi', '')].push(geometry, style);\n      }\n    }\n  }\n\n  const zIndexKeys = Object.keys(featuresByZIndex).map(Number).sort(ascending);\n  for (let i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n    const byGeometryType = featuresByZIndex[zIndexKeys[i]];\n    for (const type in byGeometryType) {\n      const geomAndStyle = byGeometryType[type];\n      for (let j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n        renderer.setStyle(geomAndStyle[j + 1]);\n        for (let k = 0, kk = transforms.length; k < kk; ++k) {\n          renderer.setTransform(transforms[k]);\n          renderer.drawGeometry(geomAndStyle[j]);\n        }\n      }\n    }\n  }\n  return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<F>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<F>} Features.\n * @template {import(\"../../Feature.js\").FeatureLike} F\n */\nexport function hitDetect(pixel, features, imageData) {\n  /** @type {Array<F>} */\n  const resultFeatures = [];\n  if (imageData) {\n    const x = Math.floor(Math.round(pixel[0]) * HIT_DETECT_RESOLUTION);\n    const y = Math.floor(Math.round(pixel[1]) * HIT_DETECT_RESOLUTION);\n    // The pixel coordinate is clamped down to the hit-detect canvas' size to account\n    // for browsers returning coordinates slightly larger than the actual canvas size\n    // due to a non-integer pixel ratio.\n    const index =\n      (clamp(x, 0, imageData.width - 1) +\n        clamp(y, 0, imageData.height - 1) * imageData.width) *\n      4;\n    const r = imageData.data[index];\n    const g = imageData.data[index + 1];\n    const b = imageData.data[index + 2];\n    const i = b + 256 * (g + 256 * r);\n    const indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n    if (i && i % indexFactor === 0) {\n      resultFeatures.push(features[i / indexFactor - 1]);\n    }\n  }\n  return resultFeatures;\n}\n","/**\n * @module ol/renderer/vector\n */\nimport ImageState from '../ImageState.js';\nimport {getUid} from '../util.js';\n\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature~Feature feature} or {@link module:ol/render/Feature~RenderFeature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry~SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n/**\n * @const\n * @type {Object<import(\"../geom/Geometry.js\").Type,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry,\n};\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderCircleGeometry(builderGroup, geometry, style, feature, index) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = builderGroup.getBuilder(style.getZIndex(), 'Circle');\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n * @param {boolean} [declutter] Enable decluttering.\n * @param {number} [index] Render order index..\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  listener,\n  transform,\n  declutter,\n  index,\n) {\n  const loadingPromises = [];\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    let loading = true;\n    const imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      loading = false;\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n    }\n    if (loading) {\n      loadingPromises.push(imageStyle.ready());\n    }\n  }\n  const fillStyle = style.getFill();\n  if (fillStyle && fillStyle.loading()) {\n    loadingPromises.push(fillStyle.ready());\n  }\n  const loading = loadingPromises.length > 0;\n  if (loading) {\n    Promise.all(loadingPromises).then(() => listener(null));\n  }\n  renderFeatureInternal(\n    replayGroup,\n    feature,\n    style,\n    squaredTolerance,\n    transform,\n    declutter,\n    index,\n  );\n\n  return loading;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n * @param {boolean} [declutter] Enable decluttering.\n * @param {number} [index] Render order index..\n */\nfunction renderFeatureInternal(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  transform,\n  declutter,\n  index,\n) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.simplifyTransformed(\n    squaredTolerance,\n    transform,\n  );\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature, index);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(\n      replayGroup,\n      simplifiedGeometry,\n      style,\n      feature,\n      index,\n      declutter,\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature, index) {\n  if (geometry.getType() == 'GeometryCollection') {\n    const geometries =\n      /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n        geometry\n      ).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature, index);\n    }\n    return;\n  }\n  const replay = replayGroup.getBuilder(style.getZIndex(), 'Default');\n  replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry),\n    feature,\n    style.getRenderer(),\n    style.getHitDetectionRenderer(),\n    index,\n  );\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n * @param {number} [index] Render order index.\n */\nfunction renderGeometryCollectionGeometry(\n  replayGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup,\n  index,\n) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(\n      replayGroup,\n      geometries[i],\n      style,\n      feature,\n      declutterBuilderGroup,\n      index,\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString',\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderMultiLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString',\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderMultiPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n * @param {boolean} [declutter] Enable decluttering.\n */\nfunction renderPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n  declutter,\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  const hasText = textStyle && textStyle.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  const declutterImageWithText =\n    declutter && imageStyle && hasText ? {} : undefined;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(style.getZIndex(), 'Image');\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawPoint(geometry, feature, index);\n  }\n  if (hasText) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n * @param {boolean} [declutter] Enable decluttering.\n */\nfunction renderMultiPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n  declutter,\n) {\n  const imageStyle = style.getImage();\n  const hasImage = imageStyle && imageStyle.getOpacity() !== 0;\n  const textStyle = style.getText();\n  const hasText = textStyle && textStyle.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  const declutterImageWithText =\n    declutter && hasImage && hasText ? {} : undefined;\n  if (hasImage) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(style.getZIndex(), 'Image');\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawMultiPoint(geometry, feature, index);\n  }\n  if (hasText) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderPolygonGeometry(builderGroup, geometry, style, feature, index) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n","/**\n * @module ol/renderer/Layer\n */\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport EventType from '../events/EventType.js';\nimport {abstract} from '../util.js';\n\nconst maxStaleKeys = 5;\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /**\n     * The renderer is initialized and ready to render.\n     * @type {boolean}\n     */\n    this.ready = true;\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @private\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {Array<string>}\n     * @private\n     */\n    this.staleKeys_ = new Array();\n\n    /**\n     * @type {number}\n     * @protected\n     */\n    this.maxStaleKeys = maxStaleKeys;\n  }\n\n  /**\n   * @return {Array<string>} Get the list of stale keys.\n   */\n  getStaleKeys() {\n    return this.staleKeys_;\n  }\n\n  /**\n   * @param {string} key The new stale key.\n   */\n  prependStaleKey(key) {\n    this.staleKeys_.unshift(key);\n    if (this.staleKeys_.length > this.maxStaleKeys) {\n      this.staleKeys_.length = this.maxStaleKeys;\n    }\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    return null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement|null} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches,\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (\n      image.getState() === ImageState.LOADED ||\n      image.getState() === ImageState.ERROR\n    ) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../Image.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer && layer.getVisible() && layer.getSourceState() === 'ready') {\n      layer.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeferred(frameState) {}\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    delete this.layer_;\n    super.disposeInternal();\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport {equals} from '../../array.js';\nimport {asArray} from '../../color.js';\nimport {createCanvasContext2D, createMockDiv, isCanvas} from '../../dom.js';\nimport {\n  getBottomLeft,\n  getBottomRight,\n  getHeight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n} from '../../extent.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../../has.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport ZIndexContext from '../../render/canvas/ZIndexContext.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  equivalent,\n  makeInverse,\n  toString as toTransformString,\n} from '../../transform.js';\nimport LayerRenderer from '../Layer.js';\n\n/**\n * @type {Array<HTMLCanvasElement|OffscreenCanvas>}\n */\nexport const canvasPool = [];\n\n/**\n * @type {CanvasRenderingContext2D|OffscreenCanvasRenderingContext2D}\n */\nlet pixelContext = null;\n\nfunction createPixelContext() {\n  pixelContext = createCanvasContext2D(1, 1, undefined, {\n    willReadFrequently: true,\n  });\n}\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * HTMLElement container for the layer to be rendered in.\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D|OffscreenCanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @private\n     * @type {ZIndexContext}\n     */\n    this.deferredContext_ = null;\n\n    /**\n     * true if the container has been reused from the previous renderer\n     * @type {boolean}\n     */\n    this.containerReused = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../Map.js\").FrameState|null}\n     */\n    this.frameState = null;\n  }\n\n  /**\n   * @param {import('../../DataTile.js').ImageLike} image Image.\n   * @param {number} col The column index.\n   * @param {number} row The row index.\n   * @return {Uint8ClampedArray|null} The image data.\n   */\n  getImageData(image, col, row) {\n    if (!pixelContext) {\n      createPixelContext();\n    }\n    pixelContext.clearRect(0, 0, 1, 1);\n\n    let data;\n    try {\n      pixelContext.drawImage(image, col, row, 1, 1, 0, 0, 1, 1);\n      data = pixelContext.getImageData(0, 0, 1, 1).data;\n    } catch {\n      pixelContext = null;\n      return null;\n    }\n    return data;\n  }\n\n  /**\n   * @param {import('../../Map.js').FrameState} frameState Frame state.\n   * @return {string} Background color.\n   */\n  getBackground(frameState) {\n    const layer = this.getLayer();\n    let background = layer.getBackground();\n    if (typeof background === 'function') {\n      background = background(frameState.viewState.resolution);\n    }\n    return background || undefined;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS transform matrix.\n   * @param {string} [backgroundColor] Background color.\n   */\n  useContainer(target, transform, backgroundColor) {\n    // renderer canvas to target canvas\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.className === layerClassName &&\n      (!backgroundColor ||\n        (target &&\n          target.style.backgroundColor &&\n          equals(\n            asArray(target.style.backgroundColor),\n            asArray(backgroundColor),\n          )))\n    ) {\n      const canvas = target.firstElementChild;\n      if (isCanvas(canvas)) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (context && equivalent(context.canvas.style.transform, transform)) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    } else if (this.container) {\n      this.container.style.backgroundColor = null;\n    }\n    if (!this.container) {\n      container = WORKER_OFFSCREEN_CANVAS\n        ? createMockDiv()\n        : document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      context = createCanvasContext2D();\n      const canvas = /** @type {HTMLCanvasElement} */ (context.canvas);\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n    if (\n      !this.containerReused &&\n      backgroundColor &&\n      !this.container.style.backgroundColor\n    ) {\n      this.container.style.backgroundColor = backgroundColor;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D|OffscreenCanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @protected\n   */\n  prepareContainer(frameState, target) {\n    const extent = frameState.extent;\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / pixelRatio,\n      1 / pixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2,\n    );\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n    if (!this.containerReused) {\n      const canvas = this.context.canvas;\n      if (canvas.width != width || canvas.height != height) {\n        canvas.width = width;\n        canvas.height = height;\n      } else {\n        this.context.clearRect(0, 0, width, height);\n      }\n      if (\n        canvasTransform !==\n        /** @type {HTMLCanvasElement} */ (canvas).style.transform\n      ) {\n        /** @type {HTMLCanvasElement} */ (canvas).style.transform =\n          canvasTransform;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D|OffscreenCanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context,\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D|OffscreenCanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.frameState = frameState;\n    if (frameState.declutter) {\n      return;\n    }\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D|OffscreenCanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    if (frameState.declutter) {\n      return;\n    }\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeferredInternal(frameState) {}\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {import('../../render/canvas/ZIndexContext.js').ZIndexContextProxy} Context.\n   */\n  getRenderContext(frameState) {\n    if (frameState.declutter && !this.deferredContext_) {\n      this.deferredContext_ = new ZIndexContext();\n    }\n    return frameState.declutter\n      ? this.deferredContext_.getContext()\n      : this.context;\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @override\n   */\n  renderDeferred(frameState) {\n    if (!frameState.declutter) {\n      return;\n    }\n    this.dispatchRenderEvent_(\n      RenderEventType.PRERENDER,\n      this.context,\n      frameState,\n    );\n    if (frameState.declutter && this.deferredContext_) {\n      this.deferredContext_.draw(this.context);\n      this.deferredContext_.clear();\n    }\n    this.renderDeferredInternal(frameState);\n    this.dispatchRenderEvent_(\n      RenderEventType.POSTRENDER,\n      this.context,\n      frameState,\n    );\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX,\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2,\n    );\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    delete this.frameState;\n    super.disposeInternal();\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/DataTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\n\n/**\n * @typedef {HTMLImageElement|HTMLCanvasElement|OffscreenCanvas|HTMLVideoElement|ImageBitmap} ImageLike\n */\n\n/**\n * @typedef {Uint8Array|Uint8ClampedArray|Float32Array|DataView} ArrayLike\n */\n\n/**\n * Data that can be used with a DataTile.\n * @typedef {ArrayLike|ImageLike} Data\n */\n\n/**\n * @param {Data} data Tile data.\n * @return {ImageLike|null} The image-like data.\n */\nexport function asImageLike(data) {\n  return data instanceof Image ||\n    data instanceof HTMLCanvasElement ||\n    data instanceof HTMLVideoElement ||\n    data instanceof ImageBitmap\n    ? data\n    : null;\n}\n\n/**\n * @param {Data} data Tile data.\n * @return {ArrayLike|null} The array-like data.\n */\nexport function asArrayLike(data) {\n  return data instanceof Uint8Array ||\n    data instanceof Uint8ClampedArray ||\n    data instanceof Float32Array ||\n    data instanceof DataView\n    ? data\n    : null;\n}\n\n/**\n * This is set as the cancellation reason when a tile is disposed.\n */\nexport const disposedError = new Error('disposed');\n\n/**\n * @type {CanvasRenderingContext2D|OffscreenCanvasRenderingContext2D|null}\n */\nlet sharedContext = null;\n\n/**\n * @param {ImageLike} image The image.\n * @return {Uint8ClampedArray} The data.\n */\nexport function toArray(image) {\n  if (!sharedContext) {\n    sharedContext = createCanvasContext2D(\n      image.width,\n      image.height,\n      undefined,\n      {willReadFrequently: true},\n    );\n  }\n  const canvas = sharedContext.canvas;\n  const width = image.width;\n  if (canvas.width !== width) {\n    canvas.width = width;\n  }\n  const height = image.height;\n  if (canvas.height !== height) {\n    canvas.height = height;\n  }\n  sharedContext.clearRect(0, 0, width, height);\n  sharedContext.drawImage(image, 0, 0);\n  return sharedContext.getImageData(0, 0, width, height).data;\n}\n\n/**\n * @type {import('./size.js').Size}\n */\nconst defaultSize = [256, 256];\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @property {function(): Promise<Data>} loader Data loader.  For loaders that generate images,\n * the promise should not resolve until the image is loaded.\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @property {import('./size.js').Size} [size=[256, 256]] Tile size.\n * @property {AbortController} [controller] An abort controller.\n * @api\n */\n\nclass DataTile extends Tile {\n  /**\n   * @param {Options} options Tile options.\n   */\n  constructor(options) {\n    const state = TileState.IDLE;\n\n    super(options.tileCoord, state, {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    });\n\n    /**\n     * @type {function(): Promise<Data>}\n     * @private\n     */\n    this.loader_ = options.loader;\n\n    /**\n     * @type {Data}\n     * @private\n     */\n    this.data_ = null;\n\n    /**\n     * @type {Error}\n     * @private\n     */\n    this.error_ = null;\n\n    /**\n     * @type {import('./size.js').Size|null}\n     * @private\n     */\n    this.size_ = options.size || null;\n\n    /**\n     * @type {AbortController|null}\n     * @private\n     */\n    this.controller_ = options.controller || null;\n  }\n\n  /**\n   * Get the tile size.\n   * @return {import('./size.js').Size} Tile size.\n   */\n  getSize() {\n    if (this.size_) {\n      return this.size_;\n    }\n    const imageData = asImageLike(this.data_);\n    if (imageData) {\n      return [imageData.width, imageData.height];\n    }\n    return defaultSize;\n  }\n\n  /**\n   * Get the data for the tile.\n   * @return {Data} Tile data.\n   * @api\n   */\n  getData() {\n    return this.data_;\n  }\n\n  /**\n   * Get any loading error.\n   * @return {Error} Loading error.\n   * @api\n   */\n  getError() {\n    return this.error_;\n  }\n\n  /**\n   * Load the tile data.\n   * @api\n   * @override\n   */\n  load() {\n    if (this.state !== TileState.IDLE && this.state !== TileState.ERROR) {\n      return;\n    }\n    this.state = TileState.LOADING;\n    this.changed();\n\n    const self = this;\n    this.loader_()\n      .then(function (data) {\n        self.data_ = data;\n        self.state = TileState.LOADED;\n        self.changed();\n      })\n      .catch(function (error) {\n        self.error_ = error;\n        self.state = TileState.ERROR;\n        self.changed();\n      });\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    if (this.controller_) {\n      this.controller_.abort(disposedError);\n      this.controller_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default DataTile;\n","/**\n * @module ol/ImageTile\n */\nimport {listenImage} from './Image.js';\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\nclass ImageTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, src, crossOrigin, tileLoadFunction, options) {\n    super(tileCoord, state, options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    this.key = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement|OffscreenCanvas}\n     */\n    this.image_;\n\n    if (WORKER_OFFSCREEN_CANVAS) {\n      this.image_ = new OffscreenCanvas(1, 1);\n    } else {\n      this.image_ = new Image();\n      if (crossOrigin !== null) {\n        this.image_.crossOrigin = crossOrigin;\n      }\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n  }\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, OffscreenCanvas, Image, or Video).\n   * @return {HTMLCanvasElement|OffscreenCanvas|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Sets an HTML image element for this tile (may be a Canvas or preloaded Image).\n   * @param {HTMLCanvasElement|OffscreenCanvas|HTMLImageElement} element Element.\n   */\n  setImage(element) {\n    this.image_ = element;\n    this.state = TileState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Get the cross origin of the ImageTile.\n   * @return {string} Cross origin.\n   */\n  getCrossOrigin() {\n    return this.crossOrigin_;\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    if (WORKER_OFFSCREEN_CANVAS) {\n      // OffscreenCanvas does not have naturalWidth and naturalHeight\n      this.state = TileState.LOADED;\n    } else {\n      const image = /** @type {HTMLImageElement} */ (this.image_);\n      if (image.naturalWidth && image.naturalHeight) {\n        this.state = TileState.LOADED;\n      } else {\n        this.state = TileState.EMPTY;\n      }\n    }\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   *\n   * To retry loading tiles on failed requests, use a custom `tileLoadFunction`\n   * that checks for error status codes and reloads only when the status code is\n   * 408, 429, 500, 502, 503 and 504, and only when not too many retries have been\n   * made already:\n   *\n   * ```js\n   * const retryCodes = [408, 429, 500, 502, 503, 504];\n   * const retries = {};\n   * source.setTileLoadFunction((tile, src) => {\n   *   const image = tile.getImage();\n   *   fetch(src)\n   *     .then((response) => {\n   *       if (retryCodes.includes(response.status)) {\n   *         retries[src] = (retries[src] || 0) + 1;\n   *         if (retries[src] <= 3) {\n   *           setTimeout(() => tile.load(), retries[src] * 1000);\n   *         }\n   *         return Promise.reject();\n   *       }\n   *       return response.blob();\n   *     })\n   *     .then((blob) => {\n   *       const imageUrl = URL.createObjectURL(blob);\n   *       image.src = imageUrl;\n   *       setTimeout(() => URL.revokeObjectURL(imageUrl), 5000);\n   *     })\n   *     .catch(() => tile.setState(3)); // error\n   * });\n   * ```\n   * @api\n   * @override\n   */\n  load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this),\n      );\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n\n  /**\n   * @override\n   */\n  disposeInternal() {\n    this.unlistenImage_();\n    this.image_ = null;\n    super.disposeInternal();\n  }\n}\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement|OffscreenCanvas} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange} [tileRange] TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  }\n  return new TileRange(minX, maxX, minY, maxY);\n}\n\nexport default TileRange;\n","/**\n * @module ol/reproj\n */\nimport {createCanvasContext2D, releaseCanvas} from './dom.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  extend,\n  forEachCorner,\n  getCenter,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from './extent.js';\nimport {solveLinearSystem} from './math.js';\nimport {getPointResolution, transform} from './proj.js';\n\nlet brokenDiagonalRendering_;\n\n/**\n * @type {Array<HTMLCanvasElement|OffscreenCanvas>}\n */\nexport const canvasPool = [];\n\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D|OffscreenCanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(u1, v1);\n  ctx.lineTo(u2, v2);\n  ctx.closePath();\n  ctx.save();\n  ctx.clip();\n  ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n  ctx.restore();\n}\n\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n  // the values ought to be close to the rgba(210, 0, 0, 0.75)\n  return (\n    Math.abs(data[offset * 4] - 210) > 2 ||\n    Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2\n  );\n}\n\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n  if (brokenDiagonalRendering_ === undefined) {\n    const ctx = createCanvasContext2D(6, 6, canvasPool);\n    ctx.globalCompositeOperation = 'lighter';\n    ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n    drawTestTriangle(ctx, 4, 5, 4, 0);\n    drawTestTriangle(ctx, 4, 5, 0, 5);\n    const data = ctx.getImageData(0, 0, 3, 3).data;\n    brokenDiagonalRendering_ =\n      verifyBrokenDiagonalRendering(data, 0) ||\n      verifyBrokenDiagonalRendering(data, 4) ||\n      verifyBrokenDiagonalRendering(data, 8);\n    releaseCanvas(ctx);\n    canvasPool.push(ctx.canvas);\n  }\n\n  return brokenDiagonalRendering_;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(\n  sourceProj,\n  targetProj,\n  targetCenter,\n  targetResolution,\n) {\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(\n    targetProj,\n    targetResolution,\n    targetCenter,\n  );\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor =\n      getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n      sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(\n  sourceProj,\n  targetProj,\n  targetExtent,\n  targetResolution,\n) {\n  const targetCenter = getCenter(targetExtent);\n  let sourceResolution = calculateSourceResolution(\n    sourceProj,\n    targetProj,\n    targetCenter,\n    targetResolution,\n  );\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    forEachCorner(targetExtent, function (corner) {\n      sourceResolution = calculateSourceResolution(\n        sourceProj,\n        targetProj,\n        corner,\n        targetResolution,\n      );\n      return isFinite(sourceResolution) && sourceResolution > 0;\n    });\n  }\n\n  return sourceResolution;\n}\n\n/**\n * @typedef {Object} ImageExtent\n * @property {import(\"./extent.js\").Extent} extent Extent.\n * @property {import(\"./extent.js\").Extent} [clipExtent] Clip extent.\n * @property {import('./DataTile.js').ImageLike} image Image.\n */\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation Calculated triangulation.\n * @param {Array<ImageExtent>} sources Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean} [renderEdges] Render reprojection edges.\n * @param {boolean} [interpolate] Use linear interpolation when resampling.\n * @param {boolean} [drawSingle] Draw single source images directly without stitchContext.\n * @param {boolean} [clipExtent] Clip stitchContext to sourceExtent.\n * @return {HTMLCanvasElement|OffscreenCanvas} Canvas with reprojected data.\n */\nexport function render(\n  width,\n  height,\n  pixelRatio,\n  sourceResolution,\n  sourceExtent,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  renderEdges,\n  interpolate,\n  drawSingle,\n  clipExtent,\n) {\n  const context = createCanvasContext2D(\n    Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height),\n    canvasPool,\n  );\n\n  if (!interpolate) {\n    context.imageSmoothingEnabled = false;\n  }\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  function pixelRound(value) {\n    return Math.round(value * pixelRatio) / pixelRatio;\n  }\n\n  context.globalCompositeOperation = 'lighter';\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  let stitchContext;\n  const stitchScale = pixelRatio / sourceResolution;\n  // Round up Float32 scale values to prevent interpolation in Firefox.\n  const inverseScale = (interpolate ? 1 : 1 + Math.pow(2, -24)) / stitchScale;\n\n  if (!drawSingle || sources.length !== 1 || gutter !== 0) {\n    stitchContext = createCanvasContext2D(\n      Math.round(getWidth(sourceDataExtent) * stitchScale),\n      Math.round(getHeight(sourceDataExtent) * stitchScale),\n      canvasPool,\n    );\n\n    if (!interpolate) {\n      stitchContext.imageSmoothingEnabled = false;\n    }\n    if (sourceExtent && clipExtent) {\n      const xPos = (sourceExtent[0] - sourceDataExtent[0]) * stitchScale;\n      const yPos = -(sourceExtent[3] - sourceDataExtent[3]) * stitchScale;\n      const width = getWidth(sourceExtent) * stitchScale;\n      const height = getHeight(sourceExtent) * stitchScale;\n      stitchContext.rect(xPos, yPos, width, height);\n      stitchContext.clip();\n    }\n\n    sources.forEach(function (src, i, arr) {\n      // This test should never fail -- but it does. Need to find a fix the upstream condition\n      if (src.image.width > 0 && src.image.height > 0) {\n        if (src.clipExtent) {\n          stitchContext.save();\n          const xPos = (src.clipExtent[0] - sourceDataExtent[0]) * stitchScale;\n          const yPos = -(src.clipExtent[3] - sourceDataExtent[3]) * stitchScale;\n          const width = getWidth(src.clipExtent) * stitchScale;\n          const height = getHeight(src.clipExtent) * stitchScale;\n          stitchContext.rect(\n            interpolate ? xPos : Math.round(xPos),\n            interpolate ? yPos : Math.round(yPos),\n            interpolate ? width : Math.round(xPos + width) - Math.round(xPos),\n            interpolate ? height : Math.round(yPos + height) - Math.round(yPos),\n          );\n          stitchContext.clip();\n        }\n\n        const xPos = (src.extent[0] - sourceDataExtent[0]) * stitchScale;\n        const yPos = -(src.extent[3] - sourceDataExtent[3]) * stitchScale;\n        const srcWidth = getWidth(src.extent) * stitchScale;\n        const srcHeight = getHeight(src.extent) * stitchScale;\n        stitchContext.drawImage(\n          src.image,\n          gutter,\n          gutter,\n          src.image.width - 2 * gutter,\n          src.image.height - 2 * gutter,\n          interpolate ? xPos : Math.round(xPos),\n          interpolate ? yPos : Math.round(yPos),\n          interpolate\n            ? srcWidth\n            : Math.round(xPos + srcWidth) - Math.round(xPos),\n          interpolate\n            ? srcHeight\n            : Math.round(yPos + srcHeight) - Math.round(yPos),\n        );\n\n        if (src.clipExtent) {\n          stitchContext.restore();\n        }\n      }\n    });\n  }\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function (triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0],\n      y0 = source[0][1];\n    let x1 = source[1][0],\n      y1 = source[1][1];\n    let x2 = source[2][0],\n      y2 = source[2][1];\n    // Make sure that everything is on pixel boundaries\n    const u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n    const v0 = pixelRound(\n      -(target[0][1] - targetTopLeft[1]) / targetResolution,\n    );\n    const u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n    const v1 = pixelRound(\n      -(target[1][1] - targetTopLeft[1]) / targetResolution,\n    );\n    const u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n    const v2 = pixelRound(\n      -(target[2][1] - targetTopLeft[1]) / targetResolution,\n    );\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0],\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n\n    if (isBrokenDiagonalRendering() || !interpolate) {\n      // Make sure that all lines are horizontal or vertical\n      context.moveTo(u1, v1);\n      // This is the diagonal line. Do it in 4 steps\n      const steps = 4;\n      const ud = u0 - u1;\n      const vd = v0 - v1;\n      for (let step = 0; step < steps; step++) {\n        // Go horizontally\n        context.lineTo(\n          u1 + pixelRound(((step + 1) * ud) / steps),\n          v1 + pixelRound((step * vd) / (steps - 1)),\n        );\n        // Go vertically\n        if (step != steps - 1) {\n          context.lineTo(\n            u1 + pixelRound(((step + 1) * ud) / steps),\n            v1 + pixelRound(((step + 1) * vd) / (steps - 1)),\n          );\n        }\n      }\n      // We are almost at u0r, v0r\n      context.lineTo(u2, v2);\n    } else {\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n    }\n\n    context.clip();\n\n    context.transform(\n      affineCoefs[0],\n      affineCoefs[2],\n      affineCoefs[1],\n      affineCoefs[3],\n      u0,\n      v0,\n    );\n\n    context.translate(\n      sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY,\n    );\n\n    let image;\n    if (stitchContext) {\n      image = stitchContext.canvas;\n      context.scale(inverseScale, -inverseScale);\n    } else {\n      const source = sources[0];\n      const extent = source.extent;\n      image = source.image;\n      context.scale(\n        getWidth(extent) / image.width,\n        -getHeight(extent) / image.height,\n      );\n    }\n\n    context.drawImage(image, 0, 0);\n    context.restore();\n  });\n\n  if (stitchContext) {\n    releaseCanvas(stitchContext);\n    canvasPool.push(stitchContext.canvas);\n  }\n\n  if (renderEdges) {\n    context.save();\n\n    context.globalCompositeOperation = 'source-over';\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {\n  boundingExtent,\n  createEmpty,\n  extendCoordinate,\n  getArea,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n  intersects,\n} from '../extent.js';\nimport {modulo} from '../math.js';\nimport {\n  createTransformFromCoordinateTransform,\n  getTransform,\n  transform,\n} from '../proj.js';\nimport {apply as applyMatrix} from '../transform.js';\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source Source.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target Target.\n */\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   * @param {?number} destinationResolution The (optional) resolution of the destination.\n   * @param {import(\"../transform.js\").Transform} [sourceMatrix] Source transform matrix.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    maxSourceExtent,\n    errorThreshold,\n    destinationResolution,\n    sourceMatrix,\n  ) {\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = sourceMatrix\n      ? createTransformFromCoordinateTransform((input) =>\n          applyMatrix(\n            sourceMatrix,\n            transform(input, this.targetProj_, this.sourceProj_),\n          ),\n        )\n      : getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function (c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array<Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ =\n      this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      getWidth(maxSourceExtent) >= getWidth(this.sourceProj_.getExtent());\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n      ? getWidth(this.sourceProj_.getExtent())\n      : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent()\n      ? getWidth(this.targetProj_.getExtent())\n      : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    /*\n     * The maxSubdivision controls how many splittings of the target area can\n     * be done. The idea here is to do a linear mapping of the target areas\n     * but the actual overall reprojection (can be) extremely non-linear. The\n     * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n     * tile size. However this function is also called to remap canvas rendered\n     * layers which can be much larger. This calculation increases the maxSubdivision\n     * value by the right factor so that each 256x256 pixel area has\n     * MAX_SUBDIVISION divisions.\n     */\n    const maxSubdivision =\n      MAX_SUBDIVISION +\n      (destinationResolution\n        ? Math.max(\n            0,\n            Math.ceil(\n              Math.log2(\n                getArea(targetExtent) /\n                  (destinationResolution * destinationResolution * 256 * 256),\n              ),\n            ),\n          )\n        : 0);\n\n    this.addQuad_(\n      destinationTopLeft,\n      destinationTopRight,\n      destinationBottomRight,\n      destinationBottomLeft,\n      sourceTopLeft,\n      sourceTopRight,\n      sourceBottomRight,\n      sourceBottomLeft,\n      maxSubdivision,\n    );\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function (triangle, i, arr) {\n        leftBound = Math.min(\n          leftBound,\n          triangle.source[0][0],\n          triangle.source[1][0],\n          triangle.source[2][0],\n        );\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach((triangle) => {\n        if (\n          Math.max(\n            triangle.source[0][0],\n            triangle.source[1][0],\n            triangle.source[2][0],\n          ) -\n            leftBound >\n          this.sourceWorldWidth_ / 2\n        ) {\n          const newTriangle = [\n            [triangle.source[0][0], triangle.source[0][1]],\n            [triangle.source[1][0], triangle.source[1][1]],\n            [triangle.source[2][0], triangle.source[2][1]],\n          ];\n          if (newTriangle[0][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[0][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[1][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[1][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[2][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[2][0] -= this.sourceWorldWidth_;\n          }\n\n          // Rarely (if the extent contains both the dateline and prime meridian)\n          // the shift can in turn break some triangles.\n          // Detect this here and don't shift in such cases.\n          const minX = Math.min(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0],\n          );\n          const maxX = Math.max(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0],\n          );\n          if (maxX - minX < this.sourceWorldWidth_ / 2) {\n            triangle.source = newTriangle;\n          }\n        }\n      });\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c],\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_\n      ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n      : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX =\n      this.sourceProj_.canWrapX() &&\n      sourceCoverageX > 0.5 &&\n      sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX =\n          getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision =\n          targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision =\n          sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (\n        isFinite(sourceQuadExtent[0]) &&\n        isFinite(sourceQuadExtent[1]) &&\n        isFinite(sourceQuadExtent[2]) &&\n        isFinite(sourceQuadExtent[3])\n      ) {\n        if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n          // whole quad outside source projection extent -> ignore\n          return;\n        }\n      }\n    }\n\n    let isNotFinite = 0;\n\n    if (!needsSubdivision) {\n      if (\n        !isFinite(aSrc[0]) ||\n        !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) ||\n        !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) ||\n        !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) ||\n        !isFinite(dSrc[1])\n      ) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          // It might be the case that only 1 of the points is infinite. In this case\n          // we can draw a single triangle with the other three points\n          isNotFinite =\n            (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n          if (\n            isNotFinite != 1 &&\n            isNotFinite != 2 &&\n            isNotFinite != 4 &&\n            isNotFinite != 8\n          ) {\n            return;\n          }\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n              modulo(cSrc[0], sourceWorldWidth)) /\n            2;\n          dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a,\n            b,\n            bc,\n            da,\n            aSrc,\n            bSrc,\n            bcSrc,\n            daSrc,\n            maxSubdivision - 1,\n          );\n          this.addQuad_(\n            da,\n            bc,\n            c,\n            d,\n            daSrc,\n            bcSrc,\n            cSrc,\n            dSrc,\n            maxSubdivision - 1,\n          );\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a,\n            ab,\n            cd,\n            d,\n            aSrc,\n            abSrc,\n            cdSrc,\n            dSrc,\n            maxSubdivision - 1,\n          );\n          this.addQuad_(\n            ab,\n            b,\n            c,\n            cd,\n            abSrc,\n            bSrc,\n            cSrc,\n            cdSrc,\n            maxSubdivision - 1,\n          );\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    // Exactly zero or one of *Src is not finite\n    // The triangles must have the diagonal line as the first side\n    // This is to allow easy code in reproj.s to make it straight for broken\n    // browsers that can't handle diagonal clipping\n    if ((isNotFinite & 0xb) == 0) {\n      this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    }\n    if ((isNotFinite & 0xe) == 0) {\n      this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n    }\n    if (isNotFinite) {\n      // Try the other two triangles\n      if ((isNotFinite & 0xd) == 0) {\n        this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n      }\n      if ((isNotFinite & 0x7) == 0) {\n        this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n      }\n    }\n  }\n\n  /**\n   * Calculates extent of the `source` coordinates from all the triangles.\n   *\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function (triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array<Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n","/**\n * @module ol/reproj/Tile\n */\n\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport {releaseCanvas} from '../dom.js';\nimport EventType from '../events/EventType.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {getArea, getIntersection, getWidth, wrapAndSliceX} from '../extent.js';\nimport {clamp} from '../math.js';\nimport {\n  calculateSourceExtentResolution,\n  canvasPool,\n  render as renderReprojected,\n} from '../reproj.js';\nimport Triangulation from './Triangulation.js';\nimport {ERROR_THRESHOLD} from './common.js';\n\n/**\n * @typedef {function(number, number, number, number) : (import(\"../ImageTile.js\").default)} FunctionType\n */\n\n/**\n * @typedef {Object} TileOffset\n * @property {import(\"../ImageTile.js\").default} tile Tile.\n * @property {number} offset Offset.\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nclass ReprojTile extends Tile {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n   * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} gutter Gutter of the source tiles.\n   * @param {FunctionType} getTileFunction\n   *     Function returning source tiles (z, x, y, pixelRatio).\n   * @param {number} [errorThreshold] Acceptable reprojection error (in px).\n   * @param {boolean} [renderEdges] Render reprojection edges.\n   * @param {import(\"../Tile.js\").Options} [options] Tile options.\n   */\n  constructor(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    errorThreshold,\n    renderEdges,\n    options,\n  ) {\n    super(tileCoord, TileState.IDLE, options);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = renderEdges !== undefined ? renderEdges : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|OffscreenCanvas}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<TileOffset>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.clipExtent_ = sourceProj.canWrapX()\n      ? sourceProj.getExtent()\n      : undefined;\n\n    const targetExtent = targetTileGrid.getTileCoordExtent(\n      this.wrappedTileCoord_,\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0],\n    );\n\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution,\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      errorThreshold !== undefined ? errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution,\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3],\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3],\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      let worldWidth = 0;\n      let worldsAway = 0;\n      if (sourceProj.canWrapX()) {\n        worldWidth = getWidth(sourceProjExtent);\n        worldsAway = Math.floor(\n          (sourceExtent[0] - sourceProjExtent[0]) / worldWidth,\n        );\n      }\n\n      const sourceExtents = wrapAndSliceX(\n        sourceExtent.slice(),\n        sourceProj,\n        true,\n      );\n      sourceExtents.forEach((extent) => {\n        const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n          extent,\n          this.sourceZ_,\n        );\n\n        for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n          for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n            const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n            if (tile) {\n              const offset = worldsAway * worldWidth;\n              this.sourceTiles_.push({tile, offset});\n            }\n          }\n        }\n        ++worldsAway;\n      });\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement|OffscreenCanvas} Canvas.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sources = [];\n    this.sourceTiles_.forEach((source) => {\n      const tile = source.tile;\n      if (tile && tile.getState() == TileState.LOADED) {\n        const extent = this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord);\n        extent[0] += source.offset;\n        extent[2] += source.offset;\n        const clipExtent = this.clipExtent_?.slice();\n        if (clipExtent) {\n          clipExtent[0] += source.offset;\n          clipExtent[2] += source.offset;\n        }\n        sources.push({\n          extent: extent,\n          clipExtent: clipExtent,\n          image: tile.getImage(),\n        });\n      }\n    });\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const width = typeof size === 'number' ? size : size[0];\n      const height = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_,\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_,\n      );\n\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        this.renderEdges_,\n        this.interpolate,\n      );\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @override\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      let leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach(({tile}) => {\n        const state = tile.getState();\n        if (state == TileState.IDLE || state == TileState.LOADING) {\n          leftToLoad++;\n\n          const sourceListenKey = listen(tile, EventType.CHANGE, (e) => {\n            const state = tile.getState();\n            if (\n              state == TileState.LOADED ||\n              state == TileState.ERROR ||\n              state == TileState.EMPTY\n            ) {\n              unlistenByKey(sourceListenKey);\n              leftToLoad--;\n              if (leftToLoad === 0) {\n                this.unlistenSources_();\n                this.reproject_();\n              }\n            }\n          });\n          this.sourcesListenerKeys_.push(sourceListenKey);\n        }\n      });\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      } else {\n        this.sourceTiles_.forEach(function ({tile}, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE) {\n            tile.load();\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   * @override\n   */\n  release() {\n    if (this.canvas_) {\n      releaseCanvas(\n        /** @type {CanvasRenderingContext2D|OffscreenCanvasRenderingContext2D} */ (\n          this.canvas_.getContext('2d')\n        ),\n      );\n      canvasPool.push(this.canvas_);\n      this.canvas_ = null;\n    }\n    super.release();\n  }\n}\n\nexport default ReprojTile;\n","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n","/**\n * @module ol/structs/LRUCache\n */\n\nimport Disposable from '../Disposable.js';\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Entry|null} newer Newer.\n * @property {Entry|null} older Older.\n * @property {*} value_ Value.\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n  /**\n   * @param {number} [highWaterMark] High water mark.\n   */\n  constructor(highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark = highWaterMark !== undefined ? highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n\n  deleteOldest() {\n    const entry = this.pop();\n    if (entry instanceof Disposable) {\n      entry.dispose();\n    }\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  }\n\n  /**\n   * Expire the cache. When the cache entry is a {@link module:ol/Disposable~Disposable},\n   * the entry will be disposed.\n   * @param {!Object<string, boolean>} [keep] Keys to keep. To be implemented by subclasses.\n   */\n  expireCache(keep) {\n    while (this.canExpireCache()) {\n      this.deleteOldest();\n    }\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    while (this.oldest_) {\n      this.deleteOldest();\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {*} [options] Options (reserved for subclasses).\n   * @return {T} Value.\n   */\n  get(key, options) {\n    const entry = this.entries_[key];\n    assert(\n      entry !== undefined,\n      'Tried to get a value for a key that does not exist in the cache',\n    );\n    if (entry === this.newest_) {\n      return entry.value_;\n    }\n    if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(\n      entry !== undefined,\n      'Tried to get a value for a key that does not exist in the cache',\n    );\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n  /**\n   * Return an entry without updating least recently used time.\n   * @param {string} key Key.\n   * @return {T|undefined} Value.\n   */\n  peek(key) {\n    return this.entries_[key]?.value_;\n  }\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(\n      !(key in this.entries_),\n      'Tried to set a value for a key that is used already',\n    );\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value,\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n}\n\nexport default LRUCache;\n","/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord} [tileCoord] Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, tileCoord) {\n  if (tileCoord !== undefined) {\n    tileCoord[0] = z;\n    tileCoord[1] = x;\n    tileCoord[2] = y;\n    return tileCoord;\n  }\n  return [z, x, y];\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get the tile cache key for a tile key obtained through `tile.getKey()`.\n * @param {string} tileKey The tile key.\n * @return {string} The cache key.\n */\nexport function getCacheKeyForTileKey(tileKey) {\n  const [z, x, y] = tileKey\n    .substring(tileKey.lastIndexOf('/') + 1, tileKey.length)\n    .split(',')\n    .map(Number);\n  return getKeyZXY(z, x, y);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return hashZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * @param {number} z The tile z coordinate.\n * @param {number} x The tile x coordinate.\n * @param {number} y The tile y coordinate.\n * @return {number} Hash.\n */\nexport function hashZXY(z, x, y) {\n  return (x << z) + y;\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  }\n  return tileRange.containsXY(x, y);\n}\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport DataTile, {asImageLike} from '../../DataTile.js';\nimport ImageTile from '../../ImageTile.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {ascending} from '../../array.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  equals,\n  getIntersection,\n  getRotatedViewport,\n  getTopLeft,\n  intersects,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\nimport ReprojTile from '../../reproj/Tile.js';\nimport {toSize} from '../../size.js';\nimport LRUCache from '../../structs/LRUCache.js';\nimport {createOrUpdate as createTileCoord, getKeyZXY} from '../../tilecoord.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n} from '../../transform.js';\nimport {getUid} from '../../util.js';\nimport CanvasLayerRenderer from './Layer.js';\n\n/**\n * @param {import(\"../../source/Tile.js\").default} source The tile source.\n * @param {string} sourceKey The source key.\n * @param {number} z The tile z level.\n * @param {number} x The tile x level.\n * @param {number} y The tile y level.\n * @return {string} The cache key.\n */\nfunction getCacheKey(source, sourceKey, z, x, y) {\n  return `${getUid(source)},${sourceKey},${getKeyZXY(z, x, y)}`;\n}\n\n/**\n * @typedef {Object<number, Set<import(\"../../Tile.js\").default>>} TileLookup\n */\n\n/**\n * Add a tile to the lookup.\n * @param {TileLookup} tilesByZ Lookup of tiles by zoom level.\n * @param {import(\"../../Tile.js\").default} tile A tile.\n * @param {number} z The zoom level.\n * @return {boolean} The tile was added to the lookup.\n */\nfunction addTileToLookup(tilesByZ, tile, z) {\n  if (!(z in tilesByZ)) {\n    tilesByZ[z] = new Set([tile]);\n    return true;\n  }\n  const set = tilesByZ[z];\n  const existing = set.has(tile);\n  if (!existing) {\n    set.add(tile);\n  }\n  return !existing;\n}\n\n/**\n * Remove a tile from the lookup.\n * @param {TileLookup} tilesByZ Lookup of tiles by zoom level.\n * @param {import(\"../../Tile.js\").default} tile A tile.\n * @param {number} z The zoom level.\n * @return {boolean} The tile was removed from the lookup.\n */\nfunction removeTileFromLookup(tilesByZ, tile, z) {\n  const set = tilesByZ[z];\n  if (set) {\n    return set.delete(tile);\n  }\n  return false;\n}\n\n/**\n * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n * @param {import(\"../../extent.js\").Extent} extent The frame extent.\n * @return {import(\"../../extent.js\").Extent} Frame extent intersected with layer extents.\n */\nfunction getRenderExtent(frameState, extent) {\n  const layerState = frameState.layerStatesArray[frameState.layerIndex];\n  if (layerState.extent) {\n    extent = getIntersection(\n      extent,\n      fromUserExtent(layerState.extent, frameState.viewState.projection),\n    );\n  }\n  const source = /** @type {import(\"../../source/Tile.js\").default} */ (\n    layerState.layer.getRenderSource()\n  );\n  if (!source.getWrapX()) {\n    const gridExtent = source\n      .getTileGridForProjection(frameState.viewState.projection)\n      .getExtent();\n    if (gridExtent) {\n      extent = getIntersection(extent, gridExtent);\n    }\n  }\n  return extent;\n}\n\n/**\n * @typedef {Object} Options\n * @property {number} [cacheSize=512] The cache size.\n */\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n * @template {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default} [LayerType=import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default]\n * @extends {CanvasLayerRenderer<LayerType>}\n */\nclass CanvasTileLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {LayerType} tileLayer Tile layer.\n   * @param {Options} [options] Options.\n   */\n  constructor(tileLayer, options) {\n    super(tileLayer);\n\n    options = options || {};\n\n    /**\n     * Rendered extent has changed since the previous `renderFrame()` call\n     * @type {boolean}\n     */\n    this.extentChanged = true;\n\n    /**\n     * The last call to `renderFrame` was completed with all tiles loaded\n     * @type {boolean}\n     */\n    this.renderComplete = false;\n\n    /**\n     * @private\n     * @type {?import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedPixelRatio;\n\n    /**\n     * @protected\n     * @type {import(\"../../proj/Projection.js\").default|null}\n     */\n    this.renderedProjection = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.renderedSourceKey_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedSourceRevision_;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tempExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tempTileRange_ = new TileRange(0, 0, 0, 0);\n\n    /**\n     * @type {import(\"../../tilecoord.js\").TileCoord}\n     * @private\n     */\n    this.tempTileCoord_ = createTileCoord(0, 0, 0);\n\n    const cacheSize = options.cacheSize !== undefined ? options.cacheSize : 512;\n\n    /**\n     * @type {import(\"../../structs/LRUCache.js\").default<import(\"../../Tile.js\").default>}\n     * @private\n     */\n    this.tileCache_ = new LRUCache(cacheSize);\n\n    this.maxStaleKeys = cacheSize * 0.5;\n  }\n\n  /**\n   * @return {LRUCache} Tile cache.\n   */\n  getTileCache() {\n    return this.tileCache_;\n  }\n\n  /**\n   * Get a tile from the cache or create one if needed.\n   *\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {import(\"../../Tile.js\").default|null} Tile (or null if outside source extent).\n   * @protected\n   */\n  getOrCreateTile(z, x, y, frameState) {\n    const tileCache = this.tileCache_;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const cacheKey = getCacheKey(tileSource, tileSource.getKey(), z, x, y);\n\n    /** @type {import(\"../../Tile.js\").default} */\n    let tile;\n\n    if (tileCache.containsKey(cacheKey)) {\n      tile = tileCache.get(cacheKey);\n    } else {\n      tile = tileSource.getTile(\n        z,\n        x,\n        y,\n        frameState.pixelRatio,\n        frameState.viewState.projection,\n      );\n      if (!tile) {\n        return null;\n      }\n      tileCache.set(cacheKey, tile);\n    }\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {import(\"../../Tile.js\").default|null} Tile (or null if outside source extent).\n   * @protected\n   */\n  getTile(z, x, y, frameState) {\n    const tile = this.getOrCreateTile(z, x, y, frameState);\n    if (!tile) {\n      return null;\n    }\n    return tile;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   * @override\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice(),\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const viewState = frameState.viewState;\n    const source = layer.getRenderSource();\n    const tileGrid = source.getTileGridForProjection(viewState.projection);\n    const tilePixelRatio = source.getTilePixelRatio(frameState.pixelRatio);\n\n    for (\n      let z = tileGrid.getZForResolution(viewState.resolution);\n      z >= tileGrid.getMinZoom();\n      --z\n    ) {\n      const tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n      const tile = this.getTile(z, tileCoord[1], tileCoord[2], frameState);\n      if (!tile || tile.getState() !== TileState.LOADED) {\n        continue;\n      }\n\n      const tileOrigin = tileGrid.getOrigin(z);\n      const tileSize = toSize(tileGrid.getTileSize(z));\n      const tileResolution = tileGrid.getResolution(z);\n\n      /**\n       * @type {import('../../DataTile.js').ImageLike}\n       */\n      let image;\n      if (tile instanceof ImageTile || tile instanceof ReprojTile) {\n        image = tile.getImage();\n      } else if (tile instanceof DataTile) {\n        image = asImageLike(tile.getData());\n        if (!image) {\n          continue;\n        }\n      } else {\n        continue;\n      }\n\n      const col = Math.floor(\n        tilePixelRatio *\n          ((coordinate[0] - tileOrigin[0]) / tileResolution -\n            tileCoord[1] * tileSize[0]),\n      );\n\n      const row = Math.floor(\n        tilePixelRatio *\n          ((tileOrigin[1] - coordinate[1]) / tileResolution -\n            tileCoord[2] * tileSize[1]),\n      );\n\n      const gutter = Math.round(\n        tilePixelRatio * source.getGutterForProjection(viewState.projection),\n      );\n\n      return this.getImageData(image, col + gutter, row + gutter);\n    }\n\n    return null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   * @override\n   */\n  prepareFrame(frameState) {\n    if (!this.renderedProjection) {\n      this.renderedProjection = frameState.viewState.projection;\n    } else if (frameState.viewState.projection !== this.renderedProjection) {\n      this.tileCache_.clear();\n      this.renderedProjection = frameState.viewState.projection;\n    }\n\n    const source = this.getLayer().getSource();\n    if (!source) {\n      return false;\n    }\n    const sourceRevision = source.getRevision();\n    if (!this.renderedSourceRevision_) {\n      this.renderedSourceRevision_ = sourceRevision;\n    } else if (this.renderedSourceRevision_ !== sourceRevision) {\n      this.renderedSourceRevision_ = sourceRevision;\n      if (this.renderedSourceKey_ === source.getKey()) {\n        this.tileCache_.clear();\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Determine whether tiles for next extent should be enqueued for rendering.\n   * @return {boolean} Rendering tiles for next extent is supported.\n   * @protected\n   */\n  enqueueTilesForNextExtent() {\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent The extent to be rendered.\n   * @param {number} initialZ The zoom level.\n   * @param {TileLookup} tilesByZ Lookup of tiles by zoom level.\n   * @param {number} preload Number of additional levels to load.\n   */\n  enqueueTiles(frameState, extent, initialZ, tilesByZ, preload) {\n    const viewState = frameState.viewState;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getRenderSource();\n    const tileGrid = tileSource.getTileGridForProjection(viewState.projection);\n\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n\n    const map = tileLayer.getMapInternal();\n    const minZ = Math.max(\n      initialZ - preload,\n      tileGrid.getMinZoom(),\n      tileGrid.getZForResolution(\n        Math.min(\n          tileLayer.getMaxResolution(),\n          map\n            ? map\n                .getView()\n                .getResolutionForZoom(Math.max(tileLayer.getMinZoom(), 0))\n            : tileGrid.getResolution(0),\n        ),\n        tileSource.zDirection,\n      ),\n    );\n    const rotation = viewState.rotation;\n    const viewport = rotation\n      ? getRotatedViewport(\n          viewState.center,\n          viewState.resolution,\n          rotation,\n          frameState.size,\n        )\n      : undefined;\n    for (let z = initialZ; z >= minZ; --z) {\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(\n        extent,\n        z,\n        this.tempTileRange_,\n      );\n\n      const tileResolution = tileGrid.getResolution(z);\n\n      for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (\n            rotation &&\n            !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n          ) {\n            continue;\n          }\n          const tile = this.getTile(z, x, y, frameState);\n          if (!tile) {\n            continue;\n          }\n          const added = addTileToLookup(tilesByZ, tile, z);\n          if (!added) {\n            continue;\n          }\n\n          const tileQueueKey = tile.getKey();\n          wantedTiles[tileQueueKey] = true;\n\n          if (tile.getState() === TileState.IDLE) {\n            if (!frameState.tileQueue.isKeyQueued(tileQueueKey)) {\n              const tileCoord = createTileCoord(z, x, y, this.tempTileCoord_);\n              frameState.tileQueue.enqueue([\n                tile,\n                tileSourceKey,\n                tileGrid.getTileCoordCenter(tileCoord),\n                tileResolution,\n              ]);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Look for tiles covering the provided tile coordinate at an alternate\n   * zoom level.  Loaded tiles will be added to the provided tile texture lookup.\n   * @param {import(\"../../tilecoord.js\").TileCoord} tileCoord The target tile coordinate.\n   * @param {TileLookup} tilesByZ Lookup of tiles by zoom level.\n   * @return {boolean} The tile coordinate is covered by loaded tiles at the alternate zoom level.\n   * @private\n   */\n  findStaleTile_(tileCoord, tilesByZ) {\n    const tileCache = this.tileCache_;\n    const z = tileCoord[0];\n    const x = tileCoord[1];\n    const y = tileCoord[2];\n    const staleKeys = this.getStaleKeys();\n    for (let i = 0; i < staleKeys.length; ++i) {\n      const cacheKey = getCacheKey(\n        this.getLayer().getSource(),\n        staleKeys[i],\n        z,\n        x,\n        y,\n      );\n      if (tileCache.containsKey(cacheKey)) {\n        const tile = tileCache.peek(cacheKey);\n        if (tile.getState() === TileState.LOADED) {\n          tile.endTransition(getUid(this));\n          addTileToLookup(tilesByZ, tile, z);\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Look for tiles covering the provided tile coordinate at an alternate\n   * zoom level.  Loaded tiles will be added to the provided tile texture lookup.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid The tile grid.\n   * @param {import(\"../../tilecoord.js\").TileCoord} tileCoord The target tile coordinate.\n   * @param {number} altZ The alternate zoom level.\n   * @param {TileLookup} tilesByZ Lookup of tiles by zoom level.\n   * @return {boolean} The tile coordinate is covered by loaded tiles at the alternate zoom level.\n   * @private\n   */\n  findAltTiles_(tileGrid, tileCoord, altZ, tilesByZ) {\n    const tileRange = tileGrid.getTileRangeForTileCoordAndZ(\n      tileCoord,\n      altZ,\n      this.tempTileRange_,\n    );\n\n    if (!tileRange) {\n      return false;\n    }\n\n    let covered = true;\n    const tileCache = this.tileCache_;\n    const source = this.getLayer().getRenderSource();\n    const sourceKey = source.getKey();\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        const cacheKey = getCacheKey(source, sourceKey, altZ, x, y);\n        let loaded = false;\n        if (tileCache.containsKey(cacheKey)) {\n          const tile = tileCache.peek(cacheKey);\n          if (tile.getState() === TileState.LOADED) {\n            addTileToLookup(tilesByZ, tile, altZ);\n            loaded = true;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * Render the layer.\n   *\n   * The frame rendering logic has three parts:\n   *\n   *  1. Enqueue tiles\n   *  2. Find alt tiles for those that are not yet loaded\n   *  3. Render loaded tiles\n   *\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   * @override\n   */\n  renderFrame(frameState, target) {\n    this.renderComplete = true;\n    /**\n     * TODO:\n     *  maybe skip transition when not fully opaque\n     *  decide if this.renderComplete is useful\n     */\n\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const viewResolution = viewState.resolution;\n    const viewCenter = viewState.center;\n    const pixelRatio = frameState.pixelRatio;\n\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n\n    const sourceKey = tileSource.getKey();\n    if (!this.renderedSourceKey_) {\n      this.renderedSourceKey_ = sourceKey;\n    } else if (this.renderedSourceKey_ !== sourceKey) {\n      this.prependStaleKey(this.renderedSourceKey_);\n      this.renderedSourceKey_ = sourceKey;\n    }\n\n    let frameExtent = frameState.extent;\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n\n    this.prepareContainer(frameState, target);\n\n    // desired dimensions of the canvas in pixels\n    const width = this.context.canvas.width;\n    const height = this.context.canvas.height;\n\n    const layerExtent =\n      layerState.extent && fromUserExtent(layerState.extent, projection);\n    if (layerExtent) {\n      frameExtent = getIntersection(\n        frameExtent,\n        fromUserExtent(layerState.extent, projection),\n      );\n    }\n\n    const dx = (tileResolution * width) / 2 / tilePixelRatio;\n    const dy = (tileResolution * height) / 2 / tilePixelRatio;\n    const canvasExtent = [\n      viewCenter[0] - dx,\n      viewCenter[1] - dy,\n      viewCenter[0] + dx,\n      viewCenter[1] + dy,\n    ];\n\n    /**\n     * @type {TileLookup}\n     */\n    const tilesByZ = {};\n\n    this.renderedTiles.length = 0;\n\n    /**\n     * Part 1: Enqueue tiles\n     */\n\n    const preload = tileLayer.getPreload();\n    if (frameState.nextExtent && this.enqueueTilesForNextExtent()) {\n      const targetZ = tileGrid.getZForResolution(\n        viewState.nextResolution,\n        tileSource.zDirection,\n      );\n      const nextExtent = getRenderExtent(frameState, frameState.nextExtent);\n      this.enqueueTiles(frameState, nextExtent, targetZ, tilesByZ, preload);\n    }\n\n    const renderExtent = getRenderExtent(frameState, frameExtent);\n    this.enqueueTiles(frameState, renderExtent, z, tilesByZ, 0);\n    if (preload > 0) {\n      setTimeout(() => {\n        this.enqueueTiles(\n          frameState,\n          renderExtent,\n          z - 1,\n          tilesByZ,\n          preload - 1,\n        );\n      }, 0);\n    }\n\n    if (!(z in tilesByZ)) {\n      return this.container;\n    }\n\n    /**\n     * Part 2: Find alt tiles for those that are not yet loaded\n     */\n\n    const uid = getUid(this);\n    const time = frameState.time;\n\n    // look for cached tiles to use if a target tile is not ready\n    for (const tile of tilesByZ[z]) {\n      const tileState = tile.getState();\n      if (tileState === TileState.EMPTY) {\n        continue;\n      }\n      const tileCoord = tile.tileCoord;\n\n      if (tileState === TileState.LOADED) {\n        const alpha = tile.getAlpha(uid, time);\n        if (alpha === 1) {\n          // no need to look for alt tiles\n          tile.endTransition(uid);\n          continue;\n        }\n      }\n      if (tileState !== TileState.ERROR) {\n        this.renderComplete = false;\n      }\n\n      const hasStaleTile = this.findStaleTile_(tileCoord, tilesByZ);\n      if (hasStaleTile) {\n        // use the stale tile before the new tile's transition has completed\n        removeTileFromLookup(tilesByZ, tile, z);\n        frameState.animate = true;\n        continue;\n      }\n\n      // first look for child tiles (at z + 1)\n      const coveredByChildren = this.findAltTiles_(\n        tileGrid,\n        tileCoord,\n        z + 1,\n        tilesByZ,\n      );\n\n      if (coveredByChildren) {\n        continue;\n      }\n\n      // next look for parent tiles\n      const minZoom = tileGrid.getMinZoom();\n      for (let parentZ = z - 1; parentZ >= minZoom; --parentZ) {\n        const coveredByParent = this.findAltTiles_(\n          tileGrid,\n          tileCoord,\n          parentZ,\n          tilesByZ,\n        );\n\n        if (coveredByParent) {\n          break;\n        }\n      }\n    }\n\n    /**\n     * Part 3: Render loaded tiles\n     */\n\n    const canvasScale =\n      ((tileResolution / viewResolution) * pixelRatio) / tilePixelRatio;\n\n    const context = this.getRenderContext(frameState);\n\n    // set scale transform for calculating tile positions on the canvas\n    composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      canvasScale,\n      canvasScale,\n      0,\n      -width / 2,\n      -height / 2,\n    );\n\n    if (layerState.extent) {\n      this.clipUnrotated(context, frameState, layerExtent);\n    }\n\n    if (!tileSource.getInterpolate()) {\n      context.imageSmoothingEnabled = false;\n    }\n\n    this.preRender(context, frameState);\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(tilesByZ).map(Number);\n    zs.sort(ascending);\n\n    let currentClip;\n    const clips = [];\n    const clipZs = [];\n    for (let i = zs.length - 1; i >= 0; --i) {\n      const currentZ = zs[i];\n      const currentTilePixelSize = tileSource.getTilePixelSize(\n        currentZ,\n        pixelRatio,\n        projection,\n      );\n      const currentResolution = tileGrid.getResolution(currentZ);\n      const currentScale = currentResolution / tileResolution;\n      const dx = currentTilePixelSize[0] * currentScale * canvasScale;\n      const dy = currentTilePixelSize[1] * currentScale * canvasScale;\n      const originTileCoord = tileGrid.getTileCoordForCoordAndZ(\n        getTopLeft(canvasExtent),\n        currentZ,\n      );\n      const originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n      const origin = applyTransform(this.tempTransform, [\n        (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n          tileResolution,\n        (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n          tileResolution,\n      ]);\n      const tileGutter =\n        tilePixelRatio * tileSource.getGutterForProjection(projection);\n      for (const tile of tilesByZ[currentZ]) {\n        if (tile.getState() !== TileState.LOADED) {\n          continue;\n        }\n        const tileCoord = tile.tileCoord;\n\n        // Calculate integer positions and sizes so that tiles align\n        const xIndex = originTileCoord[1] - tileCoord[1];\n        const nextX = Math.round(origin[0] - (xIndex - 1) * dx);\n        const yIndex = originTileCoord[2] - tileCoord[2];\n        const nextY = Math.round(origin[1] - (yIndex - 1) * dy);\n        const x = Math.round(origin[0] - xIndex * dx);\n        const y = Math.round(origin[1] - yIndex * dy);\n        const w = nextX - x;\n        const h = nextY - y;\n        const transition = zs.length === 1;\n\n        let contextSaved = false;\n\n        // Clip mask for regions in this tile that already filled by a higher z tile\n        currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n        for (let i = 0, ii = clips.length; i < ii; ++i) {\n          if (!transition && currentZ < clipZs[i]) {\n            const clip = clips[i];\n            if (\n              intersects(\n                [x, y, x + w, y + h],\n                [clip[0], clip[3], clip[4], clip[7]],\n              )\n            ) {\n              if (!contextSaved) {\n                context.save();\n                contextSaved = true;\n              }\n              context.beginPath();\n              // counter-clockwise (outer ring) for current tile\n              context.moveTo(currentClip[0], currentClip[1]);\n              context.lineTo(currentClip[2], currentClip[3]);\n              context.lineTo(currentClip[4], currentClip[5]);\n              context.lineTo(currentClip[6], currentClip[7]);\n              // clockwise (inner ring) for higher z tile\n              context.moveTo(clip[6], clip[7]);\n              context.lineTo(clip[4], clip[5]);\n              context.lineTo(clip[2], clip[3]);\n              context.lineTo(clip[0], clip[1]);\n              context.clip();\n            }\n          }\n        }\n        clips.push(currentClip);\n        clipZs.push(currentZ);\n\n        this.drawTile(tile, frameState, x, y, w, h, tileGutter, transition);\n        if (contextSaved) {\n          context.restore();\n        }\n        this.renderedTiles.unshift(tile);\n\n        // TODO: decide if this is necessary\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n      }\n    }\n\n    this.renderedResolution = tileResolution;\n    this.extentChanged =\n      !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n    this.renderedExtent_ = canvasExtent;\n    this.renderedPixelRatio = pixelRatio;\n\n    this.postRender(this.context, frameState);\n\n    if (layerState.extent) {\n      context.restore();\n    }\n    context.imageSmoothingEnabled = true;\n\n    if (this.renderComplete) {\n      /**\n       * @param {import(\"../../Map.js\").default} map Map.\n       * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n       */\n      const postRenderFunction = (map, frameState) => {\n        const tileSourceKey = getUid(tileSource);\n        const wantedTiles = frameState.wantedTiles[tileSourceKey];\n        const tilesCount = wantedTiles ? Object.keys(wantedTiles).length : 0;\n        this.updateCacheSize(tilesCount);\n        this.tileCache_.expireCache();\n      };\n\n      frameState.postRenderFunctions.push(postRenderFunction);\n    }\n\n    // this normally is `div.ol-layer` and is a mocked div in worker\n    return this.container;\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   */\n  updateCacheSize(tileCount) {\n    this.tileCache_.highWaterMark = Math.max(\n      this.tileCache_.highWaterMark,\n      tileCount * 2,\n    );\n  }\n\n  /**\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   * @protected\n   */\n  drawTile(tile, frameState, x, y, w, h, gutter, transition) {\n    let image;\n    if (tile instanceof DataTile) {\n      image = asImageLike(tile.getData());\n      if (!image) {\n        throw new Error('Rendering array data is not yet supported');\n      }\n    } else {\n      image = this.getTileImage(\n        /** @type {import(\"../../ImageTile.js\").default} */ (tile),\n      );\n    }\n\n    if (!image) {\n      return;\n    }\n    const context = this.getRenderContext(frameState);\n    const uid = getUid(this);\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const alpha =\n      layerState.opacity *\n      (transition ? tile.getAlpha(uid, frameState.time) : 1);\n    const alphaChanged = alpha !== context.globalAlpha;\n    if (alphaChanged) {\n      context.save();\n      context.globalAlpha = alpha;\n    }\n    context.drawImage(\n      image,\n      gutter,\n      gutter,\n      image.width - 2 * gutter,\n      image.height - 2 * gutter,\n      x,\n      y,\n      w,\n      h,\n    );\n\n    if (alphaChanged) {\n      context.restore();\n    }\n    if (alpha !== layerState.opacity) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement|OffscreenCanvas} Image\n   */\n  getImage() {\n    const context = this.context;\n    return context ? context.canvas : null;\n  }\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|OffscreenCanvas|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  getTileImage(tile) {\n    return tile.getImage();\n  }\n\n  /**\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import('../../Tile.js').default} tile Tile.\n   * @protected\n   */\n  updateUsedTiles(usedTiles, tileSource, tile) {\n    // FIXME should we use tilesToDrawByZ instead?\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in usedTiles)) {\n      usedTiles[tileSourceKey] = {};\n    }\n    usedTiles[tileSourceKey][tile.getKey()] = true;\n  }\n}\n\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/renderer/canvas/VectorTileLayer\n */\nimport TileState from '../../TileState.js';\nimport ViewHint from '../../ViewHint.js';\nimport {ascending} from '../../array.js';\nimport {wrapX} from '../../coordinate.js';\nimport {\n  boundingExtent,\n  buffer,\n  containsExtent,\n  equals,\n  getIntersection,\n  getTopLeft,\n  intersects,\n} from '../../extent.js';\nimport {equivalent, getTransform, transformExtent} from '../../proj.js';\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasExecutorGroup, {\n  DECLUTTER,\n} from '../../render/canvas/ExecutorGroup.js';\nimport ZIndexContext from '../../render/canvas/ZIndexContext.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {toSize} from '../../size.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n  multiply,\n  reset as resetTransform,\n  scale,\n  scale as scaleTransform,\n  translate as translateTransform,\n} from '../../transform.js';\nimport {getUid} from '../../util.js';\nimport {\n  getSquaredTolerance as getSquaredRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport CanvasTileLayerRenderer from './TileLayer.js';\n\n/**\n * @type {!Object<string, Array<import(\"../../render/canvas.js\").BuilderType>>}\n */\nconst IMAGE_REPLAYS = {\n  'image': ['Polygon', 'Circle', 'LineString', 'Image', 'Text'],\n  'hybrid': ['Polygon', 'LineString'],\n  'vector': [],\n};\n\n/**\n * @type {!Object<string, Array<import(\"../../render/canvas.js\").BuilderType>>}\n */\nconst VECTOR_REPLAYS = {\n  'hybrid': ['Image', 'Text', 'Default'],\n  'vector': ['Polygon', 'Circle', 'LineString', 'Image', 'Text', 'Default'],\n};\n\n/**\n * @classdesc\n * Canvas renderer for vector tile layers.\n * @api\n * @extends {CanvasTileLayerRenderer<import(\"../../layer/VectorTile.js\").default<import('../../source/VectorTile.js').default<import('../../Feature.js').FeatureLike>>>}\n */\nclass CanvasVectorTileLayerRenderer extends CanvasTileLayerRenderer {\n  /**\n   * @param {import(\"../../layer/VectorTile.js\").default} layer VectorTile layer.\n   * @param {import(\"./TileLayer.js\").Options} options Options.\n   */\n  constructor(layer, options) {\n    super(layer, options);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedLayerRevision_;\n\n    /**\n     * @private\n     * @type {import(\"../../transform\").Transform}\n     */\n    this.renderedPixelToCoordinateTransform_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedOpacity_ = 1;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {Array<ZIndexContext>}\n     */\n    this.tileClipContexts_ = null;\n  }\n\n  /**\n   * Determine whether tiles for next extent should be enqueued for rendering.\n   * @return {boolean} Rendering tiles for next extent is supported.\n   * @override\n   */\n  enqueueTilesForNextExtent() {\n    return this.getLayer().getRenderMode() !== 'vector';\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   * @override\n   */\n  drawTile(tile, frameState, x, y, w, h, gutter, transition) {\n    this.updateExecutorGroup_(\n      tile,\n      frameState.pixelRatio,\n      frameState.viewState.projection,\n    );\n    if (this.tileImageNeedsRender_(tile)) {\n      this.renderTileImage_(tile, frameState);\n    }\n    super.drawTile(tile, frameState, x, y, w, h, gutter, transition);\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {import(\"../../Tile.js\").default|null} Tile (or null if outside source extent).\n   * @override\n   */\n  getTile(z, x, y, frameState) {\n    const tile = /** @type {import(\"../../VectorRenderTile.js\").default} */ (\n      this.getOrCreateTile(z, x, y, frameState)\n    );\n    if (!tile) {\n      return null;\n    }\n\n    const viewState = frameState.viewState;\n    const resolution = viewState.resolution;\n    const viewHints = frameState.viewHints;\n    const source = this.getLayer().getSource();\n    const tileGrid = source.getTileGridForProjection(viewState.projection);\n    const hifi = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const withinTileResolutionRange =\n      tileGrid.getZForResolution(resolution, source.zDirection) === z;\n    if (hifi && withinTileResolutionRange) {\n      tile.wantedResolution = resolution;\n    } else if (!tile.wantedResolution) {\n      tile.wantedResolution = tileGrid.getResolution(z);\n    }\n\n    return tile;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   * @override\n   */\n  prepareFrame(frameState) {\n    const layerRevision = this.getLayer().getRevision();\n    if (this.renderedLayerRevision_ !== layerRevision) {\n      this.renderedLayerRevision_ = layerRevision;\n      this.renderedTiles.length = 0;\n    }\n    return super.prepareFrame(frameState);\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @private\n   */\n  updateExecutorGroup_(tile, pixelRatio, projection) {\n    const layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (\n      this.getLayer()\n    );\n    const revision = layer.getRevision();\n    const renderOrder = layer.getRenderOrder() || null;\n\n    const resolution = tile.wantedResolution;\n    const builderState = tile.getReplayState(layer);\n    if (\n      !builderState.dirty &&\n      builderState.renderedResolution === resolution &&\n      builderState.renderedRevision == revision &&\n      builderState.renderedRenderOrder == renderOrder\n    ) {\n      return;\n    }\n\n    const source = layer.getSource();\n    const declutter = !!layer.getDeclutter();\n    const sourceTileGrid = source.getTileGrid();\n    const tileGrid = source.getTileGridForProjection(projection);\n    const tileExtent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n\n    const sourceTiles = source.getSourceTiles(pixelRatio, projection, tile);\n    const layerUid = getUid(layer);\n    delete tile.hitDetectionImageData[layerUid];\n    tile.executorGroups[layerUid] = [];\n    builderState.dirty = false;\n    for (let t = 0, tt = sourceTiles.length; t < tt; ++t) {\n      const sourceTile = sourceTiles[t];\n      if (sourceTile.getState() != TileState.LOADED) {\n        continue;\n      }\n      const sourceProjection = source.getProjection();\n      const sourceTileCoord = sourceTile.tileCoord;\n      let sourceTileExtent = sourceTileGrid.getTileCoordExtent(sourceTileCoord);\n      if (\n        projection &&\n        sourceProjection &&\n        !equivalent(projection, sourceProjection)\n      ) {\n        sourceTileExtent = transformExtent(\n          sourceTileExtent,\n          sourceProjection,\n          projection,\n          32,\n        );\n      }\n\n      const sharedExtent = getIntersection(tileExtent, sourceTileExtent);\n      const builderExtent = buffer(\n        sharedExtent,\n        layer.getRenderBuffer() * resolution,\n        this.tempExtent,\n      );\n      const bufferedExtent = equals(sourceTileExtent, sharedExtent)\n        ? null\n        : builderExtent;\n      const builderGroup = new CanvasBuilderGroup(\n        0,\n        sharedExtent,\n        resolution,\n        pixelRatio,\n      );\n      const squaredTolerance = getSquaredRenderTolerance(\n        resolution,\n        pixelRatio,\n      );\n\n      /**\n       * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n       * @param {number} [index] Render order index.\n       * @this {CanvasVectorTileLayerRenderer}\n       */\n      const render = function (feature, index) {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || layer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            builderGroup,\n            declutter,\n            index,\n          );\n          builderState.dirty = builderState.dirty || dirty;\n        }\n      };\n\n      const features = sourceTile.getFeatures();\n      if (renderOrder && renderOrder !== builderState.renderedRenderOrder) {\n        features.sort(renderOrder);\n      }\n      for (let i = 0, ii = features.length; i < ii; ++i) {\n        let feature = features[i];\n        if (\n          projection &&\n          sourceTile.projection &&\n          !equivalent(projection, sourceTile.projection)\n        ) {\n          feature = feature.clone();\n          feature\n            .getGeometry()\n            .applyTransform(getTransform(sourceTile.projection, projection));\n        }\n        if (\n          !bufferedExtent ||\n          intersects(bufferedExtent, feature.getGeometry().getExtent())\n        ) {\n          render.call(this, feature, i);\n        }\n      }\n      const executorGroupInstructions = builderGroup.finish();\n      // no need to clip when the render tile is covered by a single source tile\n      const replayExtent =\n        layer.getRenderMode() !== 'vector' &&\n        declutter &&\n        sourceTiles.length === 1\n          ? null\n          : sharedExtent;\n      const renderingReplayGroup = new CanvasExecutorGroup(\n        replayExtent,\n        resolution,\n        pixelRatio,\n        source.getOverlaps(),\n        executorGroupInstructions,\n        layer.getRenderBuffer(),\n        true,\n      );\n      tile.executorGroups[layerUid].push(renderingReplayGroup);\n    }\n    builderState.renderedRevision = revision;\n    builderState.renderedRenderOrder = renderOrder;\n    builderState.renderedResolution = resolution;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   * @override\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches,\n  ) {\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    hitTolerance = hitTolerance == undefined ? 0 : hitTolerance;\n    const layer = this.getLayer();\n    const source = layer.getSource();\n    const tileGrid = source.getTileGridForProjection(\n      frameState.viewState.projection,\n    );\n\n    const hitExtent = boundingExtent([coordinate]);\n    buffer(hitExtent, resolution * hitTolerance, hitExtent);\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position.\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      let key = feature.getId();\n      if (key === undefined) {\n        key = getUid(feature);\n      }\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          }),\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    const renderedTiles =\n      /** @type {Array<import(\"../../VectorRenderTile.js\").default>} */ (\n        this.renderedTiles\n      );\n    const layerUid = getUid(layer);\n    const declutter = layer.getDeclutter();\n    const declutteredFeatures = declutter\n      ? frameState.declutter?.[declutter]?.all().map((item) => item.value)\n      : null;\n    let found;\n    foundFeature: for (let i = 0, ii = renderedTiles.length; i < ii; ++i) {\n      const tile = renderedTiles[i];\n      const tileExtent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n      if (!intersects(tileExtent, hitExtent)) {\n        continue;\n      }\n\n      const executorGroups = tile.executorGroups[layerUid];\n      for (let t = 0, tt = executorGroups.length; t < tt; ++t) {\n        found = executorGroups[t].forEachFeatureAtCoordinate(\n          coordinate,\n          resolution,\n          rotation,\n          hitTolerance,\n          featureCallback,\n          declutteredFeatures,\n        );\n        if (found) {\n          break foundFeature;\n        }\n      }\n    }\n    return found;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature.js\").FeatureLike>>} Promise that resolves with an array of features.\n   * @override\n   */\n  getFeatures(pixel) {\n    if (this.renderedTiles.length === 0) {\n      return Promise.resolve([]);\n    }\n    return new Promise((resolve, reject) => {\n      const layer = this.getLayer();\n      const source = layer.getSource();\n      const projection = this.renderedProjection;\n      const projectionExtent = projection.getExtent();\n      const resolution = this.renderedResolution;\n      const tileGrid = source.getTileGridForProjection(projection);\n      const coordinate = applyTransform(\n        this.renderedPixelToCoordinateTransform_,\n        pixel.slice(),\n      );\n      const tileCoordString = tileGrid\n        .getTileCoordForCoordAndResolution(coordinate, resolution)\n        .toString();\n      const tile =\n        /** @type {Array<import(\"../../VectorRenderTile.js\").default>} */ (\n          this.renderedTiles\n        ).find(\n          (tile) =>\n            tile.tileCoord.toString() === tileCoordString &&\n            tile.getState() === TileState.LOADED,\n        );\n      if (!tile || tile.loadingSourceTiles > 0) {\n        resolve([]);\n        return;\n      }\n      if (\n        source.getWrapX() &&\n        projection.canWrapX() &&\n        !containsExtent(\n          projectionExtent,\n          tileGrid.getTileCoordExtent(tile.tileCoord),\n        )\n      ) {\n        wrapX(coordinate, projection);\n      }\n      const layerUid = getUid(layer);\n      const extent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n      const corner = getTopLeft(extent);\n      const tilePixel = [\n        (coordinate[0] - corner[0]) / resolution,\n        (corner[1] - coordinate[1]) / resolution,\n      ];\n      const features = tile\n        .getSourceTiles()\n        .reduce(\n          (accumulator, sourceTile) =>\n            accumulator.concat(sourceTile.getFeatures()),\n          /** @type {Array<import(\"../../Feature.js\").FeatureLike>} */ ([]),\n        );\n      let hitDetectionImageData = tile.hitDetectionImageData[layerUid];\n      if (!hitDetectionImageData) {\n        const tileSize = toSize(\n          tileGrid.getTileSize(\n            tileGrid.getZForResolution(resolution, source.zDirection),\n          ),\n        );\n        const rotation = this.renderedRotation_;\n        const transforms = [\n          this.getRenderTransform(\n            tileGrid.getTileCoordCenter(tile.wrappedTileCoord),\n            resolution,\n            0,\n            HIT_DETECT_RESOLUTION,\n            tileSize[0] * HIT_DETECT_RESOLUTION,\n            tileSize[1] * HIT_DETECT_RESOLUTION,\n            0,\n          ),\n        ];\n        hitDetectionImageData = createHitDetectionImageData(\n          tileSize,\n          transforms,\n          features,\n          layer.getStyleFunction(),\n          tileGrid.getTileCoordExtent(tile.wrappedTileCoord),\n          tile.getReplayState(layer).renderedResolution,\n          rotation,\n        );\n        tile.hitDetectionImageData[layerUid] = hitDetectionImageData;\n      }\n      resolve(hitDetect(tilePixel, features, hitDetectionImageData));\n    });\n  }\n\n  /**\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @return {Array<import('../../Feature.js').FeatureLike>} Features.\n   */\n  getFeaturesInExtent(extent) {\n    /** @type {Array<import('../../Feature.js').FeatureLike>} */\n    const features = [];\n    const tileCache = this.getTileCache();\n    if (tileCache.getCount() === 0) {\n      return features;\n    }\n    const source = this.getLayer().getSource();\n    const tileGrid = source.getTileGridForProjection(\n      this.frameState.viewState.projection,\n    );\n    const z = tileGrid.getZForResolution(this.renderedResolution);\n    /** @type {Object<string, true>} */\n    const visitedSourceTiles = {};\n    tileCache.forEach((tile) => {\n      if (tile.tileCoord[0] !== z || tile.getState() !== TileState.LOADED) {\n        return;\n      }\n      const sourceTiles = tile.getSourceTiles();\n      for (let i = 0, ii = sourceTiles.length; i < ii; ++i) {\n        const sourceTile = sourceTiles[i];\n        const key = sourceTile.getKey();\n        if (key in visitedSourceTiles) {\n          continue;\n        }\n        visitedSourceTiles[key] = true;\n        const tileCoord = sourceTile.tileCoord;\n        if (intersects(extent, tileGrid.getTileCoordExtent(tileCoord))) {\n          const tileFeatures = sourceTile.getFeatures();\n          if (tileFeatures) {\n            for (let j = 0, jj = tileFeatures.length; j < jj; ++j) {\n              const candidate = tileFeatures[j];\n              const geometry = candidate.getGeometry();\n              if (intersects(extent, geometry.getExtent())) {\n                features.push(candidate);\n              }\n            }\n          }\n        }\n      }\n    });\n    return features;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @override\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.renderedLayerRevision_ !== undefined) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../layer/Layer.js\").State} layerState Layer state.\n   */\n  renderDeclutter(frameState, layerState) {\n    const context = this.context;\n    const alpha = context.globalAlpha;\n    context.globalAlpha = layerState.opacity;\n    const viewHints = frameState.viewHints;\n    const hifi = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const scaledCanvasSize = [\n      this.context.canvas.width,\n      this.context.canvas.height,\n    ];\n    const declutter = this.getLayer().getDeclutter();\n    const declutterTree = declutter\n      ? frameState.declutter?.[declutter]\n      : undefined;\n    const layerUid = getUid(this.getLayer());\n    const tiles =\n      /** @type {Array<import(\"../../VectorRenderTile.js\").default>} */ (\n        this.renderedTiles\n      );\n    for (let i = 0, ii = tiles.length; i < ii; ++i) {\n      const tile = tiles[i];\n      const executorGroups = tile.executorGroups[layerUid];\n      if (executorGroups) {\n        for (let j = executorGroups.length - 1; j >= 0; --j) {\n          executorGroups[j].execute(\n            this.context,\n            scaledCanvasSize,\n            this.getTileRenderTransform(tile, frameState),\n            frameState.viewState.rotation,\n            hifi,\n            DECLUTTER,\n            declutterTree,\n          );\n        }\n      }\n    }\n    context.globalAlpha = alpha;\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @override\n   */\n  renderDeferredInternal(frameState) {\n    const tiles =\n      /** @type {Array<import(\"../../VectorRenderTile.js\").default>} */ (\n        this.renderedTiles\n      );\n    const layerUid = getUid(this.getLayer());\n    const executorGroups = tiles.reduce((acc, tile, index) => {\n      tile.executorGroups[layerUid].forEach((executorGroup) =>\n        acc.push({\n          executorGroup,\n          index,\n        }),\n      );\n      return acc;\n    }, /** @type {Array<{executorGroup: CanvasExecutorGroup, index: number}>} */ ([]));\n\n    const executorGroupZIndexContexts = executorGroups.map(({executorGroup}) =>\n      executorGroup.getDeferredZIndexContexts(),\n    );\n    /** @type {Object<number, true>} */\n    const usedZIndices = {};\n    for (let i = 0, ii = executorGroups.length; i < ii; ++i) {\n      const executorGroupZindexContext =\n        executorGroups[i].executorGroup.getDeferredZIndexContexts();\n      for (const key in executorGroupZindexContext) {\n        usedZIndices[key] = true;\n      }\n    }\n    const zIndexKeys = Object.keys(usedZIndices).map(Number).sort(ascending);\n    zIndexKeys.forEach((zIndex) => {\n      executorGroupZIndexContexts.forEach((zIndexContexts, i) => {\n        if (!zIndexContexts[zIndex]) {\n          return;\n        }\n        zIndexContexts[zIndex].forEach((zIndexContext) => {\n          const {executorGroup, index} = executorGroups[i];\n          const context = executorGroup.getRenderedContext();\n          const alpha = context.globalAlpha;\n          context.globalAlpha = this.renderedOpacity_;\n          const tileClipContext = this.tileClipContexts_[index];\n          if (tileClipContext) {\n            tileClipContext.draw(context);\n          }\n          zIndexContext.draw(context);\n          if (tileClipContext) {\n            context.restore();\n          }\n          context.globalAlpha = alpha;\n          zIndexContext.clear();\n        });\n        zIndexContexts[zIndex].length = 0;\n      });\n    });\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile The tile\n   * @param {import('../../Map.js').FrameState} frameState Current frame state\n   * @return {import('../../transform.js').Transform} Transform to use to render this tile\n   */\n  getTileRenderTransform(tile, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const rotation = viewState.rotation;\n    const size = frameState.size;\n    const width = Math.round(size[0] * pixelRatio);\n    const height = Math.round(size[1] * pixelRatio);\n\n    const source = this.getLayer().getSource();\n    const tileGrid = source.getTileGridForProjection(\n      frameState.viewState.projection,\n    );\n    const tileCoord = tile.tileCoord;\n    const tileExtent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n    const worldOffset =\n      tileGrid.getTileCoordExtent(tileCoord, this.tempExtent)[0] -\n      tileExtent[0];\n    const transform = multiply(\n      scale(this.inversePixelTransform.slice(), 1 / pixelRatio, 1 / pixelRatio),\n      this.getRenderTransform(\n        center,\n        resolution,\n        rotation,\n        pixelRatio,\n        width,\n        height,\n        worldOffset,\n      ),\n    );\n    return transform;\n  }\n\n  /**\n   * Render the vectors for this layer.\n   * @param {CanvasRenderingContext2D|OffscreenCanvasRenderingContext2D} context Target context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @override\n   */\n  postRender(context, frameState) {\n    const viewHints = frameState.viewHints;\n    const hifi = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n\n    this.renderedPixelToCoordinateTransform_ =\n      frameState.pixelToCoordinateTransform.slice();\n    this.renderedRotation_ = frameState.viewState.rotation;\n    this.renderedOpacity_ =\n      frameState.layerStatesArray[frameState.layerIndex].opacity;\n\n    const layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (\n      this.getLayer()\n    );\n    const renderMode = layer.getRenderMode();\n    const alpha = context.globalAlpha;\n    context.globalAlpha = this.renderedOpacity_;\n    const declutter = layer.getDeclutter();\n    const replayTypes = declutter\n      ? VECTOR_REPLAYS[renderMode].filter((type) => !DECLUTTER.includes(type))\n      : VECTOR_REPLAYS[renderMode];\n    const viewState = frameState.viewState;\n    const rotation = viewState.rotation;\n    const tileSource = layer.getSource();\n    const tileGrid = tileSource.getTileGridForProjection(viewState.projection);\n    const z = tileGrid.getZForResolution(\n      viewState.resolution,\n      tileSource.zDirection,\n    );\n\n    const tiles =\n      /** @type {Array<import(\"../../VectorRenderTile.js\").default>} */ (\n        this.renderedTiles\n      );\n    const clips = [];\n    const clipZs = [];\n    const tileClipContexts = [];\n    const layerUid = getUid(layer);\n    let ready = true;\n    for (let i = tiles.length - 1; i >= 0; --i) {\n      const tile = tiles[i];\n      ready = ready && !tile.getReplayState(layer).dirty;\n      const executorGroups = tile.executorGroups[layerUid].filter((group) =>\n        group.hasExecutors(replayTypes),\n      );\n      if (executorGroups.length === 0) {\n        continue;\n      }\n      const transform = this.getTileRenderTransform(tile, frameState);\n      const currentZ = tile.tileCoord[0];\n      let contextSaved = false;\n      // Clip mask for regions in this tile that already filled by a higher z tile\n      const currentClip = executorGroups[0].getClipCoords(transform);\n      let clipContext = context;\n      let tileClipContext;\n      if (currentClip) {\n        tileClipContext = new ZIndexContext();\n        clipContext = tileClipContext.getContext();\n        for (let j = 0, jj = clips.length; j < jj; ++j) {\n          if (z !== currentZ && currentZ < clipZs[j]) {\n            const clip = clips[j];\n            if (\n              intersects(\n                [\n                  currentClip[0],\n                  currentClip[3],\n                  currentClip[4],\n                  currentClip[7],\n                ],\n                [clip[0], clip[3], clip[4], clip[7]],\n              )\n            ) {\n              if (!contextSaved) {\n                clipContext.save();\n                contextSaved = true;\n              }\n              clipContext.beginPath();\n              // counter-clockwise (outer ring) for current tile\n              clipContext.moveTo(currentClip[0], currentClip[1]);\n              clipContext.lineTo(currentClip[2], currentClip[3]);\n              clipContext.lineTo(currentClip[4], currentClip[5]);\n              clipContext.lineTo(currentClip[6], currentClip[7]);\n              // clockwise (inner ring) for higher z tile\n              clipContext.moveTo(clip[6], clip[7]);\n              clipContext.lineTo(clip[4], clip[5]);\n              clipContext.lineTo(clip[2], clip[3]);\n              clipContext.lineTo(clip[0], clip[1]);\n              clipContext.clip();\n            }\n          }\n        }\n        clips.push(currentClip);\n        clipZs.push(currentZ);\n      }\n      for (let t = 0, tt = executorGroups.length; t < tt; ++t) {\n        const executorGroup = executorGroups[t];\n        executorGroup.execute(\n          context,\n          [context.canvas.width, context.canvas.height],\n          transform,\n          rotation,\n          hifi,\n          replayTypes,\n          frameState.declutter?.[declutter],\n        );\n      }\n      if (contextSaved) {\n        if (clipContext === context) {\n          clipContext.restore();\n        } else {\n          tileClipContexts[i] = tileClipContext;\n        }\n      }\n    }\n    context.globalAlpha = alpha;\n    this.ready = ready;\n    this.tileClipContexts_ = tileClipContexts;\n    if (!frameState.declutter) {\n      this.renderDeferredInternal(frameState);\n    }\n\n    super.postRender(context, frameState);\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n   * @param {boolean} [declutter] Enable decluttering.\n   * @param {number} [index] Render order index.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    declutter,\n    index,\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            undefined,\n            declutter,\n            index,\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        undefined,\n        declutter,\n        index,\n      );\n    }\n    return loading;\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @return {boolean} A new tile image was rendered.\n   * @private\n   */\n  tileImageNeedsRender_(tile) {\n    const layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (\n      this.getLayer()\n    );\n    if (layer.getRenderMode() === 'vector') {\n      return false;\n    }\n    const replayState = tile.getReplayState(layer);\n    const revision = layer.getRevision();\n    const resolution = tile.wantedResolution;\n    const tileImageNeedsRender =\n      replayState.renderedTileResolution !== resolution ||\n      replayState.renderedTileRevision !== revision;\n    return tileImageNeedsRender;\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @param {import(\"../../Map\").FrameState} frameState Frame state.\n   * @private\n   */\n  renderTileImage_(tile, frameState) {\n    const layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (\n      this.getLayer()\n    );\n    const replayState = tile.getReplayState(layer);\n    const revision = layer.getRevision();\n    const executorGroups = tile.executorGroups[getUid(layer)];\n    replayState.renderedTileRevision = revision;\n\n    const tileCoord = tile.wrappedTileCoord;\n    const z = tileCoord[0];\n    const source = layer.getSource();\n    let pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const tileGrid = source.getTileGridForProjection(projection);\n    const tileResolution = tileGrid.getResolution(tile.tileCoord[0]);\n    const renderPixelRatio =\n      (frameState.pixelRatio / tile.wantedResolution) * tileResolution;\n    const resolution = tileGrid.getResolution(z);\n    const context = tile.getContext();\n\n    // Increase tile size when overzooming for low pixel ratio, to avoid blurry tiles\n    pixelRatio = Math.round(\n      Math.max(pixelRatio, renderPixelRatio / pixelRatio),\n    );\n    const size = source.getTilePixelSize(z, pixelRatio, projection);\n    context.canvas.width = size[0];\n    context.canvas.height = size[1];\n    const renderScale = pixelRatio / renderPixelRatio;\n    if (renderScale !== 1) {\n      const canvasTransform = resetTransform(this.tmpTransform_);\n      scaleTransform(canvasTransform, renderScale, renderScale);\n      context.setTransform.apply(context, canvasTransform);\n    }\n    const tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tempExtent);\n    const pixelScale = renderPixelRatio / resolution;\n    const transform = resetTransform(this.tmpTransform_);\n    scaleTransform(transform, pixelScale, -pixelScale);\n    translateTransform(transform, -tileExtent[0], -tileExtent[3]);\n    for (let i = 0, ii = executorGroups.length; i < ii; ++i) {\n      const executorGroup = executorGroups[i];\n      executorGroup.execute(\n        context,\n        [\n          context.canvas.width * renderScale,\n          context.canvas.height * renderScale,\n        ],\n        transform,\n        0,\n        true,\n        IMAGE_REPLAYS[layer.getRenderMode()],\n        null,\n      );\n    }\n    replayState.renderedTileResolution = tile.wantedResolution;\n  }\n}\n\nexport default CanvasVectorTileLayerRenderer;\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n","/**\n * @module ol/layer/VectorTile\n */\nimport {assert} from '../asserts.js';\nimport CanvasVectorTileLayerRenderer from '../renderer/canvas/VectorTileLayer.js';\nimport BaseVectorLayer from './BaseVector.js';\nimport TileProperty from './TileProperty.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *     import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} VectorTileLayerOnSignature\n */\n\n/**\n * @typedef {'hybrid' | 'vector'} VectorTileRenderType\n */\n\n/***\n * @template T\n * @typedef {T extends import(\"../source/VectorTile.js\").default<infer U extends import(\"../Feature.js\").FeatureLike> ? U : never} ExtractedFeatureType\n */\n\n/**\n * @template {import(\"../source/VectorTile.js\").default<FeatureType>} [VectorTileSourceType=import(\"../source/VectorTile.js\").default<*>]\n * @template {import(\"../Feature\").FeatureLike} [FeatureType=ExtractedFeatureType<VectorTileSourceType>]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the tile extent used by the\n * renderer when getting features from the vector tile for the rendering or hit-detection.\n * Recommended value: Vector tiles are usually generated with a buffer, so this value should match\n * the largest possible buffer of the used tiles. It should be at least the size of the largest\n * point symbol or line width.\n * @property {VectorTileRenderType} [renderMode='hybrid'] Render mode for vector tiles:\n *  `'hybrid'`: Polygon and line elements are rendered as images, so pixels are scaled during zoom\n *    animations. Point symbols and texts are accurately rendered as vectors and can stay upright on\n *    rotated views, but get lifted above all polygon and line elements.\n *  `'vector'`: Everything is rendered as vectors and the original render order is maintained. Use\n *    this mode for improved performance and visual epxerience on vector tile layers with not too many\n *    rendered features (e.g. for highlighting a subset of features of another layer with the same\n *    source).\n * @property {VectorTileSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean|string|number} [declutter=false] Declutter images and text. Any truthy value will enable\n * decluttering. Within a layer, a feature rendered before another has higher priority. All layers with the\n * same `declutter` value will be decluttered together. The priority is determined by the drawing order of the\n * layers with the same `declutter` value. Higher in the layer stack means higher priority. To declutter distinct\n * layers or groups of layers separately, use different truthy values for `declutter`.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer\n * style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no\n * background will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will be\n * recreated during animations. This means that no vectors will be shown clipped, but the setting\n * will have a performance impact for large amounts of vector data. When set to `false`, batches\n * will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will be\n * recreated during interactions. See also `updateWhileAnimating`.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {boolean} [useInterimTilesOnError=true] Deprecated.  Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n * @property {number} [cacheSize=0] The internal tile cache size.  If too small, this will auto-grow to hold\n * two zoom levels worth of tiles.\n */\n\n/**\n * @classdesc\n * Layer for vector tile data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/VectorTile.js\").default<FeatureType>} [VectorTileSourceType=import(\"../source/VectorTile.js\").default<*>]\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=ExtractedFeatureType<VectorTileSourceType>]\n * @extends {BaseVectorLayer<FeatureType, VectorTileSourceType, CanvasVectorTileLayerRenderer>}\n * @api\n */\nclass VectorTileLayer extends BaseVectorLayer {\n  /**\n   * @param {Options<VectorTileSourceType, FeatureType>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n    delete baseOptions.preload;\n    const cacheSize = options.cacheSize === undefined ? 0 : options.cacheSize;\n    delete options.cacheSize;\n    delete baseOptions.useInterimTilesOnError;\n\n    super(baseOptions);\n\n    /***\n     * @type {VectorTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {VectorTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {VectorTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.cacheSize_ = cacheSize;\n\n    const renderMode = options.renderMode || 'hybrid';\n    assert(\n      renderMode == 'hybrid' || renderMode == 'vector',\n      \"`renderMode` must be `'hybrid'` or `'vector'`\",\n    );\n\n    /**\n     * @private\n     * @type {VectorTileRenderType}\n     */\n    this.renderMode_ = renderMode;\n\n    this.setPreload(options.preload ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true,\n    );\n\n    /**\n     * @return {import(\"./Base.js\").BackgroundColor} Background color.\n     * @function\n     * @api\n     */\n    this.getBackground;\n\n    /**\n     * @param {import(\"./Base.js\").BackgroundColor} background Background color.\n     * @function\n     * @api\n     */\n    this.setBackground;\n  }\n\n  /**\n   * @override\n   */\n  createRenderer() {\n    return new CanvasVectorTileLayerRenderer(this, {\n      cacheSize: this.cacheSize_,\n    });\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in [map.getFeaturesAtPixel()]{@link import(\"../Map.js\").default#getFeaturesAtPixel}.\n   * Text is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with an array of features.\n   * @api\n   * @override\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * Get features whose bounding box intersects the provided extent. Only features for cached\n   * tiles for the last rendered zoom level are available in the source. So this method is only\n   * suitable for requesting tiles for extents that are currently rendered.\n   *\n   * Features are returned in random tile order and as they are included in the tiles. This means\n   * they can be clipped, duplicated across tiles, and simplified to the render resolution.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<FeatureType>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent) {\n    return /** @type {Array<FeatureType>} */ (\n      /** @type {*} */ (this.getRenderer().getFeaturesInExtent(extent))\n    );\n  }\n\n  /**\n   * @return {VectorTileRenderType} The render mode.\n   */\n  getRenderMode() {\n    return this.renderMode_;\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Deprecated.  Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Deprecated.  Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n}\n\nexport default VectorTileLayer;\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {'undefined' | 'loading' | 'ready' | 'error'} State\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\n\n/**\n * A function that takes a {@link import(\"../View.js\").ViewStateLayerStateExtent} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../View.js\").ViewStateLayerStateExtent): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * a simple string (e.g. `'© Acme Inc.'`)\n * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./Source.js\").State} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|null}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ = options.attributionsCollapsible ?? true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./Source.js\").State}\n     */\n    this.state_ = options.state !== undefined ? options.state : 'ready';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = !!options.interpolate;\n\n    /**\n     * @protected\n     * @type {function(import(\"../View.js\").ViewOptions):void}\n     */\n    this.viewResolver = null;\n\n    /**\n     * @protected\n     * @type {function(Error):void}\n     */\n    this.viewRejector = null;\n\n    const self = this;\n    /**\n     * @private\n     * @type {Promise<import(\"../View.js\").ViewOptions>}\n     */\n    this.viewPromise_ = new Promise(function (resolve, reject) {\n      self.viewResolver = resolve;\n      self.viewRejector = reject;\n    });\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   * @api\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   * @api\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default|null} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    return null;\n  }\n\n  /**\n   * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n   */\n  getView() {\n    return this.viewPromise_;\n  }\n\n  /**\n   * Get the state of the source, see {@link import(\"./Source.js\").State} for possible states.\n   * @return {import(\"./Source.js\").State} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {boolean} Use linear interpolation when resampling.\n   */\n  getInterpolate() {\n    return this.interpolate_;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./Source.js\").State} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {Attribution|null} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n  if (!Array.isArray(attributionLike)) {\n    attributionLike = [attributionLike];\n  }\n  return (frameState) => attributionLike;\n}\n\nexport default Source;\n","/**\n * @module ol/net\n */\nimport {getUid} from './util.js';\n\n/**\n * Simple JSONP helper. Supports error callbacks and a custom callback param.\n * The error callback will be called when no JSONP is executed after 10 seconds.\n *\n * @param {string} url Request url. A 'callback' query parameter will be\n *     appended.\n * @param {Function} callback Callback on success.\n * @param {Function} [errback] Callback on error.\n * @param {string} [callbackParam] Custom query parameter for the JSONP\n *     callback. Default is 'callback'.\n */\nexport function jsonp(url, callback, errback, callbackParam) {\n  const script = document.createElement('script');\n  const key = 'olc_' + getUid(callback);\n  function cleanup() {\n    delete window[key];\n    script.parentNode.removeChild(script);\n  }\n  script.async = true;\n  script.src =\n    url +\n    (url.includes('?') ? '&' : '?') +\n    (callbackParam || 'callback') +\n    '=' +\n    key;\n  const timer = setTimeout(function () {\n    cleanup();\n    if (errback) {\n      errback();\n    }\n  }, 10000);\n  window[key] = function (data) {\n    clearTimeout(timer);\n    cleanup();\n    callback(data);\n  };\n  document.head.appendChild(script);\n}\n\nexport class ResponseError extends Error {\n  /**\n   * @param {XMLHttpRequest} response The XHR object.\n   */\n  constructor(response) {\n    const message = 'Unexpected response status: ' + response.status;\n    super(message);\n\n    /**\n     * @type {string}\n     */\n    this.name = 'ResponseError';\n\n    /**\n     * @type {XMLHttpRequest}\n     */\n    this.response = response;\n  }\n}\n\nexport class ClientError extends Error {\n  /**\n   * @param {XMLHttpRequest} client The XHR object.\n   */\n  constructor(client) {\n    super('Failed to issue request');\n\n    /**\n     * @type {string}\n     */\n    this.name = 'ClientError';\n\n    /**\n     * @type {XMLHttpRequest}\n     */\n    this.client = client;\n  }\n}\n\n/**\n * @param {string} url The URL.\n * @return {Promise<Object>} A promise that resolves to the JSON response.\n */\nexport function getJSON(url) {\n  return new Promise(function (resolve, reject) {\n    /**\n     * @param {ProgressEvent<XMLHttpRequest>} event The load event.\n     */\n    function onLoad(event) {\n      const client = event.target;\n      // status will be 0 for file:// urls\n      if (!client.status || (client.status >= 200 && client.status < 300)) {\n        let data;\n        try {\n          data = JSON.parse(client.responseText);\n        } catch (err) {\n          const message = 'Error parsing response text as JSON: ' + err.message;\n          reject(new Error(message));\n          return;\n        }\n        resolve(data);\n        return;\n      }\n\n      reject(new ResponseError(client));\n    }\n\n    /**\n     * @param {ProgressEvent<XMLHttpRequest>} event The error event.\n     */\n    function onError(event) {\n      reject(new ClientError(event.target));\n    }\n\n    const client = new XMLHttpRequest();\n    client.addEventListener('load', onLoad);\n    client.addEventListener('error', onError);\n    client.open('GET', url);\n    client.setRequestHeader('Accept', 'application/json');\n    client.send();\n  });\n}\n\n/**\n * @param {string} base The base URL.\n * @param {string} url The potentially relative URL.\n * @return {string} The full URL.\n */\nexport function resolveUrl(base, url) {\n  if (url.includes('://')) {\n    return url;\n  }\n  return new URL(url, base).href;\n}\n\nlet originalXHR;\nexport function overrideXHR(xhr) {\n  if (typeof XMLHttpRequest !== 'undefined') {\n    originalXHR = XMLHttpRequest;\n  }\n  global.XMLHttpRequest = xhr;\n}\n\nexport function restoreXHR() {\n  global.XMLHttpRequest = originalXHR;\n}\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, {\n  createOrUpdate as createOrUpdateTileRange,\n} from '../TileRange.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {assert} from '../asserts.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {intersectsLinearRing} from '../geom/flat/intersectsextent.js';\nimport {ceil, clamp, floor} from '../math.js';\nimport {toSize} from '../size.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\nimport {DEFAULT_TILE_SIZE} from './common.js';\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nconst DECIMALS = 5;\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile~TileSource} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<number|import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(\n      isSorted(\n        this.resolutions_,\n        /**\n         * @param {number} a First resolution\n         * @param {number} b Second resolution\n         * @return {number} Comparison result\n         */\n        (a, b) => b - a,\n        true,\n      ),\n      '`resolutions` must be sorted in descending order',\n    );\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(\n        this.origins_.length == this.resolutions_.length,\n        'Number of `origins` and `resolutions` must be equal',\n      );\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined && !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      'Either `origin` or `origins` must be configured, never both',\n    );\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(\n        this.tileSizes_.length == this.resolutions_.length,\n        'Number of `tileSizes` and `resolutions` must be equal',\n      );\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ =\n      options.tileSize !== undefined\n        ? options.tileSize\n        : !this.tileSizes_\n          ? DEFAULT_TILE_SIZE\n          : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      'Either `tileSize` or `tileSizes` must be configured, never both',\n    );\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = [0, 0, 0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map((size, z) => {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]),\n          Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]),\n          Math.max(size[1] - 1, -1),\n        );\n        if (extent) {\n          const restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n          tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n          tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n          tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n          tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n        }\n        return tileRange;\n      });\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(\n    tileCoord,\n    callback,\n    tempTileRange,\n    tempExtent,\n  ) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, tempExtent);\n    }\n    while (z >= this.minZoom) {\n      if (x !== undefined && y !== undefined) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, tempTileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(\n          tileCoordExtent,\n          z,\n          tempTileRange,\n        );\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    return this.origins_[z];\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, tempTileRange, tempExtent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(\n          minX,\n          minX + 1,\n          minY,\n          minY + 1,\n          tempTileRange,\n        );\n      }\n      const tileCoordExtent = this.getTileCoordExtent(\n        tileCoord,\n        tempExtent || this.tmpExtent_,\n      );\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent,\n        tileCoord[0] + 1,\n        tempTileRange,\n      );\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileRangeForTileCoordAndZ(tileCoord, z, tempTileRange) {\n    if (z > this.maxZoom || z < this.minZoom) {\n      return null;\n    }\n\n    const tileCoordZ = tileCoord[0];\n    const tileCoordX = tileCoord[1];\n    const tileCoordY = tileCoord[2];\n\n    if (z === tileCoordZ) {\n      return createOrUpdateTileRange(\n        tileCoordX,\n        tileCoordY,\n        tileCoordX,\n        tileCoordY,\n        tempTileRange,\n      );\n    }\n\n    if (this.zoomFactor_) {\n      const factor = Math.pow(this.zoomFactor_, z - tileCoordZ);\n      const minX = Math.floor(tileCoordX * factor);\n      const minY = Math.floor(tileCoordY * factor);\n      if (z < tileCoordZ) {\n        return createOrUpdateTileRange(minX, minX, minY, minY, tempTileRange);\n      }\n\n      const maxX = Math.floor(factor * (tileCoordX + 1)) - 1;\n      const maxY = Math.floor(factor * (tileCoordY + 1)) - 1;\n      return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n    }\n\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    return this.getTileRangeForExtentAndZ(tileCoordExtent, z, tempTileRange);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, tempTileRange) {\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tmpTileCoord);\n    const minX = tmpTileCoord[1];\n    const minY = tmpTileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tmpTileCoord);\n    const maxX = tmpTileCoord[1];\n    const maxY = tmpTileCoord[2];\n    return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, tempExtent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, tempExtent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0],\n      coordinate[1],\n      resolution,\n      false,\n      opt_tileCoord,\n    );\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(\n    x,\n    y,\n    resolution,\n    reverseIntersectionPolicy,\n    opt_tileCoord,\n  ) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (scale * (x - origin[0])) / resolution / tileSize[0];\n    let tileCoordY = (scale * (origin[1] - y)) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (x - origin[0]) / resolution / tileSize[0];\n    let tileCoordY = (origin[1] - y) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Integer zoom level, e.g. the result of a `getZForResolution()` method call\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0],\n      coordinate[1],\n      z,\n      false,\n      opt_tileCoord,\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an {@link import(\"../size.js\").Size}, run the result through {@link module:ol/size.toSize}.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    }\n    return this.tileSizes_[z];\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default|null} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return this.extent_\n        ? this.getTileRangeForExtentAndZ(this.extent_, z)\n        : null;\n    }\n    return this.fullTileRanges_[z];\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number|import(\"../array.js\").NearestDirectionFunction} [opt_direction]\n   *     If 0, the nearest resolution will be used.\n   *     If 1, the nearest higher resolution (lower Z) will be used. If -1, the\n   *     nearest lower resolution (higher Z) will be used. Default is 0.\n   *     Use a {@link module:ol/array~NearestDirectionFunction} for more precise control.\n   *\n   * For example to change tile Z at the midpoint of zoom levels\n   * ```js\n   * function(value, high, low) {\n   *   return value - low * Math.sqrt(high / low);\n   * }\n   * ```\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(\n      this.resolutions_,\n      resolution,\n      opt_direction || 0,\n    );\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * The tile with the provided tile coordinate intersects the given viewport.\n   * @param {import('../tilecoord.js').TileCoord} tileCoord Tile coordinate.\n   * @param {Array<number>} viewport Viewport as returned from {@link module:ol/extent.getRotatedViewport}.\n   * @return {boolean} The tile with the provided tile coordinate intersects the given viewport.\n   */\n  tileCoordIntersectsViewport(tileCoord, viewport) {\n    return intersectsLinearRing(\n      viewport,\n      0,\n      viewport.length,\n      2,\n      this.getTileCoordExtent(tileCoord),\n    );\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\nexport default TileGrid;\n","/**\n * @module ol/tilegrid\n */\nimport {\n  containsCoordinate,\n  createOrUpdate,\n  getCorner,\n  getHeight,\n  getWidth,\n} from './extent.js';\nimport {METERS_PER_UNIT, get as getProjection} from './proj.js';\nimport {toSize} from './size.js';\nimport TileGrid from './tilegrid/TileGrid.js';\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\n\nexport {TileGrid};\nexport {default as WMTS} from './tilegrid/WMTS.js';\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil(\n      (projectionExtent[0] - center[0]) / worldWidth,\n    );\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  }\n  return tileCoord;\n}\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, maxZoom, tileSize, corner) {\n  corner = corner !== undefined ? corner : 'top-left';\n\n  const resolutions = resolutionsFromExtent(extent, maxZoom, tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: tileSize,\n  });\n}\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions} [options] Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(options) {\n  const xyzOptions = options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize,\n      xyzOptions.maxResolution,\n    ),\n  };\n  return new TileGrid(gridOptions);\n}\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number} [maxResolution] Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, maxZoom, tileSize, maxResolution) {\n  maxZoom = maxZoom !== undefined ? maxZoom : DEFAULT_MAX_ZOOM;\n  tileSize = toSize(tileSize !== undefined ? tileSize : DEFAULT_TILE_SIZE);\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  maxResolution =\n    maxResolution > 0\n      ? maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, maxZoom, tileSize, corner) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, maxZoom, tileSize, corner);\n}\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half =\n      (180 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/uri\n */\n\nimport {modulo} from './math.js';\nimport {hashZXY} from './tilecoord.js';\n\n/**\n * Appends query parameters to a URI.\n *\n * @param {string} uri The original URI, which may already have query data.\n * @param {!Object} params An object where keys are URI-encoded parameter keys,\n *     and the values are arbitrary types or arrays.\n * @return {string} The new URI.\n */\nexport function appendParams(uri, params) {\n  /** @type {Array<string>} */\n  const keyParams = [];\n  // Skip any null or undefined parameter values\n  Object.keys(params).forEach(function (k) {\n    if (params[k] !== null && params[k] !== undefined) {\n      keyParams.push(k + '=' + encodeURIComponent(params[k]));\n    }\n  });\n  const qs = keyParams.join('&');\n  // remove any trailing ? or &\n  uri = uri.replace(/[?&]$/, '');\n  // append ? or & depending on whether uri has existing parameters\n  uri += uri.includes('?') ? '&' : '?';\n  return uri + qs;\n}\n\nconst zRegEx = /\\{z\\}/g;\nconst xRegEx = /\\{x\\}/g;\nconst yRegEx = /\\{y\\}/g;\nconst dashYRegEx = /\\{-y\\}/g;\n\n/**\n * @param {string} template The URL template.  Should have `{x}`, `{y}`, and `{z}` placeholders.  If\n * the template has a `{-y}` placeholder, the `maxY` parameter must be supplied.\n * @param {number} z The tile z coordinate.\n * @param {number} x The tile x coordinate.\n * @param {number} y The tile y coordinate.\n * @param {number} [maxY] The maximum y coordinate at the given z level.\n * @return {string} The URL.\n */\nexport function renderXYZTemplate(template, z, x, y, maxY) {\n  return template\n    .replace(zRegEx, z.toString())\n    .replace(xRegEx, x.toString())\n    .replace(yRegEx, y.toString())\n    .replace(dashYRegEx, function () {\n      if (maxY === undefined) {\n        throw new Error(\n          'If the URL template has a {-y} placeholder, the grid extent must be known',\n        );\n      }\n      return (maxY - y).toString();\n    });\n}\n\n/**\n * @param {Array<string>} urls List of URLs.\n * @param {number} z The tile z coordinate.\n * @param {number} x The tile x coordinate.\n * @param {number} y The tile y coordinate.\n * @return {string} The chosen URL.\n */\nexport function pickUrl(urls, z, x, y) {\n  const hash = hashZXY(z, x, y);\n  const index = modulo(hash, urls.length);\n  return urls[index];\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","/**\n * @module ol/tileurlfunction\n */\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\nimport {renderXYZTemplate} from './uri.js';\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default|null} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      let maxY;\n      const z = tileCoord[0];\n      if (tileGrid) {\n        // The `{-y}` placeholder only works for sources that have a tile grid at construction\n        const range = tileGrid.getFullTileRange(z);\n        if (range) {\n          maxY = range.getHeight() - 1;\n        }\n      }\n      return renderXYZTemplate(template, z, tileCoord[1], tileCoord[2], maxY);\n    }\n  );\n}\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      const h = tileCoordHash(tileCoord);\n      const index = modulo(h, tileUrlFunctions.length);\n      return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n    }\n  );\n}\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n","/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport {scale as scaleSize, toSize} from '../size.js';\nimport {withinExtentAndZ} from '../tilecoord.js';\nimport {\n  getForProjection as getTileGridForProjection,\n  wrapX,\n} from '../tilegrid.js';\nimport {abstract, getUid} from '../util.js';\nimport Source from './Source.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./TileEventType\").TileSourceEventTypes, TileSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./TileEventType\").TileSourceEventTypes, Return>} TileSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Deprecated.  Use the cacheSize option on the layer instead.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n *\n * @template {import(\"../Tile.js\").default} [TileType=import(\"../Tile.js\").default]\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX,\n      interpolate: options.interpolate,\n    });\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {TileSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ =\n      options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n\n    /**\n     * @type {import(\"../tilegrid/TileGrid.js\").default|null}\n     * @protected\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    const tileSize = [256, 256];\n    if (this.tileGrid) {\n      toSize(this.tileGrid.getTileSize(this.tileGrid.getMinZoom()), tileSize);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || getUid(this);\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    };\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number|import(\"../array.js\").NearestDirectionFunction}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   * @override\n   */\n  getResolutions(projection) {\n    const tileGrid = projection\n      ? this.getTileGridForProjection(projection)\n      : this.tileGrid;\n    if (!tileGrid) {\n      return null;\n    }\n    return tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {TileType|null} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default|null} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    }\n    return this.tileGrid;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    }\n    return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, projection) {\n    const gridProjection =\n      projection !== undefined ? projection : this.getProjection();\n    const tileGrid =\n      projection !== undefined\n        ? this.getTileGridForProjection(gridProjection)\n        : this.tileGrid || this.getTileGridForProjection(gridProjection);\n    if (this.getWrapX() && gridProjection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, gridProjection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached reprojected tiles from the source. The next render cycle will create new tiles.\n   * @api\n   */\n  clear() {}\n\n  /**\n   * @override\n   */\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n}\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n  }\n}\n\nexport default TileSource;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error. Note that this is not the\n   * right place to re-fetch tiles. See {@link module:ol/ImageTile~ImageTile#load}\n   * for details.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n\n/**\n * @typedef {'tileloadstart'|'tileloadend'|'tileloaderror'} TileSourceEventTypes\n */\n","/**\n * @module ol/source/UrlTile\n */\nimport TileState from '../TileState.js';\nimport {createFromTemplates} from '../tileurlfunction.js';\nimport {expandUrl} from '../uri.js';\nimport {getUid} from '../util.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileEventType from './TileEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Deprecated.  Use the cacheSize option on the layer instead.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Deprecated.  Use an ImageTile source and provide a function\n * for the url option instead.\n * @property {string} [url] Url.\n * @property {Array<string>} [urls] Urls.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @deprecated Use the ol/source/ImageTile.js instead.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate: options.interpolate,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ =\n      this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    if (options.tileUrlFunction) {\n      this.tileUrlFunction = options.tileUrlFunction;\n    }\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n      ? this.tileUrlFunction.bind(this)\n      : this.tileUrlFunction;\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n            ? TileEventType.TILELOADEND\n            : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string} [key] Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = expandUrl(url);\n    this.urls = urls;\n    this.setUrls(urls);\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string|undefined} Tile URL.\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n  }\n}\n\nexport default UrlTile;\n","/**\n * @module ol/featureloader\n */\n\n/**\n *\n * @type {boolean}\n * @private\n */\nlet withCredentials = false;\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * load features.\n *\n * This function takes up to 5 arguments. These are an {@link module:ol/extent~Extent} representing\n * the area to be loaded, a `{number}` representing the resolution (map units per pixel), a\n * {@link module:ol/proj/Projection~Projection} for the projection, an optional success callback that should get\n * the loaded features passed as an argument and an optional failure callback with no arguments. If\n * the callbacks are not used, the corresponding vector source will not fire `'featuresloadend'` and\n * `'featuresloaderror'` events. `this` within the function is bound to the\n * {@link module:ol/source/Vector~VectorSource} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n *\n * @template {import(\"./Feature.js\").FeatureLike} [FeatureType=import(\"./Feature.js\").FeatureLike]\n * @typedef {(\n *           extent: import(\"./extent.js\").Extent,\n *           resolution: number,\n *           projection: import(\"./proj/Projection.js\").default,\n *           success?: (features: Array<FeatureType>) => void,\n *           failure?: () => void) => void} FeatureLoader\n * @api\n */\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection~Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n/**\n * @template {import(\"./Feature.js\").FeatureLike} [FeatureType=import(\"./Feature.js\").default]\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default<FeatureType>} format Feature format.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {function(Array<FeatureType>, import(\"./proj/Projection.js\").default): void} success Success\n *      Function called with the loaded features and optionally with the data projection.\n * @param {function(): void} failure Failure\n *      Function called when loading failed.\n */\nexport function loadFeaturesXhr(\n  url,\n  format,\n  extent,\n  resolution,\n  projection,\n  success,\n  failure,\n) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\n    'GET',\n    typeof url === 'function' ? url(extent, resolution, projection) : url,\n    true,\n  );\n  if (format.getType() == 'arraybuffer') {\n    xhr.responseType = 'arraybuffer';\n  }\n  xhr.withCredentials = withCredentials;\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  xhr.onload = function (event) {\n    // status will be 0 for file:// urls\n    if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {\n      const type = format.getType();\n      try {\n        /** @type {Document|Node|Object|string|undefined} */\n        let source;\n        if (type == 'text' || type == 'json') {\n          source = xhr.responseText;\n        } else if (type == 'xml') {\n          source = xhr.responseXML || xhr.responseText;\n        } else if (type == 'arraybuffer') {\n          source = /** @type {ArrayBuffer} */ (xhr.response);\n        }\n        if (source) {\n          success(\n            /** @type {Array<FeatureType>} */\n            (\n              format.readFeatures(source, {\n                extent: extent,\n                featureProjection: projection,\n              })\n            ),\n            format.readProjection(source),\n          );\n        } else {\n          failure();\n        }\n      } catch {\n        failure();\n      }\n    } else {\n      failure();\n    }\n  };\n  /**\n   * @private\n   */\n  xhr.onerror = failure;\n  xhr.send();\n}\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n *\n * @template {import(\"./Feature.js\").FeatureLike} [FeatureType=import(\"./Feature.js\").default]\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default<FeatureType>} format Feature format.\n * @return {FeatureLoader<FeatureType>} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"./proj/Projection.js\").default} projection Projection.\n   * @param {function(Array<FeatureType>): void} [success] Success\n   *      Function called when loading succeeded.\n   * @param {function(): void} [failure] Failure\n   *      Function called when loading failed.\n   * @this {import(\"./source/Vector.js\").default<FeatureType>}\n   */\n  return function (extent, resolution, projection, success, failure) {\n    loadFeaturesXhr(\n      url,\n      format,\n      extent,\n      resolution,\n      projection,\n      /**\n       * @param {Array<FeatureType>} features The loaded features.\n       * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n       * projection.\n       */\n      (features, dataProjection) => {\n        this.addFeatures(features);\n        if (success !== undefined) {\n          success(features);\n        }\n      },\n      () => {\n        this.changed();\n        if (failure !== undefined) {\n          failure();\n        }\n      },\n    );\n  };\n}\n\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n  withCredentials = xhrWithCredentials;\n}\n","/**\n * @module ol/VectorRenderTile\n */\nimport Tile from './Tile.js';\nimport {createCanvasContext2D, releaseCanvas} from './dom.js';\nimport {getUid} from './util.js';\n\n/**\n * @typedef {Object} ReplayState\n * @property {boolean} dirty Dirty.\n * @property {null|import(\"./render.js\").OrderFunction} renderedRenderOrder RenderedRenderOrder.\n * @property {number} renderedTileRevision RenderedTileRevision.\n * @property {number} renderedResolution RenderedResolution.\n * @property {number} renderedRevision RenderedRevision.\n * @property {number} renderedTileResolution RenderedTileResolution.\n * @property {number} renderedTileZ RenderedTileZ.\n */\n\n/**\n * @type {Array<HTMLCanvasElement|OffscreenCanvas>}\n */\nconst canvasPool = [];\n\nclass VectorRenderTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {import(\"./tilecoord.js\").TileCoord} urlTileCoord Wrapped tile coordinate for source urls.\n   * @param {function(VectorRenderTile):Array<import(\"./VectorTile\").default>} getSourceTiles Function.\n   * @param {function(VectorRenderTile):void} removeSourceTiles Function.\n   */\n  constructor(\n    tileCoord,\n    state,\n    urlTileCoord,\n    getSourceTiles,\n    removeSourceTiles,\n  ) {\n    super(tileCoord, state, {transition: 0});\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D|OffscreenCanvasRenderingContext2D|null}\n     */\n    this.context_ = null;\n\n    /**\n     * Executor groups. Read/written by the renderer.\n     * @type {Object<string, Array<import(\"./render/canvas/ExecutorGroup.js\").default>>}\n     */\n    this.executorGroups = {};\n\n    /**\n     * Number of loading source tiles. Read/written by the source.\n     * @type {number}\n     */\n    this.loadingSourceTiles = 0;\n\n    /**\n     * @type {Object<string, ImageData>}\n     */\n    this.hitDetectionImageData = {};\n\n    /**\n     * @private\n     * @type {!Object<string, ReplayState>}\n     */\n    this.replayState_ = {};\n\n    /**\n     * @type {Array<import(\"./VectorTile.js\").default>}\n     */\n    this.sourceTiles = [];\n\n    /**\n     * @type {Object<string, boolean>}\n     */\n    this.errorTileKeys = {};\n\n    /**\n     * @type {number}\n     */\n    this.wantedResolution;\n\n    /**\n     * @type {!function():Array<import(\"./VectorTile.js\").default>}\n     */\n    this.getSourceTiles = getSourceTiles.bind(undefined, this);\n\n    /**\n     * @type {!function(VectorRenderTile):void}\n     * @private\n     */\n    this.removeSourceTiles_ = removeSourceTiles;\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord = urlTileCoord;\n  }\n\n  /**\n   * @return {CanvasRenderingContext2D|OffscreenCanvasRenderingContext2D} The rendering context.\n   */\n  getContext() {\n    if (!this.context_) {\n      this.context_ = createCanvasContext2D(1, 1, canvasPool);\n    }\n    return this.context_;\n  }\n\n  /**\n   * @return {boolean} Tile has a rendering context.\n   */\n  hasContext() {\n    return !!this.context_;\n  }\n\n  /**\n   * Get the Canvas for this tile.\n   * @return {HTMLCanvasElement|OffscreenCanvas} Canvas.\n   */\n  getImage() {\n    return this.hasContext() ? this.getContext().canvas : null;\n  }\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {ReplayState} The replay state.\n   */\n  getReplayState(layer) {\n    const key = getUid(layer);\n    if (!(key in this.replayState_)) {\n      this.replayState_[key] = {\n        dirty: false,\n        renderedRenderOrder: null,\n        renderedResolution: NaN,\n        renderedRevision: -1,\n        renderedTileResolution: NaN,\n        renderedTileRevision: -1,\n        renderedTileZ: -1,\n      };\n    }\n    return this.replayState_[key];\n  }\n\n  /**\n   * Load the tile.\n   * @override\n   */\n  load() {\n    this.getSourceTiles();\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   * @override\n   */\n  release() {\n    if (this.context_) {\n      releaseCanvas(this.context_);\n      canvasPool.push(this.context_.canvas);\n      this.context_ = null;\n    }\n    this.removeSourceTiles_(this);\n    this.sourceTiles.length = 0;\n    super.release();\n  }\n}\n\nexport default VectorRenderTile;\n","/**\n * @module ol/source/VectorTile\n */\n\nimport TileState from '../TileState.js';\nimport VectorRenderTile from '../VectorRenderTile.js';\nimport Tile from '../VectorTile.js';\nimport EventType from '../events/EventType.js';\nimport {\n  buffer as bufferExtent,\n  getIntersection,\n  intersects,\n} from '../extent.js';\nimport {loadFeaturesXhr} from '../featureloader.js';\nimport {isEmpty} from '../obj.js';\nimport {equivalent, transformExtent} from '../proj.js';\nimport {toSize} from '../size.js';\nimport TileGrid from '../tilegrid/TileGrid.js';\nimport {DEFAULT_MAX_ZOOM} from '../tilegrid/common.js';\nimport {\n  createXYZ,\n  extentFromProjection,\n  getForProjection,\n} from '../tilegrid.js';\nimport UrlTile from './UrlTile.js';\n\n/**\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../render/Feature.js\").default]\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least twice the number of tiles in the viewport.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {import(\"../format/Feature.js\").default<FeatureType>} [format] Feature format for tiles. Used and required by the default.\n * @property {boolean} [overlaps=true] This source may have overlapping geometries. Setting this\n * to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection of the tile source.\n * @property {import(\"./Source.js\").State} [state] Source state.\n * @property {typeof import(\"../VectorTile.js\").default} [tileClass] Class used to instantiate tiles.\n * Default is {@link module:ol/VectorTile~VectorTile}.\n * @property {number} [maxZoom=22] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number|import(\"../size.js\").Size} [tileSize=512] Optional tile size. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction]\n * Optional function to load a tile given a URL. Could look like this for pbf tiles:\n * ```js\n * function(tile, url) {\n *   tile.setLoader(function(extent, resolution, projection) {\n *     fetch(url).then(function(response) {\n *       response.arrayBuffer().then(function(data) {\n *         const format = tile.getFormat() // ol/format/MVT configured as source format\n *         const features = format.readFeatures(data, {\n *           extent: extent,\n *           featureProjection: projection\n *         });\n *         tile.setFeatures(features);\n *       });\n *     });\n *   });\n * }\n * ```\n * If you do not need extent, resolution and projection to get the features for a tile (e.g.\n * for GeoJSON tiles), your `tileLoadFunction` does not need a `setLoader()` call. Only make sure\n * to call `setFeatures()` on the tile:\n * ```js\n * const format = new GeoJSON({featureProjection: map.getView().getProjection()});\n * async function tileLoadFunction(tile, url) {\n *   const response = await fetch(url);\n *   const data = await response.json();\n *   tile.setFeatures(format.readFeatures(data));\n * }\n * ```\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {number} [transition] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * When set to `false`, only one world\n * will be rendered. When set to `true`, tiles will be wrapped horizontally to\n * render multiple worlds.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=1]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Class for layer sources providing vector data divided into a tile grid, to be\n * used with {@link module:ol/layer/VectorTile~VectorTileLayer}. Although this source receives tiles\n * with vector features from the server, it is not meant for feature editing.\n * Features are optimized for rendering, their geometries are clipped at or near\n * tile boundaries and simplified for a view resolution. See\n * {@link module:ol/source/Vector~VectorSource} for vector sources that are suitable for feature\n * editing.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../render/Feature.js\").default]\n */\nclass VectorTile extends UrlTile {\n  /**\n   * @param {!Options<FeatureType>} options Vector tile options.\n   */\n  constructor(options) {\n    const projection = options.projection || 'EPSG:3857';\n\n    const extent = options.extent || extentFromProjection(projection);\n\n    const tileGrid =\n      options.tileGrid ||\n      createXYZ({\n        extent: extent,\n        maxResolution: options.maxResolution,\n        maxZoom: options.maxZoom !== undefined ? options.maxZoom : 22,\n        minZoom: options.minZoom,\n        tileSize: options.tileSize || 512,\n      });\n\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      cacheSize: options.cacheSize,\n      interpolate: true,\n      projection: projection,\n      state: options.state,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultLoadFunction,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX === undefined ? true : options.wrapX,\n      transition: options.transition,\n      zDirection: options.zDirection === undefined ? 1 : options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default<FeatureType>|null}\n     */\n    this.format_ = options.format ? options.format : null;\n\n    /**\n     * @type {Object<string, Array<string>>}\n     * @private\n     */\n    this.tileKeysBySourceTileUrl_ = {};\n\n    /**\n     @type {Object<string, Tile<FeatureType>>}\n     */\n    this.sourceTiles_ = {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps == undefined ? true : options.overlaps;\n\n    /**\n     * @protected\n     * @type {typeof import(\"../VectorTile.js\").default}\n     */\n    this.tileClass = options.tileClass ? options.tileClass : Tile;\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGrids_ = {};\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection\").default} projection Projection.\n   * @param {VectorRenderTile} tile Vector render tile.\n   * @return {Array<import(\"../VectorTile\").default>} Tile keys.\n   */\n  getSourceTiles(pixelRatio, projection, tile) {\n    if (tile.getState() === TileState.IDLE) {\n      tile.setState(TileState.LOADING);\n      const urlTileCoord = tile.wrappedTileCoord;\n      const tileGrid = this.getTileGridForProjection(projection);\n      let extent = tileGrid.getTileCoordExtent(urlTileCoord);\n      const z = urlTileCoord[0];\n      const resolution = tileGrid.getResolution(z);\n      // make extent 1 pixel smaller so we don't load tiles for < 0.5 pixel render space\n      bufferExtent(extent, -resolution, extent);\n      const sourceProjection = this.projection;\n      if (\n        projection &&\n        this.projection &&\n        !equivalent(projection, sourceProjection)\n      ) {\n        extent = transformExtent(extent, projection, sourceProjection);\n      }\n      const sourceTileGrid = this.tileGrid;\n      const sourceExtent = sourceTileGrid.getExtent();\n      if (sourceExtent) {\n        getIntersection(extent, sourceExtent, extent);\n      }\n      let sourceResolution = resolution;\n      if (\n        projection &&\n        sourceProjection &&\n        !equivalent(projection, sourceProjection)\n      ) {\n        sourceResolution =\n          resolution /\n          sourceProjection.getMetersPerUnit() /\n          projection.getMetersPerUnit();\n      }\n      const sourceZ = sourceTileGrid.getZForResolution(\n        sourceResolution,\n        this.zDirection,\n      );\n\n      sourceTileGrid.forEachTileCoord(extent, sourceZ, (sourceTileCoord) => {\n        const tileUrl = this.tileUrlFunction(\n          sourceTileCoord,\n          pixelRatio,\n          projection,\n        );\n        if (!this.sourceTiles_[tileUrl]) {\n          this.sourceTiles_[tileUrl] = new this.tileClass(\n            sourceTileCoord,\n            tileUrl ? TileState.IDLE : TileState.EMPTY,\n            tileUrl,\n            this.format_,\n            this.tileLoadFunction,\n          );\n        }\n        const sourceTile = this.sourceTiles_[tileUrl];\n        tile.sourceTiles.push(sourceTile);\n        if (!this.tileKeysBySourceTileUrl_[tileUrl]) {\n          this.tileKeysBySourceTileUrl_[tileUrl] = [];\n        }\n        this.tileKeysBySourceTileUrl_[tileUrl].push(tile.getKey());\n        const sourceTileState = sourceTile.getState();\n        if (sourceTileState < TileState.LOADED) {\n          const listenChange = (event) => {\n            this.handleTileChange(event);\n            const state = sourceTile.getState();\n            if (state === TileState.LOADED || state === TileState.ERROR) {\n              const sourceTileKey = sourceTile.getKey();\n              if (sourceTileKey in tile.errorTileKeys) {\n                if (sourceTile.getState() === TileState.LOADED) {\n                  delete tile.errorTileKeys[sourceTileKey];\n                }\n              } else {\n                tile.loadingSourceTiles--;\n              }\n              if (state === TileState.ERROR) {\n                tile.errorTileKeys[sourceTileKey] = true;\n              } else {\n                sourceTile.removeEventListener(EventType.CHANGE, listenChange);\n              }\n              if (tile.loadingSourceTiles === 0) {\n                tile.setState(\n                  isEmpty(tile.errorTileKeys)\n                    ? TileState.LOADED\n                    : TileState.ERROR,\n                );\n              }\n            }\n          };\n          sourceTile.addEventListener(EventType.CHANGE, listenChange);\n          tile.loadingSourceTiles++;\n        }\n        if (sourceTileState === TileState.IDLE) {\n          sourceTile.extent =\n            sourceTileGrid.getTileCoordExtent(sourceTileCoord);\n          sourceTile.projection = this.projection;\n          sourceTile.resolution = sourceTileGrid.getResolution(\n            sourceTileCoord[0],\n          );\n          sourceTile.load();\n        }\n      });\n      if (!tile.loadingSourceTiles) {\n        tile.setState(\n          tile.sourceTiles.some(\n            (sourceTile) => sourceTile.getState() === TileState.ERROR,\n          )\n            ? TileState.ERROR\n            : TileState.LOADED,\n        );\n      }\n    }\n\n    return tile.sourceTiles;\n  }\n\n  /**\n   * @param {VectorRenderTile} tile Vector render tile.\n   */\n  removeSourceTiles(tile) {\n    const tileKey = tile.getKey();\n    const sourceTiles = tile.sourceTiles;\n    for (let i = 0, ii = sourceTiles.length; i < ii; ++i) {\n      const sourceTileUrl = sourceTiles[i].getTileUrl();\n      if (!this.tileKeysBySourceTileUrl_[sourceTileUrl]) {\n        return;\n      }\n      const index =\n        this.tileKeysBySourceTileUrl_[sourceTileUrl].indexOf(tileKey);\n      if (index === -1) {\n        continue;\n      }\n      this.tileKeysBySourceTileUrl_[sourceTileUrl].splice(index, 1);\n      if (this.tileKeysBySourceTileUrl_[sourceTileUrl].length === 0) {\n        delete this.tileKeysBySourceTileUrl_[sourceTileUrl];\n        delete this.sourceTiles_[sourceTileUrl];\n      }\n    }\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!VectorRenderTile} Tile.\n   * @override\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const tileCoord = [z, x, y];\n    let urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection,\n    );\n    const sourceExtent = this.getTileGrid().getExtent();\n    const sourceProjection = this.projection;\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (urlTileCoord && sourceExtent) {\n      const tileExtent = tileGrid.getTileCoordExtent(urlTileCoord);\n      // make extent 1 pixel smaller so we don't load tiles for < 0.5 pixel render space\n      bufferExtent(tileExtent, -tileGrid.getResolution(z), tileExtent);\n      if (\n        !intersects(\n          sourceExtent,\n          !projection ||\n            !sourceProjection ||\n            equivalent(projection, sourceProjection)\n            ? tileExtent\n            : transformExtent(tileExtent, projection, sourceProjection),\n        )\n      ) {\n        urlTileCoord = null;\n      }\n    }\n    let empty = true;\n    if (urlTileCoord !== null) {\n      const sourceTileGrid = this.tileGrid;\n      const resolution = tileGrid.getResolution(z);\n      let sourceResolution = resolution;\n      if (\n        projection &&\n        sourceProjection &&\n        !equivalent(projection, sourceProjection)\n      ) {\n        sourceResolution =\n          resolution /\n          sourceProjection.getMetersPerUnit() /\n          projection.getMetersPerUnit();\n      }\n      const sourceZ = sourceTileGrid.getZForResolution(sourceResolution, 1);\n      // make extent 1 pixel smaller so we don't load tiles for < 0.5 pixel render space\n      const extent = tileGrid.getTileCoordExtent(urlTileCoord);\n      bufferExtent(extent, -resolution, extent);\n      sourceTileGrid.forEachTileCoord(\n        !projection ||\n          !sourceProjection ||\n          equivalent(projection, sourceProjection)\n          ? extent\n          : transformExtent(extent, projection, sourceProjection),\n        sourceZ,\n        (sourceTileCoord) => {\n          empty =\n            empty &&\n            !this.tileUrlFunction(\n              sourceTileCoord,\n              pixelRatio,\n              sourceProjection,\n            );\n        },\n      );\n    }\n    const newTile = new VectorRenderTile(\n      tileCoord,\n      empty ? TileState.EMPTY : TileState.IDLE,\n      urlTileCoord,\n      this.getSourceTiles.bind(this, pixelRatio, projection),\n      this.removeSourceTiles.bind(this),\n    );\n    newTile.key = this.getKey();\n    return newTile;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   * @override\n   */\n  getTileGridForProjection(projection) {\n    const code = projection.getCode();\n    let tileGrid = this.tileGrids_[code];\n    if (!tileGrid) {\n      const sourceProjection = this.projection;\n      if (\n        sourceProjection !== null &&\n        !equivalent(sourceProjection, projection)\n      ) {\n        return getForProjection(projection);\n      }\n\n      // A tile grid that matches the tile size of the source tile grid is more\n      // likely to have 1:1 relationships between source tiles and rendered tiles.\n      const sourceTileGrid = this.tileGrid;\n      const resolutions = sourceTileGrid.getResolutions().slice();\n      const origins = resolutions.map(function (resolution, z) {\n        return sourceTileGrid.getOrigin(z);\n      });\n      const tileSizes = resolutions.map(function (resolution, z) {\n        return sourceTileGrid.getTileSize(z);\n      });\n      const length = DEFAULT_MAX_ZOOM + 1;\n      for (let z = resolutions.length; z < length; ++z) {\n        resolutions.push(resolutions[z - 1] / 2);\n        origins.push(origins[z - 1]);\n        tileSizes.push(tileSizes[z - 1]);\n      }\n      tileGrid = new TileGrid({\n        extent: sourceTileGrid.getExtent(),\n        origins: origins,\n        resolutions: resolutions,\n        tileSizes: tileSizes,\n      });\n      this.tileGrids_[code] = tileGrid;\n    }\n    return tileGrid;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   * @override\n   */\n  getTilePixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   * @override\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    return [\n      Math.round(tileSize[0] * pixelRatio),\n      Math.round(tileSize[1] * pixelRatio),\n    ];\n  }\n\n  /**\n   * @param {boolean} overlaps The source has overlapping geometries.\n   */\n  setOverlaps(overlaps) {\n    this.overlaps_ = overlaps;\n    this.changed();\n  }\n}\n\nexport default VectorTile;\n\n/**\n * Sets the loader for a tile.\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../render/Feature.js\").default]\n * @param {import(\"../VectorTile.js\").default<FeatureType>} tile Vector tile.\n * @param {string} url URL.\n */\nexport function defaultLoadFunction(tile, url) {\n  tile.setLoader(\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     */\n    function (extent, resolution, projection) {\n      loadFeaturesXhr(\n        url,\n        tile.getFormat(),\n        extent,\n        resolution,\n        projection,\n        tile.onLoad.bind(tile),\n        tile.onError.bind(tile),\n      );\n    },\n  );\n}\n","import {stylefunction} from 'ol-mapbox-style';\nimport TileQueue, {\n  getTilePriority as tilePriorityFunction,\n} from '../src/ol/TileQueue.js';\nimport MVT from '../src/ol/format/MVT.js';\nimport {inView} from '../src/ol/layer/Layer.js';\nimport VectorTileLayer from '../src/ol/layer/VectorTile.js';\nimport {get} from '../src/ol/proj.js';\nimport VectorTileSource from '../src/ol/source/VectorTile.js';\n\nconst key = 'get_your_own_D6rA4zTHduk6KOKTXzGB';\n\n/** @type {any} */\nconst worker = self;\n\nlet frameState, pixelRatio, rendererTransform;\nconst canvas = new OffscreenCanvas(1, 1);\n// OffscreenCanvas does not have a style, so we mock it\ncanvas.style = {};\nconst context = canvas.getContext('2d');\n\nconst sources = {\n  maptiler_planet: new VectorTileSource({\n    format: new MVT({layerName: 'mvt:layer'}),\n    maxZoom: 14,\n    url: 'https://api.maptiler.com/tiles/v3/{z}/{x}/{y}.pbf?key=' + key,\n  }),\n};\nconst layers = [];\n\n// Font replacement so we do not need to load web fonts in the worker\nfunction getFont(font) {\n  return font[0].replace('Noto Sans', 'serif').replace('Roboto', 'sans-serif');\n}\n\nfunction loadStyles() {\n  const styleUrl =\n    'https://api.maptiler.com/maps/streets-v2/style.json?key=' + key;\n\n  fetch(styleUrl)\n    .then((data) => data.json())\n    .then((styleJson) => {\n      const buckets = [];\n      let currentSource;\n      styleJson.layers.forEach((layer) => {\n        if (!layer.source) {\n          return;\n        }\n        if (currentSource !== layer.source) {\n          currentSource = layer.source;\n          buckets.push({\n            source: layer.source,\n            layers: [],\n          });\n        }\n        buckets[buckets.length - 1].layers.push(layer.id);\n      });\n\n      const spriteUrl =\n        styleJson.sprite + (pixelRatio > 1 ? '@2x' : '') + '.json';\n      const spriteImageUrl =\n        styleJson.sprite + (pixelRatio > 1 ? '@2x' : '') + '.png';\n      fetch(spriteUrl)\n        .then((data) => data.json())\n        .then((spriteJson) => {\n          buckets.forEach((bucket) => {\n            const source = sources[bucket.source];\n            if (!source) {\n              return;\n            }\n            const layer = new VectorTileLayer({\n              declutter: true,\n              source,\n              minZoom: source.getTileGrid().getMinZoom(),\n            });\n            layer.getRenderer().useContainer = function (target, transform) {\n              this.containerReused = this.getLayer() !== layers[0];\n              this.canvas = canvas;\n              this.context = context;\n              this.container = {\n                firstElementChild: canvas,\n                style: {\n                  opacity: String(layer.getOpacity()),\n                },\n              };\n              rendererTransform = transform;\n            };\n            stylefunction(\n              layer,\n              styleJson,\n              bucket.layers,\n              undefined,\n              spriteJson,\n              spriteImageUrl,\n              getFont,\n            );\n            layers.push(layer);\n          });\n          worker.postMessage({action: 'requestRender'});\n        });\n    });\n}\n\n// Minimal map-like functionality for rendering\nconst tileQueue = new TileQueue(\n  (tile, tileSourceKey, tileCenter, tileResolution) =>\n    tilePriorityFunction(\n      frameState,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution,\n    ),\n  () => worker.postMessage({action: 'requestRender'}),\n);\n\nconst maxTotalLoading = 8;\nconst maxNewLoads = 2;\n\nworker.addEventListener('message', (event) => {\n  if (event.data.action === 'requestFeatures') {\n    const layersInView = layers.filter((l) =>\n      inView(l.getLayerState(), frameState.viewState),\n    );\n    const observables = layersInView.map((l) =>\n      l.getFeatures(event.data.pixel),\n    );\n    Promise.all(observables).then((res) => {\n      const features = res.flat();\n      worker.postMessage({\n        action: 'getFeatures',\n        features: features.map((e) => e.getProperties()),\n      });\n    });\n    return;\n  }\n\n  if (event.data.action !== 'render') {\n    return;\n  }\n  frameState = event.data.frameState;\n  if (!pixelRatio) {\n    pixelRatio = frameState.pixelRatio;\n    loadStyles();\n  }\n  frameState.tileQueue = tileQueue;\n  frameState.viewState.projection = get('EPSG:3857');\n  frameState.layerStatesArray = layers.map((l) => l.getLayerState());\n  layers.forEach((layer) => {\n    if (inView(layer.getLayerState(), frameState.viewState)) {\n      const renderer = layer.getRenderer();\n      if (!renderer.prepareFrame(frameState)) {\n        return;\n      }\n      if (layer.getDeclutter() && !frameState.declutter) {\n        frameState.declutter = {};\n      }\n      renderer.renderFrame(frameState, canvas);\n    }\n  });\n  layers.forEach((layer) => {\n    if (!layer.getRenderer().context) {\n      return;\n    }\n    layer.renderDeclutter(frameState, layer.getLayerState());\n    layer.renderDeferred(frameState);\n  });\n  frameState.postRenderFunctions.forEach((fn) => fn(null, frameState));\n  if (tileQueue.getTilesLoading() < maxTotalLoading) {\n    tileQueue.reprioritize();\n    tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n  }\n  const imageData = canvas.transferToImageBitmap();\n  worker.postMessage(\n    {\n      action: 'rendered',\n      imageData: imageData,\n      transform: rendererTransform,\n      frameState: {\n        viewState: {\n          center: frameState.viewState.center.slice(0),\n          resolution: frameState.viewState.resolution,\n          rotation: frameState.viewState.rotation,\n        },\n        pixelRatio: frameState.pixelRatio,\n        size: frameState.size.slice(0),\n        extent: frameState.extent.slice(0),\n        coordinateToPixelTransform:\n          frameState.coordinateToPixelTransform.slice(0),\n        pixelToCoordinateTransform:\n          frameState.pixelToCoordinateTransform.slice(0),\n      },\n    },\n    [imageData],\n  );\n});\n"],"names":["v8Spec","$version","$root","version","required","type","values","name","metadata","center","value","centerAltitude","zoom","bearing","period","units","pitch","roll","light","sky","projection","terrain","sources","sprite","glyphs","transition","layers","source","source_vector","vector","url","tiles","bounds","length","scheme","xyz","tms","minzoom","maxzoom","attribution","promoteId","volatile","source_raster","raster","tileSize","source_raster_dem","encoding","terrarium","mapbox","custom","redFactor","blueFactor","greenFactor","baseShift","source_geojson","geojson","data","buffer","maximum","minimum","filter","tolerance","cluster","clusterRadius","clusterMaxZoom","clusterMinPoints","clusterProperties","lineMetrics","generateId","source_video","video","urls","coordinates","source_image","image","layer","id","fill","line","symbol","circle","heatmap","hillshade","background","layout","paint","layout_background","visibility","visible","none","layout_fill","expression","interpolated","parameters","layout_circle","layout_heatmap","layout_line","butt","round","square","bevel","miter","requires","layout_symbol","point","auto","never","always","cooperative","map","viewport","width","height","both","tokens","left","right","top","bottom","horizontal","vertical","uppercase","lowercase","layout_raster","layout_hillshade","filter_operator","all","any","has","geometry_type","Point","LineString","Polygon","stops","base","property","identity","exponential","interval","categorical","colorSpace","rgb","lab","hcl","function_stop","anchor","position","color","intensity","exaggeration","paint_fill","paint_line","paint_circle","paint_heatmap","paint_symbol","overridable","paint_raster","linear","nearest","paint_hillshade","paint_background","duration","delay","constant","refProperties","deref","parent","result","k","forEach","ValidationError","constructor","key","message","identifier","this","__line__","extendBy","output","inputs","input","ExpressionParsingError","Error","super","Scope","bindings","concat","get","NullType","kind","NumberType","StringType","BooleanType","ColorType","ProjectionDefinitionType","ObjectType","ValueType","CollatorType","FormattedType","PaddingType","ResolvedImageType","VariableAnchorOffsetCollectionType","array","itemType","N","typeToString","valueMemberTypes","checkSubtype","expected","t","memberType","isValidType","provided","allowedTypes","some","isValidNativeType","Array","isArray","verifyType","sample","Xn","Zn","t0","t1","t2","t3","deg2rad","Math","PI","rad2deg","constrainAngle","angle","rgbToLab","r","g","b","alpha","x","z","y","xyz2lab","rgb2xyz","l","pow","labToRgb","a","isNaN","lab2xyz","xyz2rgb","parseCssColor","toLowerCase","trim","namedColorsMatch","namedColors","startsWith","test","step","i","parseHex","slice","rgbRegExp","rgbMatch","match","_","rp","f1","gp","f2","bp","f3","ap","argFormat","join","valFormat","maxValue","rgba","parseAlpha","validateNumbers","hslMatch","h","s","hsla","f","n","min","max","hslToRgb","hex","parseInt","padEnd","asPercentage","Number","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","interpolateNumber","from","to","interpolateArray","d","Color","premultiplied","overwriteGetter","parse","Infinity","rgbColor","c","sqrt","atan2","NaN","rgbToHcl","getterKey","lazyValue","Object","defineProperty","toString","interpolate","spaceKey","hue0","chroma0","light0","alphaF","hue1","chroma1","light1","alphaT","hue","chroma","dh","cos","sin","hclToRgb","transparent","Collator","caseSensitive","diacriticSensitive","locale","sensitivity","collator","Intl","usage","compare","lhs","rhs","resolvedLocale","resolvedOptions","VERTICAL_ALIGN_OPTIONS","FormattedSection","text","scale","fontStack","textColor","verticalAlign","Formatted","sections","fromString","unformatted","isEmpty","section","factory","Padding","val","JSON","stringify","RuntimeError","toJSON","Set","VariableAnchorOffsetCollection","anchorValue","offsetValue","fromValues","toValues","push","fx","fy","tx","ty","ResolvedImage","options","available","ProjectionDefinition","validateRGBA","isValue","mixed","item","typeOf","valueToString","String","Literal","args","context","error","expectedType","evaluate","eachChild","outputDefined","types$1","string","number","boolean","object","Assertion","floor","parsed","ctx","fn","every","arg","types","Coercion","Boolean","parseColor","pad","coll","num","geometryTypes","EvaluationContext","globals","feature","featureState","formattedSection","_parseColorCache","availableImages","canonical","geometryType","geometry","canonicalID","properties","cached","ParsingContext","registry","isConstantFunc","path","scope","errors","part","_isConstant","expr","index","_parse","annotate","typeAnnotation","op","Expr","actual","ec","e","keys","Let","binding","Var","boundExpression","At","In","needle","haystack","indexOf","IndexOf","fromIndex","rawIndex","Match","inputType","outputType","cases","outputs","otherwise","labels","labelContext","label","abs","MAX_SAFE_INTEGER","out","Case","branches","Slice","beginIndex","endIndex","findStopLessThanOrEqualTo","lastIndex","currentValue","nextValue","lowerIndex","upperIndex","currentIndex","Step","labelKey","valueKey","stopCount","getDefaultExportFromCjs","__esModule","prototype","hasOwnProperty","call","unitbezier","hasRequiredUnitbezier","unitbezierExports","UnitBezier","p1x","p1y","p2x","p2y","cx","bx","ax","cy","by","ay","sampleCurveX","sampleCurveY","sampleCurveDerivativeX","solveCurveX","epsilon","undefined","x2","d2","solve","requireUnitbezier","Interpolate","operator","interpolation","interpolationFactor","lower","upper","exponentialInterpolation","controlPoints","rest","outputLower","outputUpper","lowerValue","upperValue","difference","progress","Coalesce","parsedArgs","needsAnnotation","requestedImageName","argCount","isComparableType","eqCollate","makeComparison","compareBasic","compareWithCollator","isOrderComparison","Comparison","hasUntypedArgument","lt","rt","Equals","NotEquals","LessThan","GreaterThan","LessThanOrEqual","GreaterThanOrEqual","CollatorExpression","NumberFormat","currency","minFractionDigits","maxFractionDigits","style","minimumFractionDigits","maximumFractionDigits","format","FormatExpression","firstArg","nextTokenMayBeObject","font","includes","lastExpression","content","evaluatedContent","ImageExpression","evaluatedImageName","Length","EXTENT","getTileCoordinates","p","lat","log","tilesAtZoom","getLngLatFromTileCoord","coord","mercatorX","mercatorY","atan","exp","updateBBox","bbox","boxWithinBox","bbox1","bbox2","rayIntersect","p1","p2","pointOnBoundary","x1","y1","y2","segmentIntersectSegment","vectorP","vectorQ","v1","v2","twoSided","lineIntersectPolygon","polygon","ring","j","pointWithinPolygon","rings","trueIfOnBoundary","inside","pointWithinPolygons","polygons","lineStringWithinPolygon","lineStringWithinPolygons","q1","q2","x3","y3","det1","det2","getTilePolygon","getTilePolygons","updatePoint","polyBBox","worldSize","halfWorldSize","shift","getTilePoints","pointBBox","shifts","tilePoints","points","getTileLines","lineBBox","tileLines","tileLine","resetBBox","Within","geometries","polygonsCoords","features","polygonGeometry","tilePolygon","tilePolygons","pointsWithinPolygons","linesWithinPolygons","TinyQueue","_down","_up","pop","peek","pos","current","halfLength","bestChild","quickselect","arr","defaultCompare","m","sd","swap","tmp","compareAreas","area","calculateSignedArea","sum","len","FE","E2","RAD","CheapRuler","coslat","w2","w","kx","ky","distance","dx","wrap","dy","pointOnLine","minX","minY","minI","minT","minDist","sqDist","deg","compareDistPair","getRangeSize","range","isRangeSafe","threshold","splitRange","isLine","size","size1","getBBox","coords","getPolygonBBox","isValidBBox","bboxToBBoxDistance","ruler","pointToLineDistance","nearestPoint","segmentToSegmentDistance","dist1","dist2","lineToLineDistance","line1","range1","line2","range2","dist","pointsToPointsDistance","points1","points2","pointToPolygonDistance","front","back","lineToPolygonDistance","polygonIntersect","poly1","poly2","polygonToPolygonDistance","polygon1","polygon2","currentMiniDist","ring1","len1","ring2","len2","updateQueue","distQueue","miniDist","rangeA","tempDist","updateQueueTwoSets","pointSet1","pointSet2","pointsToPolygonDistance","distPair","newRangesA","pointSetToPointSetDistance","isLine1","isLine2","rangeB","threshold1","threshold2","sublibe","newRangesB","polygonToGeometryDistance","maxRings","ccw","classifyRings","toSimpleGeometry","lineString","Distance","flat","pointPosition","pointToGeometryDistance","linePositions","lineStringToGeometryDistance","expressions$1","CompoundExpression","_evaluate","definition","definitions","availableOverloads","overloads","signature","signatureContext","params","isExpressionConstant","argParseFailed","signatures","stringifySignature","actualTypes","register","obj","v","varargs","isTypeAnnotation","childrenConstant","child","isFeatureConstant","isGlobalPropertyConstant","isStateConstant","success","supportsPropertyExpression","spec","supportsZoomExpression","supportsInterpolation","getType","isFunction$1","heatmapDensity","lineProgress","accumulated","LN2","E","LN10","asin","acos","ceil","binarySearch","isSupportedScript","toUpperCase","StyleExpression","propertySpec","_warningHistory","_evaluator","_defaultValue","default","_enumValues","evaluateWithoutErrorHandling","console","warn","isExpression","createExpression","parser","enum","formatted","padding","projectionDefinition","resolvedImage","variableAnchorOffsetCollection","getExpectedType","ZoomConstantExpression","_styleExpression","isStateDependent","ZoomDependentExpression","zoomStops","interpolationType","createPropertyExpression","expressionInput","isFeatureConstantResult","isZoomConstant","zoomCurve","findZoomCurve","childResult","isExpressionFilter","filterSpec","featureFilter","needGeometry","convertFilter$1","compiled","err","globalProperties","geometryNeeded","filters","convertComparisonOp$1","convertNegation","convertInOp$1","convertHasOp$1","sort","convertLiteral","convertFunction","splice","convertIdentityFunction","zoomAndFeatureDependent","featureDependent","zoomDependent","stop","convertTokenString","featureFunctionParameters","featureFunctionStops","functionType","getFunctionType","getInterpolateOperator","appendStopPair","convertPropertyFunction","fixupDegenerateStepCurve","convertZoomAndPropertyFunction","isStep","convertZoomFunction","getFallback","defaultValue","curve","re","exec","literal","validateConstants","constants","unbundle","valueOf","deepUnbundle","unbundledValue","validateObject","elementSpecs","valueSpec","elementValidators","objectElementValidators","styleSpec","validateSpec","objectKey","elementSpecKey","split","elementSpec","validateElement","validateArray","arraySpec","validateArrayElement","arrayElementValidator","arrayElementSpec","function","arrayIndex","validateNumber","validateFunction","functionValueSpec","stopKeyType","previousStopDomainValue","previousStopDomainZoom","stopDomainValues","isZoomFunction","isPropertyFunction","isZoomAndPropertyFunction","validateFunctionStop","validateStopDomainValue","reportValue","isFinite","validateExpression","expressionContext","expressionObj","propertyKey","propertyType","validateEnum","validateFilter","validateNonExpressionFilter","validateProperty","layerSpec","layerType","transitionMatch","tokenMatch","validatePaintProperty","validateLayoutProperty","validateLayer","ref","layerId","otherLayer","sourceType","validateString","prop","validateSource","replace","_a","sourceName","rasterDEM","rasterDEMSpec","rootType","isCustomEncoding","customEncodingKeys","encodingName","validateRasterDEMSource","mapExpr","reduceExpr","validateLight","lightSpec","validateSky","skySpec","validateTerrain","terrainSpec","validateSprite","allSpriteIds","allSpriteURLs","pairSpec","VALIDATORS","projectionSpec","isProjectionDefinitionValue","isPropertyValueSpecification","validate","validateGlyphsUrl","validateStyleMin","sortErrors","injectValidateSpec","validator","wrapCleanErrors","inner","apply","paintProperty","layoutProperty","v8","fontWeights","thin","hairline","book","regular","normal","plain","roman","standard","medium","bold","heavy","fat","poster","sp","italicRE","fontCache","fonts","lineHeight","cssData","haveWeight","haveStyle","weight","fontFamilies","ii","parts","maybeWeight","previousPart","fontFamily","disposed","dispose","disposeInternal","ascending","descending","linearFindNearest","target","direction","candidate","reverseSubArray","begin","end","extension","equals","arr1","arr2","TRUE","VOID","memoizeOne","lastResult","lastArgs","lastThis","nextArgs","arguments","toPromise","getter","Promise","reject","resolve","promiseGetter","clear","propagationStopped","defaultPrevented","preventDefault","stopPropagation","eventTarget_","pendingRemovals_","dispatching_","listeners_","addEventListener","listener","listeners","listenersForType","dispatchEvent","event","isString","evt","dispatching","pendingRemovals","propagate","handleEvent","pr","removeEventListener","getListeners","hasListener","listen","thisArg","once","originalListener","bind","eventsKey","listenOnce","unlistenByKey","Observable","on","un","revision_","changed","EventType","getRevision","onInternal","onceInternal","ol_key","unInternal","unByKey","uidCounter_","getUid","ol_uid","ObjectEvent","oldValue","values_","setProperties","getKeys","getProperties","assign","getPropertiesInternal","hasProperties","notify","eventType","ObjectEventType","addChangeListener","removeChangeListener","set","silent","applyProperties","unset","Property","CollectionEvent","element","unique_","unique","array_","assertUnique_","updateLength_","getLength","extend","getArray","insertAt","elem","CollectionEventType","removeAt","remove","prev","setAt","except","frameState","originalEvent","dragging","activePointers","pixel_","coordinate_","pixel","getEventPixel","coordinate","getCoordinateFromPixel","SINGLECLICK","CLICK","DBLCLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","ua","navigator","userAgent","WEBKIT","DEVICE_PIXEL_RATIO","devicePixelRatio","WORKER_OFFSCREEN_CANVAS","WorkerGlobalScope","OffscreenCanvas","self","Image","decode","PASSIVE_EVENT_LISTENERS","passive","window","moveTolerance","map_","clickTimeoutId_","emulateClicks_","dragging_","dragListenerKeys_","moveTolerance_","down_","getViewport","activePointers_","trackedTouches_","element_","pointerdownListenerKey_","handlePointerDown_","originalPointerMoveEvent_","relayedListenerKey_","relayMoveEvent_","boundHandleTouchMove_","handleTouchMove_","emulateClick_","pointerEvent","newEvent","clearTimeout","setTimeout","updateActivePointers_","pointerId","handlePointerUp_","isMouseActionButton_","button","PointerEvent","writable","doc","getOwnerDocument","handlePointerMove_","getRootNode","isMoving_","cancelable","clientX","clientY","assert","assertion","errorMessage","DROP","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getCount","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isKeyQueued","isQueued","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","tilePriorityFunction","tileChangeCallback","getKey","boundHandleTileChange_","handleTileChange","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","getTilesLoading","tile","state","getState","TileState","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","load","getTilePriority","tileSourceKey","tileCenter","tileResolution","wantedTiles","viewState","deltaX","deltaY","CENTER","RESOLUTION","ROTATION","squaredSegmentDistance","angleInRadians","angleInDegrees","lerp","decimals","factor","createExtent","extent","onlyCenter","smooth","resolution","isMoving","centerShift","viewWidth","viewHeight","shiftX","shiftY","maxX","maxY","ratio","boundingExtent","createEmpty","extendCoordinate","dest","clone","closestSquaredDistanceXY","containsCoordinate","containsXY","containsExtent","extent1","extent2","coordinateRelationship","relationship","Relationship","createOrUpdate","createOrUpdateEmpty","createOrUpdateFromCoordinate","createOrUpdateFromFlatCoordinates","flatCoordinates","offset","stride","extendFlatCoordinates","extendXY","forEachCorner","callback","getBottomLeft","getBottomRight","getTopRight","getTopLeft","getArea","getHeight","getCorner","corner","getForViewAndSize","rotation","x0","y0","getRotatedViewport","cosRotation","sinRotation","xCos","xSin","yCos","ySin","getIntersection","intersection","intersects","applyTransform","transformFn","xs","ys","_boundingExtentXYs","wrapX","projectionExtent","getExtent","canWrapX","worldWidth","wrapAndSliceX","multiWorld","coordinate1","coordinate2","rotate","cosAngle","sinAngle","coord1","coord2","worldsAway","sourceExtentWidth","easeIn","easeOut","inAndOut","levels","info","level","code_","code","units_","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","getCode","getUnits","getMetersPerUnit","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setExtent","setWorldExtent","setGetPointResolution","func","getPointResolutionFunc","RADIUS","HALF_SIZE","WORLD_EXTENT","MAX_SAFE_Y","EPSG3857Projection","cosh","PROJECTIONS","fromEPSG4326","dimension","toEPSG4326","EPSG4326Projection","cache","transforms","destination","sourceCode","destinationCode","K0","E3","E_P2","SQRT_E","_E","_E2","_E3","_E4","_E5","M1","M4","P2","P3","P4","P5","R","toLonLat","easting","northing","zone","mu","north","pRad","pSin","pSin2","pCos","pTan","pTan2","pTan4","epSin","epSinSqrt","c2","d3","d4","d5","latitude","longitude","zoneToCentralLongitude","latRad","latSin","latCos","latTan","latTan2","latTan4","lonRad","centralLonRad","a2","a3","a4","a5","a6","epsgRegExes","zoneFromCode","epsgId","makeTransformFunction","transformer","DEFAULT_RADIUS","getDistance","c1","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","transformFactories","forward","inverse","projectionFactories","showCoordinateWarning","disableCoordinateWarning","disable","cloneTransform","addProjection","projectionLike","makeProjection","pointResolution","projUnits","getTransformFromProjections","vertices","addEquivalentProjections","projections","addProjections","createProjection","defaultCode","createTransformFromCoordinateTransform","coordTransform","pointLength","jj","equivalent","projection1","projection2","equalUnits","transformFunc","sourceTransforms","destinationTransforms","makeTransforms","intermediateCode","composeTransformFuncs","fromSource","toDestination","dimensions","getTransform","transform","userProjection","getUserProjection","toUserCoordinate","sourceProjection","fromUserCoordinate","destProjection","projections2","forwardTransform","inverseTransform","tmp_","multiply","transform1","transform2","a1","b1","d1","e1","b2","e2","compose","dx1","dy1","sx","sy","dx2","dy2","makeInverse","det","mat","matrixPrecision","cssTransform","substring","parseFloat","transform2D","destinationStride","anchorX","anchorY","tmpTransform","tmpPoint","extentRevision_","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","simplifyTransformedInternal","revision","squaredTolerance","getSimplifiedGeometry","simplifyTransformed","closestPointXY","closestPoint","minSquaredDistance","MIN_VALUE","getClosestPoint","intersectsCoordinate","computeExtent","returnOrUpdate","simplify","intersectsExtent","translate","sourceProj","inCoordinates","outCoordinates","pixelExtent","projectedExtent","transformed","projTransform","getLayoutForStride","getStrideForLayout","getCoordinates","getFirstCoordinate","getFlatCoordinates","getLastCoordinate","getLayout","simplifiedGeometry","getSimplifiedGeometryInternal","getStride","setFlatCoordinates","setCoordinates","setLayout","nesting","linearRing","twiceArea","linearRings","ends","assignClosest","offset1","offset2","maxSquaredDelta","squaredDelta","arrayMaxSquaredDelta","assignClosestPoint","maxDelta","isRing","squaredDistance","assignClosestArrayPoint","deflateCoordinates","deflateCoordinatesArray","coordinatess","deflateMultiCoordinatesArray","coordinatesss","endss","inflateCoordinates","inflateCoordinatesArray","inflateMultiCoordinatesArray","douglasPeucker","simplifiedFlatCoordinates","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","douglasPeuckerArray","simplifiedEnds","snap","quantize","quantizeArray","LinearRing","maxDelta_","maxDeltaRevision_","deflateCoordinate","linearRingContainsExtent","linearRingContainsXY","wn","linearRingsContainsXY","getInteriorPointOfArray","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","segmentLength","getInteriorPointsOfMultiArray","interiorPoints","ret","intersectsLineString","coordinatesExtent","point1","point2","start","startRel","endRel","startX","startY","endX","endY","slope","intersectsSegment","intersectsLinearRing","intersectsLinearRingArray","linearRingIsClockwise","edge","linearRingsAreOriented","isClockwise","linearRingssAreOriented","orientLinearRings","orientLinearRingsArray","startOrientation","prevEndIndex","orientation","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","appendLinearRing","getOrientedFlatCoordinates","getEnds","getFlatInteriorPoint","flatCenter","getInteriorPoint","getLinearRingCount","getLinearRing","getLinearRings","fromExtent","getViewportClampedResolution","maxExtent","viewportSize","showFullExtent","xResolution","yResolution","getSmoothClampedResolution","maxResolution","minResolution","createMinMaxResolution","cappedMaxRes","DEFAULT_TILE_SIZE","animationCallback","returnValue","isNoopAnimation","animation","sourceCenter","targetCenter","sourceResolution","targetResolution","sourceRotation","targetRotation","calculateCenterOn","rotX","rotY","hints_","animations_","updateAnimationKey_","projection_","viewportSize_","targetCenter_","targetResolution_","targetRotation_","nextCenter_","nextResolution_","nextRotation_","cancelAnchor_","applyOptions_","ViewProperty","resolutionConstraintInfo","resolutionConstraint","defaultMaxZoom","defaultZoomFactor","minZoom","maxZoom","zoomFactor","smoothResolutionConstraint","projExtent","constrainOnlyCenter","resolutions","constrainResolution","capped","createSnapToResolutions","defaultMaxResolution","degrees","defaultMinResolution","power","minZoomLevel","cappedZoomLevel","zoomLevel","createSnapToPower","constraint","createResolutionConstraint","maxResolution_","minResolution_","zoomFactor_","resolutions_","padding_","minZoom_","centerConstraint","smoothExtentConstraint","createCenterConstraint","rotationConstraint","enableRotation","constrainRotation","createSnapToZero","theta","createSnapToN","createRotationConstraint","constraints_","setRotation","setCenterInternal","setResolution","setZoom","oldPadding","getCenterInternal","newPadding","getResolution","offsetX","offsetY","getUpdatedOptions_","newOptions","getZoom","getRotation","animate","var_args","isDef","getAnimating","resolveConstraints","getProjection","animateInternal","animationCount","Date","now","series","complete","easing","getResolutionForZoom","delta","setHint","ViewHint","updateAnimations_","getInteracting","cancelAnimations","cancelAnimationFrame","more","seriesComplete","elapsed","fraction","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","requestAnimationFrame","currentCenter","currentResolution","setViewportSize","getCenter","getConstraints","getConstrainResolution","getHints","hints","calculateExtent","calculateExtentInternal","getViewportSizeMinusPadding_","getMaxResolution","getMinResolution","getMaxZoom","getZoomForResolution","setMaxZoom","getMinZoom","setMinZoom","setConstrainResolution","enabled","getResolutions","getResolutionForExtent","getResolutionForExtentInternal","getResolutionForValueFunction","getConstrainedResolution","getValueForResolutionFunction","logPower","reducedSize","nextCenter","nextResolution","nextRotation","getViewStateAndExtent","baseLevel","fit","geometryOrExtent","fitInternal","rotatedExtentForGeometry","minRotX","minRotY","maxRotX","maxRotY","rotatedExtent","centerRot","centerX","centerY","getConstrainedCenter","centerOn","centerOnInternal","calculateCenterShift","shiftedCenter","adjustCenter","deltaCoordinates","setCenter","adjustCenterInternal","adjustResolution","adjustResolutionInternal","newResolution","adjustZoom","adjustRotation","adjustRotationInternal","newRotation","hint","doNotCancelAnims","forceMoving","newCenter","resolutionDirection","beginInteraction","endInteraction","endInteractionInternal","getConstrainedZoom","targetZoom","targetRes","CLASS_HIDDEN","CLASS_UNSELECTABLE","CLASS_CONTROL","CLASS_COLLAPSED","fontRegEx","RegExp","fontRegExMatchIndex","getFontParameters","fontSpec","variant","families","family","canvasPool","settings","canvas","document","createElement","getContext","sharedCanvasContext","getSharedCanvasContext2D","releaseCanvas","clearRect","replaceNode","newNode","oldNode","parentNode","replaceChild","createMockDiv","Proxy","childNodes","appendChild","node","removeChild","insertBefore","referenceNode","receiver","Reflect","isCanvas","HTMLCanvasElement","pointerEvents","target_","listenerKeys","render","setTarget","getMap","setMap","getOverlayContainerStopEvent","MapEventType","mapEvent","getElementById","ulElement_","collapsed_","collapsed","userCollapsed_","overrideCollapsible_","collapsible","collapsible_","attributions_","attributions","className","tipLabel","expandClassName","collapseLabel","collapseClassName","collapseLabel_","textContent","label_","activeLabel","toggleButton_","setAttribute","title","handleClick_","cssClasses","renderedAttributions_","renderedVisible_","collectSourceAttributions_","getAllLayers","visibleAttributions","flatMap","getAttributions","add","getSource","getAttributionsCollapsible","setCollapsible","updateElement_","display","lastChild","removeChildren","innerHTML","handleToggle_","classList","toggle","getCollapsible","setCollapsed","getCollapsed","compassClassName","callResetNorth_","resetNorth","duration_","autoHide_","autoHide","rotation_","resetNorth_","view","getView","contains","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","zoomByDelta_","currentZoom","newZoom","decay","minVelocity","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","update","firstIndex","getAngle","zoomByDelta","setActive","getActive","mapBrowserEvent","active","delta_","stopEvent","browserEvent","shiftKey","conditions","pass","altShiftKeysOnly","altKey","metaKey","ctrlKey","focusWithTabindex","targetElement","getTargetElement","rootNode","ShadowRoot","host","hasAttribute","activeElement","mouseActionButton","noModifierKeys","shiftKeyOnly","targetNotEditable","tagName","isContentEditable","mouseOnly","pointerType","primaryAction","isPrimary","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","targetPointers","getPointerCount","updateTrackedPointers_","handledUp","handled","Pointer","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition","condition_","onFocusOnly","noKinetic_","centroid","centerpx","getPixelFromCoordinateInternal","getCoordinateFromPixelInternal","lastAngle_","getSize","geometry_","startPixel_","endPixel_","render_","startPixel","endPixel","px","getOverlayContainer","setPixels","createOrUpdateGeometry","getGeometry","DragBoxEventType","DragBoxEvent","box_","minArea_","minArea","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","completeBox","out_","defaultCondition_","pixelDelta_","pixelDelta","keyEvent","Key","mapUnitsDelta","pan","platformModifierKey","totalDelta_","lastDelta_","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","deltaPerZoom_","endInteraction_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_LINE","DOM_DELTA_PAGE","timeLeft","handleWheelZoom_","setMouseAnchor","pointerOptions","anchor_","rotating_","rotationDelta_","threshold_","rotationDelta","touch0","touch1","lastDistance_","lastScaleDelta_","scaleDelta","background_","opacity","zIndex","className_","state_","getBackground","getClassName","getLayerState","managed","getZIndex","getOpacity","getVisible","getLayersArray","getLayerStatesArray","states","getSourceState","setBackground","setMaxResolution","setMinResolution","setOpacity","setVisible","setZIndex","zindex","GroupEventType","GroupEvent","LayerGroup","Base","baseOptions","layersListenerKeys_","listenerKeys_","handleLayersChanged_","setLayers","handleLayerChange_","getLayers","handleLayersAdd_","handleLayersRemove_","layersArray","registerLayerListeners_","handleLayerGroupAdd_","handleLayerGroupRemove_","collectionEvent","collection","currentLayers","ownLayerState","defaultZIndex","layerState","inView","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","renderer_","sourceReady_","rendered","handleSourcePropertyChange_","setSource","getRenderSource","handleSourceChange_","getFeatures","getData","isVisible","getMapInternal","layerStatesArray","getLayerGroup","find","layerExtent","layerRenderer","getRenderer","prepareFrame","renderFrame","unrender","getDeclutter","renderDeclutter","renderDeferred","setMapInternal","handlePrecompose_","renderEvent","arrayLayerState","createRenderer","hasRenderer","clearRenderer","maxEntries","_maxEntries","_minEntries","_all","search","toBBox","nodesToSearch","children","childBBox","leaf","collides","insert","_build","_splitRoot","tmpNode","_insert","createNode","equalsFn","indexes","goingUp","findItem","_condense","compareMinX","compareMinY","fromJSON","items","M","calcBBox","N2","N1","multiSelect","right2","right3","_chooseSubtree","targetNode","minEnlargement","bboxArea","enlargement","isNode","insertPath","_split","_adjustParentBBoxes","_chooseSplitAxis","splitIndex","_chooseSplitIndex","minOverlap","distBBox","overlap","intersectionArea","compareNodeMinX","compareNodeMinY","_allDistMargin","leftBBox","rightBBox","margin","bboxMargin","siblings","destNode","mid","NO_COLOR","colorParseContext","rgbModernRegEx","rgbLegacyAbsoluteRegEx","rgbLegacyPercentageRegEx","hexRegEx","toColorComponent","divider","endsWith","throwInvalidColor","parseRgba","rgbDivider","colorFromHex","colorComponent","willReadFrequently","desynchronized","fillStyle","invalidCheckFillStyle","colorString","fillRect","colorFromImage","getImageData","cacheSize","withAlpha","rgbaToLcha","q","asArray","hasArea","toSize","numTypes","NumberArrayType","SizeType","AnyType","typeNames","namedTypes","typeName","names","namedType","includesType","broad","specific","isType","LiteralExpression","isSpecific","CallExpression","newParsingContext","variables","featureId","mapState","encoded","returnType","parsers","parseCallExpression","Ops","createCallExpressionParser","hasArgsCount","withGetArgs","withNoArgs","withArgsOfType","usesMapState","withArgsOfReturnType","hasEvenArgs","argsCount","fallback","operation","needleType","colors","parsedColors","minArgs","maxArgs","argType","validators","computeGeometryType","getGeometries","buildExpression","compileExpression","colorValue","compileAssertionExpression","nameExpression","hasOwn","compileAccessorExpression","compileLogicalExpression","compileComparisonExpression","compileNumericExpression","compileCaseExpression","compileMatchExpression","previousInput","previousOutput","isColor","interpolateColor","compileInterpolateExpression","compileConvertExpression","input1","output1","input2","output2","along","rgba1","rgba2","lcha1","lcha2","deltaHue","lchaToRgba","decodeFallback","src","then","catch","handleLoad","unlisten","handleError","IconImageCache","cache_","patternCache_","cacheSize_","maxCacheSize_","canExpireCache","expire","iconImage","crossOrigin","getCacheKey","getPattern","pattern","getImageState","ImageState","ready","createPattern","getImage","setSize","maxCacheSize","shared","taintedTestContext","IconImage","imageState","hitDetectionImage_","image_","crossOrigin_","canvas_","color_","imageState_","size_","src_","tainted_","ready_","initializeImage_","isTainted_","drawImage","dispatchChangeEvent_","handleImageError_","handleImageLoad_","pixelRatio","replaceColor_","getPixelRatio","getHitDetectionImage","getSrc","HTMLImageElement","globalCompositeOperation","onChange","cacheKey","asColorLike","canvasPattern","patternCanvasContext","asCanvasPattern","defaultFont","defaultFillStyle","defaultLineCap","defaultLineDash","defaultLineJoin","defaultStrokeStyle","defaultTextAlign","defaultTextBaseline","defaultPadding","checkedFonts","measureFont","measureContext","textHeights","genericFontFamilies","getFontKey","registerFont","retries","fontFaceSet","async","isAvailable","fontFaces","checkFamily","checkWeight","check","done","checkedFontsProperties","currentRetries","needCheck","measureTextHeight","measureElement","metrics","measureText","actualBoundingBoxAscent","actualBoundingBoxDescent","minHeight","maxHeight","border","body","offsetHeight","measureTextWidth","measureAndCacheTextWidth","reduce","curr","drawImageOrLabel","labelOrImage","originX","originY","save","globalAlpha","contextInstructions","executeLabelInstructions","restore","ImageStyle","opacity_","rotateWithView_","rotateWithView","scale_","scaleArray_","displacement_","displacement","declutterMode_","declutterMode","getScale","getRotateWithView","getDisplacement","getDeclutterMode","getScaleArray","getAnchor","getImageSize","getOrigin","setDisplacement","setRotateWithView","setScale","listenImageChange","unlistenImageChange","RegularShape","hitDetectionCanvas_","fill_","origin_","radius2_","radius2","stroke_","stroke","renderOptions_","loading","getFill","getPoints","getRadius","getRadius2","getStroke","setFill","createHitDetectionCanvas_","fillKey","renderOptions","draw_","setStroke","calculateLineJoinSize_","lineJoin","strokeWidth","miterLimit","r1","r2","miterRatio","bevelAdd","aa","dd","innerMiterRatio","innerLength","createRenderOptions","strokeStyle","lineCap","lineDash","lineDashOffset","getColor","getWidth","getLineDash","getLineDashOffset","getLineJoin","getLineCap","getMiterLimit","maxRadius","createPath_","lineWidth","setLineDash","drawHitDetectionCanvas_","arc","startAngle","angle0","radiusC","lineTo","closePath","setRadius","patternImage_","setColor","patternImage","CanvasPattern","CanvasGradient","calculateScale","wantedWidth","wantedHeight","Icon","normalizedAnchor_","anchorOrigin_","anchorOrigin","anchorXUnits_","anchorXUnits","anchorYUnits_","anchorYUnits","img","iconImage_","offset_","offsetOrigin_","offsetOrigin","initialOptions_","onload","imageSize","setAnchor","iconImageSize","setSrc","lineCap_","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","width_","setLineCap","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","Style","geometryFunction_","defaultGeometryFunction","setGeometry","renderer","hitDetectionRenderer_","hitDetectionRenderer","text_","zIndex_","getText","setRenderer","setHitDetectionRenderer","getHitDetectionRenderer","getGeometryFunction","setImage","setText","defaultStyles","createDefaultStyle","Circle","Text","font_","keepUpright_","keepUpright","textAlign_","textAlign","justify_","justify","repeat_","repeat","textBaseline_","textBaseline","maxAngle_","maxAngle","placement_","placement","overflow_","overflow","offsetX_","offsetY_","backgroundFill_","backgroundFill","backgroundStroke_","backgroundStroke","getFont","getPlacement","getRepeat","getMaxAngle","getOverflow","getKeepUpright","getTextAlign","getJustify","getTextBaseline","getOffsetX","getOffsetY","getBackgroundFill","getBackgroundStroke","getPadding","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setRepeat","setKeepUpright","setTextAlign","setJustify","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","rulesToStyleFunction","rules","parsingContext","evaluator","compiledRules","rule","styles","styleLength","buildStyle","someMatched","filterEvaluator","else","styleEvaluator","buildRuleSet","evaluationContext","getId","flatStylesToStyleFunction","flatStyles","evaluators","nonNullCount","flatStyle","evaluateFill","buildFill","evaluateStroke","buildStroke","evaluateText","prefix","evaluateValue","stringEvaluator","evaluateBackgroundFill","evaluateBackgroundStroke","evaluateFont","evaluateMaxAngle","numberEvaluator","evaluateOffsetX","evaluateOffsetY","evaluateOverflow","booleanEvaluator","evaluatePlacement","evaluateRepeat","evaluateScale","sizeLikeEvaluator","evaluateRotateWithView","evaluateRotation","evaluateAlign","evaluateJustify","evaluateBaseline","evaluateKeepUpright","evaluatePadding","numberArrayEvaluator","optionalDeclutterMode","buildText","evaluateImage","srcName","requireString","evaluateAnchor","coordinateEvaluator","evaluateOpacity","evaluateDisplacement","optionalIconOrigin","optionalIconAnchorUnits","requireColorLike","optionalColorLike","optionalString","requireNumberArray","optionalNumberArray","optionalNumber","optionalSize","icon","buildIcon","pointsName","radiusName","requireNumber","shape","buildShape","evaluateRadius","buildCircle","buildImage","evaluateZIndex","empty","evaluateColor","srcEvaluator","offsetEvaluator","sizeEvaluator","patternSizeEvaluator","colorEvaluator","colorLikeEvaluator","patternEvaluator","evaluateWidth","evaluateLineCap","evaluateLineJoin","evaluateLineDash","evaluateLineDashOffset","evaluateMiterLimit","requireSize","requireSizeLike","renderBuffer","updateWhileAnimating","updateWhileInteracting","declutter_","declutter","renderBuffer_","style_","styleFunction_","setStyle","updateWhileAnimating_","updateWhileInteracting_","getRenderBuffer","getRenderOrder","getStyle","getStyleFunction","getUpdateWhileAnimating","getUpdateWhileInteracting","declutterGroup","setRenderOrder","renderOrder","styleLike","toStyleLike","styleFunction","setDeclutter","inversePixelTransform","expireIconCache","dispatchRenderEvent","calculateMatrices2D","coordinateToPixelTransform","pixelToCoordinateTransform","forEachFeatureAtCoordinate","hitTolerance","checkWrapped","layerFilter","thisArg2","translatedCoordinate","offsets","layerStates","numLayers","matches","tmpCoord","getWrapX","order","distanceSq","hasFeatureAtCoordinate","scheduleExpireIconCache","postRenderFunctions","fontChangeListenerKey_","redrawText","container","firstChild","children_","BaseVector","renderedLayerStates","previousElement","layerIndex","sourceState","oldChildren","oldChild","newChild","replaceChildren","mapCanvas","mapContext","firstElementChild","setTransform","backgroundColor","removeLayerMapProperty","setLayerMapProperty","optionsInternal","keyboardEventTarget","layerGroup","controls","interactions","overlays","MapProperty","createOptionsInternal","renderComplete_","loaded_","boundHandleBrowserEvent_","handleBrowserEvent","maxTilesLoading_","maxTilesLoading","pixelRatio_","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","overlayContainer_","overlayContainerStopEvent_","mapBrowserEventHandler_","keyboardEventTarget_","targetChangeHandlerKeys_","targetElement_","resizeObserver_","ResizeObserver","updateSize","zoomOptions","rotateOptions","attributionOptions","altShiftDragRotate","doubleClickZoom","zoomDelta","zoomDuration","dragPan","pinchRotate","pinchZoom","keyboard","mouseWheelZoom","shiftDragZoom","overlays_","overlayIdIndex_","postRenderFunctions_","tileQueue_","handleTileChange_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","viewOptions","setView","addOverlayInternal_","control","interaction","addControl","getControls","addInteraction","getInteractions","addLayer","handleLayerAdd_","addOverlay","overlay","getOverlays","disconnect","forEachFeatureAtPixel","getFeaturesAtPixel","addLayersFrom","hasFeatureAtPixel","getEventCoordinate","getEventCoordinateInternal","viewportPosition","getBoundingClientRect","scaleX","scaleY","eventPosition","changedTouches","getTarget","getOverlayById","group","getLoadingOrNotReady","getPixelFromCoordinate","viewCoordinate","ownerDocument","handleMapBrowserEvent","currentDoc","documentElement","interactionsArray","handlePostRender","tileQueue","viewHints","lowOnFrameBudget","time","unobserve","Composite","targetRoot","HTMLElement","observe","handleViewPropertyChanged_","updateViewportSize_","handleLayerRemove_","isRendered","renderFrame_","renderSync","handleFontsChanged","removeControl","removeInteraction","removeLayer","removeOverlay","previousFrameState","usedTiles","mapId","renderTargets","nextExtent","setLayerGroup","oldLayerGroup","computedStyle","getComputedStyle","offsetWidth","getClientRects","oldSize","interpolatePoint","o","cumulativeLengths","comparator","cmp","low","high","found","lineStringCoordinateAtM","extrapolate","lo","hi","m0","RenderFeature","id_","type_","flatCoordinates_","flatInteriorPoints_","flatMidpoints_","properties_","squaredTolerance_","stride_","simplifiedGeometry_","getFlatInteriorPoints","getFlatMidpoint","getFlatMidpoints","midpoint","enableSimplifyTransformed","tileCoord","transition_","transitionStarts_","release","setState","getTileCoord","getAlpha","inTransition","endTransition","tileLoadFunction","format_","features_","loader_","tileLoadFunction_","url_","getTileUrl","getFormat","onLoad","dataProjection","setFeatures","onError","setLoader","loader","freeze","functionCacheByStyleId","filterCacheByStyleId","styleId","getStyleId","glStyle","res","createCanvas","drawIconHalo","spriteImage","spriteImageData","haloWidth","haloColor","imgSize","imageCanvas","imageContext","imageData","smoothstep","drawSDF","gamma","putImageData","hairSpacePool","applyLetterSpacing","letterSpacing","textWithLetterSpacing","lines","joinSpaceString","ll","getMeasureContext","measureCache","wrapText","em","hardLines","wrappedText","words","maxWidth","word","testLine","prevWidth","nextWidth","next","lineWords","lastWord","distanceFromCenter","renderFeatureCoordinates","renderFeature","layoutOrPaint","functionCache","functions","isExpr","compiledExpression","rawExpression","expressionData","evaluateFilter","filterCache","renderTransparentEnabled","colorWithOpacity","templateRegEx","fromTemplate","getSpriteImageForIcon","spriteImages","recordLayer","stylefunction","olLayer","sourceOrLayers","spriteData","spriteImageUrl","getFonts","Request","Response","imageUrl","blobUrl","response","fetch","blob","URL","createObjectURL","revokeObjectURL","worker","postMessage","action","allLayers","create","layersBySourceLayer","mapboxLayers","iconImageCache","patternCache","mapboxSource","sourceLayer","textHalo","onlyLayer","layerProperty","layerName_","featureGeometry","mapCenter","featureCenter","featureBelongsToLayer","stylesLength","layerData","strokeColor","fillIcon","icon_cache_key","iconImg","skipLabel","textLineHeight","textSize","maxTextWidth","hasImage","placementAngle","styleGeom","imageElement","iconRotationAlignment","geom","xM","dotProduct","iconSize","iconColor","iconCacheKey","iconOptions","sdf","unSDFed","spriteImageUnSDFed","circleRadius","circleStrokeColor","circleTranslate","circleColor","circleStrokeWidth","cache_key","fontArray","textField","acc","chunk","chunkFont","textTransform","wrappedLabel","textAnchor","symbolSpacing","textHaloWidth","textOffset","textTranslate","vOffset","hOffset","textRotationAlignment","textJustify","halfTextSize","textPadding","geometryOrProperties","geometryName_","geometryChangeKey_","handleGeometryChanged_","setGeometryName","getGeometryName","handleGeometryChange_","createStyleFunction","setId","lineStringLength","flatMidpoint_","flatMidpointRevision_","appendCoordinate","forEachSegment","getCoordinateAtM","getCoordinateAt","appendPoint","multiPoint","getPoint","lineStrings","appendLineString","multiLineString","lineStringsCoordinateAtM","getLineString","getLineStrings","midpoints","intersectsLineStringArray","endss_","flatInteriorPointsRevision_","thisEndss","appendPolygon","newEndss","multiPolygon","multiArrayMaxSquaredDelta","assignClosestMultiArrayPoint","linearRingssContainsXY","linearRingss","getEndss","getInteriorPoints","simplifiedEndss","quantizeMultiArray","getPolygon","prevEnds","getPolygons","intersectsLinearRingMultiArray","lastEnds","defaultFeatureProjection","featureClass","supportedMediaTypes","getReadOptions","readProjection","featureProjection","adaptOptions","readFeature","readFeatures","readGeometry","writeFeature","writeFeatures","writeGeometry","transformGeometryWithOptions","write","fromProjection","toProjection","SHIFT_LEFT_32","SHIFT_RIGHT_32","utf8TextDecoder","TextDecoder","Pbf","buf","Uint8Array","ArrayBuffer","isView","dataView","DataView","readFields","readField","readVarint","tag","startPos","skip","readMessage","readFixed32","getUint32","readSFixed32","getInt32","readFixed64","readSFixed64","readFloat","getFloat32","readDouble","getFloat64","isSigned","toNum","readVarintRemainder","readVarint64","readSVarint","readBoolean","readString","subarray","str","b0","b3","bytesPerSequence","fromCharCode","readUtf8","readBytes","readPackedVarint","readPackedEnd","readPackedSVarint","readPackedBoolean","readPackedFloat","readPackedDouble","readPackedFixed32","readPackedSFixed32","readPackedFixed64","readPackedSFixed64","writeTag","writeVarint","realloc","finish","writeFixed32","setInt32","writeSFixed32","writeFixed64","writeSFixed64","pbf","writeBigVarintLow","lsb","writeBigVarintHigh","writeBigVarint","writeSVarint","writeBoolean","writeString","lead","charCodeAt","writeUtf8","makeRoomForExtraLength","writeFloat","setFloat32","writeDouble","setFloat64","writeBytes","writeRawMessage","writeMessage","writePackedVarint","writePackedSVarint","writePackedBoolean","writePackedFloat","writePackedDouble","writePackedFixed32","writePackedSFixed32","writePackedFixed64","writePackedSFixed64","writeBytesField","writeFixed32Field","writeSFixed32Field","writeFixed64Field","writeSFixed64Field","writeVarintField","writeSVarintField","writeStringField","writeFloatField","writeDoubleField","writeBooleanField","extraLen","layersPBFReader","layerPBFReader","featurePBFReader","readRawFeature","geometryName","layerName","layers_","idProperty_","idProperty","readRawGeometry_","cmd","coordsLen","currentEnd","cmdLen","createFeature_","rawFeature","numEnds","getGeometryType","ctor","pbfLayers","pbfLayer","drawCustom","drawGeometry","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","drawText","setFillStrokeStyle","setImageStyle","imageStyle","declutterImageWithText","setTextStyle","textStyle","Instruction","BEGIN_GEOMETRY","BEGIN_PATH","CIRCLE","CLOSE_PATH","CUSTOM","DRAW_CHARS","DRAW_IMAGE","END_GEOMETRY","FILL","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","STROKE","fillInstruction","strokeInstruction","beginPathInstruction","closePathInstruction","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","tmpCoordinate_","hitDetectionInstructions","applyPixelRatio","dashArray","dash","appendFlatPointCoordinates","getBufferedMaxExtent","myEnd","appendFlatLineCoordinates","closed","skipFirst","lastXCoord","lastYCoord","nextCoord","lastRel","nextRel","skipped","drawCustomCoordinates_","builderEnds","builderEnd","beginGeometry","builderBegin","builderEndss","myEnds","endGeometry","reverseHitDetectionInstructions","reverse","instruction","fillStyleToState","fillStyleColor","fillPatternScale","strokeStyleToState","strokeStyleColor","strokeStyleLineCap","strokeStyleLineDash","strokeStyleLineDashOffset","strokeStyleLineJoin","strokeStyleWidth","strokeStyleMiterLimit","createFill","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","imagePixelRatio_","anchorX_","anchorY_","height_","originX_","originY_","declutterImageWithText_","myBegin","filteredFlatCoordinates","sharedData","origin","drawFlatCoordinates_","moveToLineToInstruction","lastStroke","drawFlatCoordinatess_","setFillStrokeStyles_","circleInstruction","lineChunk","chunkLength","chunks","cursor","chunkM","currentChunk","missing","matchingChunk","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","TEXT_ALIGN","labels_","textOffsetX_","textOffsetY_","textRotateWithView_","textKeepUpright_","textRotation_","textFillState_","fillStates","textStrokeState_","strokeStates","textState_","textStates","textKey_","fillKey_","strokeKey_","fillState","strokeState","textState","geometryWidths","beg","keep","saveTextStates_","p0","p3","hitDetectionBackgroundFill","flatOffset","oo","cc","chunkBegin","drawChars_","strokeKey","textKey","baseline","textFillStyle","textStrokeStyle","textScale","textOffsetX","textOffsetY","textRotateWithView","textKeepUpright","textRotation","BATCH_CONSTRUCTORS","PolygonBuilder","Builder","ImageBuilder","LineStringBuilder","TextBuilder","tolerance_","maxExtent_","resolution_","buildersByZIndex_","builderInstructions","zKey","builders","builderKey","builderInstruction","getBuilder","builderType","zIndexKey","replays","replay","Constructor","drawTextOnPath","startM","segmentM","advance","beginX","beginY","startOffset","startLength","endM","singleSegment","previousAngle","iStart","charLength","chars","instructions_","context_","push_","pushMethodArgs_","pushFunction","draw","instructionsAtIndex","instructionAtIndex","tmpExtent","p4","getDeclutterBox","replayImageOrLabelArgs","declutterBox","rtlRegEx","horizontalTextAlign","align","createTextChunks","richTextToPlainText","overlaps","deferredRendering","alignAndScaleFill_","coordinateCache_","renderedTransform_","pixelCoordinates_","viewRotation_","widths_","zIndexContext_","getZIndexContext","createLabel","widths","heights","lineWidths","baseStyle","currentWidth","currentHeight","getTextDimensions","renderWidth","leftRight","strokeInstructions","fillInstructions","previousFont","lineOffset","widthHeightIndex","lineWidthIndex","fillStrokeArgs","replayTextBackground_","beginPath","moveTo","setStrokeStyle_","calculateImageOrLabelDimensions_","sheetWidth","sheetHeight","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","drawImageX","drawImageY","drawImageW","drawImageH","canvasTransform","replayImageOrLabel_","scaledCanvasSize","imageOrLabel","box","strokePadding","alignAndScale","repeatSize","drawLabelWithPointPlacement_","execute_","featureCallback","hitExtent","declutterTree","zIndexContext","pixelCoordinates","prevX","prevY","roundX","roundY","pendingFill","pendingStroke","coordinateCache","viewRotation","viewRotationFromTransform","batchSize","currentGeometry","labelWithAnchor","backgroundFillInstruction","backgroundStrokeInstruction","widthIndex","imageArgs","imageDeclutterMode","imageDeclutterBox","renderImage","renderText","imageDeclutter","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","textLength","drawChars","execute","executeHitDetection","ALL","DECLUTTER","circlePixelIndexArrayCache","allInstructions","overlaps_","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","renderedContext_","deferredZIndexContexts_","createExecutors_","clip","flatClipCoords","getClipCoords","executors","instructionByZindex","hasExecutors","candidates","declutteredFeatures","contextSize","newContext","maxDistanceSq","distances","pixelIndex","getPixelIndexArray","idx","zs","executor","targetContext","builderTypes","maxBuilderTypes","requireClip","getDeferredZIndexContexts","getRenderedContext","deferredZIndexContexts","userTransform","transform_","transformRotation_","userTransform_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","textScale_","tmpLocalTransform_","drawImages_","localTransform","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","drawRings_","simpleGeometry","transformGeom2D","getGeometriesArray","flatMidpoint","geometryExtent","flatMidpoints","flatInteriorPoint","flatInteriorPoints","contextFillState","contextStrokeState","contextTextState","imagePixelRatio","imageAnchor","imageOrigin","imageScale","textFillStyleColor","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textText","textTextAlign","textTextBaseline","HIT_DETECT_RESOLUTION","createHitDetectionImageData","userExtent","imageSmoothingEnabled","featureCount","indexFactor","featuresByZIndex","featureStyleFunction","padStart","originalStyle","imgContext","byGeometryType","getGeometriesArrayRecursive","zIndexKeys","geomAndStyle","kk","hitDetect","resultFeatures","GEOMETRY_RENDERERS","builderGroup","hasText","imageReplay","textReplay","lineStringReplay","polygonReplay","replayGroup","declutterBuilderGroup","geometryRenderer","circleReplay","getSquaredTolerance","getTolerance","loadingPromises","renderGeometry","renderFeatureInternal","boundHandleImageChange_","handleImageChange_","layer_","staleKeys_","maxStaleKeys","getStaleKeys","prependStaleKey","unshift","getLayer","renderIfReadyAndVisible","loadImage","pixelContext","renderedResolution","tempTransform","pixelTransform","deferredContext_","containerReused","col","row","useContainer","layerClassName","cssTransform1","cssTransform2","mat1","mat2","transformOrigin","clipUnrotated","topLeft","topRight","bottomRight","bottomLeft","inverted","prepareContainer","dispatchRenderEvent_","preRender","postRender","renderDeferredInternal","getRenderContext","getRenderTransform","asImageLike","HTMLVideoElement","ImageBitmap","disposedError","defaultSize","data_","error_","controller_","controller","getError","abort","unlisten_","unlistenImage_","getCrossOrigin","getBlankImage","naturalWidth","naturalHeight","loadHandler","errorHandler","listening","decoding","loaded","listenImage","TileRange","containsTileRange","tileRange","brokenDiagonalRendering_","drawTestTriangle","u1","u2","verifyBrokenDiagonalRendering","calculateSourceResolution","targetProj","targetMetersPerUnit","sourceMetersPerUnit","sourceExtent","compensationFactor","targetExtent","triangulation","gutter","renderEdges","drawSingle","clipExtent","pixelRound","sourceDataExtent","stitchContext","stitchScale","inverseScale","xPos","yPos","rect","srcWidth","srcHeight","targetTopLeft","getTriangles","triangle","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","affineCoefs","maxRow","maxEl","absValue","coef","solveLinearSystem","isBrokenDiagonalRendering","steps","ud","vd","maxSourceExtent","errorThreshold","destinationResolution","sourceMatrix","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","log2","addQuad_","leftBound","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","isNotFinite","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","sourceTileGrid","targetTileGrid","wrappedTileCoord","getTileFunction","renderEdges_","gutter_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","clipExtent_","getTileCoordExtent","maxTargetExtent","limitedTargetExtent","sourceProjExtent","calculateSourceExtentResolution","errorThresholdInPixels","triangulation_","getZForResolution","sourceRange","getTileRangeForExtentAndZ","srcX","srcY","reproject_","getTileSize","leftToLoad","sourceListenKey","unlistenSources_","highWaterMark","count_","entries_","oldest_","newest_","deleteOldest","entry","expireCache","containsKey","value_","key_","newer","older","getValues","peekLast","peekLastKey","peekFirstKey","getKeyZXY","sourceKey","addTileToLookup","tilesByZ","existing","removeTileFromLookup","delete","getRenderExtent","gridExtent","getTileGridForProjection","tileLayer","extentChanged","renderComplete","renderedExtent_","renderedPixelRatio","renderedProjection","renderedTiles","renderedSourceKey_","renderedSourceRevision_","tempExtent","tempTileRange_","tempTileCoord_","tileCache_","getTileCache","getOrCreateTile","tileCache","tileSource","getTile","tilePixelRatio","getTilePixelRatio","getTileCoordForCoordAndZ","tileOrigin","getGutterForProjection","sourceRevision","enqueueTilesForNextExtent","enqueueTiles","initialZ","preload","minZ","zDirection","tileCoordIntersectsViewport","tileQueueKey","getTileCoordCenter","findStaleTile_","staleKeys","findAltTiles_","altZ","getTileRangeForTileCoordAndZ","covered","viewResolution","viewCenter","frameExtent","canvasExtent","getPreload","targetZ","renderExtent","uid","tileState","parentZ","canvasScale","getInterpolate","currentClip","clips","clipZs","currentZ","currentTilePixelSize","getTilePixelSize","currentScale","originTileCoord","originTileExtent","tileGutter","xIndex","nextX","yIndex","nextY","contextSaved","drawTile","updateUsedTiles","postRenderFunction","tilesCount","updateCacheSize","tileCount","getTileImage","alphaChanged","IMAGE_REPLAYS","VECTOR_REPLAYS","boundHandleStyleImageChange_","handleStyleImageChange_","renderedLayerRevision_","renderedPixelToCoordinateTransform_","renderedRotation_","renderedOpacity_","tmpTransform_","tileClipContexts_","getRenderMode","updateExecutorGroup_","tileImageNeedsRender_","renderTileImage_","hifi","withinTileResolutionRange","wantedResolution","layerRevision","builderState","getReplayState","dirty","renderedRevision","renderedRenderOrder","getTileGrid","tileExtent","sourceTiles","getSourceTiles","layerUid","hitDetectionImageData","executorGroups","tt","sourceTile","sourceTileCoord","sourceTileExtent","sharedExtent","builderExtent","bufferedExtent","executorGroupInstructions","replayExtent","renderingReplayGroup","getOverlaps","lastIndexOf","foundFeature","tileCoordString","getTileCoordForCoordAndResolution","loadingSourceTiles","tilePixel","accumulator","getFeaturesInExtent","visitedSourceTiles","tileFeatures","getTileRenderTransform","executorGroup","executorGroupZIndexContexts","usedZIndices","executorGroupZindexContext","zIndexContexts","tileClipContext","worldOffset","renderMode","replayTypes","tileClipContexts","clipContext","replayState","renderedTileResolution","renderedTileRevision","renderPixelRatio","renderScale","pixelScale","useInterimTilesOnError","renderMode_","setPreload","setUseInterimTilesOnError","TileProperty","getUseInterimTilesOnError","adaptAttributions","attributionLike","attributionsCollapsible_","attributionsCollapsible","wrapX_","interpolate_","viewResolver","viewRejector","viewPromise_","refresh","setAttributions","tmpTileCoord","strict","currentVal","isSorted","origins","origins_","tileSizes_","tileSizes","tileSize_","fullTileRanges_","tmpSize_","tmpExtent_","sizes","restrictedTileRange","calculateTileRanges_","forEachTileCoord","forEachTileCoordParentTileRange","tempTileRange","tileCoordExtent","getTileCoordChildTileRange","tileCoordZ","tileCoordX","tileCoordY","getTileCoordForXYAndZ_","opt_tileCoord","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","getTileCoordResolution","getFullTileRange","opt_direction","fullTileRanges","getForProjection","extentFromProjection","resolutionsFromExtent","createForExtent","createForProjection","createXYZ","xyzOptions","gridOptions","half","zRegEx","xRegEx","yRegEx","dashYRegEx","createFromTemplate","template","renderXYZTemplate","createFromTemplates","templates","tileUrlFunctions","createFromTileUrlFunctions","TileSourceEvent","tilePixelRatio_","tmpSize","tileOptions","setKey","getTileCoordForTileUrlFunction","gridProjection","withinExtentAndZ","UrlTile","generateTileUrlFunction_","tileUrlFunction","setUrls","setUrl","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","getPrototypeOf","getUrls","TileEventType","setTileLoadFunction","setTileUrlFunction","startCharCode","stopCharCode","charCode","expandUrl","withCredentials","loadFeaturesXhr","failure","xhr","XMLHttpRequest","open","responseType","status","responseText","responseXML","onerror","send","urlTileCoord","removeSourceTiles","replayState_","errorTileKeys","removeSourceTiles_","hasContext","renderedTileZ","defaultLoadFunction","tileKeysBySourceTileUrl_","tileClass","tileGrids_","sourceZ","tileUrl","sourceTileState","listenChange","sourceTileKey","sourceTileUrl","newTile","DEFAULT_MAX_ZOOM","setOverlaps","rendererTransform","maptiler_planet","observables","json","styleJson","buckets","currentSource","spriteUrl","spriteJson","bucket","transferToImageBitmap"],"sourceRoot":""}