{"version":3,"file":"offscreen-canvas.worker.worker.js","mappings":"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IAAI4pC,EAAiB+3D,EAAYD,EAAaI,EAC1Cj4D,EAEJ,OAAQzrC,GACN,IAAK,eACHwrC,EAC8D,EAE1D0U,6BACJwjD,EAAe,GACf,MAAMv1D,EACwD,EAE1DynD,WACJnqD,EAAS,EACT,IAAK,IAAI57B,EAAI,EAAGg4B,EAAKsG,EAAMvsC,OAAQiO,EAAIg4B,IAAMh4B,EAAG,CAC9C,MAAM8zF,EAAS,GACfl4D,EAAS/gC,KAAK24F,uBACZ73D,EACAC,EACA0C,EAAMt+B,GACN67B,EACAi4D,GAEFD,EAAazjF,KAAK0jF,EACpB,CACAj5F,KAAKw3F,aAAajiF,KAAK,CACrB,GAAkBghF,OAClBwC,EACAC,EACApgF,EACA01C,EACAkX,GACA/rD,IAEFzZ,KAAK03F,yBAAyBniF,KAAK,CACjC,GAAkBghF,OAClBwC,EACAC,EACApgF,EACA41C,GAAwBF,EACxBkX,GACA/rD,IAEF,MACF,IAAK,UACL,IAAK,kBACHm/E,EAAc,GACd93D,EACU,WAARxrC,EAC2D,EAErDkgD,6BACF58B,EAASy9B,qBACftV,EAAS/gC,KAAK24F,uBACZ73D,EACA,EACuG,EAErGqV,UACFnV,EACA43D,GAEF54F,KAAKw3F,aAAajiF,KAAK,CACrB,GAAkBghF,OAClBwC,EACAH,EACAhgF,EACA01C,EACAiX,GACA9rD,IAEFzZ,KAAK03F,yBAAyBniF,KAAK,CACjC,GAAkBghF,OAClBwC,EACAH,EACAhgF,EACA41C,GAAwBF,EACxBiX,GACA9rD,IAEF,MACF,IAAK,aACL,IAAK,SACHqnB,EAAkBloB,EAASy9B,qBAC3BwiD,EAAa74F,KAAKk4F,0BAChBp3D,EACA,EACAA,EAAgB5pC,OAChB8pC,GACA,GACA,GAEFhhC,KAAKw3F,aAAajiF,KAAK,CACrB,GAAkBghF,OAClBwC,EACAF,EACAjgF,EACA01C,EACAgX,GACA7rD,IAEFzZ,KAAK03F,yBAAyBniF,KAAK,CACjC,GAAkBghF,OAClBwC,EACAF,EACAjgF,EACA41C,GAAwBF,EACxBgX,GACA7rD,IAEF,MACF,IAAK,aACHqnB,EAA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","sources":["webpack:///../node_modules/@maplibre/maplibre-gl-style-spec/dist/index.mjs","webpack:///../node_modules/mapbox-to-css-font/index.js","webpack:///../src/ol/array.js","webpack:///../src/ol/functions.js","webpack:///../src/ol/extent/Relationship.js","webpack:///../src/ol/extent.js","webpack:///../src/ol/geom/flat/center.js","webpack:///../src/ol/geom/flat/contains.js","webpack:///../src/ol/geom/flat/interiorpoint.js","webpack:///../src/ol/math.js","webpack:///../src/ol/geom/flat/interpolate.js","webpack:///../src/ol/geom/flat/reverse.js","webpack:///../src/ol/geom/flat/orient.js","webpack:///../src/ol/geom/flat/simplify.js","webpack:///../src/ol/geom/flat/transform.js","webpack:///../src/ol/console.js","webpack:///../src/ol/coordinate.js","webpack:///../src/ol/proj/Units.js","webpack:///../src/ol/proj/Projection.js","webpack:///../src/ol/proj/epsg3857.js","webpack:///../src/ol/proj/epsg4326.js","webpack:///../src/ol/proj/projections.js","webpack:///../src/ol/proj/transforms.js","webpack:///../src/ol/proj/utm.js","webpack:///../src/ol/sphere.js","webpack:///../src/ol/proj.js","webpack:///../src/ol/asserts.js","webpack:///../src/ol/transform.js","webpack:///../src/ol/render/Feature.js","webpack:///../src/ol/ImageState.js","webpack:///../src/ol/has.js","webpack:///../src/ol/dom.js","webpack:///../src/ol/color.js","webpack:///../src/ol/events/EventType.js","webpack:///../src/ol/Disposable.js","webpack:///../src/ol/obj.js","webpack:///../src/ol/events/Event.js","webpack:///../src/ol/events/Target.js","webpack:///../src/ol/events.js","webpack:///../src/ol/Image.js","webpack:///../src/ol/style/IconImageCache.js","webpack:///../src/ol/style/IconImage.js","webpack:///../src/ol/colorlike.js","webpack:///../src/ol/ObjectEventType.js","webpack:///../src/ol/Observable.js","webpack:///../src/ol/util.js","webpack:///../src/ol/Object.js","webpack:///../src/ol/css.js","webpack:///../src/ol/render/canvas.js","webpack:///../src/ol/size.js","webpack:///../src/ol/style/Image.js","webpack:///../src/ol/style/RegularShape.js","webpack:///../src/ol/style/Circle.js","webpack:///../src/ol/style/Fill.js","webpack:///../src/ol/style/Icon.js","webpack:///../src/ol/style/Stroke.js","webpack:///../src/ol/style/Style.js","webpack:///../src/ol/style/Text.js","webpack:///../src/ol/TileState.js","webpack:///../src/ol/easing.js","webpack:///../src/ol/Tile.js","webpack:///../src/ol/VectorTile.js","webpack:///../node_modules/ol-mapbox-style/src/util.js","webpack:///../node_modules/ol-mapbox-style/src/text.js","webpack:///../node_modules/ol-mapbox-style/src/stylefunction.js","webpack:///../src/ol/structs/PriorityQueue.js","webpack:///../src/ol/TileQueue.js","webpack:///../src/ol/ViewHint.js","webpack:///../src/ol/ViewProperty.js","webpack:///../src/ol/centerconstraint.js","webpack:///../src/ol/geom/Geometry.js","webpack:///../src/ol/geom/SimpleGeometry.js","webpack:///../src/ol/geom/flat/area.js","webpack:///../src/ol/geom/flat/closest.js","webpack:///../src/ol/geom/flat/deflate.js","webpack:///../src/ol/geom/flat/inflate.js","webpack:///../src/ol/geom/LinearRing.js","webpack:///../src/ol/geom/Point.js","webpack:///../src/ol/geom/flat/segments.js","webpack:///../src/ol/geom/flat/intersectsextent.js","webpack:///../src/ol/geom/Polygon.js","webpack:///../src/ol/resolutionconstraint.js","webpack:///../src/ol/rotationconstraint.js","webpack:///../src/ol/tilegrid/common.js","webpack:///../src/ol/View.js","webpack:///../src/ol/layer/Property.js","webpack:///../src/ol/layer/Base.js","webpack:///../src/ol/layer/Group.js","webpack:///../src/ol/render/EventType.js","webpack:///../src/ol/layer/Layer.js","webpack:///../node_modules/quickselect/index.js","webpack:///../node_modules/rbush/index.js","webpack:///../src/ol/expr/expression.js","webpack:///../src/ol/expr/cpu.js","webpack:///../src/ol/render/canvas/style.js","webpack:///../src/ol/layer/BaseVector.js","webpack:///../src/ol/render/Event.js","webpack:///../src/ol/Feature.js","webpack:///../src/ol/geom/flat/length.js","webpack:///../src/ol/geom/LineString.js","webpack:///../src/ol/geom/MultiPoint.js","webpack:///../src/ol/geom/MultiLineString.js","webpack:///../src/ol/geom/MultiPolygon.js","webpack:///../src/ol/format/Feature.js","webpack:///../node_modules/pbf/index.js","webpack:///../src/ol/format/MVT.js","webpack:///../src/ol/render/VectorContext.js","webpack:///../src/ol/render/canvas/Instruction.js","webpack:///../src/ol/render/canvas/Builder.js","webpack:///../src/ol/render/canvas/ImageBuilder.js","webpack:///../src/ol/render/canvas/LineStringBuilder.js","webpack:///../src/ol/render/canvas/PolygonBuilder.js","webpack:///../src/ol/geom/flat/linechunk.js","webpack:///../src/ol/geom/flat/straightchunk.js","webpack:///../src/ol/render/canvas/TextBuilder.js","webpack:///../src/ol/render/canvas/BuilderGroup.js","webpack:///../src/ol/geom/flat/textpath.js","webpack:///../src/ol/render/canvas/ZIndexContext.js","webpack:///../src/ol/render/canvas/Executor.js","webpack:///../src/ol/render/canvas/ExecutorGroup.js","webpack:///../src/ol/render/canvas/Immediate.js","webpack:///../src/ol/render/canvas/hitdetect.js","webpack:///../src/ol/renderer/vector.js","webpack:///../src/ol/renderer/Layer.js","webpack:///../src/ol/renderer/canvas/Layer.js","webpack:///../src/ol/DataTile.js","webpack:///../src/ol/ImageTile.js","webpack:///../src/ol/TileRange.js","webpack:///../src/ol/reproj.js","webpack:///../src/ol/reproj/Triangulation.js","webpack:///../src/ol/reproj/Tile.js","webpack:///../src/ol/reproj/common.js","webpack:///../src/ol/structs/LRUCache.js","webpack:///../src/ol/tilecoord.js","webpack:///../src/ol/renderer/canvas/TileLayer.js","webpack:///../src/ol/renderer/canvas/VectorTileLayer.js","webpack:///../src/ol/layer/TileProperty.js","webpack:///../src/ol/layer/VectorTile.js","webpack:///../src/ol/source/Source.js","webpack:///../src/ol/net.js","webpack:///../src/ol/tilegrid/TileGrid.js","webpack:///../src/ol/tilegrid.js","webpack:///../src/ol/uri.js","webpack:///../src/ol/tileurlfunction.js","webpack:///../src/ol/source/Tile.js","webpack:///../src/ol/source/TileEventType.js","webpack:///../src/ol/source/UrlTile.js","webpack:///../src/ol/featureloader.js","webpack:///../src/ol/VectorRenderTile.js","webpack:///../src/ol/source/VectorTile.js","webpack:///./offscreen-canvas.worker.js"],"sourcesContent":["var $version = 8;\nvar $root = {\n\tversion: {\n\t\trequired: true,\n\t\ttype: \"enum\",\n\t\tvalues: [\n\t\t\t8\n\t\t]\n\t},\n\tname: {\n\t\ttype: \"string\"\n\t},\n\tmetadata: {\n\t\ttype: \"*\"\n\t},\n\tcenter: {\n\t\ttype: \"array\",\n\t\tvalue: \"number\"\n\t},\n\tcenterAltitude: {\n\t\ttype: \"number\"\n\t},\n\tzoom: {\n\t\ttype: \"number\"\n\t},\n\tbearing: {\n\t\ttype: \"number\",\n\t\t\"default\": 0,\n\t\tperiod: 360,\n\t\tunits: \"degrees\"\n\t},\n\tpitch: {\n\t\ttype: \"number\",\n\t\t\"default\": 0,\n\t\tunits: \"degrees\"\n\t},\n\troll: {\n\t\ttype: \"number\",\n\t\t\"default\": 0,\n\t\tunits: \"degrees\"\n\t},\n\tlight: {\n\t\ttype: \"light\"\n\t},\n\tsky: {\n\t\ttype: \"sky\"\n\t},\n\tprojection: {\n\t\ttype: \"projection\"\n\t},\n\tterrain: {\n\t\ttype: \"terrain\"\n\t},\n\tsources: {\n\t\trequired: true,\n\t\ttype: \"sources\"\n\t},\n\tsprite: {\n\t\ttype: \"sprite\"\n\t},\n\tglyphs: {\n\t\ttype: \"string\"\n\t},\n\ttransition: {\n\t\ttype: \"transition\"\n\t},\n\tlayers: {\n\t\trequired: true,\n\t\ttype: \"array\",\n\t\tvalue: \"layer\"\n\t}\n};\nvar sources = {\n\t\"*\": {\n\t\ttype: \"source\"\n\t}\n};\nvar source = [\n\t\"source_vector\",\n\t\"source_raster\",\n\t\"source_raster_dem\",\n\t\"source_geojson\",\n\t\"source_video\",\n\t\"source_image\"\n];\nvar source_vector = {\n\ttype: {\n\t\trequired: true,\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tvector: {\n\t\t\t}\n\t\t}\n\t},\n\turl: {\n\t\ttype: \"string\"\n\t},\n\ttiles: {\n\t\ttype: \"array\",\n\t\tvalue: \"string\"\n\t},\n\tbounds: {\n\t\ttype: \"array\",\n\t\tvalue: \"number\",\n\t\tlength: 4,\n\t\t\"default\": [\n\t\t\t-180,\n\t\t\t-85.051129,\n\t\t\t180,\n\t\t\t85.051129\n\t\t]\n\t},\n\tscheme: {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\txyz: {\n\t\t\t},\n\t\t\ttms: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"xyz\"\n\t},\n\tminzoom: {\n\t\ttype: \"number\",\n\t\t\"default\": 0\n\t},\n\tmaxzoom: {\n\t\ttype: \"number\",\n\t\t\"default\": 22\n\t},\n\tattribution: {\n\t\ttype: \"string\"\n\t},\n\tpromoteId: {\n\t\ttype: \"promoteId\"\n\t},\n\tvolatile: {\n\t\ttype: \"boolean\",\n\t\t\"default\": false\n\t},\n\t\"*\": {\n\t\ttype: \"*\"\n\t}\n};\nvar source_raster = {\n\ttype: {\n\t\trequired: true,\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\traster: {\n\t\t\t}\n\t\t}\n\t},\n\turl: {\n\t\ttype: \"string\"\n\t},\n\ttiles: {\n\t\ttype: \"array\",\n\t\tvalue: \"string\"\n\t},\n\tbounds: {\n\t\ttype: \"array\",\n\t\tvalue: \"number\",\n\t\tlength: 4,\n\t\t\"default\": [\n\t\t\t-180,\n\t\t\t-85.051129,\n\t\t\t180,\n\t\t\t85.051129\n\t\t]\n\t},\n\tminzoom: {\n\t\ttype: \"number\",\n\t\t\"default\": 0\n\t},\n\tmaxzoom: {\n\t\ttype: \"number\",\n\t\t\"default\": 22\n\t},\n\ttileSize: {\n\t\ttype: \"number\",\n\t\t\"default\": 512,\n\t\tunits: \"pixels\"\n\t},\n\tscheme: {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\txyz: {\n\t\t\t},\n\t\t\ttms: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"xyz\"\n\t},\n\tattribution: {\n\t\ttype: \"string\"\n\t},\n\tvolatile: {\n\t\ttype: \"boolean\",\n\t\t\"default\": false\n\t},\n\t\"*\": {\n\t\ttype: \"*\"\n\t}\n};\nvar source_raster_dem = {\n\ttype: {\n\t\trequired: true,\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\t\"raster-dem\": {\n\t\t\t}\n\t\t}\n\t},\n\turl: {\n\t\ttype: \"string\"\n\t},\n\ttiles: {\n\t\ttype: \"array\",\n\t\tvalue: \"string\"\n\t},\n\tbounds: {\n\t\ttype: \"array\",\n\t\tvalue: \"number\",\n\t\tlength: 4,\n\t\t\"default\": [\n\t\t\t-180,\n\t\t\t-85.051129,\n\t\t\t180,\n\t\t\t85.051129\n\t\t]\n\t},\n\tminzoom: {\n\t\ttype: \"number\",\n\t\t\"default\": 0\n\t},\n\tmaxzoom: {\n\t\ttype: \"number\",\n\t\t\"default\": 22\n\t},\n\ttileSize: {\n\t\ttype: \"number\",\n\t\t\"default\": 512,\n\t\tunits: \"pixels\"\n\t},\n\tattribution: {\n\t\ttype: \"string\"\n\t},\n\tencoding: {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tterrarium: {\n\t\t\t},\n\t\t\tmapbox: {\n\t\t\t},\n\t\t\tcustom: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"mapbox\"\n\t},\n\tredFactor: {\n\t\ttype: \"number\",\n\t\t\"default\": 1\n\t},\n\tblueFactor: {\n\t\ttype: \"number\",\n\t\t\"default\": 1\n\t},\n\tgreenFactor: {\n\t\ttype: \"number\",\n\t\t\"default\": 1\n\t},\n\tbaseShift: {\n\t\ttype: \"number\",\n\t\t\"default\": 0\n\t},\n\tvolatile: {\n\t\ttype: \"boolean\",\n\t\t\"default\": false\n\t},\n\t\"*\": {\n\t\ttype: \"*\"\n\t}\n};\nvar source_geojson = {\n\ttype: {\n\t\trequired: true,\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tgeojson: {\n\t\t\t}\n\t\t}\n\t},\n\tdata: {\n\t\trequired: true,\n\t\ttype: \"*\"\n\t},\n\tmaxzoom: {\n\t\ttype: \"number\",\n\t\t\"default\": 18\n\t},\n\tattribution: {\n\t\ttype: \"string\"\n\t},\n\tbuffer: {\n\t\ttype: \"number\",\n\t\t\"default\": 128,\n\t\tmaximum: 512,\n\t\tminimum: 0\n\t},\n\tfilter: {\n\t\ttype: \"*\"\n\t},\n\ttolerance: {\n\t\ttype: \"number\",\n\t\t\"default\": 0.375\n\t},\n\tcluster: {\n\t\ttype: \"boolean\",\n\t\t\"default\": false\n\t},\n\tclusterRadius: {\n\t\ttype: \"number\",\n\t\t\"default\": 50,\n\t\tminimum: 0\n\t},\n\tclusterMaxZoom: {\n\t\ttype: \"number\"\n\t},\n\tclusterMinPoints: {\n\t\ttype: \"number\"\n\t},\n\tclusterProperties: {\n\t\ttype: \"*\"\n\t},\n\tlineMetrics: {\n\t\ttype: \"boolean\",\n\t\t\"default\": false\n\t},\n\tgenerateId: {\n\t\ttype: \"boolean\",\n\t\t\"default\": false\n\t},\n\tpromoteId: {\n\t\ttype: \"promoteId\"\n\t}\n};\nvar source_video = {\n\ttype: {\n\t\trequired: true,\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tvideo: {\n\t\t\t}\n\t\t}\n\t},\n\turls: {\n\t\trequired: true,\n\t\ttype: \"array\",\n\t\tvalue: \"string\"\n\t},\n\tcoordinates: {\n\t\trequired: true,\n\t\ttype: \"array\",\n\t\tlength: 4,\n\t\tvalue: {\n\t\t\ttype: \"array\",\n\t\t\tlength: 2,\n\t\t\tvalue: \"number\"\n\t\t}\n\t}\n};\nvar source_image = {\n\ttype: {\n\t\trequired: true,\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\timage: {\n\t\t\t}\n\t\t}\n\t},\n\turl: {\n\t\trequired: true,\n\t\ttype: \"string\"\n\t},\n\tcoordinates: {\n\t\trequired: true,\n\t\ttype: \"array\",\n\t\tlength: 4,\n\t\tvalue: {\n\t\t\ttype: \"array\",\n\t\t\tlength: 2,\n\t\t\tvalue: \"number\"\n\t\t}\n\t}\n};\nvar layer = {\n\tid: {\n\t\ttype: \"string\",\n\t\trequired: true\n\t},\n\ttype: {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tfill: {\n\t\t\t},\n\t\t\tline: {\n\t\t\t},\n\t\t\tsymbol: {\n\t\t\t},\n\t\t\tcircle: {\n\t\t\t},\n\t\t\theatmap: {\n\t\t\t},\n\t\t\t\"fill-extrusion\": {\n\t\t\t},\n\t\t\traster: {\n\t\t\t},\n\t\t\thillshade: {\n\t\t\t},\n\t\t\tbackground: {\n\t\t\t}\n\t\t},\n\t\trequired: true\n\t},\n\tmetadata: {\n\t\ttype: \"*\"\n\t},\n\tsource: {\n\t\ttype: \"string\"\n\t},\n\t\"source-layer\": {\n\t\ttype: \"string\"\n\t},\n\tminzoom: {\n\t\ttype: \"number\",\n\t\tminimum: 0,\n\t\tmaximum: 24\n\t},\n\tmaxzoom: {\n\t\ttype: \"number\",\n\t\tminimum: 0,\n\t\tmaximum: 24\n\t},\n\tfilter: {\n\t\ttype: \"filter\"\n\t},\n\tlayout: {\n\t\ttype: \"layout\"\n\t},\n\tpaint: {\n\t\ttype: \"paint\"\n\t}\n};\nvar layout = [\n\t\"layout_fill\",\n\t\"layout_line\",\n\t\"layout_circle\",\n\t\"layout_heatmap\",\n\t\"layout_fill-extrusion\",\n\t\"layout_symbol\",\n\t\"layout_raster\",\n\t\"layout_hillshade\",\n\t\"layout_background\"\n];\nvar layout_background = {\n\tvisibility: {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tvisible: {\n\t\t\t},\n\t\t\tnone: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"visible\",\n\t\t\"property-type\": \"constant\"\n\t}\n};\nvar layout_fill = {\n\t\"fill-sort-key\": {\n\t\ttype: \"number\",\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\tvisibility: {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tvisible: {\n\t\t\t},\n\t\t\tnone: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"visible\",\n\t\t\"property-type\": \"constant\"\n\t}\n};\nvar layout_circle = {\n\t\"circle-sort-key\": {\n\t\ttype: \"number\",\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\tvisibility: {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tvisible: {\n\t\t\t},\n\t\t\tnone: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"visible\",\n\t\t\"property-type\": \"constant\"\n\t}\n};\nvar layout_heatmap = {\n\tvisibility: {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tvisible: {\n\t\t\t},\n\t\t\tnone: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"visible\",\n\t\t\"property-type\": \"constant\"\n\t}\n};\nvar layout_line = {\n\t\"line-cap\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tbutt: {\n\t\t\t},\n\t\t\tround: {\n\t\t\t},\n\t\t\tsquare: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"butt\",\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"line-join\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tbevel: {\n\t\t\t},\n\t\t\tround: {\n\t\t\t},\n\t\t\tmiter: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"miter\",\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"line-miter-limit\": {\n\t\ttype: \"number\",\n\t\t\"default\": 2,\n\t\trequires: [\n\t\t\t{\n\t\t\t\t\"line-join\": \"miter\"\n\t\t\t}\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"line-round-limit\": {\n\t\ttype: \"number\",\n\t\t\"default\": 1.05,\n\t\trequires: [\n\t\t\t{\n\t\t\t\t\"line-join\": \"round\"\n\t\t\t}\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"line-sort-key\": {\n\t\ttype: \"number\",\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\tvisibility: {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tvisible: {\n\t\t\t},\n\t\t\tnone: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"visible\",\n\t\t\"property-type\": \"constant\"\n\t}\n};\nvar layout_symbol = {\n\t\"symbol-placement\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tpoint: {\n\t\t\t},\n\t\t\tline: {\n\t\t\t},\n\t\t\t\"line-center\": {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"point\",\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"symbol-spacing\": {\n\t\ttype: \"number\",\n\t\t\"default\": 250,\n\t\tminimum: 1,\n\t\tunits: \"pixels\",\n\t\trequires: [\n\t\t\t{\n\t\t\t\t\"symbol-placement\": \"line\"\n\t\t\t}\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"symbol-avoid-edges\": {\n\t\ttype: \"boolean\",\n\t\t\"default\": false,\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"symbol-sort-key\": {\n\t\ttype: \"number\",\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"symbol-z-order\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tauto: {\n\t\t\t},\n\t\t\t\"viewport-y\": {\n\t\t\t},\n\t\t\tsource: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"auto\",\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"icon-allow-overlap\": {\n\t\ttype: \"boolean\",\n\t\t\"default\": false,\n\t\trequires: [\n\t\t\t\"icon-image\",\n\t\t\t{\n\t\t\t\t\"!\": \"icon-overlap\"\n\t\t\t}\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"icon-overlap\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tnever: {\n\t\t\t},\n\t\t\talways: {\n\t\t\t},\n\t\t\tcooperative: {\n\t\t\t}\n\t\t},\n\t\trequires: [\n\t\t\t\"icon-image\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"icon-ignore-placement\": {\n\t\ttype: \"boolean\",\n\t\t\"default\": false,\n\t\trequires: [\n\t\t\t\"icon-image\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"icon-optional\": {\n\t\ttype: \"boolean\",\n\t\t\"default\": false,\n\t\trequires: [\n\t\t\t\"icon-image\",\n\t\t\t\"text-field\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"icon-rotation-alignment\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tmap: {\n\t\t\t},\n\t\t\tviewport: {\n\t\t\t},\n\t\t\tauto: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"auto\",\n\t\trequires: [\n\t\t\t\"icon-image\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"icon-size\": {\n\t\ttype: \"number\",\n\t\t\"default\": 1,\n\t\tminimum: 0,\n\t\tunits: \"factor of the original icon size\",\n\t\trequires: [\n\t\t\t\"icon-image\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"icon-text-fit\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tnone: {\n\t\t\t},\n\t\t\twidth: {\n\t\t\t},\n\t\t\theight: {\n\t\t\t},\n\t\t\tboth: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"none\",\n\t\trequires: [\n\t\t\t\"icon-image\",\n\t\t\t\"text-field\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"icon-text-fit-padding\": {\n\t\ttype: \"array\",\n\t\tvalue: \"number\",\n\t\tlength: 4,\n\t\t\"default\": [\n\t\t\t0,\n\t\t\t0,\n\t\t\t0,\n\t\t\t0\n\t\t],\n\t\tunits: \"pixels\",\n\t\trequires: [\n\t\t\t\"icon-image\",\n\t\t\t\"text-field\",\n\t\t\t{\n\t\t\t\t\"icon-text-fit\": [\n\t\t\t\t\t\"both\",\n\t\t\t\t\t\"width\",\n\t\t\t\t\t\"height\"\n\t\t\t\t]\n\t\t\t}\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"icon-image\": {\n\t\ttype: \"resolvedImage\",\n\t\ttokens: true,\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"icon-rotate\": {\n\t\ttype: \"number\",\n\t\t\"default\": 0,\n\t\tperiod: 360,\n\t\tunits: \"degrees\",\n\t\trequires: [\n\t\t\t\"icon-image\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"icon-padding\": {\n\t\ttype: \"padding\",\n\t\t\"default\": [\n\t\t\t2\n\t\t],\n\t\tunits: \"pixels\",\n\t\trequires: [\n\t\t\t\"icon-image\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"icon-keep-upright\": {\n\t\ttype: \"boolean\",\n\t\t\"default\": false,\n\t\trequires: [\n\t\t\t\"icon-image\",\n\t\t\t{\n\t\t\t\t\"icon-rotation-alignment\": \"map\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"symbol-placement\": [\n\t\t\t\t\t\"line\",\n\t\t\t\t\t\"line-center\"\n\t\t\t\t]\n\t\t\t}\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"icon-offset\": {\n\t\ttype: \"array\",\n\t\tvalue: \"number\",\n\t\tlength: 2,\n\t\t\"default\": [\n\t\t\t0,\n\t\t\t0\n\t\t],\n\t\trequires: [\n\t\t\t\"icon-image\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"icon-anchor\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tcenter: {\n\t\t\t},\n\t\t\tleft: {\n\t\t\t},\n\t\t\tright: {\n\t\t\t},\n\t\t\ttop: {\n\t\t\t},\n\t\t\tbottom: {\n\t\t\t},\n\t\t\t\"top-left\": {\n\t\t\t},\n\t\t\t\"top-right\": {\n\t\t\t},\n\t\t\t\"bottom-left\": {\n\t\t\t},\n\t\t\t\"bottom-right\": {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"center\",\n\t\trequires: [\n\t\t\t\"icon-image\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"icon-pitch-alignment\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tmap: {\n\t\t\t},\n\t\t\tviewport: {\n\t\t\t},\n\t\t\tauto: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"auto\",\n\t\trequires: [\n\t\t\t\"icon-image\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"text-pitch-alignment\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tmap: {\n\t\t\t},\n\t\t\tviewport: {\n\t\t\t},\n\t\t\tauto: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"auto\",\n\t\trequires: [\n\t\t\t\"text-field\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"text-rotation-alignment\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tmap: {\n\t\t\t},\n\t\t\tviewport: {\n\t\t\t},\n\t\t\t\"viewport-glyph\": {\n\t\t\t},\n\t\t\tauto: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"auto\",\n\t\trequires: [\n\t\t\t\"text-field\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"text-field\": {\n\t\ttype: \"formatted\",\n\t\t\"default\": \"\",\n\t\ttokens: true,\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"text-font\": {\n\t\ttype: \"array\",\n\t\tvalue: \"string\",\n\t\t\"default\": [\n\t\t\t\"Open Sans Regular\",\n\t\t\t\"Arial Unicode MS Regular\"\n\t\t],\n\t\trequires: [\n\t\t\t\"text-field\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"text-size\": {\n\t\ttype: \"number\",\n\t\t\"default\": 16,\n\t\tminimum: 0,\n\t\tunits: \"pixels\",\n\t\trequires: [\n\t\t\t\"text-field\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"text-max-width\": {\n\t\ttype: \"number\",\n\t\t\"default\": 10,\n\t\tminimum: 0,\n\t\tunits: \"ems\",\n\t\trequires: [\n\t\t\t\"text-field\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"text-line-height\": {\n\t\ttype: \"number\",\n\t\t\"default\": 1.2,\n\t\tunits: \"ems\",\n\t\trequires: [\n\t\t\t\"text-field\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"text-letter-spacing\": {\n\t\ttype: \"number\",\n\t\t\"default\": 0,\n\t\tunits: \"ems\",\n\t\trequires: [\n\t\t\t\"text-field\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"text-justify\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tauto: {\n\t\t\t},\n\t\t\tleft: {\n\t\t\t},\n\t\t\tcenter: {\n\t\t\t},\n\t\t\tright: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"center\",\n\t\trequires: [\n\t\t\t\"text-field\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"text-radial-offset\": {\n\t\ttype: \"number\",\n\t\tunits: \"ems\",\n\t\t\"default\": 0,\n\t\trequires: [\n\t\t\t\"text-field\"\n\t\t],\n\t\t\"property-type\": \"data-driven\",\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t}\n\t},\n\t\"text-variable-anchor\": {\n\t\ttype: \"array\",\n\t\tvalue: \"enum\",\n\t\tvalues: {\n\t\t\tcenter: {\n\t\t\t},\n\t\t\tleft: {\n\t\t\t},\n\t\t\tright: {\n\t\t\t},\n\t\t\ttop: {\n\t\t\t},\n\t\t\tbottom: {\n\t\t\t},\n\t\t\t\"top-left\": {\n\t\t\t},\n\t\t\t\"top-right\": {\n\t\t\t},\n\t\t\t\"bottom-left\": {\n\t\t\t},\n\t\t\t\"bottom-right\": {\n\t\t\t}\n\t\t},\n\t\trequires: [\n\t\t\t\"text-field\",\n\t\t\t{\n\t\t\t\t\"symbol-placement\": [\n\t\t\t\t\t\"point\"\n\t\t\t\t]\n\t\t\t}\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"text-variable-anchor-offset\": {\n\t\ttype: \"variableAnchorOffsetCollection\",\n\t\trequires: [\n\t\t\t\"text-field\",\n\t\t\t{\n\t\t\t\t\"symbol-placement\": [\n\t\t\t\t\t\"point\"\n\t\t\t\t]\n\t\t\t}\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"text-anchor\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tcenter: {\n\t\t\t},\n\t\t\tleft: {\n\t\t\t},\n\t\t\tright: {\n\t\t\t},\n\t\t\ttop: {\n\t\t\t},\n\t\t\tbottom: {\n\t\t\t},\n\t\t\t\"top-left\": {\n\t\t\t},\n\t\t\t\"top-right\": {\n\t\t\t},\n\t\t\t\"bottom-left\": {\n\t\t\t},\n\t\t\t\"bottom-right\": {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"center\",\n\t\trequires: [\n\t\t\t\"text-field\",\n\t\t\t{\n\t\t\t\t\"!\": \"text-variable-anchor\"\n\t\t\t}\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"text-max-angle\": {\n\t\ttype: \"number\",\n\t\t\"default\": 45,\n\t\tunits: \"degrees\",\n\t\trequires: [\n\t\t\t\"text-field\",\n\t\t\t{\n\t\t\t\t\"symbol-placement\": [\n\t\t\t\t\t\"line\",\n\t\t\t\t\t\"line-center\"\n\t\t\t\t]\n\t\t\t}\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"text-writing-mode\": {\n\t\ttype: \"array\",\n\t\tvalue: \"enum\",\n\t\tvalues: {\n\t\t\thorizontal: {\n\t\t\t},\n\t\t\tvertical: {\n\t\t\t}\n\t\t},\n\t\trequires: [\n\t\t\t\"text-field\",\n\t\t\t{\n\t\t\t\t\"symbol-placement\": [\n\t\t\t\t\t\"point\"\n\t\t\t\t]\n\t\t\t}\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"text-rotate\": {\n\t\ttype: \"number\",\n\t\t\"default\": 0,\n\t\tperiod: 360,\n\t\tunits: \"degrees\",\n\t\trequires: [\n\t\t\t\"text-field\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"text-padding\": {\n\t\ttype: \"number\",\n\t\t\"default\": 2,\n\t\tminimum: 0,\n\t\tunits: \"pixels\",\n\t\trequires: [\n\t\t\t\"text-field\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"text-keep-upright\": {\n\t\ttype: \"boolean\",\n\t\t\"default\": true,\n\t\trequires: [\n\t\t\t\"text-field\",\n\t\t\t{\n\t\t\t\t\"text-rotation-alignment\": \"map\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"symbol-placement\": [\n\t\t\t\t\t\"line\",\n\t\t\t\t\t\"line-center\"\n\t\t\t\t]\n\t\t\t}\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"text-transform\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tnone: {\n\t\t\t},\n\t\t\tuppercase: {\n\t\t\t},\n\t\t\tlowercase: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"none\",\n\t\trequires: [\n\t\t\t\"text-field\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"text-offset\": {\n\t\ttype: \"array\",\n\t\tvalue: \"number\",\n\t\tunits: \"ems\",\n\t\tlength: 2,\n\t\t\"default\": [\n\t\t\t0,\n\t\t\t0\n\t\t],\n\t\trequires: [\n\t\t\t\"text-field\",\n\t\t\t{\n\t\t\t\t\"!\": \"text-radial-offset\"\n\t\t\t}\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"text-allow-overlap\": {\n\t\ttype: \"boolean\",\n\t\t\"default\": false,\n\t\trequires: [\n\t\t\t\"text-field\",\n\t\t\t{\n\t\t\t\t\"!\": \"text-overlap\"\n\t\t\t}\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"text-overlap\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tnever: {\n\t\t\t},\n\t\t\talways: {\n\t\t\t},\n\t\t\tcooperative: {\n\t\t\t}\n\t\t},\n\t\trequires: [\n\t\t\t\"text-field\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"text-ignore-placement\": {\n\t\ttype: \"boolean\",\n\t\t\"default\": false,\n\t\trequires: [\n\t\t\t\"text-field\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"text-optional\": {\n\t\ttype: \"boolean\",\n\t\t\"default\": false,\n\t\trequires: [\n\t\t\t\"text-field\",\n\t\t\t\"icon-image\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\tvisibility: {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tvisible: {\n\t\t\t},\n\t\t\tnone: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"visible\",\n\t\t\"property-type\": \"constant\"\n\t}\n};\nvar layout_raster = {\n\tvisibility: {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tvisible: {\n\t\t\t},\n\t\t\tnone: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"visible\",\n\t\t\"property-type\": \"constant\"\n\t}\n};\nvar layout_hillshade = {\n\tvisibility: {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tvisible: {\n\t\t\t},\n\t\t\tnone: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"visible\",\n\t\t\"property-type\": \"constant\"\n\t}\n};\nvar filter = {\n\ttype: \"array\",\n\tvalue: \"*\"\n};\nvar filter_operator = {\n\ttype: \"enum\",\n\tvalues: {\n\t\t\"==\": {\n\t\t},\n\t\t\"!=\": {\n\t\t},\n\t\t\">\": {\n\t\t},\n\t\t\">=\": {\n\t\t},\n\t\t\"<\": {\n\t\t},\n\t\t\"<=\": {\n\t\t},\n\t\t\"in\": {\n\t\t},\n\t\t\"!in\": {\n\t\t},\n\t\tall: {\n\t\t},\n\t\tany: {\n\t\t},\n\t\tnone: {\n\t\t},\n\t\thas: {\n\t\t},\n\t\t\"!has\": {\n\t\t}\n\t}\n};\nvar geometry_type = {\n\ttype: \"enum\",\n\tvalues: {\n\t\tPoint: {\n\t\t},\n\t\tLineString: {\n\t\t},\n\t\tPolygon: {\n\t\t}\n\t}\n};\nvar function_stop = {\n\ttype: \"array\",\n\tminimum: 0,\n\tmaximum: 24,\n\tvalue: [\n\t\t\"number\",\n\t\t\"color\"\n\t],\n\tlength: 2\n};\nvar expression$1 = {\n\ttype: \"array\",\n\tvalue: \"*\",\n\tminimum: 1\n};\nvar light = {\n\tanchor: {\n\t\ttype: \"enum\",\n\t\t\"default\": \"viewport\",\n\t\tvalues: {\n\t\t\tmap: {\n\t\t\t},\n\t\t\tviewport: {\n\t\t\t}\n\t\t},\n\t\t\"property-type\": \"data-constant\",\n\t\ttransition: false,\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t}\n\t},\n\tposition: {\n\t\ttype: \"array\",\n\t\t\"default\": [\n\t\t\t1.15,\n\t\t\t210,\n\t\t\t30\n\t\t],\n\t\tlength: 3,\n\t\tvalue: \"number\",\n\t\t\"property-type\": \"data-constant\",\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t}\n\t},\n\tcolor: {\n\t\ttype: \"color\",\n\t\t\"property-type\": \"data-constant\",\n\t\t\"default\": \"#ffffff\",\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\ttransition: true\n\t},\n\tintensity: {\n\t\ttype: \"number\",\n\t\t\"property-type\": \"data-constant\",\n\t\t\"default\": 0.5,\n\t\tminimum: 0,\n\t\tmaximum: 1,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\ttransition: true\n\t}\n};\nvar sky = {\n\t\"sky-color\": {\n\t\ttype: \"color\",\n\t\t\"property-type\": \"data-constant\",\n\t\t\"default\": \"#88C6FC\",\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\ttransition: true\n\t},\n\t\"horizon-color\": {\n\t\ttype: \"color\",\n\t\t\"property-type\": \"data-constant\",\n\t\t\"default\": \"#ffffff\",\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\ttransition: true\n\t},\n\t\"fog-color\": {\n\t\ttype: \"color\",\n\t\t\"property-type\": \"data-constant\",\n\t\t\"default\": \"#ffffff\",\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\ttransition: true\n\t},\n\t\"fog-ground-blend\": {\n\t\ttype: \"number\",\n\t\t\"property-type\": \"data-constant\",\n\t\t\"default\": 0.5,\n\t\tminimum: 0,\n\t\tmaximum: 1,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\ttransition: true\n\t},\n\t\"horizon-fog-blend\": {\n\t\ttype: \"number\",\n\t\t\"property-type\": \"data-constant\",\n\t\t\"default\": 0.8,\n\t\tminimum: 0,\n\t\tmaximum: 1,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\ttransition: true\n\t},\n\t\"sky-horizon-blend\": {\n\t\ttype: \"number\",\n\t\t\"property-type\": \"data-constant\",\n\t\t\"default\": 0.8,\n\t\tminimum: 0,\n\t\tmaximum: 1,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\ttransition: true\n\t},\n\t\"atmosphere-blend\": {\n\t\ttype: \"number\",\n\t\t\"property-type\": \"data-constant\",\n\t\t\"default\": 0.8,\n\t\tminimum: 0,\n\t\tmaximum: 1,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\ttransition: true\n\t}\n};\nvar terrain = {\n\tsource: {\n\t\ttype: \"string\",\n\t\trequired: true\n\t},\n\texaggeration: {\n\t\ttype: \"number\",\n\t\tminimum: 0,\n\t\t\"default\": 1\n\t}\n};\nvar projection = {\n\ttype: {\n\t\ttype: \"projectionDefinition\",\n\t\t\"default\": \"mercator\",\n\t\t\"property-type\": \"data-constant\",\n\t\ttransition: false,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t}\n\t}\n};\nvar paint = [\n\t\"paint_fill\",\n\t\"paint_line\",\n\t\"paint_circle\",\n\t\"paint_heatmap\",\n\t\"paint_fill-extrusion\",\n\t\"paint_symbol\",\n\t\"paint_raster\",\n\t\"paint_hillshade\",\n\t\"paint_background\"\n];\nvar paint_fill = {\n\t\"fill-antialias\": {\n\t\ttype: \"boolean\",\n\t\t\"default\": true,\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"fill-opacity\": {\n\t\ttype: \"number\",\n\t\t\"default\": 1,\n\t\tminimum: 0,\n\t\tmaximum: 1,\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"fill-color\": {\n\t\ttype: \"color\",\n\t\t\"default\": \"#000000\",\n\t\ttransition: true,\n\t\trequires: [\n\t\t\t{\n\t\t\t\t\"!\": \"fill-pattern\"\n\t\t\t}\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"fill-outline-color\": {\n\t\ttype: \"color\",\n\t\ttransition: true,\n\t\trequires: [\n\t\t\t{\n\t\t\t\t\"!\": \"fill-pattern\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"fill-antialias\": true\n\t\t\t}\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"fill-translate\": {\n\t\ttype: \"array\",\n\t\tvalue: \"number\",\n\t\tlength: 2,\n\t\t\"default\": [\n\t\t\t0,\n\t\t\t0\n\t\t],\n\t\ttransition: true,\n\t\tunits: \"pixels\",\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"fill-translate-anchor\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tmap: {\n\t\t\t},\n\t\t\tviewport: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"map\",\n\t\trequires: [\n\t\t\t\"fill-translate\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"fill-pattern\": {\n\t\ttype: \"resolvedImage\",\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"cross-faded-data-driven\"\n\t}\n};\nvar paint_line = {\n\t\"line-opacity\": {\n\t\ttype: \"number\",\n\t\t\"default\": 1,\n\t\tminimum: 0,\n\t\tmaximum: 1,\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"line-color\": {\n\t\ttype: \"color\",\n\t\t\"default\": \"#000000\",\n\t\ttransition: true,\n\t\trequires: [\n\t\t\t{\n\t\t\t\t\"!\": \"line-pattern\"\n\t\t\t}\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"line-translate\": {\n\t\ttype: \"array\",\n\t\tvalue: \"number\",\n\t\tlength: 2,\n\t\t\"default\": [\n\t\t\t0,\n\t\t\t0\n\t\t],\n\t\ttransition: true,\n\t\tunits: \"pixels\",\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"line-translate-anchor\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tmap: {\n\t\t\t},\n\t\t\tviewport: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"map\",\n\t\trequires: [\n\t\t\t\"line-translate\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"line-width\": {\n\t\ttype: \"number\",\n\t\t\"default\": 1,\n\t\tminimum: 0,\n\t\ttransition: true,\n\t\tunits: \"pixels\",\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"line-gap-width\": {\n\t\ttype: \"number\",\n\t\t\"default\": 0,\n\t\tminimum: 0,\n\t\ttransition: true,\n\t\tunits: \"pixels\",\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"line-offset\": {\n\t\ttype: \"number\",\n\t\t\"default\": 0,\n\t\ttransition: true,\n\t\tunits: \"pixels\",\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"line-blur\": {\n\t\ttype: \"number\",\n\t\t\"default\": 0,\n\t\tminimum: 0,\n\t\ttransition: true,\n\t\tunits: \"pixels\",\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"line-dasharray\": {\n\t\ttype: \"array\",\n\t\tvalue: \"number\",\n\t\tminimum: 0,\n\t\ttransition: true,\n\t\tunits: \"line widths\",\n\t\trequires: [\n\t\t\t{\n\t\t\t\t\"!\": \"line-pattern\"\n\t\t\t}\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"cross-faded\"\n\t},\n\t\"line-pattern\": {\n\t\ttype: \"resolvedImage\",\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"cross-faded-data-driven\"\n\t},\n\t\"line-gradient\": {\n\t\ttype: \"color\",\n\t\ttransition: false,\n\t\trequires: [\n\t\t\t{\n\t\t\t\t\"!\": \"line-dasharray\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"!\": \"line-pattern\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tsource: \"geojson\",\n\t\t\t\thas: {\n\t\t\t\t\tlineMetrics: true\n\t\t\t\t}\n\t\t\t}\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"line-progress\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"color-ramp\"\n\t}\n};\nvar paint_circle = {\n\t\"circle-radius\": {\n\t\ttype: \"number\",\n\t\t\"default\": 5,\n\t\tminimum: 0,\n\t\ttransition: true,\n\t\tunits: \"pixels\",\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"circle-color\": {\n\t\ttype: \"color\",\n\t\t\"default\": \"#000000\",\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"circle-blur\": {\n\t\ttype: \"number\",\n\t\t\"default\": 0,\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"circle-opacity\": {\n\t\ttype: \"number\",\n\t\t\"default\": 1,\n\t\tminimum: 0,\n\t\tmaximum: 1,\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"circle-translate\": {\n\t\ttype: \"array\",\n\t\tvalue: \"number\",\n\t\tlength: 2,\n\t\t\"default\": [\n\t\t\t0,\n\t\t\t0\n\t\t],\n\t\ttransition: true,\n\t\tunits: \"pixels\",\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"circle-translate-anchor\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tmap: {\n\t\t\t},\n\t\t\tviewport: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"map\",\n\t\trequires: [\n\t\t\t\"circle-translate\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"circle-pitch-scale\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tmap: {\n\t\t\t},\n\t\t\tviewport: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"map\",\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"circle-pitch-alignment\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tmap: {\n\t\t\t},\n\t\t\tviewport: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"viewport\",\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"circle-stroke-width\": {\n\t\ttype: \"number\",\n\t\t\"default\": 0,\n\t\tminimum: 0,\n\t\ttransition: true,\n\t\tunits: \"pixels\",\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"circle-stroke-color\": {\n\t\ttype: \"color\",\n\t\t\"default\": \"#000000\",\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"circle-stroke-opacity\": {\n\t\ttype: \"number\",\n\t\t\"default\": 1,\n\t\tminimum: 0,\n\t\tmaximum: 1,\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t}\n};\nvar paint_heatmap = {\n\t\"heatmap-radius\": {\n\t\ttype: \"number\",\n\t\t\"default\": 30,\n\t\tminimum: 1,\n\t\ttransition: true,\n\t\tunits: \"pixels\",\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"heatmap-weight\": {\n\t\ttype: \"number\",\n\t\t\"default\": 1,\n\t\tminimum: 0,\n\t\ttransition: false,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"heatmap-intensity\": {\n\t\ttype: \"number\",\n\t\t\"default\": 1,\n\t\tminimum: 0,\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"heatmap-color\": {\n\t\ttype: \"color\",\n\t\t\"default\": [\n\t\t\t\"interpolate\",\n\t\t\t[\n\t\t\t\t\"linear\"\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"heatmap-density\"\n\t\t\t],\n\t\t\t0,\n\t\t\t\"rgba(0, 0, 255, 0)\",\n\t\t\t0.1,\n\t\t\t\"royalblue\",\n\t\t\t0.3,\n\t\t\t\"cyan\",\n\t\t\t0.5,\n\t\t\t\"lime\",\n\t\t\t0.7,\n\t\t\t\"yellow\",\n\t\t\t1,\n\t\t\t\"red\"\n\t\t],\n\t\ttransition: false,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"heatmap-density\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"color-ramp\"\n\t},\n\t\"heatmap-opacity\": {\n\t\ttype: \"number\",\n\t\t\"default\": 1,\n\t\tminimum: 0,\n\t\tmaximum: 1,\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t}\n};\nvar paint_symbol = {\n\t\"icon-opacity\": {\n\t\ttype: \"number\",\n\t\t\"default\": 1,\n\t\tminimum: 0,\n\t\tmaximum: 1,\n\t\ttransition: true,\n\t\trequires: [\n\t\t\t\"icon-image\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"icon-color\": {\n\t\ttype: \"color\",\n\t\t\"default\": \"#000000\",\n\t\ttransition: true,\n\t\trequires: [\n\t\t\t\"icon-image\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"icon-halo-color\": {\n\t\ttype: \"color\",\n\t\t\"default\": \"rgba(0, 0, 0, 0)\",\n\t\ttransition: true,\n\t\trequires: [\n\t\t\t\"icon-image\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"icon-halo-width\": {\n\t\ttype: \"number\",\n\t\t\"default\": 0,\n\t\tminimum: 0,\n\t\ttransition: true,\n\t\tunits: \"pixels\",\n\t\trequires: [\n\t\t\t\"icon-image\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"icon-halo-blur\": {\n\t\ttype: \"number\",\n\t\t\"default\": 0,\n\t\tminimum: 0,\n\t\ttransition: true,\n\t\tunits: \"pixels\",\n\t\trequires: [\n\t\t\t\"icon-image\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"icon-translate\": {\n\t\ttype: \"array\",\n\t\tvalue: \"number\",\n\t\tlength: 2,\n\t\t\"default\": [\n\t\t\t0,\n\t\t\t0\n\t\t],\n\t\ttransition: true,\n\t\tunits: \"pixels\",\n\t\trequires: [\n\t\t\t\"icon-image\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"icon-translate-anchor\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tmap: {\n\t\t\t},\n\t\t\tviewport: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"map\",\n\t\trequires: [\n\t\t\t\"icon-image\",\n\t\t\t\"icon-translate\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"text-opacity\": {\n\t\ttype: \"number\",\n\t\t\"default\": 1,\n\t\tminimum: 0,\n\t\tmaximum: 1,\n\t\ttransition: true,\n\t\trequires: [\n\t\t\t\"text-field\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"text-color\": {\n\t\ttype: \"color\",\n\t\t\"default\": \"#000000\",\n\t\ttransition: true,\n\t\toverridable: true,\n\t\trequires: [\n\t\t\t\"text-field\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"text-halo-color\": {\n\t\ttype: \"color\",\n\t\t\"default\": \"rgba(0, 0, 0, 0)\",\n\t\ttransition: true,\n\t\trequires: [\n\t\t\t\"text-field\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"text-halo-width\": {\n\t\ttype: \"number\",\n\t\t\"default\": 0,\n\t\tminimum: 0,\n\t\ttransition: true,\n\t\tunits: \"pixels\",\n\t\trequires: [\n\t\t\t\"text-field\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"text-halo-blur\": {\n\t\ttype: \"number\",\n\t\t\"default\": 0,\n\t\tminimum: 0,\n\t\ttransition: true,\n\t\tunits: \"pixels\",\n\t\trequires: [\n\t\t\t\"text-field\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"text-translate\": {\n\t\ttype: \"array\",\n\t\tvalue: \"number\",\n\t\tlength: 2,\n\t\t\"default\": [\n\t\t\t0,\n\t\t\t0\n\t\t],\n\t\ttransition: true,\n\t\tunits: \"pixels\",\n\t\trequires: [\n\t\t\t\"text-field\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"text-translate-anchor\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tmap: {\n\t\t\t},\n\t\t\tviewport: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"map\",\n\t\trequires: [\n\t\t\t\"text-field\",\n\t\t\t\"text-translate\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t}\n};\nvar paint_raster = {\n\t\"raster-opacity\": {\n\t\ttype: \"number\",\n\t\t\"default\": 1,\n\t\tminimum: 0,\n\t\tmaximum: 1,\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"raster-hue-rotate\": {\n\t\ttype: \"number\",\n\t\t\"default\": 0,\n\t\tperiod: 360,\n\t\ttransition: true,\n\t\tunits: \"degrees\",\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"raster-brightness-min\": {\n\t\ttype: \"number\",\n\t\t\"default\": 0,\n\t\tminimum: 0,\n\t\tmaximum: 1,\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"raster-brightness-max\": {\n\t\ttype: \"number\",\n\t\t\"default\": 1,\n\t\tminimum: 0,\n\t\tmaximum: 1,\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"raster-saturation\": {\n\t\ttype: \"number\",\n\t\t\"default\": 0,\n\t\tminimum: -1,\n\t\tmaximum: 1,\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"raster-contrast\": {\n\t\ttype: \"number\",\n\t\t\"default\": 0,\n\t\tminimum: -1,\n\t\tmaximum: 1,\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"raster-resampling\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tlinear: {\n\t\t\t},\n\t\t\tnearest: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"linear\",\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"raster-fade-duration\": {\n\t\ttype: \"number\",\n\t\t\"default\": 300,\n\t\tminimum: 0,\n\t\ttransition: false,\n\t\tunits: \"milliseconds\",\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t}\n};\nvar paint_hillshade = {\n\t\"hillshade-illumination-direction\": {\n\t\ttype: \"number\",\n\t\t\"default\": 335,\n\t\tminimum: 0,\n\t\tmaximum: 359,\n\t\ttransition: false,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"hillshade-illumination-anchor\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tmap: {\n\t\t\t},\n\t\t\tviewport: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"viewport\",\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"hillshade-exaggeration\": {\n\t\ttype: \"number\",\n\t\t\"default\": 0.5,\n\t\tminimum: 0,\n\t\tmaximum: 1,\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"hillshade-shadow-color\": {\n\t\ttype: \"color\",\n\t\t\"default\": \"#000000\",\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"hillshade-highlight-color\": {\n\t\ttype: \"color\",\n\t\t\"default\": \"#FFFFFF\",\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"hillshade-accent-color\": {\n\t\ttype: \"color\",\n\t\t\"default\": \"#000000\",\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t}\n};\nvar paint_background = {\n\t\"background-color\": {\n\t\ttype: \"color\",\n\t\t\"default\": \"#000000\",\n\t\ttransition: true,\n\t\trequires: [\n\t\t\t{\n\t\t\t\t\"!\": \"background-pattern\"\n\t\t\t}\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"background-pattern\": {\n\t\ttype: \"resolvedImage\",\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"cross-faded\"\n\t},\n\t\"background-opacity\": {\n\t\ttype: \"number\",\n\t\t\"default\": 1,\n\t\tminimum: 0,\n\t\tmaximum: 1,\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t}\n};\nvar transition = {\n\tduration: {\n\t\ttype: \"number\",\n\t\t\"default\": 300,\n\t\tminimum: 0,\n\t\tunits: \"milliseconds\"\n\t},\n\tdelay: {\n\t\ttype: \"number\",\n\t\t\"default\": 0,\n\t\tminimum: 0,\n\t\tunits: \"milliseconds\"\n\t}\n};\nvar promoteId = {\n\t\"*\": {\n\t\ttype: \"string\"\n\t}\n};\nvar v8Spec = {\n\t$version: $version,\n\t$root: $root,\n\tsources: sources,\n\tsource: source,\n\tsource_vector: source_vector,\n\tsource_raster: source_raster,\n\tsource_raster_dem: source_raster_dem,\n\tsource_geojson: source_geojson,\n\tsource_video: source_video,\n\tsource_image: source_image,\n\tlayer: layer,\n\tlayout: layout,\n\tlayout_background: layout_background,\n\tlayout_fill: layout_fill,\n\tlayout_circle: layout_circle,\n\tlayout_heatmap: layout_heatmap,\n\t\"layout_fill-extrusion\": {\n\tvisibility: {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tvisible: {\n\t\t\t},\n\t\t\tnone: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"visible\",\n\t\t\"property-type\": \"constant\"\n\t}\n},\n\tlayout_line: layout_line,\n\tlayout_symbol: layout_symbol,\n\tlayout_raster: layout_raster,\n\tlayout_hillshade: layout_hillshade,\n\tfilter: filter,\n\tfilter_operator: filter_operator,\n\tgeometry_type: geometry_type,\n\t\"function\": {\n\texpression: {\n\t\ttype: \"expression\"\n\t},\n\tstops: {\n\t\ttype: \"array\",\n\t\tvalue: \"function_stop\"\n\t},\n\tbase: {\n\t\ttype: \"number\",\n\t\t\"default\": 1,\n\t\tminimum: 0\n\t},\n\tproperty: {\n\t\ttype: \"string\",\n\t\t\"default\": \"$zoom\"\n\t},\n\ttype: {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tidentity: {\n\t\t\t},\n\t\t\texponential: {\n\t\t\t},\n\t\t\tinterval: {\n\t\t\t},\n\t\t\tcategorical: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"exponential\"\n\t},\n\tcolorSpace: {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\trgb: {\n\t\t\t},\n\t\t\tlab: {\n\t\t\t},\n\t\t\thcl: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"rgb\"\n\t},\n\t\"default\": {\n\t\ttype: \"*\",\n\t\trequired: false\n\t}\n},\n\tfunction_stop: function_stop,\n\texpression: expression$1,\n\tlight: light,\n\tsky: sky,\n\tterrain: terrain,\n\tprojection: projection,\n\tpaint: paint,\n\tpaint_fill: paint_fill,\n\t\"paint_fill-extrusion\": {\n\t\"fill-extrusion-opacity\": {\n\t\ttype: \"number\",\n\t\t\"default\": 1,\n\t\tminimum: 0,\n\t\tmaximum: 1,\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"fill-extrusion-color\": {\n\t\ttype: \"color\",\n\t\t\"default\": \"#000000\",\n\t\ttransition: true,\n\t\trequires: [\n\t\t\t{\n\t\t\t\t\"!\": \"fill-extrusion-pattern\"\n\t\t\t}\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"fill-extrusion-translate\": {\n\t\ttype: \"array\",\n\t\tvalue: \"number\",\n\t\tlength: 2,\n\t\t\"default\": [\n\t\t\t0,\n\t\t\t0\n\t\t],\n\t\ttransition: true,\n\t\tunits: \"pixels\",\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"fill-extrusion-translate-anchor\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tmap: {\n\t\t\t},\n\t\t\tviewport: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"map\",\n\t\trequires: [\n\t\t\t\"fill-extrusion-translate\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"fill-extrusion-pattern\": {\n\t\ttype: \"resolvedImage\",\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"cross-faded-data-driven\"\n\t},\n\t\"fill-extrusion-height\": {\n\t\ttype: \"number\",\n\t\t\"default\": 0,\n\t\tminimum: 0,\n\t\tunits: \"meters\",\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"fill-extrusion-base\": {\n\t\ttype: \"number\",\n\t\t\"default\": 0,\n\t\tminimum: 0,\n\t\tunits: \"meters\",\n\t\ttransition: true,\n\t\trequires: [\n\t\t\t\"fill-extrusion-height\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"fill-extrusion-vertical-gradient\": {\n\t\ttype: \"boolean\",\n\t\t\"default\": true,\n\t\ttransition: false,\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t}\n},\n\tpaint_line: paint_line,\n\tpaint_circle: paint_circle,\n\tpaint_heatmap: paint_heatmap,\n\tpaint_symbol: paint_symbol,\n\tpaint_raster: paint_raster,\n\tpaint_hillshade: paint_hillshade,\n\tpaint_background: paint_background,\n\ttransition: transition,\n\t\"property-type\": {\n\t\"data-driven\": {\n\t\ttype: \"property-type\"\n\t},\n\t\"cross-faded\": {\n\t\ttype: \"property-type\"\n\t},\n\t\"cross-faded-data-driven\": {\n\t\ttype: \"property-type\"\n\t},\n\t\"color-ramp\": {\n\t\ttype: \"property-type\"\n\t},\n\t\"data-constant\": {\n\t\ttype: \"property-type\"\n\t},\n\tconstant: {\n\t\ttype: \"property-type\"\n\t}\n},\n\tpromoteId: promoteId\n};\n\nconst refProperties = ['type', 'source', 'source-layer', 'minzoom', 'maxzoom', 'filter', 'layout'];\n\nfunction deref(layer, parent) {\n    const result = {};\n    for (const k in layer) {\n        if (k !== 'ref') {\n            result[k] = layer[k];\n        }\n    }\n    refProperties.forEach((k) => {\n        if (k in parent) {\n            result[k] = parent[k];\n        }\n    });\n    return result;\n}\n/**\n * Given an array of layers, some of which may contain `ref` properties\n * whose value is the `id` of another property, return a new array where\n * such layers have been augmented with the 'type', 'source', etc. properties\n * from the parent layer, and the `ref` property has been removed.\n *\n * The input is not modified. The output may contain references to portions\n * of the input.\n *\n * @private\n * @param {Array<Layer>} layers\n * @returns {Array<Layer>}\n */\nfunction derefLayers(layers) {\n    layers = layers.slice();\n    const map = Object.create(null);\n    for (let i = 0; i < layers.length; i++) {\n        map[layers[i].id] = layers[i];\n    }\n    for (let i = 0; i < layers.length; i++) {\n        if ('ref' in layers[i]) {\n            layers[i] = deref(layers[i], map[layers[i].ref]);\n        }\n    }\n    return layers;\n}\n\n/**\n * Deeply compares two object literals.\n *\n * @private\n */\nfunction deepEqual(a, b) {\n    if (Array.isArray(a)) {\n        if (!Array.isArray(b) || a.length !== b.length)\n            return false;\n        for (let i = 0; i < a.length; i++) {\n            if (!deepEqual(a[i], b[i]))\n                return false;\n        }\n        return true;\n    }\n    if (typeof a === 'object' && a !== null && b !== null) {\n        if (!(typeof b === 'object'))\n            return false;\n        const keys = Object.keys(a);\n        if (keys.length !== Object.keys(b).length)\n            return false;\n        for (const key in a) {\n            if (!deepEqual(a[key], b[key]))\n                return false;\n        }\n        return true;\n    }\n    return a === b;\n}\n\n/**\n * The main reason for this method is to allow type check when adding a command to the array.\n * @param commands - The commands array to add to\n * @param command - The command to add\n */\nfunction addCommand(commands, command) {\n    commands.push(command);\n}\nfunction addSource(sourceId, after, commands) {\n    addCommand(commands, { command: 'addSource', args: [sourceId, after[sourceId]] });\n}\nfunction removeSource(sourceId, commands, sourcesRemoved) {\n    addCommand(commands, { command: 'removeSource', args: [sourceId] });\n    sourcesRemoved[sourceId] = true;\n}\nfunction updateSource(sourceId, after, commands, sourcesRemoved) {\n    removeSource(sourceId, commands, sourcesRemoved);\n    addSource(sourceId, after, commands);\n}\nfunction canUpdateGeoJSON(before, after, sourceId) {\n    let prop;\n    for (prop in before[sourceId]) {\n        if (!Object.prototype.hasOwnProperty.call(before[sourceId], prop))\n            continue;\n        if (prop !== 'data' && !deepEqual(before[sourceId][prop], after[sourceId][prop])) {\n            return false;\n        }\n    }\n    for (prop in after[sourceId]) {\n        if (!Object.prototype.hasOwnProperty.call(after[sourceId], prop))\n            continue;\n        if (prop !== 'data' && !deepEqual(before[sourceId][prop], after[sourceId][prop])) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction diffSources(before, after, commands, sourcesRemoved) {\n    before = before || {};\n    after = after || {};\n    let sourceId;\n    // look for sources to remove\n    for (sourceId in before) {\n        if (!Object.prototype.hasOwnProperty.call(before, sourceId))\n            continue;\n        if (!Object.prototype.hasOwnProperty.call(after, sourceId)) {\n            removeSource(sourceId, commands, sourcesRemoved);\n        }\n    }\n    // look for sources to add/update\n    for (sourceId in after) {\n        if (!Object.prototype.hasOwnProperty.call(after, sourceId))\n            continue;\n        if (!Object.prototype.hasOwnProperty.call(before, sourceId)) {\n            addSource(sourceId, after, commands);\n        }\n        else if (!deepEqual(before[sourceId], after[sourceId])) {\n            if (before[sourceId].type === 'geojson' && after[sourceId].type === 'geojson' && canUpdateGeoJSON(before, after, sourceId)) {\n                addCommand(commands, { command: 'setGeoJSONSourceData', args: [sourceId, after[sourceId].data] });\n            }\n            else {\n                // no update command, must remove then add\n                updateSource(sourceId, after, commands, sourcesRemoved);\n            }\n        }\n    }\n}\nfunction diffLayerPropertyChanges(before, after, commands, layerId, klass, command) {\n    before = before || {};\n    after = after || {};\n    for (const prop in before) {\n        if (!Object.prototype.hasOwnProperty.call(before, prop))\n            continue;\n        if (!deepEqual(before[prop], after[prop])) {\n            commands.push({ command, args: [layerId, prop, after[prop], klass] });\n        }\n    }\n    for (const prop in after) {\n        if (!Object.prototype.hasOwnProperty.call(after, prop) || Object.prototype.hasOwnProperty.call(before, prop))\n            continue;\n        if (!deepEqual(before[prop], after[prop])) {\n            commands.push({ command, args: [layerId, prop, after[prop], klass] });\n        }\n    }\n}\nfunction pluckId(layer) {\n    return layer.id;\n}\nfunction indexById(group, layer) {\n    group[layer.id] = layer;\n    return group;\n}\nfunction diffLayers(before, after, commands) {\n    before = before || [];\n    after = after || [];\n    // order of layers by id\n    const beforeOrder = before.map(pluckId);\n    const afterOrder = after.map(pluckId);\n    // index of layer by id\n    const beforeIndex = before.reduce(indexById, {});\n    const afterIndex = after.reduce(indexById, {});\n    // track order of layers as if they have been mutated\n    const tracker = beforeOrder.slice();\n    // layers that have been added do not need to be diffed\n    const clean = Object.create(null);\n    let layerId;\n    let beforeLayer;\n    let afterLayer;\n    let insertBeforeLayerId;\n    let prop;\n    // remove layers\n    for (let i = 0, d = 0; i < beforeOrder.length; i++) {\n        layerId = beforeOrder[i];\n        if (!Object.prototype.hasOwnProperty.call(afterIndex, layerId)) {\n            addCommand(commands, { command: 'removeLayer', args: [layerId] });\n            tracker.splice(tracker.indexOf(layerId, d), 1);\n        }\n        else {\n            // limit where in tracker we need to look for a match\n            d++;\n        }\n    }\n    // add/reorder layers\n    for (let i = 0, d = 0; i < afterOrder.length; i++) {\n        // work backwards as insert is before an existing layer\n        layerId = afterOrder[afterOrder.length - 1 - i];\n        if (tracker[tracker.length - 1 - i] === layerId)\n            continue;\n        if (Object.prototype.hasOwnProperty.call(beforeIndex, layerId)) {\n            // remove the layer before we insert at the correct position\n            addCommand(commands, { command: 'removeLayer', args: [layerId] });\n            tracker.splice(tracker.lastIndexOf(layerId, tracker.length - d), 1);\n        }\n        else {\n            // limit where in tracker we need to look for a match\n            d++;\n        }\n        // add layer at correct position\n        insertBeforeLayerId = tracker[tracker.length - i];\n        addCommand(commands, { command: 'addLayer', args: [afterIndex[layerId], insertBeforeLayerId] });\n        tracker.splice(tracker.length - i, 0, layerId);\n        clean[layerId] = true;\n    }\n    // update layers\n    for (let i = 0; i < afterOrder.length; i++) {\n        layerId = afterOrder[i];\n        beforeLayer = beforeIndex[layerId];\n        afterLayer = afterIndex[layerId];\n        // no need to update if previously added (new or moved)\n        if (clean[layerId] || deepEqual(beforeLayer, afterLayer))\n            continue;\n        // If source, source-layer, or type have changes, then remove the layer\n        // and add it back 'from scratch'.\n        if (!deepEqual(beforeLayer.source, afterLayer.source) || !deepEqual(beforeLayer['source-layer'], afterLayer['source-layer']) || !deepEqual(beforeLayer.type, afterLayer.type)) {\n            addCommand(commands, { command: 'removeLayer', args: [layerId] });\n            // we add the layer back at the same position it was already in, so\n            // there's no need to update the `tracker`\n            insertBeforeLayerId = tracker[tracker.lastIndexOf(layerId) + 1];\n            addCommand(commands, { command: 'addLayer', args: [afterLayer, insertBeforeLayerId] });\n            continue;\n        }\n        // layout, paint, filter, minzoom, maxzoom\n        diffLayerPropertyChanges(beforeLayer.layout, afterLayer.layout, commands, layerId, null, 'setLayoutProperty');\n        diffLayerPropertyChanges(beforeLayer.paint, afterLayer.paint, commands, layerId, null, 'setPaintProperty');\n        if (!deepEqual(beforeLayer.filter, afterLayer.filter)) {\n            addCommand(commands, { command: 'setFilter', args: [layerId, afterLayer.filter] });\n        }\n        if (!deepEqual(beforeLayer.minzoom, afterLayer.minzoom) || !deepEqual(beforeLayer.maxzoom, afterLayer.maxzoom)) {\n            addCommand(commands, { command: 'setLayerZoomRange', args: [layerId, afterLayer.minzoom, afterLayer.maxzoom] });\n        }\n        // handle all other layer props, including paint.*\n        for (prop in beforeLayer) {\n            if (!Object.prototype.hasOwnProperty.call(beforeLayer, prop))\n                continue;\n            if (prop === 'layout' || prop === 'paint' || prop === 'filter' ||\n                prop === 'metadata' || prop === 'minzoom' || prop === 'maxzoom')\n                continue;\n            if (prop.indexOf('paint.') === 0) {\n                diffLayerPropertyChanges(beforeLayer[prop], afterLayer[prop], commands, layerId, prop.slice(6), 'setPaintProperty');\n            }\n            else if (!deepEqual(beforeLayer[prop], afterLayer[prop])) {\n                addCommand(commands, { command: 'setLayerProperty', args: [layerId, prop, afterLayer[prop]] });\n            }\n        }\n        for (prop in afterLayer) {\n            if (!Object.prototype.hasOwnProperty.call(afterLayer, prop) || Object.prototype.hasOwnProperty.call(beforeLayer, prop))\n                continue;\n            if (prop === 'layout' || prop === 'paint' || prop === 'filter' ||\n                prop === 'metadata' || prop === 'minzoom' || prop === 'maxzoom')\n                continue;\n            if (prop.indexOf('paint.') === 0) {\n                diffLayerPropertyChanges(beforeLayer[prop], afterLayer[prop], commands, layerId, prop.slice(6), 'setPaintProperty');\n            }\n            else if (!deepEqual(beforeLayer[prop], afterLayer[prop])) {\n                addCommand(commands, { command: 'setLayerProperty', args: [layerId, prop, afterLayer[prop]] });\n            }\n        }\n    }\n}\n/**\n * Diff two stylesheet\n *\n * Creates semanticly aware diffs that can easily be applied at runtime.\n * Operations produced by the diff closely resemble the maplibre-gl-js API. Any\n * error creating the diff will fall back to the 'setStyle' operation.\n *\n * Example diff:\n * [\n *     { command: 'setConstant', args: ['@water', '#0000FF'] },\n *     { command: 'setPaintProperty', args: ['background', 'background-color', 'black'] }\n * ]\n *\n * @private\n * @param {*} [before] stylesheet to compare from\n * @param {*} after stylesheet to compare to\n * @returns Array list of changes\n */\nfunction diff(before, after) {\n    if (!before)\n        return [{ command: 'setStyle', args: [after] }];\n    let commands = [];\n    try {\n        // Handle changes to top-level properties\n        if (!deepEqual(before.version, after.version)) {\n            return [{ command: 'setStyle', args: [after] }];\n        }\n        if (!deepEqual(before.center, after.center)) {\n            commands.push({ command: 'setCenter', args: [after.center] });\n        }\n        if (!deepEqual(before.centerAltitude, after.centerAltitude)) {\n            commands.push({ command: 'setCenterAltitude', args: [after.centerAltitude] });\n        }\n        if (!deepEqual(before.zoom, after.zoom)) {\n            commands.push({ command: 'setZoom', args: [after.zoom] });\n        }\n        if (!deepEqual(before.bearing, after.bearing)) {\n            commands.push({ command: 'setBearing', args: [after.bearing] });\n        }\n        if (!deepEqual(before.pitch, after.pitch)) {\n            commands.push({ command: 'setPitch', args: [after.pitch] });\n        }\n        if (!deepEqual(before.roll, after.roll)) {\n            commands.push({ command: 'setRoll', args: [after.roll] });\n        }\n        if (!deepEqual(before.sprite, after.sprite)) {\n            commands.push({ command: 'setSprite', args: [after.sprite] });\n        }\n        if (!deepEqual(before.glyphs, after.glyphs)) {\n            commands.push({ command: 'setGlyphs', args: [after.glyphs] });\n        }\n        if (!deepEqual(before.transition, after.transition)) {\n            commands.push({ command: 'setTransition', args: [after.transition] });\n        }\n        if (!deepEqual(before.light, after.light)) {\n            commands.push({ command: 'setLight', args: [after.light] });\n        }\n        if (!deepEqual(before.terrain, after.terrain)) {\n            commands.push({ command: 'setTerrain', args: [after.terrain] });\n        }\n        if (!deepEqual(before.sky, after.sky)) {\n            commands.push({ command: 'setSky', args: [after.sky] });\n        }\n        if (!deepEqual(before.projection, after.projection)) {\n            commands.push({ command: 'setProjection', args: [after.projection] });\n        }\n        // Handle changes to `sources`\n        // If a source is to be removed, we also--before the removeSource\n        // command--need to remove all the style layers that depend on it.\n        const sourcesRemoved = {};\n        // First collect the {add,remove}Source commands\n        const removeOrAddSourceCommands = [];\n        diffSources(before.sources, after.sources, removeOrAddSourceCommands, sourcesRemoved);\n        // Push a removeLayer command for each style layer that depends on a\n        // source that's being removed.\n        // Also, exclude any such layers them from the input to `diffLayers`\n        // below, so that diffLayers produces the appropriate `addLayers`\n        // command\n        const beforeLayers = [];\n        if (before.layers) {\n            before.layers.forEach((layer) => {\n                if ('source' in layer && sourcesRemoved[layer.source]) {\n                    commands.push({ command: 'removeLayer', args: [layer.id] });\n                }\n                else {\n                    beforeLayers.push(layer);\n                }\n            });\n        }\n        commands = commands.concat(removeOrAddSourceCommands);\n        // Handle changes to `layers`\n        diffLayers(beforeLayers, after.layers, commands);\n    }\n    catch (e) {\n        // fall back to setStyle\n        console.warn('Unable to compute style diff:', e);\n        commands = [{ command: 'setStyle', args: [after] }];\n    }\n    return commands;\n}\n\n// Note: Do not inherit from Error. It breaks when transpiling to ES5.\nclass ValidationError {\n    constructor(key, value, message, identifier) {\n        this.message = (key ? `${key}: ` : '') + message;\n        if (identifier)\n            this.identifier = identifier;\n        if (value !== null && value !== undefined && value.__line__) {\n            this.line = value.__line__;\n        }\n    }\n}\n\n// Note: Do not inherit from Error. It breaks when transpiling to ES5.\nclass ParsingError {\n    constructor(error) {\n        this.error = error;\n        this.message = error.message;\n        const match = error.message.match(/line (\\d+)/);\n        this.line = match ? parseInt(match[1], 10) : 0;\n    }\n}\n\nfunction extendBy(output, ...inputs) {\n    for (const input of inputs) {\n        for (const k in input) {\n            output[k] = input[k];\n        }\n    }\n    return output;\n}\n\nclass ExpressionParsingError extends Error {\n    constructor(key, message) {\n        super(message);\n        this.message = message;\n        this.key = key;\n    }\n}\n\n/**\n * Tracks `let` bindings during expression parsing.\n * @private\n */\nclass Scope {\n    constructor(parent, bindings = []) {\n        this.parent = parent;\n        this.bindings = {};\n        for (const [name, expression] of bindings) {\n            this.bindings[name] = expression;\n        }\n    }\n    concat(bindings) {\n        return new Scope(this, bindings);\n    }\n    get(name) {\n        if (this.bindings[name]) {\n            return this.bindings[name];\n        }\n        if (this.parent) {\n            return this.parent.get(name);\n        }\n        throw new Error(`${name} not found in scope.`);\n    }\n    has(name) {\n        if (this.bindings[name])\n            return true;\n        return this.parent ? this.parent.has(name) : false;\n    }\n}\n\nconst NullType = { kind: 'null' };\nconst NumberType = { kind: 'number' };\nconst StringType = { kind: 'string' };\nconst BooleanType = { kind: 'boolean' };\nconst ColorType = { kind: 'color' };\nconst ProjectionDefinitionType = { kind: 'projectionDefinition' };\nconst ObjectType = { kind: 'object' };\nconst ValueType = { kind: 'value' };\nconst ErrorType = { kind: 'error' };\nconst CollatorType = { kind: 'collator' };\nconst FormattedType = { kind: 'formatted' };\nconst PaddingType = { kind: 'padding' };\nconst ResolvedImageType = { kind: 'resolvedImage' };\nconst VariableAnchorOffsetCollectionType = { kind: 'variableAnchorOffsetCollection' };\nfunction array(itemType, N) {\n    return {\n        kind: 'array',\n        itemType,\n        N\n    };\n}\nfunction typeToString(type) {\n    if (type.kind === 'array') {\n        const itemType = typeToString(type.itemType);\n        return typeof type.N === 'number' ?\n            `array<${itemType}, ${type.N}>` :\n            type.itemType.kind === 'value' ? 'array' : `array<${itemType}>`;\n    }\n    else {\n        return type.kind;\n    }\n}\nconst valueMemberTypes = [\n    NullType,\n    NumberType,\n    StringType,\n    BooleanType,\n    ColorType,\n    ProjectionDefinitionType,\n    FormattedType,\n    ObjectType,\n    array(ValueType),\n    PaddingType,\n    ResolvedImageType,\n    VariableAnchorOffsetCollectionType\n];\n/**\n * Returns null if `t` is a subtype of `expected`; otherwise returns an\n * error message.\n * @private\n */\nfunction checkSubtype(expected, t) {\n    if (t.kind === 'error') {\n        // Error is a subtype of every type\n        return null;\n    }\n    else if (expected.kind === 'array') {\n        if (t.kind === 'array' &&\n            ((t.N === 0 && t.itemType.kind === 'value') || !checkSubtype(expected.itemType, t.itemType)) &&\n            (typeof expected.N !== 'number' || expected.N === t.N)) {\n            return null;\n        }\n    }\n    else if (expected.kind === t.kind) {\n        return null;\n    }\n    else if (expected.kind === 'value') {\n        for (const memberType of valueMemberTypes) {\n            if (!checkSubtype(memberType, t)) {\n                return null;\n            }\n        }\n    }\n    return `Expected ${typeToString(expected)} but found ${typeToString(t)} instead.`;\n}\nfunction isValidType(provided, allowedTypes) {\n    return allowedTypes.some(t => t.kind === provided.kind);\n}\nfunction isValidNativeType(provided, allowedTypes) {\n    return allowedTypes.some(t => {\n        if (t === 'null') {\n            return provided === null;\n        }\n        else if (t === 'array') {\n            return Array.isArray(provided);\n        }\n        else if (t === 'object') {\n            return provided && !Array.isArray(provided) && typeof provided === 'object';\n        }\n        else {\n            return t === typeof provided;\n        }\n    });\n}\n/**\n * Verify whether the specified type is of the same type as the specified sample.\n *\n * @param provided Type to verify\n * @param sample Sample type to reference\n * @returns `true` if both objects are of the same type, `false` otherwise\n * @example basic types\n * if (verifyType(outputType, ValueType)) {\n *     // type narrowed to:\n *     outputType.kind; // 'value'\n * }\n * @example array types\n * if (verifyType(outputType, array(NumberType))) {\n *     // type narrowed to:\n *     outputType.kind; // 'array'\n *     outputType.itemType; // NumberTypeT\n *     outputType.itemType.kind; // 'number'\n * }\n */\nfunction verifyType(provided, sample) {\n    if (provided.kind === 'array' && sample.kind === 'array') {\n        return provided.itemType.kind === sample.itemType.kind && typeof provided.N === 'number';\n    }\n    return provided.kind === sample.kind;\n}\n\n// See https://observablehq.com/@mbostock/lab-and-rgb\nconst Xn = 0.96422, Yn = 1, Zn = 0.82521, t0 = 4 / 29, t1 = 6 / 29, t2 = 3 * t1 * t1, t3 = t1 * t1 * t1, deg2rad = Math.PI / 180, rad2deg = 180 / Math.PI;\nfunction constrainAngle(angle) {\n    angle = angle % 360;\n    if (angle < 0) {\n        angle += 360;\n    }\n    return angle;\n}\nfunction rgbToLab([r, g, b, alpha]) {\n    r = rgb2xyz(r);\n    g = rgb2xyz(g);\n    b = rgb2xyz(b);\n    let x, z;\n    const y = xyz2lab((0.2225045 * r + 0.7168786 * g + 0.0606169 * b) / Yn);\n    if (r === g && g === b) {\n        x = z = y;\n    }\n    else {\n        x = xyz2lab((0.4360747 * r + 0.3850649 * g + 0.1430804 * b) / Xn);\n        z = xyz2lab((0.0139322 * r + 0.0971045 * g + 0.7141733 * b) / Zn);\n    }\n    const l = 116 * y - 16;\n    return [(l < 0) ? 0 : l, 500 * (x - y), 200 * (y - z), alpha];\n}\nfunction rgb2xyz(x) {\n    return (x <= 0.04045) ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\nfunction xyz2lab(t) {\n    return (t > t3) ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\nfunction labToRgb([l, a, b, alpha]) {\n    let y = (l + 16) / 116, x = isNaN(a) ? y : y + a / 500, z = isNaN(b) ? y : y - b / 200;\n    y = Yn * lab2xyz(y);\n    x = Xn * lab2xyz(x);\n    z = Zn * lab2xyz(z);\n    return [\n        xyz2rgb(3.1338561 * x - 1.6168667 * y - 0.4906146 * z), // D50 -> sRGB\n        xyz2rgb(-0.9787684 * x + 1.9161415 * y + 0.0334540 * z),\n        xyz2rgb(0.0719453 * x - 0.2289914 * y + 1.4052427 * z),\n        alpha,\n    ];\n}\nfunction xyz2rgb(x) {\n    x = (x <= 0.00304) ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055;\n    return (x < 0) ? 0 : (x > 1) ? 1 : x; // clip to 0..1 range\n}\nfunction lab2xyz(t) {\n    return (t > t1) ? t * t * t : t2 * (t - t0);\n}\nfunction rgbToHcl(rgbColor) {\n    const [l, a, b, alpha] = rgbToLab(rgbColor);\n    const c = Math.sqrt(a * a + b * b);\n    const h = Math.round(c * 10000) ? constrainAngle(Math.atan2(b, a) * rad2deg) : NaN;\n    return [h, c, l, alpha];\n}\nfunction hclToRgb([h, c, l, alpha]) {\n    h = isNaN(h) ? 0 : h * deg2rad;\n    return labToRgb([l, Math.cos(h) * c, Math.sin(h) * c, alpha]);\n}\n// https://drafts.csswg.org/css-color-4/#hsl-to-rgb\nfunction hslToRgb([h, s, l, alpha]) {\n    h = constrainAngle(h);\n    s /= 100;\n    l /= 100;\n    function f(n) {\n        const k = (n + h / 30) % 12;\n        const a = s * Math.min(l, 1 - l);\n        return l - a * Math.max(-1, Math.min(k - 3, 9 - k, 1));\n    }\n    return [f(0), f(8), f(4), alpha];\n}\n\n/**\n * CSS color parser compliant with CSS Color 4 Specification.\n * Supports: named colors, `transparent` keyword, all rgb hex notations,\n * rgb(), rgba(), hsl() and hsla() functions.\n * Does not round the parsed values to integers from the range 0..255.\n *\n * Syntax:\n *\n * <alpha-value> = <number> | <percentage>\n *         <hue> = <number> | <angle>\n *\n *         rgb() = rgb( <percentage>{3} [ / <alpha-value> ]? ) | rgb( <number>{3} [ / <alpha-value> ]? )\n *         rgb() = rgb( <percentage>#{3} , <alpha-value>? )    | rgb( <number>#{3} , <alpha-value>? )\n *\n *         hsl() = hsl( <hue> <percentage> <percentage> [ / <alpha-value> ]? )\n *         hsl() = hsl( <hue>, <percentage>, <percentage>, <alpha-value>? )\n *\n * Caveats:\n *   - <angle> - <number> with optional `deg` suffix; `grad`, `rad`, `turn` are not supported\n *   - `none` keyword is not supported\n *   - comments inside rgb()/hsl() are not supported\n *   - legacy color syntax rgba() is supported with an identical grammar and behavior to rgb()\n *   - legacy color syntax hsla() is supported with an identical grammar and behavior to hsl()\n *\n * @param input CSS color string to parse.\n * @returns Color in sRGB color space, with `red`, `green`, `blue`\n * and `alpha` channels normalized to the range 0..1,\n * or `undefined` if the input is not a valid color string.\n */\nfunction parseCssColor(input) {\n    input = input.toLowerCase().trim();\n    if (input === 'transparent') {\n        return [0, 0, 0, 0];\n    }\n    // 'white', 'black', 'blue'\n    const namedColorsMatch = namedColors[input];\n    if (namedColorsMatch) {\n        const [r, g, b] = namedColorsMatch;\n        return [r / 255, g / 255, b / 255, 1];\n    }\n    // #f0c, #f0cf, #ff00cc, #ff00ccff\n    if (input.startsWith('#')) {\n        const hexRegexp = /^#(?:[0-9a-f]{3,4}|[0-9a-f]{6}|[0-9a-f]{8})$/;\n        if (hexRegexp.test(input)) {\n            const step = input.length < 6 ? 1 : 2;\n            let i = 1;\n            return [\n                parseHex(input.slice(i, i += step)),\n                parseHex(input.slice(i, i += step)),\n                parseHex(input.slice(i, i += step)),\n                parseHex(input.slice(i, i + step) || 'ff'),\n            ];\n        }\n    }\n    // rgb(128 0 0), rgb(50% 0% 0%), rgba(255,0,255,0.6), rgb(255 0 255 / 60%), rgb(100% 0% 100% /.6)\n    if (input.startsWith('rgb')) {\n        const rgbRegExp = /^rgba?\\(\\s*([\\de.+-]+)(%)?(?:\\s+|\\s*(,)\\s*)([\\de.+-]+)(%)?(?:\\s+|\\s*(,)\\s*)([\\de.+-]+)(%)?(?:\\s*([,\\/])\\s*([\\de.+-]+)(%)?)?\\s*\\)$/;\n        const rgbMatch = input.match(rgbRegExp);\n        if (rgbMatch) {\n            const [_, // eslint-disable-line @typescript-eslint/no-unused-vars\n            r, // <numeric>\n            rp, // %         (optional)\n            f1, // ,         (optional)\n            g, // <numeric>\n            gp, // %         (optional)\n            f2, // ,         (optional)\n            b, // <numeric>\n            bp, // %         (optional)\n            f3, // ,|/       (optional)\n            a, // <numeric> (optional)\n            ap, // %         (optional)\n            ] = rgbMatch;\n            const argFormat = [f1 || ' ', f2 || ' ', f3].join('');\n            if (argFormat === '  ' ||\n                argFormat === '  /' ||\n                argFormat === ',,' ||\n                argFormat === ',,,') {\n                const valFormat = [rp, gp, bp].join('');\n                const maxValue = (valFormat === '%%%') ? 100 :\n                    (valFormat === '') ? 255 : 0;\n                if (maxValue) {\n                    const rgba = [\n                        clamp(+r / maxValue, 0, 1),\n                        clamp(+g / maxValue, 0, 1),\n                        clamp(+b / maxValue, 0, 1),\n                        a ? parseAlpha(+a, ap) : 1,\n                    ];\n                    if (validateNumbers(rgba)) {\n                        return rgba;\n                    }\n                    // invalid numbers\n                }\n                // values must be all numbers or all percentages\n            }\n            return; // comma optional syntax requires no commas at all\n        }\n    }\n    // hsl(120 50% 80%), hsla(120deg,50%,80%,.9), hsl(12e1 50% 80% / 90%)\n    const hslRegExp = /^hsla?\\(\\s*([\\de.+-]+)(?:deg)?(?:\\s+|\\s*(,)\\s*)([\\de.+-]+)%(?:\\s+|\\s*(,)\\s*)([\\de.+-]+)%(?:\\s*([,\\/])\\s*([\\de.+-]+)(%)?)?\\s*\\)$/;\n    const hslMatch = input.match(hslRegExp);\n    if (hslMatch) {\n        const [_, // eslint-disable-line @typescript-eslint/no-unused-vars\n        h, // <numeric>\n        f1, // ,         (optional)\n        s, // <numeric>\n        f2, // ,         (optional)\n        l, // <numeric>\n        f3, // ,|/       (optional)\n        a, // <numeric> (optional)\n        ap, // %         (optional)\n        ] = hslMatch;\n        const argFormat = [f1 || ' ', f2 || ' ', f3].join('');\n        if (argFormat === '  ' ||\n            argFormat === '  /' ||\n            argFormat === ',,' ||\n            argFormat === ',,,') {\n            const hsla = [\n                +h,\n                clamp(+s, 0, 100),\n                clamp(+l, 0, 100),\n                a ? parseAlpha(+a, ap) : 1,\n            ];\n            if (validateNumbers(hsla)) {\n                return hslToRgb(hsla);\n            }\n            // invalid numbers\n        }\n        // comma optional syntax requires no commas at all\n    }\n}\nfunction parseHex(hex) {\n    return parseInt(hex.padEnd(2, hex), 16) / 255;\n}\nfunction parseAlpha(a, asPercentage) {\n    return clamp(asPercentage ? (a / 100) : a, 0, 1);\n}\nfunction clamp(n, min, max) {\n    return Math.min(Math.max(min, n), max);\n}\n/**\n * The regular expression for numeric values is not super specific, and it may\n * happen that it will accept a value that is not a valid number. In order to\n * detect and eliminate such values this function exists.\n *\n * @param array Array of uncertain numbers.\n * @returns `true` if the specified array contains only valid numbers, `false` otherwise.\n */\nfunction validateNumbers(array) {\n    return !array.some(Number.isNaN);\n}\n/**\n * To generate:\n * - visit {@link https://www.w3.org/TR/css-color-4/#named-colors}\n * - run in the console:\n * @example\n * copy(`{\\n${[...document.querySelector('.named-color-table tbody').children].map((tr) => `${tr.cells[2].textContent.trim()}: [${tr.cells[4].textContent.trim().split(/\\s+/).join(', ')}],`).join('\\n')}\\n}`);\n */\nconst namedColors = {\n    aliceblue: [240, 248, 255],\n    antiquewhite: [250, 235, 215],\n    aqua: [0, 255, 255],\n    aquamarine: [127, 255, 212],\n    azure: [240, 255, 255],\n    beige: [245, 245, 220],\n    bisque: [255, 228, 196],\n    black: [0, 0, 0],\n    blanchedalmond: [255, 235, 205],\n    blue: [0, 0, 255],\n    blueviolet: [138, 43, 226],\n    brown: [165, 42, 42],\n    burlywood: [222, 184, 135],\n    cadetblue: [95, 158, 160],\n    chartreuse: [127, 255, 0],\n    chocolate: [210, 105, 30],\n    coral: [255, 127, 80],\n    cornflowerblue: [100, 149, 237],\n    cornsilk: [255, 248, 220],\n    crimson: [220, 20, 60],\n    cyan: [0, 255, 255],\n    darkblue: [0, 0, 139],\n    darkcyan: [0, 139, 139],\n    darkgoldenrod: [184, 134, 11],\n    darkgray: [169, 169, 169],\n    darkgreen: [0, 100, 0],\n    darkgrey: [169, 169, 169],\n    darkkhaki: [189, 183, 107],\n    darkmagenta: [139, 0, 139],\n    darkolivegreen: [85, 107, 47],\n    darkorange: [255, 140, 0],\n    darkorchid: [153, 50, 204],\n    darkred: [139, 0, 0],\n    darksalmon: [233, 150, 122],\n    darkseagreen: [143, 188, 143],\n    darkslateblue: [72, 61, 139],\n    darkslategray: [47, 79, 79],\n    darkslategrey: [47, 79, 79],\n    darkturquoise: [0, 206, 209],\n    darkviolet: [148, 0, 211],\n    deeppink: [255, 20, 147],\n    deepskyblue: [0, 191, 255],\n    dimgray: [105, 105, 105],\n    dimgrey: [105, 105, 105],\n    dodgerblue: [30, 144, 255],\n    firebrick: [178, 34, 34],\n    floralwhite: [255, 250, 240],\n    forestgreen: [34, 139, 34],\n    fuchsia: [255, 0, 255],\n    gainsboro: [220, 220, 220],\n    ghostwhite: [248, 248, 255],\n    gold: [255, 215, 0],\n    goldenrod: [218, 165, 32],\n    gray: [128, 128, 128],\n    green: [0, 128, 0],\n    greenyellow: [173, 255, 47],\n    grey: [128, 128, 128],\n    honeydew: [240, 255, 240],\n    hotpink: [255, 105, 180],\n    indianred: [205, 92, 92],\n    indigo: [75, 0, 130],\n    ivory: [255, 255, 240],\n    khaki: [240, 230, 140],\n    lavender: [230, 230, 250],\n    lavenderblush: [255, 240, 245],\n    lawngreen: [124, 252, 0],\n    lemonchiffon: [255, 250, 205],\n    lightblue: [173, 216, 230],\n    lightcoral: [240, 128, 128],\n    lightcyan: [224, 255, 255],\n    lightgoldenrodyellow: [250, 250, 210],\n    lightgray: [211, 211, 211],\n    lightgreen: [144, 238, 144],\n    lightgrey: [211, 211, 211],\n    lightpink: [255, 182, 193],\n    lightsalmon: [255, 160, 122],\n    lightseagreen: [32, 178, 170],\n    lightskyblue: [135, 206, 250],\n    lightslategray: [119, 136, 153],\n    lightslategrey: [119, 136, 153],\n    lightsteelblue: [176, 196, 222],\n    lightyellow: [255, 255, 224],\n    lime: [0, 255, 0],\n    limegreen: [50, 205, 50],\n    linen: [250, 240, 230],\n    magenta: [255, 0, 255],\n    maroon: [128, 0, 0],\n    mediumaquamarine: [102, 205, 170],\n    mediumblue: [0, 0, 205],\n    mediumorchid: [186, 85, 211],\n    mediumpurple: [147, 112, 219],\n    mediumseagreen: [60, 179, 113],\n    mediumslateblue: [123, 104, 238],\n    mediumspringgreen: [0, 250, 154],\n    mediumturquoise: [72, 209, 204],\n    mediumvioletred: [199, 21, 133],\n    midnightblue: [25, 25, 112],\n    mintcream: [245, 255, 250],\n    mistyrose: [255, 228, 225],\n    moccasin: [255, 228, 181],\n    navajowhite: [255, 222, 173],\n    navy: [0, 0, 128],\n    oldlace: [253, 245, 230],\n    olive: [128, 128, 0],\n    olivedrab: [107, 142, 35],\n    orange: [255, 165, 0],\n    orangered: [255, 69, 0],\n    orchid: [218, 112, 214],\n    palegoldenrod: [238, 232, 170],\n    palegreen: [152, 251, 152],\n    paleturquoise: [175, 238, 238],\n    palevioletred: [219, 112, 147],\n    papayawhip: [255, 239, 213],\n    peachpuff: [255, 218, 185],\n    peru: [205, 133, 63],\n    pink: [255, 192, 203],\n    plum: [221, 160, 221],\n    powderblue: [176, 224, 230],\n    purple: [128, 0, 128],\n    rebeccapurple: [102, 51, 153],\n    red: [255, 0, 0],\n    rosybrown: [188, 143, 143],\n    royalblue: [65, 105, 225],\n    saddlebrown: [139, 69, 19],\n    salmon: [250, 128, 114],\n    sandybrown: [244, 164, 96],\n    seagreen: [46, 139, 87],\n    seashell: [255, 245, 238],\n    sienna: [160, 82, 45],\n    silver: [192, 192, 192],\n    skyblue: [135, 206, 235],\n    slateblue: [106, 90, 205],\n    slategray: [112, 128, 144],\n    slategrey: [112, 128, 144],\n    snow: [255, 250, 250],\n    springgreen: [0, 255, 127],\n    steelblue: [70, 130, 180],\n    tan: [210, 180, 140],\n    teal: [0, 128, 128],\n    thistle: [216, 191, 216],\n    tomato: [255, 99, 71],\n    turquoise: [64, 224, 208],\n    violet: [238, 130, 238],\n    wheat: [245, 222, 179],\n    white: [255, 255, 255],\n    whitesmoke: [245, 245, 245],\n    yellow: [255, 255, 0],\n    yellowgreen: [154, 205, 50],\n};\n\nfunction interpolateNumber(from, to, t) {\n    return from + t * (to - from);\n}\nfunction interpolateArray(from, to, t) {\n    return from.map((d, i) => {\n        return interpolateNumber(d, to[i], t);\n    });\n}\n\n/**\n * Checks whether the specified color space is one of the supported interpolation color spaces.\n *\n * @param colorSpace Color space key to verify.\n * @returns `true` if the specified color space is one of the supported\n * interpolation color spaces, `false` otherwise\n */\nfunction isSupportedInterpolationColorSpace(colorSpace) {\n    return colorSpace === 'rgb' || colorSpace === 'hcl' || colorSpace === 'lab';\n}\n/**\n * Color representation used by WebGL.\n * Defined in sRGB color space and pre-blended with alpha.\n * @private\n */\nclass Color {\n    /**\n     * @param r Red component premultiplied by `alpha` 0..1\n     * @param g Green component premultiplied by `alpha` 0..1\n     * @param b Blue component premultiplied by `alpha` 0..1\n     * @param [alpha=1] Alpha component 0..1\n     * @param [premultiplied=true] Whether the `r`, `g` and `b` values have already\n     * been multiplied by alpha. If `true` nothing happens if `false` then they will\n     * be multiplied automatically.\n     */\n    constructor(r, g, b, alpha = 1, premultiplied = true) {\n        this.r = r;\n        this.g = g;\n        this.b = b;\n        this.a = alpha;\n        if (!premultiplied) {\n            this.r *= alpha;\n            this.g *= alpha;\n            this.b *= alpha;\n            if (!alpha) {\n                // alpha = 0 erases completely rgb channels. This behavior is not desirable\n                // if this particular color is later used in color interpolation.\n                // Because of that, a reference to original color is saved.\n                this.overwriteGetter('rgb', [r, g, b, alpha]);\n            }\n        }\n    }\n    /**\n     * Parses CSS color strings and converts colors to sRGB color space if needed.\n     * Officially supported color formats:\n     * - keyword, e.g. 'aquamarine' or 'steelblue'\n     * - hex (with 3, 4, 6 or 8 digits), e.g. '#f0f' or '#e9bebea9'\n     * - rgb and rgba, e.g. 'rgb(0,240,120)' or 'rgba(0%,94%,47%,0.1)' or 'rgb(0 240 120 / .3)'\n     * - hsl and hsla, e.g. 'hsl(0,0%,83%)' or 'hsla(0,0%,83%,.5)' or 'hsl(0 0% 83% / 20%)'\n     *\n     * @param input CSS color string to parse.\n     * @returns A `Color` instance, or `undefined` if the input is not a valid color string.\n     */\n    static parse(input) {\n        // in zoom-and-property function input could be an instance of Color class\n        if (input instanceof Color) {\n            return input;\n        }\n        if (typeof input !== 'string') {\n            return;\n        }\n        const rgba = parseCssColor(input);\n        if (rgba) {\n            return new Color(...rgba, false);\n        }\n    }\n    /**\n     * Used in color interpolation and by 'to-rgba' expression.\n     *\n     * @returns Gien color, with reversed alpha blending, in sRGB color space.\n     */\n    get rgb() {\n        const { r, g, b, a } = this;\n        const f = a || Infinity; // reverse alpha blending factor\n        return this.overwriteGetter('rgb', [r / f, g / f, b / f, a]);\n    }\n    /**\n     * Used in color interpolation.\n     *\n     * @returns Gien color, with reversed alpha blending, in HCL color space.\n     */\n    get hcl() {\n        return this.overwriteGetter('hcl', rgbToHcl(this.rgb));\n    }\n    /**\n     * Used in color interpolation.\n     *\n     * @returns Gien color, with reversed alpha blending, in LAB color space.\n     */\n    get lab() {\n        return this.overwriteGetter('lab', rgbToLab(this.rgb));\n    }\n    /**\n     * Lazy getter pattern. When getter is called for the first time lazy value\n     * is calculated and then overwrites getter function in given object instance.\n     *\n     * @example:\n     * const redColor = Color.parse('red');\n     * let x = redColor.hcl; // this will invoke `get hcl()`, which will calculate\n     * // the value of red in HCL space and invoke this `overwriteGetter` function\n     * // which in turn will set a field with a key 'hcl' in the `redColor` object.\n     * // In other words it will override `get hcl()` from its `Color` prototype\n     * // with its own property: hcl = [calculated red value in hcl].\n     * let y = redColor.hcl; // next call will no longer invoke getter but simply\n     * // return the previously calculated value\n     * x === y; // true - `x` is exactly the same object as `y`\n     *\n     * @param getterKey Getter key\n     * @param lazyValue Lazily calculated value to be memoized by current instance\n     * @private\n     */\n    overwriteGetter(getterKey, lazyValue) {\n        Object.defineProperty(this, getterKey, { value: lazyValue });\n        return lazyValue;\n    }\n    /**\n     * Used by 'to-string' expression.\n     *\n     * @returns Serialized color in format `rgba(r,g,b,a)`\n     * where r,g,b are numbers within 0..255 and alpha is number within 1..0\n     *\n     * @example\n     * var purple = new Color.parse('purple');\n     * purple.toString; // = \"rgba(128,0,128,1)\"\n     * var translucentGreen = new Color.parse('rgba(26, 207, 26, .73)');\n     * translucentGreen.toString(); // = \"rgba(26,207,26,0.73)\"\n     */\n    toString() {\n        const [r, g, b, a] = this.rgb;\n        return `rgba(${[r, g, b].map(n => Math.round(n * 255)).join(',')},${a})`;\n    }\n    static interpolate(from, to, t, spaceKey = 'rgb') {\n        switch (spaceKey) {\n            case 'rgb': {\n                const [r, g, b, alpha] = interpolateArray(from.rgb, to.rgb, t);\n                return new Color(r, g, b, alpha, false);\n            }\n            case 'hcl': {\n                const [hue0, chroma0, light0, alphaF] = from.hcl;\n                const [hue1, chroma1, light1, alphaT] = to.hcl;\n                // https://github.com/gka/chroma.js/blob/cd1b3c0926c7a85cbdc3b1453b3a94006de91a92/src/interpolator/_hsx.js\n                let hue, chroma;\n                if (!isNaN(hue0) && !isNaN(hue1)) {\n                    let dh = hue1 - hue0;\n                    if (hue1 > hue0 && dh > 180) {\n                        dh -= 360;\n                    }\n                    else if (hue1 < hue0 && hue0 - hue1 > 180) {\n                        dh += 360;\n                    }\n                    hue = hue0 + t * dh;\n                }\n                else if (!isNaN(hue0)) {\n                    hue = hue0;\n                    if (light1 === 1 || light1 === 0)\n                        chroma = chroma0;\n                }\n                else if (!isNaN(hue1)) {\n                    hue = hue1;\n                    if (light0 === 1 || light0 === 0)\n                        chroma = chroma1;\n                }\n                else {\n                    hue = NaN;\n                }\n                const [r, g, b, alpha] = hclToRgb([\n                    hue,\n                    chroma !== null && chroma !== undefined ? chroma : interpolateNumber(chroma0, chroma1, t),\n                    interpolateNumber(light0, light1, t),\n                    interpolateNumber(alphaF, alphaT, t),\n                ]);\n                return new Color(r, g, b, alpha, false);\n            }\n            case 'lab': {\n                const [r, g, b, alpha] = labToRgb(interpolateArray(from.lab, to.lab, t));\n                return new Color(r, g, b, alpha, false);\n            }\n        }\n    }\n}\nColor.black = new Color(0, 0, 0, 1);\nColor.white = new Color(1, 1, 1, 1);\nColor.transparent = new Color(0, 0, 0, 0);\nColor.red = new Color(1, 0, 0, 1);\n\n// Flow type declarations for Intl cribbed from\n// https://github.com/facebook/flow/issues/1270\nclass Collator {\n    constructor(caseSensitive, diacriticSensitive, locale) {\n        if (caseSensitive)\n            this.sensitivity = diacriticSensitive ? 'variant' : 'case';\n        else\n            this.sensitivity = diacriticSensitive ? 'accent' : 'base';\n        this.locale = locale;\n        this.collator = new Intl.Collator(this.locale ? this.locale : [], { sensitivity: this.sensitivity, usage: 'search' });\n    }\n    compare(lhs, rhs) {\n        return this.collator.compare(lhs, rhs);\n    }\n    resolvedLocale() {\n        // We create a Collator without \"usage: search\" because we don't want\n        // the search options encoded in our result (e.g. \"en-u-co-search\")\n        return new Intl.Collator(this.locale ? this.locale : [])\n            .resolvedOptions().locale;\n    }\n}\n\nconst VERTICAL_ALIGN_OPTIONS = ['bottom', 'center', 'top'];\nclass FormattedSection {\n    constructor(text, image, scale, fontStack, textColor, verticalAlign) {\n        this.text = text;\n        this.image = image;\n        this.scale = scale;\n        this.fontStack = fontStack;\n        this.textColor = textColor;\n        this.verticalAlign = verticalAlign;\n    }\n}\nclass Formatted {\n    constructor(sections) {\n        this.sections = sections;\n    }\n    static fromString(unformatted) {\n        return new Formatted([new FormattedSection(unformatted, null, null, null, null, null)]);\n    }\n    isEmpty() {\n        if (this.sections.length === 0)\n            return true;\n        return !this.sections.some(section => section.text.length !== 0 ||\n            (section.image && section.image.name.length !== 0));\n    }\n    static factory(text) {\n        if (text instanceof Formatted) {\n            return text;\n        }\n        else {\n            return Formatted.fromString(text);\n        }\n    }\n    toString() {\n        if (this.sections.length === 0)\n            return '';\n        return this.sections.map(section => section.text).join('');\n    }\n}\n\n/**\n * A set of four numbers representing padding around a box. Create instances from\n * bare arrays or numeric values using the static method `Padding.parse`.\n * @private\n */\nclass Padding {\n    constructor(values) {\n        this.values = values.slice();\n    }\n    /**\n     * Numeric padding values\n     * @param input A padding value\n     * @returns A `Padding` instance, or `undefined` if the input is not a valid padding value.\n     */\n    static parse(input) {\n        if (input instanceof Padding) {\n            return input;\n        }\n        // Backwards compatibility: bare number is treated the same as array with single value.\n        // Padding applies to all four sides.\n        if (typeof input === 'number') {\n            return new Padding([input, input, input, input]);\n        }\n        if (!Array.isArray(input)) {\n            return undefined;\n        }\n        if (input.length < 1 || input.length > 4) {\n            return undefined;\n        }\n        for (const val of input) {\n            if (typeof val !== 'number') {\n                return undefined;\n            }\n        }\n        // Expand shortcut properties into explicit 4-sided values\n        switch (input.length) {\n            case 1:\n                input = [input[0], input[0], input[0], input[0]];\n                break;\n            case 2:\n                input = [input[0], input[1], input[0], input[1]];\n                break;\n            case 3:\n                input = [input[0], input[1], input[2], input[1]];\n                break;\n        }\n        return new Padding(input);\n    }\n    toString() {\n        return JSON.stringify(this.values);\n    }\n    static interpolate(from, to, t) {\n        return new Padding(interpolateArray(from.values, to.values, t));\n    }\n}\n\nclass RuntimeError {\n    constructor(message) {\n        this.name = 'ExpressionEvaluationError';\n        this.message = message;\n    }\n    toJSON() {\n        return this.message;\n    }\n}\n\n/** Set of valid anchor positions, as a set for validation */\nconst anchors = new Set(['center', 'left', 'right', 'top', 'bottom', 'top-left', 'top-right', 'bottom-left', 'bottom-right']);\n/**\n * Utility class to assist managing values for text-variable-anchor-offset property. Create instances from\n * bare arrays using the static method `VariableAnchorOffsetCollection.parse`.\n * @private\n */\nclass VariableAnchorOffsetCollection {\n    constructor(values) {\n        this.values = values.slice();\n    }\n    static parse(input) {\n        if (input instanceof VariableAnchorOffsetCollection) {\n            return input;\n        }\n        if (!Array.isArray(input) ||\n            input.length < 1 ||\n            input.length % 2 !== 0) {\n            return undefined;\n        }\n        for (let i = 0; i < input.length; i += 2) {\n            // Elements in even positions should be anchor positions; Elements in odd positions should be offset values\n            const anchorValue = input[i];\n            const offsetValue = input[i + 1];\n            if (typeof anchorValue !== 'string' || !anchors.has(anchorValue)) {\n                return undefined;\n            }\n            if (!Array.isArray(offsetValue) || offsetValue.length !== 2 || typeof offsetValue[0] !== 'number' || typeof offsetValue[1] !== 'number') {\n                return undefined;\n            }\n        }\n        return new VariableAnchorOffsetCollection(input);\n    }\n    toString() {\n        return JSON.stringify(this.values);\n    }\n    static interpolate(from, to, t) {\n        const fromValues = from.values;\n        const toValues = to.values;\n        if (fromValues.length !== toValues.length) {\n            throw new RuntimeError(`Cannot interpolate values of different length. from: ${from.toString()}, to: ${to.toString()}`);\n        }\n        const output = [];\n        for (let i = 0; i < fromValues.length; i += 2) {\n            // Anchor entries must match\n            if (fromValues[i] !== toValues[i]) {\n                throw new RuntimeError(`Cannot interpolate values containing mismatched anchors. from[${i}]: ${fromValues[i]}, to[${i}]: ${toValues[i]}`);\n            }\n            output.push(fromValues[i]);\n            // Interpolate the offset values for each anchor\n            const [fx, fy] = fromValues[i + 1];\n            const [tx, ty] = toValues[i + 1];\n            output.push([interpolateNumber(fx, tx, t), interpolateNumber(fy, ty, t)]);\n        }\n        return new VariableAnchorOffsetCollection(output);\n    }\n}\n\nclass ResolvedImage {\n    constructor(options) {\n        this.name = options.name;\n        this.available = options.available;\n    }\n    toString() {\n        return this.name;\n    }\n    static fromString(name) {\n        if (!name)\n            return null; // treat empty values as no image\n        return new ResolvedImage({ name, available: false });\n    }\n}\n\nclass ProjectionDefinition {\n    constructor(from, to, transition) {\n        this.from = from;\n        this.to = to;\n        this.transition = transition;\n    }\n    static interpolate(from, to, t) {\n        return new ProjectionDefinition(from, to, t);\n    }\n    static parse(input) {\n        if (input instanceof ProjectionDefinition) {\n            return input;\n        }\n        if (Array.isArray(input) && input.length === 3 && typeof input[0] === 'string' && typeof input[1] === 'string' && typeof input[2] === 'number') {\n            return new ProjectionDefinition(input[0], input[1], input[2]);\n        }\n        if (typeof input === 'object' && typeof input.from === 'string' && typeof input.to === 'string' && typeof input.transition === 'number') {\n            return new ProjectionDefinition(input.from, input.to, input.transition);\n        }\n        if (typeof input === 'string') {\n            return new ProjectionDefinition(input, input, 1);\n        }\n        return undefined;\n    }\n}\n\nfunction validateRGBA(r, g, b, a) {\n    if (!(typeof r === 'number' && r >= 0 && r <= 255 &&\n        typeof g === 'number' && g >= 0 && g <= 255 &&\n        typeof b === 'number' && b >= 0 && b <= 255)) {\n        const value = typeof a === 'number' ? [r, g, b, a] : [r, g, b];\n        return `Invalid rgba value [${value.join(', ')}]: 'r', 'g', and 'b' must be between 0 and 255.`;\n    }\n    if (!(typeof a === 'undefined' || (typeof a === 'number' && a >= 0 && a <= 1))) {\n        return `Invalid rgba value [${[r, g, b, a].join(', ')}]: 'a' must be between 0 and 1.`;\n    }\n    return null;\n}\nfunction isValue(mixed) {\n    if (mixed === null ||\n        typeof mixed === 'string' ||\n        typeof mixed === 'boolean' ||\n        typeof mixed === 'number' ||\n        mixed instanceof ProjectionDefinition ||\n        mixed instanceof Color ||\n        mixed instanceof Collator ||\n        mixed instanceof Formatted ||\n        mixed instanceof Padding ||\n        mixed instanceof VariableAnchorOffsetCollection ||\n        mixed instanceof ResolvedImage) {\n        return true;\n    }\n    else if (Array.isArray(mixed)) {\n        for (const item of mixed) {\n            if (!isValue(item)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    else if (typeof mixed === 'object') {\n        for (const key in mixed) {\n            if (!isValue(mixed[key])) {\n                return false;\n            }\n        }\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nfunction typeOf(value) {\n    if (value === null) {\n        return NullType;\n    }\n    else if (typeof value === 'string') {\n        return StringType;\n    }\n    else if (typeof value === 'boolean') {\n        return BooleanType;\n    }\n    else if (typeof value === 'number') {\n        return NumberType;\n    }\n    else if (value instanceof Color) {\n        return ColorType;\n    }\n    else if (value instanceof ProjectionDefinition) {\n        return ProjectionDefinitionType;\n    }\n    else if (value instanceof Collator) {\n        return CollatorType;\n    }\n    else if (value instanceof Formatted) {\n        return FormattedType;\n    }\n    else if (value instanceof Padding) {\n        return PaddingType;\n    }\n    else if (value instanceof VariableAnchorOffsetCollection) {\n        return VariableAnchorOffsetCollectionType;\n    }\n    else if (value instanceof ResolvedImage) {\n        return ResolvedImageType;\n    }\n    else if (Array.isArray(value)) {\n        const length = value.length;\n        let itemType;\n        for (const item of value) {\n            const t = typeOf(item);\n            if (!itemType) {\n                itemType = t;\n            }\n            else if (itemType === t) {\n                continue;\n            }\n            else {\n                itemType = ValueType;\n                break;\n            }\n        }\n        return array(itemType || ValueType, length);\n    }\n    else {\n        return ObjectType;\n    }\n}\nfunction valueToString(value) {\n    const type = typeof value;\n    if (value === null) {\n        return '';\n    }\n    else if (type === 'string' || type === 'number' || type === 'boolean') {\n        return String(value);\n    }\n    else if (value instanceof Color || value instanceof ProjectionDefinition || value instanceof Formatted || value instanceof Padding || value instanceof VariableAnchorOffsetCollection || value instanceof ResolvedImage) {\n        return value.toString();\n    }\n    else {\n        return JSON.stringify(value);\n    }\n}\n\nclass Literal {\n    constructor(type, value) {\n        this.type = type;\n        this.value = value;\n    }\n    static parse(args, context) {\n        if (args.length !== 2)\n            return context.error(`'literal' expression requires exactly one argument, but found ${args.length - 1} instead.`);\n        if (!isValue(args[1]))\n            return context.error('invalid value');\n        const value = args[1];\n        let type = typeOf(value);\n        // special case: infer the item type if possible for zero-length arrays\n        const expected = context.expectedType;\n        if (type.kind === 'array' &&\n            type.N === 0 &&\n            expected &&\n            expected.kind === 'array' &&\n            (typeof expected.N !== 'number' || expected.N === 0)) {\n            type = expected;\n        }\n        return new Literal(type, value);\n    }\n    evaluate() {\n        return this.value;\n    }\n    eachChild() { }\n    outputDefined() {\n        return true;\n    }\n}\n\nconst types$1 = {\n    string: StringType,\n    number: NumberType,\n    boolean: BooleanType,\n    object: ObjectType\n};\nclass Assertion {\n    constructor(type, args) {\n        this.type = type;\n        this.args = args;\n    }\n    static parse(args, context) {\n        if (args.length < 2)\n            return context.error('Expected at least one argument.');\n        let i = 1;\n        let type;\n        const name = args[0];\n        if (name === 'array') {\n            let itemType;\n            if (args.length > 2) {\n                const type = args[1];\n                if (typeof type !== 'string' || !(type in types$1) || type === 'object')\n                    return context.error('The item type argument of \"array\" must be one of string, number, boolean', 1);\n                itemType = types$1[type];\n                i++;\n            }\n            else {\n                itemType = ValueType;\n            }\n            let N;\n            if (args.length > 3) {\n                if (args[2] !== null &&\n                    (typeof args[2] !== 'number' ||\n                        args[2] < 0 ||\n                        args[2] !== Math.floor(args[2]))) {\n                    return context.error('The length argument to \"array\" must be a positive integer literal', 2);\n                }\n                N = args[2];\n                i++;\n            }\n            type = array(itemType, N);\n        }\n        else {\n            if (!types$1[name])\n                throw new Error(`Types doesn't contain name = ${name}`);\n            type = types$1[name];\n        }\n        const parsed = [];\n        for (; i < args.length; i++) {\n            const input = context.parse(args[i], i, ValueType);\n            if (!input)\n                return null;\n            parsed.push(input);\n        }\n        return new Assertion(type, parsed);\n    }\n    evaluate(ctx) {\n        for (let i = 0; i < this.args.length; i++) {\n            const value = this.args[i].evaluate(ctx);\n            const error = checkSubtype(this.type, typeOf(value));\n            if (!error) {\n                return value;\n            }\n            else if (i === this.args.length - 1) {\n                throw new RuntimeError(`Expected value to be of type ${typeToString(this.type)}, but found ${typeToString(typeOf(value))} instead.`);\n            }\n        }\n        throw new Error();\n    }\n    eachChild(fn) {\n        this.args.forEach(fn);\n    }\n    outputDefined() {\n        return this.args.every(arg => arg.outputDefined());\n    }\n}\n\nconst types = {\n    'to-boolean': BooleanType,\n    'to-color': ColorType,\n    'to-number': NumberType,\n    'to-string': StringType\n};\n/**\n * Special form for error-coalescing coercion expressions \"to-number\",\n * \"to-color\".  Since these coercions can fail at runtime, they accept multiple\n * arguments, only evaluating one at a time until one succeeds.\n *\n * @private\n */\nclass Coercion {\n    constructor(type, args) {\n        this.type = type;\n        this.args = args;\n    }\n    static parse(args, context) {\n        if (args.length < 2)\n            return context.error('Expected at least one argument.');\n        const name = args[0];\n        if (!types[name])\n            throw new Error(`Can't parse ${name} as it is not part of the known types`);\n        if ((name === 'to-boolean' || name === 'to-string') && args.length !== 2)\n            return context.error('Expected one argument.');\n        const type = types[name];\n        const parsed = [];\n        for (let i = 1; i < args.length; i++) {\n            const input = context.parse(args[i], i, ValueType);\n            if (!input)\n                return null;\n            parsed.push(input);\n        }\n        return new Coercion(type, parsed);\n    }\n    evaluate(ctx) {\n        switch (this.type.kind) {\n            case 'boolean':\n                return Boolean(this.args[0].evaluate(ctx));\n            case 'color': {\n                let input;\n                let error;\n                for (const arg of this.args) {\n                    input = arg.evaluate(ctx);\n                    error = null;\n                    if (input instanceof Color) {\n                        return input;\n                    }\n                    else if (typeof input === 'string') {\n                        const c = ctx.parseColor(input);\n                        if (c)\n                            return c;\n                    }\n                    else if (Array.isArray(input)) {\n                        if (input.length < 3 || input.length > 4) {\n                            error = `Invalid rgba value ${JSON.stringify(input)}: expected an array containing either three or four numeric values.`;\n                        }\n                        else {\n                            error = validateRGBA(input[0], input[1], input[2], input[3]);\n                        }\n                        if (!error) {\n                            return new Color(input[0] / 255, input[1] / 255, input[2] / 255, input[3]);\n                        }\n                    }\n                }\n                throw new RuntimeError(error || `Could not parse color from value '${typeof input === 'string' ? input : JSON.stringify(input)}'`);\n            }\n            case 'padding': {\n                let input;\n                for (const arg of this.args) {\n                    input = arg.evaluate(ctx);\n                    const pad = Padding.parse(input);\n                    if (pad) {\n                        return pad;\n                    }\n                }\n                throw new RuntimeError(`Could not parse padding from value '${typeof input === 'string' ? input : JSON.stringify(input)}'`);\n            }\n            case 'variableAnchorOffsetCollection': {\n                let input;\n                for (const arg of this.args) {\n                    input = arg.evaluate(ctx);\n                    const coll = VariableAnchorOffsetCollection.parse(input);\n                    if (coll) {\n                        return coll;\n                    }\n                }\n                throw new RuntimeError(`Could not parse variableAnchorOffsetCollection from value '${typeof input === 'string' ? input : JSON.stringify(input)}'`);\n            }\n            case 'number': {\n                let value = null;\n                for (const arg of this.args) {\n                    value = arg.evaluate(ctx);\n                    if (value === null)\n                        return 0;\n                    const num = Number(value);\n                    if (isNaN(num))\n                        continue;\n                    return num;\n                }\n                throw new RuntimeError(`Could not convert ${JSON.stringify(value)} to number.`);\n            }\n            case 'formatted':\n                // There is no explicit 'to-formatted' but this coercion can be implicitly\n                // created by properties that expect the 'formatted' type.\n                return Formatted.fromString(valueToString(this.args[0].evaluate(ctx)));\n            case 'resolvedImage':\n                return ResolvedImage.fromString(valueToString(this.args[0].evaluate(ctx)));\n            case 'projectionDefinition':\n                return this.args[0].evaluate(ctx);\n            default:\n                return valueToString(this.args[0].evaluate(ctx));\n        }\n    }\n    eachChild(fn) {\n        this.args.forEach(fn);\n    }\n    outputDefined() {\n        return this.args.every(arg => arg.outputDefined());\n    }\n}\n\nconst geometryTypes = ['Unknown', 'Point', 'LineString', 'Polygon'];\nclass EvaluationContext {\n    constructor() {\n        this.globals = null;\n        this.feature = null;\n        this.featureState = null;\n        this.formattedSection = null;\n        this._parseColorCache = {};\n        this.availableImages = null;\n        this.canonical = null;\n    }\n    id() {\n        return this.feature && 'id' in this.feature ? this.feature.id : null;\n    }\n    geometryType() {\n        return this.feature ? typeof this.feature.type === 'number' ? geometryTypes[this.feature.type] : this.feature.type : null;\n    }\n    geometry() {\n        return this.feature && 'geometry' in this.feature ? this.feature.geometry : null;\n    }\n    canonicalID() {\n        return this.canonical;\n    }\n    properties() {\n        return this.feature && this.feature.properties || {};\n    }\n    parseColor(input) {\n        let cached = this._parseColorCache[input];\n        if (!cached) {\n            cached = this._parseColorCache[input] = Color.parse(input);\n        }\n        return cached;\n    }\n}\n\n/**\n * State associated parsing at a given point in an expression tree.\n * @private\n */\nclass ParsingContext {\n    constructor(registry, isConstantFunc, path = [], expectedType, scope = new Scope(), errors = []) {\n        this.registry = registry;\n        this.path = path;\n        this.key = path.map(part => `[${part}]`).join('');\n        this.scope = scope;\n        this.errors = errors;\n        this.expectedType = expectedType;\n        this._isConstant = isConstantFunc;\n    }\n    /**\n     * @param expr the JSON expression to parse\n     * @param index the optional argument index if this expression is an argument of a parent expression that's being parsed\n     * @param options\n     * @param options.omitTypeAnnotations set true to omit inferred type annotations.  Caller beware: with this option set, the parsed expression's type will NOT satisfy `expectedType` if it would normally be wrapped in an inferred annotation.\n     * @private\n     */\n    parse(expr, index, expectedType, bindings, options = {}) {\n        if (index) {\n            return this.concat(index, expectedType, bindings)._parse(expr, options);\n        }\n        return this._parse(expr, options);\n    }\n    _parse(expr, options) {\n        if (expr === null || typeof expr === 'string' || typeof expr === 'boolean' || typeof expr === 'number') {\n            expr = ['literal', expr];\n        }\n        function annotate(parsed, type, typeAnnotation) {\n            if (typeAnnotation === 'assert') {\n                return new Assertion(type, [parsed]);\n            }\n            else if (typeAnnotation === 'coerce') {\n                return new Coercion(type, [parsed]);\n            }\n            else {\n                return parsed;\n            }\n        }\n        if (Array.isArray(expr)) {\n            if (expr.length === 0) {\n                return this.error('Expected an array with at least one element. If you wanted a literal array, use [\"literal\", []].');\n            }\n            const op = expr[0];\n            if (typeof op !== 'string') {\n                this.error(`Expression name must be a string, but found ${typeof op} instead. If you wanted a literal array, use [\"literal\", [...]].`, 0);\n                return null;\n            }\n            const Expr = this.registry[op];\n            if (Expr) {\n                let parsed = Expr.parse(expr, this);\n                if (!parsed)\n                    return null;\n                if (this.expectedType) {\n                    const expected = this.expectedType;\n                    const actual = parsed.type;\n                    // When we expect a number, string, boolean, or array but have a value, wrap it in an assertion.\n                    // When we expect a color or formatted string, but have a string or value, wrap it in a coercion.\n                    // Otherwise, we do static type-checking.\n                    //\n                    // These behaviors are overridable for:\n                    //   * The \"coalesce\" operator, which needs to omit type annotations.\n                    //   * String-valued properties (e.g. `text-field`), where coercion is more convenient than assertion.\n                    //\n                    if ((expected.kind === 'string' || expected.kind === 'number' || expected.kind === 'boolean' || expected.kind === 'object' || expected.kind === 'array') && actual.kind === 'value') {\n                        parsed = annotate(parsed, expected, options.typeAnnotation || 'assert');\n                    }\n                    else if ((expected.kind === 'projectionDefinition') && (actual.kind === 'string' || actual.kind === 'array')) {\n                        parsed = annotate(parsed, expected, options.typeAnnotation || 'coerce');\n                    }\n                    else if ((expected.kind === 'color' || expected.kind === 'formatted' || expected.kind === 'resolvedImage') && (actual.kind === 'value' || actual.kind === 'string')) {\n                        parsed = annotate(parsed, expected, options.typeAnnotation || 'coerce');\n                    }\n                    else if (expected.kind === 'padding' && (actual.kind === 'value' || actual.kind === 'number' || actual.kind === 'array')) {\n                        parsed = annotate(parsed, expected, options.typeAnnotation || 'coerce');\n                    }\n                    else if (expected.kind === 'variableAnchorOffsetCollection' && (actual.kind === 'value' || actual.kind === 'array')) {\n                        parsed = annotate(parsed, expected, options.typeAnnotation || 'coerce');\n                    }\n                    else if (this.checkSubtype(expected, actual)) {\n                        return null;\n                    }\n                }\n                // If an expression's arguments are all literals, we can evaluate\n                // it immediately and replace it with a literal value in the\n                // parsed/compiled result. Expressions that expect an image should\n                // not be resolved here so we can later get the available images.\n                if (!(parsed instanceof Literal) && (parsed.type.kind !== 'resolvedImage') && this._isConstant(parsed)) {\n                    const ec = new EvaluationContext();\n                    try {\n                        parsed = new Literal(parsed.type, parsed.evaluate(ec));\n                    }\n                    catch (e) {\n                        this.error(e.message);\n                        return null;\n                    }\n                }\n                return parsed;\n            }\n            return this.error(`Unknown expression \"${op}\". If you wanted a literal array, use [\"literal\", [...]].`, 0);\n        }\n        else if (typeof expr === 'undefined') {\n            return this.error('\\'undefined\\' value invalid. Use null instead.');\n        }\n        else if (typeof expr === 'object') {\n            return this.error('Bare objects invalid. Use [\"literal\", {...}] instead.');\n        }\n        else {\n            return this.error(`Expected an array, but found ${typeof expr} instead.`);\n        }\n    }\n    /**\n     * Returns a copy of this context suitable for parsing the subexpression at\n     * index `index`, optionally appending to 'let' binding map.\n     *\n     * Note that `errors` property, intended for collecting errors while\n     * parsing, is copied by reference rather than cloned.\n     * @private\n     */\n    concat(index, expectedType, bindings) {\n        const path = typeof index === 'number' ? this.path.concat(index) : this.path;\n        const scope = bindings ? this.scope.concat(bindings) : this.scope;\n        return new ParsingContext(this.registry, this._isConstant, path, expectedType || null, scope, this.errors);\n    }\n    /**\n     * Push a parsing (or type checking) error into the `this.errors`\n     * @param error The message\n     * @param keys Optionally specify the source of the error at a child\n     * of the current expression at `this.key`.\n     * @private\n     */\n    error(error, ...keys) {\n        const key = `${this.key}${keys.map(k => `[${k}]`).join('')}`;\n        this.errors.push(new ExpressionParsingError(key, error));\n    }\n    /**\n     * Returns null if `t` is a subtype of `expected`; otherwise returns an\n     * error message and also pushes it to `this.errors`.\n     * @param expected The expected type\n     * @param t The actual type\n     * @returns null if `t` is a subtype of `expected`; otherwise returns an error message\n     */\n    checkSubtype(expected, t) {\n        const error = checkSubtype(expected, t);\n        if (error)\n            this.error(error);\n        return error;\n    }\n}\n\nclass Let {\n    constructor(bindings, result) {\n        this.type = result.type;\n        this.bindings = [].concat(bindings);\n        this.result = result;\n    }\n    evaluate(ctx) {\n        return this.result.evaluate(ctx);\n    }\n    eachChild(fn) {\n        for (const binding of this.bindings) {\n            fn(binding[1]);\n        }\n        fn(this.result);\n    }\n    static parse(args, context) {\n        if (args.length < 4)\n            return context.error(`Expected at least 3 arguments, but found ${args.length - 1} instead.`);\n        const bindings = [];\n        for (let i = 1; i < args.length - 1; i += 2) {\n            const name = args[i];\n            if (typeof name !== 'string') {\n                return context.error(`Expected string, but found ${typeof name} instead.`, i);\n            }\n            if (/[^a-zA-Z0-9_]/.test(name)) {\n                return context.error('Variable names must contain only alphanumeric characters or \\'_\\'.', i);\n            }\n            const value = context.parse(args[i + 1], i + 1);\n            if (!value)\n                return null;\n            bindings.push([name, value]);\n        }\n        const result = context.parse(args[args.length - 1], args.length - 1, context.expectedType, bindings);\n        if (!result)\n            return null;\n        return new Let(bindings, result);\n    }\n    outputDefined() {\n        return this.result.outputDefined();\n    }\n}\n\nclass Var {\n    constructor(name, boundExpression) {\n        this.type = boundExpression.type;\n        this.name = name;\n        this.boundExpression = boundExpression;\n    }\n    static parse(args, context) {\n        if (args.length !== 2 || typeof args[1] !== 'string')\n            return context.error('\\'var\\' expression requires exactly one string literal argument.');\n        const name = args[1];\n        if (!context.scope.has(name)) {\n            return context.error(`Unknown variable \"${name}\". Make sure \"${name}\" has been bound in an enclosing \"let\" expression before using it.`, 1);\n        }\n        return new Var(name, context.scope.get(name));\n    }\n    evaluate(ctx) {\n        return this.boundExpression.evaluate(ctx);\n    }\n    eachChild() { }\n    outputDefined() {\n        return false;\n    }\n}\n\nclass At {\n    constructor(type, index, input) {\n        this.type = type;\n        this.index = index;\n        this.input = input;\n    }\n    static parse(args, context) {\n        if (args.length !== 3)\n            return context.error(`Expected 2 arguments, but found ${args.length - 1} instead.`);\n        const index = context.parse(args[1], 1, NumberType);\n        const input = context.parse(args[2], 2, array(context.expectedType || ValueType));\n        if (!index || !input)\n            return null;\n        const t = input.type;\n        return new At(t.itemType, index, input);\n    }\n    evaluate(ctx) {\n        const index = this.index.evaluate(ctx);\n        const array = this.input.evaluate(ctx);\n        if (index < 0) {\n            throw new RuntimeError(`Array index out of bounds: ${index} < 0.`);\n        }\n        if (index >= array.length) {\n            throw new RuntimeError(`Array index out of bounds: ${index} > ${array.length - 1}.`);\n        }\n        if (index !== Math.floor(index)) {\n            throw new RuntimeError(`Array index must be an integer, but found ${index} instead.`);\n        }\n        return array[index];\n    }\n    eachChild(fn) {\n        fn(this.index);\n        fn(this.input);\n    }\n    outputDefined() {\n        return false;\n    }\n}\n\nclass In {\n    constructor(needle, haystack) {\n        this.type = BooleanType;\n        this.needle = needle;\n        this.haystack = haystack;\n    }\n    static parse(args, context) {\n        if (args.length !== 3) {\n            return context.error(`Expected 2 arguments, but found ${args.length - 1} instead.`);\n        }\n        const needle = context.parse(args[1], 1, ValueType);\n        const haystack = context.parse(args[2], 2, ValueType);\n        if (!needle || !haystack)\n            return null;\n        if (!isValidType(needle.type, [BooleanType, StringType, NumberType, NullType, ValueType])) {\n            return context.error(`Expected first argument to be of type boolean, string, number or null, but found ${typeToString(needle.type)} instead`);\n        }\n        return new In(needle, haystack);\n    }\n    evaluate(ctx) {\n        const needle = this.needle.evaluate(ctx);\n        const haystack = this.haystack.evaluate(ctx);\n        if (!haystack)\n            return false;\n        if (!isValidNativeType(needle, ['boolean', 'string', 'number', 'null'])) {\n            throw new RuntimeError(`Expected first argument to be of type boolean, string, number or null, but found ${typeToString(typeOf(needle))} instead.`);\n        }\n        if (!isValidNativeType(haystack, ['string', 'array'])) {\n            throw new RuntimeError(`Expected second argument to be of type array or string, but found ${typeToString(typeOf(haystack))} instead.`);\n        }\n        return haystack.indexOf(needle) >= 0;\n    }\n    eachChild(fn) {\n        fn(this.needle);\n        fn(this.haystack);\n    }\n    outputDefined() {\n        return true;\n    }\n}\n\nclass IndexOf {\n    constructor(needle, haystack, fromIndex) {\n        this.type = NumberType;\n        this.needle = needle;\n        this.haystack = haystack;\n        this.fromIndex = fromIndex;\n    }\n    static parse(args, context) {\n        if (args.length <= 2 || args.length >= 5) {\n            return context.error(`Expected 3 or 4 arguments, but found ${args.length - 1} instead.`);\n        }\n        const needle = context.parse(args[1], 1, ValueType);\n        const haystack = context.parse(args[2], 2, ValueType);\n        if (!needle || !haystack)\n            return null;\n        if (!isValidType(needle.type, [BooleanType, StringType, NumberType, NullType, ValueType])) {\n            return context.error(`Expected first argument to be of type boolean, string, number or null, but found ${typeToString(needle.type)} instead`);\n        }\n        if (args.length === 4) {\n            const fromIndex = context.parse(args[3], 3, NumberType);\n            if (!fromIndex)\n                return null;\n            return new IndexOf(needle, haystack, fromIndex);\n        }\n        else {\n            return new IndexOf(needle, haystack);\n        }\n    }\n    evaluate(ctx) {\n        const needle = this.needle.evaluate(ctx);\n        const haystack = this.haystack.evaluate(ctx);\n        if (!isValidNativeType(needle, ['boolean', 'string', 'number', 'null'])) {\n            throw new RuntimeError(`Expected first argument to be of type boolean, string, number or null, but found ${typeToString(typeOf(needle))} instead.`);\n        }\n        let fromIndex;\n        if (this.fromIndex) {\n            fromIndex = this.fromIndex.evaluate(ctx);\n        }\n        if (isValidNativeType(haystack, ['string'])) {\n            const rawIndex = haystack.indexOf(needle, fromIndex);\n            if (rawIndex === -1) {\n                return -1;\n            }\n            else {\n                // The index may be affected by surrogate pairs, so get the length of the preceding substring.\n                return [...haystack.slice(0, rawIndex)].length;\n            }\n        }\n        else if (isValidNativeType(haystack, ['array'])) {\n            return haystack.indexOf(needle, fromIndex);\n        }\n        else {\n            throw new RuntimeError(`Expected second argument to be of type array or string, but found ${typeToString(typeOf(haystack))} instead.`);\n        }\n    }\n    eachChild(fn) {\n        fn(this.needle);\n        fn(this.haystack);\n        if (this.fromIndex) {\n            fn(this.fromIndex);\n        }\n    }\n    outputDefined() {\n        return false;\n    }\n}\n\nclass Match {\n    constructor(inputType, outputType, input, cases, outputs, otherwise) {\n        this.inputType = inputType;\n        this.type = outputType;\n        this.input = input;\n        this.cases = cases;\n        this.outputs = outputs;\n        this.otherwise = otherwise;\n    }\n    static parse(args, context) {\n        if (args.length < 5)\n            return context.error(`Expected at least 4 arguments, but found only ${args.length - 1}.`);\n        if (args.length % 2 !== 1)\n            return context.error('Expected an even number of arguments.');\n        let inputType;\n        let outputType;\n        if (context.expectedType && context.expectedType.kind !== 'value') {\n            outputType = context.expectedType;\n        }\n        const cases = {};\n        const outputs = [];\n        for (let i = 2; i < args.length - 1; i += 2) {\n            let labels = args[i];\n            const value = args[i + 1];\n            if (!Array.isArray(labels)) {\n                labels = [labels];\n            }\n            const labelContext = context.concat(i);\n            if (labels.length === 0) {\n                return labelContext.error('Expected at least one branch label.');\n            }\n            for (const label of labels) {\n                if (typeof label !== 'number' && typeof label !== 'string') {\n                    return labelContext.error('Branch labels must be numbers or strings.');\n                }\n                else if (typeof label === 'number' && Math.abs(label) > Number.MAX_SAFE_INTEGER) {\n                    return labelContext.error(`Branch labels must be integers no larger than ${Number.MAX_SAFE_INTEGER}.`);\n                }\n                else if (typeof label === 'number' && Math.floor(label) !== label) {\n                    return labelContext.error('Numeric branch labels must be integer values.');\n                }\n                else if (!inputType) {\n                    inputType = typeOf(label);\n                }\n                else if (labelContext.checkSubtype(inputType, typeOf(label))) {\n                    return null;\n                }\n                if (typeof cases[String(label)] !== 'undefined') {\n                    return labelContext.error('Branch labels must be unique.');\n                }\n                cases[String(label)] = outputs.length;\n            }\n            const result = context.parse(value, i, outputType);\n            if (!result)\n                return null;\n            outputType = outputType || result.type;\n            outputs.push(result);\n        }\n        const input = context.parse(args[1], 1, ValueType);\n        if (!input)\n            return null;\n        const otherwise = context.parse(args[args.length - 1], args.length - 1, outputType);\n        if (!otherwise)\n            return null;\n        if (input.type.kind !== 'value' && context.concat(1).checkSubtype(inputType, input.type)) {\n            return null;\n        }\n        return new Match(inputType, outputType, input, cases, outputs, otherwise);\n    }\n    evaluate(ctx) {\n        const input = this.input.evaluate(ctx);\n        const output = (typeOf(input) === this.inputType && this.outputs[this.cases[input]]) || this.otherwise;\n        return output.evaluate(ctx);\n    }\n    eachChild(fn) {\n        fn(this.input);\n        this.outputs.forEach(fn);\n        fn(this.otherwise);\n    }\n    outputDefined() {\n        return this.outputs.every(out => out.outputDefined()) && this.otherwise.outputDefined();\n    }\n}\n\nclass Case {\n    constructor(type, branches, otherwise) {\n        this.type = type;\n        this.branches = branches;\n        this.otherwise = otherwise;\n    }\n    static parse(args, context) {\n        if (args.length < 4)\n            return context.error(`Expected at least 3 arguments, but found only ${args.length - 1}.`);\n        if (args.length % 2 !== 0)\n            return context.error('Expected an odd number of arguments.');\n        let outputType;\n        if (context.expectedType && context.expectedType.kind !== 'value') {\n            outputType = context.expectedType;\n        }\n        const branches = [];\n        for (let i = 1; i < args.length - 1; i += 2) {\n            const test = context.parse(args[i], i, BooleanType);\n            if (!test)\n                return null;\n            const result = context.parse(args[i + 1], i + 1, outputType);\n            if (!result)\n                return null;\n            branches.push([test, result]);\n            outputType = outputType || result.type;\n        }\n        const otherwise = context.parse(args[args.length - 1], args.length - 1, outputType);\n        if (!otherwise)\n            return null;\n        if (!outputType)\n            throw new Error('Can\\'t infer output type');\n        return new Case(outputType, branches, otherwise);\n    }\n    evaluate(ctx) {\n        for (const [test, expression] of this.branches) {\n            if (test.evaluate(ctx)) {\n                return expression.evaluate(ctx);\n            }\n        }\n        return this.otherwise.evaluate(ctx);\n    }\n    eachChild(fn) {\n        for (const [test, expression] of this.branches) {\n            fn(test);\n            fn(expression);\n        }\n        fn(this.otherwise);\n    }\n    outputDefined() {\n        return this.branches.every(([_, out]) => out.outputDefined()) && this.otherwise.outputDefined();\n    }\n}\n\nclass Slice {\n    constructor(type, input, beginIndex, endIndex) {\n        this.type = type;\n        this.input = input;\n        this.beginIndex = beginIndex;\n        this.endIndex = endIndex;\n    }\n    static parse(args, context) {\n        if (args.length <= 2 || args.length >= 5) {\n            return context.error(`Expected 3 or 4 arguments, but found ${args.length - 1} instead.`);\n        }\n        const input = context.parse(args[1], 1, ValueType);\n        const beginIndex = context.parse(args[2], 2, NumberType);\n        if (!input || !beginIndex)\n            return null;\n        if (!isValidType(input.type, [array(ValueType), StringType, ValueType])) {\n            return context.error(`Expected first argument to be of type array or string, but found ${typeToString(input.type)} instead`);\n        }\n        if (args.length === 4) {\n            const endIndex = context.parse(args[3], 3, NumberType);\n            if (!endIndex)\n                return null;\n            return new Slice(input.type, input, beginIndex, endIndex);\n        }\n        else {\n            return new Slice(input.type, input, beginIndex);\n        }\n    }\n    evaluate(ctx) {\n        const input = this.input.evaluate(ctx);\n        const beginIndex = this.beginIndex.evaluate(ctx);\n        let endIndex;\n        if (this.endIndex) {\n            endIndex = this.endIndex.evaluate(ctx);\n        }\n        if (isValidNativeType(input, ['string'])) {\n            // Indices may be affected by surrogate pairs.\n            return [...input].slice(beginIndex, endIndex).join('');\n        }\n        else if (isValidNativeType(input, ['array'])) {\n            return input.slice(beginIndex, endIndex);\n        }\n        else {\n            throw new RuntimeError(`Expected first argument to be of type array or string, but found ${typeToString(typeOf(input))} instead.`);\n        }\n    }\n    eachChild(fn) {\n        fn(this.input);\n        fn(this.beginIndex);\n        if (this.endIndex) {\n            fn(this.endIndex);\n        }\n    }\n    outputDefined() {\n        return false;\n    }\n}\n\n/**\n * Returns the index of the last stop <= input, or 0 if it doesn't exist.\n * @private\n */\nfunction findStopLessThanOrEqualTo(stops, input) {\n    const lastIndex = stops.length - 1;\n    let lowerIndex = 0;\n    let upperIndex = lastIndex;\n    let currentIndex = 0;\n    let currentValue, nextValue;\n    while (lowerIndex <= upperIndex) {\n        currentIndex = Math.floor((lowerIndex + upperIndex) / 2);\n        currentValue = stops[currentIndex];\n        nextValue = stops[currentIndex + 1];\n        if (currentValue <= input) {\n            if (currentIndex === lastIndex || input < nextValue) { // Search complete\n                return currentIndex;\n            }\n            lowerIndex = currentIndex + 1;\n        }\n        else if (currentValue > input) {\n            upperIndex = currentIndex - 1;\n        }\n        else {\n            throw new RuntimeError('Input is not a number.');\n        }\n    }\n    return 0;\n}\n\nclass Step {\n    constructor(type, input, stops) {\n        this.type = type;\n        this.input = input;\n        this.labels = [];\n        this.outputs = [];\n        for (const [label, expression] of stops) {\n            this.labels.push(label);\n            this.outputs.push(expression);\n        }\n    }\n    static parse(args, context) {\n        if (args.length - 1 < 4) {\n            return context.error(`Expected at least 4 arguments, but found only ${args.length - 1}.`);\n        }\n        if ((args.length - 1) % 2 !== 0) {\n            return context.error('Expected an even number of arguments.');\n        }\n        const input = context.parse(args[1], 1, NumberType);\n        if (!input)\n            return null;\n        const stops = [];\n        let outputType = null;\n        if (context.expectedType && context.expectedType.kind !== 'value') {\n            outputType = context.expectedType;\n        }\n        for (let i = 1; i < args.length; i += 2) {\n            const label = i === 1 ? -Infinity : args[i];\n            const value = args[i + 1];\n            const labelKey = i;\n            const valueKey = i + 1;\n            if (typeof label !== 'number') {\n                return context.error('Input/output pairs for \"step\" expressions must be defined using literal numeric values (not computed expressions) for the input values.', labelKey);\n            }\n            if (stops.length && stops[stops.length - 1][0] >= label) {\n                return context.error('Input/output pairs for \"step\" expressions must be arranged with input values in strictly ascending order.', labelKey);\n            }\n            const parsed = context.parse(value, valueKey, outputType);\n            if (!parsed)\n                return null;\n            outputType = outputType || parsed.type;\n            stops.push([label, parsed]);\n        }\n        return new Step(outputType, input, stops);\n    }\n    evaluate(ctx) {\n        const labels = this.labels;\n        const outputs = this.outputs;\n        if (labels.length === 1) {\n            return outputs[0].evaluate(ctx);\n        }\n        const value = this.input.evaluate(ctx);\n        if (value <= labels[0]) {\n            return outputs[0].evaluate(ctx);\n        }\n        const stopCount = labels.length;\n        if (value >= labels[stopCount - 1]) {\n            return outputs[stopCount - 1].evaluate(ctx);\n        }\n        const index = findStopLessThanOrEqualTo(labels, value);\n        return outputs[index].evaluate(ctx);\n    }\n    eachChild(fn) {\n        fn(this.input);\n        for (const expression of this.outputs) {\n            fn(expression);\n        }\n    }\n    outputDefined() {\n        return this.outputs.every(out => out.outputDefined());\n    }\n}\n\nfunction getDefaultExportFromCjs (x) {\n\treturn x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;\n}\n\nvar unitbezier;\nvar hasRequiredUnitbezier;\n\nfunction requireUnitbezier () {\n\tif (hasRequiredUnitbezier) return unitbezier;\n\thasRequiredUnitbezier = 1;\n\n\tunitbezier = UnitBezier;\n\n\tfunction UnitBezier(p1x, p1y, p2x, p2y) {\n\t    // Calculate the polynomial coefficients, implicit first and last control points are (0,0) and (1,1).\n\t    this.cx = 3.0 * p1x;\n\t    this.bx = 3.0 * (p2x - p1x) - this.cx;\n\t    this.ax = 1.0 - this.cx - this.bx;\n\n\t    this.cy = 3.0 * p1y;\n\t    this.by = 3.0 * (p2y - p1y) - this.cy;\n\t    this.ay = 1.0 - this.cy - this.by;\n\n\t    this.p1x = p1x;\n\t    this.p1y = p1y;\n\t    this.p2x = p2x;\n\t    this.p2y = p2y;\n\t}\n\n\tUnitBezier.prototype = {\n\t    sampleCurveX: function (t) {\n\t        // `ax t^3 + bx t^2 + cx t' expanded using Horner's rule.\n\t        return ((this.ax * t + this.bx) * t + this.cx) * t;\n\t    },\n\n\t    sampleCurveY: function (t) {\n\t        return ((this.ay * t + this.by) * t + this.cy) * t;\n\t    },\n\n\t    sampleCurveDerivativeX: function (t) {\n\t        return (3.0 * this.ax * t + 2.0 * this.bx) * t + this.cx;\n\t    },\n\n\t    solveCurveX: function (x, epsilon) {\n\t        if (epsilon === undefined) epsilon = 1e-6;\n\n\t        if (x < 0.0) return 0.0;\n\t        if (x > 1.0) return 1.0;\n\n\t        var t = x;\n\n\t        // First try a few iterations of Newton's method - normally very fast.\n\t        for (var i = 0; i < 8; i++) {\n\t            var x2 = this.sampleCurveX(t) - x;\n\t            if (Math.abs(x2) < epsilon) return t;\n\n\t            var d2 = this.sampleCurveDerivativeX(t);\n\t            if (Math.abs(d2) < 1e-6) break;\n\n\t            t = t - x2 / d2;\n\t        }\n\n\t        // Fall back to the bisection method for reliability.\n\t        var t0 = 0.0;\n\t        var t1 = 1.0;\n\t        t = x;\n\n\t        for (i = 0; i < 20; i++) {\n\t            x2 = this.sampleCurveX(t);\n\t            if (Math.abs(x2 - x) < epsilon) break;\n\n\t            if (x > x2) {\n\t                t0 = t;\n\t            } else {\n\t                t1 = t;\n\t            }\n\n\t            t = (t1 - t0) * 0.5 + t0;\n\t        }\n\n\t        return t;\n\t    },\n\n\t    solve: function (x, epsilon) {\n\t        return this.sampleCurveY(this.solveCurveX(x, epsilon));\n\t    }\n\t};\n\treturn unitbezier;\n}\n\nvar unitbezierExports = requireUnitbezier();\nvar UnitBezier = /*@__PURE__*/getDefaultExportFromCjs(unitbezierExports);\n\nclass Interpolate {\n    constructor(type, operator, interpolation, input, stops) {\n        this.type = type;\n        this.operator = operator;\n        this.interpolation = interpolation;\n        this.input = input;\n        this.labels = [];\n        this.outputs = [];\n        for (const [label, expression] of stops) {\n            this.labels.push(label);\n            this.outputs.push(expression);\n        }\n    }\n    static interpolationFactor(interpolation, input, lower, upper) {\n        let t = 0;\n        if (interpolation.name === 'exponential') {\n            t = exponentialInterpolation(input, interpolation.base, lower, upper);\n        }\n        else if (interpolation.name === 'linear') {\n            t = exponentialInterpolation(input, 1, lower, upper);\n        }\n        else if (interpolation.name === 'cubic-bezier') {\n            const c = interpolation.controlPoints;\n            const ub = new UnitBezier(c[0], c[1], c[2], c[3]);\n            t = ub.solve(exponentialInterpolation(input, 1, lower, upper));\n        }\n        return t;\n    }\n    static parse(args, context) {\n        let [operator, interpolation, input, ...rest] = args;\n        if (!Array.isArray(interpolation) || interpolation.length === 0) {\n            return context.error('Expected an interpolation type expression.', 1);\n        }\n        if (interpolation[0] === 'linear') {\n            interpolation = { name: 'linear' };\n        }\n        else if (interpolation[0] === 'exponential') {\n            const base = interpolation[1];\n            if (typeof base !== 'number')\n                return context.error('Exponential interpolation requires a numeric base.', 1, 1);\n            interpolation = {\n                name: 'exponential',\n                base\n            };\n        }\n        else if (interpolation[0] === 'cubic-bezier') {\n            const controlPoints = interpolation.slice(1);\n            if (controlPoints.length !== 4 ||\n                controlPoints.some(t => typeof t !== 'number' || t < 0 || t > 1)) {\n                return context.error('Cubic bezier interpolation requires four numeric arguments with values between 0 and 1.', 1);\n            }\n            interpolation = {\n                name: 'cubic-bezier',\n                controlPoints: controlPoints\n            };\n        }\n        else {\n            return context.error(`Unknown interpolation type ${String(interpolation[0])}`, 1, 0);\n        }\n        if (args.length - 1 < 4) {\n            return context.error(`Expected at least 4 arguments, but found only ${args.length - 1}.`);\n        }\n        if ((args.length - 1) % 2 !== 0) {\n            return context.error('Expected an even number of arguments.');\n        }\n        input = context.parse(input, 2, NumberType);\n        if (!input)\n            return null;\n        const stops = [];\n        let outputType = null;\n        if (operator === 'interpolate-hcl' || operator === 'interpolate-lab') {\n            outputType = ColorType;\n        }\n        else if (context.expectedType && context.expectedType.kind !== 'value') {\n            outputType = context.expectedType;\n        }\n        for (let i = 0; i < rest.length; i += 2) {\n            const label = rest[i];\n            const value = rest[i + 1];\n            const labelKey = i + 3;\n            const valueKey = i + 4;\n            if (typeof label !== 'number') {\n                return context.error('Input/output pairs for \"interpolate\" expressions must be defined using literal numeric values (not computed expressions) for the input values.', labelKey);\n            }\n            if (stops.length && stops[stops.length - 1][0] >= label) {\n                return context.error('Input/output pairs for \"interpolate\" expressions must be arranged with input values in strictly ascending order.', labelKey);\n            }\n            const parsed = context.parse(value, valueKey, outputType);\n            if (!parsed)\n                return null;\n            outputType = outputType || parsed.type;\n            stops.push([label, parsed]);\n        }\n        if (!verifyType(outputType, NumberType) &&\n            !verifyType(outputType, ProjectionDefinitionType) &&\n            !verifyType(outputType, ColorType) &&\n            !verifyType(outputType, PaddingType) &&\n            !verifyType(outputType, VariableAnchorOffsetCollectionType) &&\n            !verifyType(outputType, array(NumberType))) {\n            return context.error(`Type ${typeToString(outputType)} is not interpolatable.`);\n        }\n        return new Interpolate(outputType, operator, interpolation, input, stops);\n    }\n    evaluate(ctx) {\n        const labels = this.labels;\n        const outputs = this.outputs;\n        if (labels.length === 1) {\n            return outputs[0].evaluate(ctx);\n        }\n        const value = this.input.evaluate(ctx);\n        if (value <= labels[0]) {\n            return outputs[0].evaluate(ctx);\n        }\n        const stopCount = labels.length;\n        if (value >= labels[stopCount - 1]) {\n            return outputs[stopCount - 1].evaluate(ctx);\n        }\n        const index = findStopLessThanOrEqualTo(labels, value);\n        const lower = labels[index];\n        const upper = labels[index + 1];\n        const t = Interpolate.interpolationFactor(this.interpolation, value, lower, upper);\n        const outputLower = outputs[index].evaluate(ctx);\n        const outputUpper = outputs[index + 1].evaluate(ctx);\n        switch (this.operator) {\n            case 'interpolate':\n                switch (this.type.kind) {\n                    case 'number':\n                        return interpolateNumber(outputLower, outputUpper, t);\n                    case 'color':\n                        return Color.interpolate(outputLower, outputUpper, t);\n                    case 'padding':\n                        return Padding.interpolate(outputLower, outputUpper, t);\n                    case 'variableAnchorOffsetCollection':\n                        return VariableAnchorOffsetCollection.interpolate(outputLower, outputUpper, t);\n                    case 'array':\n                        return interpolateArray(outputLower, outputUpper, t);\n                    case 'projectionDefinition':\n                        return ProjectionDefinition.interpolate(outputLower, outputUpper, t);\n                }\n            case 'interpolate-hcl':\n                return Color.interpolate(outputLower, outputUpper, t, 'hcl');\n            case 'interpolate-lab':\n                return Color.interpolate(outputLower, outputUpper, t, 'lab');\n        }\n    }\n    eachChild(fn) {\n        fn(this.input);\n        for (const expression of this.outputs) {\n            fn(expression);\n        }\n    }\n    outputDefined() {\n        return this.outputs.every(out => out.outputDefined());\n    }\n}\n/**\n * Returns a ratio that can be used to interpolate between exponential function\n * stops.\n * How it works: Two consecutive stop values define a (scaled and shifted) exponential function `f(x) = a * base^x + b`, where `base` is the user-specified base,\n * and `a` and `b` are constants affording sufficient degrees of freedom to fit\n * the function to the given stops.\n *\n * Here's a bit of algebra that lets us compute `f(x)` directly from the stop\n * values without explicitly solving for `a` and `b`:\n *\n * First stop value: `f(x0) = y0 = a * base^x0 + b`\n * Second stop value: `f(x1) = y1 = a * base^x1 + b`\n * => `y1 - y0 = a(base^x1 - base^x0)`\n * => `a = (y1 - y0)/(base^x1 - base^x0)`\n *\n * Desired value: `f(x) = y = a * base^x + b`\n * => `f(x) = y0 + a * (base^x - base^x0)`\n *\n * From the above, we can replace the `a` in `a * (base^x - base^x0)` and do a\n * little algebra:\n * ```\n * a * (base^x - base^x0) = (y1 - y0)/(base^x1 - base^x0) * (base^x - base^x0)\n *                     = (y1 - y0) * (base^x - base^x0) / (base^x1 - base^x0)\n * ```\n *\n * If we let `(base^x - base^x0) / (base^x1 base^x0)`, then we have\n * `f(x) = y0 + (y1 - y0) * ratio`.  In other words, `ratio` may be treated as\n * an interpolation factor between the two stops' output values.\n *\n * (Note: a slightly different form for `ratio`,\n * `(base^(x-x0) - 1) / (base^(x1-x0) - 1) `, is equivalent, but requires fewer\n * expensive `Math.pow()` operations.)\n *\n * @private\n*/\nfunction exponentialInterpolation(input, base, lowerValue, upperValue) {\n    const difference = upperValue - lowerValue;\n    const progress = input - lowerValue;\n    if (difference === 0) {\n        return 0;\n    }\n    else if (base === 1) {\n        return progress / difference;\n    }\n    else {\n        return (Math.pow(base, progress) - 1) / (Math.pow(base, difference) - 1);\n    }\n}\nconst interpolateFactory = {\n    color: Color.interpolate,\n    number: interpolateNumber,\n    padding: Padding.interpolate,\n    variableAnchorOffsetCollection: VariableAnchorOffsetCollection.interpolate,\n    array: interpolateArray\n};\n\nclass Coalesce {\n    constructor(type, args) {\n        this.type = type;\n        this.args = args;\n    }\n    static parse(args, context) {\n        if (args.length < 2) {\n            return context.error('Expected at least one argument.');\n        }\n        let outputType = null;\n        const expectedType = context.expectedType;\n        if (expectedType && expectedType.kind !== 'value') {\n            outputType = expectedType;\n        }\n        const parsedArgs = [];\n        for (const arg of args.slice(1)) {\n            const parsed = context.parse(arg, 1 + parsedArgs.length, outputType, undefined, { typeAnnotation: 'omit' });\n            if (!parsed)\n                return null;\n            outputType = outputType || parsed.type;\n            parsedArgs.push(parsed);\n        }\n        if (!outputType)\n            throw new Error('No output type');\n        // Above, we parse arguments without inferred type annotation so that\n        // they don't produce a runtime error for `null` input, which would\n        // preempt the desired null-coalescing behavior.\n        // Thus, if any of our arguments would have needed an annotation, we\n        // need to wrap the enclosing coalesce expression with it instead.\n        const needsAnnotation = expectedType &&\n            parsedArgs.some(arg => checkSubtype(expectedType, arg.type));\n        return needsAnnotation ?\n            new Coalesce(ValueType, parsedArgs) :\n            new Coalesce(outputType, parsedArgs);\n    }\n    evaluate(ctx) {\n        let result = null;\n        let argCount = 0;\n        let requestedImageName;\n        for (const arg of this.args) {\n            argCount++;\n            result = arg.evaluate(ctx);\n            // we need to keep track of the first requested image in a coalesce statement\n            // if coalesce can't find a valid image, we return the first image name so styleimagemissing can fire\n            if (result && result instanceof ResolvedImage && !result.available) {\n                if (!requestedImageName) {\n                    requestedImageName = result.name;\n                }\n                result = null;\n                if (argCount === this.args.length) {\n                    result = requestedImageName;\n                }\n            }\n            if (result !== null)\n                break;\n        }\n        return result;\n    }\n    eachChild(fn) {\n        this.args.forEach(fn);\n    }\n    outputDefined() {\n        return this.args.every(arg => arg.outputDefined());\n    }\n}\n\nfunction isComparableType(op, type) {\n    if (op === '==' || op === '!=') {\n        // equality operator\n        return type.kind === 'boolean' ||\n            type.kind === 'string' ||\n            type.kind === 'number' ||\n            type.kind === 'null' ||\n            type.kind === 'value';\n    }\n    else {\n        // ordering operator\n        return type.kind === 'string' ||\n            type.kind === 'number' ||\n            type.kind === 'value';\n    }\n}\nfunction eq(ctx, a, b) { return a === b; }\nfunction neq(ctx, a, b) { return a !== b; }\nfunction lt(ctx, a, b) { return a < b; }\nfunction gt(ctx, a, b) { return a > b; }\nfunction lteq(ctx, a, b) { return a <= b; }\nfunction gteq(ctx, a, b) { return a >= b; }\nfunction eqCollate(ctx, a, b, c) { return c.compare(a, b) === 0; }\nfunction neqCollate(ctx, a, b, c) { return !eqCollate(ctx, a, b, c); }\nfunction ltCollate(ctx, a, b, c) { return c.compare(a, b) < 0; }\nfunction gtCollate(ctx, a, b, c) { return c.compare(a, b) > 0; }\nfunction lteqCollate(ctx, a, b, c) { return c.compare(a, b) <= 0; }\nfunction gteqCollate(ctx, a, b, c) { return c.compare(a, b) >= 0; }\n/**\n * Special form for comparison operators, implementing the signatures:\n * - (T, T, ?Collator) => boolean\n * - (T, value, ?Collator) => boolean\n * - (value, T, ?Collator) => boolean\n *\n * For inequalities, T must be either value, string, or number. For ==/!=, it\n * can also be boolean or null.\n *\n * Equality semantics are equivalent to Javascript's strict equality (===/!==)\n * -- i.e., when the arguments' types don't match, == evaluates to false, != to\n * true.\n *\n * When types don't match in an ordering comparison, a runtime error is thrown.\n *\n * @private\n */\nfunction makeComparison(op, compareBasic, compareWithCollator) {\n    const isOrderComparison = op !== '==' && op !== '!=';\n    return class Comparison {\n        constructor(lhs, rhs, collator) {\n            this.type = BooleanType;\n            this.lhs = lhs;\n            this.rhs = rhs;\n            this.collator = collator;\n            this.hasUntypedArgument = lhs.type.kind === 'value' || rhs.type.kind === 'value';\n        }\n        static parse(args, context) {\n            if (args.length !== 3 && args.length !== 4)\n                return context.error('Expected two or three arguments.');\n            const op = args[0];\n            let lhs = context.parse(args[1], 1, ValueType);\n            if (!lhs)\n                return null;\n            if (!isComparableType(op, lhs.type)) {\n                return context.concat(1).error(`\"${op}\" comparisons are not supported for type '${typeToString(lhs.type)}'.`);\n            }\n            let rhs = context.parse(args[2], 2, ValueType);\n            if (!rhs)\n                return null;\n            if (!isComparableType(op, rhs.type)) {\n                return context.concat(2).error(`\"${op}\" comparisons are not supported for type '${typeToString(rhs.type)}'.`);\n            }\n            if (lhs.type.kind !== rhs.type.kind &&\n                lhs.type.kind !== 'value' &&\n                rhs.type.kind !== 'value') {\n                return context.error(`Cannot compare types '${typeToString(lhs.type)}' and '${typeToString(rhs.type)}'.`);\n            }\n            if (isOrderComparison) {\n                // typing rules specific to less/greater than operators\n                if (lhs.type.kind === 'value' && rhs.type.kind !== 'value') {\n                    // (value, T)\n                    lhs = new Assertion(rhs.type, [lhs]);\n                }\n                else if (lhs.type.kind !== 'value' && rhs.type.kind === 'value') {\n                    // (T, value)\n                    rhs = new Assertion(lhs.type, [rhs]);\n                }\n            }\n            let collator = null;\n            if (args.length === 4) {\n                if (lhs.type.kind !== 'string' &&\n                    rhs.type.kind !== 'string' &&\n                    lhs.type.kind !== 'value' &&\n                    rhs.type.kind !== 'value') {\n                    return context.error('Cannot use collator to compare non-string types.');\n                }\n                collator = context.parse(args[3], 3, CollatorType);\n                if (!collator)\n                    return null;\n            }\n            return new Comparison(lhs, rhs, collator);\n        }\n        evaluate(ctx) {\n            const lhs = this.lhs.evaluate(ctx);\n            const rhs = this.rhs.evaluate(ctx);\n            if (isOrderComparison && this.hasUntypedArgument) {\n                const lt = typeOf(lhs);\n                const rt = typeOf(rhs);\n                // check that type is string or number, and equal\n                if (lt.kind !== rt.kind || !(lt.kind === 'string' || lt.kind === 'number')) {\n                    throw new RuntimeError(`Expected arguments for \"${op}\" to be (string, string) or (number, number), but found (${lt.kind}, ${rt.kind}) instead.`);\n                }\n            }\n            if (this.collator && !isOrderComparison && this.hasUntypedArgument) {\n                const lt = typeOf(lhs);\n                const rt = typeOf(rhs);\n                if (lt.kind !== 'string' || rt.kind !== 'string') {\n                    return compareBasic(ctx, lhs, rhs);\n                }\n            }\n            return this.collator ?\n                compareWithCollator(ctx, lhs, rhs, this.collator.evaluate(ctx)) :\n                compareBasic(ctx, lhs, rhs);\n        }\n        eachChild(fn) {\n            fn(this.lhs);\n            fn(this.rhs);\n            if (this.collator) {\n                fn(this.collator);\n            }\n        }\n        outputDefined() {\n            return true;\n        }\n    };\n}\nconst Equals = makeComparison('==', eq, eqCollate);\nconst NotEquals = makeComparison('!=', neq, neqCollate);\nconst LessThan = makeComparison('<', lt, ltCollate);\nconst GreaterThan = makeComparison('>', gt, gtCollate);\nconst LessThanOrEqual = makeComparison('<=', lteq, lteqCollate);\nconst GreaterThanOrEqual = makeComparison('>=', gteq, gteqCollate);\n\nclass CollatorExpression {\n    constructor(caseSensitive, diacriticSensitive, locale) {\n        this.type = CollatorType;\n        this.locale = locale;\n        this.caseSensitive = caseSensitive;\n        this.diacriticSensitive = diacriticSensitive;\n    }\n    static parse(args, context) {\n        if (args.length !== 2)\n            return context.error('Expected one argument.');\n        const options = args[1];\n        if (typeof options !== 'object' || Array.isArray(options))\n            return context.error('Collator options argument must be an object.');\n        const caseSensitive = context.parse(options['case-sensitive'] === undefined ? false : options['case-sensitive'], 1, BooleanType);\n        if (!caseSensitive)\n            return null;\n        const diacriticSensitive = context.parse(options['diacritic-sensitive'] === undefined ? false : options['diacritic-sensitive'], 1, BooleanType);\n        if (!diacriticSensitive)\n            return null;\n        let locale = null;\n        if (options['locale']) {\n            locale = context.parse(options['locale'], 1, StringType);\n            if (!locale)\n                return null;\n        }\n        return new CollatorExpression(caseSensitive, diacriticSensitive, locale);\n    }\n    evaluate(ctx) {\n        return new Collator(this.caseSensitive.evaluate(ctx), this.diacriticSensitive.evaluate(ctx), this.locale ? this.locale.evaluate(ctx) : null);\n    }\n    eachChild(fn) {\n        fn(this.caseSensitive);\n        fn(this.diacriticSensitive);\n        if (this.locale) {\n            fn(this.locale);\n        }\n    }\n    outputDefined() {\n        // Technically the set of possible outputs is the combinatoric set of Collators produced\n        // by all possible outputs of locale/caseSensitive/diacriticSensitive\n        // But for the primary use of Collators in comparison operators, we ignore the Collator's\n        // possible outputs anyway, so we can get away with leaving this false for now.\n        return false;\n    }\n}\n\nclass NumberFormat {\n    constructor(number, locale, currency, minFractionDigits, maxFractionDigits) {\n        this.type = StringType;\n        this.number = number;\n        this.locale = locale;\n        this.currency = currency;\n        this.minFractionDigits = minFractionDigits;\n        this.maxFractionDigits = maxFractionDigits;\n    }\n    static parse(args, context) {\n        if (args.length !== 3)\n            return context.error('Expected two arguments.');\n        const number = context.parse(args[1], 1, NumberType);\n        if (!number)\n            return null;\n        const options = args[2];\n        if (typeof options !== 'object' || Array.isArray(options))\n            return context.error('NumberFormat options argument must be an object.');\n        let locale = null;\n        if (options['locale']) {\n            locale = context.parse(options['locale'], 1, StringType);\n            if (!locale)\n                return null;\n        }\n        let currency = null;\n        if (options['currency']) {\n            currency = context.parse(options['currency'], 1, StringType);\n            if (!currency)\n                return null;\n        }\n        let minFractionDigits = null;\n        if (options['min-fraction-digits']) {\n            minFractionDigits = context.parse(options['min-fraction-digits'], 1, NumberType);\n            if (!minFractionDigits)\n                return null;\n        }\n        let maxFractionDigits = null;\n        if (options['max-fraction-digits']) {\n            maxFractionDigits = context.parse(options['max-fraction-digits'], 1, NumberType);\n            if (!maxFractionDigits)\n                return null;\n        }\n        return new NumberFormat(number, locale, currency, minFractionDigits, maxFractionDigits);\n    }\n    evaluate(ctx) {\n        return new Intl.NumberFormat(this.locale ? this.locale.evaluate(ctx) : [], {\n            style: this.currency ? 'currency' : 'decimal',\n            currency: this.currency ? this.currency.evaluate(ctx) : undefined,\n            minimumFractionDigits: this.minFractionDigits ? this.minFractionDigits.evaluate(ctx) : undefined,\n            maximumFractionDigits: this.maxFractionDigits ? this.maxFractionDigits.evaluate(ctx) : undefined,\n        }).format(this.number.evaluate(ctx));\n    }\n    eachChild(fn) {\n        fn(this.number);\n        if (this.locale) {\n            fn(this.locale);\n        }\n        if (this.currency) {\n            fn(this.currency);\n        }\n        if (this.minFractionDigits) {\n            fn(this.minFractionDigits);\n        }\n        if (this.maxFractionDigits) {\n            fn(this.maxFractionDigits);\n        }\n    }\n    outputDefined() {\n        return false;\n    }\n}\n\nclass FormatExpression {\n    constructor(sections) {\n        this.type = FormattedType;\n        this.sections = sections;\n    }\n    static parse(args, context) {\n        if (args.length < 2) {\n            return context.error('Expected at least one argument.');\n        }\n        const firstArg = args[1];\n        if (!Array.isArray(firstArg) && typeof firstArg === 'object') {\n            return context.error('First argument must be an image or text section.');\n        }\n        const sections = [];\n        let nextTokenMayBeObject = false;\n        for (let i = 1; i <= args.length - 1; ++i) {\n            const arg = args[i];\n            if (nextTokenMayBeObject && typeof arg === 'object' && !Array.isArray(arg)) {\n                nextTokenMayBeObject = false;\n                let scale = null;\n                if (arg['font-scale']) {\n                    scale = context.parse(arg['font-scale'], 1, NumberType);\n                    if (!scale)\n                        return null;\n                }\n                let font = null;\n                if (arg['text-font']) {\n                    font = context.parse(arg['text-font'], 1, array(StringType));\n                    if (!font)\n                        return null;\n                }\n                let textColor = null;\n                if (arg['text-color']) {\n                    textColor = context.parse(arg['text-color'], 1, ColorType);\n                    if (!textColor)\n                        return null;\n                }\n                let verticalAlign = null;\n                if (arg['vertical-align']) {\n                    if (typeof arg['vertical-align'] === 'string' && !VERTICAL_ALIGN_OPTIONS.includes(arg['vertical-align'])) {\n                        return context.error(`'vertical-align' must be one of: 'bottom', 'center', 'top' but found '${arg['vertical-align']}' instead.`);\n                    }\n                    verticalAlign = context.parse(arg['vertical-align'], 1, StringType);\n                    if (!verticalAlign)\n                        return null;\n                }\n                const lastExpression = sections[sections.length - 1];\n                lastExpression.scale = scale;\n                lastExpression.font = font;\n                lastExpression.textColor = textColor;\n                lastExpression.verticalAlign = verticalAlign;\n            }\n            else {\n                const content = context.parse(args[i], 1, ValueType);\n                if (!content)\n                    return null;\n                const kind = content.type.kind;\n                if (kind !== 'string' && kind !== 'value' && kind !== 'null' && kind !== 'resolvedImage')\n                    return context.error('Formatted text type must be \\'string\\', \\'value\\', \\'image\\' or \\'null\\'.');\n                nextTokenMayBeObject = true;\n                sections.push({ content, scale: null, font: null, textColor: null, verticalAlign: null });\n            }\n        }\n        return new FormatExpression(sections);\n    }\n    evaluate(ctx) {\n        const evaluateSection = section => {\n            const evaluatedContent = section.content.evaluate(ctx);\n            if (typeOf(evaluatedContent) === ResolvedImageType) {\n                return new FormattedSection('', evaluatedContent, null, null, null, section.verticalAlign ? section.verticalAlign.evaluate(ctx) : null);\n            }\n            return new FormattedSection(valueToString(evaluatedContent), null, section.scale ? section.scale.evaluate(ctx) : null, section.font ? section.font.evaluate(ctx).join(',') : null, section.textColor ? section.textColor.evaluate(ctx) : null, section.verticalAlign ? section.verticalAlign.evaluate(ctx) : null);\n        };\n        return new Formatted(this.sections.map(evaluateSection));\n    }\n    eachChild(fn) {\n        for (const section of this.sections) {\n            fn(section.content);\n            if (section.scale) {\n                fn(section.scale);\n            }\n            if (section.font) {\n                fn(section.font);\n            }\n            if (section.textColor) {\n                fn(section.textColor);\n            }\n            if (section.verticalAlign) {\n                fn(section.verticalAlign);\n            }\n        }\n    }\n    outputDefined() {\n        // Technically the combinatoric set of all children\n        // Usually, this.text will be undefined anyway\n        return false;\n    }\n}\n\nclass ImageExpression {\n    constructor(input) {\n        this.type = ResolvedImageType;\n        this.input = input;\n    }\n    static parse(args, context) {\n        if (args.length !== 2) {\n            return context.error('Expected two arguments.');\n        }\n        const name = context.parse(args[1], 1, StringType);\n        if (!name)\n            return context.error('No image name provided.');\n        return new ImageExpression(name);\n    }\n    evaluate(ctx) {\n        const evaluatedImageName = this.input.evaluate(ctx);\n        const value = ResolvedImage.fromString(evaluatedImageName);\n        if (value && ctx.availableImages)\n            value.available = ctx.availableImages.indexOf(evaluatedImageName) > -1;\n        return value;\n    }\n    eachChild(fn) {\n        fn(this.input);\n    }\n    outputDefined() {\n        // The output of image is determined by the list of available images in the evaluation context\n        return false;\n    }\n}\n\nclass Length {\n    constructor(input) {\n        this.type = NumberType;\n        this.input = input;\n    }\n    static parse(args, context) {\n        if (args.length !== 2)\n            return context.error(`Expected 1 argument, but found ${args.length - 1} instead.`);\n        const input = context.parse(args[1], 1);\n        if (!input)\n            return null;\n        if (input.type.kind !== 'array' && input.type.kind !== 'string' && input.type.kind !== 'value')\n            return context.error(`Expected argument of type string or array, but found ${typeToString(input.type)} instead.`);\n        return new Length(input);\n    }\n    evaluate(ctx) {\n        const input = this.input.evaluate(ctx);\n        if (typeof input === 'string') {\n            // The length may be affected by surrogate pairs.\n            return [...input].length;\n        }\n        else if (Array.isArray(input)) {\n            return input.length;\n        }\n        else {\n            throw new RuntimeError(`Expected value to be of type string or array, but found ${typeToString(typeOf(input))} instead.`);\n        }\n    }\n    eachChild(fn) {\n        fn(this.input);\n    }\n    outputDefined() {\n        return false;\n    }\n}\n\nconst EXTENT = 8192;\nfunction getTileCoordinates(p, canonical) {\n    const x = mercatorXfromLng(p[0]);\n    const y = mercatorYfromLat(p[1]);\n    const tilesAtZoom = Math.pow(2, canonical.z);\n    return [Math.round(x * tilesAtZoom * EXTENT), Math.round(y * tilesAtZoom * EXTENT)];\n}\nfunction getLngLatFromTileCoord(coord, canonical) {\n    const tilesAtZoom = Math.pow(2, canonical.z);\n    const x = (coord[0] / EXTENT + canonical.x) / tilesAtZoom;\n    const y = (coord[1] / EXTENT + canonical.y) / tilesAtZoom;\n    return [lngFromMercatorXfromLng(x), latFromMercatorY(y)];\n}\nfunction mercatorXfromLng(lng) {\n    return (180 + lng) / 360;\n}\nfunction lngFromMercatorXfromLng(mercatorX) {\n    return mercatorX * 360 - 180;\n}\nfunction mercatorYfromLat(lat) {\n    return (180 - (180 / Math.PI * Math.log(Math.tan(Math.PI / 4 + lat * Math.PI / 360)))) / 360;\n}\nfunction latFromMercatorY(mercatorY) {\n    return 360 / Math.PI * Math.atan(Math.exp((180 - mercatorY * 360) * Math.PI / 180)) - 90;\n}\nfunction updateBBox(bbox, coord) {\n    bbox[0] = Math.min(bbox[0], coord[0]);\n    bbox[1] = Math.min(bbox[1], coord[1]);\n    bbox[2] = Math.max(bbox[2], coord[0]);\n    bbox[3] = Math.max(bbox[3], coord[1]);\n}\nfunction boxWithinBox(bbox1, bbox2) {\n    if (bbox1[0] <= bbox2[0])\n        return false;\n    if (bbox1[2] >= bbox2[2])\n        return false;\n    if (bbox1[1] <= bbox2[1])\n        return false;\n    if (bbox1[3] >= bbox2[3])\n        return false;\n    return true;\n}\nfunction rayIntersect(p, p1, p2) {\n    return ((p1[1] > p[1]) !== (p2[1] > p[1])) && (p[0] < (p2[0] - p1[0]) * (p[1] - p1[1]) / (p2[1] - p1[1]) + p1[0]);\n}\nfunction pointOnBoundary(p, p1, p2) {\n    const x1 = p[0] - p1[0];\n    const y1 = p[1] - p1[1];\n    const x2 = p[0] - p2[0];\n    const y2 = p[1] - p2[1];\n    return (x1 * y2 - x2 * y1 === 0) && (x1 * x2 <= 0) && (y1 * y2 <= 0);\n}\n// a, b are end points for line segment1, c and d are end points for line segment2\nfunction segmentIntersectSegment(a, b, c, d) {\n    // check if two segments are parallel or not\n    // precondition is end point a, b is inside polygon, if line a->b is\n    // parallel to polygon edge c->d, then a->b won't intersect with c->d\n    const vectorP = [b[0] - a[0], b[1] - a[1]];\n    const vectorQ = [d[0] - c[0], d[1] - c[1]];\n    if (perp(vectorQ, vectorP) === 0)\n        return false;\n    // If lines are intersecting with each other, the relative location should be:\n    // a and b lie in different sides of segment c->d\n    // c and d lie in different sides of segment a->b\n    if (twoSided(a, b, c, d) && twoSided(c, d, a, b))\n        return true;\n    return false;\n}\nfunction lineIntersectPolygon(p1, p2, polygon) {\n    for (const ring of polygon) {\n        // loop through every edge of the ring\n        for (let j = 0; j < ring.length - 1; ++j) {\n            if (segmentIntersectSegment(p1, p2, ring[j], ring[j + 1])) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n// ray casting algorithm for detecting if point is in polygon\nfunction pointWithinPolygon(point, rings, trueIfOnBoundary = false) {\n    let inside = false;\n    for (const ring of rings) {\n        for (let j = 0; j < ring.length - 1; j++) {\n            if (pointOnBoundary(point, ring[j], ring[j + 1]))\n                return trueIfOnBoundary;\n            if (rayIntersect(point, ring[j], ring[j + 1]))\n                inside = !inside;\n        }\n    }\n    return inside;\n}\nfunction pointWithinPolygons(point, polygons) {\n    for (const polygon of polygons) {\n        if (pointWithinPolygon(point, polygon))\n            return true;\n    }\n    return false;\n}\nfunction lineStringWithinPolygon(line, polygon) {\n    // First, check if geometry points of line segments are all inside polygon\n    for (const point of line) {\n        if (!pointWithinPolygon(point, polygon)) {\n            return false;\n        }\n    }\n    // Second, check if there is line segment intersecting polygon edge\n    for (let i = 0; i < line.length - 1; ++i) {\n        if (lineIntersectPolygon(line[i], line[i + 1], polygon)) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction lineStringWithinPolygons(line, polygons) {\n    for (const polygon of polygons) {\n        if (lineStringWithinPolygon(line, polygon))\n            return true;\n    }\n    return false;\n}\nfunction perp(v1, v2) {\n    return (v1[0] * v2[1] - v1[1] * v2[0]);\n}\n// check if p1 and p2 are in different sides of line segment q1->q2\nfunction twoSided(p1, p2, q1, q2) {\n    // q1->p1 (x1, y1), q1->p2 (x2, y2), q1->q2 (x3, y3)\n    const x1 = p1[0] - q1[0];\n    const y1 = p1[1] - q1[1];\n    const x2 = p2[0] - q1[0];\n    const y2 = p2[1] - q1[1];\n    const x3 = q2[0] - q1[0];\n    const y3 = q2[1] - q1[1];\n    const det1 = (x1 * y3 - x3 * y1);\n    const det2 = (x2 * y3 - x3 * y2);\n    if ((det1 > 0 && det2 < 0) || (det1 < 0 && det2 > 0))\n        return true;\n    return false;\n}\n\nfunction getTilePolygon(coordinates, bbox, canonical) {\n    const polygon = [];\n    for (let i = 0; i < coordinates.length; i++) {\n        const ring = [];\n        for (let j = 0; j < coordinates[i].length; j++) {\n            const coord = getTileCoordinates(coordinates[i][j], canonical);\n            updateBBox(bbox, coord);\n            ring.push(coord);\n        }\n        polygon.push(ring);\n    }\n    return polygon;\n}\nfunction getTilePolygons(coordinates, bbox, canonical) {\n    const polygons = [];\n    for (let i = 0; i < coordinates.length; i++) {\n        const polygon = getTilePolygon(coordinates[i], bbox, canonical);\n        polygons.push(polygon);\n    }\n    return polygons;\n}\nfunction updatePoint(p, bbox, polyBBox, worldSize) {\n    if (p[0] < polyBBox[0] || p[0] > polyBBox[2]) {\n        const halfWorldSize = worldSize * 0.5;\n        let shift = (p[0] - polyBBox[0] > halfWorldSize) ? -worldSize : (polyBBox[0] - p[0] > halfWorldSize) ? worldSize : 0;\n        if (shift === 0) {\n            shift = (p[0] - polyBBox[2] > halfWorldSize) ? -worldSize : (polyBBox[2] - p[0] > halfWorldSize) ? worldSize : 0;\n        }\n        p[0] += shift;\n    }\n    updateBBox(bbox, p);\n}\nfunction resetBBox(bbox) {\n    bbox[0] = bbox[1] = Infinity;\n    bbox[2] = bbox[3] = -Infinity;\n}\nfunction getTilePoints(geometry, pointBBox, polyBBox, canonical) {\n    const worldSize = Math.pow(2, canonical.z) * EXTENT;\n    const shifts = [canonical.x * EXTENT, canonical.y * EXTENT];\n    const tilePoints = [];\n    for (const points of geometry) {\n        for (const point of points) {\n            const p = [point.x + shifts[0], point.y + shifts[1]];\n            updatePoint(p, pointBBox, polyBBox, worldSize);\n            tilePoints.push(p);\n        }\n    }\n    return tilePoints;\n}\nfunction getTileLines(geometry, lineBBox, polyBBox, canonical) {\n    const worldSize = Math.pow(2, canonical.z) * EXTENT;\n    const shifts = [canonical.x * EXTENT, canonical.y * EXTENT];\n    const tileLines = [];\n    for (const line of geometry) {\n        const tileLine = [];\n        for (const point of line) {\n            const p = [point.x + shifts[0], point.y + shifts[1]];\n            updateBBox(lineBBox, p);\n            tileLine.push(p);\n        }\n        tileLines.push(tileLine);\n    }\n    if (lineBBox[2] - lineBBox[0] <= worldSize / 2) {\n        resetBBox(lineBBox);\n        for (const line of tileLines) {\n            for (const p of line) {\n                updatePoint(p, lineBBox, polyBBox, worldSize);\n            }\n        }\n    }\n    return tileLines;\n}\nfunction pointsWithinPolygons(ctx, polygonGeometry) {\n    const pointBBox = [Infinity, Infinity, -Infinity, -Infinity];\n    const polyBBox = [Infinity, Infinity, -Infinity, -Infinity];\n    const canonical = ctx.canonicalID();\n    if (polygonGeometry.type === 'Polygon') {\n        const tilePolygon = getTilePolygon(polygonGeometry.coordinates, polyBBox, canonical);\n        const tilePoints = getTilePoints(ctx.geometry(), pointBBox, polyBBox, canonical);\n        if (!boxWithinBox(pointBBox, polyBBox))\n            return false;\n        for (const point of tilePoints) {\n            if (!pointWithinPolygon(point, tilePolygon))\n                return false;\n        }\n    }\n    if (polygonGeometry.type === 'MultiPolygon') {\n        const tilePolygons = getTilePolygons(polygonGeometry.coordinates, polyBBox, canonical);\n        const tilePoints = getTilePoints(ctx.geometry(), pointBBox, polyBBox, canonical);\n        if (!boxWithinBox(pointBBox, polyBBox))\n            return false;\n        for (const point of tilePoints) {\n            if (!pointWithinPolygons(point, tilePolygons))\n                return false;\n        }\n    }\n    return true;\n}\nfunction linesWithinPolygons(ctx, polygonGeometry) {\n    const lineBBox = [Infinity, Infinity, -Infinity, -Infinity];\n    const polyBBox = [Infinity, Infinity, -Infinity, -Infinity];\n    const canonical = ctx.canonicalID();\n    if (polygonGeometry.type === 'Polygon') {\n        const tilePolygon = getTilePolygon(polygonGeometry.coordinates, polyBBox, canonical);\n        const tileLines = getTileLines(ctx.geometry(), lineBBox, polyBBox, canonical);\n        if (!boxWithinBox(lineBBox, polyBBox))\n            return false;\n        for (const line of tileLines) {\n            if (!lineStringWithinPolygon(line, tilePolygon))\n                return false;\n        }\n    }\n    if (polygonGeometry.type === 'MultiPolygon') {\n        const tilePolygons = getTilePolygons(polygonGeometry.coordinates, polyBBox, canonical);\n        const tileLines = getTileLines(ctx.geometry(), lineBBox, polyBBox, canonical);\n        if (!boxWithinBox(lineBBox, polyBBox))\n            return false;\n        for (const line of tileLines) {\n            if (!lineStringWithinPolygons(line, tilePolygons))\n                return false;\n        }\n    }\n    return true;\n}\nclass Within {\n    constructor(geojson, geometries) {\n        this.type = BooleanType;\n        this.geojson = geojson;\n        this.geometries = geometries;\n    }\n    static parse(args, context) {\n        if (args.length !== 2)\n            return context.error(`'within' expression requires exactly one argument, but found ${args.length - 1} instead.`);\n        if (isValue(args[1])) {\n            const geojson = args[1];\n            if (geojson.type === 'FeatureCollection') {\n                const polygonsCoords = [];\n                for (const polygon of geojson.features) {\n                    const { type, coordinates } = polygon.geometry;\n                    if (type === 'Polygon') {\n                        polygonsCoords.push(coordinates);\n                    }\n                    if (type === 'MultiPolygon') {\n                        polygonsCoords.push(...coordinates);\n                    }\n                }\n                if (polygonsCoords.length) {\n                    const multipolygonWrapper = {\n                        type: 'MultiPolygon',\n                        coordinates: polygonsCoords\n                    };\n                    return new Within(geojson, multipolygonWrapper);\n                }\n            }\n            else if (geojson.type === 'Feature') {\n                const type = geojson.geometry.type;\n                if (type === 'Polygon' || type === 'MultiPolygon') {\n                    return new Within(geojson, geojson.geometry);\n                }\n            }\n            else if (geojson.type === 'Polygon' || geojson.type === 'MultiPolygon') {\n                return new Within(geojson, geojson);\n            }\n        }\n        return context.error('\\'within\\' expression requires valid geojson object that contains polygon geometry type.');\n    }\n    evaluate(ctx) {\n        if (ctx.geometry() != null && ctx.canonicalID() != null) {\n            if (ctx.geometryType() === 'Point') {\n                return pointsWithinPolygons(ctx, this.geometries);\n            }\n            else if (ctx.geometryType() === 'LineString') {\n                return linesWithinPolygons(ctx, this.geometries);\n            }\n        }\n        return false;\n    }\n    eachChild() { }\n    outputDefined() {\n        return true;\n    }\n}\n\nclass TinyQueue {\n    constructor(data = [], compare = (a, b) => (a < b ? -1 : a > b ? 1 : 0)) {\n        this.data = data;\n        this.length = this.data.length;\n        this.compare = compare;\n\n        if (this.length > 0) {\n            for (let i = (this.length >> 1) - 1; i >= 0; i--) this._down(i);\n        }\n    }\n\n    push(item) {\n        this.data.push(item);\n        this._up(this.length++);\n    }\n\n    pop() {\n        if (this.length === 0) return undefined;\n\n        const top = this.data[0];\n        const bottom = this.data.pop();\n\n        if (--this.length > 0) {\n            this.data[0] = bottom;\n            this._down(0);\n        }\n\n        return top;\n    }\n\n    peek() {\n        return this.data[0];\n    }\n\n    _up(pos) {\n        const {data, compare} = this;\n        const item = data[pos];\n\n        while (pos > 0) {\n            const parent = (pos - 1) >> 1;\n            const current = data[parent];\n            if (compare(item, current) >= 0) break;\n            data[pos] = current;\n            pos = parent;\n        }\n\n        data[pos] = item;\n    }\n\n    _down(pos) {\n        const {data, compare} = this;\n        const halfLength = this.length >> 1;\n        const item = data[pos];\n\n        while (pos < halfLength) {\n            let bestChild = (pos << 1) + 1; // initially it is the left child\n            const right = bestChild + 1;\n\n            if (right < this.length && compare(data[right], data[bestChild]) < 0) {\n                bestChild = right;\n            }\n            if (compare(data[bestChild], item) >= 0) break;\n\n            data[pos] = data[bestChild];\n            pos = bestChild;\n        }\n\n        data[pos] = item;\n    }\n}\n\n/**\n * Rearranges items so that all items in the [left, k] are the smallest.\n * The k-th element will have the (k - left + 1)-th smallest value in [left, right].\n *\n * @template T\n * @param {T[]} arr the array to partially sort (in place)\n * @param {number} k middle index for partial sorting (as defined above)\n * @param {number} [left=0] left index of the range to sort\n * @param {number} [right=arr.length-1] right index\n * @param {(a: T, b: T) => number} [compare = (a, b) => a - b] compare function\n */\nfunction quickselect(arr, k, left = 0, right = arr.length - 1, compare = defaultCompare) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            const n = right - left + 1;\n            const m = k - left + 1;\n            const z = Math.log(n);\n            const s = 0.5 * Math.exp(2 * z / 3);\n            const sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            const newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            const newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            quickselect(arr, k, newLeft, newRight, compare);\n        }\n\n        const t = arr[k];\n        let i = left;\n        /** @type {number} */\n        let j = right;\n\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) i++;\n            while (compare(arr[j], t) > 0) j--;\n        }\n\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\n/**\n * @template T\n * @param {T[]} arr\n * @param {number} i\n * @param {number} j\n */\nfunction swap(arr, i, j) {\n    const tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\n/**\n * @template T\n * @param {T} a\n * @param {T} b\n * @returns {number}\n */\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n\n/**\n * Classifies an array of rings into polygons with outer rings and holes\n * @param rings - the rings to classify\n * @param maxRings - the maximum number of rings to include in a polygon, use 0 to include all rings\n * @returns an array of polygons with internal rings as holes\n */\nfunction classifyRings(rings, maxRings) {\n    const len = rings.length;\n    if (len <= 1)\n        return [rings];\n    const polygons = [];\n    let polygon;\n    let ccw;\n    for (const ring of rings) {\n        const area = calculateSignedArea(ring);\n        if (area === 0)\n            continue;\n        ring.area = Math.abs(area);\n        if (ccw === undefined)\n            ccw = area < 0;\n        if (ccw === area < 0) {\n            if (polygon)\n                polygons.push(polygon);\n            polygon = [ring];\n        }\n        else {\n            polygon.push(ring);\n        }\n    }\n    if (polygon)\n        polygons.push(polygon);\n    // Earcut performance degrades with the # of rings in a polygon. For this\n    // reason, we limit strip out all but the `maxRings` largest rings.\n    if (maxRings > 1) {\n        for (let j = 0; j < polygons.length; j++) {\n            if (polygons[j].length <= maxRings)\n                continue;\n            quickselect(polygons[j], maxRings, 1, polygons[j].length - 1, compareAreas);\n            polygons[j] = polygons[j].slice(0, maxRings);\n        }\n    }\n    return polygons;\n}\nfunction compareAreas(a, b) {\n    return b.area - a.area;\n}\n/**\n * Returns the signed area for the polygon ring.  Positive areas are exterior rings and\n * have a clockwise winding.  Negative areas are interior rings and have a counter clockwise\n * ordering.\n *\n * @param ring - Exterior or interior ring\n * @returns Signed area\n */\nfunction calculateSignedArea(ring) {\n    let sum = 0;\n    for (let i = 0, len = ring.length, j = len - 1, p1, p2; i < len; j = i++) {\n        p1 = ring[i];\n        p2 = ring[j];\n        sum += (p2.x - p1.x) * (p1.y + p2.y);\n    }\n    return sum;\n}\n\n// This is taken from https://github.com/mapbox/cheap-ruler/ in order to take only the relevant parts\n// Values that define WGS84 ellipsoid model of the Earth\nconst RE = 6378.137; // equatorial radius\nconst FE = 1 / 298.257223563; // flattening\nconst E2 = FE * (2 - FE);\nconst RAD = Math.PI / 180;\nclass CheapRuler {\n    constructor(lat) {\n        // Curvature formulas from https://en.wikipedia.org/wiki/Earth_radius#Meridional\n        const m = RAD * RE * 1000;\n        const coslat = Math.cos(lat * RAD);\n        const w2 = 1 / (1 - E2 * (1 - coslat * coslat));\n        const w = Math.sqrt(w2);\n        // multipliers for converting longitude and latitude degrees into distance\n        this.kx = m * w * coslat; // based on normal radius of curvature\n        this.ky = m * w * w2 * (1 - E2); // based on meridional radius of curvature\n    }\n    /**\n     * Given two points of the form [longitude, latitude], returns the distance.\n     *\n     * @param a - point [longitude, latitude]\n     * @param b - point [longitude, latitude]\n     * @returns distance\n     * @example\n     * const distance = ruler.distance([30.5, 50.5], [30.51, 50.49]);\n     * //=distance\n     */\n    distance(a, b) {\n        const dx = this.wrap(a[0] - b[0]) * this.kx;\n        const dy = (a[1] - b[1]) * this.ky;\n        return Math.sqrt(dx * dx + dy * dy);\n    }\n    /**\n     * Returns an object of the form {point, index, t}, where point is closest point on the line\n     * from the given point, index is the start index of the segment with the closest point,\n     * and t is a parameter from 0 to 1 that indicates where the closest point is on that segment.\n     *\n     * @param line - an array of points that form the line\n     * @param p - point [longitude, latitude]\n     * @returns the nearest point, its index in the array and the proportion along the line\n     * @example\n     * const point = ruler.pointOnLine(line, [-67.04, 50.5]).point;\n     * //=point\n     */\n    pointOnLine(line, p) {\n        let minDist = Infinity;\n        let minX, minY, minI, minT;\n        for (let i = 0; i < line.length - 1; i++) {\n            let x = line[i][0];\n            let y = line[i][1];\n            let dx = this.wrap(line[i + 1][0] - x) * this.kx;\n            let dy = (line[i + 1][1] - y) * this.ky;\n            let t = 0;\n            if (dx !== 0 || dy !== 0) {\n                t = (this.wrap(p[0] - x) * this.kx * dx + (p[1] - y) * this.ky * dy) / (dx * dx + dy * dy);\n                if (t > 1) {\n                    x = line[i + 1][0];\n                    y = line[i + 1][1];\n                }\n                else if (t > 0) {\n                    x += (dx / this.kx) * t;\n                    y += (dy / this.ky) * t;\n                }\n            }\n            dx = this.wrap(p[0] - x) * this.kx;\n            dy = (p[1] - y) * this.ky;\n            const sqDist = dx * dx + dy * dy;\n            if (sqDist < minDist) {\n                minDist = sqDist;\n                minX = x;\n                minY = y;\n                minI = i;\n                minT = t;\n            }\n        }\n        return {\n            point: [minX, minY],\n            index: minI,\n            t: Math.max(0, Math.min(1, minT))\n        };\n    }\n    wrap(deg) {\n        while (deg < -180)\n            deg += 360;\n        while (deg > 180)\n            deg -= 360;\n        return deg;\n    }\n}\n\nconst MinPointsSize = 100;\nconst MinLinePointsSize = 50;\nfunction compareDistPair(a, b) {\n    return b[0] - a[0];\n}\nfunction getRangeSize(range) {\n    return range[1] - range[0] + 1;\n}\nfunction isRangeSafe(range, threshold) {\n    return range[1] >= range[0] && range[1] < threshold;\n}\nfunction splitRange(range, isLine) {\n    if (range[0] > range[1]) {\n        return [null, null];\n    }\n    const size = getRangeSize(range);\n    if (isLine) {\n        if (size === 2) {\n            return [range, null];\n        }\n        const size1 = Math.floor(size / 2);\n        return [[range[0], range[0] + size1],\n            [range[0] + size1, range[1]]];\n    }\n    if (size === 1) {\n        return [range, null];\n    }\n    const size1 = Math.floor(size / 2) - 1;\n    return [[range[0], range[0] + size1],\n        [range[0] + size1 + 1, range[1]]];\n}\nfunction getBBox(coords, range) {\n    if (!isRangeSafe(range, coords.length)) {\n        return [Infinity, Infinity, -Infinity, -Infinity];\n    }\n    const bbox = [Infinity, Infinity, -Infinity, -Infinity];\n    for (let i = range[0]; i <= range[1]; ++i) {\n        updateBBox(bbox, coords[i]);\n    }\n    return bbox;\n}\nfunction getPolygonBBox(polygon) {\n    const bbox = [Infinity, Infinity, -Infinity, -Infinity];\n    for (const ring of polygon) {\n        for (const coord of ring) {\n            updateBBox(bbox, coord);\n        }\n    }\n    return bbox;\n}\nfunction isValidBBox(bbox) {\n    return bbox[0] !== -Infinity && bbox[1] !== -Infinity && bbox[2] !== Infinity && bbox[3] !== Infinity;\n}\n// Calculate the distance between two bounding boxes.\n// Calculate the delta in x and y direction, and use two fake points {0.0, 0.0}\n// and {dx, dy} to calculate the distance. Distance will be 0.0 if bounding box are overlapping.\nfunction bboxToBBoxDistance(bbox1, bbox2, ruler) {\n    if (!isValidBBox(bbox1) || !isValidBBox(bbox2)) {\n        return NaN;\n    }\n    let dx = 0.0;\n    let dy = 0.0;\n    // bbox1 in left side\n    if (bbox1[2] < bbox2[0]) {\n        dx = bbox2[0] - bbox1[2];\n    }\n    // bbox1 in right side\n    if (bbox1[0] > bbox2[2]) {\n        dx = bbox1[0] - bbox2[2];\n    }\n    // bbox1 in above side\n    if (bbox1[1] > bbox2[3]) {\n        dy = bbox1[1] - bbox2[3];\n    }\n    // bbox1 in down side\n    if (bbox1[3] < bbox2[1]) {\n        dy = bbox2[1] - bbox1[3];\n    }\n    return ruler.distance([0.0, 0.0], [dx, dy]);\n}\nfunction pointToLineDistance(point, line, ruler) {\n    const nearestPoint = ruler.pointOnLine(line, point);\n    return ruler.distance(point, nearestPoint.point);\n}\nfunction segmentToSegmentDistance(p1, p2, q1, q2, ruler) {\n    const dist1 = Math.min(pointToLineDistance(p1, [q1, q2], ruler), pointToLineDistance(p2, [q1, q2], ruler));\n    const dist2 = Math.min(pointToLineDistance(q1, [p1, p2], ruler), pointToLineDistance(q2, [p1, p2], ruler));\n    return Math.min(dist1, dist2);\n}\nfunction lineToLineDistance(line1, range1, line2, range2, ruler) {\n    const rangeSafe = isRangeSafe(range1, line1.length) && isRangeSafe(range2, line2.length);\n    if (!rangeSafe) {\n        return Infinity;\n    }\n    let dist = Infinity;\n    for (let i = range1[0]; i < range1[1]; ++i) {\n        const p1 = line1[i];\n        const p2 = line1[i + 1];\n        for (let j = range2[0]; j < range2[1]; ++j) {\n            const q1 = line2[j];\n            const q2 = line2[j + 1];\n            if (segmentIntersectSegment(p1, p2, q1, q2)) {\n                return 0.0;\n            }\n            dist = Math.min(dist, segmentToSegmentDistance(p1, p2, q1, q2, ruler));\n        }\n    }\n    return dist;\n}\nfunction pointsToPointsDistance(points1, range1, points2, range2, ruler) {\n    const rangeSafe = isRangeSafe(range1, points1.length) && isRangeSafe(range2, points2.length);\n    if (!rangeSafe) {\n        return NaN;\n    }\n    let dist = Infinity;\n    for (let i = range1[0]; i <= range1[1]; ++i) {\n        for (let j = range2[0]; j <= range2[1]; ++j) {\n            dist = Math.min(dist, ruler.distance(points1[i], points2[j]));\n            if (dist === 0.0) {\n                return dist;\n            }\n        }\n    }\n    return dist;\n}\nfunction pointToPolygonDistance(point, polygon, ruler) {\n    if (pointWithinPolygon(point, polygon, true)) {\n        return 0.0;\n    }\n    let dist = Infinity;\n    for (const ring of polygon) {\n        const front = ring[0];\n        const back = ring[ring.length - 1];\n        if (front !== back) {\n            dist = Math.min(dist, pointToLineDistance(point, [back, front], ruler));\n            if (dist === 0.0) {\n                return dist;\n            }\n        }\n        const nearestPoint = ruler.pointOnLine(ring, point);\n        dist = Math.min(dist, ruler.distance(point, nearestPoint.point));\n        if (dist === 0.0) {\n            return dist;\n        }\n    }\n    return dist;\n}\nfunction lineToPolygonDistance(line, range, polygon, ruler) {\n    if (!isRangeSafe(range, line.length)) {\n        return NaN;\n    }\n    for (let i = range[0]; i <= range[1]; ++i) {\n        if (pointWithinPolygon(line[i], polygon, true)) {\n            return 0.0;\n        }\n    }\n    let dist = Infinity;\n    for (let i = range[0]; i < range[1]; ++i) {\n        const p1 = line[i];\n        const p2 = line[i + 1];\n        for (const ring of polygon) {\n            for (let j = 0, len = ring.length, k = len - 1; j < len; k = j++) {\n                const q1 = ring[k];\n                const q2 = ring[j];\n                if (segmentIntersectSegment(p1, p2, q1, q2)) {\n                    return 0.0;\n                }\n                dist = Math.min(dist, segmentToSegmentDistance(p1, p2, q1, q2, ruler));\n            }\n        }\n    }\n    return dist;\n}\nfunction polygonIntersect(poly1, poly2) {\n    for (const ring of poly1) {\n        for (const point of ring) {\n            if (pointWithinPolygon(point, poly2, true)) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\nfunction polygonToPolygonDistance(polygon1, polygon2, ruler, currentMiniDist = Infinity) {\n    const bbox1 = getPolygonBBox(polygon1);\n    const bbox2 = getPolygonBBox(polygon2);\n    if (currentMiniDist !== Infinity && bboxToBBoxDistance(bbox1, bbox2, ruler) >= currentMiniDist) {\n        return currentMiniDist;\n    }\n    if (boxWithinBox(bbox1, bbox2)) {\n        if (polygonIntersect(polygon1, polygon2)) {\n            return 0.0;\n        }\n    }\n    else if (polygonIntersect(polygon2, polygon1)) {\n        return 0.0;\n    }\n    let dist = Infinity;\n    for (const ring1 of polygon1) {\n        for (let i = 0, len1 = ring1.length, l = len1 - 1; i < len1; l = i++) {\n            const p1 = ring1[l];\n            const p2 = ring1[i];\n            for (const ring2 of polygon2) {\n                for (let j = 0, len2 = ring2.length, k = len2 - 1; j < len2; k = j++) {\n                    const q1 = ring2[k];\n                    const q2 = ring2[j];\n                    if (segmentIntersectSegment(p1, p2, q1, q2)) {\n                        return 0.0;\n                    }\n                    dist = Math.min(dist, segmentToSegmentDistance(p1, p2, q1, q2, ruler));\n                }\n            }\n        }\n    }\n    return dist;\n}\nfunction updateQueue(distQueue, miniDist, ruler, points, polyBBox, rangeA) {\n    if (!rangeA) {\n        return;\n    }\n    const tempDist = bboxToBBoxDistance(getBBox(points, rangeA), polyBBox, ruler);\n    // Insert new pair to the queue if the bbox distance is less than\n    // miniDist, The pair with biggest distance will be at the top\n    if (tempDist < miniDist) {\n        distQueue.push([tempDist, rangeA, [0, 0]]);\n    }\n}\nfunction updateQueueTwoSets(distQueue, miniDist, ruler, pointSet1, pointSet2, range1, range2) {\n    if (!range1 || !range2) {\n        return;\n    }\n    const tempDist = bboxToBBoxDistance(getBBox(pointSet1, range1), getBBox(pointSet2, range2), ruler);\n    // Insert new pair to the queue if the bbox distance is less than\n    // miniDist, The pair with biggest distance will be at the top\n    if (tempDist < miniDist) {\n        distQueue.push([tempDist, range1, range2]);\n    }\n}\n// Divide and conquer, the time complexity is O(n*lgn), faster than Brute force\n// O(n*n) Most of the time, use index for in-place processing.\nfunction pointsToPolygonDistance(points, isLine, polygon, ruler, currentMiniDist = Infinity) {\n    let miniDist = Math.min(ruler.distance(points[0], polygon[0][0]), currentMiniDist);\n    if (miniDist === 0.0) {\n        return miniDist;\n    }\n    const distQueue = new TinyQueue([[0, [0, points.length - 1], [0, 0]]], compareDistPair);\n    const polyBBox = getPolygonBBox(polygon);\n    while (distQueue.length > 0) {\n        const distPair = distQueue.pop();\n        if (distPair[0] >= miniDist) {\n            continue;\n        }\n        const range = distPair[1];\n        // In case the set size are relatively small, we could use brute-force directly\n        const threshold = isLine ? MinLinePointsSize : MinPointsSize;\n        if (getRangeSize(range) <= threshold) {\n            if (!isRangeSafe(range, points.length)) {\n                return NaN;\n            }\n            if (isLine) {\n                const tempDist = lineToPolygonDistance(points, range, polygon, ruler);\n                if (isNaN(tempDist) || tempDist === 0.0) {\n                    return tempDist;\n                }\n                miniDist = Math.min(miniDist, tempDist);\n            }\n            else {\n                for (let i = range[0]; i <= range[1]; ++i) {\n                    const tempDist = pointToPolygonDistance(points[i], polygon, ruler);\n                    miniDist = Math.min(miniDist, tempDist);\n                    if (miniDist === 0.0) {\n                        return 0.0;\n                    }\n                }\n            }\n        }\n        else {\n            const newRangesA = splitRange(range, isLine);\n            updateQueue(distQueue, miniDist, ruler, points, polyBBox, newRangesA[0]);\n            updateQueue(distQueue, miniDist, ruler, points, polyBBox, newRangesA[1]);\n        }\n    }\n    return miniDist;\n}\nfunction pointSetToPointSetDistance(pointSet1, isLine1, pointSet2, isLine2, ruler, currentMiniDist = Infinity) {\n    let miniDist = Math.min(currentMiniDist, ruler.distance(pointSet1[0], pointSet2[0]));\n    if (miniDist === 0.0) {\n        return miniDist;\n    }\n    const distQueue = new TinyQueue([[0, [0, pointSet1.length - 1], [0, pointSet2.length - 1]]], compareDistPair);\n    while (distQueue.length > 0) {\n        const distPair = distQueue.pop();\n        if (distPair[0] >= miniDist) {\n            continue;\n        }\n        const rangeA = distPair[1];\n        const rangeB = distPair[2];\n        const threshold1 = isLine1 ? MinLinePointsSize : MinPointsSize;\n        const threshold2 = isLine2 ? MinLinePointsSize : MinPointsSize;\n        // In case the set size are relatively small, we could use brute-force directly\n        if (getRangeSize(rangeA) <= threshold1 && getRangeSize(rangeB) <= threshold2) {\n            if (!isRangeSafe(rangeA, pointSet1.length) && isRangeSafe(rangeB, pointSet2.length)) {\n                return NaN;\n            }\n            let tempDist;\n            if (isLine1 && isLine2) {\n                tempDist = lineToLineDistance(pointSet1, rangeA, pointSet2, rangeB, ruler);\n                miniDist = Math.min(miniDist, tempDist);\n            }\n            else if (isLine1 && !isLine2) {\n                const sublibe = pointSet1.slice(rangeA[0], rangeA[1] + 1);\n                for (let i = rangeB[0]; i <= rangeB[1]; ++i) {\n                    tempDist = pointToLineDistance(pointSet2[i], sublibe, ruler);\n                    miniDist = Math.min(miniDist, tempDist);\n                    if (miniDist === 0.0) {\n                        return miniDist;\n                    }\n                }\n            }\n            else if (!isLine1 && isLine2) {\n                const sublibe = pointSet2.slice(rangeB[0], rangeB[1] + 1);\n                for (let i = rangeA[0]; i <= rangeA[1]; ++i) {\n                    tempDist = pointToLineDistance(pointSet1[i], sublibe, ruler);\n                    miniDist = Math.min(miniDist, tempDist);\n                    if (miniDist === 0.0) {\n                        return miniDist;\n                    }\n                }\n            }\n            else {\n                tempDist = pointsToPointsDistance(pointSet1, rangeA, pointSet2, rangeB, ruler);\n                miniDist = Math.min(miniDist, tempDist);\n            }\n        }\n        else {\n            const newRangesA = splitRange(rangeA, isLine1);\n            const newRangesB = splitRange(rangeB, isLine2);\n            updateQueueTwoSets(distQueue, miniDist, ruler, pointSet1, pointSet2, newRangesA[0], newRangesB[0]);\n            updateQueueTwoSets(distQueue, miniDist, ruler, pointSet1, pointSet2, newRangesA[0], newRangesB[1]);\n            updateQueueTwoSets(distQueue, miniDist, ruler, pointSet1, pointSet2, newRangesA[1], newRangesB[0]);\n            updateQueueTwoSets(distQueue, miniDist, ruler, pointSet1, pointSet2, newRangesA[1], newRangesB[1]);\n        }\n    }\n    return miniDist;\n}\nfunction pointToGeometryDistance(ctx, geometries) {\n    const tilePoints = ctx.geometry();\n    const pointPosition = tilePoints.flat().map(p => getLngLatFromTileCoord([p.x, p.y], ctx.canonical));\n    if (tilePoints.length === 0) {\n        return NaN;\n    }\n    const ruler = new CheapRuler(pointPosition[0][1]);\n    let dist = Infinity;\n    for (const geometry of geometries) {\n        switch (geometry.type) {\n            case 'Point':\n                dist = Math.min(dist, pointSetToPointSetDistance(pointPosition, false, [geometry.coordinates], false, ruler, dist));\n                break;\n            case 'LineString':\n                dist = Math.min(dist, pointSetToPointSetDistance(pointPosition, false, geometry.coordinates, true, ruler, dist));\n                break;\n            case 'Polygon':\n                dist = Math.min(dist, pointsToPolygonDistance(pointPosition, false, geometry.coordinates, ruler, dist));\n                break;\n        }\n        if (dist === 0.0) {\n            return dist;\n        }\n    }\n    return dist;\n}\nfunction lineStringToGeometryDistance(ctx, geometries) {\n    const tileLine = ctx.geometry();\n    const linePositions = tileLine.flat().map(p => getLngLatFromTileCoord([p.x, p.y], ctx.canonical));\n    if (tileLine.length === 0) {\n        return NaN;\n    }\n    const ruler = new CheapRuler(linePositions[0][1]);\n    let dist = Infinity;\n    for (const geometry of geometries) {\n        switch (geometry.type) {\n            case 'Point':\n                dist = Math.min(dist, pointSetToPointSetDistance(linePositions, true, [geometry.coordinates], false, ruler, dist));\n                break;\n            case 'LineString':\n                dist = Math.min(dist, pointSetToPointSetDistance(linePositions, true, geometry.coordinates, true, ruler, dist));\n                break;\n            case 'Polygon':\n                dist = Math.min(dist, pointsToPolygonDistance(linePositions, true, geometry.coordinates, ruler, dist));\n                break;\n        }\n        if (dist === 0.0) {\n            return dist;\n        }\n    }\n    return dist;\n}\nfunction polygonToGeometryDistance(ctx, geometries) {\n    const tilePolygon = ctx.geometry();\n    if (tilePolygon.length === 0 || tilePolygon[0].length === 0) {\n        return NaN;\n    }\n    const polygons = classifyRings(tilePolygon, 0).map(polygon => {\n        return polygon.map(ring => {\n            return ring.map(p => getLngLatFromTileCoord([p.x, p.y], ctx.canonical));\n        });\n    });\n    const ruler = new CheapRuler(polygons[0][0][0][1]);\n    let dist = Infinity;\n    for (const geometry of geometries) {\n        for (const polygon of polygons) {\n            switch (geometry.type) {\n                case 'Point':\n                    dist = Math.min(dist, pointsToPolygonDistance([geometry.coordinates], false, polygon, ruler, dist));\n                    break;\n                case 'LineString':\n                    dist = Math.min(dist, pointsToPolygonDistance(geometry.coordinates, true, polygon, ruler, dist));\n                    break;\n                case 'Polygon':\n                    dist = Math.min(dist, polygonToPolygonDistance(polygon, geometry.coordinates, ruler, dist));\n                    break;\n            }\n            if (dist === 0.0) {\n                return dist;\n            }\n        }\n    }\n    return dist;\n}\nfunction toSimpleGeometry(geometry) {\n    if (geometry.type === 'MultiPolygon') {\n        return geometry.coordinates.map(polygon => {\n            return {\n                type: 'Polygon',\n                coordinates: polygon\n            };\n        });\n    }\n    if (geometry.type === 'MultiLineString') {\n        return geometry.coordinates.map(lineString => {\n            return {\n                type: 'LineString',\n                coordinates: lineString\n            };\n        });\n    }\n    if (geometry.type === 'MultiPoint') {\n        return geometry.coordinates.map(point => {\n            return {\n                type: 'Point',\n                coordinates: point\n            };\n        });\n    }\n    return [geometry];\n}\nclass Distance {\n    constructor(geojson, geometries) {\n        this.type = NumberType;\n        this.geojson = geojson;\n        this.geometries = geometries;\n    }\n    static parse(args, context) {\n        if (args.length !== 2)\n            return context.error(`'distance' expression requires exactly one argument, but found ${args.length - 1} instead.`);\n        if (isValue(args[1])) {\n            const geojson = args[1];\n            if (geojson.type === 'FeatureCollection') {\n                return new Distance(geojson, geojson.features.map(feature => toSimpleGeometry(feature.geometry)).flat());\n            }\n            else if (geojson.type === 'Feature') {\n                return new Distance(geojson, toSimpleGeometry(geojson.geometry));\n            }\n            else if ('type' in geojson && 'coordinates' in geojson) {\n                return new Distance(geojson, toSimpleGeometry(geojson));\n            }\n        }\n        return context.error('\\'distance\\' expression requires valid geojson object that contains polygon geometry type.');\n    }\n    evaluate(ctx) {\n        if (ctx.geometry() != null && ctx.canonicalID() != null) {\n            if (ctx.geometryType() === 'Point') {\n                return pointToGeometryDistance(ctx, this.geometries);\n            }\n            else if (ctx.geometryType() === 'LineString') {\n                return lineStringToGeometryDistance(ctx, this.geometries);\n            }\n            else if (ctx.geometryType() === 'Polygon') {\n                return polygonToGeometryDistance(ctx, this.geometries);\n            }\n        }\n        return NaN;\n    }\n    eachChild() { }\n    outputDefined() {\n        return true;\n    }\n}\n\nconst expressions$1 = {\n    // special forms\n    '==': Equals,\n    '!=': NotEquals,\n    '>': GreaterThan,\n    '<': LessThan,\n    '>=': GreaterThanOrEqual,\n    '<=': LessThanOrEqual,\n    'array': Assertion,\n    'at': At,\n    'boolean': Assertion,\n    'case': Case,\n    'coalesce': Coalesce,\n    'collator': CollatorExpression,\n    'format': FormatExpression,\n    'image': ImageExpression,\n    'in': In,\n    'index-of': IndexOf,\n    'interpolate': Interpolate,\n    'interpolate-hcl': Interpolate,\n    'interpolate-lab': Interpolate,\n    'length': Length,\n    'let': Let,\n    'literal': Literal,\n    'match': Match,\n    'number': Assertion,\n    'number-format': NumberFormat,\n    'object': Assertion,\n    'slice': Slice,\n    'step': Step,\n    'string': Assertion,\n    'to-boolean': Coercion,\n    'to-color': Coercion,\n    'to-number': Coercion,\n    'to-string': Coercion,\n    'var': Var,\n    'within': Within,\n    'distance': Distance\n};\n\nclass CompoundExpression {\n    constructor(name, type, evaluate, args) {\n        this.name = name;\n        this.type = type;\n        this._evaluate = evaluate;\n        this.args = args;\n    }\n    evaluate(ctx) {\n        return this._evaluate(ctx, this.args);\n    }\n    eachChild(fn) {\n        this.args.forEach(fn);\n    }\n    outputDefined() {\n        return false;\n    }\n    static parse(args, context) {\n        const op = args[0];\n        const definition = CompoundExpression.definitions[op];\n        if (!definition) {\n            return context.error(`Unknown expression \"${op}\". If you wanted a literal array, use [\"literal\", [...]].`, 0);\n        }\n        // Now check argument types against each signature\n        const type = Array.isArray(definition) ?\n            definition[0] : definition.type;\n        const availableOverloads = Array.isArray(definition) ?\n            [[definition[1], definition[2]]] :\n            definition.overloads;\n        const overloads = availableOverloads.filter(([signature]) => (!Array.isArray(signature) || // varags\n            signature.length === args.length - 1 // correct param count\n        ));\n        let signatureContext = null;\n        for (const [params, evaluate] of overloads) {\n            // Use a fresh context for each attempted signature so that, if\n            // we eventually succeed, we haven't polluted `context.errors`.\n            signatureContext = new ParsingContext(context.registry, isExpressionConstant, context.path, null, context.scope);\n            // First parse all the args, potentially coercing to the\n            // types expected by this overload.\n            const parsedArgs = [];\n            let argParseFailed = false;\n            for (let i = 1; i < args.length; i++) {\n                const arg = args[i];\n                const expectedType = Array.isArray(params) ?\n                    params[i - 1] :\n                    params.type;\n                const parsed = signatureContext.parse(arg, 1 + parsedArgs.length, expectedType);\n                if (!parsed) {\n                    argParseFailed = true;\n                    break;\n                }\n                parsedArgs.push(parsed);\n            }\n            if (argParseFailed) {\n                // Couldn't coerce args of this overload to expected type, move\n                // on to next one.\n                continue;\n            }\n            if (Array.isArray(params)) {\n                if (params.length !== parsedArgs.length) {\n                    signatureContext.error(`Expected ${params.length} arguments, but found ${parsedArgs.length} instead.`);\n                    continue;\n                }\n            }\n            for (let i = 0; i < parsedArgs.length; i++) {\n                const expected = Array.isArray(params) ? params[i] : params.type;\n                const arg = parsedArgs[i];\n                signatureContext.concat(i + 1).checkSubtype(expected, arg.type);\n            }\n            if (signatureContext.errors.length === 0) {\n                return new CompoundExpression(op, type, evaluate, parsedArgs);\n            }\n        }\n        if (overloads.length === 1) {\n            context.errors.push(...signatureContext.errors);\n        }\n        else {\n            const expected = overloads.length ? overloads : availableOverloads;\n            const signatures = expected\n                .map(([params]) => stringifySignature(params))\n                .join(' | ');\n            const actualTypes = [];\n            // For error message, re-parse arguments without trying to\n            // apply any coercions\n            for (let i = 1; i < args.length; i++) {\n                const parsed = context.parse(args[i], 1 + actualTypes.length);\n                if (!parsed)\n                    return null;\n                actualTypes.push(typeToString(parsed.type));\n            }\n            context.error(`Expected arguments of type ${signatures}, but found (${actualTypes.join(', ')}) instead.`);\n        }\n        return null;\n    }\n    static register(registry, definitions) {\n        CompoundExpression.definitions = definitions;\n        for (const name in definitions) {\n            registry[name] = CompoundExpression;\n        }\n    }\n}\nfunction rgba(ctx, [r, g, b, a]) {\n    r = r.evaluate(ctx);\n    g = g.evaluate(ctx);\n    b = b.evaluate(ctx);\n    const alpha = a ? a.evaluate(ctx) : 1;\n    const error = validateRGBA(r, g, b, alpha);\n    if (error)\n        throw new RuntimeError(error);\n    return new Color(r / 255, g / 255, b / 255, alpha, false);\n}\nfunction has(key, obj) {\n    return key in obj;\n}\nfunction get(key, obj) {\n    const v = obj[key];\n    return typeof v === 'undefined' ? null : v;\n}\nfunction binarySearch(v, a, i, j) {\n    while (i <= j) {\n        const m = (i + j) >> 1;\n        if (a[m] === v)\n            return true;\n        if (a[m] > v)\n            j = m - 1;\n        else\n            i = m + 1;\n    }\n    return false;\n}\nfunction varargs(type) {\n    return { type };\n}\nCompoundExpression.register(expressions$1, {\n    'error': [\n        ErrorType,\n        [StringType],\n        (ctx, [v]) => { throw new RuntimeError(v.evaluate(ctx)); }\n    ],\n    'typeof': [\n        StringType,\n        [ValueType],\n        (ctx, [v]) => typeToString(typeOf(v.evaluate(ctx)))\n    ],\n    'to-rgba': [\n        array(NumberType, 4),\n        [ColorType],\n        (ctx, [v]) => {\n            const [r, g, b, a] = v.evaluate(ctx).rgb;\n            return [r * 255, g * 255, b * 255, a];\n        },\n    ],\n    'rgb': [\n        ColorType,\n        [NumberType, NumberType, NumberType],\n        rgba\n    ],\n    'rgba': [\n        ColorType,\n        [NumberType, NumberType, NumberType, NumberType],\n        rgba\n    ],\n    'has': {\n        type: BooleanType,\n        overloads: [\n            [\n                [StringType],\n                (ctx, [key]) => has(key.evaluate(ctx), ctx.properties())\n            ], [\n                [StringType, ObjectType],\n                (ctx, [key, obj]) => has(key.evaluate(ctx), obj.evaluate(ctx))\n            ]\n        ]\n    },\n    'get': {\n        type: ValueType,\n        overloads: [\n            [\n                [StringType],\n                (ctx, [key]) => get(key.evaluate(ctx), ctx.properties())\n            ], [\n                [StringType, ObjectType],\n                (ctx, [key, obj]) => get(key.evaluate(ctx), obj.evaluate(ctx))\n            ]\n        ]\n    },\n    'feature-state': [\n        ValueType,\n        [StringType],\n        (ctx, [key]) => get(key.evaluate(ctx), ctx.featureState || {})\n    ],\n    'properties': [\n        ObjectType,\n        [],\n        (ctx) => ctx.properties()\n    ],\n    'geometry-type': [\n        StringType,\n        [],\n        (ctx) => ctx.geometryType()\n    ],\n    'id': [\n        ValueType,\n        [],\n        (ctx) => ctx.id()\n    ],\n    'zoom': [\n        NumberType,\n        [],\n        (ctx) => ctx.globals.zoom\n    ],\n    'heatmap-density': [\n        NumberType,\n        [],\n        (ctx) => ctx.globals.heatmapDensity || 0\n    ],\n    'line-progress': [\n        NumberType,\n        [],\n        (ctx) => ctx.globals.lineProgress || 0\n    ],\n    'accumulated': [\n        ValueType,\n        [],\n        (ctx) => ctx.globals.accumulated === undefined ? null : ctx.globals.accumulated\n    ],\n    '+': [\n        NumberType,\n        varargs(NumberType),\n        (ctx, args) => {\n            let result = 0;\n            for (const arg of args) {\n                result += arg.evaluate(ctx);\n            }\n            return result;\n        }\n    ],\n    '*': [\n        NumberType,\n        varargs(NumberType),\n        (ctx, args) => {\n            let result = 1;\n            for (const arg of args) {\n                result *= arg.evaluate(ctx);\n            }\n            return result;\n        }\n    ],\n    '-': {\n        type: NumberType,\n        overloads: [\n            [\n                [NumberType, NumberType],\n                (ctx, [a, b]) => a.evaluate(ctx) - b.evaluate(ctx)\n            ], [\n                [NumberType],\n                (ctx, [a]) => -a.evaluate(ctx)\n            ]\n        ]\n    },\n    '/': [\n        NumberType,\n        [NumberType, NumberType],\n        (ctx, [a, b]) => a.evaluate(ctx) / b.evaluate(ctx)\n    ],\n    '%': [\n        NumberType,\n        [NumberType, NumberType],\n        (ctx, [a, b]) => a.evaluate(ctx) % b.evaluate(ctx)\n    ],\n    'ln2': [\n        NumberType,\n        [],\n        () => Math.LN2\n    ],\n    'pi': [\n        NumberType,\n        [],\n        () => Math.PI\n    ],\n    'e': [\n        NumberType,\n        [],\n        () => Math.E\n    ],\n    '^': [\n        NumberType,\n        [NumberType, NumberType],\n        (ctx, [b, e]) => Math.pow(b.evaluate(ctx), e.evaluate(ctx))\n    ],\n    'sqrt': [\n        NumberType,\n        [NumberType],\n        (ctx, [x]) => Math.sqrt(x.evaluate(ctx))\n    ],\n    'log10': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.log(n.evaluate(ctx)) / Math.LN10\n    ],\n    'ln': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.log(n.evaluate(ctx))\n    ],\n    'log2': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.log(n.evaluate(ctx)) / Math.LN2\n    ],\n    'sin': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.sin(n.evaluate(ctx))\n    ],\n    'cos': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.cos(n.evaluate(ctx))\n    ],\n    'tan': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.tan(n.evaluate(ctx))\n    ],\n    'asin': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.asin(n.evaluate(ctx))\n    ],\n    'acos': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.acos(n.evaluate(ctx))\n    ],\n    'atan': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.atan(n.evaluate(ctx))\n    ],\n    'min': [\n        NumberType,\n        varargs(NumberType),\n        (ctx, args) => Math.min(...args.map(arg => arg.evaluate(ctx)))\n    ],\n    'max': [\n        NumberType,\n        varargs(NumberType),\n        (ctx, args) => Math.max(...args.map(arg => arg.evaluate(ctx)))\n    ],\n    'abs': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.abs(n.evaluate(ctx))\n    ],\n    'round': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => {\n            const v = n.evaluate(ctx);\n            // Javascript's Math.round() rounds towards +Infinity for halfway\n            // values, even when they're negative. It's more common to round\n            // away from 0 (e.g., this is what python and C++ do)\n            return v < 0 ? -Math.round(-v) : Math.round(v);\n        }\n    ],\n    'floor': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.floor(n.evaluate(ctx))\n    ],\n    'ceil': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.ceil(n.evaluate(ctx))\n    ],\n    'filter-==': [\n        BooleanType,\n        [StringType, ValueType],\n        (ctx, [k, v]) => ctx.properties()[k.value] === v.value\n    ],\n    'filter-id-==': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => ctx.id() === v.value\n    ],\n    'filter-type-==': [\n        BooleanType,\n        [StringType],\n        (ctx, [v]) => ctx.geometryType() === v.value\n    ],\n    'filter-<': [\n        BooleanType,\n        [StringType, ValueType],\n        (ctx, [k, v]) => {\n            const a = ctx.properties()[k.value];\n            const b = v.value;\n            return typeof a === typeof b && a < b;\n        }\n    ],\n    'filter-id-<': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => {\n            const a = ctx.id();\n            const b = v.value;\n            return typeof a === typeof b && a < b;\n        }\n    ],\n    'filter->': [\n        BooleanType,\n        [StringType, ValueType],\n        (ctx, [k, v]) => {\n            const a = ctx.properties()[k.value];\n            const b = v.value;\n            return typeof a === typeof b && a > b;\n        }\n    ],\n    'filter-id->': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => {\n            const a = ctx.id();\n            const b = v.value;\n            return typeof a === typeof b && a > b;\n        }\n    ],\n    'filter-<=': [\n        BooleanType,\n        [StringType, ValueType],\n        (ctx, [k, v]) => {\n            const a = ctx.properties()[k.value];\n            const b = v.value;\n            return typeof a === typeof b && a <= b;\n        }\n    ],\n    'filter-id-<=': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => {\n            const a = ctx.id();\n            const b = v.value;\n            return typeof a === typeof b && a <= b;\n        }\n    ],\n    'filter->=': [\n        BooleanType,\n        [StringType, ValueType],\n        (ctx, [k, v]) => {\n            const a = ctx.properties()[k.value];\n            const b = v.value;\n            return typeof a === typeof b && a >= b;\n        }\n    ],\n    'filter-id->=': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => {\n            const a = ctx.id();\n            const b = v.value;\n            return typeof a === typeof b && a >= b;\n        }\n    ],\n    'filter-has': [\n        BooleanType,\n        [ValueType],\n        (ctx, [k]) => k.value in ctx.properties()\n    ],\n    'filter-has-id': [\n        BooleanType,\n        [],\n        (ctx) => (ctx.id() !== null && ctx.id() !== undefined)\n    ],\n    'filter-type-in': [\n        BooleanType,\n        [array(StringType)],\n        (ctx, [v]) => v.value.indexOf(ctx.geometryType()) >= 0\n    ],\n    'filter-id-in': [\n        BooleanType,\n        [array(ValueType)],\n        (ctx, [v]) => v.value.indexOf(ctx.id()) >= 0\n    ],\n    'filter-in-small': [\n        BooleanType,\n        [StringType, array(ValueType)],\n        // assumes v is an array literal\n        (ctx, [k, v]) => v.value.indexOf(ctx.properties()[k.value]) >= 0\n    ],\n    'filter-in-large': [\n        BooleanType,\n        [StringType, array(ValueType)],\n        // assumes v is a array literal with values sorted in ascending order and of a single type\n        (ctx, [k, v]) => binarySearch(ctx.properties()[k.value], v.value, 0, v.value.length - 1)\n    ],\n    'all': {\n        type: BooleanType,\n        overloads: [\n            [\n                [BooleanType, BooleanType],\n                (ctx, [a, b]) => a.evaluate(ctx) && b.evaluate(ctx)\n            ],\n            [\n                varargs(BooleanType),\n                (ctx, args) => {\n                    for (const arg of args) {\n                        if (!arg.evaluate(ctx))\n                            return false;\n                    }\n                    return true;\n                }\n            ]\n        ]\n    },\n    'any': {\n        type: BooleanType,\n        overloads: [\n            [\n                [BooleanType, BooleanType],\n                (ctx, [a, b]) => a.evaluate(ctx) || b.evaluate(ctx)\n            ],\n            [\n                varargs(BooleanType),\n                (ctx, args) => {\n                    for (const arg of args) {\n                        if (arg.evaluate(ctx))\n                            return true;\n                    }\n                    return false;\n                }\n            ]\n        ]\n    },\n    '!': [\n        BooleanType,\n        [BooleanType],\n        (ctx, [b]) => !b.evaluate(ctx)\n    ],\n    'is-supported-script': [\n        BooleanType,\n        [StringType],\n        // At parse time this will always return true, so we need to exclude this expression with isGlobalPropertyConstant\n        (ctx, [s]) => {\n            const isSupportedScript = ctx.globals && ctx.globals.isSupportedScript;\n            if (isSupportedScript) {\n                return isSupportedScript(s.evaluate(ctx));\n            }\n            return true;\n        }\n    ],\n    'upcase': [\n        StringType,\n        [StringType],\n        (ctx, [s]) => s.evaluate(ctx).toUpperCase()\n    ],\n    'downcase': [\n        StringType,\n        [StringType],\n        (ctx, [s]) => s.evaluate(ctx).toLowerCase()\n    ],\n    'concat': [\n        StringType,\n        varargs(ValueType),\n        (ctx, args) => args.map(arg => valueToString(arg.evaluate(ctx))).join('')\n    ],\n    'resolved-locale': [\n        StringType,\n        [CollatorType],\n        (ctx, [collator]) => collator.evaluate(ctx).resolvedLocale()\n    ]\n});\nfunction stringifySignature(signature) {\n    if (Array.isArray(signature)) {\n        return `(${signature.map(typeToString).join(', ')})`;\n    }\n    else {\n        return `(${typeToString(signature.type)}...)`;\n    }\n}\nfunction isExpressionConstant(expression) {\n    if (expression instanceof Var) {\n        return isExpressionConstant(expression.boundExpression);\n    }\n    else if (expression instanceof CompoundExpression && expression.name === 'error') {\n        return false;\n    }\n    else if (expression instanceof CollatorExpression) {\n        // Although the results of a Collator expression with fixed arguments\n        // generally shouldn't change between executions, we can't serialize them\n        // as constant expressions because results change based on environment.\n        return false;\n    }\n    else if (expression instanceof Within) {\n        return false;\n    }\n    else if (expression instanceof Distance) {\n        return false;\n    }\n    const isTypeAnnotation = expression instanceof Coercion ||\n        expression instanceof Assertion;\n    let childrenConstant = true;\n    expression.eachChild(child => {\n        // We can _almost_ assume that if `expressions` children are constant,\n        // they would already have been evaluated to Literal values when they\n        // were parsed.  Type annotations are the exception, because they might\n        // have been inferred and added after a child was parsed.\n        // So we recurse into isConstant() for the children of type annotations,\n        // but otherwise simply check whether they are Literals.\n        if (isTypeAnnotation) {\n            childrenConstant = childrenConstant && isExpressionConstant(child);\n        }\n        else {\n            childrenConstant = childrenConstant && child instanceof Literal;\n        }\n    });\n    if (!childrenConstant) {\n        return false;\n    }\n    return isFeatureConstant(expression) &&\n        isGlobalPropertyConstant(expression, ['zoom', 'heatmap-density', 'line-progress', 'accumulated', 'is-supported-script']);\n}\nfunction isFeatureConstant(e) {\n    if (e instanceof CompoundExpression) {\n        if (e.name === 'get' && e.args.length === 1) {\n            return false;\n        }\n        else if (e.name === 'feature-state') {\n            return false;\n        }\n        else if (e.name === 'has' && e.args.length === 1) {\n            return false;\n        }\n        else if (e.name === 'properties' ||\n            e.name === 'geometry-type' ||\n            e.name === 'id') {\n            return false;\n        }\n        else if (/^filter-/.test(e.name)) {\n            return false;\n        }\n    }\n    if (e instanceof Within) {\n        return false;\n    }\n    if (e instanceof Distance) {\n        return false;\n    }\n    let result = true;\n    e.eachChild(arg => {\n        if (result && !isFeatureConstant(arg)) {\n            result = false;\n        }\n    });\n    return result;\n}\nfunction isStateConstant(e) {\n    if (e instanceof CompoundExpression) {\n        if (e.name === 'feature-state') {\n            return false;\n        }\n    }\n    let result = true;\n    e.eachChild(arg => {\n        if (result && !isStateConstant(arg)) {\n            result = false;\n        }\n    });\n    return result;\n}\nfunction isGlobalPropertyConstant(e, properties) {\n    if (e instanceof CompoundExpression && properties.indexOf(e.name) >= 0) {\n        return false;\n    }\n    let result = true;\n    e.eachChild((arg) => {\n        if (result && !isGlobalPropertyConstant(arg, properties)) {\n            result = false;\n        }\n    });\n    return result;\n}\n\nfunction success(value) {\n    return { result: 'success', value };\n}\nfunction error(value) {\n    return { result: 'error', value };\n}\n\nfunction supportsPropertyExpression(spec) {\n    return spec['property-type'] === 'data-driven' || spec['property-type'] === 'cross-faded-data-driven';\n}\nfunction supportsZoomExpression(spec) {\n    return !!spec.expression && spec.expression.parameters.indexOf('zoom') > -1;\n}\nfunction supportsInterpolation(spec) {\n    return !!spec.expression && spec.expression.interpolated;\n}\n\nfunction getType(val) {\n    if (val instanceof Number) {\n        return 'number';\n    }\n    else if (val instanceof String) {\n        return 'string';\n    }\n    else if (val instanceof Boolean) {\n        return 'boolean';\n    }\n    else if (Array.isArray(val)) {\n        return 'array';\n    }\n    else if (val === null) {\n        return 'null';\n    }\n    else {\n        return typeof val;\n    }\n}\n\nfunction isFunction$1(value) {\n    return typeof value === 'object' && value !== null && !Array.isArray(value);\n}\nfunction identityFunction(x) {\n    return x;\n}\nfunction createFunction(parameters, propertySpec) {\n    const isColor = propertySpec.type === 'color';\n    const zoomAndFeatureDependent = parameters.stops && typeof parameters.stops[0][0] === 'object';\n    const featureDependent = zoomAndFeatureDependent || parameters.property !== undefined;\n    const zoomDependent = zoomAndFeatureDependent || !featureDependent;\n    const type = parameters.type || (supportsInterpolation(propertySpec) ? 'exponential' : 'interval');\n    if (isColor || propertySpec.type === 'padding') {\n        const parseFn = isColor ? Color.parse : Padding.parse;\n        parameters = extendBy({}, parameters);\n        if (parameters.stops) {\n            parameters.stops = parameters.stops.map((stop) => {\n                return [stop[0], parseFn(stop[1])];\n            });\n        }\n        if (parameters.default) {\n            parameters.default = parseFn(parameters.default);\n        }\n        else {\n            parameters.default = parseFn(propertySpec.default);\n        }\n    }\n    if (parameters.colorSpace && !isSupportedInterpolationColorSpace(parameters.colorSpace)) {\n        throw new Error(`Unknown color space: \"${parameters.colorSpace}\"`);\n    }\n    let innerFun;\n    let hashedStops;\n    let categoricalKeyType;\n    if (type === 'exponential') {\n        innerFun = evaluateExponentialFunction;\n    }\n    else if (type === 'interval') {\n        innerFun = evaluateIntervalFunction;\n    }\n    else if (type === 'categorical') {\n        innerFun = evaluateCategoricalFunction;\n        // For categorical functions, generate an Object as a hashmap of the stops for fast searching\n        hashedStops = Object.create(null);\n        for (const stop of parameters.stops) {\n            hashedStops[stop[0]] = stop[1];\n        }\n        // Infer key type based on first stop key-- used to encforce strict type checking later\n        categoricalKeyType = typeof parameters.stops[0][0];\n    }\n    else if (type === 'identity') {\n        innerFun = evaluateIdentityFunction;\n    }\n    else {\n        throw new Error(`Unknown function type \"${type}\"`);\n    }\n    if (zoomAndFeatureDependent) {\n        const featureFunctions = {};\n        const zoomStops = [];\n        for (let s = 0; s < parameters.stops.length; s++) {\n            const stop = parameters.stops[s];\n            const zoom = stop[0].zoom;\n            if (featureFunctions[zoom] === undefined) {\n                featureFunctions[zoom] = {\n                    zoom,\n                    type: parameters.type,\n                    property: parameters.property,\n                    default: parameters.default,\n                    stops: []\n                };\n                zoomStops.push(zoom);\n            }\n            featureFunctions[zoom].stops.push([stop[0].value, stop[1]]);\n        }\n        const featureFunctionStops = [];\n        for (const z of zoomStops) {\n            featureFunctionStops.push([featureFunctions[z].zoom, createFunction(featureFunctions[z], propertySpec)]);\n        }\n        const interpolationType = { name: 'linear' };\n        return {\n            kind: 'composite',\n            interpolationType,\n            interpolationFactor: Interpolate.interpolationFactor.bind(undefined, interpolationType),\n            zoomStops: featureFunctionStops.map(s => s[0]),\n            evaluate({ zoom }, properties) {\n                return evaluateExponentialFunction({\n                    stops: featureFunctionStops,\n                    base: parameters.base\n                }, propertySpec, zoom).evaluate(zoom, properties);\n            }\n        };\n    }\n    else if (zoomDependent) {\n        const interpolationType = type === 'exponential' ?\n            { name: 'exponential', base: parameters.base !== undefined ? parameters.base : 1 } : null;\n        return {\n            kind: 'camera',\n            interpolationType,\n            interpolationFactor: Interpolate.interpolationFactor.bind(undefined, interpolationType),\n            zoomStops: parameters.stops.map(s => s[0]),\n            evaluate: ({ zoom }) => innerFun(parameters, propertySpec, zoom, hashedStops, categoricalKeyType)\n        };\n    }\n    else {\n        return {\n            kind: 'source',\n            evaluate(_, feature) {\n                const value = feature && feature.properties ? feature.properties[parameters.property] : undefined;\n                if (value === undefined) {\n                    return coalesce$1(parameters.default, propertySpec.default);\n                }\n                return innerFun(parameters, propertySpec, value, hashedStops, categoricalKeyType);\n            }\n        };\n    }\n}\nfunction coalesce$1(a, b, c) {\n    if (a !== undefined)\n        return a;\n    if (b !== undefined)\n        return b;\n    if (c !== undefined)\n        return c;\n}\nfunction evaluateCategoricalFunction(parameters, propertySpec, input, hashedStops, keyType) {\n    const evaluated = typeof input === keyType ? hashedStops[input] : undefined; // Enforce strict typing on input\n    return coalesce$1(evaluated, parameters.default, propertySpec.default);\n}\nfunction evaluateIntervalFunction(parameters, propertySpec, input) {\n    // Edge cases\n    if (getType(input) !== 'number')\n        return coalesce$1(parameters.default, propertySpec.default);\n    const n = parameters.stops.length;\n    if (n === 1)\n        return parameters.stops[0][1];\n    if (input <= parameters.stops[0][0])\n        return parameters.stops[0][1];\n    if (input >= parameters.stops[n - 1][0])\n        return parameters.stops[n - 1][1];\n    const index = findStopLessThanOrEqualTo(parameters.stops.map((stop) => stop[0]), input);\n    return parameters.stops[index][1];\n}\nfunction evaluateExponentialFunction(parameters, propertySpec, input) {\n    const base = parameters.base !== undefined ? parameters.base : 1;\n    // Edge cases\n    if (getType(input) !== 'number')\n        return coalesce$1(parameters.default, propertySpec.default);\n    const n = parameters.stops.length;\n    if (n === 1)\n        return parameters.stops[0][1];\n    if (input <= parameters.stops[0][0])\n        return parameters.stops[0][1];\n    if (input >= parameters.stops[n - 1][0])\n        return parameters.stops[n - 1][1];\n    const index = findStopLessThanOrEqualTo(parameters.stops.map((stop) => stop[0]), input);\n    const t = interpolationFactor(input, base, parameters.stops[index][0], parameters.stops[index + 1][0]);\n    const outputLower = parameters.stops[index][1];\n    const outputUpper = parameters.stops[index + 1][1];\n    const interp = interpolateFactory[propertySpec.type] || identityFunction;\n    if (typeof outputLower.evaluate === 'function') {\n        return {\n            evaluate(...args) {\n                const evaluatedLower = outputLower.evaluate.apply(undefined, args);\n                const evaluatedUpper = outputUpper.evaluate.apply(undefined, args);\n                // Special case for fill-outline-color, which has no spec default.\n                if (evaluatedLower === undefined || evaluatedUpper === undefined) {\n                    return undefined;\n                }\n                return interp(evaluatedLower, evaluatedUpper, t, parameters.colorSpace);\n            }\n        };\n    }\n    return interp(outputLower, outputUpper, t, parameters.colorSpace);\n}\nfunction evaluateIdentityFunction(parameters, propertySpec, input) {\n    switch (propertySpec.type) {\n        case 'color':\n            input = Color.parse(input);\n            break;\n        case 'formatted':\n            input = Formatted.fromString(input.toString());\n            break;\n        case 'resolvedImage':\n            input = ResolvedImage.fromString(input.toString());\n            break;\n        case 'padding':\n            input = Padding.parse(input);\n            break;\n        default:\n            if (getType(input) !== propertySpec.type && (propertySpec.type !== 'enum' || !propertySpec.values[input])) {\n                input = undefined;\n            }\n    }\n    return coalesce$1(input, parameters.default, propertySpec.default);\n}\n/**\n * Returns a ratio that can be used to interpolate between exponential function\n * stops.\n *\n * How it works:\n * Two consecutive stop values define a (scaled and shifted) exponential\n * function `f(x) = a * base^x + b`, where `base` is the user-specified base,\n * and `a` and `b` are constants affording sufficient degrees of freedom to fit\n * the function to the given stops.\n *\n * Here's a bit of algebra that lets us compute `f(x)` directly from the stop\n * values without explicitly solving for `a` and `b`:\n *\n * First stop value: `f(x0) = y0 = a * base^x0 + b`\n * Second stop value: `f(x1) = y1 = a * base^x1 + b`\n * => `y1 - y0 = a(base^x1 - base^x0)`\n * => `a = (y1 - y0)/(base^x1 - base^x0)`\n *\n * Desired value: `f(x) = y = a * base^x + b`\n * => `f(x) = y0 + a * (base^x - base^x0)`\n *\n * From the above, we can replace the `a` in `a * (base^x - base^x0)` and do a\n * little algebra:\n * ```\n * a * (base^x - base^x0) = (y1 - y0)/(base^x1 - base^x0) * (base^x - base^x0)\n *                     = (y1 - y0) * (base^x - base^x0) / (base^x1 - base^x0)\n * ```\n *\n * If we let `(base^x - base^x0) / (base^x1 base^x0)`, then we have\n * `f(x) = y0 + (y1 - y0) * ratio`.  In other words, `ratio` may be treated as\n * an interpolation factor between the two stops' output values.\n *\n * (Note: a slightly different form for `ratio`,\n * `(base^(x-x0) - 1) / (base^(x1-x0) - 1) `, is equivalent, but requires fewer\n * expensive `Math.pow()` operations.)\n *\n * @private\n */\nfunction interpolationFactor(input, base, lowerValue, upperValue) {\n    const difference = upperValue - lowerValue;\n    const progress = input - lowerValue;\n    if (difference === 0) {\n        return 0;\n    }\n    else if (base === 1) {\n        return progress / difference;\n    }\n    else {\n        return (Math.pow(base, progress) - 1) / (Math.pow(base, difference) - 1);\n    }\n}\n\nclass StyleExpression {\n    constructor(expression, propertySpec) {\n        this.expression = expression;\n        this._warningHistory = {};\n        this._evaluator = new EvaluationContext();\n        this._defaultValue = propertySpec ? getDefaultValue(propertySpec) : null;\n        this._enumValues = propertySpec && propertySpec.type === 'enum' ? propertySpec.values : null;\n    }\n    evaluateWithoutErrorHandling(globals, feature, featureState, canonical, availableImages, formattedSection) {\n        this._evaluator.globals = globals;\n        this._evaluator.feature = feature;\n        this._evaluator.featureState = featureState;\n        this._evaluator.canonical = canonical;\n        this._evaluator.availableImages = availableImages || null;\n        this._evaluator.formattedSection = formattedSection;\n        return this.expression.evaluate(this._evaluator);\n    }\n    evaluate(globals, feature, featureState, canonical, availableImages, formattedSection) {\n        this._evaluator.globals = globals;\n        this._evaluator.feature = feature || null;\n        this._evaluator.featureState = featureState || null;\n        this._evaluator.canonical = canonical;\n        this._evaluator.availableImages = availableImages || null;\n        this._evaluator.formattedSection = formattedSection || null;\n        try {\n            const val = this.expression.evaluate(this._evaluator);\n            if (val === null || val === undefined || (typeof val === 'number' && val !== val)) {\n                return this._defaultValue;\n            }\n            if (this._enumValues && !(val in this._enumValues)) {\n                throw new RuntimeError(`Expected value to be one of ${Object.keys(this._enumValues).map(v => JSON.stringify(v)).join(', ')}, but found ${JSON.stringify(val)} instead.`);\n            }\n            return val;\n        }\n        catch (e) {\n            if (!this._warningHistory[e.message]) {\n                this._warningHistory[e.message] = true;\n                if (typeof console !== 'undefined') {\n                    console.warn(e.message);\n                }\n            }\n            return this._defaultValue;\n        }\n    }\n}\nfunction isExpression(expression) {\n    return Array.isArray(expression) && expression.length > 0 &&\n        typeof expression[0] === 'string' && expression[0] in expressions$1;\n}\n/**\n * Parse and typecheck the given style spec JSON expression.  If\n * options.defaultValue is provided, then the resulting StyleExpression's\n * `evaluate()` method will handle errors by logging a warning (once per\n * message) and returning the default value.  Otherwise, it will throw\n * evaluation errors.\n *\n * @private\n */\nfunction createExpression(expression, propertySpec) {\n    const parser = new ParsingContext(expressions$1, isExpressionConstant, [], propertySpec ? getExpectedType(propertySpec) : undefined);\n    // For string-valued properties, coerce to string at the top level rather than asserting.\n    const parsed = parser.parse(expression, undefined, undefined, undefined, propertySpec && propertySpec.type === 'string' ? { typeAnnotation: 'coerce' } : undefined);\n    if (!parsed) {\n        return error(parser.errors);\n    }\n    return success(new StyleExpression(parsed, propertySpec));\n}\nclass ZoomConstantExpression {\n    constructor(kind, expression) {\n        this.kind = kind;\n        this._styleExpression = expression;\n        this.isStateDependent = kind !== 'constant' && !isStateConstant(expression.expression);\n    }\n    evaluateWithoutErrorHandling(globals, feature, featureState, canonical, availableImages, formattedSection) {\n        return this._styleExpression.evaluateWithoutErrorHandling(globals, feature, featureState, canonical, availableImages, formattedSection);\n    }\n    evaluate(globals, feature, featureState, canonical, availableImages, formattedSection) {\n        return this._styleExpression.evaluate(globals, feature, featureState, canonical, availableImages, formattedSection);\n    }\n}\nclass ZoomDependentExpression {\n    constructor(kind, expression, zoomStops, interpolationType) {\n        this.kind = kind;\n        this.zoomStops = zoomStops;\n        this._styleExpression = expression;\n        this.isStateDependent = kind !== 'camera' && !isStateConstant(expression.expression);\n        this.interpolationType = interpolationType;\n    }\n    evaluateWithoutErrorHandling(globals, feature, featureState, canonical, availableImages, formattedSection) {\n        return this._styleExpression.evaluateWithoutErrorHandling(globals, feature, featureState, canonical, availableImages, formattedSection);\n    }\n    evaluate(globals, feature, featureState, canonical, availableImages, formattedSection) {\n        return this._styleExpression.evaluate(globals, feature, featureState, canonical, availableImages, formattedSection);\n    }\n    interpolationFactor(input, lower, upper) {\n        if (this.interpolationType) {\n            return Interpolate.interpolationFactor(this.interpolationType, input, lower, upper);\n        }\n        else {\n            return 0;\n        }\n    }\n}\nfunction isZoomExpression(expression) {\n    return expression._styleExpression !== undefined;\n}\nfunction createPropertyExpression(expressionInput, propertySpec) {\n    const expression = createExpression(expressionInput, propertySpec);\n    if (expression.result === 'error') {\n        return expression;\n    }\n    const parsed = expression.value.expression;\n    const isFeatureConstantResult = isFeatureConstant(parsed);\n    if (!isFeatureConstantResult && !supportsPropertyExpression(propertySpec)) {\n        return error([new ExpressionParsingError('', 'data expressions not supported')]);\n    }\n    const isZoomConstant = isGlobalPropertyConstant(parsed, ['zoom']);\n    if (!isZoomConstant && !supportsZoomExpression(propertySpec)) {\n        return error([new ExpressionParsingError('', 'zoom expressions not supported')]);\n    }\n    const zoomCurve = findZoomCurve(parsed);\n    if (!zoomCurve && !isZoomConstant) {\n        return error([new ExpressionParsingError('', '\"zoom\" expression may only be used as input to a top-level \"step\" or \"interpolate\" expression.')]);\n    }\n    else if (zoomCurve instanceof ExpressionParsingError) {\n        return error([zoomCurve]);\n    }\n    else if (zoomCurve instanceof Interpolate && !supportsInterpolation(propertySpec)) {\n        return error([new ExpressionParsingError('', '\"interpolate\" expressions cannot be used with this property')]);\n    }\n    if (!zoomCurve) {\n        return success(isFeatureConstantResult ?\n            new ZoomConstantExpression('constant', expression.value) :\n            new ZoomConstantExpression('source', expression.value));\n    }\n    const interpolationType = zoomCurve instanceof Interpolate ? zoomCurve.interpolation : undefined;\n    return success(isFeatureConstantResult ?\n        new ZoomDependentExpression('camera', expression.value, zoomCurve.labels, interpolationType) :\n        new ZoomDependentExpression('composite', expression.value, zoomCurve.labels, interpolationType));\n}\n// serialization wrapper for old-style stop functions normalized to the\n// expression interface\nclass StylePropertyFunction {\n    constructor(parameters, specification) {\n        this._parameters = parameters;\n        this._specification = specification;\n        extendBy(this, createFunction(this._parameters, this._specification));\n    }\n    static deserialize(serialized) {\n        return new StylePropertyFunction(serialized._parameters, serialized._specification);\n    }\n    static serialize(input) {\n        return {\n            _parameters: input._parameters,\n            _specification: input._specification\n        };\n    }\n}\nfunction normalizePropertyExpression(value, specification) {\n    if (isFunction$1(value)) {\n        return new StylePropertyFunction(value, specification);\n    }\n    else if (isExpression(value)) {\n        const expression = createPropertyExpression(value, specification);\n        if (expression.result === 'error') {\n            // this should have been caught in validation\n            throw new Error(expression.value.map(err => `${err.key}: ${err.message}`).join(', '));\n        }\n        return expression.value;\n    }\n    else {\n        let constant = value;\n        if (specification.type === 'color' && typeof value === 'string') {\n            constant = Color.parse(value);\n        }\n        else if (specification.type === 'padding' && (typeof value === 'number' || Array.isArray(value))) {\n            constant = Padding.parse(value);\n        }\n        else if (specification.type === 'variableAnchorOffsetCollection' && Array.isArray(value)) {\n            constant = VariableAnchorOffsetCollection.parse(value);\n        }\n        else if (specification.type === 'projectionDefinition' && typeof value === 'string') {\n            constant = ProjectionDefinition.parse(value);\n        }\n        return {\n            kind: 'constant',\n            evaluate: () => constant\n        };\n    }\n}\n// Zoom-dependent expressions may only use [\"zoom\"] as the input to a top-level \"step\" or \"interpolate\"\n// expression (collectively referred to as a \"curve\"). The curve may be wrapped in one or more \"let\" or\n// \"coalesce\" expressions.\nfunction findZoomCurve(expression) {\n    let result = null;\n    if (expression instanceof Let) {\n        result = findZoomCurve(expression.result);\n    }\n    else if (expression instanceof Coalesce) {\n        for (const arg of expression.args) {\n            result = findZoomCurve(arg);\n            if (result) {\n                break;\n            }\n        }\n    }\n    else if ((expression instanceof Step || expression instanceof Interpolate) &&\n        expression.input instanceof CompoundExpression &&\n        expression.input.name === 'zoom') {\n        result = expression;\n    }\n    if (result instanceof ExpressionParsingError) {\n        return result;\n    }\n    expression.eachChild((child) => {\n        const childResult = findZoomCurve(child);\n        if (childResult instanceof ExpressionParsingError) {\n            result = childResult;\n        }\n        else if (!result && childResult) {\n            result = new ExpressionParsingError('', '\"zoom\" expression may only be used as input to a top-level \"step\" or \"interpolate\" expression.');\n        }\n        else if (result && childResult && result !== childResult) {\n            result = new ExpressionParsingError('', 'Only one zoom-based \"step\" or \"interpolate\" subexpression may be used in an expression.');\n        }\n    });\n    return result;\n}\nfunction getExpectedType(spec) {\n    const types = {\n        color: ColorType,\n        string: StringType,\n        number: NumberType,\n        enum: StringType,\n        boolean: BooleanType,\n        formatted: FormattedType,\n        padding: PaddingType,\n        projectionDefinition: ProjectionDefinitionType,\n        resolvedImage: ResolvedImageType,\n        variableAnchorOffsetCollection: VariableAnchorOffsetCollectionType\n    };\n    if (spec.type === 'array') {\n        return array(types[spec.value] || ValueType, spec.length);\n    }\n    return types[spec.type];\n}\nfunction getDefaultValue(spec) {\n    if (spec.type === 'color' && isFunction$1(spec.default)) {\n        // Special case for heatmap-color: it uses the 'default:' to define a\n        // default color ramp, but createExpression expects a simple value to fall\n        // back to in case of runtime errors\n        return new Color(0, 0, 0, 0);\n    }\n    else if (spec.type === 'color') {\n        return Color.parse(spec.default) || null;\n    }\n    else if (spec.type === 'padding') {\n        return Padding.parse(spec.default) || null;\n    }\n    else if (spec.type === 'variableAnchorOffsetCollection') {\n        return VariableAnchorOffsetCollection.parse(spec.default) || null;\n    }\n    else if (spec.type === 'projectionDefinition') {\n        return ProjectionDefinition.parse(spec.default) || null;\n    }\n    else if (spec.default === undefined) {\n        return null;\n    }\n    else {\n        return spec.default;\n    }\n}\n\nfunction isExpressionFilter(filter) {\n    if (filter === true || filter === false) {\n        return true;\n    }\n    if (!Array.isArray(filter) || filter.length === 0) {\n        return false;\n    }\n    switch (filter[0]) {\n        case 'has':\n            return filter.length >= 2 && filter[1] !== '$id' && filter[1] !== '$type';\n        case 'in':\n            return filter.length >= 3 && (typeof filter[1] !== 'string' || Array.isArray(filter[2]));\n        case '!in':\n        case '!has':\n        case 'none':\n            return false;\n        case '==':\n        case '!=':\n        case '>':\n        case '>=':\n        case '<':\n        case '<=':\n            return filter.length !== 3 || (Array.isArray(filter[1]) || Array.isArray(filter[2]));\n        case 'any':\n        case 'all':\n            for (const f of filter.slice(1)) {\n                if (!isExpressionFilter(f) && typeof f !== 'boolean') {\n                    return false;\n                }\n            }\n            return true;\n        default:\n            return true;\n    }\n}\nconst filterSpec = {\n    'type': 'boolean',\n    'default': false,\n    'transition': false,\n    'property-type': 'data-driven',\n    'expression': {\n        'interpolated': false,\n        'parameters': ['zoom', 'feature']\n    }\n};\n/**\n * Given a filter expressed as nested arrays, return a new function\n * that evaluates whether a given feature (with a .properties or .tags property)\n * passes its test.\n *\n * @private\n * @param {Array} filter MapLibre filter\n * @returns {Function} filter-evaluating function\n */\nfunction featureFilter(filter) {\n    if (filter === null || filter === undefined) {\n        return { filter: () => true, needGeometry: false };\n    }\n    if (!isExpressionFilter(filter)) {\n        filter = convertFilter$1(filter);\n    }\n    const compiled = createExpression(filter, filterSpec);\n    if (compiled.result === 'error') {\n        throw new Error(compiled.value.map(err => `${err.key}: ${err.message}`).join(', '));\n    }\n    else {\n        const needGeometry = geometryNeeded(filter);\n        return { filter: (globalProperties, feature, canonical) => compiled.value.evaluate(globalProperties, feature, {}, canonical),\n            needGeometry };\n    }\n}\n// Comparison function to sort numbers and strings\nfunction compare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\nfunction geometryNeeded(filter) {\n    if (!Array.isArray(filter))\n        return false;\n    if (filter[0] === 'within' || filter[0] === 'distance')\n        return true;\n    for (let index = 1; index < filter.length; index++) {\n        if (geometryNeeded(filter[index]))\n            return true;\n    }\n    return false;\n}\nfunction convertFilter$1(filter) {\n    if (!filter)\n        return true;\n    const op = filter[0];\n    if (filter.length <= 1)\n        return (op !== 'any');\n    const converted = op === '==' ? convertComparisonOp$1(filter[1], filter[2], '==') :\n        op === '!=' ? convertNegation(convertComparisonOp$1(filter[1], filter[2], '==')) :\n            op === '<' ||\n                op === '>' ||\n                op === '<=' ||\n                op === '>=' ? convertComparisonOp$1(filter[1], filter[2], op) :\n                op === 'any' ? convertDisjunctionOp(filter.slice(1)) :\n                    op === 'all' ? ['all'].concat(filter.slice(1).map(convertFilter$1)) :\n                        op === 'none' ? ['all'].concat(filter.slice(1).map(convertFilter$1).map(convertNegation)) :\n                            op === 'in' ? convertInOp$1(filter[1], filter.slice(2)) :\n                                op === '!in' ? convertNegation(convertInOp$1(filter[1], filter.slice(2))) :\n                                    op === 'has' ? convertHasOp$1(filter[1]) :\n                                        op === '!has' ? convertNegation(convertHasOp$1(filter[1])) :\n                                            true;\n    return converted;\n}\nfunction convertComparisonOp$1(property, value, op) {\n    switch (property) {\n        case '$type':\n            return [`filter-type-${op}`, value];\n        case '$id':\n            return [`filter-id-${op}`, value];\n        default:\n            return [`filter-${op}`, property, value];\n    }\n}\nfunction convertDisjunctionOp(filters) {\n    return ['any'].concat(filters.map(convertFilter$1));\n}\nfunction convertInOp$1(property, values) {\n    if (values.length === 0) {\n        return false;\n    }\n    switch (property) {\n        case '$type':\n            return ['filter-type-in', ['literal', values]];\n        case '$id':\n            return ['filter-id-in', ['literal', values]];\n        default:\n            if (values.length > 200 && !values.some(v => typeof v !== typeof values[0])) {\n                return ['filter-in-large', property, ['literal', values.sort(compare)]];\n            }\n            else {\n                return ['filter-in-small', property, ['literal', values]];\n            }\n    }\n}\nfunction convertHasOp$1(property) {\n    switch (property) {\n        case '$type':\n            return true;\n        case '$id':\n            return ['filter-has-id'];\n        default:\n            return ['filter-has', property];\n    }\n}\nfunction convertNegation(filter) {\n    return ['!', filter];\n}\n\n/*\n * Convert the given filter to an expression, storing the expected types for\n * any feature properties referenced in expectedTypes.\n *\n * These expected types are needed in order to construct preflight type checks\n * needed for handling 'any' filters. A preflight type check is necessary in\n * order to mimic legacy filters' semantics around expected type mismatches.\n * For example, consider the legacy filter:\n *\n *     [\"any\", [\"all\", [\">\", \"y\", 0], [\">\", \"y\", 0]], [\">\", \"x\", 0]]\n *\n * Naively, we might convert this to the expression:\n *\n *     [\"any\", [\"all\", [\">\", [\"get\", \"y\"], 0], [\">\", [\"get\", \"z\"], 0]], [\">\", [\"get\", \"x\"], 0]]\n *\n * But if we tried to evaluate this against, say `{x: 1, y: null, z: 0}`, the\n * [\">\", [\"get\", \"y\"], 0] would cause an evaluation error, leading to the\n * entire filter returning false. Legacy filter semantics, though, ask for\n * [\">\", \"y\", 0] to simply return `false` when `y` is of the wrong type,\n * allowing the subsequent terms of the outer \"any\" expression to be evaluated\n * (resulting, in this case, in a `true` value, because x > 0).\n *\n * We account for this by inserting a preflight type-checking expression before\n * each \"any\" term, allowing us to avoid evaluating the actual converted filter\n * if any type mismatches would cause it to produce an evaluation error:\n *\n *     [\"any\",\n *       [\"case\",\n *         [\"all\", [\"==\", [\"typeof\", [\"get\", \"y\"]], \"number\"], [\"==\", [\"typeof\", [\"get\", \"z\"], \"number]],\n *         [\"all\", [\">\", [\"get\", \"y\"], 0], [\">\", [\"get\", \"z\"], 0]],\n *         false\n *       ],\n *       [\"case\",\n *         [\"==\", [\"typeof\", [\"get\", \"x\"], \"number\"]],\n *         [\">\", [\"get\", \"x\"], 0],\n *         false\n *       ]\n *     ]\n *\n * An alternative, possibly more direct approach would be to use type checks\n * in the conversion of each comparison operator, so that the converted version\n * of each individual ==, >=, etc. would mimic the legacy filter semantics. The\n * downside of this approach is that it can lead to many more type checks than\n * would otherwise be necessary: outside the context of an \"any\" expression,\n * bailing out due to a runtime type error (expression semantics) and returning\n * false (legacy filter semantics) are equivalent: they cause the filter to\n * produce a `false` result.\n */\nfunction convertFilter(filter, expectedTypes = {}) {\n    if (isExpressionFilter(filter))\n        return filter;\n    if (!filter)\n        return true;\n    const legacyFilter = filter;\n    const legacyOp = legacyFilter[0];\n    if (filter.length <= 1)\n        return (legacyOp !== 'any');\n    switch (legacyOp) {\n        case '==':\n        case '!=':\n        case '<':\n        case '>':\n        case '<=':\n        case '>=': {\n            const [, property, value] = filter;\n            return convertComparisonOp(property, value, legacyOp, expectedTypes);\n        }\n        case 'any': {\n            const [, ...conditions] = legacyFilter;\n            const children = conditions.map((f) => {\n                const types = {};\n                const child = convertFilter(f, types);\n                const typechecks = runtimeTypeChecks(types);\n                return typechecks === true ? child : ['case', typechecks, child, false];\n            });\n            return ['any', ...children];\n        }\n        case 'all': {\n            const [, ...conditions] = legacyFilter;\n            const children = conditions.map(f => convertFilter(f, expectedTypes));\n            return children.length > 1 ? ['all', ...children] : children[0];\n        }\n        case 'none': {\n            const [, ...conditions] = legacyFilter;\n            return ['!', convertFilter(['any', ...conditions], {})];\n        }\n        case 'in': {\n            const [, property, ...values] = legacyFilter;\n            return convertInOp(property, values);\n        }\n        case '!in': {\n            const [, property, ...values] = legacyFilter;\n            return convertInOp(property, values, true);\n        }\n        case 'has':\n            return convertHasOp(legacyFilter[1]);\n        case '!has':\n            return ['!', convertHasOp(legacyFilter[1])];\n        default:\n            return true;\n    }\n}\n// Given a set of feature properties and an expected type for each one,\n// construct an boolean expression that tests whether each property has the\n// right type.\n// E.g.: for {name: 'string', population: 'number'}, return\n// [ 'all',\n//   ['==', ['typeof', ['get', 'name'], 'string']],\n//   ['==', ['typeof', ['get', 'population'], 'number]]\n// ]\nfunction runtimeTypeChecks(expectedTypes) {\n    const conditions = [];\n    for (const property in expectedTypes) {\n        const get = property === '$id' ? ['id'] : ['get', property];\n        conditions.push(['==', ['typeof', get], expectedTypes[property]]);\n    }\n    if (conditions.length === 0)\n        return true;\n    if (conditions.length === 1)\n        return conditions[0];\n    return ['all', ...conditions];\n}\nfunction convertComparisonOp(property, value, op, expectedTypes) {\n    let get;\n    if (property === '$type') {\n        return [op, ['geometry-type'], value];\n    }\n    else if (property === '$id') {\n        get = ['id'];\n    }\n    else {\n        get = ['get', property];\n    }\n    if (expectedTypes && value !== null) {\n        const type = typeof value;\n        expectedTypes[property] = type;\n    }\n    if (op === '==' && property !== '$id' && value === null) {\n        return [\n            'all',\n            ['has', property], // missing property != null for legacy filters\n            ['==', get, null]\n        ];\n    }\n    else if (op === '!=' && property !== '$id' && value === null) {\n        return [\n            'any',\n            ['!', ['has', property]], // missing property != null for legacy filters\n            ['!=', get, null]\n        ];\n    }\n    return [op, get, value];\n}\nfunction convertInOp(property, values, negate = false) {\n    if (values.length === 0)\n        return negate;\n    let get;\n    if (property === '$type') {\n        get = ['geometry-type'];\n    }\n    else if (property === '$id') {\n        get = ['id'];\n    }\n    else {\n        get = ['get', property];\n    }\n    // Determine if the list of values to be searched is homogenously typed.\n    // If so (and if the type is string or number), then we can use a\n    // [match, input, [...values], true, false] construction rather than a\n    // bunch of `==` tests.\n    let uniformTypes = true;\n    const type = typeof values[0];\n    for (const value of values) {\n        if (typeof value !== type) {\n            uniformTypes = false;\n            break;\n        }\n    }\n    if (uniformTypes && (type === 'string' || type === 'number')) {\n        // Match expressions must have unique values.\n        const uniqueValues = values.sort().filter((v, i) => i === 0 || values[i - 1] !== v);\n        return ['match', get, uniqueValues, !negate, negate];\n    }\n    if (negate) {\n        return ['all', ...values.map(v => ['!=', get, v])];\n    }\n    else {\n        return ['any', ...values.map(v => ['==', get, v])];\n    }\n}\nfunction convertHasOp(property) {\n    if (property === '$type') {\n        return true;\n    }\n    else if (property === '$id') {\n        return ['!=', ['id'], null];\n    }\n    else {\n        return ['has', property];\n    }\n}\n\nfunction convertLiteral(value) {\n    return typeof value === 'object' ? ['literal', value] : value;\n}\nfunction convertFunction(parameters, propertySpec) {\n    let stops = parameters.stops;\n    if (!stops) {\n        // identity function\n        return convertIdentityFunction(parameters, propertySpec);\n    }\n    const zoomAndFeatureDependent = stops && typeof stops[0][0] === 'object';\n    const featureDependent = zoomAndFeatureDependent || parameters.property !== undefined;\n    const zoomDependent = zoomAndFeatureDependent || !featureDependent;\n    stops = stops.map((stop) => {\n        if (!featureDependent && propertySpec.tokens && typeof stop[1] === 'string') {\n            return [stop[0], convertTokenString(stop[1])];\n        }\n        return [stop[0], convertLiteral(stop[1])];\n    });\n    if (zoomAndFeatureDependent) {\n        return convertZoomAndPropertyFunction(parameters, propertySpec, stops);\n    }\n    else if (zoomDependent) {\n        return convertZoomFunction(parameters, propertySpec, stops);\n    }\n    else {\n        return convertPropertyFunction(parameters, propertySpec, stops);\n    }\n}\nfunction convertIdentityFunction(parameters, propertySpec) {\n    const get = ['get', parameters.property];\n    if (parameters.default === undefined) {\n        // By default, expressions for string-valued properties get coerced. To preserve\n        // legacy function semantics, insert an explicit assertion instead.\n        return propertySpec.type === 'string' ? ['string', get] : get;\n    }\n    else if (propertySpec.type === 'enum') {\n        return [\n            'match',\n            get,\n            Object.keys(propertySpec.values),\n            get,\n            parameters.default\n        ];\n    }\n    else {\n        const expression = [propertySpec.type === 'color' ? 'to-color' : propertySpec.type, get, convertLiteral(parameters.default)];\n        if (propertySpec.type === 'array') {\n            expression.splice(1, 0, propertySpec.value, propertySpec.length || null);\n        }\n        return expression;\n    }\n}\nfunction getInterpolateOperator(parameters) {\n    switch (parameters.colorSpace) {\n        case 'hcl': return 'interpolate-hcl';\n        case 'lab': return 'interpolate-lab';\n        default: return 'interpolate';\n    }\n}\nfunction convertZoomAndPropertyFunction(parameters, propertySpec, stops) {\n    const featureFunctionParameters = {};\n    const featureFunctionStops = {};\n    const zoomStops = [];\n    for (let s = 0; s < stops.length; s++) {\n        const stop = stops[s];\n        const zoom = stop[0].zoom;\n        if (featureFunctionParameters[zoom] === undefined) {\n            featureFunctionParameters[zoom] = {\n                zoom,\n                type: parameters.type,\n                property: parameters.property,\n                default: parameters.default,\n            };\n            featureFunctionStops[zoom] = [];\n            zoomStops.push(zoom);\n        }\n        featureFunctionStops[zoom].push([stop[0].value, stop[1]]);\n    }\n    // the interpolation type for the zoom dimension of a zoom-and-property\n    // function is determined directly from the style property specification\n    // for which it's being used: linear for interpolatable properties, step\n    // otherwise.\n    const functionType = getFunctionType({}, propertySpec);\n    if (functionType === 'exponential') {\n        const expression = [getInterpolateOperator(parameters), ['linear'], ['zoom']];\n        for (const z of zoomStops) {\n            const output = convertPropertyFunction(featureFunctionParameters[z], propertySpec, featureFunctionStops[z]);\n            appendStopPair(expression, z, output, false);\n        }\n        return expression;\n    }\n    else {\n        const expression = ['step', ['zoom']];\n        for (const z of zoomStops) {\n            const output = convertPropertyFunction(featureFunctionParameters[z], propertySpec, featureFunctionStops[z]);\n            appendStopPair(expression, z, output, true);\n        }\n        fixupDegenerateStepCurve(expression);\n        return expression;\n    }\n}\nfunction coalesce(a, b) {\n    if (a !== undefined)\n        return a;\n    if (b !== undefined)\n        return b;\n}\nfunction getFallback(parameters, propertySpec) {\n    const defaultValue = convertLiteral(coalesce(parameters.default, propertySpec.default));\n    /*\n     * Some fields with type: resolvedImage have an undefined default.\n     * Because undefined is an invalid value for resolvedImage, set fallback to\n     * an empty string instead of undefined to ensure output\n     * passes validation.\n     */\n    if (defaultValue === undefined && propertySpec.type === 'resolvedImage') {\n        return '';\n    }\n    return defaultValue;\n}\nfunction convertPropertyFunction(parameters, propertySpec, stops) {\n    const type = getFunctionType(parameters, propertySpec);\n    const get = ['get', parameters.property];\n    if (type === 'categorical' && typeof stops[0][0] === 'boolean') {\n        const expression = ['case'];\n        for (const stop of stops) {\n            expression.push(['==', get, stop[0]], stop[1]);\n        }\n        expression.push(getFallback(parameters, propertySpec));\n        return expression;\n    }\n    else if (type === 'categorical') {\n        const expression = ['match', get];\n        for (const stop of stops) {\n            appendStopPair(expression, stop[0], stop[1], false);\n        }\n        expression.push(getFallback(parameters, propertySpec));\n        return expression;\n    }\n    else if (type === 'interval') {\n        const expression = ['step', ['number', get]];\n        for (const stop of stops) {\n            appendStopPair(expression, stop[0], stop[1], true);\n        }\n        fixupDegenerateStepCurve(expression);\n        return parameters.default === undefined ? expression : [\n            'case',\n            ['==', ['typeof', get], 'number'],\n            expression,\n            convertLiteral(parameters.default)\n        ];\n    }\n    else if (type === 'exponential') {\n        const base = parameters.base !== undefined ? parameters.base : 1;\n        const expression = [\n            getInterpolateOperator(parameters),\n            base === 1 ? ['linear'] : ['exponential', base],\n            ['number', get]\n        ];\n        for (const stop of stops) {\n            appendStopPair(expression, stop[0], stop[1], false);\n        }\n        return parameters.default === undefined ? expression : [\n            'case',\n            ['==', ['typeof', get], 'number'],\n            expression,\n            convertLiteral(parameters.default)\n        ];\n    }\n    else {\n        throw new Error(`Unknown property function type ${type}`);\n    }\n}\nfunction convertZoomFunction(parameters, propertySpec, stops, input = ['zoom']) {\n    const type = getFunctionType(parameters, propertySpec);\n    let expression;\n    let isStep = false;\n    if (type === 'interval') {\n        expression = ['step', input];\n        isStep = true;\n    }\n    else if (type === 'exponential') {\n        const base = parameters.base !== undefined ? parameters.base : 1;\n        expression = [getInterpolateOperator(parameters), base === 1 ? ['linear'] : ['exponential', base], input];\n    }\n    else {\n        throw new Error(`Unknown zoom function type \"${type}\"`);\n    }\n    for (const stop of stops) {\n        appendStopPair(expression, stop[0], stop[1], isStep);\n    }\n    fixupDegenerateStepCurve(expression);\n    return expression;\n}\nfunction fixupDegenerateStepCurve(expression) {\n    // degenerate step curve (i.e. a constant function): add a noop stop\n    if (expression[0] === 'step' && expression.length === 3) {\n        expression.push(0);\n        expression.push(expression[3]);\n    }\n}\nfunction appendStopPair(curve, input, output, isStep) {\n    // Skip duplicate stop values. They were not validated for functions, but they are for expressions.\n    // https://github.com/mapbox/mapbox-gl-js/issues/4107\n    if (curve.length > 3 && input === curve[curve.length - 2]) {\n        return;\n    }\n    // step curves don't get the first input value, as it is redundant.\n    if (!(isStep && curve.length === 2)) {\n        curve.push(input);\n    }\n    curve.push(output);\n}\nfunction getFunctionType(parameters, propertySpec) {\n    if (parameters.type) {\n        return parameters.type;\n    }\n    else {\n        return propertySpec.expression.interpolated ? 'exponential' : 'interval';\n    }\n}\n// \"String with {name} token\" => [\"concat\", \"String with \", [\"get\", \"name\"], \" token\"]\nfunction convertTokenString(s) {\n    const result = ['concat'];\n    const re = /{([^{}]+)}/g;\n    let pos = 0;\n    for (let match = re.exec(s); match !== null; match = re.exec(s)) {\n        const literal = s.slice(pos, re.lastIndex - match[0].length);\n        pos = re.lastIndex;\n        if (literal.length > 0)\n            result.push(literal);\n        result.push(['get', match[1]]);\n    }\n    if (result.length === 1) {\n        return s;\n    }\n    if (pos < s.length) {\n        result.push(s.slice(pos));\n    }\n    else if (result.length === 2) {\n        return ['to-string', result[1]];\n    }\n    return result;\n}\n\nfunction getPropertyReference(propertyName) {\n    for (let i = 0; i < v8Spec.layout.length; i++) {\n        for (const key in v8Spec[v8Spec.layout[i]]) {\n            if (key === propertyName)\n                return v8Spec[v8Spec.layout[i]][key];\n        }\n    }\n    for (let i = 0; i < v8Spec.paint.length; i++) {\n        for (const key in v8Spec[v8Spec.paint[i]]) {\n            if (key === propertyName)\n                return v8Spec[v8Spec.paint[i]][key];\n        }\n    }\n    return null;\n}\nfunction eachSource(style, callback) {\n    for (const k in style.sources) {\n        callback(style.sources[k]);\n    }\n}\nfunction eachLayer(style, callback) {\n    for (const layer of style.layers) {\n        callback(layer);\n    }\n}\nfunction eachProperty(style, options, callback) {\n    function inner(layer, propertyType) {\n        const properties = layer[propertyType];\n        if (!properties)\n            return;\n        Object.keys(properties).forEach((key) => {\n            callback({\n                path: [layer.id, propertyType, key],\n                key,\n                value: properties[key],\n                reference: getPropertyReference(key),\n                set(x) {\n                    properties[key] = x;\n                }\n            });\n        });\n    }\n    eachLayer(style, (layer) => {\n        if (options.paint) {\n            inner(layer, 'paint');\n        }\n        if (options.layout) {\n            inner(layer, 'layout');\n        }\n    });\n}\n\nfunction stringify$1(obj) {\n    const type = typeof obj;\n    if (type === 'number' || type === 'boolean' || type === 'string' || obj === undefined || obj === null)\n        return JSON.stringify(obj);\n    if (Array.isArray(obj)) {\n        let str = '[';\n        for (const val of obj) {\n            str += `${stringify$1(val)},`;\n        }\n        return `${str}]`;\n    }\n    const keys = Object.keys(obj).sort();\n    let str = '{';\n    for (let i = 0; i < keys.length; i++) {\n        str += `${JSON.stringify(keys[i])}:${stringify$1(obj[keys[i]])},`;\n    }\n    return `${str}}`;\n}\nfunction getKey(layer) {\n    let key = '';\n    for (const k of refProperties) {\n        key += `/${stringify$1(layer[k])}`;\n    }\n    return key;\n}\n/**\n * Given an array of layers, return an array of arrays of layers where all\n * layers in each group have identical layout-affecting properties. These\n * are the properties that were formerly used by explicit `ref` mechanism\n * for layers: 'type', 'source', 'source-layer', 'minzoom', 'maxzoom',\n * 'filter', and 'layout'.\n *\n * The input is not modified. The output layers are references to the\n * input layers.\n *\n * @private\n * @param {Array<Layer>} layers\n * @param {Object} [cachedKeys] - an object to keep already calculated keys.\n * @returns {Array<Array<Layer>>}\n */\nfunction groupByLayout(layers, cachedKeys) {\n    const groups = {};\n    for (let i = 0; i < layers.length; i++) {\n        const k = (cachedKeys && cachedKeys[layers[i].id]) || getKey(layers[i]);\n        // update the cache if there is one\n        if (cachedKeys)\n            cachedKeys[layers[i].id] = k;\n        let group = groups[k];\n        if (!group) {\n            group = groups[k] = [];\n        }\n        group.push(layers[i]);\n    }\n    const result = [];\n    for (const k in groups) {\n        result.push(groups[k]);\n    }\n    return result;\n}\n\nfunction emptyStyle() {\n    const style = {};\n    const version = v8Spec['$version'];\n    for (const styleKey in v8Spec['$root']) {\n        const specification = v8Spec['$root'][styleKey];\n        if (specification.required) {\n            let value = null;\n            if (styleKey === 'version') {\n                value = version;\n            }\n            else {\n                if (specification.type === 'array') {\n                    value = [];\n                }\n                else {\n                    value = {};\n                }\n            }\n            if (value != null) {\n                style[styleKey] = value;\n            }\n        }\n    }\n    return style;\n}\n\nfunction validateConstants(options) {\n    const key = options.key;\n    const constants = options.value;\n    if (constants) {\n        return [new ValidationError(key, constants, 'constants have been deprecated as of v8')];\n    }\n    else {\n        return [];\n    }\n}\n\n// Turn jsonlint-lines-primitives objects into primitive objects\nfunction unbundle(value) {\n    if (value instanceof Number || value instanceof String || value instanceof Boolean) {\n        return value.valueOf();\n    }\n    else {\n        return value;\n    }\n}\nfunction deepUnbundle(value) {\n    if (Array.isArray(value)) {\n        return value.map(deepUnbundle);\n    }\n    else if (value instanceof Object && !(value instanceof Number || value instanceof String || value instanceof Boolean)) {\n        const unbundledValue = {};\n        for (const key in value) {\n            unbundledValue[key] = deepUnbundle(value[key]);\n        }\n        return unbundledValue;\n    }\n    return unbundle(value);\n}\n\nfunction validateObject(options) {\n    const key = options.key;\n    const object = options.value;\n    const elementSpecs = options.valueSpec || {};\n    const elementValidators = options.objectElementValidators || {};\n    const style = options.style;\n    const styleSpec = options.styleSpec;\n    const validateSpec = options.validateSpec;\n    let errors = [];\n    const type = getType(object);\n    if (type !== 'object') {\n        return [new ValidationError(key, object, `object expected, ${type} found`)];\n    }\n    for (const objectKey in object) {\n        const elementSpecKey = objectKey.split('.')[0]; // treat 'paint.*' as 'paint'\n        const elementSpec = elementSpecs[elementSpecKey] || elementSpecs['*'];\n        let validateElement;\n        if (elementValidators[elementSpecKey]) {\n            validateElement = elementValidators[elementSpecKey];\n        }\n        else if (elementSpecs[elementSpecKey]) {\n            validateElement = validateSpec;\n        }\n        else if (elementValidators['*']) {\n            validateElement = elementValidators['*'];\n        }\n        else if (elementSpecs['*']) {\n            validateElement = validateSpec;\n        }\n        else {\n            errors.push(new ValidationError(key, object[objectKey], `unknown property \"${objectKey}\"`));\n            continue;\n        }\n        errors = errors.concat(validateElement({\n            key: (key ? `${key}.` : key) + objectKey,\n            value: object[objectKey],\n            valueSpec: elementSpec,\n            style,\n            styleSpec,\n            object,\n            objectKey,\n            validateSpec,\n        }, object));\n    }\n    for (const elementSpecKey in elementSpecs) {\n        // Don't check `required` when there's a custom validator for that property.\n        if (elementValidators[elementSpecKey]) {\n            continue;\n        }\n        if (elementSpecs[elementSpecKey].required && elementSpecs[elementSpecKey]['default'] === undefined && object[elementSpecKey] === undefined) {\n            errors.push(new ValidationError(key, object, `missing required property \"${elementSpecKey}\"`));\n        }\n    }\n    return errors;\n}\n\nfunction validateArray(options) {\n    const array = options.value;\n    const arraySpec = options.valueSpec;\n    const validateSpec = options.validateSpec;\n    const style = options.style;\n    const styleSpec = options.styleSpec;\n    const key = options.key;\n    const validateArrayElement = options.arrayElementValidator || validateSpec;\n    if (getType(array) !== 'array') {\n        return [new ValidationError(key, array, `array expected, ${getType(array)} found`)];\n    }\n    if (arraySpec.length && array.length !== arraySpec.length) {\n        return [new ValidationError(key, array, `array length ${arraySpec.length} expected, length ${array.length} found`)];\n    }\n    if (arraySpec['min-length'] && array.length < arraySpec['min-length']) {\n        return [new ValidationError(key, array, `array length at least ${arraySpec['min-length']} expected, length ${array.length} found`)];\n    }\n    let arrayElementSpec = {\n        'type': arraySpec.value,\n        'values': arraySpec.values\n    };\n    if (styleSpec.$version < 7) {\n        arrayElementSpec['function'] = arraySpec.function;\n    }\n    if (getType(arraySpec.value) === 'object') {\n        arrayElementSpec = arraySpec.value;\n    }\n    let errors = [];\n    for (let i = 0; i < array.length; i++) {\n        errors = errors.concat(validateArrayElement({\n            array,\n            arrayIndex: i,\n            value: array[i],\n            valueSpec: arrayElementSpec,\n            validateSpec: options.validateSpec,\n            style,\n            styleSpec,\n            key: `${key}[${i}]`\n        }));\n    }\n    return errors;\n}\n\nfunction validateNumber(options) {\n    const key = options.key;\n    const value = options.value;\n    const valueSpec = options.valueSpec;\n    let type = getType(value);\n    if (type === 'number' && value !== value) {\n        type = 'NaN';\n    }\n    if (type !== 'number') {\n        return [new ValidationError(key, value, `number expected, ${type} found`)];\n    }\n    if ('minimum' in valueSpec && value < valueSpec.minimum) {\n        return [new ValidationError(key, value, `${value} is less than the minimum value ${valueSpec.minimum}`)];\n    }\n    if ('maximum' in valueSpec && value > valueSpec.maximum) {\n        return [new ValidationError(key, value, `${value} is greater than the maximum value ${valueSpec.maximum}`)];\n    }\n    return [];\n}\n\nfunction validateFunction(options) {\n    const functionValueSpec = options.valueSpec;\n    const functionType = unbundle(options.value.type);\n    let stopKeyType;\n    let stopDomainValues = {};\n    let previousStopDomainValue;\n    let previousStopDomainZoom;\n    const isZoomFunction = functionType !== 'categorical' && options.value.property === undefined;\n    const isPropertyFunction = !isZoomFunction;\n    const isZoomAndPropertyFunction = getType(options.value.stops) === 'array' &&\n        getType(options.value.stops[0]) === 'array' &&\n        getType(options.value.stops[0][0]) === 'object';\n    const errors = validateObject({\n        key: options.key,\n        value: options.value,\n        valueSpec: options.styleSpec.function,\n        validateSpec: options.validateSpec,\n        style: options.style,\n        styleSpec: options.styleSpec,\n        objectElementValidators: {\n            stops: validateFunctionStops,\n            default: validateFunctionDefault\n        }\n    });\n    if (functionType === 'identity' && isZoomFunction) {\n        errors.push(new ValidationError(options.key, options.value, 'missing required property \"property\"'));\n    }\n    if (functionType !== 'identity' && !options.value.stops) {\n        errors.push(new ValidationError(options.key, options.value, 'missing required property \"stops\"'));\n    }\n    if (functionType === 'exponential' && options.valueSpec.expression && !supportsInterpolation(options.valueSpec)) {\n        errors.push(new ValidationError(options.key, options.value, 'exponential functions not supported'));\n    }\n    if (options.styleSpec.$version >= 8) {\n        if (isPropertyFunction && !supportsPropertyExpression(options.valueSpec)) {\n            errors.push(new ValidationError(options.key, options.value, 'property functions not supported'));\n        }\n        else if (isZoomFunction && !supportsZoomExpression(options.valueSpec)) {\n            errors.push(new ValidationError(options.key, options.value, 'zoom functions not supported'));\n        }\n    }\n    if ((functionType === 'categorical' || isZoomAndPropertyFunction) && options.value.property === undefined) {\n        errors.push(new ValidationError(options.key, options.value, '\"property\" property is required'));\n    }\n    return errors;\n    function validateFunctionStops(options) {\n        if (functionType === 'identity') {\n            return [new ValidationError(options.key, options.value, 'identity function may not have a \"stops\" property')];\n        }\n        let errors = [];\n        const value = options.value;\n        errors = errors.concat(validateArray({\n            key: options.key,\n            value,\n            valueSpec: options.valueSpec,\n            validateSpec: options.validateSpec,\n            style: options.style,\n            styleSpec: options.styleSpec,\n            arrayElementValidator: validateFunctionStop\n        }));\n        if (getType(value) === 'array' && value.length === 0) {\n            errors.push(new ValidationError(options.key, value, 'array must have at least one stop'));\n        }\n        return errors;\n    }\n    function validateFunctionStop(options) {\n        let errors = [];\n        const value = options.value;\n        const key = options.key;\n        if (getType(value) !== 'array') {\n            return [new ValidationError(key, value, `array expected, ${getType(value)} found`)];\n        }\n        if (value.length !== 2) {\n            return [new ValidationError(key, value, `array length 2 expected, length ${value.length} found`)];\n        }\n        if (isZoomAndPropertyFunction) {\n            if (getType(value[0]) !== 'object') {\n                return [new ValidationError(key, value, `object expected, ${getType(value[0])} found`)];\n            }\n            if (value[0].zoom === undefined) {\n                return [new ValidationError(key, value, 'object stop key must have zoom')];\n            }\n            if (value[0].value === undefined) {\n                return [new ValidationError(key, value, 'object stop key must have value')];\n            }\n            if (previousStopDomainZoom && previousStopDomainZoom > unbundle(value[0].zoom)) {\n                return [new ValidationError(key, value[0].zoom, 'stop zoom values must appear in ascending order')];\n            }\n            if (unbundle(value[0].zoom) !== previousStopDomainZoom) {\n                previousStopDomainZoom = unbundle(value[0].zoom);\n                previousStopDomainValue = undefined;\n                stopDomainValues = {};\n            }\n            errors = errors.concat(validateObject({\n                key: `${key}[0]`,\n                value: value[0],\n                valueSpec: { zoom: {} },\n                validateSpec: options.validateSpec,\n                style: options.style,\n                styleSpec: options.styleSpec,\n                objectElementValidators: { zoom: validateNumber, value: validateStopDomainValue }\n            }));\n        }\n        else {\n            errors = errors.concat(validateStopDomainValue({\n                key: `${key}[0]`,\n                value: value[0],\n                valueSpec: {},\n                validateSpec: options.validateSpec,\n                style: options.style,\n                styleSpec: options.styleSpec\n            }, value));\n        }\n        if (isExpression(deepUnbundle(value[1]))) {\n            return errors.concat([new ValidationError(`${key}[1]`, value[1], 'expressions are not allowed in function stops.')]);\n        }\n        return errors.concat(options.validateSpec({\n            key: `${key}[1]`,\n            value: value[1],\n            valueSpec: functionValueSpec,\n            validateSpec: options.validateSpec,\n            style: options.style,\n            styleSpec: options.styleSpec\n        }));\n    }\n    function validateStopDomainValue(options, stop) {\n        const type = getType(options.value);\n        const value = unbundle(options.value);\n        const reportValue = options.value !== null ? options.value : stop;\n        if (!stopKeyType) {\n            stopKeyType = type;\n        }\n        else if (type !== stopKeyType) {\n            return [new ValidationError(options.key, reportValue, `${type} stop domain type must match previous stop domain type ${stopKeyType}`)];\n        }\n        if (type !== 'number' && type !== 'string' && type !== 'boolean') {\n            return [new ValidationError(options.key, reportValue, 'stop domain value must be a number, string, or boolean')];\n        }\n        if (type !== 'number' && functionType !== 'categorical') {\n            let message = `number expected, ${type} found`;\n            if (supportsPropertyExpression(functionValueSpec) && functionType === undefined) {\n                message += '\\nIf you intended to use a categorical function, specify `\"type\": \"categorical\"`.';\n            }\n            return [new ValidationError(options.key, reportValue, message)];\n        }\n        if (functionType === 'categorical' && type === 'number' && (!isFinite(value) || Math.floor(value) !== value)) {\n            return [new ValidationError(options.key, reportValue, `integer expected, found ${value}`)];\n        }\n        if (functionType !== 'categorical' && type === 'number' && previousStopDomainValue !== undefined && value < previousStopDomainValue) {\n            return [new ValidationError(options.key, reportValue, 'stop domain values must appear in ascending order')];\n        }\n        else {\n            previousStopDomainValue = value;\n        }\n        if (functionType === 'categorical' && value in stopDomainValues) {\n            return [new ValidationError(options.key, reportValue, 'stop domain values must be unique')];\n        }\n        else {\n            stopDomainValues[value] = true;\n        }\n        return [];\n    }\n    function validateFunctionDefault(options) {\n        return options.validateSpec({\n            key: options.key,\n            value: options.value,\n            valueSpec: functionValueSpec,\n            validateSpec: options.validateSpec,\n            style: options.style,\n            styleSpec: options.styleSpec\n        });\n    }\n}\n\nfunction validateExpression(options) {\n    const expression = (options.expressionContext === 'property' ? createPropertyExpression : createExpression)(deepUnbundle(options.value), options.valueSpec);\n    if (expression.result === 'error') {\n        return expression.value.map((error) => {\n            return new ValidationError(`${options.key}${error.key}`, options.value, error.message);\n        });\n    }\n    const expressionObj = expression.value.expression || expression.value._styleExpression.expression;\n    if (options.expressionContext === 'property' && (options.propertyKey === 'text-font') &&\n        !expressionObj.outputDefined()) {\n        return [new ValidationError(options.key, options.value, `Invalid data expression for \"${options.propertyKey}\". Output values must be contained as literals within the expression.`)];\n    }\n    if (options.expressionContext === 'property' && options.propertyType === 'layout' &&\n        (!isStateConstant(expressionObj))) {\n        return [new ValidationError(options.key, options.value, '\"feature-state\" data expressions are not supported with layout properties.')];\n    }\n    if (options.expressionContext === 'filter' && !isStateConstant(expressionObj)) {\n        return [new ValidationError(options.key, options.value, '\"feature-state\" data expressions are not supported with filters.')];\n    }\n    if (options.expressionContext && options.expressionContext.indexOf('cluster') === 0) {\n        if (!isGlobalPropertyConstant(expressionObj, ['zoom', 'feature-state'])) {\n            return [new ValidationError(options.key, options.value, '\"zoom\" and \"feature-state\" expressions are not supported with cluster properties.')];\n        }\n        if (options.expressionContext === 'cluster-initial' && !isFeatureConstant(expressionObj)) {\n            return [new ValidationError(options.key, options.value, 'Feature data expressions are not supported with initial expression part of cluster properties.')];\n        }\n    }\n    return [];\n}\n\nfunction validateBoolean(options) {\n    const value = options.value;\n    const key = options.key;\n    const type = getType(value);\n    if (type !== 'boolean') {\n        return [new ValidationError(key, value, `boolean expected, ${type} found`)];\n    }\n    return [];\n}\n\nfunction validateColor(options) {\n    const key = options.key;\n    const value = options.value;\n    const type = getType(value);\n    if (type !== 'string') {\n        return [new ValidationError(key, value, `color expected, ${type} found`)];\n    }\n    if (!Color.parse(String(value))) { // cast String object to string primitive\n        return [new ValidationError(key, value, `color expected, \"${value}\" found`)];\n    }\n    return [];\n}\n\nfunction validateEnum(options) {\n    const key = options.key;\n    const value = options.value;\n    const valueSpec = options.valueSpec;\n    const errors = [];\n    if (Array.isArray(valueSpec.values)) { // <=v7\n        if (valueSpec.values.indexOf(unbundle(value)) === -1) {\n            errors.push(new ValidationError(key, value, `expected one of [${valueSpec.values.join(', ')}], ${JSON.stringify(value)} found`));\n        }\n    }\n    else { // >=v8\n        if (Object.keys(valueSpec.values).indexOf(unbundle(value)) === -1) {\n            errors.push(new ValidationError(key, value, `expected one of [${Object.keys(valueSpec.values).join(', ')}], ${JSON.stringify(value)} found`));\n        }\n    }\n    return errors;\n}\n\nfunction validateFilter(options) {\n    if (isExpressionFilter(deepUnbundle(options.value))) {\n        return validateExpression(extendBy({}, options, {\n            expressionContext: 'filter',\n            valueSpec: { value: 'boolean' }\n        }));\n    }\n    else {\n        return validateNonExpressionFilter(options);\n    }\n}\nfunction validateNonExpressionFilter(options) {\n    const value = options.value;\n    const key = options.key;\n    if (getType(value) !== 'array') {\n        return [new ValidationError(key, value, `array expected, ${getType(value)} found`)];\n    }\n    const styleSpec = options.styleSpec;\n    let type;\n    let errors = [];\n    if (value.length < 1) {\n        return [new ValidationError(key, value, 'filter array must have at least 1 element')];\n    }\n    errors = errors.concat(validateEnum({\n        key: `${key}[0]`,\n        value: value[0],\n        valueSpec: styleSpec.filter_operator,\n        style: options.style,\n        styleSpec: options.styleSpec\n    }));\n    switch (unbundle(value[0])) {\n        case '<':\n        case '<=':\n        case '>':\n        case '>=':\n            if (value.length >= 2 && unbundle(value[1]) === '$type') {\n                errors.push(new ValidationError(key, value, `\"$type\" cannot be use with operator \"${value[0]}\"`));\n            }\n        /* falls through */\n        case '==':\n        case '!=':\n            if (value.length !== 3) {\n                errors.push(new ValidationError(key, value, `filter array for operator \"${value[0]}\" must have 3 elements`));\n            }\n        /* falls through */\n        case 'in':\n        case '!in':\n            if (value.length >= 2) {\n                type = getType(value[1]);\n                if (type !== 'string') {\n                    errors.push(new ValidationError(`${key}[1]`, value[1], `string expected, ${type} found`));\n                }\n            }\n            for (let i = 2; i < value.length; i++) {\n                type = getType(value[i]);\n                if (unbundle(value[1]) === '$type') {\n                    errors = errors.concat(validateEnum({\n                        key: `${key}[${i}]`,\n                        value: value[i],\n                        valueSpec: styleSpec.geometry_type,\n                        style: options.style,\n                        styleSpec: options.styleSpec\n                    }));\n                }\n                else if (type !== 'string' && type !== 'number' && type !== 'boolean') {\n                    errors.push(new ValidationError(`${key}[${i}]`, value[i], `string, number, or boolean expected, ${type} found`));\n                }\n            }\n            break;\n        case 'any':\n        case 'all':\n        case 'none':\n            for (let i = 1; i < value.length; i++) {\n                errors = errors.concat(validateNonExpressionFilter({\n                    key: `${key}[${i}]`,\n                    value: value[i],\n                    style: options.style,\n                    styleSpec: options.styleSpec\n                }));\n            }\n            break;\n        case 'has':\n        case '!has':\n            type = getType(value[1]);\n            if (value.length !== 2) {\n                errors.push(new ValidationError(key, value, `filter array for \"${value[0]}\" operator must have 2 elements`));\n            }\n            else if (type !== 'string') {\n                errors.push(new ValidationError(`${key}[1]`, value[1], `string expected, ${type} found`));\n            }\n            break;\n    }\n    return errors;\n}\n\nfunction validateProperty(options, propertyType) {\n    const key = options.key;\n    const validateSpec = options.validateSpec;\n    const style = options.style;\n    const styleSpec = options.styleSpec;\n    const value = options.value;\n    const propertyKey = options.objectKey;\n    const layerSpec = styleSpec[`${propertyType}_${options.layerType}`];\n    if (!layerSpec)\n        return [];\n    const transitionMatch = propertyKey.match(/^(.*)-transition$/);\n    if (propertyType === 'paint' && transitionMatch && layerSpec[transitionMatch[1]] && layerSpec[transitionMatch[1]].transition) {\n        return validateSpec({\n            key,\n            value,\n            valueSpec: styleSpec.transition,\n            style,\n            styleSpec\n        });\n    }\n    const valueSpec = options.valueSpec || layerSpec[propertyKey];\n    if (!valueSpec) {\n        return [new ValidationError(key, value, `unknown property \"${propertyKey}\"`)];\n    }\n    let tokenMatch;\n    if (getType(value) === 'string' && supportsPropertyExpression(valueSpec) && !valueSpec.tokens && (tokenMatch = /^{([^}]+)}$/.exec(value))) {\n        return [new ValidationError(key, value, `\"${propertyKey}\" does not support interpolation syntax\\n` +\n                `Use an identity property function instead: \\`{ \"type\": \"identity\", \"property\": ${JSON.stringify(tokenMatch[1])} }\\`.`)];\n    }\n    const errors = [];\n    if (options.layerType === 'symbol') {\n        if (propertyKey === 'text-field' && style && !style.glyphs) {\n            errors.push(new ValidationError(key, value, 'use of \"text-field\" requires a style \"glyphs\" property'));\n        }\n        if (propertyKey === 'text-font' && isFunction$1(deepUnbundle(value)) && unbundle(value.type) === 'identity') {\n            errors.push(new ValidationError(key, value, '\"text-font\" does not support identity functions'));\n        }\n    }\n    return errors.concat(validateSpec({\n        key: options.key,\n        value,\n        valueSpec,\n        style,\n        styleSpec,\n        expressionContext: 'property',\n        propertyType,\n        propertyKey\n    }));\n}\n\nfunction validatePaintProperty(options) {\n    return validateProperty(options, 'paint');\n}\n\nfunction validateLayoutProperty(options) {\n    return validateProperty(options, 'layout');\n}\n\nfunction validateLayer(options) {\n    let errors = [];\n    const layer = options.value;\n    const key = options.key;\n    const style = options.style;\n    const styleSpec = options.styleSpec;\n    if (!layer.type && !layer.ref) {\n        errors.push(new ValidationError(key, layer, 'either \"type\" or \"ref\" is required'));\n    }\n    let type = unbundle(layer.type);\n    const ref = unbundle(layer.ref);\n    if (layer.id) {\n        const layerId = unbundle(layer.id);\n        for (let i = 0; i < options.arrayIndex; i++) {\n            const otherLayer = style.layers[i];\n            if (unbundle(otherLayer.id) === layerId) {\n                errors.push(new ValidationError(key, layer.id, `duplicate layer id \"${layer.id}\", previously used at line ${otherLayer.id.__line__}`));\n            }\n        }\n    }\n    if ('ref' in layer) {\n        ['type', 'source', 'source-layer', 'filter', 'layout'].forEach((p) => {\n            if (p in layer) {\n                errors.push(new ValidationError(key, layer[p], `\"${p}\" is prohibited for ref layers`));\n            }\n        });\n        let parent;\n        style.layers.forEach((layer) => {\n            if (unbundle(layer.id) === ref)\n                parent = layer;\n        });\n        if (!parent) {\n            errors.push(new ValidationError(key, layer.ref, `ref layer \"${ref}\" not found`));\n        }\n        else if (parent.ref) {\n            errors.push(new ValidationError(key, layer.ref, 'ref cannot reference another ref layer'));\n        }\n        else {\n            type = unbundle(parent.type);\n        }\n    }\n    else if (type !== 'background') {\n        if (!layer.source) {\n            errors.push(new ValidationError(key, layer, 'missing required property \"source\"'));\n        }\n        else {\n            const source = style.sources && style.sources[layer.source];\n            const sourceType = source && unbundle(source.type);\n            if (!source) {\n                errors.push(new ValidationError(key, layer.source, `source \"${layer.source}\" not found`));\n            }\n            else if (sourceType === 'vector' && type === 'raster') {\n                errors.push(new ValidationError(key, layer.source, `layer \"${layer.id}\" requires a raster source`));\n            }\n            else if (sourceType !== 'raster-dem' && type === 'hillshade') {\n                errors.push(new ValidationError(key, layer.source, `layer \"${layer.id}\" requires a raster-dem source`));\n            }\n            else if (sourceType === 'raster' && type !== 'raster') {\n                errors.push(new ValidationError(key, layer.source, `layer \"${layer.id}\" requires a vector source`));\n            }\n            else if (sourceType === 'vector' && !layer['source-layer']) {\n                errors.push(new ValidationError(key, layer, `layer \"${layer.id}\" must specify a \"source-layer\"`));\n            }\n            else if (sourceType === 'raster-dem' && type !== 'hillshade') {\n                errors.push(new ValidationError(key, layer.source, 'raster-dem source can only be used with layer type \\'hillshade\\'.'));\n            }\n            else if (type === 'line' && layer.paint && layer.paint['line-gradient'] &&\n                (sourceType !== 'geojson' || !source.lineMetrics)) {\n                errors.push(new ValidationError(key, layer, `layer \"${layer.id}\" specifies a line-gradient, which requires a GeoJSON source with \\`lineMetrics\\` enabled.`));\n            }\n        }\n    }\n    errors = errors.concat(validateObject({\n        key,\n        value: layer,\n        valueSpec: styleSpec.layer,\n        style: options.style,\n        styleSpec: options.styleSpec,\n        validateSpec: options.validateSpec,\n        objectElementValidators: {\n            '*'() {\n                return [];\n            },\n            // We don't want to enforce the spec's `\"requires\": true` for backward compatibility with refs;\n            // the actual requirement is validated above. See https://github.com/mapbox/mapbox-gl-js/issues/5772.\n            type() {\n                return options.validateSpec({\n                    key: `${key}.type`,\n                    value: layer.type,\n                    valueSpec: styleSpec.layer.type,\n                    style: options.style,\n                    styleSpec: options.styleSpec,\n                    validateSpec: options.validateSpec,\n                    object: layer,\n                    objectKey: 'type'\n                });\n            },\n            filter: validateFilter,\n            layout(options) {\n                return validateObject({\n                    layer,\n                    key: options.key,\n                    value: options.value,\n                    style: options.style,\n                    styleSpec: options.styleSpec,\n                    validateSpec: options.validateSpec,\n                    objectElementValidators: {\n                        '*'(options) {\n                            return validateLayoutProperty(extendBy({ layerType: type }, options));\n                        }\n                    }\n                });\n            },\n            paint(options) {\n                return validateObject({\n                    layer,\n                    key: options.key,\n                    value: options.value,\n                    style: options.style,\n                    styleSpec: options.styleSpec,\n                    validateSpec: options.validateSpec,\n                    objectElementValidators: {\n                        '*'(options) {\n                            return validatePaintProperty(extendBy({ layerType: type }, options));\n                        }\n                    }\n                });\n            }\n        }\n    }));\n    return errors;\n}\n\nfunction validateString(options) {\n    const value = options.value;\n    const key = options.key;\n    const type = getType(value);\n    if (type !== 'string') {\n        return [new ValidationError(key, value, `string expected, ${type} found`)];\n    }\n    return [];\n}\n\nfunction validateRasterDEMSource(options) {\n    var _a;\n    const sourceName = (_a = options.sourceName) !== null && _a !== undefined ? _a : '';\n    const rasterDEM = options.value;\n    const styleSpec = options.styleSpec;\n    const rasterDEMSpec = styleSpec.source_raster_dem;\n    const style = options.style;\n    let errors = [];\n    const rootType = getType(rasterDEM);\n    if (rasterDEM === undefined) {\n        return errors;\n    }\n    else if (rootType !== 'object') {\n        errors.push(new ValidationError('source_raster_dem', rasterDEM, `object expected, ${rootType} found`));\n        return errors;\n    }\n    const encoding = unbundle(rasterDEM.encoding);\n    const isCustomEncoding = encoding === 'custom';\n    const customEncodingKeys = ['redFactor', 'greenFactor', 'blueFactor', 'baseShift'];\n    const encodingName = options.value.encoding ? `\"${options.value.encoding}\"` : 'Default';\n    for (const key in rasterDEM) {\n        if (!isCustomEncoding && customEncodingKeys.includes(key)) {\n            errors.push(new ValidationError(key, rasterDEM[key], `In \"${sourceName}\": \"${key}\" is only valid when \"encoding\" is set to \"custom\". ${encodingName} encoding found`));\n        }\n        else if (rasterDEMSpec[key]) {\n            errors = errors.concat(options.validateSpec({\n                key,\n                value: rasterDEM[key],\n                valueSpec: rasterDEMSpec[key],\n                validateSpec: options.validateSpec,\n                style,\n                styleSpec\n            }));\n        }\n        else {\n            errors.push(new ValidationError(key, rasterDEM[key], `unknown property \"${key}\"`));\n        }\n    }\n    return errors;\n}\n\nconst objectElementValidators = {\n    promoteId: validatePromoteId\n};\nfunction validateSource(options) {\n    const value = options.value;\n    const key = options.key;\n    const styleSpec = options.styleSpec;\n    const style = options.style;\n    const validateSpec = options.validateSpec;\n    if (!value.type) {\n        return [new ValidationError(key, value, '\"type\" is required')];\n    }\n    const type = unbundle(value.type);\n    let errors;\n    switch (type) {\n        case 'vector':\n        case 'raster':\n            errors = validateObject({\n                key,\n                value,\n                valueSpec: styleSpec[`source_${type.replace('-', '_')}`],\n                style: options.style,\n                styleSpec,\n                objectElementValidators,\n                validateSpec,\n            });\n            return errors;\n        case 'raster-dem':\n            errors = validateRasterDEMSource({\n                sourceName: key,\n                value,\n                style: options.style,\n                styleSpec,\n                validateSpec,\n            });\n            return errors;\n        case 'geojson':\n            errors = validateObject({\n                key,\n                value,\n                valueSpec: styleSpec.source_geojson,\n                style,\n                styleSpec,\n                validateSpec,\n                objectElementValidators\n            });\n            if (value.cluster) {\n                for (const prop in value.clusterProperties) {\n                    const [operator, mapExpr] = value.clusterProperties[prop];\n                    const reduceExpr = typeof operator === 'string' ? [operator, ['accumulated'], ['get', prop]] : operator;\n                    errors.push(...validateExpression({\n                        key: `${key}.${prop}.map`,\n                        value: mapExpr,\n                        validateSpec,\n                        expressionContext: 'cluster-map'\n                    }));\n                    errors.push(...validateExpression({\n                        key: `${key}.${prop}.reduce`,\n                        value: reduceExpr,\n                        validateSpec,\n                        expressionContext: 'cluster-reduce'\n                    }));\n                }\n            }\n            return errors;\n        case 'video':\n            return validateObject({\n                key,\n                value,\n                valueSpec: styleSpec.source_video,\n                style,\n                validateSpec,\n                styleSpec\n            });\n        case 'image':\n            return validateObject({\n                key,\n                value,\n                valueSpec: styleSpec.source_image,\n                style,\n                validateSpec,\n                styleSpec\n            });\n        case 'canvas':\n            return [new ValidationError(key, null, 'Please use runtime APIs to add canvas sources, rather than including them in stylesheets.', 'source.canvas')];\n        default:\n            return validateEnum({\n                key: `${key}.type`,\n                value: value.type,\n                valueSpec: { values: ['vector', 'raster', 'raster-dem', 'geojson', 'video', 'image'] },\n                style,\n                validateSpec,\n                styleSpec\n            });\n    }\n}\nfunction validatePromoteId({ key, value }) {\n    if (getType(value) === 'string') {\n        return validateString({ key, value });\n    }\n    else {\n        const errors = [];\n        for (const prop in value) {\n            errors.push(...validateString({ key: `${key}.${prop}`, value: value[prop] }));\n        }\n        return errors;\n    }\n}\n\nfunction validateLight(options) {\n    const light = options.value;\n    const styleSpec = options.styleSpec;\n    const lightSpec = styleSpec.light;\n    const style = options.style;\n    let errors = [];\n    const rootType = getType(light);\n    if (light === undefined) {\n        return errors;\n    }\n    else if (rootType !== 'object') {\n        errors = errors.concat([new ValidationError('light', light, `object expected, ${rootType} found`)]);\n        return errors;\n    }\n    for (const key in light) {\n        const transitionMatch = key.match(/^(.*)-transition$/);\n        if (transitionMatch && lightSpec[transitionMatch[1]] && lightSpec[transitionMatch[1]].transition) {\n            errors = errors.concat(options.validateSpec({\n                key,\n                value: light[key],\n                valueSpec: styleSpec.transition,\n                validateSpec: options.validateSpec,\n                style,\n                styleSpec\n            }));\n        }\n        else if (lightSpec[key]) {\n            errors = errors.concat(options.validateSpec({\n                key,\n                value: light[key],\n                valueSpec: lightSpec[key],\n                validateSpec: options.validateSpec,\n                style,\n                styleSpec\n            }));\n        }\n        else {\n            errors = errors.concat([new ValidationError(key, light[key], `unknown property \"${key}\"`)]);\n        }\n    }\n    return errors;\n}\n\nfunction validateSky(options) {\n    const sky = options.value;\n    const styleSpec = options.styleSpec;\n    const skySpec = styleSpec.sky;\n    const style = options.style;\n    const rootType = getType(sky);\n    if (sky === undefined) {\n        return [];\n    }\n    else if (rootType !== 'object') {\n        return [new ValidationError('sky', sky, `object expected, ${rootType} found`)];\n    }\n    let errors = [];\n    for (const key in sky) {\n        if (skySpec[key]) {\n            errors = errors.concat(options.validateSpec({\n                key,\n                value: sky[key],\n                valueSpec: skySpec[key],\n                style,\n                styleSpec\n            }));\n        }\n        else {\n            errors = errors.concat([new ValidationError(key, sky[key], `unknown property \"${key}\"`)]);\n        }\n    }\n    return errors;\n}\n\nfunction validateTerrain(options) {\n    const terrain = options.value;\n    const styleSpec = options.styleSpec;\n    const terrainSpec = styleSpec.terrain;\n    const style = options.style;\n    let errors = [];\n    const rootType = getType(terrain);\n    if (terrain === undefined) {\n        return errors;\n    }\n    else if (rootType !== 'object') {\n        errors = errors.concat([new ValidationError('terrain', terrain, `object expected, ${rootType} found`)]);\n        return errors;\n    }\n    for (const key in terrain) {\n        if (terrainSpec[key]) {\n            errors = errors.concat(options.validateSpec({\n                key,\n                value: terrain[key],\n                valueSpec: terrainSpec[key],\n                validateSpec: options.validateSpec,\n                style,\n                styleSpec\n            }));\n        }\n        else {\n            errors = errors.concat([new ValidationError(key, terrain[key], `unknown property \"${key}\"`)]);\n        }\n    }\n    return errors;\n}\n\nfunction validateFormatted(options) {\n    if (validateString(options).length === 0) {\n        return [];\n    }\n    return validateExpression(options);\n}\n\nfunction validateImage(options) {\n    if (validateString(options).length === 0) {\n        return [];\n    }\n    return validateExpression(options);\n}\n\nfunction validatePadding(options) {\n    const key = options.key;\n    const value = options.value;\n    const type = getType(value);\n    if (type === 'array') {\n        if (value.length < 1 || value.length > 4) {\n            return [new ValidationError(key, value, `padding requires 1 to 4 values; ${value.length} values found`)];\n        }\n        const arrayElementSpec = {\n            type: 'number'\n        };\n        let errors = [];\n        for (let i = 0; i < value.length; i++) {\n            errors = errors.concat(options.validateSpec({\n                key: `${key}[${i}]`,\n                value: value[i],\n                validateSpec: options.validateSpec,\n                valueSpec: arrayElementSpec\n            }));\n        }\n        return errors;\n    }\n    else {\n        return validateNumber({\n            key,\n            value,\n            valueSpec: {}\n        });\n    }\n}\n\nfunction validateVariableAnchorOffsetCollection(options) {\n    const key = options.key;\n    const value = options.value;\n    const type = getType(value);\n    const styleSpec = options.styleSpec;\n    if (type !== 'array' || value.length < 1 || value.length % 2 !== 0) {\n        return [new ValidationError(key, value, 'variableAnchorOffsetCollection requires a non-empty array of even length')];\n    }\n    let errors = [];\n    for (let i = 0; i < value.length; i += 2) {\n        // Elements in even positions should be values from text-anchor enum\n        errors = errors.concat(validateEnum({\n            key: `${key}[${i}]`,\n            value: value[i],\n            valueSpec: styleSpec['layout_symbol']['text-anchor']\n        }));\n        // Elements in odd positions should be points (2-element numeric arrays)\n        errors = errors.concat(validateArray({\n            key: `${key}[${i + 1}]`,\n            value: value[i + 1],\n            valueSpec: {\n                length: 2,\n                value: 'number'\n            },\n            validateSpec: options.validateSpec,\n            style: options.style,\n            styleSpec\n        }));\n    }\n    return errors;\n}\n\nfunction validateSprite(options) {\n    let errors = [];\n    const sprite = options.value;\n    const key = options.key;\n    if (!Array.isArray(sprite)) {\n        return validateString({\n            key,\n            value: sprite\n        });\n    }\n    else {\n        const allSpriteIds = [];\n        const allSpriteURLs = [];\n        for (const i in sprite) {\n            if (sprite[i].id && allSpriteIds.includes(sprite[i].id))\n                errors.push(new ValidationError(key, sprite, `all the sprites' ids must be unique, but ${sprite[i].id} is duplicated`));\n            allSpriteIds.push(sprite[i].id);\n            if (sprite[i].url && allSpriteURLs.includes(sprite[i].url))\n                errors.push(new ValidationError(key, sprite, `all the sprites' URLs must be unique, but ${sprite[i].url} is duplicated`));\n            allSpriteURLs.push(sprite[i].url);\n            const pairSpec = {\n                id: {\n                    type: 'string',\n                    required: true,\n                },\n                url: {\n                    type: 'string',\n                    required: true,\n                }\n            };\n            errors = errors.concat(validateObject({\n                key: `${key}[${i}]`,\n                value: sprite[i],\n                valueSpec: pairSpec,\n                validateSpec: options.validateSpec,\n            }));\n        }\n        return errors;\n    }\n}\n\nfunction validateProjection(options) {\n    const projection = options.value;\n    const styleSpec = options.styleSpec;\n    const projectionSpec = styleSpec.projection;\n    const style = options.style;\n    const rootType = getType(projection);\n    if (projection === undefined) {\n        return [];\n    }\n    else if (rootType !== 'object') {\n        return [new ValidationError('projection', projection, `object expected, ${rootType} found`)];\n    }\n    let errors = [];\n    for (const key in projection) {\n        if (projectionSpec[key]) {\n            errors = errors.concat(options.validateSpec({\n                key,\n                value: projection[key],\n                valueSpec: projectionSpec[key],\n                style,\n                styleSpec\n            }));\n        }\n        else {\n            errors = errors.concat([new ValidationError(key, projection[key], `unknown property \"${key}\"`)]);\n        }\n    }\n    return errors;\n}\n\nfunction validateProjectionDefinition(options) {\n    const key = options.key;\n    let value = options.value;\n    value = value instanceof String ? value.valueOf() : value;\n    const type = getType(value);\n    if (type === 'array' && !isProjectionDefinitionValue(value) && !isPropertyValueSpecification(value)) {\n        return [new ValidationError(key, value, `projection expected, invalid array ${JSON.stringify(value)} found`)];\n    }\n    else if (!['array', 'string'].includes(type)) {\n        return [new ValidationError(key, value, `projection expected, invalid type \"${type}\" found`)];\n    }\n    return [];\n}\nfunction isPropertyValueSpecification(value) {\n    if (['interpolate', 'step', 'literal'].includes(value[0])) {\n        return true;\n    }\n    return false;\n}\nfunction isProjectionDefinitionValue(value) {\n    return Array.isArray(value) &&\n        value.length === 3 &&\n        typeof value[0] === 'string' &&\n        typeof value[1] === 'string' &&\n        typeof value[2] === 'number';\n}\n\nconst VALIDATORS = {\n    '*'() {\n        return [];\n    },\n    'array': validateArray,\n    'boolean': validateBoolean,\n    'number': validateNumber,\n    'color': validateColor,\n    'constants': validateConstants,\n    'enum': validateEnum,\n    'filter': validateFilter,\n    'function': validateFunction,\n    'layer': validateLayer,\n    'object': validateObject,\n    'source': validateSource,\n    'light': validateLight,\n    'sky': validateSky,\n    'terrain': validateTerrain,\n    'projection': validateProjection,\n    'projectionDefinition': validateProjectionDefinition,\n    'string': validateString,\n    'formatted': validateFormatted,\n    'resolvedImage': validateImage,\n    'padding': validatePadding,\n    'variableAnchorOffsetCollection': validateVariableAnchorOffsetCollection,\n    'sprite': validateSprite,\n};\n/**\n * Main recursive validation function used internally.\n * You should use `validateStyleMin` in the browser or `validateStyle` in node env.\n * @param options - the options object\n * @param options.key - string representing location of validation in style tree. Used only\n * for more informative error reporting.\n * @param options.value - current value from style being evaluated. May be anything from a\n * high level object that needs to be descended into deeper or a simple\n * scalar value.\n * @param options.valueSpec - current spec being evaluated. Tracks value.\n * @param options.styleSpec - current full spec being evaluated.\n * @param options.validateSpec - the validate function itself\n * @param options.style - the style object\n * @param options.objectElementValidators - optional object of functions that will be called\n * @returns an array of errors, or an empty array if no errors are found.\n */\nfunction validate(options) {\n    const value = options.value;\n    const valueSpec = options.valueSpec;\n    const styleSpec = options.styleSpec;\n    options.validateSpec = validate;\n    if (valueSpec.expression && isFunction$1(unbundle(value))) {\n        return validateFunction(options);\n    }\n    else if (valueSpec.expression && isExpression(deepUnbundle(value))) {\n        return validateExpression(options);\n    }\n    else if (valueSpec.type && VALIDATORS[valueSpec.type]) {\n        return VALIDATORS[valueSpec.type](options);\n    }\n    else {\n        const valid = validateObject(extendBy({}, options, {\n            valueSpec: valueSpec.type ? styleSpec[valueSpec.type] : valueSpec\n        }));\n        return valid;\n    }\n}\n\nfunction validateGlyphsUrl(options) {\n    const value = options.value;\n    const key = options.key;\n    const errors = validateString(options);\n    if (errors.length)\n        return errors;\n    if (value.indexOf('{fontstack}') === -1) {\n        errors.push(new ValidationError(key, value, '\"glyphs\" url must include a \"{fontstack}\" token'));\n    }\n    if (value.indexOf('{range}') === -1) {\n        errors.push(new ValidationError(key, value, '\"glyphs\" url must include a \"{range}\" token'));\n    }\n    return errors;\n}\n\n/**\n * Validate a MapLibre style against the style specification.\n * Use this when running in the browser.\n *\n * @param style - The style to be validated.\n * @param styleSpec - The style specification to validate against.\n * If omitted, the latest style spec is used.\n * @returns an array of errors, or an empty array if no errors are found.\n * @example\n *   const validate = require('@maplibre/maplibre-gl-style-spec/').validateStyleMin;\n *   const errors = validate(style);\n */\nfunction validateStyleMin(style, styleSpec = v8Spec) {\n    let errors = [];\n    errors = errors.concat(validate({\n        key: '',\n        value: style,\n        valueSpec: styleSpec.$root,\n        styleSpec,\n        style,\n        validateSpec: validate,\n        objectElementValidators: {\n            glyphs: validateGlyphsUrl,\n            '*'() {\n                return [];\n            }\n        }\n    }));\n    if (style['constants']) {\n        errors = errors.concat(validateConstants({\n            key: 'constants',\n            value: style['constants'],\n            style,\n            styleSpec,\n            validateSpec: validate,\n        }));\n    }\n    return sortErrors(errors);\n}\nvalidateStyleMin.source = wrapCleanErrors(injectValidateSpec(validateSource));\nvalidateStyleMin.sprite = wrapCleanErrors(injectValidateSpec(validateSprite));\nvalidateStyleMin.glyphs = wrapCleanErrors(injectValidateSpec(validateGlyphsUrl));\nvalidateStyleMin.light = wrapCleanErrors(injectValidateSpec(validateLight));\nvalidateStyleMin.sky = wrapCleanErrors(injectValidateSpec(validateSky));\nvalidateStyleMin.terrain = wrapCleanErrors(injectValidateSpec(validateTerrain));\nvalidateStyleMin.layer = wrapCleanErrors(injectValidateSpec(validateLayer));\nvalidateStyleMin.filter = wrapCleanErrors(injectValidateSpec(validateFilter));\nvalidateStyleMin.paintProperty = wrapCleanErrors(injectValidateSpec(validatePaintProperty));\nvalidateStyleMin.layoutProperty = wrapCleanErrors(injectValidateSpec(validateLayoutProperty));\nfunction injectValidateSpec(validator) {\n    return function (options) {\n        return validator({\n            ...options,\n            validateSpec: validate,\n        });\n    };\n}\nfunction sortErrors(errors) {\n    return [].concat(errors).sort((a, b) => {\n        return a.line - b.line;\n    });\n}\nfunction wrapCleanErrors(inner) {\n    return function (...args) {\n        return sortErrors(inner.apply(this, args));\n    };\n}\n\n// Note: This regex matches even invalid JSON strings, but since we’re\n// working on the output of `JSON.stringify` we know that only valid strings\n// are present (unless the user supplied a weird `options.indent` but in\n// that case we don’t care since the output would be invalid anyway).\nconst stringOrChar = /(\"(?:[^\\\\\"]|\\\\.)*\")|[:,]/g;\n\nfunction stringify(passedObj, options = {}) {\n  const indent = JSON.stringify(\n    [1],\n    undefined,\n    options.indent === undefined ? 2 : options.indent\n  ).slice(2, -3);\n\n  const maxLength =\n    indent === \"\"\n      ? Infinity\n      : options.maxLength === undefined\n      ? 80\n      : options.maxLength;\n\n  let { replacer } = options;\n\n  return (function _stringify(obj, currentIndent, reserved) {\n    if (obj && typeof obj.toJSON === \"function\") {\n      obj = obj.toJSON();\n    }\n\n    const string = JSON.stringify(obj, replacer);\n\n    if (string === undefined) {\n      return string;\n    }\n\n    const length = maxLength - currentIndent.length - reserved;\n\n    if (string.length <= length) {\n      const prettified = string.replace(\n        stringOrChar,\n        (match, stringLiteral) => {\n          return stringLiteral || `${match} `;\n        }\n      );\n      if (prettified.length <= length) {\n        return prettified;\n      }\n    }\n\n    if (replacer != null) {\n      obj = JSON.parse(string);\n      replacer = undefined;\n    }\n\n    if (typeof obj === \"object\" && obj !== null) {\n      const nextIndent = currentIndent + indent;\n      const items = [];\n      let index = 0;\n      let start;\n      let end;\n\n      if (Array.isArray(obj)) {\n        start = \"[\";\n        end = \"]\";\n        const { length } = obj;\n        for (; index < length; index++) {\n          items.push(\n            _stringify(obj[index], nextIndent, index === length - 1 ? 0 : 1) ||\n              \"null\"\n          );\n        }\n      } else {\n        start = \"{\";\n        end = \"}\";\n        const keys = Object.keys(obj);\n        const { length } = keys;\n        for (; index < length; index++) {\n          const key = keys[index];\n          const keyPart = `${JSON.stringify(key)}: `;\n          const value = _stringify(\n            obj[key],\n            nextIndent,\n            keyPart.length + (index === length - 1 ? 0 : 1)\n          );\n          if (value !== undefined) {\n            items.push(keyPart + value);\n          }\n        }\n      }\n\n      if (items.length > 0) {\n        return [start, indent + items.join(`,\\n${nextIndent}`), end].join(\n          `\\n${currentIndent}`\n        );\n      }\n    }\n\n    return string;\n  })(passedObj, \"\", 0);\n}\n\nfunction sortKeysBy(obj, reference) {\n    const result = {};\n    for (const key in reference) {\n        if (obj[key] !== undefined) {\n            result[key] = obj[key];\n        }\n    }\n    for (const key in obj) {\n        if (result[key] === undefined) {\n            result[key] = obj[key];\n        }\n    }\n    return result;\n}\n/**\n * Format a MapLibre Style.  Returns a stringified style with its keys\n * sorted in the same order as the reference style.\n *\n * The optional `space` argument is passed to\n * [`JSON.stringify`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify)\n * to generate formatted output.\n *\n * If `space` is unspecified, a default of `2` spaces will be used.\n *\n * @private\n * @param {Object} style a MapLibre Style\n * @param {number} [space] space argument to pass to `JSON.stringify`\n * @returns {string} stringified formatted JSON\n * @example\n * var fs = require('fs');\n * var format = require('maplibre-gl-style-spec').format;\n * var style = fs.readFileSync('./source.json', 'utf8');\n * fs.writeFileSync('./dest.json', format(style));\n * fs.writeFileSync('./dest.min.json', format(style, 0));\n */\nfunction format(style, space = 2) {\n    style = sortKeysBy(style, v8Spec.$root);\n    if (style.layers) {\n        style.layers = style.layers.map((layer) => sortKeysBy(layer, v8Spec.layer));\n    }\n    return stringify(style, { indent: space });\n}\n\nfunction eachLayout(layer, callback) {\n    for (const k in layer) {\n        if (k.indexOf('layout') === 0) {\n            callback(layer[k], k);\n        }\n    }\n}\nfunction eachPaint(layer, callback) {\n    for (const k in layer) {\n        if (k.indexOf('paint') === 0) {\n            callback(layer[k], k);\n        }\n    }\n}\nfunction resolveConstant(style, value) {\n    if (typeof value === 'string' && value[0] === '@') {\n        return resolveConstant(style, style.constants[value]);\n    }\n    else {\n        return value;\n    }\n}\nfunction isFunction(value) {\n    return Array.isArray(value.stops);\n}\nfunction renameProperty(obj, from, to) {\n    obj[to] = obj[from];\n    delete obj[from];\n}\nfunction migrateV8(style) {\n    style.version = 8;\n    // Rename properties, reverse coordinates in source and layers\n    eachSource(style, (source) => {\n        if (source.type === 'video' && source['url'] !== undefined) {\n            renameProperty(source, 'url', 'urls');\n        }\n        if (source.type === 'video') {\n            source.coordinates.forEach((coord) => {\n                return coord.reverse();\n            });\n        }\n    });\n    eachLayer(style, (layer) => {\n        eachLayout(layer, (layout) => {\n            if (layout['symbol-min-distance'] !== undefined) {\n                renameProperty(layout, 'symbol-min-distance', 'symbol-spacing');\n            }\n        });\n        eachPaint(layer, (paint) => {\n            if (paint['background-image'] !== undefined) {\n                renameProperty(paint, 'background-image', 'background-pattern');\n            }\n            if (paint['line-image'] !== undefined) {\n                renameProperty(paint, 'line-image', 'line-pattern');\n            }\n            if (paint['fill-image'] !== undefined) {\n                renameProperty(paint, 'fill-image', 'fill-pattern');\n            }\n        });\n    });\n    // Inline Constants\n    eachProperty(style, { paint: true, layout: true }, (property) => {\n        const value = resolveConstant(style, property.value);\n        if (isFunction(value)) {\n            value.stops.forEach((stop) => {\n                stop[1] = resolveConstant(style, stop[1]);\n            });\n        }\n        property.set(value);\n    });\n    delete style['constants'];\n    eachLayer(style, (layer) => {\n        // get rid of text-max-size, icon-max-size\n        // turn text-size, icon-size into layout properties\n        // https://github.com/mapbox/mapbox-gl-style-spec/issues/255\n        eachLayout(layer, (layout) => {\n            delete layout['text-max-size'];\n            delete layout['icon-max-size'];\n        });\n        eachPaint(layer, (paint) => {\n            if (paint['text-size']) {\n                if (!layer.layout)\n                    layer.layout = {};\n                layer.layout['text-size'] = paint['text-size'];\n                delete paint['text-size'];\n            }\n            if (paint['icon-size']) {\n                if (!layer.layout)\n                    layer.layout = {};\n                layer.layout['icon-size'] = paint['icon-size'];\n                delete paint['icon-size'];\n            }\n        });\n    });\n    function migrateFontStack(font) {\n        function splitAndTrim(string) {\n            return string.split(',').map((s) => {\n                return s.trim();\n            });\n        }\n        if (Array.isArray(font)) {\n            // Assume it's a previously migrated font-array.\n            return font;\n        }\n        else if (typeof font === 'string') {\n            return splitAndTrim(font);\n        }\n        else if (typeof font === 'object') {\n            font.stops.forEach((stop) => {\n                stop[1] = splitAndTrim(stop[1]);\n            });\n            return font;\n        }\n        else {\n            throw new Error('unexpected font value');\n        }\n    }\n    eachLayer(style, (layer) => {\n        eachLayout(layer, (layout) => {\n            if (layout['text-font']) {\n                layout['text-font'] = migrateFontStack(layout['text-font']);\n            }\n        });\n    });\n    // Reverse order of symbol layers. This is an imperfect migration.\n    //\n    // The order of a symbol layer in the layers list affects two things:\n    // - how it is drawn relative to other layers (like oneway arrows below bridges)\n    // - the placement priority compared to other layers\n    //\n    // It's impossible to reverse the placement priority without breaking the draw order\n    // in some cases. This migration only reverses the order of symbol layers that\n    // are above all other types of layers.\n    //\n    // Symbol layers that are at the top of the map preserve their priority.\n    // Symbol layers that are below another type (line, fill) of layer preserve their draw order.\n    let firstSymbolLayer = 0;\n    for (let i = style.layers.length - 1; i >= 0; i--) {\n        const layer = style.layers[i];\n        if (layer.type !== 'symbol') {\n            firstSymbolLayer = i + 1;\n            break;\n        }\n    }\n    const symbolLayers = style.layers.splice(firstSymbolLayer);\n    symbolLayers.reverse();\n    style.layers = style.layers.concat(symbolLayers);\n    return style;\n}\n\n/**\n * Migrate the given style object in place to use expressions. Specifically,\n * this will convert (a) \"stop\" functions, and (b) legacy filters to their\n * expression equivalents.\n * @param style The style object to migrate.\n * @returns The migrated style object.\n */\nfunction expressions(style) {\n    const converted = [];\n    eachLayer(style, (layer) => {\n        if (layer.filter) {\n            layer.filter = convertFilter(layer.filter);\n        }\n    });\n    eachProperty(style, { paint: true, layout: true }, ({ path, value, reference, set }) => {\n        if (isExpression(value))\n            return;\n        if (typeof value === 'object' && !Array.isArray(value)) {\n            set(convertFunction(value, reference));\n            converted.push(path.join('.'));\n        }\n        else if (reference.tokens && typeof value === 'string') {\n            set(convertTokenString(value));\n        }\n    });\n    return style;\n}\n\n/**\n * Migrate color style values to supported format.\n *\n * @param colorToMigrate Color value to migrate, could be a string or an expression.\n * @returns Color style value in supported format.\n */\nfunction migrateColors(colorToMigrate) {\n    return JSON.parse(migrateHslColors(JSON.stringify(colorToMigrate)));\n}\n/**\n * Created to migrate from colors supported by the former CSS color parsing\n * library `csscolorparser` but not compliant with the CSS Color specification,\n * like `hsl(900, 0.15, 90%)`.\n *\n * @param colorToMigrate Serialized color style value.\n * @returns A serialized color style value in which all non-standard hsl color values\n * have been converted to a format that complies with the CSS Color specification.\n *\n * @example\n * migrateHslColors('\"hsl(900, 0.15, 90%)\"'); // returns '\"hsl(900, 15%, 90%)\"'\n * migrateHslColors('\"hsla(900, .15, .9)\"'); // returns '\"hsl(900, 15%, 90%)\"'\n * migrateHslColors('\"hsl(900, 15%, 90%)\"'); // returns '\"hsl(900, 15%, 90%)\"' - no changes\n */\nfunction migrateHslColors(colorToMigrate) {\n    return colorToMigrate.replace(/\"hsla?\\((.+?)\\)\"/gi, (match, hslArgs) => {\n        const argsMatch = hslArgs.match(/^(.+?)\\s*,\\s*(.+?)\\s*,\\s*(.+?)(?:\\s*,\\s*(.+))?$/i);\n        if (argsMatch) {\n            let [h, s, l, a] = argsMatch.slice(1);\n            [s, l] = [s, l].map(v => v.endsWith('%') ? v : `${parseFloat(v) * 100}%`);\n            return `\"hsl${typeof a === 'string' ? 'a' : ''}(${[h, s, l, a].filter(Boolean).join(',')})\"`;\n        }\n        return match;\n    });\n}\n\n/**\n * Migrate a Mapbox/MapLibre GL Style to the latest version.\n *\n * @param style - a MapLibre Style\n * @returns a migrated style\n * @example\n * const fs = require('fs');\n * const migrate = require('@maplibre/maplibre-gl-style-spec').migrate;\n * const style = fs.readFileSync('./style.json', 'utf8');\n * fs.writeFileSync('./style.json', JSON.stringify(migrate(style)));\n */\nfunction migrate(style) {\n    let migrated = false;\n    if (style.version === 7) {\n        style = migrateV8(style);\n        migrated = true;\n    }\n    if (style.version === 8) {\n        migrated = !!expressions(style);\n        migrated = true;\n    }\n    eachProperty(style, { paint: true, layout: true }, ({ value, reference, set }) => {\n        if (reference.type === 'color') {\n            set(migrateColors(value));\n        }\n    });\n    if (!migrated) {\n        throw new Error(`Cannot migrate from ${style.version}`);\n    }\n    return style;\n}\n\nconst v8 = v8Spec;\nconst expression = {\n    StyleExpression,\n    StylePropertyFunction,\n    ZoomConstantExpression,\n    ZoomDependentExpression,\n    createExpression,\n    createPropertyExpression,\n    isExpression,\n    isExpressionFilter,\n    isZoomExpression,\n    normalizePropertyExpression,\n};\nconst styleFunction = {\n    convertFunction,\n    createFunction,\n    isFunction: isFunction$1\n};\nconst visit = { eachLayer, eachProperty, eachSource };\n\nexport { Color, ColorType, CompoundExpression, EvaluationContext, FormatExpression, Formatted, FormattedSection, FormattedType, Interpolate, Literal, NullType, Padding, ParsingError, ProjectionDefinition, ProjectionDefinitionType, ResolvedImage, Step, StyleExpression, StylePropertyFunction, ValidationError, VariableAnchorOffsetCollection, ZoomConstantExpression, ZoomDependentExpression, classifyRings, convertFilter, convertFunction, createExpression, createFunction, createPropertyExpression, derefLayers, diff, emptyStyle, expression, expressions$1 as expressions, featureFilter, format, styleFunction as function, groupByLayout, interpolateFactory as interpolates, isExpression, isFunction$1 as isFunction, isZoomExpression, v8Spec as latest, migrate, normalizePropertyExpression, supportsPropertyExpression, typeToString as toString, typeOf, v8, validate, validateStyleMin, visit };\n//# sourceMappingURL=index.mjs.map\n","var fontWeights = {\n  thin: 100,\n  hairline: 100,\n  'ultra-light': 200,\n  'extra-light': 200,\n  light: 300,\n  book: 300,\n  regular: 400,\n  normal: 400,\n  plain: 400,\n  roman: 400,\n  standard: 400,\n  medium: 500,\n  'semi-bold': 600,\n  'demi-bold': 600,\n  bold: 700,\n  'extra-bold': 800,\n  'ultra-bold': 800,\n  heavy: 900,\n  black: 900,\n  'heavy-black': 900,\n  fat: 900,\n  poster: 900,\n  'ultra-black': 950,\n  'extra-black': 950\n};\nvar sp = ' ';\nvar italicRE = /(italic|oblique)$/i;\n\nvar fontCache = {};\n\n/**\n * @param {string|Array<string>} fonts Mapbox GL Style fontstack or single font, e.g. `['Open Sans Regular', 'Arial Unicode MS Regular']` or `'Open Sans Regular'`.\n * @param {number} size Font size in pixels.\n * @param {string|number} [lineHeight] Line height as css line-height.\n * @returns {string} CSS font definition, e.g. `'normal 400 16px/1.2 \"Open Sans\"'`.\n */\nexport default function(fonts, size, lineHeight) {\n  var cssData = fontCache[fonts];\n  if (!cssData) {\n    if (!Array.isArray(fonts)) {\n      fonts = [fonts];\n    }\n    var weight = 400;\n    var style = 'normal';\n    var fontFamilies = [];\n    var haveWeight, haveStyle;\n    for (var i = 0, ii = fonts.length; i < ii; ++i) {\n      var font = fonts[i];\n      var parts = font.split(' ');\n      var maybeWeight = parts[parts.length - 1].toLowerCase();\n      if (maybeWeight == 'normal' || maybeWeight == 'italic' || maybeWeight == 'oblique') {\n        style = haveStyle ? style : maybeWeight;\n        haveStyle = true;\n        parts.pop();\n        maybeWeight = parts[parts.length - 1].toLowerCase();\n      } else if (italicRE.test(maybeWeight)) {\n        maybeWeight = maybeWeight.replace(italicRE, '');\n        style = haveStyle ? style : parts[parts.length - 1].replace(maybeWeight, '');\n        haveStyle = true;\n      }\n      for (var w in fontWeights) {\n        var previousPart = parts.length > 1 ? parts[parts.length - 2].toLowerCase() : '';\n        if (maybeWeight == w || maybeWeight == w.replace('-', '') || previousPart + '-' + maybeWeight == w) {\n          weight = haveWeight ? weight : fontWeights[w];\n          parts.pop();\n          if (previousPart && w.startsWith(previousPart)) {\n            parts.pop();\n          }\n          break;\n        }\n      }\n      if (!haveWeight && typeof maybeWeight == 'number') {\n        weight = maybeWeight;\n        haveWeight = true;\n      }\n      var fontFamily = parts.join(sp)\n        .replace('Klokantech Noto Sans', 'Noto Sans');\n      if (fontFamily.indexOf(sp) !== -1) {\n        fontFamily = '\"' + fontFamily + '\"';\n      }\n      fontFamilies.push(fontFamily);\n    }\n    // CSS font property: font-style font-weight font-size/line-height font-family\n    cssData = fontCache[fonts] = [style, weight, fontFamilies];\n  }\n  return cssData[0] + sp + cssData[1] + sp + size + 'px' + (lineHeight ? '/' + lineHeight : '') + sp + cssData[2];\n}\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, comparator) {\n  let mid, cmp;\n  comparator = comparator || ascending;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function sorting arrays in ascending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function ascending(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * Compare function sorting arrays in descending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is greater than, equal to, or less than the second.\n */\nexport function descending(a, b) {\n  return a < b ? 1 : a > b ? -1 : 0;\n}\n\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n\n/**\n * @param {Array<number>} arr Array in descending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  if (arr[0] <= target) {\n    return 0;\n  }\n\n  const n = arr.length;\n  if (target <= arr[n - 1]) {\n    return n - 1;\n  }\n\n  if (typeof direction === 'function') {\n    for (let i = 1; i < n; ++i) {\n      const candidate = arr[i];\n      if (candidate === target) {\n        return i;\n      }\n      if (candidate < target) {\n        if (direction(target, arr[i - 1], candidate) > 0) {\n          return i - 1;\n        }\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction > 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] < target) {\n        return i - 1;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction < 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] <= target) {\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  for (let i = 1; i < n; ++i) {\n    if (arr[i] == target) {\n      return i;\n    }\n    if (arr[i] < target) {\n      if (arr[i - 1] - target < target - arr[i]) {\n        return i - 1;\n      }\n      return i;\n    }\n  }\n  return n - 1;\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array<any>|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array<any>|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preserved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [func] Comparison function.\n * @param {boolean} [strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, func, strict) {\n  const compare = func || ascending;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (strict && res === 0));\n  });\n}\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>|undefined} */\n  let lastArgs;\n\n  let lastThis;\n\n  /**\n   * @this {*} Only need to know if `this` changed, don't care what type\n   * @return {ReturnType} Memoized value\n   */\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!lastArgs || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n\n/**\n * @template T\n * @param {function(): (T | Promise<T>)} getter A function that returns a value or a promise for a value.\n * @return {Promise<T>} A promise for the value.\n */\nexport function toPromise(getter) {\n  function promiseGetter() {\n    let value;\n    try {\n      value = getter();\n    } catch (err) {\n      return Promise.reject(err);\n    }\n    if (value instanceof Promise) {\n      return value;\n    }\n    return Promise.resolve(value);\n  }\n  return promiseGetter();\n}\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/extent\n */\nimport Relationship from './extent/Relationship.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Extent corner.\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} Corner\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [dest] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, dest) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, dest);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, dest) {\n  if (dest) {\n    dest[0] = extent[0] - value;\n    dest[1] = extent[1] - value;\n    dest[2] = extent[2] + value;\n    dest[3] = extent[3] + value;\n    return dest;\n  }\n  return [\n    extent[0] - value,\n    extent[1] - value,\n    extent[2] + value,\n    extent[3] + value,\n  ];\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [dest] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent.slice();\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, dest) {\n  if (dest) {\n    dest[0] = minX;\n    dest[1] = minY;\n    dest[2] = maxX;\n    dest[3] = maxY;\n    return dest;\n  }\n  return [minX, minY, maxX, maxY];\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(dest) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, dest);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, dest) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, dest);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  dest,\n) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === 'bottom-left') {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === 'bottom-right') {\n    coordinate = getBottomRight(extent);\n  } else if (corner === 'top-left') {\n    coordinate = getTopLeft(extent);\n  } else if (corner === 'top-right') {\n    coordinate = getTopRight(extent);\n  } else {\n    throw new Error('Invalid corner');\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, dest) {\n  const [x0, y0, x1, y1, x2, y2, x3, y3] = getRotatedViewport(\n    center,\n    resolution,\n    rotation,\n    size,\n  );\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    dest,\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @return {Array<number>} Linear ring representing the viewport.\n */\nexport function getRotatedViewport(center, resolution, rotation, size) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  return [\n    x - xCos + ySin,\n    y - xSin - yCos,\n    x - xCos - ySin,\n    y - xSin + yCos,\n    x + xCos - ySin,\n    y + xSin + yCos,\n    x + xCos + ySin,\n    y + xSin - yCos,\n    x - xCos + ySin,\n    y - xSin - yCos,\n  ];\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [dest] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, dest) {\n  const intersection = dest ? dest : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [dest] Destination extent.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, dest, stops) {\n  if (isEmpty(extent)) {\n    return createOrUpdateEmpty(dest);\n  }\n  let coordinates = [];\n  if (stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / stops,\n        extent[2] - (width * i) / stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / stops,\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, dest);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth,\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n\n/**\n * Fits the extent to the real world\n *\n * If the extent does not cross the anti meridian, this will return the extent in an array\n * If the extent crosses the anti meridian, the extent will be sliced, so each part fits within the\n * real world\n *\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @param {boolean} [multiWorld] Return all worlds\n * @return {Array<Extent>} The extent within the real world extent.\n */\nexport function wrapAndSliceX(extent, projection, multiWorld) {\n  if (projection.canWrapX()) {\n    const projectionExtent = projection.getExtent();\n\n    if (!isFinite(extent[0]) || !isFinite(extent[2])) {\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n\n    wrapX(extent, projection);\n    const worldWidth = getWidth(projectionExtent);\n\n    if (getWidth(extent) > worldWidth && !multiWorld) {\n      // the extent wraps around on itself\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n    if (extent[0] < projectionExtent[0]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0] + worldWidth, extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2], extent[3]],\n      ];\n    }\n    if (extent[2] > projectionExtent[2]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0], extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2] - worldWidth, extent[3]],\n      ];\n    }\n  }\n\n  return [extent];\n}\n","/**\n * @module ol/geom/flat/center\n */\nimport {createEmpty, createOrUpdateFromFlatCoordinates} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  const flatCenters = [];\n  let extent = createEmpty();\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    extent = createOrUpdateFromFlatCoordinates(\n      flatCoordinates,\n      offset,\n      ends[0],\n      stride,\n    );\n    flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n    offset = ends[ends.length - 1];\n  }\n  return flatCenters;\n}\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent,\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1],\n      );\n    },\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y,\n) {\n  // https://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y,\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y,\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {ascending} from '../../array.js';\nimport {linearRingsContainsXY} from './contains.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  dest,\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(ascending);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (dest) {\n    dest.push(pointX, y, maxSegmentLength);\n    return dest;\n  }\n  return [pointX, y, maxSegmentLength];\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters,\n) {\n  /** @type {Array<number>} */\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints,\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>|null} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n/**\n * Returns a number with a limited number of decimal digits.\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The input number with a limited number of decimal digits.\n */\nexport function toFixed(n, decimals) {\n  const factor = Math.pow(10, decimals);\n  return Math.round(n * factor) / factor;\n}\n\n/**\n * Rounds a number to the nearest integer value considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The nearest integer.\n */\nexport function round(n, decimals) {\n  return Math.round(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next smaller integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next smaller integer.\n */\nexport function floor(n, decimals) {\n  return Math.floor(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next bigger integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next bigger integer.\n */\nexport function ceil(n, decimals) {\n  return Math.ceil(toFixed(n, decimals));\n}\n\n/**\n * Wraps a number between some minimum and maximum values.\n * @param {number} n The number to wrap.\n * @param {number} min The minimum of the range (inclusive).\n * @param {number} max The maximum of the range (exclusive).\n * @return {number} The wrapped number.\n */\nexport function wrap(n, min, max) {\n  if (n >= min && n < max) {\n    return n;\n  }\n  const range = max - min;\n  return ((((n - min) % range) + range) % range) + min;\n}\n","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>} [dest] Destination.\n * @param {number} [dimension] Destination dimension (default is `2`)\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  fraction,\n  dest,\n  dimension,\n) {\n  let o, t;\n  const n = (end - offset) / stride;\n  if (n === 1) {\n    o = offset;\n  } else if (n === 2) {\n    o = offset;\n    t = fraction;\n  } else if (n !== 0) {\n    let x1 = flatCoordinates[offset];\n    let y1 = flatCoordinates[offset + 1];\n    let length = 0;\n    const cumulativeLengths = [0];\n    for (let i = offset + stride; i < end; i += stride) {\n      const x2 = flatCoordinates[i];\n      const y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    const target = fraction * length;\n    const index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      t =\n        (target - cumulativeLengths[-index - 2]) /\n        (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      o = offset + (-index - 2) * stride;\n    } else {\n      o = offset + index * stride;\n    }\n  }\n  dimension = dimension > 1 ? dimension : 2;\n  dest = dest ? dest : new Array(dimension);\n  for (let i = 0; i < dimension; ++i) {\n    dest[i] =\n      o === undefined\n        ? NaN\n        : t === undefined\n          ? flatCoordinates[o + i]\n          : lerp(flatCoordinates[o + i], flatCoordinates[o + stride + i], t);\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringCoordinateAtM(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  m,\n  extrapolate,\n) {\n  if (end == offset) {\n    return null;\n  }\n  let coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  let lo = offset / stride;\n  let hi = end / stride;\n  while (lo < hi) {\n    const mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  const m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  const m1 = flatCoordinates[(lo + 1) * stride - 1];\n  const t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (let i = 0; i < stride - 1; ++i) {\n    coordinate.push(\n      lerp(\n        flatCoordinates[(lo - 1) * stride + i],\n        flatCoordinates[lo * stride + i],\n        t,\n      ),\n    );\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  m,\n  extrapolate,\n  interpolate,\n) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates,\n      offset,\n      ends[ends.length - 1],\n      stride,\n      m,\n      extrapolate,\n    );\n  }\n  let coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    }\n    if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        m,\n        false,\n      );\n    }\n    offset = end;\n  }\n  return null;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean|undefined} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right,\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (!linearRingsAreOriented(flatCoordinates, offset, ends, stride, right)) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right,\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      right,\n    );\n  }\n  return offset;\n}\n\n/**\n * Return a two-dimensional endss\n * @param {Array<number>} flatCoordinates Flat coordinates\n * @param {Array<number>} ends Linear ring end indexes\n * @return {Array<Array<number>>} Two dimensional endss array that can\n * be used to construct a MultiPolygon\n */\nexport function inflateEnds(flatCoordinates, ends) {\n  const endss = [];\n  let offset = 0;\n  let prevEndIndex = 0;\n  let startOrientation;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    // classifies an array of rings into polygons with outer rings and holes\n    const orientation = linearRingIsClockwise(flatCoordinates, offset, end, 2);\n    if (startOrientation === undefined) {\n      startOrientation = orientation;\n    }\n    if (orientation === startOrientation) {\n      endss.push(ends.slice(prevEndIndex, i + 1));\n    } else {\n      if (endss.length === 0) {\n        continue;\n      }\n      endss[endss.length - 1].push(ends[prevEndIndex]);\n    }\n    prevEndIndex = i + 1;\n    offset = end;\n  }\n  return endss;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  simplifiedFlatCoordinates,\n) {\n  simplifiedFlatCoordinates =\n    simplifiedFlatCoordinates !== undefined ? simplifiedFlatCoordinates : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0,\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds,\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds,\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @param {number} [destinationStride] Stride of destination coordinates; if unspecified, assumed to be 2.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  dest,\n  destinationStride,\n) {\n  dest = dest ? dest : [];\n  destinationStride = destinationStride ? destinationStride : 2;\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n\n    for (let k = 2; k < destinationStride; k++) {\n      dest[i++] = flatCoordinates[j + k];\n    }\n  }\n\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  dest,\n) {\n  dest = dest ? dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  dest,\n) {\n  dest = dest ? dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  dest,\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/console\n */\n\n/**\n * @typedef {'info'|'warn'|'error'|'none'} Level\n */\n\n/**\n * @type {Object<Level, number>}\n */\nconst levels = {\n  info: 1,\n  warn: 2,\n  error: 3,\n  none: 4,\n};\n\n/**\n * @type {number}\n */\nlet level = levels.info;\n\n/**\n * Set the logging level.  By default, the level is set to 'info' and all\n * messages will be logged.  Set to 'warn' to only display warnings and errors.\n * Set to 'error' to only display errors.  Set to 'none' to silence all messages.\n *\n * @param {Level} l The new level.\n */\nexport function setLevel(l) {\n  level = levels[l];\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function log(...args) {\n  if (level > levels.info) {\n    return;\n  }\n  console.log(...args); // eslint-disable-line no-console\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function warn(...args) {\n  if (level > levels.warn) {\n    return;\n  }\n  console.warn(...args); // eslint-disable-line no-console\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function error(...args) {\n  if (level > levels.error) {\n    return;\n  }\n  console.error(...args); // eslint-disable-line no-console\n}\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo, toFixed} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an `xy`, `xyz` or `xyzm` coordinate.\n * Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY();\n *     const out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY(2);\n *     const out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const decimals = fractionDigits || 0;\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = toFixed(x - deg * 3600 - min * 60, decimals);\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  let hdms = deg + '\\u00b0';\n  if (min !== 0 || sec !== 0) {\n    hdms += ' ' + padNumber(min, 2) + '\\u2032';\n  }\n  if (sec !== 0) {\n    hdms += ' ' + padNumber(sec, 2, decimals) + '\\u2033';\n  }\n  if (normalizedDegrees !== 0) {\n    hdms += ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0);\n  }\n\n  return hdms;\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(fractionDigits));\n  }\n  return '';\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], fractionDigits)\n    );\n  }\n  return '';\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, fractionDigits) {\n  return format(coordinate, '{x}, {y}', fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    sourceExtentWidth = sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth,\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * @typedef {'radians' | 'degrees' | 'ft' | 'm' | 'pixels' | 'tile-pixels' | 'us-ft'} Units\n * Projection units.\n */\n\n/**\n * See http://duff.ess.washington.edu/data/raster/drg/docs/geotiff.txt\n * @type {Object<number, Units>}\n */\nconst unitByCode = {\n  '9001': 'm',\n  '9002': 'ft',\n  '9003': 'us-ft',\n  '9101': 'radians',\n  '9102': 'degrees',\n};\n\n/**\n * @param {number} code Unit code.\n * @return {Units} Units.\n */\nexport function fromCode(code) {\n  return unitByCode[code];\n}\n\n/**\n * @typedef {Object} MetersPerUnitLookup\n * @property {number} radians Radians\n * @property {number} degrees Degrees\n * @property {number} ft  Feet\n * @property {number} m Meters\n * @property {number} us-ft US feet\n */\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {MetersPerUnitLookup}\n * @api\n */\nexport const METERS_PER_UNIT = {\n  // use the radius of the Normal sphere\n  'radians': 6370997 / (2 * Math.PI),\n  'degrees': (2 * Math.PI * 6370997) / 360,\n  'ft': 0.3048,\n  'm': 1,\n  'us-ft': 1200 / 3937,\n};\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * The function is called with a `number` view resolution and a\n * {@link module:ol/coordinate~Coordinate} as arguments, and returns the `number` resolution\n * in projection units at the passed coordinate.\n * @typedef {function(number, import(\"../coordinate.js\").Coordinate):number} GetPointResolution\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").Units} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {GetPointResolution} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `number` view resolution and a {@link module:ol/coordinate~Coordinate} as arguments, and returns\n * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj.getPointResolution} function will be used.\n */\n\n/**\n * @classdesc\n * In most cases, you should not need to create instances of this class.\n * Instead, where projection information is required, you can use a string\n * projection code or identifier (e.g. `EPSG:4326`) instead of a projection\n * instance.\n *\n * The library includes support for transforming coordinates between the following\n * projections:\n *\n *  WGS 84 / Geographic - Using codes `EPSG:4326`, `CRS:84`, `urn:ogc:def:crs:EPSG:6.6:4326`,\n *    `urn:ogc:def:crs:OGC:1.3:CRS84`, `urn:ogc:def:crs:OGC:2:84`, `http://www.opengis.net/gml/srs/epsg.xml#4326`,\n *    or `urn:x-ogc:def:crs:EPSG:4326`\n *  WGS 84 / Spherical Mercator - Using codes `EPSG:3857`, `EPSG:102100`, `EPSG:102113`, `EPSG:900913`,\n *    `urn:ogc:def:crs:EPSG:6.18:3:3857`, or `http://www.opengis.net/gml/srs/epsg.xml#3857`\n *  WGS 84 / UTM zones - Using codes `EPSG:32601` through `EPSG:32660` for northern zones\n *    and `EPSG:32701` through `EPSG:32760` for southern zones. Note that the built-in UTM transforms\n *    are lower accuracy (with errors on the order of 0.1 m) than those that you might get in a\n *    library like [proj4js](https://github.com/proj4js/proj4js).\n *\n * For additional projection support, or to use higher accuracy transforms than the built-in ones, you can use\n * the [proj4js](https://github.com/proj4js/proj4js) library. With `proj4js`, after adding any new projection\n * definitions, call the {@link module:ol/proj/proj4.register} function.\n *\n * You can use the {@link module:ol/proj.get} function to retrieve a projection instance\n * for one of the registered projections.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").Units}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").Units} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {GetPointResolution|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").Units} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {GetPointResolution|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: 'm',\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / Math.cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/def/crs/EPSG/0/3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @param {number} [stride] Stride (default is `dimension`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, output, dimension, stride) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  stride = stride ?? dimension;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += stride) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @param {number} [stride] Stride (default is `dimension`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, output, dimension, stride) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  stride = stride ?? dimension;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += stride) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [axisOrientation] Axis orientation.\n   */\n  constructor(code, axisOrientation) {\n    super({\n      code: code,\n      units: 'degrees',\n      extent: EXTENT,\n      axisOrientation: axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/OGC/1.3/CRS84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/EPSG/0/4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default|null} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|null} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    return transforms[sourceCode][destinationCode];\n  }\n  return null;\n}\n","/**\n * @module ol/proj/utm\n */\n\n/**\n * Adapted from https://github.com/Turbo87/utm\n * Copyright (c) 2012-2017 Tobias Bieniek\n *\n * The functions here provide approximate transforms to and from UTM.\n * They are not appropriate for use beyond the validity extend of a UTM\n * zone, and the accuracy of the transform decreases toward the zone\n * edges.\n */\n\nimport {toDegrees, toRadians, wrap} from '../math.js';\nimport Projection from './Projection.js';\n\n/**\n * @typedef {Object} UTMZone\n * @property {number} number The zone number (1 - 60).\n * @property {boolean} north The northern hemisphere.\n */\n\nconst K0 = 0.9996;\n\nconst E = 0.00669438;\nconst E2 = E * E;\nconst E3 = E2 * E;\nconst E_P2 = E / (1 - E);\n\nconst SQRT_E = Math.sqrt(1 - E);\nconst _E = (1 - SQRT_E) / (1 + SQRT_E);\nconst _E2 = _E * _E;\nconst _E3 = _E2 * _E;\nconst _E4 = _E3 * _E;\nconst _E5 = _E4 * _E;\n\nconst M1 = 1 - E / 4 - (3 * E2) / 64 - (5 * E3) / 256;\nconst M2 = (3 * E) / 8 + (3 * E2) / 32 + (45 * E3) / 1024;\nconst M3 = (15 * E2) / 256 + (45 * E3) / 1024;\nconst M4 = (35 * E3) / 3072;\n\nconst P2 = (3 / 2) * _E - (27 / 32) * _E3 + (269 / 512) * _E5;\nconst P3 = (21 / 16) * _E2 - (55 / 32) * _E4;\nconst P4 = (151 / 96) * _E3 - (417 / 128) * _E5;\nconst P5 = (1097 / 512) * _E4;\n\nconst R = 6378137;\n\n/**\n * @param {number} easting Easting value of coordinate.\n * @param {number} northing Northing value of coordinate.\n * @param {UTMZone} zone The UTM zone.\n * @return {import(\"../coordinate.js\").Coordinate} The transformed coordinate.\n */\nfunction toLonLat(easting, northing, zone) {\n  const x = easting - 500000;\n  const y = zone.north ? northing : northing - 10000000;\n\n  const m = y / K0;\n  const mu = m / (R * M1);\n\n  const pRad =\n    mu +\n    P2 * Math.sin(2 * mu) +\n    P3 * Math.sin(4 * mu) +\n    P4 * Math.sin(6 * mu) +\n    P5 * Math.sin(8 * mu);\n\n  const pSin = Math.sin(pRad);\n  const pSin2 = pSin * pSin;\n\n  const pCos = Math.cos(pRad);\n\n  const pTan = pSin / pCos;\n  const pTan2 = pTan * pTan;\n  const pTan4 = pTan2 * pTan2;\n\n  const epSin = 1 - E * pSin2;\n  const epSinSqrt = Math.sqrt(1 - E * pSin2);\n\n  const n = R / epSinSqrt;\n  const r = (1 - E) / epSin;\n\n  const c = E_P2 * pCos ** 2;\n  const c2 = c * c;\n\n  const d = x / (n * K0);\n  const d2 = d * d;\n  const d3 = d2 * d;\n  const d4 = d3 * d;\n  const d5 = d4 * d;\n  const d6 = d5 * d;\n\n  const latitude =\n    pRad -\n    (pTan / r) *\n      (d2 / 2 - (d4 / 24) * (5 + 3 * pTan2 + 10 * c - 4 * c2 - 9 * E_P2)) +\n    (d6 / 720) * (61 + 90 * pTan2 + 298 * c + 45 * pTan4 - 252 * E_P2 - 3 * c2);\n\n  let longitude =\n    (d -\n      (d3 / 6) * (1 + 2 * pTan2 + c) +\n      (d5 / 120) * (5 - 2 * c + 28 * pTan2 - 3 * c2 + 8 * E_P2 + 24 * pTan4)) /\n    pCos;\n\n  longitude = wrap(\n    longitude + toRadians(zoneToCentralLongitude(zone.number)),\n    -Math.PI,\n    Math.PI,\n  );\n\n  return [toDegrees(longitude), toDegrees(latitude)];\n}\n\nconst MIN_LATITUDE = -80;\nconst MAX_LATITUDE = 84;\nconst MIN_LONGITUDE = -180;\nconst MAX_LONGITUDE = 180;\n\n/**\n * @param {number} longitude The longitude.\n * @param {number} latitude The latitude.\n * @param {UTMZone} zone The UTM zone.\n * @return {import('../coordinate.js').Coordinate} The UTM coordinate.\n */\nfunction fromLonLat(longitude, latitude, zone) {\n  longitude = wrap(longitude, MIN_LONGITUDE, MAX_LONGITUDE);\n\n  if (latitude < MIN_LATITUDE) {\n    latitude = MIN_LATITUDE;\n  } else if (latitude > MAX_LATITUDE) {\n    latitude = MAX_LATITUDE;\n  }\n\n  const latRad = toRadians(latitude);\n  const latSin = Math.sin(latRad);\n  const latCos = Math.cos(latRad);\n\n  const latTan = latSin / latCos;\n  const latTan2 = latTan * latTan;\n  const latTan4 = latTan2 * latTan2;\n\n  const lonRad = toRadians(longitude);\n  const centralLon = zoneToCentralLongitude(zone.number);\n  const centralLonRad = toRadians(centralLon);\n\n  const n = R / Math.sqrt(1 - E * latSin ** 2);\n  const c = E_P2 * latCos ** 2;\n\n  const a = latCos * wrap(lonRad - centralLonRad, -Math.PI, Math.PI);\n  const a2 = a * a;\n  const a3 = a2 * a;\n  const a4 = a3 * a;\n  const a5 = a4 * a;\n  const a6 = a5 * a;\n\n  const m =\n    R *\n    (M1 * latRad -\n      M2 * Math.sin(2 * latRad) +\n      M3 * Math.sin(4 * latRad) -\n      M4 * Math.sin(6 * latRad));\n\n  const easting =\n    K0 *\n      n *\n      (a +\n        (a3 / 6) * (1 - latTan2 + c) +\n        (a5 / 120) * (5 - 18 * latTan2 + latTan4 + 72 * c - 58 * E_P2)) +\n    500000;\n\n  let northing =\n    K0 *\n    (m +\n      n *\n        latTan *\n        (a2 / 2 +\n          (a4 / 24) * (5 - latTan2 + 9 * c + 4 * c ** 2) +\n          (a6 / 720) * (61 - 58 * latTan2 + latTan4 + 600 * c - 330 * E_P2)));\n\n  if (!zone.north) {\n    northing += 10000000;\n  }\n\n  return [easting, northing];\n}\n\n/**\n * @param {number} zone The zone number.\n * @return {number} The central longitude in degrees.\n */\nfunction zoneToCentralLongitude(zone) {\n  return (zone - 1) * 6 - 180 + 3;\n}\n\n/**\n * @type {Array<RegExp>}\n */\nconst epsgRegExes = [\n  /^EPSG:(\\d+)$/,\n  /^urn:ogc:def:crs:EPSG::(\\d+)$/,\n  /^http:\\/\\/www\\.opengis\\.net\\/def\\/crs\\/EPSG\\/0\\/(\\d+)$/,\n];\n\n/**\n * @param {string} code The projection code.\n * @return {UTMZone|null} The UTM zone info (or null if not UTM).\n */\nexport function zoneFromCode(code) {\n  let epsgId = 0;\n  for (const re of epsgRegExes) {\n    const match = code.match(re);\n    if (match) {\n      epsgId = parseInt(match[1]);\n      break;\n    }\n  }\n  if (!epsgId) {\n    return null;\n  }\n\n  let number = 0;\n  let north = false;\n  if (epsgId > 32700 && epsgId < 32761) {\n    number = epsgId - 32700;\n  } else if (epsgId > 32600 && epsgId < 32661) {\n    north = true;\n    number = epsgId - 32600;\n  }\n  if (!number) {\n    return null;\n  }\n\n  return {number, north};\n}\n\n/**\n * @param {function(number, number, UTMZone): import('../coordinate.js').Coordinate} transformer The transformer.\n * @param {UTMZone} zone The UTM zone.\n * @return {import('../proj.js').TransformFunction} The transform function.\n */\nfunction makeTransformFunction(transformer, zone) {\n  return function (input, output, dimension, stride) {\n    const length = input.length;\n    dimension = dimension > 1 ? dimension : 2;\n    stride = stride ?? dimension;\n    if (!output) {\n      if (dimension > 2) {\n        output = input.slice();\n      } else {\n        output = new Array(length);\n      }\n    }\n    for (let i = 0; i < length; i += stride) {\n      const x = input[i];\n      const y = input[i + 1];\n      const coord = transformer(x, y, zone);\n      output[i] = coord[0];\n      output[i + 1] = coord[1];\n    }\n    return output;\n  };\n}\n\n/**\n * @param {string} code The projection code.\n * @return {import('./Projection.js').default|null} A projection or null if unable to create one.\n */\nexport function makeProjection(code) {\n  const zone = zoneFromCode(code);\n  if (!zone) {\n    return null;\n  }\n  return new Projection({code, units: 'm'});\n}\n\n/**\n * @param {import('./Projection.js').default} projection The projection.\n * @return {import('../proj.js').Transforms|null} The transforms lookup or null if unable to handle projection.\n */\nexport function makeTransforms(projection) {\n  const zone = zoneFromCode(projection.getCode());\n  if (!zone) {\n    return null;\n  }\n\n  return {\n    forward: makeTransformFunction(fromLonLat, zone),\n    inverse: makeTransformFunction(toLonLat, zone),\n  };\n}\n","/**\n * @module ol/sphere\n */\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint': {\n      break;\n    }\n    case 'LineString':\n    case 'LinearRing': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case 'MultiLineString':\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint':\n    case 'LineString':\n    case 'MultiLineString':\n    case 'LinearRing': {\n      break;\n    }\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing),\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat),\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * a list of {@link module:ol/proj/Projection~Projection}\n * objects, one for each projection supported by the application\n * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj.addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection~Projection} object for the new projection and add it with\n * {@link module:ol/proj.addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj.addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection~Projection} with\n * {@link module:ol/proj.addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport {warn} from './console.js';\nimport {equals, getWorldsAway} from './coordinate.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport Projection from './proj/Projection.js';\nimport {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {\n  makeProjection as makeUTMProjection,\n  makeTransforms as makeUTMTransforms,\n} from './proj/utm.js';\nimport {getDistance} from './sphere.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection~Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * @typedef {Object} Transforms\n * @property {TransformFunction} forward The forward transform (from geographic).\n * @property {TransformFunction} inverse The inverse transform (to geographic).\n */\n\n/**\n * @type {Array<function(Projection): Transforms|null>}\n */\nconst transformFactories = [makeUTMTransforms];\n\n/**\n * @type {Array<function(string): Projection|null>}\n */\nconst projectionFactories = [makeUTMProjection];\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @callback TransformFunction\n * @param {Array<number>} input\n * @param {Array<number>} [output]\n * @param {number} [dimension]\n * @param {number} [stride]\n * @return {Array<number>}\n *\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\nlet showCoordinateWarning = true;\n\n/**\n * @param {boolean} [disable] Disable console info about `useGeographic()`\n */\nexport function disableCoordinateWarning(disable) {\n  const hide = disable === undefined ? true : disable;\n  showCoordinateWarning = !hide;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, output) {\n  if (output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    output = output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, output) {\n  if (output !== undefined && input !== output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    input = output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection|null} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  if (!(typeof projectionLike === 'string')) {\n    return projectionLike;\n  }\n  const projection = getProj(projectionLike);\n  if (projection) {\n    return projection;\n  }\n  for (const makeProjection of projectionFactories) {\n    const projection = makeProjection(projectionLike);\n    if (projection) {\n      return projection;\n    }\n  }\n  return null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the `point` pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").Units} [units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (units && units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[units];\n      }\n    }\n  } else {\n    const projUnits = projection.getUnits();\n    if ((projUnits == 'degrees' && !units) || units == 'degrees') {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326'),\n      );\n      if (!toEPSG4326 && projUnits !== 'degrees') {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = units\n        ? METERS_PER_UNIT[units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform,\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  }\n  if (typeof projection === 'string') {\n    return get(projection);\n  }\n  return /** @type {Projection} */ (projection);\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [output] Output.\n     * @param {number} [dimension] Dimensions that should be transformed.\n     * @param {number} [stride] Stride.\n     * @return {Array<number>} Output.\n     */\n    function (input, output, dimension, stride) {\n      const length = input.length;\n      dimension = dimension !== undefined ? dimension : 2;\n      stride = stride ?? dimension;\n      output = output !== undefined ? output : new Array(length);\n      for (let i = 0; i < length; i += stride) {\n        const point = coordTransform(input.slice(i, i + dimension));\n        const pointLength = point.length;\n        for (let j = 0, jj = stride; j < jj; ++j) {\n          output[i + j] = j >= pointLength ? input[i + j] : point[j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}. If the transform function can only\n *     transform less dimensions than the input coordinate, it is supposeed to return a coordinate\n *     with only the length it can transform. The other dimensions will be taken unchanged from the\n *     source.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward),\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse),\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, projection) {\n  disableCoordinateWarning();\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    projection !== undefined ? projection : 'EPSG:3857',\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, projection) {\n  const lonLat = transform(\n    coordinate,\n    projection !== undefined ? projection : 'EPSG:3857',\n    'EPSG:4326',\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  }\n  const transformFunc = getTransformFromProjections(projection1, projection2);\n  return transformFunc === cloneTransform && equalUnits;\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} source Source Projection object.\n * @param {Projection} destination Destination Projection\n *     object.\n * @return {TransformFunction|null} Transform function.\n */\nexport function getTransformFromProjections(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (transformFunc) {\n    return transformFunc;\n  }\n\n  /**\n   * @type {Transforms|null}\n   */\n  let sourceTransforms = null;\n\n  /**\n   * @type {Transforms|null}\n   */\n  let destinationTransforms = null;\n\n  // lazily add projections if we have supported transforms\n  for (const makeTransforms of transformFactories) {\n    if (!sourceTransforms) {\n      sourceTransforms = makeTransforms(source);\n    }\n    if (!destinationTransforms) {\n      destinationTransforms = makeTransforms(destination);\n    }\n  }\n\n  if (!sourceTransforms && !destinationTransforms) {\n    return null;\n  }\n\n  const intermediateCode = 'EPSG:4326';\n  if (!destinationTransforms) {\n    const toDestination = getTransformFunc(intermediateCode, destinationCode);\n    if (toDestination) {\n      transformFunc = composeTransformFuncs(\n        sourceTransforms.inverse,\n        toDestination,\n      );\n    }\n  } else if (!sourceTransforms) {\n    const fromSource = getTransformFunc(sourceCode, intermediateCode);\n    if (fromSource) {\n      transformFunc = composeTransformFuncs(\n        fromSource,\n        destinationTransforms.forward,\n      );\n    }\n  } else {\n    transformFunc = composeTransformFuncs(\n      sourceTransforms.inverse,\n      destinationTransforms.forward,\n    );\n  }\n\n  if (transformFunc) {\n    addProjection(source);\n    addProjection(destination);\n    addTransformFunc(source, destination, transformFunc);\n  }\n\n  return transformFunc;\n}\n\n/**\n * @param {TransformFunction} t1 The first transform function.\n * @param {TransformFunction} t2 The second transform function.\n * @return {TransformFunction} The composed transform function.\n */\nfunction composeTransformFuncs(t1, t2) {\n  return function (input, output, dimensions, stride) {\n    output = t1(input, output, dimensions, stride);\n    return t2(output, output, dimensions, stride);\n  };\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original). If there\n * is no available transform between the two projection, the function will throw\n * an error.\n *\n * See {@link module:ol/proj.transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  if (!transformFunc) {\n    const sourceCode = get(source).getCode();\n    const destinationCode = get(destination).getCode();\n    throw new Error(\n      `No transform available between ${sourceCode} and ${destinationCode}`,\n    );\n  }\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection,\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection,\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {Projection|null}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @param {ProjectionLike} projection The user projection.\n * @api\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.\n * @api\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * @return {Projection|null} The user projection (or null if not set).\n * @api\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @api\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    if (\n      showCoordinateWarning &&\n      !equals(coordinate, [0, 0]) &&\n      coordinate[0] >= -180 &&\n      coordinate[0] <= 180 &&\n      coordinate[1] >= -90 &&\n      coordinate[1] <= 90\n    ) {\n      showCoordinateWarning = false;\n      warn(\n        'Call useGeographic() from ol/proj once to work with [longitude, latitude] coordinates.',\n      );\n    }\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in input projection units per pixel.\n * @param {ProjectionLike} sourceProjection The input projection.\n * @return {number} Resolution in user projection units per pixel.\n */\nexport function toUserResolution(resolution, sourceProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceMetersPerUnit = get(sourceProjection).getMetersPerUnit();\n  const userMetersPerUnit = userProjection.getMetersPerUnit();\n  return sourceMetersPerUnit && userMetersPerUnit\n    ? (resolution * sourceMetersPerUnit) / userMetersPerUnit\n    : resolution;\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in user projection units per pixel.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {number} Resolution in destination projection units per pixel.\n */\nexport function fromUserResolution(resolution, destProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const destMetersPerUnit = get(destProjection).getMetersPerUnit();\n  const userMetersPerUnit = userProjection.getMetersPerUnit();\n  return destMetersPerUnit && userMetersPerUnit\n    ? (resolution * userMetersPerUnit) / destMetersPerUnit\n    : resolution;\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destination).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destination).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      coord = coord.slice(0);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        coord[0] = coord[0] - worldsAway * sourceExtentWidth;\n      }\n      coord[0] = clamp(coord[0], sourceExtent[0], sourceExtent[2]);\n      coord[1] = clamp(coord[1], sourceExtent[1], sourceExtent[3]);\n      transformed = transform(coord);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326,\n  );\n}\n\naddCommon();\n","/**\n * @module ol/asserts\n */\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {string} errorMessage Error message.\n */\nexport function assert(assertion, errorMessage) {\n  if (!assertion) {\n    throw new Error(errorMessage);\n  }\n}\n","/**\n * @module ol/transform\n */\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 'Transformation matrix cannot be inverted');\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * @type {Array}\n */\nconst matrixPrecision = [1e6, 1e6, 1e6, 1e6, 2, 2];\n\n/**\n * A rounded string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  const transformString =\n    'matrix(' +\n    mat\n      .map(\n        (value, i) =>\n          Math.round(value * matrixPrecision[i]) / matrixPrecision[i],\n      )\n      .join(', ') +\n    ')';\n  return transformString;\n}\n","/**\n * @module ol/render/Feature\n */\nimport Feature from '../Feature.js';\nimport {extend} from '../array.js';\nimport {\n  createOrUpdateFromCoordinate,\n  createOrUpdateFromFlatCoordinates,\n  getCenter,\n  getHeight,\n} from '../extent.js';\nimport {memoizeOne} from '../functions.js';\nimport {linearRingss as linearRingssCenter} from '../geom/flat/center.js';\nimport {\n  getInteriorPointOfArray,\n  getInteriorPointsOfMultiArray,\n} from '../geom/flat/interiorpoint.js';\nimport {interpolatePoint} from '../geom/flat/interpolate.js';\nimport {inflateEnds} from '../geom/flat/orient.js';\nimport {\n  douglasPeucker,\n  douglasPeuckerArray,\n  quantizeArray,\n} from '../geom/flat/simplify.js';\nimport {transform2D} from '../geom/flat/transform.js';\nimport {\n  LineString,\n  MultiLineString,\n  MultiPoint,\n  MultiPolygon,\n  Point,\n  Polygon,\n} from '../geom.js';\nimport {get as getProjection} from '../proj.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'` or 'MultiLineString'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * Lightweight, read-only, {@link module:ol/Feature~Feature} and {@link module:ol/geom/Geometry~Geometry} like\n * structure, optimized for vector tile rendering and styling. Geometry access\n * through the API is limited to getting the type and extent of the geometry.\n */\nclass RenderFeature {\n  /**\n   * @param {Type} type Geometry type.\n   * @param {Array<number>} flatCoordinates Flat coordinates. These always need\n   *     to be right-handed for polygons.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Object<string, *>} properties Properties.\n   * @param {number|string|undefined} id Feature id.\n   */\n  constructor(type, flatCoordinates, ends, stride, properties, id) {\n    /**\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent|undefined}\n     */\n    this.extent_;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = id;\n\n    /**\n     * @private\n     * @type {Type}\n     */\n    this.type_ = type;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatCoordinates_ = flatCoordinates;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatMidpoints_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.ends_ = ends || null;\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.properties_ = properties;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.stride_ = stride;\n\n    /**\n     * @private\n     * @type {RenderFeature}\n     */\n    this.simplifiedGeometry_;\n  }\n\n  /**\n   * Get a feature property by its key.\n   * @param {string} key Key\n   * @return {*} Value for the requested key.\n   * @api\n   */\n  get(key) {\n    return this.properties_[key];\n  }\n\n  /**\n   * Get the extent of this feature's geometry.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    if (!this.extent_) {\n      this.extent_ =\n        this.type_ === 'Point'\n          ? createOrUpdateFromCoordinate(this.flatCoordinates_)\n          : createOrUpdateFromFlatCoordinates(\n              this.flatCoordinates_,\n              0,\n              this.flatCoordinates_.length,\n              2,\n            );\n    }\n    return this.extent_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoint() {\n    if (!this.flatInteriorPoints_) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoints_ = getInteriorPointOfArray(\n        this.flatCoordinates_,\n        0,\n        this.ends_,\n        2,\n        flatCenter,\n        0,\n      );\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (!this.flatInteriorPoints_) {\n      const ends = inflateEnds(this.flatCoordinates_, this.ends_);\n      const flatCenters = linearRingssCenter(this.flatCoordinates_, 0, ends, 2);\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.flatCoordinates_,\n        0,\n        ends,\n        2,\n        flatCenters,\n      );\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (!this.flatMidpoints_) {\n      this.flatMidpoints_ = interpolatePoint(\n        this.flatCoordinates_,\n        0,\n        this.flatCoordinates_.length,\n        2,\n        0.5,\n      );\n    }\n    return this.flatMidpoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    if (!this.flatMidpoints_) {\n      this.flatMidpoints_ = [];\n      const flatCoordinates = this.flatCoordinates_;\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (this.ends_);\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        const end = ends[i];\n        const midpoint = interpolatePoint(flatCoordinates, offset, end, 2, 0.5);\n        extend(this.flatMidpoints_, midpoint);\n        offset = end;\n      }\n    }\n    return this.flatMidpoints_;\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is set when reading data from a remote source.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    return this.flatCoordinates_;\n  }\n\n  /**\n   * For API compatibility with {@link module:ol/Feature~Feature}, this method is useful when\n   * determining the geometry type in style function (see {@link #getType}).\n   * @return {RenderFeature} Feature.\n   * @api\n   */\n  getGeometry() {\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {RenderFeature} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {RenderFeature} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this;\n  }\n\n  /**\n   * Get the feature properties.\n   * @return {Object<string, *>} Feature properties.\n   * @api\n   */\n  getProperties() {\n    return this.properties_;\n  }\n\n  /**\n   * Get an object of all property names and values.  This has the same behavior as getProperties,\n   * but is here to conform with the {@link module:ol/Feature~Feature} interface.\n   * @return {Object<string, *>?} Object.\n   */\n  getPropertiesInternal() {\n    return this.properties_;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride_;\n  }\n\n  /**\n   * @return {import('../style/Style.js').StyleFunction|undefined} Style\n   */\n  getStyleFunction() {\n    return this.styleFunction;\n  }\n\n  /**\n   * Get the type of this feature's geometry.\n   * @return {Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return this.type_;\n  }\n\n  /**\n   * Transform geometry coordinates from tile pixel space to projected.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection The data projection\n   */\n  transform(projection) {\n    projection = getProjection(projection);\n    const pixelExtent = projection.getExtent();\n    const projectedExtent = projection.getWorldExtent();\n    if (pixelExtent && projectedExtent) {\n      const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n      composeTransform(\n        tmpTransform,\n        projectedExtent[0],\n        projectedExtent[3],\n        scale,\n        -scale,\n        0,\n        0,\n        0,\n      );\n      transform2D(\n        this.flatCoordinates_,\n        0,\n        this.flatCoordinates_.length,\n        2,\n        tmpTransform,\n        this.flatCoordinates_,\n      );\n    }\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   */\n  applyTransform(transformFn) {\n    transformFn(this.flatCoordinates_, this.flatCoordinates_, this.stride_);\n  }\n\n  /**\n   * @return {RenderFeature} A cloned render feature.\n   */\n  clone() {\n    return new RenderFeature(\n      this.type_,\n      this.flatCoordinates_.slice(),\n      this.ends_?.slice(),\n      this.stride_,\n      Object.assign({}, this.properties_),\n      this.id_,\n    );\n  }\n\n  /**\n   * @return {Array<number>|null} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Add transform and resolution based geometry simplification to this instance.\n   * @return {RenderFeature} This render feature.\n   */\n  enableSimplifyTransformed() {\n    this.simplifyTransformed = memoizeOne((squaredTolerance, transform) => {\n      if (squaredTolerance === this.squaredTolerance_) {\n        return this.simplifiedGeometry_;\n      }\n      this.simplifiedGeometry_ = this.clone();\n      if (transform) {\n        this.simplifiedGeometry_.applyTransform(transform);\n      }\n      const simplifiedFlatCoordinates =\n        this.simplifiedGeometry_.getFlatCoordinates();\n      let simplifiedEnds;\n      switch (this.type_) {\n        case 'LineString':\n          simplifiedFlatCoordinates.length = douglasPeucker(\n            simplifiedFlatCoordinates,\n            0,\n            this.simplifiedGeometry_.flatCoordinates_.length,\n            this.simplifiedGeometry_.stride_,\n            squaredTolerance,\n            simplifiedFlatCoordinates,\n            0,\n          );\n          simplifiedEnds = [simplifiedFlatCoordinates.length];\n          break;\n        case 'MultiLineString':\n          simplifiedEnds = [];\n          simplifiedFlatCoordinates.length = douglasPeuckerArray(\n            simplifiedFlatCoordinates,\n            0,\n            this.simplifiedGeometry_.ends_,\n            this.simplifiedGeometry_.stride_,\n            squaredTolerance,\n            simplifiedFlatCoordinates,\n            0,\n            simplifiedEnds,\n          );\n          break;\n        case 'Polygon':\n          simplifiedEnds = [];\n          simplifiedFlatCoordinates.length = quantizeArray(\n            simplifiedFlatCoordinates,\n            0,\n            this.simplifiedGeometry_.ends_,\n            this.simplifiedGeometry_.stride_,\n            Math.sqrt(squaredTolerance),\n            simplifiedFlatCoordinates,\n            0,\n            simplifiedEnds,\n          );\n          break;\n        default:\n      }\n      if (simplifiedEnds) {\n        this.simplifiedGeometry_ = new RenderFeature(\n          this.type_,\n          simplifiedFlatCoordinates,\n          simplifiedEnds,\n          2,\n          this.properties_,\n          this.id_,\n        );\n      }\n      this.squaredTolerance_ = squaredTolerance;\n      return this.simplifiedGeometry_;\n    });\n    return this;\n  }\n}\n\n/**\n * @return {Array<number>} Flat coordinates.\n */\nRenderFeature.prototype.getFlatCoordinates =\n  RenderFeature.prototype.getOrientedFlatCoordinates;\n\n/**\n * Create a geometry from an `ol/render/Feature`\n * @param {RenderFeature} renderFeature\n * Render Feature\n * @return {Point|MultiPoint|LineString|MultiLineString|Polygon|MultiPolygon}\n * New geometry instance.\n * @api\n */\nexport function toGeometry(renderFeature) {\n  const geometryType = renderFeature.getType();\n  switch (geometryType) {\n    case 'Point':\n      return new Point(renderFeature.getFlatCoordinates());\n    case 'MultiPoint':\n      return new MultiPoint(renderFeature.getFlatCoordinates(), 'XY');\n    case 'LineString':\n      return new LineString(renderFeature.getFlatCoordinates(), 'XY');\n    case 'MultiLineString':\n      return new MultiLineString(\n        renderFeature.getFlatCoordinates(),\n        'XY',\n        /** @type {Array<number>} */ (renderFeature.getEnds()),\n      );\n    case 'Polygon':\n      const flatCoordinates = renderFeature.getFlatCoordinates();\n      const ends = renderFeature.getEnds();\n      const endss = inflateEnds(flatCoordinates, ends);\n      return endss.length > 1\n        ? new MultiPolygon(flatCoordinates, 'XY', endss)\n        : new Polygon(flatCoordinates, 'XY', ends);\n    default:\n      throw new Error('Invalid geometry type:' + geometryType);\n  }\n}\n\n/**\n * Create an `ol/Feature` from an `ol/render/Feature`\n * @param {RenderFeature} renderFeature RenderFeature\n * @param {string} [geometryName] Geometry name to use\n * when creating the Feature.\n * @return {Feature} Newly constructed `ol/Feature` with properties,\n * geometry, and id copied over.\n * @api\n */\nexport function toFeature(renderFeature, geometryName) {\n  const id = renderFeature.getId();\n  const geometry = toGeometry(renderFeature);\n  const properties = renderFeature.getProperties();\n  const feature = new Feature();\n  if (geometryName !== undefined) {\n    feature.setGeometryName(geometryName);\n  }\n  feature.setGeometry(geometry);\n  if (id !== undefined) {\n    feature.setId(id);\n  }\n  feature.setProperties(properties, true);\n  return feature;\n}\n\nexport default RenderFeature;\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.includes('firefox');\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.includes('safari') && !ua.includes('chrom');\n\n/**\n * https://bugs.webkit.org/show_bug.cgi?id=237906\n * @type {boolean}\n */\nexport const SAFARI_BUG_237906 =\n  SAFARI &&\n  (ua.includes('version/15.4') ||\n    /cpu (os|iphone os) 15_4 like mac os x/.test(ua));\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.includes('webkit') && !ua.includes('edge');\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.includes('macintosh');\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * createImageBitmap() is supported.\n * @type {boolean}\n */\nexport const CREATE_IMAGE_BITMAP = typeof createImageBitmap === 'function';\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    // @ts-ignore Ignore invalid event type '_'\n    window.addEventListener('_', null, options);\n    // @ts-ignore Ignore invalid event type '_'\n    window.removeEventListener('_', null, options);\n  } catch {\n    // passive not supported\n  }\n  return passive;\n})();\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [width] Canvas width.\n * @param {number} [height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [settings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(width, height, canvasPool, settings) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (canvasPool && canvasPool.length) {\n    canvas = /** @type {HTMLCanvasElement} */ (canvasPool.shift());\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(width || 300, height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n  }\n  if (width) {\n    canvas.width = width;\n  }\n  if (height) {\n    canvas.height = height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (\n    canvas.getContext('2d', settings)\n  );\n}\n\n/** @type {CanvasRenderingContext2D} */\nlet sharedCanvasContext;\n\n/**\n * @return {CanvasRenderingContext2D} Shared canvas context.\n */\nexport function getSharedCanvasContext2D() {\n  if (!sharedCanvasContext) {\n    sharedCanvasContext = createCanvasContext2D(1, 1);\n  }\n  return sharedCanvasContext;\n}\n\n/**\n * Releases canvas memory to avoid exceeding memory limits in Safari.\n * See https://pqina.nl/blog/total-canvas-memory-use-exceeds-the-maximum-limit/\n * @param {CanvasRenderingContext2D} context Context.\n */\nexport function releaseCanvas(context) {\n  const canvas = context.canvas;\n  canvas.width = 1;\n  canvas.height = 1;\n  context.clearRect(0, 0, 1, 1);\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.lastChild.remove();\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/color\n */\nimport {createCanvasContext2D} from './dom.js';\nimport {clamp, toFixed} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * Color to indicate that no color should be rendered. This is meant to be used for per-reference\n * comparisons only.\n * @type {Color}\n */\nexport const NO_COLOR = [NaN, NaN, NaN, 0];\n\nlet colorParseContext;\n/**\n * @return {CanvasRenderingContext2D} The color parse context\n */\nfunction getColorParseContext() {\n  if (!colorParseContext) {\n    colorParseContext = createCanvasContext2D(1, 1, undefined, {\n      willReadFrequently: true,\n      desynchronized: true,\n    });\n  }\n  return colorParseContext;\n}\n\nconst rgbModernRegEx =\n  /^rgba?\\(\\s*(\\d+%?)\\s+(\\d+%?)\\s+(\\d+%?)(?:\\s*\\/\\s*(\\d+%|\\d*\\.\\d+|[01]))?\\s*\\)$/i;\nconst rgbLegacyAbsoluteRegEx =\n  /^rgba?\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)(?:\\s*,\\s*(\\d+%|\\d*\\.\\d+|[01]))?\\s*\\)$/i;\nconst rgbLegacyPercentageRegEx =\n  /^rgba?\\(\\s*(\\d+%)\\s*,\\s*(\\d+%)\\s*,\\s*(\\d+%)(?:\\s*,\\s*(\\d+%|\\d*\\.\\d+|[01]))?\\s*\\)$/i;\nconst hexRegEx = /^#([\\da-f]{3,4}|[\\da-f]{6}|[\\da-f]{8})$/i;\n\n/**\n * @param {string} s Color component as number or percentage.\n * @param {number} divider Divider for percentage.\n * @return {number} Color component.\n */\nfunction toColorComponent(s, divider) {\n  return s.endsWith('%')\n    ? Number(s.substring(0, s.length - 1)) / divider\n    : Number(s);\n}\n\n/**\n * @param {string} color Color string.\n */\nfunction throwInvalidColor(color) {\n  throw new Error('failed to parse \"' + color + '\" as color');\n}\n\n/**\n * @param {string} color Color string.\n * @return {Color} RGBa color array.\n */\nfunction parseRgba(color) {\n  // Fast lane for rgb(a) colors\n  if (color.toLowerCase().startsWith('rgb')) {\n    const rgb =\n      color.match(rgbLegacyAbsoluteRegEx) ||\n      color.match(rgbModernRegEx) ||\n      color.match(rgbLegacyPercentageRegEx);\n    if (rgb) {\n      const alpha = rgb[4];\n      const rgbDivider = 100 / 255;\n      return [\n        clamp((toColorComponent(rgb[1], rgbDivider) + 0.5) | 0, 0, 255),\n        clamp((toColorComponent(rgb[2], rgbDivider) + 0.5) | 0, 0, 255),\n        clamp((toColorComponent(rgb[3], rgbDivider) + 0.5) | 0, 0, 255),\n        alpha !== undefined ? clamp(toColorComponent(alpha, 100), 0, 1) : 1,\n      ];\n    }\n    throwInvalidColor(color);\n  }\n  // Fast lane for hex colors (also with alpha)\n  if (color.startsWith('#')) {\n    if (hexRegEx.test(color)) {\n      const hex = color.substring(1);\n      const step = hex.length <= 4 ? 1 : 2;\n      const colorFromHex = [0, 0, 0, 255];\n      for (let i = 0, ii = hex.length; i < ii; i += step) {\n        let colorComponent = parseInt(hex.substring(i, i + step), 16);\n        if (step === 1) {\n          colorComponent += colorComponent << 4;\n        }\n        colorFromHex[i / step] = colorComponent;\n      }\n      colorFromHex[3] = colorFromHex[3] / 255;\n      return colorFromHex;\n    }\n    throwInvalidColor(color);\n  }\n  // Use canvas color serialization to parse the color into hex or rgba\n  // See https://www.w3.org/TR/2021/SPSD-2dcontext-20210128/#serialization-of-a-color\n  const context = getColorParseContext();\n  context.fillStyle = '#abcdef';\n  let invalidCheckFillStyle = context.fillStyle;\n  context.fillStyle = color;\n  if (context.fillStyle === invalidCheckFillStyle) {\n    context.fillStyle = '#fedcba';\n    invalidCheckFillStyle = context.fillStyle;\n    context.fillStyle = color;\n    if (context.fillStyle === invalidCheckFillStyle) {\n      throwInvalidColor(color);\n    }\n  }\n  const colorString = context.fillStyle;\n  if (colorString.startsWith('#') || colorString.startsWith('rgba')) {\n    return parseRgba(colorString);\n  }\n  context.clearRect(0, 0, 1, 1);\n  context.fillRect(0, 0, 1, 1);\n  const colorFromImage = Array.from(context.getImageData(0, 0, 1, 1).data);\n  colorFromImage[3] = toFixed(colorFromImage[3] / 255, 3);\n  return colorFromImage;\n}\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  }\n  return toString(color);\n}\n\n/**\n * @type {number}\n */\nconst MAX_CACHE_SIZE = 1024;\n\n/**\n * We maintain a small cache of parsed strings.  Whenever the cache grows too large,\n * we delete an arbitrary set of the entries.\n *\n * @type {Object<string, Color>}\n */\nconst cache = {};\n\n/**\n * @type {number}\n */\nlet cacheSize = 0;\n\n/**\n * @param {Color} color A color that may or may not have an alpha channel.\n * @return {Color} The input color with an alpha channel.  If the input color has\n * an alpha channel, the input color will be returned unchanged.  Otherwise, a new\n * array will be returned with the input color and an alpha channel of 1.\n */\nexport function withAlpha(color) {\n  if (color.length === 4) {\n    return color;\n  }\n  const output = color.slice();\n  output[3] = 1;\n  return output;\n}\n\n// The functions b1, b2, a1, a2, rgbaToLcha and lchaToRgba below are adapted from\n// https://stackoverflow.com/a/67219995/2389327\n\n/**\n * @param {number} v Input value.\n * @return {number} Output value.\n */\nfunction b1(v) {\n  return v > 0.0031308 ? Math.pow(v, 1 / 2.4) * 269.025 - 14.025 : v * 3294.6;\n}\n\n/**\n * @param {number} v Input value.\n * @return {number} Output value.\n */\nfunction b2(v) {\n  return v > 0.2068965 ? Math.pow(v, 3) : (v - 4 / 29) * (108 / 841);\n}\n\n/**\n * @param {number} v Input value.\n * @return {number} Output value.\n */\nfunction a1(v) {\n  return v > 10.314724 ? Math.pow((v + 14.025) / 269.025, 2.4) : v / 3294.6;\n}\n\n/**\n * @param {number} v Input value.\n * @return {number} Output value.\n */\nfunction a2(v) {\n  return v > 0.0088564 ? Math.pow(v, 1 / 3) : v / (108 / 841) + 4 / 29;\n}\n\n/**\n * @param {Color} color RGBA color.\n * @return {Color} LCHuv color with alpha.\n */\nexport function rgbaToLcha(color) {\n  const r = a1(color[0]);\n  const g = a1(color[1]);\n  const b = a1(color[2]);\n  const y = a2(r * 0.222488403 + g * 0.716873169 + b * 0.06060791);\n  const l = 500 * (a2(r * 0.452247074 + g * 0.399439023 + b * 0.148375274) - y);\n  const q = 200 * (y - a2(r * 0.016863605 + g * 0.117638439 + b * 0.865350722));\n  const h = Math.atan2(q, l) * (180 / Math.PI);\n  return [\n    116 * y - 16,\n    Math.sqrt(l * l + q * q),\n    h < 0 ? h + 360 : h,\n    color[3],\n  ];\n}\n\n/**\n * @param {Color} color LCHuv color with alpha.\n * @return {Color} RGBA color.\n */\nexport function lchaToRgba(color) {\n  const l = (color[0] + 16) / 116;\n  const c = color[1];\n  const h = (color[2] * Math.PI) / 180;\n  const y = b2(l);\n  const x = b2(l + (c / 500) * Math.cos(h));\n  const z = b2(l - (c / 200) * Math.sin(h));\n  const r = b1(x * 3.021973625 - y * 1.617392459 - z * 0.404875592);\n  const g = b1(x * -0.943766287 + y * 1.916279586 + z * 0.027607165);\n  const b = b1(x * 0.069407491 - y * 0.22898585 + z * 1.159737864);\n  return [\n    clamp((r + 0.5) | 0, 0, 255),\n    clamp((g + 0.5) | 0, 0, 255),\n    clamp((b + 0.5) | 0, 0, 255),\n    color[3],\n  ];\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport function fromString(s) {\n  if (s === 'none') {\n    return NO_COLOR;\n  }\n  if (cache.hasOwnProperty(s)) {\n    return cache[s];\n  }\n  if (cacheSize >= MAX_CACHE_SIZE) {\n    let i = 0;\n    for (const key in cache) {\n      if ((i++ & 3) === 0) {\n        delete cache[key];\n        --cacheSize;\n      }\n    }\n  }\n\n  const color = parseRgba(s);\n  if (color.length !== 4) {\n    throwInvalidColor(s);\n  }\n  for (const c of color) {\n    if (isNaN(c)) {\n      throwInvalidColor(s);\n    }\n  }\n  cache[s] = color;\n  ++cacheSize;\n  return color;\n}\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  }\n  return fromString(color);\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : Math.round(color[3] * 1000) / 1000;\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  try {\n    fromString(s);\n    return true;\n  } catch {\n    return false;\n  }\n}\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/obj\n */\n\n/**\n * Removes all properties from an object.\n * @param {Object<string, unknown>} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\nimport Event from './Event.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [target] Default event target for dispatched events.\n   */\n  constructor(target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = target;\n\n    /**\n     * @private\n     * @type {Object<string, number>|null}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>|null}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>|null}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (!listenersForType.includes(listener)) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    const isString = typeof event === 'string';\n    const type = isString ? event : event.type;\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n\n    const evt = isString ? new Event(event) : /** @type {Event} */ (event);\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const dispatching = this.dispatching_ || (this.dispatching_ = {});\n    const pendingRemovals =\n      this.pendingRemovals_ || (this.pendingRemovals_ = {});\n    if (!(type in dispatching)) {\n      dispatching[type] = 0;\n      pendingRemovals[type] = 0;\n    }\n    ++dispatching[type];\n    let propagate;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      if ('handleEvent' in listeners[i]) {\n        propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n          listeners[i]\n        ).handleEvent(evt);\n      } else {\n        propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n          listeners[i]\n        ).call(this, evt);\n      }\n      if (propagate === false || evt.propagationStopped) {\n        propagate = false;\n        break;\n      }\n    }\n    if (--dispatching[type] === 0) {\n      let pr = pendingRemovals[type];\n      delete pendingRemovals[type];\n      while (pr--) {\n        this.removeEventListener(type, VOID);\n      }\n      delete dispatching[type];\n    }\n    return propagate;\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return type\n      ? type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    if (!this.listeners_) {\n      return;\n    }\n    const listeners = this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n      if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n        // make listener a no-op, and remove later in #dispatchEvent()\n        listeners[index] = VOID;\n        ++this.pendingRemovals_[type];\n      } else {\n        listeners.splice(index, 1);\n        if (listeners.length === 0) {\n          delete this.listeners_[type];\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable.unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, thisArg, once) {\n  if (once) {\n    const originalListener = listener;\n    /**\n     * @param {Event|import('./events/Event.js').default} event The event\n     * @return {void|boolean} When the function returns `false`, event propagation will stop.\n     * @this {typeof target}\n     */\n    listener = function (event) {\n      target.removeEventListener(type, listener);\n      return originalListener.call(thisArg ?? this, event);\n    };\n  } else if (thisArg && thisArg !== target) {\n    listener = listener.bind(thisArg);\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, thisArg) {\n  return listen(target, type, listener, thisArg, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/Image\n */\nimport ImageState from './ImageState.js';\nimport EventType from './events/EventType.js';\nimport EventTarget from './events/Target.js';\nimport {listenOnce, unlistenByKey} from './events.js';\nimport {toPromise} from './functions.js';\nimport {CREATE_IMAGE_BITMAP, IMAGE_DECODE} from './has.js';\n\n/**\n * A function that takes an {@link module:ol/Image~ImageWrapper} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~ImageWrapper#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(import(\"./Image.js\").default, string): void} LoadFunction\n * @api\n */\n\n/**\n * @typedef {Object} ImageObject\n * @property {import(\"./extent.js\").Extent} [extent] Extent, if different from the requested one.\n * @property {import(\"./resolution.js\").ResolutionLike} [resolution] Resolution, if different from the requested one.\n * When x and y resolution are different, use the array type (`[xResolution, yResolution]`).\n * @property {number} [pixelRatio] Pixel ratio, if different from the requested one.\n * @property {import('./DataTile.js').ImageLike} image Image.\n */\n\n/**\n * Loader function used for image sources. Receives extent, resolution and pixel ratio as arguments.\n * For images that cover any extent and resolution (static images), the loader function should not accept\n * any arguments. The function returns an {@link import(\"./DataTile.js\").ImageLike image}, an\n * {@link import(\"./Image.js\").ImageObject image object}, or a promise for the same.\n * For loaders that generate images, the promise should not resolve until the image is loaded.\n * If the returned image does not match the extent, resolution or pixel ratio passed to the loader,\n * it has to return an {@link import(\"./Image.js\").ImageObject image object} with the `image` and the\n * correct `extent`, `resolution` and `pixelRatio`.\n *\n * @typedef {function(import(\"./extent.js\").Extent, number, number, (function(HTMLImageElement, string): void)=): import(\"./DataTile.js\").ImageLike|ImageObject|Promise<import(\"./DataTile.js\").ImageLike|ImageObject>} Loader\n * @api\n */\n\n/**\n * Loader function used for image sources. Receives extent, resolution and pixel ratio as arguments.\n * The function returns a promise for an  {@link import(\"./Image.js\").ImageObject image object}.\n *\n * @typedef {function(import(\"./extent.js\").Extent, number, number, (function(HTMLImageElement, string): void)=): Promise<import(\"./DataTile.js\").ImageLike|ImageObject>} ImageObjectPromiseLoader\n */\n\nclass ImageWrapper extends EventTarget {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|Array<number>|undefined} resolution Resolution. If provided as array, x and y\n   * resolution will be assumed.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./ImageState.js\").default|Loader} stateOrLoader State.\n   */\n  constructor(extent, resolution, pixelRatio, stateOrLoader) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|Array<number>|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state =\n      typeof stateOrLoader === 'function' ? ImageState.IDLE : stateOrLoader;\n\n    /**\n     * @private\n     * @type {import('./DataTile.js').ImageLike|null}\n     */\n    this.image_ = null;\n\n    /**\n     * @protected\n     * @type {Loader|null}\n     */\n    this.loader = typeof stateOrLoader === 'function' ? stateOrLoader : null;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @return {import('./DataTile.js').ImageLike} Image.\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number|Array<number>} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */ (this.resolution);\n  }\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      if (this.loader) {\n        this.state = ImageState.LOADING;\n        this.changed();\n        const resolution = this.getResolution();\n        const requestResolution = Array.isArray(resolution)\n          ? resolution[0]\n          : resolution;\n        toPromise(() =>\n          this.loader(\n            this.getExtent(),\n            requestResolution,\n            this.getPixelRatio(),\n          ),\n        )\n          .then((image) => {\n            if ('image' in image) {\n              this.image_ = image.image;\n            }\n            if ('extent' in image) {\n              this.extent = image.extent;\n            }\n            if ('resolution' in image) {\n              this.resolution = image.resolution;\n            }\n            if ('pixelRatio' in image) {\n              this.pixelRatio_ = image.pixelRatio;\n            }\n            if (\n              image instanceof HTMLImageElement ||\n              (CREATE_IMAGE_BITMAP && image instanceof ImageBitmap) ||\n              image instanceof HTMLCanvasElement ||\n              image instanceof HTMLVideoElement\n            ) {\n              this.image_ = image;\n            }\n            this.state = ImageState.LOADED;\n          })\n          .catch((error) => {\n            this.state = ImageState.ERROR;\n            console.error(error); // eslint-disable-line no-console\n          })\n          .finally(() => this.changed());\n      }\n    }\n  }\n\n  /**\n   * @param {import('./DataTile.js').ImageLike} image The image.\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * @param {number|Array<number>} resolution Resolution.\n   */\n  setResolution(resolution) {\n    this.resolution = resolution;\n  }\n}\n\n/**\n * @param {import('./DataTile.js').ImageLike} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n  let listening = true;\n  let decoding = false;\n  let loaded = false;\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, function () {\n      loaded = true;\n      if (!decoding) {\n        loadHandler();\n      }\n    }),\n  ];\n\n  if (img.src && IMAGE_DECODE) {\n    decoding = true;\n    img\n      .decode()\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          if (loaded) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n  } else {\n    listenerKeys.push(listenOnce(img, EventType.ERROR, errorHandler));\n  }\n\n  return function unlisten() {\n    listening = false;\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\n/**\n * Loads an image.\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<HTMLImageElement>} Promise resolving to an `HTMLImageElement`.\n * @api\n */\nexport function load(image, src) {\n  return new Promise((resolve, reject) => {\n    function handleLoad() {\n      unlisten();\n      resolve(image);\n    }\n    function handleError() {\n      unlisten();\n      reject(new Error('Image load error'));\n    }\n    function unlisten() {\n      image.removeEventListener('load', handleLoad);\n      image.removeEventListener('error', handleError);\n    }\n    image.addEventListener('load', handleLoad);\n    image.addEventListener('error', handleError);\n    if (src) {\n      image.src = src;\n    }\n  });\n}\n\n/**\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<HTMLImageElement>} Promise resolving to an `HTMLImageElement`.\n */\nexport function decodeFallback(image, src) {\n  if (src) {\n    image.src = src;\n  }\n  return image.src && IMAGE_DECODE\n    ? new Promise((resolve, reject) =>\n        image\n          .decode()\n          .then(() => resolve(image))\n          .catch((e) =>\n            image.complete && image.width ? resolve(image) : reject(e),\n          ),\n      )\n    : load(image);\n}\n\n/**\n * Loads an image and decodes it to an `ImageBitmap` if `createImageBitmap()` is supported. Returns\n * the loaded image otherwise.\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<ImageBitmap|HTMLImageElement>} Promise resolving to an `ImageBitmap` or an\n * `HTMLImageElement` if `createImageBitmap()` is not supported.\n * @api\n */\nexport function decode(image, src) {\n  if (src) {\n    image.src = src;\n  }\n  return image.src && IMAGE_DECODE && CREATE_IMAGE_BITMAP\n    ? image\n        .decode()\n        .then(() => createImageBitmap(image))\n        .catch((e) => {\n          if (image.complete && image.width) {\n            return image;\n          }\n          throw e;\n        })\n    : decodeFallback(image);\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/style/IconImageCache\n */\nimport ImageState from '../ImageState.js';\nimport {asArray} from '../color.js';\nimport {getSharedCanvasContext2D} from '../dom.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache.shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {!Object<string, CanvasPattern>}\n     * @private\n     */\n    this.patternCache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 1024;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.patternCache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          delete this.patternCache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getCacheKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @return {CanvasPattern} Icon image.\n   */\n  getPattern(src, crossOrigin, color) {\n    const key = getCacheKey(src, crossOrigin, color);\n    return key in this.patternCache_ ? this.patternCache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @param {import(\"./IconImage.js\").default|null} iconImage Icon image.\n   * @param {boolean} [pattern] Also cache a `'repeat'` pattern with this `iconImage`.\n   */\n  set(src, crossOrigin, color, iconImage, pattern) {\n    const key = getCacheKey(src, crossOrigin, color);\n    const update = key in this.cache_;\n    this.cache_[key] = iconImage;\n    if (pattern) {\n      if (iconImage.getImageState() === ImageState.IDLE) {\n        iconImage.load();\n      }\n      if (iconImage.getImageState() === ImageState.LOADING) {\n        iconImage.ready().then(() => {\n          this.patternCache_[key] = getSharedCanvasContext2D().createPattern(\n            iconImage.getImage(1),\n            'repeat',\n          );\n        });\n      } else {\n        this.patternCache_[key] = getSharedCanvasContext2D().createPattern(\n          iconImage.getImage(1),\n          'repeat',\n        );\n      }\n    }\n    if (!update) {\n      ++this.cacheSize_;\n    }\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `1024`. Change this value when\n   * your map uses more than 1024 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color|string|null} color Color.\n * @return {string} Cache key.\n */\nexport function getCacheKey(src, crossOrigin, color) {\n  const colorString = color ? asArray(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/style/IconImage\n */\n\nimport {decodeFallback} from '../Image.js';\nimport ImageState from '../ImageState.js';\nimport {asString} from '../color.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport EventType from '../events/EventType.js';\nimport EventTarget from '../events/Target.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement|ImageBitmap|null} image Image.\n   * @param {string|undefined} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default|undefined} imageState Image state.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   */\n  constructor(image, src, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement|ImageBitmap}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement|ImageBitmap|null}\n     */\n    this.image_ = image;\n\n    /**\n     * @private\n     * @type {string|null}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|string|null}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState === undefined ? ImageState.IDLE : imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size|null}\n     */\n    this.size_ =\n      image && image.width && image.height ? [image.width, image.height] : null;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n\n    /**\n     * @private\n     * @type {Promise<void>|null}\n     */\n    this.ready_ = null;\n  }\n\n  /**\n   * @private\n   */\n  initializeImage_() {\n    this.image_ = new Image();\n    if (this.crossOrigin_ !== null) {\n      this.image_.crossOrigin = this.crossOrigin_;\n    }\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1, undefined, {\n          willReadFrequently: true,\n        });\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    this.size_ = [this.image_.width, this.image_.height];\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image or Canvas element or image bitmap.\n   */\n  getImage(pixelRatio) {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ !== ImageState.IDLE) {\n      return;\n    }\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n\n    this.imageState_ = ImageState.LOADING;\n    try {\n      if (this.src_ !== undefined) {\n        /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n      }\n    } catch {\n      this.handleImageError_();\n    }\n    if (this.image_ instanceof HTMLImageElement) {\n      decodeFallback(this.image_, this.src_)\n        .then((image) => {\n          this.image_ = image;\n          this.handleImageLoad_();\n        })\n        .catch(this.handleImageError_.bind(this));\n    }\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (\n      !this.color_ ||\n      this.canvas_[pixelRatio] ||\n      this.imageState_ !== ImageState.LOADED\n    ) {\n      return;\n    }\n\n    const image = this.image_;\n    const ctx = createCanvasContext2D(\n      Math.ceil(image.width * pixelRatio),\n      Math.ceil(image.height * pixelRatio),\n    );\n    const canvas = ctx.canvas;\n\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(image, 0, 0);\n\n    ctx.globalCompositeOperation = 'multiply';\n    ctx.fillStyle = asString(this.color_);\n    ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\n\n    ctx.globalCompositeOperation = 'destination-in';\n    ctx.drawImage(image, 0, 0);\n\n    this.canvas_[pixelRatio] = canvas;\n  }\n\n  /**\n   * @return {Promise<void>} Promise that resolves when the image is loaded.\n   */\n  ready() {\n    if (!this.ready_) {\n      this.ready_ = new Promise((resolve) => {\n        if (\n          this.imageState_ === ImageState.LOADED ||\n          this.imageState_ === ImageState.ERROR\n        ) {\n          resolve();\n        } else {\n          const onChange = () => {\n            if (\n              this.imageState_ === ImageState.LOADED ||\n              this.imageState_ === ImageState.ERROR\n            ) {\n              this.removeEventListener(EventType.CHANGE, onChange);\n              resolve();\n            }\n          };\n          this.addEventListener(EventType.CHANGE, onChange);\n        }\n      });\n    }\n    return this.ready_;\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement|ImageBitmap|null} image Image.\n * @param {string|undefined} cacheKey Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default|undefined} imageState Image state.\n * @param {import(\"../color.js\").Color|string|null} color Color.\n * @param {boolean} [pattern] Also cache a `repeat` pattern with the icon image.\n * @return {IconImage} Icon image.\n */\nexport function get(image, cacheKey, crossOrigin, imageState, color, pattern) {\n  let iconImage =\n    cacheKey === undefined\n      ? undefined\n      : iconImageCache.get(cacheKey, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(\n      image,\n      image && 'src' in image ? image.src || undefined : cacheKey,\n      crossOrigin,\n      imageState,\n      color,\n    );\n    iconImageCache.set(cacheKey, crossOrigin, color, iconImage, pattern);\n  }\n  if (\n    pattern &&\n    iconImage &&\n    !iconImageCache.getPattern(cacheKey, crossOrigin, color)\n  ) {\n    iconImageCache.set(cacheKey, crossOrigin, color, iconImage, pattern);\n  }\n  return iconImage;\n}\n\nexport default IconImage;\n","/**\n * @module ol/colorlike\n */\nimport ImageState from './ImageState.js';\nimport {toString} from './color.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {get as getIconImage} from './style/IconImage.js';\nimport {shared as iconCache} from './style/IconImageCache.js';\n\n/**\n * @typedef {Object} PatternDescriptor\n * @property {string} src Pattern image URL\n * @property {import(\"./color.js\").Color|string} [color] Color to tint the pattern with.\n * @property {import(\"./size.js\").Size} [size] Size of the desired slice from the pattern image.\n * Use this together with `offset` when the pattern image is a sprite sheet.\n * @property {import(\"./size.js\").Size} [offset] Offset of the desired slice from the pattern image.\n * Use this together with `size` when the pattern image is a sprite sheet.\n */\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, [CanvasPattern](https://developer.mozilla.org/en-US/docs/Web/API/CanvasPattern),\n * or [CanvasGradient](https://developer.mozilla.org/en-US/docs/Web/API/CanvasGradient). The origin for\n * patterns and gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike|PatternDescriptor|null} color Color.\n * @return {ColorLike|null} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (!color) {\n    return null;\n  }\n  if (Array.isArray(color)) {\n    return toString(color);\n  }\n  if (typeof color === 'object' && 'src' in color) {\n    return asCanvasPattern(color);\n  }\n  return color;\n}\n\n/**\n * @param {PatternDescriptor} pattern Pattern descriptor.\n * @return {CanvasPattern|null} Canvas pattern or null if the pattern referenced in the\n * PatternDescriptor was not found in the icon image cache.\n */\nfunction asCanvasPattern(pattern) {\n  if (!pattern.offset || !pattern.size) {\n    return iconCache.getPattern(pattern.src, 'anonymous', pattern.color);\n  }\n\n  const cacheKey = pattern.src + ':' + pattern.offset;\n\n  const canvasPattern = iconCache.getPattern(\n    cacheKey,\n    undefined,\n    pattern.color,\n  );\n  if (canvasPattern) {\n    return canvasPattern;\n  }\n\n  const iconImage = iconCache.get(pattern.src, 'anonymous', null);\n  if (iconImage.getImageState() !== ImageState.LOADED) {\n    return null;\n  }\n  const patternCanvasContext = createCanvasContext2D(\n    pattern.size[0],\n    pattern.size[1],\n  );\n  patternCanvasContext.drawImage(\n    iconImage.getImage(1),\n    pattern.offset[0],\n    pattern.offset[1],\n    pattern.size[0],\n    pattern.size[1],\n    0,\n    0,\n    pattern.size[0],\n    pattern.size[1],\n  );\n  getIconImage(\n    patternCanvasContext.canvas,\n    cacheKey,\n    undefined,\n    ImageState.LOADED,\n    pattern.color,\n    true,\n  );\n  return iconCache.getPattern(cacheKey, undefined, pattern.color);\n}\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n\n/**\n * @typedef {'propertychange'} Types\n */\n","/**\n * @module ol/Observable\n */\nimport EventType from './events/EventType.js';\nimport EventTarget from './events/Target.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type, listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return extends void ? void : Return[]} CombinedOnSignature\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/***\n * @template Return\n * @typedef {OnSignature<EventTypes, import(\"./events/Event.js\").default, Return> & CombinedOnSignature<EventTypes, Return>} ObservableOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    this.on =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onInternal\n      );\n\n    this.once =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onceInternal\n      );\n\n    this.un = /** @type {ObservableOnSignature<void>} */ (this.unInternal);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    }\n    return listen(this, /** @type {string} */ (type), listener);\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/util\n */\n\n/**\n * @return {never} Any return.\n */\nexport function abstract() {\n  throw new Error('Unimplemented abstract method.');\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = 'latest';\n","/**\n * @module ol/Object\n */\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport Event from './events/Event.js';\nimport {isEmpty} from './obj.js';\nimport {getUid} from './util.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable~Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [values] An object with key-value pairs.\n   */\n  constructor(values) {\n    super();\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ObjectOnSignature<void>}\n     */\n    this.un;\n\n    // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>|null}\n     */\n    this.values_ = null;\n\n    if (values !== undefined) {\n      this.setProperties(values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && Object.assign({}, this.values_)) || {};\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>?} Object.\n   */\n  getPropertiesInternal() {\n    return this.values_;\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = `change:${key}`;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  addChangeListener(key, listener) {\n    this.addEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  removeChangeListener(key, listener) {\n    this.removeEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, silent) {\n    for (const key in values) {\n      this.set(key, values[key], silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    Object.assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\nexport default BaseObject;\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n  ].join(''),\n  'i',\n);\n/** @type {Array<'style'|'variant'|'weight'|'size'|'lineHeight'|'family'>} */\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters|null} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport {getFontParameters} from '../css.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {'Circle' | 'Image' | 'LineString' | 'Polygon' | 'Text' | 'Default'} BuilderType\n */\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n * @property {number} [fillPatternScale] Fill pattern scale.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {CanvasTextAlign} [textAlign] TextAlign.\n * @property {number} [repeat] Repeat.\n * @property {import(\"../style/Text.js\").TextJustify} [justify] Justify.\n * @property {CanvasTextBaseline} textBaseline TextBaseline.\n * @property {import(\"../style/Text.js\").TextPlacement} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {CanvasTextAlign}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {CanvasTextBaseline}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text,\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text,\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        const [style, weight, family] = font.split('\\n');\n        if (isAvailable(style, weight, family)) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = text\n    .split('\\n')\n    .reduce((prev, curr) => Math.max(prev, measureTextWidth(font, curr)), 0);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {TextState} baseStyle Base style.\n * @param {Array<string>} chunks Text chunks to measure.\n * @return {{width: number, height: number, widths: Array<number>, heights: Array<number>, lineWidths: Array<number>}}} Text metrics.\n */\nexport function getTextDimensions(baseStyle, chunks) {\n  const widths = [];\n  const heights = [];\n  const lineWidths = [];\n  let width = 0;\n  let lineWidth = 0;\n  let height = 0;\n  let lineHeight = 0;\n  for (let i = 0, ii = chunks.length; i <= ii; i += 2) {\n    const text = chunks[i];\n    if (text === '\\n' || i === ii) {\n      width = Math.max(width, lineWidth);\n      lineWidths.push(lineWidth);\n      lineWidth = 0;\n      height += lineHeight;\n      lineHeight = 0;\n      continue;\n    }\n    const font = chunks[i + 1] || baseStyle.font;\n    const currentWidth = measureTextWidth(font, text);\n    widths.push(currentWidth);\n    lineWidth += currentWidth;\n    const currentHeight = measureTextHeight(font);\n    heights.push(currentHeight);\n    lineHeight = Math.max(lineHeight, currentHeight);\n  }\n  return {width, height, widths, heights, lineWidths};\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D|import(\"../render/canvas/ZIndexContext.js\").ZIndexContextProxy} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale,\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    if (context.globalAlpha === undefined) {\n      context.globalAlpha = (context) => (context.globalAlpha *= opacity);\n    } else {\n      context.globalAlpha *= opacity;\n    }\n  }\n  if (transform) {\n    context.transform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h,\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1],\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1],\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = size[0] + 2 * num;\n  dest[1] = size[1] + 2 * num;\n  return dest;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = (size[0] * ratio + 0.5) | 0;\n  dest[1] = (size[1] * ratio + 0.5) | 0;\n  return dest;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, dest) {\n  if (Array.isArray(size)) {\n    return size;\n  }\n  if (dest === undefined) {\n    dest = [size, size];\n  } else {\n    dest[0] = size;\n    dest[1] = size;\n  }\n  return dest;\n}\n","/**\n * @module ol/style/Image\n */\nimport {toSize} from '../size.js';\nimport {abstract} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n * @property {import('../style/Style.js').DeclutterMode} declutterMode Declutter mode: `declutter`, `obstacle`, `none`.\n */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.displacement_ = options.displacement;\n\n    /**\n     * @private\n     * @type {import('../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number|import(\"../size.js\").Size} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n  getDisplacement() {\n    return this.displacement_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {import(\"./Style.js\").DeclutterMode} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {import('../DataTile.js').ImageLike} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import('../DataTile.js').ImageLike} Image element.\n   */\n  getHitDetectionImage() {\n    return abstract();\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return 1;\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the displacement.\n   *\n   * @param {Array<number>} displacement Displacement.\n   * @api\n   */\n  setDisplacement(displacement) {\n    this.displacement_ = displacement;\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * @return {Promise<void>} `false` or Promise that resolves when the style is ready to use.\n   */\n  ready() {\n    return Promise.resolve();\n  }\n}\n\nexport default ImageStyle;\n","/**\n * @module ol/style/RegularShape\n */\n\nimport ImageState from '../ImageState.js';\nimport {asArray} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../render/canvas.js';\nimport IconImage from './IconImage.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\nimport ImageStyle from './Image.js';\n\n/**\n * Specify radius for regular polygons, or both radius and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} radius Radius of a regular polygon.\n * @property {number} [radius2] Second radius to make a star instead of a regular polygon.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's points facing up.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the shape in pixels.\n * Positive values will shift the shape right and up.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius` and `radius2`.\n * @property {import('./Style.js').DeclutterMode} [declutterMode] Declutter mode.\n */\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike|undefined} strokeStyle StrokeStyle.\n * @property {number} strokeWidth StrokeWidth.\n * @property {number} size Size.\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>|null} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} miterLimit MiterLimit.\n */\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when both `radius` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    super({\n      opacity: 1,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: options.scale !== undefined ? options.scale : 1,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|null}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius = options.radius;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_;\n\n    /**\n     * @private\n     * @type {RenderOptions}\n     */\n    this.renderOptions_;\n\n    /**\n     * @private\n     */\n    this.imageState_ =\n      this.fill_ && this.fill_.loading()\n        ? ImageState.LOADING\n        : ImageState.LOADED;\n    if (this.imageState_ === ImageState.LOADING) {\n      this.ready().then(() => (this.imageState_ = ImageState.LOADED));\n    }\n    this.render();\n  }\n\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   * @override\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   * @override\n   */\n  getAnchor() {\n    const size = this.size_;\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      size[0] / 2 - displacement[0] / scale[0],\n      size[1] / 2 + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n    this.render();\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image element.\n   * @override\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionCanvas_) {\n      this.hitDetectionCanvas_ = this.createHitDetectionCanvas_(\n        this.renderOptions_,\n      );\n    }\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement} Image or Canvas element.\n   * @api\n   * @override\n   */\n  getImage(pixelRatio) {\n    const fillKey = this.fill_?.getKey();\n    const cacheKey =\n      `${pixelRatio},${this.angle_},${this.radius},${this.radius2_},${this.points_},${fillKey}` +\n      Object.values(this.renderOptions_).join(',');\n    let image = /** @type {HTMLCanvasElement} */ (\n      iconImageCache.get(cacheKey, null, null)?.getImage(1)\n    );\n    if (!image) {\n      const renderOptions = this.renderOptions_;\n      const size = Math.ceil(renderOptions.size * pixelRatio);\n      const context = createCanvasContext2D(size, size);\n      this.draw_(renderOptions, context, pixelRatio);\n\n      image = context.canvas;\n      iconImageCache.set(\n        cacheKey,\n        null,\n        null,\n        new IconImage(image, undefined, null, ImageState.LOADED, null),\n      );\n    }\n    return image;\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   * @override\n   */\n  getPixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   * @override\n   */\n  getImageSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   * @override\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   * @override\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @return {import(\"../size.js\").Size} Size.\n   * @api\n   * @override\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n    this.render();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   * @override\n   */\n  listenImageChange(listener) {}\n\n  /**\n   * Load not yet loaded URI.\n   * @override\n   */\n  load() {}\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   * @override\n   */\n  unlistenImageChange(listener) {}\n\n  /**\n   * Calculate additional canvas size needed for the miter.\n   * @param {string} lineJoin Line join\n   * @param {number} strokeWidth Stroke width\n   * @param {number} miterLimit Miter limit\n   * @return {number} Additional canvas size needed\n   * @private\n   */\n  calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit) {\n    if (\n      strokeWidth === 0 ||\n      this.points_ === Infinity ||\n      (lineJoin !== 'bevel' && lineJoin !== 'miter')\n    ) {\n      return strokeWidth;\n    }\n    // m  | ^\n    // i  | |\\                  .\n    // t >|  #\\\n    // e  | |\\ \\              .\n    // r      \\s\\\n    //      |  \\t\\          .                 .\n    //          \\r\\                      .   .\n    //      |    \\o\\      .          .  . . .\n    //          e \\k\\            .  .    . .\n    //      |      \\e\\  .    .  .       . .\n    //       d      \\ \\  .  .          . .\n    //      | _ _a_ _\\#  .            . .\n    //   r1          / `             . .\n    //      |                       . .\n    //       b     /               . .\n    //      |                     . .\n    //           / r2            . .\n    //      |                        .   .\n    //         /                           .   .\n    //      |α                                   .   .\n    //       /                                         .   .\n    //      ° center\n    let r1 = this.radius;\n    let r2 = this.radius2_ === undefined ? r1 : this.radius2_;\n    if (r1 < r2) {\n      const tmp = r1;\n      r1 = r2;\n      r2 = tmp;\n    }\n    const points =\n      this.radius2_ === undefined ? this.points_ : this.points_ * 2;\n    const alpha = (2 * Math.PI) / points;\n    const a = r2 * Math.sin(alpha);\n    const b = Math.sqrt(r2 * r2 - a * a);\n    const d = r1 - b;\n    const e = Math.sqrt(a * a + d * d);\n    const miterRatio = e / a;\n    if (lineJoin === 'miter' && miterRatio <= miterLimit) {\n      return miterRatio * strokeWidth;\n    }\n    // Calculate the distance from center to the stroke corner where\n    // it was cut short because of the miter limit.\n    //              l\n    //        ----+---- <= distance from center to here is maxr\n    //       /####|k ##\\\n    //      /#####^#####\\\n    //     /#### /+\\# s #\\\n    //    /### h/+++\\# t #\\\n    //   /### t/+++++\\# r #\\\n    //  /### a/+++++++\\# o #\\\n    // /### p/++ fill +\\# k #\\\n    ///#### /+++++^+++++\\# e #\\\n    //#####/+++++/+\\+++++\\#####\\\n    const k = strokeWidth / 2 / miterRatio;\n    const l = (strokeWidth / 2) * (d / e);\n    const maxr = Math.sqrt((r1 + k) * (r1 + k) + l * l);\n    const bevelAdd = maxr - r1;\n    if (this.radius2_ === undefined || lineJoin === 'bevel') {\n      return bevelAdd * 2;\n    }\n    // If outer miter is over the miter limit the inner miter may reach through the\n    // center and be longer than the bevel, same calculation as above but swap r1 / r2.\n    const aa = r1 * Math.sin(alpha);\n    const bb = Math.sqrt(r1 * r1 - aa * aa);\n    const dd = r2 - bb;\n    const ee = Math.sqrt(aa * aa + dd * dd);\n    const innerMiterRatio = ee / aa;\n    if (innerMiterRatio <= miterLimit) {\n      const innerLength = (innerMiterRatio * strokeWidth) / 2 - r2 - r1;\n      return 2 * Math.max(bevelAdd, innerLength);\n    }\n    return bevelAdd * 2;\n  }\n\n  /**\n   * @return {RenderOptions}  The render options\n   * @protected\n   */\n  createRenderOptions() {\n    let lineCap = defaultLineCap;\n    let lineJoin = defaultLineJoin;\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = asColorLike(this.stroke_.getColor() ?? defaultStrokeStyle);\n      strokeWidth = this.stroke_.getWidth() ?? defaultLineWidth;\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset() ?? 0;\n      lineJoin = this.stroke_.getLineJoin() ?? defaultLineJoin;\n      lineCap = this.stroke_.getLineCap() ?? defaultLineCap;\n      miterLimit = this.stroke_.getMiterLimit() ?? defaultMiterLimit;\n    }\n\n    const add = this.calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit);\n    const maxRadius = Math.max(this.radius, this.radius2_ || 0);\n    const size = Math.ceil(2 * maxRadius + add);\n\n    return {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineCap: lineCap,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit,\n    };\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.renderOptions_ = this.createRenderOptions();\n    const size = this.renderOptions_.size;\n    this.hitDetectionCanvas_ = null;\n    this.size_ = [size, size];\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} pixelRatio The pixel ratio.\n   */\n  draw_(renderOptions, context, pixelRatio) {\n    context.scale(pixelRatio, pixelRatio);\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (renderOptions.strokeStyle) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineCap = renderOptions.lineCap;\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @return {HTMLCanvasElement} Canvas containing the icon\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    let context;\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n\n      // determine if fill is transparent (or pattern or gradient)\n      let opacity = 0;\n      if (typeof color === 'string') {\n        color = asArray(color);\n      }\n      if (color === null) {\n        opacity = 1;\n      } else if (Array.isArray(color)) {\n        opacity = color.length === 4 ? color[3] : 1;\n      }\n      if (opacity === 0) {\n        // if a transparent fill style is set, create an extra hit-detection image\n        // with a default fill style\n        context = createCanvasContext2D(renderOptions.size, renderOptions.size);\n        this.drawHitDetectionCanvas_(renderOptions, context);\n      }\n    }\n    return context ? context.canvas : this.getImage(1);\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context The context to draw in.\n   */\n  createPath_(context) {\n    let points = this.points_;\n    const radius = this.radius;\n    if (points === Infinity) {\n      context.arc(0, 0, radius, 0, 2 * Math.PI);\n    } else {\n      const radius2 = this.radius2_ === undefined ? radius : this.radius2_;\n      if (this.radius2_ !== undefined) {\n        points *= 2;\n      }\n      const startAngle = this.angle_ - Math.PI / 2;\n      const step = (2 * Math.PI) / points;\n      for (let i = 0; i < points; i++) {\n        const angle0 = startAngle + i * step;\n        const radiusC = i % 2 === 0 ? radius : radius2;\n        context.lineTo(radiusC * Math.cos(angle0), radiusC * Math.sin(angle0));\n      }\n      context.closePath();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   */\n  drawHitDetectionCanvas_(renderOptions, context) {\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (renderOptions.strokeStyle) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @override\n   */\n  ready() {\n    return this.fill_ ? this.fill_.ready() : Promise.resolve();\n  }\n}\n\nexport default RegularShape;\n","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {import('./Style.js').DeclutterMode} [declutterMode] Declutter mode\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {radius: 5};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n  }\n\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   * @override\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius = radius;\n    this.render();\n  }\n}\n\nexport default CircleStyle;\n","/**\n * @module ol/style/Fill\n */\n\nimport ImageState from '../ImageState.js';\nimport {asArray} from '../color.js';\nimport {getUid} from '../util.js';\nimport {get as getIconImage} from './IconImage.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null} [color=null] A color,\n * gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats. For polygon fills (not for {@link import(\"./RegularShape.js\").default} fills),\n * a pattern can also be provided as {@link module:ol/colorlike~PatternDescriptor}.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nclass Fill {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default|null}\n     */\n    this.patternImage_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null}\n     */\n    this.color_ = null;\n    if (options.color !== undefined) {\n      this.setColor(options.color);\n    }\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is a {@link module:ol/colorlike~ColorLike}.\n   * @return {Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null} color Color.\n   * @api\n   */\n  setColor(color) {\n    if (color !== null && typeof color === 'object' && 'src' in color) {\n      const patternImage = getIconImage(\n        null,\n        color.src,\n        'anonymous',\n        undefined,\n        color.offset ? null : color.color ? color.color : null,\n        !(color.offset && color.size),\n      );\n      patternImage.ready().then(() => {\n        this.patternImage_ = null;\n      });\n      if (patternImage.getImageState() === ImageState.IDLE) {\n        patternImage.load();\n      }\n      if (patternImage.getImageState() === ImageState.LOADING) {\n        this.patternImage_ = patternImage;\n      }\n    }\n    this.color_ = color;\n  }\n\n  /**\n   * @return {string} Key of the fill for cache lookup.\n   */\n  getKey() {\n    const fill = this.getColor();\n    if (!fill) {\n      return '';\n    }\n    return fill instanceof CanvasPattern || fill instanceof CanvasGradient\n      ? getUid(fill)\n      : typeof fill === 'object' && 'src' in fill\n        ? fill.src + ':' + fill.offset\n        : asArray(fill).toString();\n  }\n\n  /**\n   * @return {boolean} The fill style is loading an image pattern.\n   */\n  loading() {\n    return !!this.patternImage_;\n  }\n\n  /**\n   * @return {Promise<void>} `false` or a promise that resolves when the style is ready to use.\n   */\n  ready() {\n    return this.patternImage_ ? this.patternImage_.ready() : Promise.resolve();\n  }\n}\n\nexport default Fill;\n","/**\n * @module ol/style/Icon\n */\nimport ImageState from '../ImageState.js';\nimport {assert} from '../asserts.js';\nimport {asArray} from '../color.js';\nimport EventType from '../events/EventType.js';\nimport {getUid} from '../util.js';\nimport {get as getIconImage} from './IconImage.js';\nimport ImageStyle from './Image.js';\n\n/**\n * @typedef {'fraction' | 'pixels'} IconAnchorUnits\n * Anchor unit can be either a fraction of the icon size or in pixels.\n */\n\n/**\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} IconOrigin\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n */\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {IconOrigin} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {IconAnchorUnits} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {IconAnchorUnits} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement|ImageBitmap} [img] Image object for the icon.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the icon in pixels.\n * Positive values will shift the icon right and up.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number} [width] The width of the icon in pixels. This can't be used together with `scale`.\n * @property {number} [height] The height of the icon in pixels. This can't be used together with `scale`.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {Array<number>} [offset=[0, 0]] Offset which, together with `size` and `offsetOrigin`, defines the\n * sub-rectangle to use from the original (sprite) image.\n * @property {IconOrigin} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"../size.js\").Size} [size] Icon size in pixels. Used together with `offset` to define the\n * sub-rectangle to use from the original (sprite) image.\n * @property {string} [src] Image source URI.\n * @property {import(\"./Style.js\").DeclutterMode} [declutterMode] Declutter mode.\n */\n\n/**\n * @param {number} width The width.\n * @param {number} height The height.\n * @param {number|undefined} wantedWidth The wanted width.\n * @param {number|undefined} wantedHeight The wanted height.\n * @return {number|Array<number>} The scale.\n */\nfunction calculateScale(width, height, wantedWidth, wantedHeight) {\n  if (wantedWidth !== undefined && wantedHeight !== undefined) {\n    return [wantedWidth / width, wantedHeight / height];\n  }\n  if (wantedWidth !== undefined) {\n    return wantedWidth / width;\n  }\n  if (wantedHeight !== undefined) {\n    return wantedHeight / height;\n  }\n  return 1;\n}\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView,\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.anchorOrigin_ =\n      options.anchorOrigin !== undefined ? options.anchorOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorXUnits_ =\n      options.anchorXUnits !== undefined ? options.anchorXUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorYUnits_ =\n      options.anchorYUnits !== undefined ? options.anchorYUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    const image = options.img !== undefined ? options.img : null;\n\n    let cacheKey = options.src;\n\n    assert(\n      !(cacheKey !== undefined && image),\n      '`image` and `src` cannot be provided at the same time',\n    );\n\n    if ((cacheKey === undefined || cacheKey.length === 0) && image) {\n      cacheKey = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(\n      cacheKey !== undefined && cacheKey.length > 0,\n      'A defined and non-empty `src` or `image` must be provided',\n    );\n\n    assert(\n      !(\n        (options.width !== undefined || options.height !== undefined) &&\n        options.scale !== undefined\n      ),\n      '`width` or `height` cannot be provided together with `scale`',\n    );\n\n    let imageState;\n    if (options.src !== undefined) {\n      imageState = ImageState.IDLE;\n    } else if (image !== undefined) {\n      if ('complete' in image) {\n        if (image.complete) {\n          imageState = image.src ? ImageState.LOADED : ImageState.IDLE;\n        } else {\n          imageState = ImageState.LOADING;\n        }\n      } else {\n        imageState = ImageState.LOADED;\n      }\n    }\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image,\n      /** @type {string} */ (cacheKey),\n      this.crossOrigin_,\n      imageState,\n      this.color_,\n    );\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.offsetOrigin_ =\n      options.offsetOrigin !== undefined ? options.offsetOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n\n    /**\n     * @private\n     */\n    this.initialOptions_;\n\n    /**\n     * Calculate the scale if width or height were given.\n     */\n    if (options.width !== undefined || options.height !== undefined) {\n      let width, height;\n      if (options.size) {\n        [width, height] = options.size;\n      } else {\n        const image = this.getImage(1);\n        if (image.width && image.height) {\n          width = image.width;\n          height = image.height;\n        } else if (image instanceof HTMLImageElement) {\n          this.initialOptions_ = options;\n          const onload = () => {\n            this.unlistenImageChange(onload);\n            if (!this.initialOptions_) {\n              return;\n            }\n            const imageSize = this.iconImage_.getSize();\n            this.setScale(\n              calculateScale(\n                imageSize[0],\n                imageSize[1],\n                options.width,\n                options.height,\n              ),\n            );\n          };\n          this.listenImageChange(onload);\n          return;\n        }\n      }\n      if (width !== undefined) {\n        this.setScale(\n          calculateScale(width, height, options.width, options.height),\n        );\n      }\n    }\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   * @override\n   */\n  clone() {\n    let scale, width, height;\n    if (this.initialOptions_) {\n      width = this.initialOptions_.width;\n      height = this.initialOptions_.height;\n    } else {\n      scale = this.getScale();\n      scale = Array.isArray(scale) ? scale.slice() : scale;\n    }\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      color:\n        this.color_ && this.color_.slice\n          ? this.color_.slice()\n          : this.color_ || undefined,\n      crossOrigin: this.crossOrigin_,\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      opacity: this.getOpacity(),\n      rotateWithView: this.getRotateWithView(),\n      rotation: this.getRotation(),\n      scale,\n      width,\n      height,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      src: this.getSrc(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   * @override\n   */\n  getAnchor() {\n    let anchor = this.normalizedAnchor_;\n    if (!anchor) {\n      anchor = this.anchor_;\n      const size = this.getSize();\n      if (\n        this.anchorXUnits_ == 'fraction' ||\n        this.anchorYUnits_ == 'fraction'\n      ) {\n        if (!size) {\n          return null;\n        }\n        anchor = this.anchor_.slice();\n        if (this.anchorXUnits_ == 'fraction') {\n          anchor[0] *= size[0];\n        }\n        if (this.anchorYUnits_ == 'fraction') {\n          anchor[1] *= size[1];\n        }\n      }\n\n      if (this.anchorOrigin_ != 'top-left') {\n        if (!size) {\n          return null;\n        }\n        if (anchor === this.anchor_) {\n          anchor = this.anchor_.slice();\n        }\n        if (\n          this.anchorOrigin_ == 'top-right' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[0] = -anchor[0] + size[0];\n        }\n        if (\n          this.anchorOrigin_ == 'bottom-left' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[1] = -anchor[1] + size[1];\n        }\n      }\n      this.normalizedAnchor_ = anchor;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      anchor[0] - displacement[0] / scale[0],\n      anchor[1] + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image or Canvas element. If the Icon\n   * style was configured with `src` or with a not let loaded `img`, an `ImageBitmap` will be returned.\n   * @api\n   * @override\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ratio of the image.\n   * @api\n   * @override\n   */\n  getPixelRatio(pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   * @override\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   * @override\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image element.\n   * @override\n   */\n  getHitDetectionImage() {\n    return this.iconImage_.getHitDetectionImage();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   * @override\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n\n    if (this.offsetOrigin_ != 'top-left') {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (\n        this.offsetOrigin_ == 'top-right' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (\n        this.offsetOrigin_ == 'bottom-left' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   * @override\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * Get the width of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon width (in pixels).\n   * @api\n   */\n  getWidth() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[0] * scale[0];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[0] * scale[0];\n    }\n    return undefined;\n  }\n\n  /**\n   * Get the height of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon height (in pixels).\n   * @api\n   */\n  getHeight() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[1] * scale[1];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[1] * scale[1];\n    }\n    return undefined;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   * @override\n   */\n  setScale(scale) {\n    delete this.initialOptions_;\n    super.setScale(scale);\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   * @override\n   */\n  listenImageChange(listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   * @override\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   * @override\n   */\n  unlistenImageChange(listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * @override\n   */\n  ready() {\n    return this.iconImage_.ready();\n  }\n}\n\nexport default Icon;\n","/**\n * @module ol/style/Stroke\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nclass Stroke {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {CanvasLineCap|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {CanvasLineJoin|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth(),\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {CanvasLineCap|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>|null} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {CanvasLineJoin|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * @param {Array<number>|null} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n  }\n}\n\nexport default Stroke;\n","/**\n * @module ol/style/Style\n */\n\nimport {assert} from '../asserts.js';\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport Stroke from './Stroke.js';\n\n/**\n * Defines how symbols and text are decluttered on layers ith `declutter` set to `true`\n * **declutter**: Overlapping symbols and text are decluttered.\n * **obstacle**: Symbols and text are rendered, but serve as obstacle for subsequent attempts\n *   to place a symbol or text at the same location.\n * **none**: No decluttering is done.\n *\n * @typedef {\"declutter\"|\"obstacle\"|\"none\"} DeclutterMode\n */\n\n/**\n * A function that takes a {@link module:ol/Feature~Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style~Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes a {@link module:ol/Feature~Feature} as argument and returns an\n * {@link module:ol/geom/Geometry~Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>|Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>),import(\"../render.js\").State): void} RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {RenderFunction} [hitDetectionRenderer] Custom renderer for hit detection. If provided will be used\n * in hit detection rendering.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)',\n *  });\n *  const stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25,\n *  });\n *  const styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5,\n *      }),\n *      fill: fill,\n *      stroke: stroke,\n *    }),\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const styles = {};\n *  const white = [255, 255, 255, 1];\n *  const blue = [0, 153, 255, 1];\n *  const width = 3;\n *  styles['Polygon'] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5],\n *      }),\n *    }),\n *  ];\n *  styles['MultiPolygon'] =\n *      styles['Polygon'];\n *  styles['LineString'] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2,\n *      }),\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width,\n *      }),\n *    }),\n *  ];\n *  styles['MultiLineString'] = styles['LineString'];\n *\n *  styles['Circle'] = styles['Polygon'].concat(\n *    styles['LineString']\n *  );\n *\n *  styles['Point'] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue,\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2,\n *        }),\n *      }),\n *      zIndex: Infinity,\n *    }),\n *  ];\n *  styles['MultiPoint'] =\n *      styles['Point'];\n *  styles['GeometryCollection'] =\n *      styles['Polygon'].concat(\n *          styles['LineString'],\n *          styles['Point']\n *      );\n * ```\n *\n * @api\n */\nclass Style {\n  /**\n   * @param {Options} [options] Style options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction|null}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {import(\"./Image.js\").default|null}\n     */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.hitDetectionRenderer_ =\n      options.hitDetectionRenderer !== undefined\n        ? options.hitDetectionRenderer\n        : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default|null}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        geometry\n      ).clone();\n    }\n    return new Style({\n      geometry: geometry ?? undefined,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      renderer: this.getRenderer() ?? undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex(),\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Sets a custom renderer function for this style used\n   * in hit detection.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setHitDetectionRenderer(renderer) {\n    this.hitDetectionRenderer_ = renderer;\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setHitDetectionRenderer} or the `hitDetectionRenderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getHitDetectionRenderer() {\n    return this.hitDetectionRenderer_;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction|null}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default|null} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default|null} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction|null} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function (feature) {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (\n          feature.get(geometry)\n        );\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function () {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(\n        typeof (/** @type {?} */ (obj).getZIndex) === 'function',\n        'Expected an `Style` or an array of `Style`',\n      );\n      const style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function () {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n/**\n * @type {Array<Style>|null}\n */\nlet defaultStyles = null;\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)',\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25,\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5,\n        }),\n        fill: fill,\n        stroke: stroke,\n      }),\n    ];\n  }\n  return defaultStyles;\n}\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles['Polygon'] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5],\n      }),\n    }),\n  ];\n  styles['MultiPolygon'] = styles['Polygon'];\n\n  styles['LineString'] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2,\n      }),\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width,\n      }),\n    }),\n  ];\n  styles['MultiLineString'] = styles['LineString'];\n\n  styles['Circle'] = styles['Polygon'].concat(styles['LineString']);\n\n  styles['Point'] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue,\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2,\n        }),\n      }),\n      zIndex: Infinity,\n    }),\n  ];\n  styles['MultiPoint'] = styles['Point'];\n\n  styles['GeometryCollection'] = styles['Polygon'].concat(\n    styles['LineString'],\n    styles['Point'],\n  );\n\n  return styles;\n}\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/style/Text\n */\nimport {toSize} from '../size.js';\nimport Fill from './Fill.js';\n\n/**\n * @typedef {'point' | 'line'} TextPlacement\n * Default text placement is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n */\n\n/**\n * @typedef {'left' | 'center' | 'right'} TextJustify\n */\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nconst DEFAULT_FILL_COLOR = '#333';\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS `font` value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is `'10px sans-serif'`\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {TextPlacement} [placement='point'] Text placement.\n * @property {number} [repeat] Repeat interval. When set, the text will be repeated at this interval, which specifies\n * the distance between two text anchors in pixels. Only available when `placement` is set to `'line'`. Overrides 'textAlign'.\n * @property {number|import(\"../size.js\").Size} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {boolean} [keepUpright=true] Whether the text can be rotated 180° to prevent being rendered upside down.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string|Array<string>} [text] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for `placement: 'line'` or the immediate rendering API.\n * @property {CanvasTextAlign} [textAlign] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {TextJustify} [justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `justify` is ignored for immediate rendering and also for `placement: 'line'`.\n * @property {CanvasTextBaseline} [textBaseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {import(\"./Fill.js\").default|null} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333). Specify `null` for no fill.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n * @property {import('../style/Style.js').DeclutterMode} [declutterMode] Declutter mode: `declutter`, `obstacle`, `none`\n */\n\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nclass Text {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.font_ = options.font;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.keepUpright_ = options.keepUpright;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size|undefined}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale !== undefined ? options.scale : 1);\n\n    /**\n     * @private\n     * @type {string|Array<string>|undefined}\n     */\n    this.text_ = options.text;\n\n    /**\n     * @private\n     * @type {CanvasTextAlign|undefined}\n     */\n    this.textAlign_ = options.textAlign;\n\n    /**\n     * @private\n     * @type {TextJustify|undefined}\n     */\n    this.justify_ = options.justify;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.repeat_ = options.repeat;\n\n    /**\n     * @private\n     * @type {CanvasTextBaseline|undefined}\n     */\n    this.textBaseline_ = options.textBaseline;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ =\n      options.fill !== undefined\n        ? options.fill\n        : new Fill({color: DEFAULT_FILL_COLOR});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxAngle_ =\n      options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n    /**\n     * @private\n     * @type {TextPlacement}\n     */\n    this.placement_ =\n      options.placement !== undefined ? options.placement : 'point';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overflow_ = !!options.overflow;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.backgroundFill_ = options.backgroundFill\n      ? options.backgroundFill\n      : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.backgroundStroke_ = options.backgroundStroke\n      ? options.backgroundStroke\n      : null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.padding_ = options.padding === undefined ? null : options.padding;\n\n    /**\n     * @private\n     * @type {import('../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Text} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Text({\n      font: this.getFont(),\n      placement: this.getPlacement(),\n      repeat: this.getRepeat(),\n      maxAngle: this.getMaxAngle(),\n      overflow: this.getOverflow(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      keepUpright: this.getKeepUpright(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      text: this.getText(),\n      textAlign: this.getTextAlign(),\n      justify: this.getJustify(),\n      textBaseline: this.getTextBaseline(),\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      offsetX: this.getOffsetX(),\n      offsetY: this.getOffsetY(),\n      backgroundFill: this.getBackgroundFill()\n        ? this.getBackgroundFill().clone()\n        : undefined,\n      backgroundStroke: this.getBackgroundStroke()\n        ? this.getBackgroundStroke().clone()\n        : undefined,\n      padding: this.getPadding() || undefined,\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the `overflow` configuration.\n   * @return {boolean} Let text overflow the length of the path they follow.\n   * @api\n   */\n  getOverflow() {\n    return this.overflow_;\n  }\n\n  /**\n   * Get the font name.\n   * @return {string|undefined} Font.\n   * @api\n   */\n  getFont() {\n    return this.font_;\n  }\n\n  /**\n   * Get the maximum angle between adjacent characters.\n   * @return {number} Angle in radians.\n   * @api\n   */\n  getMaxAngle() {\n    return this.maxAngle_;\n  }\n\n  /**\n   * Get the label placement.\n   * @return {TextPlacement} Text placement.\n   * @api\n   */\n  getPlacement() {\n    return this.placement_;\n  }\n\n  /**\n   * Get the repeat interval of the text.\n   * @return {number|undefined} Repeat interval in pixels.\n   * @api\n   */\n  getRepeat() {\n    return this.repeat_;\n  }\n\n  /**\n   * Get the x-offset for the text.\n   * @return {number} Horizontal text offset.\n   * @api\n   */\n  getOffsetX() {\n    return this.offsetX_;\n  }\n\n  /**\n   * Get the y-offset for the text.\n   * @return {number} Vertical text offset.\n   * @api\n   */\n  getOffsetY() {\n    return this.offsetY_;\n  }\n\n  /**\n   * Get the fill style for the text.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Determine whether the text rotates with the map.\n   * @return {boolean|undefined} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Determine whether the text can be rendered upside down.\n   * @return {boolean|undefined} Keep text upright.\n   * @api\n   */\n  getKeepUpright() {\n    return this.keepUpright_;\n  }\n\n  /**\n   * Get the text rotation.\n   * @return {number|undefined} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the text scale.\n   * @return {number|import(\"../size.js\").Size|undefined} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the stroke style for the text.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Get the text to be rendered.\n   * @return {string|Array<string>|undefined} Text.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Get the text alignment.\n   * @return {CanvasTextAlign|undefined} Text align.\n   * @api\n   */\n  getTextAlign() {\n    return this.textAlign_;\n  }\n\n  /**\n   * Get the justification.\n   * @return {TextJustify|undefined} Justification.\n   * @api\n   */\n  getJustify() {\n    return this.justify_;\n  }\n\n  /**\n   * Get the text baseline.\n   * @return {CanvasTextBaseline|undefined} Text baseline.\n   * @api\n   */\n  getTextBaseline() {\n    return this.textBaseline_;\n  }\n\n  /**\n   * Get the background fill style for the text.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getBackgroundFill() {\n    return this.backgroundFill_;\n  }\n\n  /**\n   * Get the background stroke style for the text.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getBackgroundStroke() {\n    return this.backgroundStroke_;\n  }\n\n  /**\n   * Get the padding for the text.\n   * @return {Array<number>|null} Padding.\n   * @api\n   */\n  getPadding() {\n    return this.padding_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {import(\"./Style.js\").DeclutterMode} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Set the `overflow` property.\n   *\n   * @param {boolean} overflow Let text overflow the path that it follows.\n   * @api\n   */\n  setOverflow(overflow) {\n    this.overflow_ = overflow;\n  }\n\n  /**\n   * Set the font.\n   *\n   * @param {string|undefined} font Font.\n   * @api\n   */\n  setFont(font) {\n    this.font_ = font;\n  }\n\n  /**\n   * Set the maximum angle between adjacent characters.\n   *\n   * @param {number} maxAngle Angle in radians.\n   * @api\n   */\n  setMaxAngle(maxAngle) {\n    this.maxAngle_ = maxAngle;\n  }\n\n  /**\n   * Set the x offset.\n   *\n   * @param {number} offsetX Horizontal text offset.\n   * @api\n   */\n  setOffsetX(offsetX) {\n    this.offsetX_ = offsetX;\n  }\n\n  /**\n   * Set the y offset.\n   *\n   * @param {number} offsetY Vertical text offset.\n   * @api\n   */\n  setOffsetY(offsetY) {\n    this.offsetY_ = offsetY;\n  }\n\n  /**\n   * Set the text placement.\n   *\n   * @param {TextPlacement} placement Placement.\n   * @api\n   */\n  setPlacement(placement) {\n    this.placement_ = placement;\n  }\n\n  /**\n   * Set the repeat interval of the text.\n   * @param {number|undefined} [repeat] Repeat interval in pixels.\n   * @api\n   */\n  setRepeat(repeat) {\n    this.repeat_ = repeat;\n  }\n\n  /**\n   * Set whether to rotate the text with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set whether the text can be rendered upside down.\n   *\n   * @param {boolean} keepUpright Keep text upright.\n   * @api\n   */\n  setKeepUpright(keepUpright) {\n    this.keepUpright_ = keepUpright;\n  }\n\n  /**\n   * Set the fill.\n   *\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number|undefined} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size|undefined} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale !== undefined ? scale : 1);\n  }\n\n  /**\n   * Set the stroke.\n   *\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Set the text.\n   *\n   * @param {string|Array<string>|undefined} text Text.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Set the text alignment.\n   *\n   * @param {CanvasTextAlign|undefined} textAlign Text align.\n   * @api\n   */\n  setTextAlign(textAlign) {\n    this.textAlign_ = textAlign;\n  }\n\n  /**\n   * Set the justification.\n   *\n   * @param {TextJustify|undefined} justify Justification.\n   * @api\n   */\n  setJustify(justify) {\n    this.justify_ = justify;\n  }\n\n  /**\n   * Set the text baseline.\n   *\n   * @param {CanvasTextBaseline|undefined} textBaseline Text baseline.\n   * @api\n   */\n  setTextBaseline(textBaseline) {\n    this.textBaseline_ = textBaseline;\n  }\n\n  /**\n   * Set the background fill.\n   *\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setBackgroundFill(fill) {\n    this.backgroundFill_ = fill;\n  }\n\n  /**\n   * Set the background stroke.\n   *\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setBackgroundStroke(stroke) {\n    this.backgroundStroke_ = stroke;\n  }\n\n  /**\n   * Set the padding (`[top, right, bottom, left]`).\n   *\n   * @param {Array<number>|null} padding Padding.\n   * @api\n   */\n  setPadding(padding) {\n    this.padding_ = padding;\n  }\n}\n\nexport default Text;\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing.inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  }\n  return 1 - inAndOut(2 * (t - 0.5));\n}\n","/**\n * @module ol/Tile\n */\nimport TileState from './TileState.js';\nimport {easeIn} from './easing.js';\nimport EventType from './events/EventType.js';\nimport EventTarget from './events/Target.js';\nimport {abstract} from './util.js';\n\n/**\n * A function that takes a {@link module:ol/Tile~Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState.js';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   const xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     const data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~TileSource} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes a {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection~Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @api\n */\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nclass Tile extends EventTarget {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {import(\"./TileState.js\").default}\n     */\n    this.state = state;\n\n    /**\n     * A key assigned to the tile. This is used in conjunction with a source key\n     * to determine if a cached version of this tile may be used by the renderer.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @private\n     * @type {number}\n     */\n    this.transition_ =\n      options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n\n    /**\n     * @type {boolean}\n     */\n    this.interpolate = !!options.interpolate;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Called by the tile cache when the tile is removed from the cache due to expiry\n   */\n  release() {\n    // to remove the `change` listener on this tile in `ol/TileQueue#handleTileChange`\n    this.setState(TileState.EMPTY);\n  }\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {import(\"./TileState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @api\n   */\n  setState(state) {\n    if (this.state === TileState.EMPTY) {\n      // no more state changes\n      return;\n    }\n    if (this.state !== TileState.ERROR && this.state > state) {\n      throw new Error('Tile load sequence violation');\n    }\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + 1000 / 60; // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n\n  /**\n   * @override\n   */\n  disposeInternal() {\n    this.release();\n    super.disposeInternal();\n  }\n}\n\nexport default Tile;\n","/**\n * @module ol/VectorTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\n\n/**\n * @template {import('./Feature.js').FeatureLike} FeatureType\n */\nclass VectorTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Data source url.\n   * @param {import(\"./format/Feature.js\").default<FeatureType>} format Feature format.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, src, format, tileLoadFunction, options) {\n    super(tileCoord, state, options);\n\n    /**\n     * Extent of this tile; set by the source.\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = null;\n\n    /**\n     * @private\n     * @type {import(\"./format/Feature.js\").default<FeatureType>}\n     */\n    this.format_ = format;\n\n    /**\n     * @private\n     * @type {Array<FeatureType>}\n     */\n    this.features_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./featureloader.js\").FeatureLoader}\n     */\n    this.loader_;\n\n    /**\n     * Feature projection of this tile; set by the source.\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection = null;\n\n    /**\n     * Resolution of this tile; set by the source.\n     * @type {number}\n     */\n    this.resolution;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.url_ = src;\n\n    this.key = src;\n  }\n\n  /**\n   * @return {string} Tile url.\n   */\n  getTileUrl() {\n    return this.url_;\n  }\n\n  /**\n   * Get the feature format assigned for reading this tile's features.\n   * @return {import(\"./format/Feature.js\").default<FeatureType>} Feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * Get the features for this tile. Geometries will be in the view projection.\n   * @return {Array<FeatureType>} Features.\n   * @api\n   */\n  getFeatures() {\n    return this.features_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @override\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.setState(TileState.LOADING);\n      this.tileLoadFunction_(this, this.url_);\n      if (this.loader_) {\n        this.loader_(this.extent, this.resolution, this.projection);\n      }\n    }\n  }\n\n  /**\n   * Handler for successful tile load.\n   * @param {Array<FeatureType>} features The loaded features.\n   * @param {import(\"./proj/Projection.js\").default} dataProjection Data projection.\n   */\n  onLoad(features, dataProjection) {\n    this.setFeatures(features);\n  }\n\n  /**\n   * Handler for tile load errors.\n   */\n  onError() {\n    this.setState(TileState.ERROR);\n  }\n\n  /**\n   * Function for use in a {@link module:ol/source/VectorTile~VectorTile}'s `tileLoadFunction`.\n   * Sets the features for the tile.\n   * @param {Array<FeatureType>} features Features.\n   * @api\n   */\n  setFeatures(features) {\n    this.features_ = features;\n    this.setState(TileState.LOADED);\n  }\n\n  /**\n   * Set the feature loader for reading this tile's features.\n   * @param {import(\"./featureloader.js\").FeatureLoader<FeatureType>} loader Feature loader.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n}\n\nexport default VectorTile;\n","import {VectorTile} from 'ol';\nimport TileState from 'ol/TileState.js';\nimport {toPromise} from 'ol/functions.js';\nimport {getUid} from 'ol/util.js';\nimport {normalizeSourceUrl, normalizeStyleUrl} from './mapbox.js';\n\n/** @typedef {'Style'|'Source'|'Sprite'|'SpriteImage'|'Tiles'|'GeoJSON'} ResourceType */\n\n/** @typedef {import(\"ol\").Map} Map */\n/** @typedef {import(\"ol/layer\").Layer} Layer */\n/** @typedef {import(\"ol/layer\").Group} LayerGroup */\n/** @typedef {import(\"ol/layer\").Vector} VectorLayer */\n/** @typedef {import(\"ol/layer\").VectorTile} VectorTileLayer */\n/** @typedef {import(\"ol/source\").Source} Source */\n\nconst functionCacheByStyleId = {};\nconst filterCacheByStyleId = {};\n\nlet styleId = 0;\nexport function getStyleId(glStyle) {\n  if (!glStyle.id) {\n    glStyle.id = styleId++;\n  }\n  return glStyle.id;\n}\n\nexport function getStyleFunctionKey(glStyle, olLayer) {\n  return getStyleId(glStyle) + '.' + getUid(olLayer);\n}\n\n/**\n * @param {Object} glStyle Mapboox style object.\n * @return {Object} Function cache.\n */\nexport function getFunctionCache(glStyle) {\n  let functionCache = functionCacheByStyleId[glStyle.id];\n  if (!functionCache) {\n    functionCache = {};\n    functionCacheByStyleId[getStyleId(glStyle)] = functionCache;\n  }\n  return functionCache;\n}\n\nexport function clearFunctionCache() {\n  for (const key in functionCacheByStyleId) {\n    delete functionCacheByStyleId[key];\n  }\n}\n\n/**\n * @param {Object} glStyle Mapboox style object.\n * @return {Object} Filter cache.\n */\nexport function getFilterCache(glStyle) {\n  let filterCache = filterCacheByStyleId[glStyle.id];\n  if (!filterCache) {\n    filterCache = {};\n    filterCacheByStyleId[getStyleId(glStyle)] = filterCache;\n  }\n  return filterCache;\n}\n\nexport function deg2rad(degrees) {\n  return (degrees * Math.PI) / 180;\n}\n\nexport const defaultResolutions = (function () {\n  const resolutions = [];\n  for (let res = 78271.51696402048; resolutions.length <= 24; res /= 2) {\n    resolutions.push(res);\n  }\n  return resolutions;\n})();\n\n/**\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @return {HTMLCanvasElement} Canvas.\n */\nexport function createCanvas(width, height) {\n  if (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope && typeof OffscreenCanvas !== 'undefined') { // eslint-disable-line\n    return /** @type {?} */ (new OffscreenCanvas(width, height));\n  }\n  const canvas = document.createElement('canvas');\n  canvas.width = width;\n  canvas.height = height;\n  return canvas;\n}\n\nexport function getZoomForResolution(resolution, resolutions) {\n  let i = 0;\n  const ii = resolutions.length;\n  for (; i < ii; ++i) {\n    const candidate = resolutions[i];\n    if (candidate < resolution && i + 1 < ii) {\n      const zoomFactor = resolutions[i] / resolutions[i + 1];\n      return i + Math.log(resolutions[i] / resolution) / Math.log(zoomFactor);\n    }\n  }\n  return ii - 1;\n}\n\nexport function getResolutionForZoom(zoom, resolutions) {\n  const base = Math.floor(zoom);\n  const factor = Math.pow(2, zoom - base);\n  return resolutions[base] / factor;\n}\n\nconst pendingRequests = {};\n/**\n * @param {ResourceType} resourceType Type of resource to load.\n * @param {string} url Url of the resource.\n * @param {Options} [options] Options.\n * @param {{request?: Request}} [metadata] Object to be filled with the request.\n * @return {Promise<Object|Response>} Promise that resolves with the loaded resource\n * or rejects with the Response object.\n * @private\n */\nexport function fetchResource(resourceType, url, options = {}, metadata) {\n  if (url in pendingRequests) {\n    if (metadata) {\n      metadata.request = pendingRequests[url][0];\n    }\n    return pendingRequests[url][1];\n  }\n  const transformedRequest = options.transformRequest\n    ? options.transformRequest(url, resourceType) || url\n    : url;\n  const pendingRequest = toPromise(() => transformedRequest).then(\n    (transformedRequest) => {\n      if (!(transformedRequest instanceof Request)) {\n        transformedRequest = new Request(transformedRequest);\n      }\n      if (!transformedRequest.headers.get('Accept')) {\n        transformedRequest.headers.set('Accept', 'application/json');\n      }\n      if (metadata) {\n        metadata.request = transformedRequest;\n      }\n      return fetch(transformedRequest)\n        .then(function (response) {\n          delete pendingRequests[url];\n          return response.ok\n            ? response.json()\n            : Promise.reject(new Error('Error fetching source ' + url));\n        })\n        .catch(function (error) {\n          delete pendingRequests[url];\n          return Promise.reject(new Error('Error fetching source ' + url));\n        });\n    },\n  );\n  pendingRequests[url] = [transformedRequest, pendingRequest];\n  return pendingRequest;\n}\n\nexport function getGlStyle(glStyleOrUrl, options) {\n  if (typeof glStyleOrUrl === 'string') {\n    if (glStyleOrUrl.trim().startsWith('{')) {\n      try {\n        const glStyle = JSON.parse(glStyleOrUrl);\n        return Promise.resolve(glStyle);\n      } catch (error) {\n        return Promise.reject(error);\n      }\n    } else {\n      glStyleOrUrl = normalizeStyleUrl(glStyleOrUrl, options.accessToken);\n      return fetchResource('Style', glStyleOrUrl, options);\n    }\n  } else {\n    return Promise.resolve(glStyleOrUrl);\n  }\n}\n\nconst tilejsonCache = {};\n/**\n * @param {Object} glSource glStyle source object.\n * @param {string} styleUrl Style URL.\n * @param {Options} options Options.\n * @return {Promise<{tileJson: Object, tileLoadFunction: import('ol/Tile.js').LoadFunction}?>} TileJson and load function\n */\nexport function getTileJson(glSource, styleUrl, options = {}) {\n  const cacheKey = [styleUrl, JSON.stringify(glSource)].toString();\n  let promise = tilejsonCache[cacheKey];\n  if (!promise || options.transformRequest) {\n    let tileLoadFunction;\n    if (options.transformRequest) {\n      tileLoadFunction = (tile, src) => {\n        const transformedRequest = options.transformRequest\n          ? options.transformRequest(src, 'Tiles') || src\n          : src;\n        if (tile instanceof VectorTile) {\n          tile.setLoader((extent, resolution, projection) => {\n            toPromise(() => transformedRequest).then((transformedRequest) => {\n              fetch(transformedRequest)\n                .then((response) => response.arrayBuffer())\n                .then((data) => {\n                  const format = tile.getFormat();\n                  const features = format.readFeatures(data, {\n                    extent: extent,\n                    featureProjection: projection,\n                  });\n                  // @ts-ignore\n                  tile.setFeatures(features);\n                })\n                .catch((e) => tile.setState(TileState.ERROR));\n            });\n          });\n        } else {\n          const img = tile.getImage();\n          toPromise(() => transformedRequest).then((transformedRequest) => {\n            if (transformedRequest instanceof Request) {\n              fetch(transformedRequest)\n                .then((response) => response.blob())\n                .then((blob) => {\n                  const url = URL.createObjectURL(blob);\n                  img.addEventListener('load', () => URL.revokeObjectURL(url));\n                  img.addEventListener('error', () => URL.revokeObjectURL(url));\n                  img.src = url;\n                })\n                .catch((e) => tile.setState(TileState.ERROR));\n            } else {\n              img.src = transformedRequest;\n            }\n          });\n        }\n      };\n    }\n    const url = glSource.url;\n    if (url && !glSource.tiles) {\n      const normalizedSourceUrl = normalizeSourceUrl(\n        url,\n        options.accessToken,\n        options.accessTokenParam || 'access_token',\n        styleUrl || location.href,\n      );\n      if (url.startsWith('mapbox://')) {\n        promise = Promise.resolve({\n          tileJson: Object.assign({}, glSource, {\n            url: undefined,\n            tiles: normalizedSourceUrl,\n          }),\n          tileLoadFunction,\n        });\n      } else {\n        const metadata = {};\n        promise = fetchResource(\n          'Source',\n          normalizedSourceUrl[0],\n          options,\n          metadata,\n        ).then(function (tileJson) {\n          tileJson.tiles = tileJson.tiles.map(function (tileUrl) {\n            if (tileJson.scheme === 'tms') {\n              tileUrl = tileUrl.replace('{y}', '{-y}');\n            }\n            return normalizeSourceUrl(\n              tileUrl,\n              options.accessToken,\n              options.accessTokenParam || 'access_token',\n              metadata.request.url,\n            )[0];\n          });\n          return Promise.resolve({tileJson, tileLoadFunction});\n        });\n      }\n    } else {\n      glSource = Object.assign({}, glSource, {\n        tiles: glSource.tiles.map(function (tileUrl) {\n          if (glSource.scheme === 'tms') {\n            tileUrl = tileUrl.replace('{y}', '{-y}');\n          }\n          return normalizeSourceUrl(\n            tileUrl,\n            options.accessToken,\n            options.accessTokenParam || 'access_token',\n            styleUrl || location.href,\n          )[0];\n        }),\n      });\n      promise = Promise.resolve({\n        tileJson: Object.assign({}, glSource),\n        tileLoadFunction,\n      });\n    }\n    tilejsonCache[cacheKey] = promise;\n  }\n  return promise;\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} spriteImage Sprite image id.\n * @param {{x: number, y: number, width: number, height: number, pixelRatio: number}} spriteImageData Sprite image data.\n * @param {number} haloWidth Halo width.\n * @param {{r: number, g: number, b: number, a: number}} haloColor Halo color.\n * @return {HTMLCanvasElement} Canvas element with the halo.\n */\nexport function drawIconHalo(\n  spriteImage,\n  spriteImageData,\n  haloWidth,\n  haloColor,\n) {\n  const imgSize = [\n    2 * haloWidth * spriteImageData.pixelRatio + spriteImageData.width,\n    2 * haloWidth * spriteImageData.pixelRatio + spriteImageData.height,\n  ];\n  const imageCanvas = createCanvas(imgSize[0], imgSize[1]);\n  const imageContext = imageCanvas.getContext('2d');\n  imageContext.drawImage(\n    spriteImage,\n    spriteImageData.x,\n    spriteImageData.y,\n    spriteImageData.width,\n    spriteImageData.height,\n    haloWidth * spriteImageData.pixelRatio,\n    haloWidth * spriteImageData.pixelRatio,\n    spriteImageData.width,\n    spriteImageData.height,\n  );\n  const imageData = imageContext.getImageData(0, 0, imgSize[0], imgSize[1]);\n  imageContext.globalCompositeOperation = 'destination-over';\n  imageContext.fillStyle = `rgba(${haloColor.r * 255},${haloColor.g * 255},${\n    haloColor.b * 255\n  },${haloColor.a})`;\n  const data = imageData.data;\n  for (let i = 0, ii = imageData.width; i < ii; ++i) {\n    for (let j = 0, jj = imageData.height; j < jj; ++j) {\n      const index = (j * ii + i) * 4;\n      const alpha = data[index + 3];\n      if (alpha > 0) {\n        imageContext.arc(\n          i,\n          j,\n          haloWidth * spriteImageData.pixelRatio,\n          0,\n          2 * Math.PI,\n        );\n      }\n    }\n  }\n  imageContext.fill();\n  return imageCanvas;\n}\n\nfunction smoothstep(min, max, value) {\n  const x = Math.max(0, Math.min(1, (value - min) / (max - min)));\n  return x * x * (3 - 2 * x);\n}\n\n/**\n * @param {HTMLImageElement} image SDF image\n * @param {{x: number, y: number, width: number, height: number}} area Area to unSDF\n * @param {{r: number, g: number, b: number, a: number}} color Color to use\n * @return {HTMLCanvasElement} Regular image\n */\nexport function drawSDF(image, area, color) {\n  const imageCanvas = createCanvas(area.width, area.height);\n  const imageContext = imageCanvas.getContext('2d');\n  imageContext.drawImage(\n    image,\n    area.x,\n    area.y,\n    area.width,\n    area.height,\n    0,\n    0,\n    area.width,\n    area.height,\n  );\n  const imageData = imageContext.getImageData(0, 0, area.width, area.height);\n  const data = imageData.data;\n  for (let i = 0, ii = imageData.width; i < ii; ++i) {\n    for (let j = 0, jj = imageData.height; j < jj; ++j) {\n      const index = (j * ii + i) * 4;\n      const dist = data[index + 3] / 255;\n\n      const buffer = 0.75;\n      const gamma = 0.1;\n\n      const alpha = smoothstep(buffer - gamma, buffer + gamma, dist);\n      if (alpha > 0) {\n        data[index + 0] = Math.round(255 * color.r * alpha);\n        data[index + 1] = Math.round(255 * color.g * alpha);\n        data[index + 2] = Math.round(255 * color.b * alpha);\n        data[index + 3] = Math.round(255 * alpha);\n      } else {\n        data[index + 3] = 0;\n      }\n    }\n  }\n  imageContext.putImageData(imageData, 0, 0);\n  return imageCanvas;\n}\n\n/**\n * @typedef {import(\"./apply.js\").Options} Options\n * @private\n */\n","import mb2css from 'mapbox-to-css-font';\nimport {checkedFonts, registerFont} from 'ol/render/canvas.js';\nimport {createCanvas} from './util.js';\n\nconst hairSpacePool = Array(256).join('\\u200A');\nexport function applyLetterSpacing(text, letterSpacing) {\n  if (letterSpacing >= 0.05) {\n    let textWithLetterSpacing = '';\n    const lines = text.split('\\n');\n    const joinSpaceString = hairSpacePool.slice(\n      0,\n      Math.round(letterSpacing / 0.1),\n    );\n    for (let l = 0, ll = lines.length; l < ll; ++l) {\n      if (l > 0) {\n        textWithLetterSpacing += '\\n';\n      }\n      textWithLetterSpacing += lines[l].split('').join(joinSpaceString);\n    }\n    return textWithLetterSpacing;\n  }\n  return text;\n}\n\nlet measureContext;\nfunction getMeasureContext() {\n  if (!measureContext) {\n    measureContext = createCanvas(1, 1).getContext('2d');\n  }\n  return measureContext;\n}\n\nfunction measureText(text, letterSpacing) {\n  return (\n    getMeasureContext().measureText(text).width +\n    (text.length - 1) * letterSpacing\n  );\n}\n\nconst measureCache = {};\nexport function wrapText(text, font, em, letterSpacing) {\n  if (text.indexOf('\\n') !== -1) {\n    const hardLines = text.split('\\n');\n    const lines = [];\n    for (let i = 0, ii = hardLines.length; i < ii; ++i) {\n      lines.push(wrapText(hardLines[i], font, em, letterSpacing));\n    }\n    return lines.join('\\n');\n  }\n  const key = em + ',' + font + ',' + text + ',' + letterSpacing;\n  let wrappedText = measureCache[key];\n  if (!wrappedText) {\n    const words = text.split(' ');\n    if (words.length > 1) {\n      const ctx = getMeasureContext();\n      ctx.font = font;\n      const oneEm = ctx.measureText('M').width;\n      const maxWidth = oneEm * em;\n      let line = '';\n      const lines = [];\n      // Pass 1 - wrap lines to not exceed maxWidth\n      for (let i = 0, ii = words.length; i < ii; ++i) {\n        const word = words[i];\n        const testLine = line + (line ? ' ' : '') + word;\n        if (measureText(testLine, letterSpacing) <= maxWidth) {\n          line = testLine;\n        } else {\n          if (line) {\n            lines.push(line);\n          }\n          line = word;\n        }\n      }\n      if (line) {\n        lines.push(line);\n      }\n      // Pass 2 - add lines with a width of less than 30% of maxWidth to the previous or next line\n      for (let i = 0, ii = lines.length; i < ii && ii > 1; ++i) {\n        const line = lines[i];\n        if (measureText(line, letterSpacing) < maxWidth * 0.35) {\n          const prevWidth =\n            i > 0 ? measureText(lines[i - 1], letterSpacing) : Infinity;\n          const nextWidth =\n            i < ii - 1 ? measureText(lines[i + 1], letterSpacing) : Infinity;\n          lines.splice(i, 1);\n          ii -= 1;\n          if (prevWidth < nextWidth) {\n            lines[i - 1] += ' ' + line;\n            i -= 1;\n          } else {\n            lines[i] = line + ' ' + lines[i];\n          }\n        }\n      }\n      // Pass 3 - try to fill 80% of maxWidth for each line\n      for (let i = 0, ii = lines.length - 1; i < ii; ++i) {\n        const line = lines[i];\n        const next = lines[i + 1];\n        if (\n          measureText(line, letterSpacing) > maxWidth * 0.7 &&\n          measureText(next, letterSpacing) < maxWidth * 0.6\n        ) {\n          const lineWords = line.split(' ');\n          const lastWord = lineWords.pop();\n          if (measureText(lastWord, letterSpacing) < maxWidth * 0.2) {\n            lines[i] = lineWords.join(' ');\n            lines[i + 1] = lastWord + ' ' + next;\n          }\n          ii -= 1;\n        }\n      }\n      wrappedText = lines.join('\\n');\n    } else {\n      wrappedText = text;\n    }\n    wrappedText = applyLetterSpacing(wrappedText, letterSpacing);\n    measureCache[key] = wrappedText;\n  }\n  return wrappedText;\n}\n\nconst fontFamilyRegEx = /font-family: ?([^;]*);/;\nconst stripQuotesRegEx = /(\"|')/g;\nlet loadedFontFamilies;\nfunction hasFontFamily(family) {\n  if (!loadedFontFamilies) {\n    loadedFontFamilies = {};\n    const styleSheets = document.styleSheets;\n    for (let i = 0, ii = styleSheets.length; i < ii; ++i) {\n      const styleSheet = /** @type {CSSStyleSheet} */ (styleSheets[i]);\n      try {\n        const cssRules = styleSheet.rules || styleSheet.cssRules;\n        if (cssRules) {\n          for (let j = 0, jj = cssRules.length; j < jj; ++j) {\n            const cssRule = cssRules[j];\n            if (cssRule.type == 5) {\n              const match = cssRule.cssText.match(fontFamilyRegEx);\n              loadedFontFamilies[match[1].replace(stripQuotesRegEx, '')] = true;\n            }\n          }\n        }\n      } catch {\n        // empty catch block\n      }\n    }\n  }\n  return family in loadedFontFamilies;\n}\n\nconst processedFontFamilies = {};\n\n/**\n * @param {Array} fonts Fonts.\n * @param {string} [templateUrl] Template URL.\n * @return {Array} Processed fonts.\n * @private\n */\nexport function getFonts(\n  fonts,\n  templateUrl = 'https://cdn.jsdelivr.net/npm/@fontsource/{font-family}/{fontweight}{-fontstyle}.css',\n) {\n  const fontsKey = fonts.toString();\n  if (fontsKey in processedFontFamilies) {\n    return processedFontFamilies[fontsKey];\n  }\n  const fontDescriptions = [];\n  for (let i = 0, ii = fonts.length; i < ii; ++i) {\n    fonts[i] = fonts[i].replace('Arial Unicode MS', 'Arial');\n    const font = fonts[i];\n    const cssFont = mb2css(font, 1);\n    registerFont(cssFont);\n    const parts = cssFont.split(' ');\n    fontDescriptions.push([\n      parts.slice(3).join(' ').replace(/\"/g, ''),\n      parts[1],\n      parts[0],\n    ]);\n  }\n  for (let i = 0, ii = fontDescriptions.length; i < ii; ++i) {\n    const fontDescription = fontDescriptions[i];\n    const family = fontDescription[0];\n    if (!hasFontFamily(family)) {\n      if (\n        checkedFonts.get(\n          `${fontDescription[2]}\\n${fontDescription[1]} \\n${family}`,\n        ) !== 100\n      ) {\n        const fontUrl = templateUrl\n          .replace('{font-family}', family.replace(/ /g, '-').toLowerCase())\n          .replace('{Font+Family}', family.replace(/ /g, '+'))\n          .replace('{fontweight}', fontDescription[1])\n          .replace(\n            '{-fontstyle}',\n            fontDescription[2].replace('normal', '').replace(/(.+)/, '-$1'),\n          )\n          .replace('{fontstyle}', fontDescription[2]);\n        if (!document.querySelector('link[href=\"' + fontUrl + '\"]')) {\n          const markup = document.createElement('link');\n          markup.href = fontUrl;\n          markup.rel = 'stylesheet';\n          document.head.appendChild(markup);\n        }\n      }\n    }\n  }\n  processedFontFamilies[fontsKey] = fonts;\n  return fonts;\n}\n","/*\nol-mapbox-style - Use Mapbox/MapLibre Style objects with OpenLayers\nCopyright 2016-present ol-mapbox-style contributors\nLicense: https://raw.githubusercontent.com/openlayers/ol-mapbox-style/master/LICENSE\n*/\n\nimport {\n  Color,\n  convertFunction,\n  createPropertyExpression,\n  derefLayers,\n  featureFilter as createFilter,\n  isExpression,\n  isFunction,\n  v8 as spec,\n} from '@maplibre/maplibre-gl-style-spec';\nimport mb2css from 'mapbox-to-css-font';\nimport {toPromise} from 'ol/functions.js';\nimport RenderFeature from 'ol/render/Feature.js';\nimport Circle from 'ol/style/Circle.js';\nimport Fill from 'ol/style/Fill.js';\nimport Icon from 'ol/style/Icon.js';\nimport Stroke from 'ol/style/Stroke.js';\nimport Style from 'ol/style/Style.js';\nimport Text from 'ol/style/Text.js';\n\nimport {applyLetterSpacing, wrapText} from './text.js';\nimport {\n  clearFunctionCache,\n  createCanvas,\n  defaultResolutions,\n  deg2rad,\n  drawIconHalo,\n  drawSDF,\n  getFilterCache,\n  getFunctionCache,\n  getStyleFunctionKey,\n  getZoomForResolution,\n} from './util.js';\n\n/**\n * @typedef {import(\"ol/layer/Vector\").default} VectorLayer\n * @typedef {import(\"ol/layer/VectorTile\").default} VectorTileLayer\n * @typedef {import(\"ol/style/Style\").StyleFunction} StyleFunction\n * @typedef {import('./util.js').ResourceType} ResourceType\n */\n\nconst types = {\n  'Point': 1,\n  'MultiPoint': 1,\n  'LineString': 2,\n  'MultiLineString': 2,\n  'Polygon': 3,\n  'MultiPolygon': 3,\n};\nconst anchor = {\n  'center': [0.5, 0.5],\n  'left': [0, 0.5],\n  'right': [1, 0.5],\n  'top': [0.5, 0],\n  'bottom': [0.5, 1],\n  'top-left': [0, 0],\n  'top-right': [1, 0],\n  'bottom-left': [0, 1],\n  'bottom-right': [1, 1],\n};\n\nconst expressionData = function (rawExpression, propertySpec) {\n  const compiledExpression = createPropertyExpression(\n    rawExpression,\n    propertySpec,\n  );\n  if (compiledExpression.result === 'error') {\n    throw new Error(\n      compiledExpression.value\n        .map((err) => `${err.key}: ${err.message}`)\n        .join(', '),\n    );\n  }\n  return compiledExpression.value;\n};\n\nconst emptyObj = {};\nconst zoomObj = {zoom: 0};\nlet renderFeatureCoordinates, renderFeature;\n\n/**\n * @private\n * @param {Object} layer Gl object layer.\n * @param {string} layoutOrPaint 'layout' or 'paint'.\n * @param {string} property Feature property.\n * @param {number} zoom Zoom.\n * @param {Object} feature Gl feature.\n * @param {Object} [functionCache] Function cache.\n * @param {Object} [featureState] Feature state.\n * @return {?} Value.\n */\nexport function getValue(\n  layer,\n  layoutOrPaint,\n  property,\n  zoom,\n  feature,\n  functionCache,\n  featureState,\n) {\n  const layerId = layer.id;\n  if (!functionCache) {\n    functionCache = {};\n    console.warn('No functionCache provided to getValue()'); //eslint-disable-line no-console\n  }\n  if (!functionCache[layerId]) {\n    functionCache[layerId] = {};\n  }\n  const functions = functionCache[layerId];\n  if (!functions[property]) {\n    let value = (layer[layoutOrPaint] || emptyObj)[property];\n    const propertySpec = spec[`${layoutOrPaint}_${layer.type}`][property];\n    if (value === undefined) {\n      value = propertySpec.default;\n    }\n    let isExpr = isExpression(value);\n    if (!isExpr && isFunction(value)) {\n      value = convertFunction(value, propertySpec);\n      isExpr = true;\n    }\n    if (isExpr) {\n      const compiledExpression = expressionData(value, propertySpec);\n      functions[property] =\n        compiledExpression.evaluate.bind(compiledExpression);\n    } else {\n      if (propertySpec.type == 'color') {\n        value = Color.parse(value);\n      }\n      functions[property] = function () {\n        return value;\n      };\n    }\n  }\n  zoomObj.zoom = zoom;\n  return functions[property](zoomObj, feature, featureState);\n}\n\n/**\n * @private\n * @param {Object} layer Gl object layer.\n * @param {number} zoom Zoom.\n * @param {Object} feature Gl feature.\n * @param {\"icon\"|\"text\"} prefix Style property prefix.\n * @param {Object} [functionCache] Function cache.\n * @return {\"declutter\"|\"obstacle\"|\"none\"} Value.\n */\nfunction getDeclutterMode(layer, zoom, feature, prefix, functionCache) {\n  const allowOverlap = getValue(\n    layer,\n    'layout',\n    `${prefix}-allow-overlap`,\n    zoom,\n    feature,\n    functionCache,\n  );\n  if (!allowOverlap) {\n    return 'declutter';\n  }\n  const ignorePlacement = getValue(\n    layer,\n    'layout',\n    `${prefix}-ignore-placement`,\n    zoom,\n    feature,\n    functionCache,\n  );\n  if (!ignorePlacement) {\n    return 'obstacle';\n  }\n  return 'none';\n}\n\n/**\n * @private\n * @param {string} layerId Layer id.\n * @param {?} filter Filter.\n * @param {Object} feature Feature.\n * @param {number} zoom Zoom.\n * @param {Object} [filterCache] Filter cache.\n * @return {boolean} Filter result.\n */\nfunction evaluateFilter(layerId, filter, feature, zoom, filterCache) {\n  if (!filterCache) {\n    console.warn('No filterCache provided to evaluateFilter()'); //eslint-disable-line no-console\n  }\n  if (!(layerId in filterCache)) {\n    filterCache[layerId] = createFilter(filter).filter;\n  }\n  zoomObj.zoom = zoom;\n  return filterCache[layerId](zoomObj, feature);\n}\n\nlet renderTransparentEnabled = false;\n\n/**\n * Configure whether features with a transparent style should be rendered. When\n * set to `true`, it will be possible to hit detect content that is not visible,\n * like transparent fills of polygons, using `ol/layer/Layer#getFeatures()` or\n * `ol/Map#getFeaturesAtPixel()`\n * @param {boolean} enabled Rendering of transparent elements is enabled.\n * Default is `false`.\n */\nexport function renderTransparent(enabled) {\n  if (enabled !== renderTransparentEnabled) {\n    clearFunctionCache();\n    renderTransparentEnabled = enabled;\n  }\n}\n\n/**\n * @private\n * @param {?} color Color.\n * @param {number} [opacity] Opacity.\n * @return {string} Color.\n */\nfunction colorWithOpacity(color, opacity) {\n  if (color) {\n    if (!renderTransparentEnabled && (color.a === 0 || opacity === 0)) {\n      return undefined;\n    }\n    const a = color.a;\n    opacity = opacity === undefined ? 1 : opacity;\n    return a === 0\n      ? 'transparent'\n      : 'rgba(' +\n          Math.round((color.r * 255) / a) +\n          ',' +\n          Math.round((color.g * 255) / a) +\n          ',' +\n          Math.round((color.b * 255) / a) +\n          ',' +\n          a * opacity +\n          ')';\n  }\n  return color;\n}\n\nconst templateRegEx = /\\{[^{}}]*\\}/g;\n\n/**\n * @private\n * @param {string} text Text.\n * @param {Object} properties Properties.\n * @return {string} Text.\n */\nfunction fromTemplate(text, properties) {\n  return text.replace(templateRegEx, function (match) {\n    return properties[match.slice(1, -1)] || '';\n  });\n}\n\nlet recordLayer = false;\n\n/**\n * Turns recording of the Mapbox/MapLibre Style's `layer` on and off. When turned on,\n * the layer that a rendered feature belongs to will be set as the feature's\n * `mapbox-layer` property.\n * @param {boolean} record Recording of the style layer is on.\n */\nexport function recordStyleLayer(record = false) {\n  recordLayer = record;\n}\n\nexport const styleFunctionArgs = {};\n\n/**\n * Creates a style function from the `glStyle` object for all layers that use\n * the specified `source`, which needs to be a `\"type\": \"vector\"` or\n * `\"type\": \"geojson\"` source and applies it to the specified OpenLayers layer.\n *\n * Two additional properties will be set on the provided layer:\n *\n *  * `mapbox-source`: The `id` of the Mapbox/MapLibre Style document's source that the\n *    OpenLayers layer was created from. Usually `apply()` creates one\n *    OpenLayers layer per Mapbox/MapLibre Style source, unless the layer stack has\n *    layers from different sources in between.\n *  * `mapbox-layers`: The `id`s of the Mapbox/MapLibre Style document's layers that are\n *    included in the OpenLayers layer.\n *\n * This function also works in a web worker. In worker mode, the main thread needs\n * to listen to messages from the worker and respond with another message to make\n * sure that sprite image loading works:\n *\n * ```js\n *  worker.addEventListener('message', event => {\n *   if (event.data.action === 'loadImage') {\n *     const image = new Image();\n *     image.crossOrigin = 'anonymous';\n *     image.addEventListener('load', function() {\n *       createImageBitmap(image, 0, 0, image.width, image.height).then(imageBitmap => {\n *         worker.postMessage({\n *           action: 'imageLoaded',\n *           image: imageBitmap,\n *           src: event.data.src\n *         }, [imageBitmap]);\n *       });\n *     });\n *     image.src = event.data.src;\n *   }\n * });\n * ```\n *\n * @param {VectorLayer|VectorTileLayer} olLayer OpenLayers layer to\n * apply the style to. In addition to the style, the layer will get two\n * properties: `mapbox-source` will be the `id` of the `glStyle`'s source used\n * for the layer, and `mapbox-layers` will be an array of the `id`s of the\n * `glStyle`'s layers.\n * @param {string|Object} glStyle Mapbox/MapLibre Style object.\n * @param {string|Array<string>} sourceOrLayers `source` key or an array of layer `id`s\n * from the Mapbox/MapLibre Style object. When a `source` key is provided, all layers for\n * the specified source will be included in the style function. When layer `id`s\n * are provided, they must be from layers that use the same source.\n * @param {Array<number>} resolutions\n * Resolutions for mapping resolution to zoom level.\n * @param {Object} spriteData Sprite data from the url specified in\n * the Mapbox/MapLibre Style object's `sprite` property. Only required if a `sprite`\n * property is specified in the Mapbox/MapLibre Style object.\n * @param {string|Request|Promise<string|Request>} spriteImageUrl Sprite image url for the sprite\n * specified in the Mapbox/MapLibre Style object's `sprite` property. Only required if a\n * `sprite` property is specified in the Mapbox/MapLibre Style object.\n * @param {function(Array<string>, string=):Array<string>} getFonts Function that\n * receives a font stack and the url template from the GL style's `metadata['ol:webfonts']`\n * property (if set) as arguments, and returns a (modified) font stack that\n * is available. Font names are the names used in the Mapbox/MapLibre Style object. If\n * not provided, the font stack will be used as-is. This function can also be\n * used for loading web fonts.\n * @param {function(VectorLayer|VectorTileLayer, string):HTMLImageElement|HTMLCanvasElement|string|undefined} [getImage]\n * Function that returns an image or a URL for an image name. If the result is an HTMLImageElement, it must already be\n * loaded. The layer can be used to call layer.changed() when the loading and processing of the image has finished.\n * This function can be used for icons not in the sprite or to override sprite icons.\n * @return {StyleFunction} Style function for use in\n * `ol.layer.Vector` or `ol.layer.VectorTile`.\n */\nexport function stylefunction(\n  olLayer,\n  glStyle,\n  sourceOrLayers,\n  resolutions = defaultResolutions,\n  spriteData = undefined,\n  spriteImageUrl = undefined,\n  getFonts = undefined,\n  getImage = undefined,\n) {\n  if (typeof glStyle == 'string') {\n    glStyle = JSON.parse(glStyle);\n  }\n  if (glStyle.version != 8) {\n    throw new Error('glStyle version 8 required.');\n  }\n  styleFunctionArgs[getStyleFunctionKey(glStyle, olLayer)] =\n    Array.from(arguments);\n\n  let spriteImage, spriteImageSize;\n  let spriteImageUnSDFed;\n\n  if (spriteImageUrl) {\n    if (typeof Image !== 'undefined') {\n      const img = new Image();\n      let blobUrl;\n      toPromise(() => spriteImageUrl).then((spriteImageUrl) => {\n        if (spriteImageUrl instanceof Request) {\n          fetch(spriteImageUrl)\n            .then((response) => response.blob())\n            .then((blob) => {\n              blobUrl = URL.createObjectURL(blob);\n              img.src = blobUrl;\n            })\n            .catch(() => {});\n        } else {\n          img.crossOrigin = 'anonymous';\n          img.src = spriteImageUrl;\n          if (blobUrl) {\n            URL.revokeObjectURL(blobUrl);\n          }\n        }\n      });\n      img.onload = function () {\n        spriteImage = img;\n        spriteImageSize = [img.width, img.height];\n        olLayer.changed();\n        img.onload = null;\n      };\n    } else if (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope) { //eslint-disable-line\n      const worker = /** @type {*} */ (self);\n      // Main thread needs to handle 'loadImage' and dispatch 'imageLoaded'\n      worker.postMessage({\n        action: 'loadImage',\n        src: spriteImageUrl,\n      });\n      worker.addEventListener('message', function handler(event) {\n        if (\n          event.data.action === 'imageLoaded' &&\n          event.data.src === spriteImageUrl\n        ) {\n          spriteImage = event.data.image;\n          spriteImageSize = [spriteImage.width, spriteImage.height];\n        }\n      });\n    }\n  }\n\n  const allLayers = derefLayers(glStyle.layers);\n\n  const layersBySourceLayer = {};\n  const mapboxLayers = [];\n\n  const iconImageCache = {};\n  const patternCache = {};\n  const functionCache = getFunctionCache(glStyle);\n  const filterCache = getFilterCache(glStyle);\n\n  let mapboxSource;\n  for (let i = 0, ii = allLayers.length; i < ii; ++i) {\n    const layer = allLayers[i];\n    const layerId = layer.id;\n    if (\n      (typeof sourceOrLayers == 'string' && layer.source == sourceOrLayers) ||\n      (Array.isArray(sourceOrLayers) && sourceOrLayers.indexOf(layerId) !== -1)\n    ) {\n      const sourceLayer = layer['source-layer'];\n      if (!mapboxSource) {\n        mapboxSource = layer.source;\n        const source = glStyle.sources[mapboxSource];\n        if (!source) {\n          throw new Error(`Source \"${mapboxSource}\" is not defined`);\n        }\n        const type = source.type;\n        if (type !== 'vector' && type !== 'geojson') {\n          throw new Error(\n            `Source \"${mapboxSource}\" is not of type \"vector\" or \"geojson\", but \"${type}\"`,\n          );\n        }\n      } else if (layer.source !== mapboxSource) {\n        throw new Error(\n          `Layer \"${layerId}\" does not use source \"${mapboxSource}`,\n        );\n      }\n      let layers = layersBySourceLayer[sourceLayer];\n      if (!layers) {\n        layers = [];\n        layersBySourceLayer[sourceLayer] = layers;\n      }\n      layers.push({\n        layer: layer,\n        index: i,\n      });\n      mapboxLayers.push(layerId);\n    }\n  }\n\n  const textHalo = new Stroke();\n  const textColor = new Fill();\n\n  const styles = [];\n\n  /**\n   * @param {import(\"ol/Feature\").default|import(\"ol/render/Feature\").default} feature Feature.\n   * @param {number} resolution Resolution.\n   * @param {string} [onlyLayer] Calculate style for this layer only.\n   * @return {Array<import(\"ol/style/Style\").default>} Style.\n   */\n  const styleFunction = function (feature, resolution, onlyLayer) {\n    const properties = feature.getProperties();\n    const layers = layersBySourceLayer[properties.layer];\n    if (!layers) {\n      return undefined;\n    }\n    let zoom = resolutions.indexOf(resolution);\n    if (zoom == -1) {\n      zoom = getZoomForResolution(resolution, resolutions);\n    }\n    const type = types[feature.getGeometry().getType()];\n    const f = {\n      id: feature.getId(),\n      properties: properties,\n      type: type,\n    };\n    const featureState = olLayer.get('mapbox-featurestate')[feature.getId()];\n    let stylesLength = -1;\n    let featureBelongsToLayer;\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n      const layerData = layers[i];\n      const layer = layerData.layer;\n      const layerId = layer.id;\n      if (onlyLayer !== undefined && onlyLayer !== layerId) {\n        continue;\n      }\n\n      const layout = layer.layout || emptyObj;\n      const paint = layer.paint || emptyObj;\n      if (\n        layout.visibility === 'none' ||\n        ('minzoom' in layer && zoom < layer.minzoom) ||\n        ('maxzoom' in layer && zoom >= layer.maxzoom)\n      ) {\n        continue;\n      }\n      const filter = layer.filter;\n      if (!filter || evaluateFilter(layerId, filter, f, zoom, filterCache)) {\n        featureBelongsToLayer = layer;\n        let color, opacity, fill, stroke, strokeColor, style;\n        const index = layerData.index;\n        if (\n          type == 3 &&\n          (layer.type == 'fill' || layer.type == 'fill-extrusion')\n        ) {\n          opacity = getValue(\n            layer,\n            'paint',\n            layer.type + '-opacity',\n            zoom,\n            f,\n            functionCache,\n            featureState,\n          );\n          if (layer.type + '-pattern' in paint) {\n            const fillIcon = getValue(\n              layer,\n              'paint',\n              layer.type + '-pattern',\n              zoom,\n              f,\n              functionCache,\n              featureState,\n            );\n            if (fillIcon) {\n              const icon =\n                typeof fillIcon === 'string'\n                  ? fromTemplate(fillIcon, properties)\n                  : fillIcon.toString();\n              if (spriteImage && spriteData && spriteData[icon]) {\n                ++stylesLength;\n                style = styles[stylesLength];\n                if (\n                  !style ||\n                  !style.getFill() ||\n                  style.getStroke() ||\n                  style.getText()\n                ) {\n                  style = new Style({\n                    fill: new Fill(),\n                  });\n                  styles[stylesLength] = style;\n                }\n                fill = style.getFill();\n                style.setZIndex(index);\n                const icon_cache_key = icon + '.' + opacity;\n                let pattern = patternCache[icon_cache_key];\n                if (!pattern) {\n                  const spriteImageData = spriteData[icon];\n                  const canvas = createCanvas(\n                    spriteImageData.width,\n                    spriteImageData.height,\n                  );\n                  const ctx = /** @type {CanvasRenderingContext2D} */ (\n                    canvas.getContext('2d')\n                  );\n                  ctx.globalAlpha = opacity;\n                  ctx.drawImage(\n                    spriteImage,\n                    spriteImageData.x,\n                    spriteImageData.y,\n                    spriteImageData.width,\n                    spriteImageData.height,\n                    0,\n                    0,\n                    spriteImageData.width,\n                    spriteImageData.height,\n                  );\n                  pattern = ctx.createPattern(canvas, 'repeat');\n                  patternCache[icon_cache_key] = pattern;\n                }\n                fill.setColor(pattern);\n              }\n            }\n          } else {\n            color = colorWithOpacity(\n              getValue(\n                layer,\n                'paint',\n                layer.type + '-color',\n                zoom,\n                f,\n                functionCache,\n                featureState,\n              ),\n              opacity,\n            );\n            if (layer.type + '-outline-color' in paint) {\n              strokeColor = colorWithOpacity(\n                getValue(\n                  layer,\n                  'paint',\n                  layer.type + '-outline-color',\n                  zoom,\n                  f,\n                  functionCache,\n                  featureState,\n                ),\n                opacity,\n              );\n            }\n            if (!strokeColor) {\n              strokeColor = color;\n            }\n            if (color || strokeColor) {\n              ++stylesLength;\n              style = styles[stylesLength];\n              if (\n                !style ||\n                (color && !style.getFill()) ||\n                (!color && style.getFill()) ||\n                (strokeColor && !style.getStroke()) ||\n                (!strokeColor && style.getStroke()) ||\n                style.getText()\n              ) {\n                style = new Style({\n                  fill: color ? new Fill() : undefined,\n                  stroke: strokeColor ? new Stroke() : undefined,\n                });\n                styles[stylesLength] = style;\n              }\n              if (color) {\n                fill = style.getFill();\n                fill.setColor(color);\n              }\n              if (strokeColor) {\n                stroke = style.getStroke();\n                stroke.setColor(strokeColor);\n                stroke.setWidth(0.5);\n              }\n              style.setZIndex(index);\n            }\n          }\n        }\n        if (type != 1 && layer.type == 'line') {\n          if (!('line-pattern' in paint)) {\n            color = colorWithOpacity(\n              getValue(\n                layer,\n                'paint',\n                'line-color',\n                zoom,\n                f,\n                functionCache,\n                featureState,\n              ),\n              getValue(\n                layer,\n                'paint',\n                'line-opacity',\n                zoom,\n                f,\n                functionCache,\n                featureState,\n              ),\n            );\n          } else {\n            color = undefined;\n          }\n          const width = getValue(\n            layer,\n            'paint',\n            'line-width',\n            zoom,\n            f,\n            functionCache,\n            featureState,\n          );\n          if (color && width > 0) {\n            ++stylesLength;\n            style = styles[stylesLength];\n            if (\n              !style ||\n              !style.getStroke() ||\n              style.getFill() ||\n              style.getText()\n            ) {\n              style = new Style({\n                stroke: new Stroke(),\n              });\n              styles[stylesLength] = style;\n            }\n            stroke = style.getStroke();\n            stroke.setLineCap(\n              getValue(\n                layer,\n                'layout',\n                'line-cap',\n                zoom,\n                f,\n                functionCache,\n                featureState,\n              ),\n            );\n            stroke.setLineJoin(\n              getValue(\n                layer,\n                'layout',\n                'line-join',\n                zoom,\n                f,\n                functionCache,\n                featureState,\n              ),\n            );\n            stroke.setMiterLimit(\n              getValue(\n                layer,\n                'layout',\n                'line-miter-limit',\n                zoom,\n                f,\n                functionCache,\n                featureState,\n              ),\n            );\n            stroke.setColor(color);\n            stroke.setWidth(width);\n            stroke.setLineDash(\n              paint['line-dasharray']\n                ? getValue(\n                    layer,\n                    'paint',\n                    'line-dasharray',\n                    zoom,\n                    f,\n                    functionCache,\n                    featureState,\n                  ).map(function (x) {\n                    return x * width;\n                  })\n                : null,\n            );\n            style.setZIndex(index);\n          }\n        }\n\n        let hasImage = false;\n        let text = null;\n        let placementAngle = 0;\n        let icon, iconImg, skipLabel;\n        if ((type == 1 || type == 2) && 'icon-image' in layout) {\n          const iconImage = getValue(\n            layer,\n            'layout',\n            'icon-image',\n            zoom,\n            f,\n            functionCache,\n            featureState,\n          );\n          if (iconImage) {\n            icon =\n              typeof iconImage === 'string'\n                ? fromTemplate(iconImage, properties)\n                : iconImage.toString();\n            let styleGeom = undefined;\n            const imageElement = getImage ? getImage(olLayer, icon) : undefined;\n            if (\n              (spriteImage && spriteData && spriteData[icon]) ||\n              imageElement\n            ) {\n              const iconRotationAlignment = getValue(\n                layer,\n                'layout',\n                'icon-rotation-alignment',\n                zoom,\n                f,\n                functionCache,\n                featureState,\n              );\n              if (type == 2) {\n                const geom = /** @type {*} */ (feature.getGeometry());\n                // ol package and ol-debug.js only\n                if (geom.getFlatMidpoint || geom.getFlatMidpoints) {\n                  const extent = geom.getExtent();\n                  const size = Math.sqrt(\n                    Math.max(\n                      Math.pow((extent[2] - extent[0]) / resolution, 2),\n                      Math.pow((extent[3] - extent[1]) / resolution, 2),\n                    ),\n                  );\n                  if (size > 150) {\n                    //FIXME Do not hard-code a size of 150\n                    const midpoint =\n                      geom.getType() === 'MultiLineString'\n                        ? geom.getFlatMidpoints()\n                        : geom.getFlatMidpoint();\n                    if (!renderFeature) {\n                      renderFeatureCoordinates = [NaN, NaN];\n                      renderFeature = new RenderFeature(\n                        'Point',\n                        renderFeatureCoordinates,\n                        [],\n                        2,\n                        {},\n                        undefined,\n                      );\n                    }\n                    styleGeom = renderFeature;\n                    renderFeatureCoordinates[0] = midpoint[0];\n                    renderFeatureCoordinates[1] = midpoint[1];\n                    const placement = getValue(\n                      layer,\n                      'layout',\n                      'symbol-placement',\n                      zoom,\n                      f,\n                      functionCache,\n                      featureState,\n                    );\n                    if (\n                      placement === 'line' &&\n                      iconRotationAlignment === 'map'\n                    ) {\n                      const stride = geom.getStride();\n                      const coordinates = geom.getFlatCoordinates();\n                      for (\n                        let i = 0, ii = coordinates.length - stride;\n                        i < ii;\n                        i += stride\n                      ) {\n                        const x1 = coordinates[i];\n                        const y1 = coordinates[i + 1];\n                        const x2 = coordinates[i + stride];\n                        const y2 = coordinates[i + stride + 1];\n                        const minX = Math.min(x1, x2);\n                        const maxX = Math.max(x1, x2);\n                        const xM = midpoint[0];\n                        const yM = midpoint[1];\n                        const dotProduct =\n                          (y2 - y1) * (xM - x1) - (x2 - x1) * (yM - y1);\n                        if (\n                          Math.abs(dotProduct) < 0.001 && //midpoint is aligned with the segment\n                          xM <= maxX &&\n                          xM >= minX //midpoint is on the segment and not outside it\n                        ) {\n                          placementAngle = Math.atan2(y1 - y2, x2 - x1);\n                          break;\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n              if (type !== 2 || styleGeom) {\n                const iconSize = getValue(\n                  layer,\n                  'layout',\n                  'icon-size',\n                  zoom,\n                  f,\n                  functionCache,\n                  featureState,\n                );\n                const iconColor =\n                  paint['icon-color'] !== undefined\n                    ? getValue(\n                        layer,\n                        'paint',\n                        'icon-color',\n                        zoom,\n                        f,\n                        functionCache,\n                        featureState,\n                      )\n                    : null;\n                if (!iconColor || iconColor.a !== 0) {\n                  const haloColor = getValue(\n                    layer,\n                    'paint',\n                    'icon-halo-color',\n                    zoom,\n                    f,\n                    functionCache,\n                    featureState,\n                  );\n                  const haloWidth = getValue(\n                    layer,\n                    'paint',\n                    'icon-halo-width',\n                    zoom,\n                    f,\n                    functionCache,\n                    featureState,\n                  );\n                  let iconCacheKey = `${icon}.${iconSize}.${haloWidth}.${haloColor}`;\n                  if (iconColor !== null) {\n                    iconCacheKey += `.${iconColor}`;\n                  }\n                  iconImg = iconImageCache[iconCacheKey];\n                  if (!iconImg) {\n                    const declutterMode = getDeclutterMode(\n                      layer,\n                      zoom,\n                      f,\n                      'icon',\n                      functionCache,\n                    );\n                    let displacement;\n                    if ('icon-offset' in layout) {\n                      displacement = getValue(\n                        layer,\n                        'layout',\n                        'icon-offset',\n                        zoom,\n                        f,\n                        functionCache,\n                        featureState,\n                      ).slice(0);\n                      displacement[0] *= iconSize;\n                      displacement[1] *= -iconSize;\n                    }\n                    let color = iconColor\n                      ? [\n                          iconColor.r * 255,\n                          iconColor.g * 255,\n                          iconColor.b * 255,\n                          iconColor.a,\n                        ]\n                      : undefined;\n                    if (imageElement) {\n                      const iconOptions = {\n                        color: color,\n                        rotateWithView: iconRotationAlignment === 'map',\n                        displacement: displacement,\n                        declutterMode: declutterMode,\n                        scale: iconSize,\n                      };\n                      if (typeof imageElement === 'string') {\n                        // it is a src URL\n                        iconOptions.src = imageElement;\n                      } else {\n                        iconOptions.img = imageElement;\n                        iconOptions.imgSize = [\n                          imageElement.width,\n                          imageElement.height,\n                        ];\n                      }\n                      iconImg = new Icon(iconOptions);\n                    } else {\n                      const spriteImageData = spriteData[icon];\n                      let img, size, offset;\n                      if (haloWidth) {\n                        if (spriteImageData.sdf) {\n                          img = drawIconHalo(\n                            drawSDF(\n                              spriteImage,\n                              spriteImageData,\n                              iconColor || [0, 0, 0, 1],\n                            ),\n                            {\n                              x: 0,\n                              y: 0,\n                              width: spriteImageData.width,\n                              height: spriteImageData.height,\n                              pixelRatio: spriteImageData.pixelRatio,\n                            },\n                            haloWidth,\n                            haloColor,\n                          );\n                          color = undefined; // do not tint haloed icons\n                        } else {\n                          img = drawIconHalo(\n                            spriteImage,\n                            spriteImageData,\n                            haloWidth,\n                            haloColor,\n                          );\n                        }\n                      } else {\n                        if (spriteImageData.sdf) {\n                          if (!spriteImageUnSDFed) {\n                            spriteImageUnSDFed = drawSDF(\n                              spriteImage,\n                              {\n                                x: 0,\n                                y: 0,\n                                width: spriteImageSize[0],\n                                height: spriteImageSize[1],\n                              },\n                              {r: 1, g: 1, b: 1, a: 1},\n                            );\n                          }\n                          img = spriteImageUnSDFed;\n                        } else {\n                          img = spriteImage;\n                        }\n                        size = [spriteImageData.width, spriteImageData.height];\n                        offset = [spriteImageData.x, spriteImageData.y];\n                      }\n                      iconImg = new Icon({\n                        color: color,\n                        img: img,\n                        // @ts-ignore\n                        imgSize: spriteImageSize,\n                        size: size,\n                        offset: offset,\n                        rotateWithView: iconRotationAlignment === 'map',\n                        scale: iconSize / spriteImageData.pixelRatio,\n                        displacement: displacement,\n                        declutterMode: declutterMode,\n                      });\n                    }\n                    iconImageCache[iconCacheKey] = iconImg;\n                  }\n                }\n                if (iconImg) {\n                  ++stylesLength;\n                  style = styles[stylesLength];\n                  if (\n                    !style ||\n                    !style.getImage() ||\n                    style.getFill() ||\n                    style.getStroke()\n                  ) {\n                    style = new Style();\n                    styles[stylesLength] = style;\n                  }\n                  style.setGeometry(styleGeom);\n                  iconImg.setRotation(\n                    placementAngle +\n                      deg2rad(\n                        getValue(\n                          layer,\n                          'layout',\n                          'icon-rotate',\n                          zoom,\n                          f,\n                          functionCache,\n                          featureState,\n                        ),\n                      ),\n                  );\n                  iconImg.setOpacity(\n                    getValue(\n                      layer,\n                      'paint',\n                      'icon-opacity',\n                      zoom,\n                      f,\n                      functionCache,\n                      featureState,\n                    ),\n                  );\n                  iconImg.setAnchor(\n                    anchor[\n                      getValue(\n                        layer,\n                        'layout',\n                        'icon-anchor',\n                        zoom,\n                        f,\n                        functionCache,\n                        featureState,\n                      )\n                    ],\n                  );\n                  style.setImage(iconImg);\n                  text = style.getText();\n                  style.setText(undefined);\n                  style.setZIndex(index);\n                  hasImage = true;\n                  skipLabel = false;\n                }\n              } else {\n                skipLabel = true;\n              }\n            }\n          }\n        }\n\n        if (type == 1 && layer.type === 'circle') {\n          ++stylesLength;\n          style = styles[stylesLength];\n          if (\n            !style ||\n            !style.getImage() ||\n            style.getFill() ||\n            style.getStroke()\n          ) {\n            style = new Style();\n            styles[stylesLength] = style;\n          }\n          const circleRadius =\n            'circle-radius' in paint\n              ? getValue(\n                  layer,\n                  'paint',\n                  'circle-radius',\n                  zoom,\n                  f,\n                  functionCache,\n                  featureState,\n                )\n              : 5;\n          const circleStrokeColor = colorWithOpacity(\n            getValue(\n              layer,\n              'paint',\n              'circle-stroke-color',\n              zoom,\n              f,\n              functionCache,\n              featureState,\n            ),\n            getValue(\n              layer,\n              'paint',\n              'circle-stroke-opacity',\n              zoom,\n              f,\n              functionCache,\n              featureState,\n            ),\n          );\n\n          const circleTranslate = getValue(\n            layer,\n            'paint',\n            'circle-translate',\n            zoom,\n            f,\n            functionCache,\n            featureState,\n          );\n          const circleColor = colorWithOpacity(\n            getValue(\n              layer,\n              'paint',\n              'circle-color',\n              zoom,\n              f,\n              functionCache,\n              featureState,\n            ),\n            getValue(\n              layer,\n              'paint',\n              'circle-opacity',\n              zoom,\n              f,\n              functionCache,\n              featureState,\n            ),\n          );\n          const circleStrokeWidth = getValue(\n            layer,\n            'paint',\n            'circle-stroke-width',\n            zoom,\n            f,\n            functionCache,\n            featureState,\n          );\n          const cache_key =\n            circleRadius +\n            '.' +\n            circleStrokeColor +\n            '.' +\n            circleColor +\n            '.' +\n            circleStrokeWidth +\n            '.' +\n            circleTranslate[0] +\n            '.' +\n            circleTranslate[1];\n\n          iconImg = iconImageCache[cache_key];\n          if (!iconImg) {\n            iconImg = new Circle({\n              radius: circleRadius,\n              displacement: [circleTranslate[0], -circleTranslate[1]],\n              stroke:\n                circleStrokeColor && circleStrokeWidth > 0\n                  ? new Stroke({\n                      width: circleStrokeWidth,\n                      color: circleStrokeColor,\n                    })\n                  : undefined,\n              fill: circleColor\n                ? new Fill({\n                    color: circleColor,\n                  })\n                : undefined,\n              declutterMode: 'none',\n            });\n            iconImageCache[cache_key] = iconImg;\n          }\n          style.setImage(iconImg);\n          text = style.getText();\n          style.setText(undefined);\n          style.setGeometry(undefined);\n          style.setZIndex(index);\n          hasImage = true;\n        }\n\n        let label, font, textLineHeight, textSize, letterSpacing, maxTextWidth;\n        if ('text-field' in layout) {\n          textSize = Math.round(\n            getValue(\n              layer,\n              'layout',\n              'text-size',\n              zoom,\n              f,\n              functionCache,\n              featureState,\n            ),\n          );\n          const fontArray = getValue(\n            layer,\n            'layout',\n            'text-font',\n            zoom,\n            f,\n            functionCache,\n            featureState,\n          );\n          textLineHeight = getValue(\n            layer,\n            'layout',\n            'text-line-height',\n            zoom,\n            f,\n            functionCache,\n            featureState,\n          );\n          font = mb2css(\n            getFonts\n              ? getFonts(\n                  fontArray,\n                  glStyle.metadata\n                    ? glStyle.metadata['ol:webfonts']\n                    : undefined,\n                )\n              : fontArray,\n            textSize,\n            textLineHeight,\n          );\n          if (!font.includes('sans-serif')) {\n            font += ',sans-serif';\n          }\n          letterSpacing = getValue(\n            layer,\n            'layout',\n            'text-letter-spacing',\n            zoom,\n            f,\n            functionCache,\n            featureState,\n          );\n          maxTextWidth = getValue(\n            layer,\n            'layout',\n            'text-max-width',\n            zoom,\n            f,\n            functionCache,\n            featureState,\n          );\n          const textField = getValue(\n            layer,\n            'layout',\n            'text-field',\n            zoom,\n            f,\n            functionCache,\n            featureState,\n          );\n          if (typeof textField === 'object' && textField.sections) {\n            if (textField.sections.length === 1) {\n              label = textField.toString();\n            } else {\n              label = textField.sections.reduce((acc, chunk, i) => {\n                const fonts = chunk.fontStack\n                  ? chunk.fontStack.split(',')\n                  : fontArray;\n                const chunkFont = mb2css(\n                  getFonts ? getFonts(fonts) : fonts,\n                  textSize * (chunk.scale || 1),\n                  textLineHeight,\n                );\n                let text = chunk.text;\n                if (text === '\\n') {\n                  acc.push('\\n', '');\n                  return acc;\n                }\n                if (type == 2) {\n                  acc.push(applyLetterSpacing(text, letterSpacing), chunkFont);\n                  return acc;\n                }\n                text = wrapText(\n                  text,\n                  chunkFont,\n                  maxTextWidth,\n                  letterSpacing,\n                ).split('\\n');\n                for (let i = 0, ii = text.length; i < ii; ++i) {\n                  if (i > 0) {\n                    acc.push('\\n', '');\n                  }\n                  acc.push(text[i], chunkFont);\n                }\n                return acc;\n              }, []);\n            }\n          } else {\n            label = fromTemplate(textField, properties).trim();\n          }\n          opacity = getValue(\n            layer,\n            'paint',\n            'text-opacity',\n            zoom,\n            f,\n            functionCache,\n            featureState,\n          );\n        }\n        if (label && opacity && !skipLabel) {\n          if (!hasImage) {\n            ++stylesLength;\n            style = styles[stylesLength];\n            if (\n              !style ||\n              !style.getText() ||\n              style.getFill() ||\n              style.getStroke()\n            ) {\n              style = new Style();\n              styles[stylesLength] = style;\n            }\n            style.setImage(undefined);\n            style.setGeometry(undefined);\n          }\n          const declutterMode = getDeclutterMode(\n            layer,\n            zoom,\n            f,\n            'text',\n            functionCache,\n          );\n          if (!style.getText()) {\n            style.setText(text);\n          }\n          text = style.getText();\n          if (\n            !text ||\n            ('getDeclutterMode' in text &&\n              text.getDeclutterMode() !== declutterMode)\n          ) {\n            text = new Text({\n              padding: [2, 2, 2, 2],\n              // @ts-ignore\n              declutterMode: declutterMode,\n            });\n            style.setText(text);\n          }\n          const textTransform = getValue(\n            layer,\n            'layout',\n            'text-transform',\n            zoom,\n            f,\n            functionCache,\n            featureState,\n          );\n          if (textTransform == 'uppercase') {\n            label = Array.isArray(label)\n              ? label.map((t, i) => (i % 2 ? t : t.toUpperCase()))\n              : label.toUpperCase();\n          } else if (textTransform == 'lowercase') {\n            label = Array.isArray(label)\n              ? label.map((t, i) => (i % 2 ? t : t.toLowerCase()))\n              : label.toLowerCase();\n          }\n          const wrappedLabel = Array.isArray(label)\n            ? label\n            : type == 2\n              ? applyLetterSpacing(label, letterSpacing)\n              : wrapText(label, font, maxTextWidth, letterSpacing);\n          text.setText(wrappedLabel);\n          text.setFont(font);\n          text.setRotation(\n            deg2rad(\n              getValue(\n                layer,\n                'layout',\n                'text-rotate',\n                zoom,\n                f,\n                functionCache,\n                featureState,\n              ),\n            ),\n          );\n          if (typeof text.setKeepUpright === 'function') {\n            const keepUpright = getValue(\n              layer,\n              'layout',\n              'text-keep-upright',\n              zoom,\n              f,\n              functionCache,\n              featureState,\n            );\n            text.setKeepUpright(keepUpright);\n          }\n          const textAnchor = getValue(\n            layer,\n            'layout',\n            'text-anchor',\n            zoom,\n            f,\n            functionCache,\n            featureState,\n          );\n          const placement =\n            hasImage || type == 1\n              ? 'point'\n              : getValue(\n                  layer,\n                  'layout',\n                  'symbol-placement',\n                  zoom,\n                  f,\n                  functionCache,\n                  featureState,\n                );\n          let textAlign;\n          if (placement === 'line-center') {\n            text.setPlacement('line');\n            textAlign = 'center';\n          } else {\n            text.setPlacement(placement);\n          }\n          if (placement === 'line' && typeof text.setRepeat === 'function') {\n            const symbolSpacing = getValue(\n              layer,\n              'layout',\n              'symbol-spacing',\n              zoom,\n              f,\n              functionCache,\n              featureState,\n            );\n            text.setRepeat(symbolSpacing * 2);\n          }\n          text.setOverflow(placement === 'point');\n          let textHaloWidth = getValue(\n            layer,\n            'paint',\n            'text-halo-width',\n            zoom,\n            f,\n            functionCache,\n            featureState,\n          );\n          const textOffset = getValue(\n            layer,\n            'layout',\n            'text-offset',\n            zoom,\n            f,\n            functionCache,\n            featureState,\n          );\n          const textTranslate = getValue(\n            layer,\n            'paint',\n            'text-translate',\n            zoom,\n            f,\n            functionCache,\n            featureState,\n          );\n          // Text offset has to take halo width and line height into account\n          let vOffset = 0;\n          let hOffset = 0;\n          if (placement == 'point') {\n            textAlign = 'center';\n            if (textAnchor.indexOf('left') !== -1) {\n              textAlign = 'left';\n              hOffset = textHaloWidth;\n            } else if (textAnchor.indexOf('right') !== -1) {\n              textAlign = 'right';\n              hOffset = -textHaloWidth;\n            }\n            const textRotationAlignment = getValue(\n              layer,\n              'layout',\n              'text-rotation-alignment',\n              zoom,\n              f,\n              functionCache,\n              featureState,\n            );\n            text.setRotateWithView(textRotationAlignment == 'map');\n          } else {\n            text.setMaxAngle(\n              (deg2rad(\n                getValue(\n                  layer,\n                  'layout',\n                  'text-max-angle',\n                  zoom,\n                  f,\n                  functionCache,\n                  featureState,\n                ),\n              ) *\n                label.length) /\n                wrappedLabel.length,\n            );\n            text.setRotateWithView(false);\n          }\n          text.setTextAlign(textAlign);\n          let textBaseline = 'middle';\n          if (textAnchor.indexOf('bottom') == 0) {\n            textBaseline = 'bottom';\n            vOffset = -textHaloWidth - 0.5 * (textLineHeight - 1) * textSize;\n          } else if (textAnchor.indexOf('top') == 0) {\n            textBaseline = 'top';\n            vOffset = textHaloWidth + 0.5 * (textLineHeight - 1) * textSize;\n          }\n          text.setTextBaseline(textBaseline);\n          const textJustify = getValue(\n            layer,\n            'layout',\n            'text-justify',\n            zoom,\n            f,\n            functionCache,\n            featureState,\n          );\n          text.setJustify(textJustify === 'auto' ? undefined : textJustify);\n          text.setOffsetX(\n            textOffset[0] * textSize + hOffset + textTranslate[0],\n          );\n          text.setOffsetY(\n            textOffset[1] * textSize + vOffset + textTranslate[1],\n          );\n          textColor.setColor(\n            colorWithOpacity(\n              getValue(\n                layer,\n                'paint',\n                'text-color',\n                zoom,\n                f,\n                functionCache,\n                featureState,\n              ),\n              opacity,\n            ),\n          );\n          text.setFill(textColor);\n          const haloColor = colorWithOpacity(\n            getValue(\n              layer,\n              'paint',\n              'text-halo-color',\n              zoom,\n              f,\n              functionCache,\n              featureState,\n            ),\n            opacity,\n          );\n          if (haloColor && textHaloWidth > 0) {\n            textHalo.setColor(haloColor);\n            // spec here : https://docs.mapbox.com/mapbox-gl-js/style-spec/#paint-symbol-text-halo-width\n            // Halo width must be doubled because it is applied around the center of the text outline\n            textHaloWidth *= 2;\n            // 1/4 of text size (spec) x 2\n            const halfTextSize = 0.5 * textSize;\n            textHalo.setWidth(\n              textHaloWidth <= halfTextSize ? textHaloWidth : halfTextSize,\n            );\n            text.setStroke(textHalo);\n          } else {\n            text.setStroke(undefined);\n          }\n          const textPadding = getValue(\n            layer,\n            'layout',\n            'text-padding',\n            zoom,\n            f,\n            functionCache,\n            featureState,\n          );\n          const padding = text.getPadding();\n          if (textPadding !== padding[0]) {\n            padding[0] = textPadding;\n            padding[1] = textPadding;\n            padding[2] = textPadding;\n            padding[3] = textPadding;\n          }\n          style.setZIndex(index);\n        }\n      }\n    }\n\n    if (stylesLength > -1) {\n      styles.length = stylesLength + 1;\n      if (recordLayer) {\n        if ('set' in feature) {\n          // ol/Feature\n          feature.set('mapbox-layer', featureBelongsToLayer);\n        } else {\n          // ol/render/Feature\n          feature.getProperties()['mapbox-layer'] = featureBelongsToLayer;\n        }\n      }\n      return styles;\n    }\n    return undefined;\n  };\n\n  olLayer.setStyle(styleFunction);\n  olLayer.set('mapbox-source', mapboxSource);\n  olLayer.set('mapbox-layers', mapboxLayers);\n  olLayer.set('mapbox-featurestate', olLayer.get('mapbox-featurestate') || {});\n  return styleFunction;\n}\n\n/**\n * Get the the style for a specific Mapbox layer only. This can be useful for creating a legend.\n * @param {import(\"ol/Feature\").default|import(\"ol/render/Feature\").default} feature OpenLayers feature.\n * @param {number} resolution View resolution.\n * @param {import(\"ol/layer\").Vector|import(\"ol/layer\").VectorTile} olLayer OpenLayers layer.\n * @param {string} layerId Id of the Mapbox layer to get the style for\n * @return {Array<import(\"ol/style\").Style>} Styles for the provided Mapbox layer.\n */\nexport function getStyleForLayer(feature, resolution, olLayer, layerId) {\n  const evaluateStyle = olLayer.getStyleFunction();\n  if (evaluateStyle.length === 3) {\n    // @ts-ignore\n    return evaluateStyle(feature, resolution, layerId);\n  }\n  return undefined;\n}\n\nexport {\n  colorWithOpacity as _colorWithOpacity,\n  evaluateFilter as _evaluateFilter,\n  fromTemplate as _fromTemplate,\n  getValue as _getValue,\n};\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = /** @type {T} */ (elements.pop());\n      priorities[0] = /** @type {number} */ (priorities.pop());\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(\n      !(this.keyFunction_(element) in this.queuedElements_),\n      'Tried to enqueue an `element` that was already added to the queue',\n    );\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/TileQueue\n */\nimport TileState from './TileState.js';\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import('./tilecoord.js').TileCoord, number): number} PriorityFunction\n */\n\n/**\n * @typedef {[import('./Tile.js').default, string, import('./tilecoord.js').TileCoord, number]} TileQueueElement\n */\n\n/**\n * @extends PriorityQueue<TileQueueElement>}\n */\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      (element) => tilePriorityFunction.apply(null, element),\n      (element) => element[0].getKey(),\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {TileQueueElement} element Element.\n   * @return {boolean} The element was added to the queue.\n   * @override\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      state === TileState.LOADED ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      if (state !== TileState.ERROR) {\n        tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      }\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      const tile = this.dequeue()[0];\n      const tileKey = tile.getKey();\n      const state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./Map.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution,\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number|undefined} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, isMoving, centerShift) {\n      if (!center) {\n        return undefined;\n      }\n      if (!resolution && !onlyCenter) {\n        return center;\n      }\n      const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n      const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n      const shiftX = centerShift ? centerShift[0] : 0;\n      const shiftY = centerShift ? centerShift[1] : 0;\n      let minX = extent[0] + viewWidth / 2 + shiftX;\n      let maxX = extent[2] - viewWidth / 2 + shiftX;\n      let minY = extent[1] + viewHeight / 2 + shiftY;\n      let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n      // note: when zooming out of bounds, min and max values for x and y may\n      // end up inverted (min > max); this has to be accounted for\n      if (minX > maxX) {\n        minX = (maxX + minX) / 2;\n        maxX = minX;\n      }\n      if (minY > maxY) {\n        minY = (maxY + minY) / 2;\n        maxY = minY;\n      }\n\n      let x = clamp(center[0], minX, maxX);\n      let y = clamp(center[1], minY, maxY);\n\n      // during an interaction, allow some overscroll\n      if (isMoving && smooth && resolution) {\n        const ratio = 30 * resolution;\n        x +=\n          -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n        y +=\n          -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n      }\n\n      return [x, y];\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {memoizeOne} from '../functions.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {abstract} from '../util.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @typedef {'XY' | 'XYZ' | 'XYM' | 'XYZM'} GeometryLayout\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available.\n */\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString' | 'MultiPolygon' | 'GeometryCollection' | 'Circle'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, or `'Circle'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/** @type {import('../coordinate.js').Coordinate} */\nconst tmpPoint = [NaN, NaN];\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(\n      (revision, squaredTolerance, transform) => {\n        if (!transform) {\n          return this.getSimplifiedGeometry(squaredTolerance);\n        }\n        const clone = this.clone();\n        clone.applyTransform(transform);\n        return clone.getSimplifiedGeometry(squaredTolerance);\n      },\n    );\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      transform,\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return this.closestPointXY(x, y, tmpPoint, Number.MIN_VALUE) === 0;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, closestPoint) {\n    closestPoint = closestPoint ? closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {Type} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {this} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == 'tile-pixels'\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0,\n            );\n            const transformed = transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates,\n            );\n            const projTransform = getTransform(sourceProj, destination);\n            if (projTransform) {\n              return projTransform(transformed, transformed, stride);\n            }\n            return transformed;\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {abstract} from '../util.js';\nimport Geometry from './Geometry.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./Geometry.js\").GeometryLayout}\n     */\n    this.layout = 'XY';\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @override\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*> | null} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride,\n    );\n  }\n\n  /**\n   * Return the {@link import(\"./Geometry.js\").GeometryLayout layout} of the geometry.\n   * @return {import(\"./Geometry.js\").GeometryLayout} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @override\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry =\n      this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    }\n    // Simplification did not actually remove any coordinates.  We now know\n    // that any calls to getSimplifiedGeometry with a squaredTolerance less\n    // than or equal to the current squaredTolerance will also not have any\n    // effect.  This allows us to short circuit simplification (saving CPU\n    // cycles) and prevents the cache of simplified geometries from filling\n    // up with useless identical copies of this geometry (saving memory).\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  setCoordinates(coordinates, layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = 'XY';\n          this.stride = 2;\n          return;\n        }\n        coordinates = /** @type {Array<unknown>} */ (coordinates[0]);\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   * @override\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(\n        this.flatCoordinates,\n        this.flatCoordinates,\n        this.layout.startsWith('XYZ') ? 3 : 2,\n        this.stride,\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   * @override\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates,\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   * @override\n   */\n  scale(sx, sy, anchor) {\n    if (sy === undefined) {\n      sy = sx;\n    }\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates,\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   * @override\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates,\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n */\nexport function getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = 'XY';\n  } else if (stride == 3) {\n    layout = 'XYZ';\n  } else if (stride == 4) {\n    layout = 'XYZM';\n  }\n  return /** @type {import(\"./Geometry.js\").GeometryLayout} */ (layout);\n}\n\n/**\n * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == 'XY') {\n    stride = 2;\n  } else if (layout == 'XYZ' || layout == 'XYM') {\n    stride = 3;\n  } else if (layout == 'XYZM') {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  }\n  const stride = simpleGeometry.getStride();\n  return transform2D(\n    flatCoordinates,\n    0,\n    flatCoordinates.length,\n    stride,\n    transform,\n    dest,\n  );\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  const x0 = flatCoordinates[end - stride];\n  const y0 = flatCoordinates[end - stride + 1];\n  let dx1 = 0;\n  let dy1 = 0;\n  for (; offset < end; offset += stride) {\n    const dx2 = flatCoordinates[offset] - x0;\n    const dy2 = flatCoordinates[offset + 1] - y0;\n    twiceArea += dy1 * dx2 - dx1 * dy2;\n    dx1 = dx2;\n    dy1 = dy2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint,\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t,\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint,\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1],\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint,\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1,\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint,\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint,\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint,\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint,\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint,\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride,\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  ends,\n) {\n  ends = ends ? ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride,\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  endss,\n) {\n  endss = endss ? endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i],\n    );\n    if (ends.length === 0) {\n      ends[0] = offset;\n    }\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  coordinates,\n) {\n  coordinates = coordinates !== undefined ? coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  coordinatess,\n) {\n  coordinatess = coordinatess !== undefined ? coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i],\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  coordinatesss,\n) {\n  coordinatesss = coordinatesss !== undefined ? coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] =\n      ends.length === 1 && ends[0] === offset\n        ? []\n        : inflateCoordinatesArray(\n            flatCoordinates,\n            offset,\n            ends,\n            stride,\n            coordinatesss[i],\n          );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/LinearRing\n */\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   * @override\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n    );\n    return new LinearRing(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'LinearRing';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/Point\n */\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {squaredDistance as squaredDx} from '../math.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {deflateCoordinate} from './flat/deflate.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    this.setCoordinates(coordinates, layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1],\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates() {\n    return this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @override\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'Point';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  let ret;\n  offset += stride;\n  for (; offset < end; offset += stride) {\n    ret = callback(\n      flatCoordinates.slice(offset - stride, offset),\n      flatCoordinates.slice(offset, offset + stride),\n    );\n    if (ret) {\n      return ret;\n    }\n  }\n  return false;\n}\n\n/**\n * Calculate the intersection point of two line segments.\n * Reference: https://stackoverflow.com/a/72474223/2389327\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} segment1 The first line segment as an array of two points.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} segment2 The second line segment as an array of two points.\n * @return {import(\"../../coordinate.js\").Coordinate|undefined} The intersection point or `undefined` if no intersection.\n */\nexport function getIntersectionPoint(segment1, segment2) {\n  const [a, b] = segment1;\n  const [c, d] = segment2;\n  const t =\n    ((a[0] - c[0]) * (c[1] - d[1]) - (a[1] - c[1]) * (c[0] - d[0])) /\n    ((a[0] - b[0]) * (c[1] - d[1]) - (a[1] - b[1]) * (c[0] - d[0]));\n  const u =\n    ((a[0] - c[0]) * (a[1] - b[1]) - (a[1] - c[1]) * (a[0] - b[0])) /\n    ((a[0] - b[0]) * (c[1] - d[1]) - (a[1] - b[1]) * (c[0] - d[0]));\n\n  // Check if lines actually intersect\n  if (0 <= t && t <= 1 && 0 <= u && u <= 1) {\n    return [a[0] + t * (b[0] - a[0]), a[1] + t * (b[1] - a[1])];\n  }\n  return undefined;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\nimport {forEach as forEachSegment} from './segments.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @param {import('../../extent.js').Extent} [coordinatesExtent] Coordinates extent\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent,\n  coordinatesExtent,\n) {\n  coordinatesExtent =\n    coordinatesExtent ??\n    extendFlatCoordinates(createEmpty(), flatCoordinates, offset, end, stride);\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (\n    (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) ||\n    (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3])\n  ) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    },\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent,\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1],\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3],\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1],\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3],\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent,\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent,\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent,\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/Polygon\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, getCenter, isEmpty} from '../extent.js';\nimport {modulo} from '../math.js';\nimport {offset as sphereOffset} from '../sphere.js';\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {quantizeArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n      this.ends_ = ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice(),\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   * @override\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y,\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0,\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return /** @type {import(\"../coordinate.js\").Coordinate} */ (\n      this.flatInteriorPoint_\n    );\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), 'XYM');\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing|null} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index],\n      ),\n      this.layout,\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout,\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride,\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.orientedFlatCoordinates_);\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   * @override\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds,\n    );\n    return new Polygon(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'Polygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_,\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, n, sphereRadius) {\n  n = n ? n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, sphereRadius),\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  if (isEmpty(extent)) {\n    throw new Error('Cannot create polygon from empty extent');\n  }\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [sides] Number of sides of the polygon. Default is 32.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, sides, angle) {\n  sides = sides ? sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = angle ? angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {linearFindNearest} from './array.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent,\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  smooth,\n  maxExtent,\n  showFullExtent,\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent,\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution,\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [minResolution] Minimum resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent,\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  minResolution = minResolution !== undefined ? minResolution : 0;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent,\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution,\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance,\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset,\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent,\n) {\n  smooth = smooth !== undefined ? smooth : true;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent,\n            )\n          : maxResolution;\n\n        if (!smooth || !isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution,\n        );\n      }\n      return undefined;\n    }\n  );\n}\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  }\n  return undefined;\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  }\n  return undefined;\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} [tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(tolerance) {\n  const t = tolerance === undefined ? toRadians(5) : tolerance;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving || rotation === undefined) {\n        return rotation;\n      }\n\n      if (Math.abs(rotation) <= t) {\n        return 0;\n      }\n      return rotation;\n    }\n  );\n}\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {linearFindNearest} from './array.js';\nimport {assert} from './asserts.js';\nimport {createExtent, none as centerNone} from './centerconstraint.js';\nimport {\n  add as addCoordinate,\n  equals,\n  equals as coordinatesEqual,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {easeOut, inAndOut} from './easing.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {VOID} from './functions.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\nimport {clamp, modulo} from './math.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  disableCoordinateWarning,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {\n  createMinMaxResolution,\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to\n * fit the extent into. Defaults to the size of the map the view is associated with.\n * If no map or multiple maps are connected to the view, provide the desired box size\n * (e.g. `map.getSize()`).\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions that determine the\n * zoom levels if specified. The index in the array corresponds to the zoom level,\n * therefore the resolution values have to be in descending order. It also constrains\n * the resolution by the minimum and maximum value. If set the `maxResolution`,\n * `minResolution`, `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center (in view projection coordinates).\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {import(\"./coordinate.js\").Coordinate} [nextCenter] The next center during an animation series.\n * @property {number} [nextResolution] The next resolution during an animation series.\n * @property {number} [nextRotation] The next rotation during an animation series.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Like {@link import(\"./Map.js\").FrameState}, but just `viewState` and `extent`.\n * @typedef {Object} ViewStateLayerStateExtent\n * @property {State} viewState View state.\n * @property {import(\"./extent.js\").Extent} extent Extent (in user projection coordinates).\n * @property {Array<import(\"./layer/Layer.js\").State>} [layerStatesArray] Layer states.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:center'|'change:resolution'|'change:rotation'} ViewObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<ViewObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|ViewObjectEventTypes, Return>} ViewOnSignature\n */\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Web Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [options] View options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ViewOnSignature<void>}\n     */\n    this.un;\n\n    options = Object.assign({}, options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.nextCenter_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextResolution_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.projection) {\n      disableCoordinateWarning();\n    }\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    const properties = Object.assign({}, options);\n    for (const key in ViewProperty) {\n      delete properties[key];\n    }\n    this.setProperties(properties, true);\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null,\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenterInternal();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = this.getProperties();\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return Object.assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = Object.assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection(),\n        );\n      }\n      if (options.anchor) {\n        options = Object.assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection(),\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n\n    let i = 0;\n    for (; i < animationCount && !this.isDef(); ++i) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[i];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      } else if (state.resolution) {\n        this.setResolution(state.resolution);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n    }\n    if (i === animationCount) {\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n    this.nextCenter_ = null;\n    this.nextResolution_ = NaN;\n    this.nextRotation_ = NaN;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          this.nextCenter_ = animation.targetCenter;\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true,\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor,\n            );\n          }\n          this.nextResolution_ = animation.targetResolution;\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true,\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor,\n            );\n          }\n          this.nextRotation_ = animation.targetRotation;\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        this.nextCenter_ = null;\n        this.nextResolution_ = NaN;\n        this.nextRotation_ = NaN;\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this),\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(rotation) {\n    const size = this.viewportSize_;\n    if (rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(rotation)) + Math.abs(h * Math.sin(rotation)),\n        Math.abs(w * Math.sin(rotation)) + Math.abs(h * Math.cos(rotation)),\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(size) {\n    this.viewportSize_ = Array.isArray(size) ? size.slice() : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(ViewProperty.CENTER)\n    );\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.get('constrainResolution');\n  }\n\n  /**\n   * @param {Array<number>} [hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(hints) {\n    if (hints !== undefined) {\n      hints[0] = this.hints_[0];\n      hints[1] = this.hints_[1];\n      return hints;\n    }\n    return this.hints_.slice();\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed box size.\n   * @param {import(\"./size.js\").Size} [size] The pixel dimensions of the box\n   * into which the calculated extent should fit. Defaults to the size of the\n   * map the view is associated with.\n   * If no map or multiple maps are connected to the view, provide the desired\n   * box size (e.g. `map.getSize()`).\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(size) {\n    const extent = this.calculateExtentInternal(size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    assert(center, 'The view center is not defined');\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 'The view resolution is not defined');\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 'The view rotation is not defined');\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.minResolution_)\n    );\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.maxResolution_)\n    );\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      size,\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(power) {\n    power = power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(power) {\n    const logPower = Math.log(power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(rotation) {\n    let size = this.getViewportSize_(rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = this.getResolution();\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation,\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      nextCenter: this.nextCenter_,\n      nextResolution: this.nextResolution_,\n      nextRotation: this.nextRotation_,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * @return {ViewStateLayerStateExtent} Like `FrameState`, but just `viewState` and `extent`.\n   */\n  getViewStateAndExtent() {\n    return {\n      viewState: this.getState(),\n      extent: this.calculateExtent(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_?.length) {\n      if (this.resolutions_.length === 1) {\n        return this.resolutions_[0];\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2,\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    }\n    return (\n      this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n    );\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      'Invalid extent or geometry provided as `geometry`',\n    );\n    if (Array.isArray(geometryOrExtent)) {\n      assert(\n        !isEmpty(geometryOrExtent),\n        'Cannot fit empty extent provided as `geometry`',\n      );\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === 'Circle') {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection(),\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n          geometryOrExtent\n            .clone()\n            .transform(userProjection, this.getProjection())\n        );\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, options);\n  }\n\n  /**\n   * Calculate rotated extent\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @return {import(\"./extent\").Extent} The rotated extent for the geometry.\n   */\n  rotatedExtentForGeometry(geometry) {\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(rotation);\n    const sinAngle = Math.sin(-rotation);\n    const coords = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n    return [minRotX, minRotY, maxRotX, maxRotY];\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [options] Options.\n   */\n  fitInternal(geometry, options) {\n    options = options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n\n    const rotatedExtent = this.rotatedExtentForGeometry(geometry);\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(rotatedExtent, [\n      size[0] - padding[1] - padding[3],\n      size[1] - padding[0] - padding[2],\n    ]);\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    const rotation = this.getRotation();\n    const sinAngle = Math.sin(rotation);\n    const cosAngle = Math.cos(rotation);\n    const centerRot = getCenter(rotatedExtent);\n    centerRot[0] += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRot[1] += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRot[0] * cosAngle - centerRot[1] * sinAngle;\n    const centerY = centerRot[1] * cosAngle + centerRot[0] * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback,\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position,\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation(),\n      ),\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation,\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving,\n    );\n\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, anchor) {\n    if (anchor) {\n      anchor = fromUserCoordinate(anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving,\n    );\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(\n      center ? fromUserCoordinate(center, this.getProjection()) : center,\n    );\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(doNotCancelAnims, forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving,\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving,\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size,\n      ),\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n      this.set('zoom', this.getZoom(), true);\n    }\n    if (\n      !newCenter ||\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [duration] The animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  resolveConstraints(duration, resolutionDirection, anchor) {\n    duration = duration !== undefined ? duration : 200;\n    const direction = resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size,\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size,\n      ),\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    anchor = anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(duration, resolutionDirection, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.endInteractionInternal(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  endInteractionInternal(duration, resolutionDirection, anchor) {\n    if (!this.getInteracting()) {\n      return;\n    }\n    this.setHint(ViewHint.INTERACTING, -1);\n    this.resolveConstraints(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      targetResolution || this.getResolution(),\n      size,\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [direction] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, direction),\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [direction] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, direction) {\n    direction = direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor),\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    }\n    if (constrainRotation === false) {\n      return rotationNone;\n    }\n    if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    }\n    return rotationNone;\n  }\n  return disable;\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n  MAP: 'map',\n};\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport {assert} from '../asserts.js';\nimport {clamp} from '../math.js';\nimport {abstract} from '../util.js';\nimport LayerProperty from './Property.js';\n\n/**\n * A css color, or a function called with a view resolution returning a css color.\n *\n * @typedef {string|function(number):string} BackgroundColor\n * @api\n */\n\n/**\n * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\n *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number | undefined} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base~BaseLayer} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object~BaseObject} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {BackgroundColor|false}\n     * @private\n     */\n    this.background_ = options.background;\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = Object.assign({}, options);\n    if (typeof options.properties === 'object') {\n      delete properties.properties;\n      Object.assign(properties, options.properties);\n    }\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(\n      typeof properties[LayerProperty.OPACITY] === 'number',\n      'Layer opacity must be a number',\n    );\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? properties.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * Get the background for this layer.\n   * @return {BackgroundColor|false} Layer background.\n   */\n  getBackground() {\n    return this.background_;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: managed === undefined ? true : managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (\n      this.get(LayerProperty.EXTENT)\n    );\n  }\n\n  /**\n   * Return the maximum resolution of the layer. Returns Infinity if\n   * the layer has no maximum resolution set.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer. Returns 0 if\n   * the layer has no minimum resolution set.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer. Returns -Infinity if\n   * the layer has no minimum zoom set.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer. Returns Infinity if\n   * the layer has no maximum zoom set.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the value of this layer's `visible` property. To find out whether the layer\n   * is visible on a map, use `isVisible()` instead.\n   * @return {boolean} The value of the `visible` property of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. Returns undefined if the layer is unmanaged.\n   * @return {number|undefined} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number|undefined} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Sets the background color.\n   * @param {BackgroundColor} [background] Background color.\n   */\n  setBackground(background) {\n    this.background_ = background;\n    this.changed();\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 'Layer opacity must be a number');\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/layer/Group\n */\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {assert} from '../asserts.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {getIntersection} from '../extent.js';\nimport {clear} from '../obj.js';\nimport {getUid} from '../util.js';\nimport BaseLayer from './Base.js';\n\n/**\n * @typedef {'addlayer'|'removelayer'} GroupEventType\n */\n\n/**\n * @classdesc\n * A layer group triggers 'addlayer' and 'removelayer' events when layers are added to or removed from\n * the group or one of its child groups.  When a layer group is added to or removed from another layer group,\n * a single event will be triggered (instead of one per layer in the group added or removed).\n */\nexport class GroupEvent extends Event {\n  /**\n   * @param {GroupEventType} type The event type.\n   * @param {BaseLayer} layer The layer.\n   */\n  constructor(type, layer) {\n    super(type);\n\n    /**\n     * The added or removed layer.\n     * @type {BaseLayer}\n     * @api\n     */\n    this.layer = layer;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:layers', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:layers', Return>} GroupOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|Collection<import(\"./Base.js\").default>} [layers] Child layers.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options} [options] Layer options.\n   */\n  constructor(options) {\n    options = options || {};\n    const baseOptions = /** @type {Options} */ (Object.assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {GroupOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addChangeListener(Property.LAYERS, this.handleLayersChanged_);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(\n          typeof (/** @type {?} */ (layers).getArray) === 'function',\n          'Expected `layers` to be an array or a `Collection`',\n        );\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(\n        layers,\n        CollectionEventType.REMOVE,\n        this.handleLayersRemove_,\n        this,\n      ),\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.registerLayerListeners_(layer);\n      this.dispatchEvent(new GroupEvent('addlayer', layer));\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {BaseLayer} layer The layer.\n   */\n  registerLayerListeners_(layer) {\n    const listenerKeys = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this,\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n\n    if (layer instanceof LayerGroup) {\n      listenerKeys.push(\n        listen(layer, 'addlayer', this.handleLayerGroupAdd_, this),\n        listen(layer, 'removelayer', this.handleLayerGroupRemove_, this),\n      );\n    }\n\n    this.listenerKeys_[getUid(layer)] = listenerKeys;\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupAdd_(event) {\n    this.dispatchEvent(new GroupEvent('addlayer', event.layer));\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupRemove_(event) {\n    this.dispatchEvent(new GroupEvent('removelayer', event.layer));\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = collectionEvent.element;\n    this.registerLayerListeners_(layer);\n    this.dispatchEvent(new GroupEvent('addlayer', layer));\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = collectionEvent.element;\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.dispatchEvent(new GroupEvent('removelayer', layer));\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!Collection<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!Collection<import(\"./Base.js\").default>} */ (\n      this.get(Property.LAYERS)\n    );\n  }\n\n  /**\n   * Set the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!Collection<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    const collection = this.getLayers();\n    if (collection) {\n      const currentLayers = collection.getArray();\n      for (let i = 0, ii = currentLayers.length; i < ii; ++i) {\n        this.dispatchEvent(new GroupEvent('removelayer', currentLayers[i]));\n      }\n    }\n\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   * @override\n   */\n  getLayersArray(array) {\n    array = array !== undefined ? array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * Get the layer states list and use this groups z-index as the default\n   * for all layers in this and nested groups, if it is unset at this point.\n   * If dest is not provided and this group's z-index is undefined\n   * 0 is used a the default z-index.\n   * @param {Array<import(\"./Layer.js\").State>} [dest] Optional list\n   * of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   * @override\n   */\n  getLayerStatesArray(dest) {\n    const states = dest !== undefined ? dest : [];\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    let defaultZIndex = ownLayerState.zIndex;\n    if (!dest && ownLayerState.zIndex === undefined) {\n      defaultZIndex = 0;\n    }\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution,\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution,\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent,\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n      if (layerState.zIndex === undefined) {\n        layerState.zIndex = defaultZIndex;\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   * @override\n   */\n  getSourceState() {\n    return 'ready';\n  }\n}\n\nexport default LayerGroup;\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n\n/**\n * @typedef {'postrender'|'precompose'|'postcompose'|'rendercomplete'} MapRenderEventTypes\n */\n\n/**\n * @typedef {'postrender'|'prerender'} LayerRenderEventTypes\n */\n","/**\n * @module ol/layer/Layer\n */\nimport View from '../View.js';\nimport {assert} from '../asserts.js';\nimport EventType from '../events/EventType.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {intersects} from '../extent.js';\nimport RenderEventType from '../render/EventType.js';\nimport BaseLayer from './Base.js';\nimport LayerProperty from './Property.js';\n\n/**\n * @typedef {function(import(\"../Map.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/**\n * @typedef {'sourceready'|'change:source'} LayerEventType\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     LayerEventType, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|LayerEventType|\n *     import(\"../render/EventType\").LayerRenderEventTypes, Return>} LayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {SourceType} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer~Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../Map.js\").default|null} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * Components like {@link module:ol/interaction/Draw~Draw} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * [layer.setMap()]{@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n * A `sourceready` event is fired when the layer's source is ready.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n * @fires import(\"../events/Event.js\").BaseEvent#sourceready\n *\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @template {import(\"../renderer/Layer.js\").default} [RendererType=import(\"../renderer/Layer.js\").default]\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options<SourceType>} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = Object.assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {LayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {RendererType}\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.sourceReady_ = false;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.rendered = false;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addChangeListener(\n      LayerProperty.SOURCE,\n      this.handleSourcePropertyChange_,\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   * @override\n   */\n  getLayersArray(array) {\n    array = array ? array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   * @override\n   */\n  getLayerStatesArray(states) {\n    states = states ? states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType|null} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {SourceType|null} The source being rendered.\n   */\n  getRenderSource() {\n    return this.getSource();\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   * @override\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? 'undefined' : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n    if (this.sourceReady_ || this.getSource().getState() !== 'ready') {\n      return;\n    }\n    this.sourceReady_ = true;\n    this.dispatchEvent('sourceready');\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    this.sourceReady_ = false;\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this,\n      );\n      if (source.getState() === 'ready') {\n        this.sourceReady_ = true;\n        setTimeout(() => {\n          this.dispatchEvent('sourceready');\n        }, 0);\n      }\n      this.clearRenderer();\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return Promise.resolve([]);\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    if (!this.renderer_ || !this.rendered) {\n      return null;\n    }\n    return this.renderer_.getData(pixel);\n  }\n\n  /**\n   * The layer is visible on the map view, i.e. within its min/max resolution or zoom and\n   * extent, not set to `visible: false`, and not inside a layer group that is set\n   * to `visible: false`.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {boolean} The layer is visible in the map view.\n   * @api\n   */\n  isVisible(view) {\n    let frameState;\n    const map = this.getMapInternal();\n    if (!view && map) {\n      view = map.getView();\n    }\n    if (view instanceof View) {\n      frameState = {\n        viewState: view.getState(),\n        extent: view.calculateExtent(),\n      };\n    } else {\n      frameState = view;\n    }\n    if (!frameState.layerStatesArray && map) {\n      frameState.layerStatesArray = map.getLayerGroup().getLayerStatesArray();\n    }\n    let layerState;\n    if (frameState.layerStatesArray) {\n      layerState = frameState.layerStatesArray.find(\n        (layerState) => layerState.layer === this,\n      );\n      if (!layerState) {\n        return false;\n      }\n    } else {\n      layerState = this.getLayerState();\n    }\n\n    const layerExtent = this.getExtent();\n\n    return (\n      inView(layerState, frameState.viewState) &&\n      (!layerExtent || intersects(layerExtent, frameState.extent))\n    );\n  }\n\n  /**\n   * Get the attributions of the source of this layer for the given view.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {Array<string>} Attributions for this layer at the given view.\n   * @api\n   */\n  getAttributions(view) {\n    if (!this.isVisible(view)) {\n      return [];\n    }\n    const getAttributions = this.getSource()?.getAttributions();\n    if (!getAttributions) {\n      return [];\n    }\n    const frameState =\n      view instanceof View ? view.getViewStateAndExtent() : view;\n    let attributions = getAttributions(frameState);\n    if (!Array.isArray(attributions)) {\n      attributions = [attributions];\n    }\n    return attributions;\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      this.rendered = true;\n      return layerRenderer.renderFrame(frameState, target);\n    }\n    return null;\n  }\n\n  /**\n   * Called when a layer is not visible during a map render.\n   */\n  unrender() {\n    this.rendered = false;\n  }\n\n  /** @return {string} Declutter */\n  getDeclutter() {\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../layer/Layer.js\").State} layerState Layer state.\n   */\n  renderDeclutter(frameState, layerState) {}\n\n  /**\n   * When the renderer follows a layout -> render approach, do the final rendering here.\n   * @param {import('../Map.js').FrameState} frameState Frame state\n   */\n  renderDeferred(frameState) {\n    const layerRenderer = this.getRenderer();\n    if (!layerRenderer) {\n      return;\n    }\n    layerRenderer.renderDeferred(frameState);\n  }\n\n  /**\n   * For use inside the library only.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMapInternal(map) {\n    if (!map) {\n      this.unrender();\n    }\n    this.set(LayerProperty.MAP, map);\n  }\n\n  /**\n   * For use inside the library only.\n   * @return {import(\"../Map.js\").default|null} Map.\n   */\n  getMapInternal() {\n    return this.get(LayerProperty.MAP);\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map~Map#addLayer} instead.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        this.handlePrecompose_,\n        this,\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../events/Event.js\").default} renderEvent Render event\n   * @private\n   */\n  handlePrecompose_(renderEvent) {\n    const layerStatesArray =\n      /** @type {import(\"../render/Event.js\").default} */ (renderEvent)\n        .frameState.layerStatesArray;\n    const layerState = this.getLayerState(false);\n    assert(\n      !layerStatesArray.some(\n        (arrayLayerState) => arrayLayerState.layer === layerState.layer,\n      ),\n      'A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.',\n    );\n    layerStatesArray.push(layerState);\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType|null} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {RendererType|null} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {RendererType} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * This will clear the renderer so that a new one can be created next time it is needed\n   */\n  clearRenderer() {\n    if (this.renderer_) {\n      this.renderer_.dispose();\n      delete this.renderer_;\n    }\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.clearRenderer();\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","\n/**\n * Rearranges items so that all items in the [left, k] are the smallest.\n * The k-th element will have the (k - left + 1)-th smallest value in [left, right].\n *\n * @template T\n * @param {T[]} arr the array to partially sort (in place)\n * @param {number} k middle index for partial sorting (as defined above)\n * @param {number} [left=0] left index of the range to sort\n * @param {number} [right=arr.length-1] right index\n * @param {(a: T, b: T) => number} [compare = (a, b) => a - b] compare function\n */\nexport default function quickselect(arr, k, left = 0, right = arr.length - 1, compare = defaultCompare) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            const n = right - left + 1;\n            const m = k - left + 1;\n            const z = Math.log(n);\n            const s = 0.5 * Math.exp(2 * z / 3);\n            const sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            const newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            const newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            quickselect(arr, k, newLeft, newRight, compare);\n        }\n\n        const t = arr[k];\n        let i = left;\n        /** @type {number} */\n        let j = right;\n\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) i++;\n            while (compare(arr[j], t) > 0) j--;\n        }\n\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\n/**\n * @template T\n * @param {T[]} arr\n * @param {number} i\n * @param {number} j\n */\nfunction swap(arr, i, j) {\n    const tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\n/**\n * @template T\n * @param {T} a\n * @param {T} b\n * @returns {number}\n */\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n","import quickselect from 'quickselect';\n\nexport default class RBush {\n    constructor(maxEntries = 9) {\n        // max entries in a node is 9 by default; min node fill is 40% for best performance\n        this._maxEntries = Math.max(4, maxEntries);\n        this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\n        this.clear();\n    }\n\n    all() {\n        return this._all(this.data, []);\n    }\n\n    search(bbox) {\n        let node = this.data;\n        const result = [];\n\n        if (!intersects(bbox, node)) return result;\n\n        const toBBox = this.toBBox;\n        const nodesToSearch = [];\n\n        while (node) {\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf) result.push(child);\n                    else if (contains(bbox, childBBox)) this._all(child, result);\n                    else nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return result;\n    }\n\n    collides(bbox) {\n        let node = this.data;\n\n        if (!intersects(bbox, node)) return false;\n\n        const nodesToSearch = [];\n        while (node) {\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const childBBox = node.leaf ? this.toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf || contains(bbox, childBBox)) return true;\n                    nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return false;\n    }\n\n    load(data) {\n        if (!(data && data.length)) return this;\n\n        if (data.length < this._minEntries) {\n            for (let i = 0; i < data.length; i++) {\n                this.insert(data[i]);\n            }\n            return this;\n        }\n\n        // recursively build the tree with the given data from scratch using OMT algorithm\n        let node = this._build(data.slice(), 0, data.length - 1, 0);\n\n        if (!this.data.children.length) {\n            // save as is if tree is empty\n            this.data = node;\n\n        } else if (this.data.height === node.height) {\n            // split root if trees have the same height\n            this._splitRoot(this.data, node);\n\n        } else {\n            if (this.data.height < node.height) {\n                // swap trees if inserted one is bigger\n                const tmpNode = this.data;\n                this.data = node;\n                node = tmpNode;\n            }\n\n            // insert the small tree into the large tree at appropriate level\n            this._insert(node, this.data.height - node.height - 1, true);\n        }\n\n        return this;\n    }\n\n    insert(item) {\n        if (item) this._insert(item, this.data.height - 1);\n        return this;\n    }\n\n    clear() {\n        this.data = createNode([]);\n        return this;\n    }\n\n    remove(item, equalsFn) {\n        if (!item) return this;\n\n        let node = this.data;\n        const bbox = this.toBBox(item);\n        const path = [];\n        const indexes = [];\n        let i, parent, goingUp;\n\n        // depth-first iterative tree traversal\n        while (node || path.length) {\n\n            if (!node) { // go up\n                node = path.pop();\n                parent = path[path.length - 1];\n                i = indexes.pop();\n                goingUp = true;\n            }\n\n            if (node.leaf) { // check current node\n                const index = findItem(item, node.children, equalsFn);\n\n                if (index !== -1) {\n                    // item found, remove the item and condense tree upwards\n                    node.children.splice(index, 1);\n                    path.push(node);\n                    this._condense(path);\n                    return this;\n                }\n            }\n\n            if (!goingUp && !node.leaf && contains(node, bbox)) { // go down\n                path.push(node);\n                indexes.push(i);\n                i = 0;\n                parent = node;\n                node = node.children[0];\n\n            } else if (parent) { // go right\n                i++;\n                node = parent.children[i];\n                goingUp = false;\n\n            } else node = null; // nothing found\n        }\n\n        return this;\n    }\n\n    toBBox(item) { return item; }\n\n    compareMinX(a, b) { return a.minX - b.minX; }\n    compareMinY(a, b) { return a.minY - b.minY; }\n\n    toJSON() { return this.data; }\n\n    fromJSON(data) {\n        this.data = data;\n        return this;\n    }\n\n    _all(node, result) {\n        const nodesToSearch = [];\n        while (node) {\n            if (node.leaf) result.push(...node.children);\n            else nodesToSearch.push(...node.children);\n\n            node = nodesToSearch.pop();\n        }\n        return result;\n    }\n\n    _build(items, left, right, height) {\n\n        const N = right - left + 1;\n        let M = this._maxEntries;\n        let node;\n\n        if (N <= M) {\n            // reached leaf level; return leaf\n            node = createNode(items.slice(left, right + 1));\n            calcBBox(node, this.toBBox);\n            return node;\n        }\n\n        if (!height) {\n            // target height of the bulk-loaded tree\n            height = Math.ceil(Math.log(N) / Math.log(M));\n\n            // target number of root entries to maximize storage utilization\n            M = Math.ceil(N / Math.pow(M, height - 1));\n        }\n\n        node = createNode([]);\n        node.leaf = false;\n        node.height = height;\n\n        // split the items into M mostly square tiles\n\n        const N2 = Math.ceil(N / M);\n        const N1 = N2 * Math.ceil(Math.sqrt(M));\n\n        multiSelect(items, left, right, N1, this.compareMinX);\n\n        for (let i = left; i <= right; i += N1) {\n\n            const right2 = Math.min(i + N1 - 1, right);\n\n            multiSelect(items, i, right2, N2, this.compareMinY);\n\n            for (let j = i; j <= right2; j += N2) {\n\n                const right3 = Math.min(j + N2 - 1, right2);\n\n                // pack each entry recursively\n                node.children.push(this._build(items, j, right3, height - 1));\n            }\n        }\n\n        calcBBox(node, this.toBBox);\n\n        return node;\n    }\n\n    _chooseSubtree(bbox, node, level, path) {\n        while (true) {\n            path.push(node);\n\n            if (node.leaf || path.length - 1 === level) break;\n\n            let minArea = Infinity;\n            let minEnlargement = Infinity;\n            let targetNode;\n\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const area = bboxArea(child);\n                const enlargement = enlargedArea(bbox, child) - area;\n\n                // choose entry with the least area enlargement\n                if (enlargement < minEnlargement) {\n                    minEnlargement = enlargement;\n                    minArea = area < minArea ? area : minArea;\n                    targetNode = child;\n\n                } else if (enlargement === minEnlargement) {\n                    // otherwise choose one with the smallest area\n                    if (area < minArea) {\n                        minArea = area;\n                        targetNode = child;\n                    }\n                }\n            }\n\n            node = targetNode || node.children[0];\n        }\n\n        return node;\n    }\n\n    _insert(item, level, isNode) {\n        const bbox = isNode ? item : this.toBBox(item);\n        const insertPath = [];\n\n        // find the best node for accommodating the item, saving all nodes along the path too\n        const node = this._chooseSubtree(bbox, this.data, level, insertPath);\n\n        // put the item into the node\n        node.children.push(item);\n        extend(node, bbox);\n\n        // split on node overflow; propagate upwards if necessary\n        while (level >= 0) {\n            if (insertPath[level].children.length > this._maxEntries) {\n                this._split(insertPath, level);\n                level--;\n            } else break;\n        }\n\n        // adjust bboxes along the insertion path\n        this._adjustParentBBoxes(bbox, insertPath, level);\n    }\n\n    // split overflowed node into two\n    _split(insertPath, level) {\n        const node = insertPath[level];\n        const M = node.children.length;\n        const m = this._minEntries;\n\n        this._chooseSplitAxis(node, m, M);\n\n        const splitIndex = this._chooseSplitIndex(node, m, M);\n\n        const newNode = createNode(node.children.splice(splitIndex, node.children.length - splitIndex));\n        newNode.height = node.height;\n        newNode.leaf = node.leaf;\n\n        calcBBox(node, this.toBBox);\n        calcBBox(newNode, this.toBBox);\n\n        if (level) insertPath[level - 1].children.push(newNode);\n        else this._splitRoot(node, newNode);\n    }\n\n    _splitRoot(node, newNode) {\n        // split root node\n        this.data = createNode([node, newNode]);\n        this.data.height = node.height + 1;\n        this.data.leaf = false;\n        calcBBox(this.data, this.toBBox);\n    }\n\n    _chooseSplitIndex(node, m, M) {\n        let index;\n        let minOverlap = Infinity;\n        let minArea = Infinity;\n\n        for (let i = m; i <= M - m; i++) {\n            const bbox1 = distBBox(node, 0, i, this.toBBox);\n            const bbox2 = distBBox(node, i, M, this.toBBox);\n\n            const overlap = intersectionArea(bbox1, bbox2);\n            const area = bboxArea(bbox1) + bboxArea(bbox2);\n\n            // choose distribution with minimum overlap\n            if (overlap < minOverlap) {\n                minOverlap = overlap;\n                index = i;\n\n                minArea = area < minArea ? area : minArea;\n\n            } else if (overlap === minOverlap) {\n                // otherwise choose distribution with minimum area\n                if (area < minArea) {\n                    minArea = area;\n                    index = i;\n                }\n            }\n        }\n\n        return index || M - m;\n    }\n\n    // sorts node children by the best axis for split\n    _chooseSplitAxis(node, m, M) {\n        const compareMinX = node.leaf ? this.compareMinX : compareNodeMinX;\n        const compareMinY = node.leaf ? this.compareMinY : compareNodeMinY;\n        const xMargin = this._allDistMargin(node, m, M, compareMinX);\n        const yMargin = this._allDistMargin(node, m, M, compareMinY);\n\n        // if total distributions margin value is minimal for x, sort by minX,\n        // otherwise it's already sorted by minY\n        if (xMargin < yMargin) node.children.sort(compareMinX);\n    }\n\n    // total margin of all possible split distributions where each node is at least m full\n    _allDistMargin(node, m, M, compare) {\n        node.children.sort(compare);\n\n        const toBBox = this.toBBox;\n        const leftBBox = distBBox(node, 0, m, toBBox);\n        const rightBBox = distBBox(node, M - m, M, toBBox);\n        let margin = bboxMargin(leftBBox) + bboxMargin(rightBBox);\n\n        for (let i = m; i < M - m; i++) {\n            const child = node.children[i];\n            extend(leftBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(leftBBox);\n        }\n\n        for (let i = M - m - 1; i >= m; i--) {\n            const child = node.children[i];\n            extend(rightBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(rightBBox);\n        }\n\n        return margin;\n    }\n\n    _adjustParentBBoxes(bbox, path, level) {\n        // adjust bboxes along the given tree path\n        for (let i = level; i >= 0; i--) {\n            extend(path[i], bbox);\n        }\n    }\n\n    _condense(path) {\n        // go through the path, removing empty nodes and updating bboxes\n        for (let i = path.length - 1, siblings; i >= 0; i--) {\n            if (path[i].children.length === 0) {\n                if (i > 0) {\n                    siblings = path[i - 1].children;\n                    siblings.splice(siblings.indexOf(path[i]), 1);\n\n                } else this.clear();\n\n            } else calcBBox(path[i], this.toBBox);\n        }\n    }\n}\n\nfunction findItem(item, items, equalsFn) {\n    if (!equalsFn) return items.indexOf(item);\n\n    for (let i = 0; i < items.length; i++) {\n        if (equalsFn(item, items[i])) return i;\n    }\n    return -1;\n}\n\n// calculate node's bbox from bboxes of its children\nfunction calcBBox(node, toBBox) {\n    distBBox(node, 0, node.children.length, toBBox, node);\n}\n\n// min bounding rectangle of node children from k to p-1\nfunction distBBox(node, k, p, toBBox, destNode) {\n    if (!destNode) destNode = createNode(null);\n    destNode.minX = Infinity;\n    destNode.minY = Infinity;\n    destNode.maxX = -Infinity;\n    destNode.maxY = -Infinity;\n\n    for (let i = k; i < p; i++) {\n        const child = node.children[i];\n        extend(destNode, node.leaf ? toBBox(child) : child);\n    }\n\n    return destNode;\n}\n\nfunction extend(a, b) {\n    a.minX = Math.min(a.minX, b.minX);\n    a.minY = Math.min(a.minY, b.minY);\n    a.maxX = Math.max(a.maxX, b.maxX);\n    a.maxY = Math.max(a.maxY, b.maxY);\n    return a;\n}\n\nfunction compareNodeMinX(a, b) { return a.minX - b.minX; }\nfunction compareNodeMinY(a, b) { return a.minY - b.minY; }\n\nfunction bboxArea(a)   { return (a.maxX - a.minX) * (a.maxY - a.minY); }\nfunction bboxMargin(a) { return (a.maxX - a.minX) + (a.maxY - a.minY); }\n\nfunction enlargedArea(a, b) {\n    return (Math.max(b.maxX, a.maxX) - Math.min(b.minX, a.minX)) *\n           (Math.max(b.maxY, a.maxY) - Math.min(b.minY, a.minY));\n}\n\nfunction intersectionArea(a, b) {\n    const minX = Math.max(a.minX, b.minX);\n    const minY = Math.max(a.minY, b.minY);\n    const maxX = Math.min(a.maxX, b.maxX);\n    const maxY = Math.min(a.maxY, b.maxY);\n\n    return Math.max(0, maxX - minX) *\n           Math.max(0, maxY - minY);\n}\n\nfunction contains(a, b) {\n    return a.minX <= b.minX &&\n           a.minY <= b.minY &&\n           b.maxX <= a.maxX &&\n           b.maxY <= a.maxY;\n}\n\nfunction intersects(a, b) {\n    return b.minX <= a.maxX &&\n           b.minY <= a.maxY &&\n           b.maxX >= a.minX &&\n           b.maxY >= a.minY;\n}\n\nfunction createNode(children) {\n    return {\n        children,\n        height: 1,\n        leaf: true,\n        minX: Infinity,\n        minY: Infinity,\n        maxX: -Infinity,\n        maxY: -Infinity\n    };\n}\n\n// sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\n// combines selection algorithm with binary divide & conquer approach\n\nfunction multiSelect(arr, left, right, n, compare) {\n    const stack = [left, right];\n\n    while (stack.length) {\n        right = stack.pop();\n        left = stack.pop();\n\n        if (right - left <= n) continue;\n\n        const mid = left + Math.ceil((right - left) / n / 2) * n;\n        quickselect(arr, mid, left, right, compare);\n\n        stack.push(left, mid, mid, right);\n    }\n}\n","/**\n * @module ol/expr/expression\n */\nimport {ascending} from '../array.js';\nimport {fromString as colorFromString} from '../color.js';\nimport {toSize} from '../size.js';\n\n/**\n * @fileoverview This module includes types and functions for parsing array encoded expressions.\n * The result of parsing an encoded expression is one of the specific expression classes.\n * During parsing, information is added to the parsing context about the data accessed by the\n * expression.\n */\n\n/**\n * Base type used for literal style parameters; can be a number literal or the output of an operator,\n * which in turns takes {@link import(\"./expression.js\").ExpressionValue} arguments.\n *\n * See below for details on the available operators (with notes for those that are WebGL or Canvas only).\n *\n * Reading operators:\n *   `['band', bandIndex, xOffset, yOffset]` For tile layers only. Fetches pixel values from band\n *     `bandIndex` of the source's data. The first `bandIndex` of the source data is `1`. Fetched values\n *     are in the 0..1 range. {@link import(\"../source/TileImage.js\").default} sources have 4 bands: red,\n *     green, blue and alpha. {@link import(\"../source/DataTile.js\").default} sources can have any number\n *     of bands, depending on the underlying data source and\n *     {@link import(\"../source/GeoTIFF.js\").Options configuration}. `xOffset` and `yOffset` are optional\n *     and allow specifying pixel offsets for x and y. This is used for sampling data from neighboring pixels (WebGL only).\n *   `['get', attributeName]` fetches a feature property value, similar to `feature.get('attributeName')`.\n *   `['get', attributeName, keyOrArrayIndex, ...]` (Canvas only) Access nested properties and array items of a\n *     feature property. The result is `undefined` when there is nothing at the specified key or index.\n *   `['geometry-type']` returns a feature's geometry type as string, either: 'LineString', 'Point' or 'Polygon'\n *     `Multi*` values are returned as their singular equivalent\n *     `Circle` geometries are returned as 'Polygon'\n *     `GeometryCollection` geometries are returned as the type of the first geometry found in the collection (WebGL only).\n *   `['resolution']` returns the current resolution\n *   `['time']` The time in seconds since the creation of the layer (WebGL only).\n *   `['var', 'varName']` fetches a value from the style variables; will throw an error if that variable is undefined\n *   `['zoom']` The current zoom level (WebGL only).\n *   `['line-metric']` returns the M component of the current point on a line (WebGL only); in case where the geometry layout of the line\n *      does not contain an M component (e.g. XY or XYZ), 0 is returned; 0 is also returned for geometries other than lines.\n *      Please note that the M component will be linearly interpolated between the two points composing a segment.\n *\n * Math operators:\n *   `['*', value1, value2, ...]` multiplies the values (either numbers or colors)\n *   `['/', value1, value2]` divides `value1` by `value2`\n *   `['+', value1, value2, ...]` adds the values\n *   `['-', value1, value2]` subtracts `value2` from `value1`\n *   `['clamp', value, low, high]` clamps `value` between `low` and `high`\n *   `['%', value1, value2]` returns the result of `value1 % value2` (modulo)\n *   `['^', value1, value2]` returns the value of `value1` raised to the `value2` power\n *   `['abs', value1]` returns the absolute value of `value1`\n *   `['floor', value1]` returns the nearest integer less than or equal to `value1`\n *   * `['round', value1]` returns the nearest integer to `value1`\n *   * `['ceil', value1]` returns the nearest integer greater than or equal to `value1`\n *   * `['sin', value1]` returns the sine of `value1`\n *   * `['cos', value1]` returns the cosine of `value1`\n *   * `['atan', value1, value2]` returns `atan2(value1, value2)`. If `value2` is not provided, returns `atan(value1)`\n *   * `['sqrt', value1]` returns the square root of `value1`\n *\n * * Transform operators:\n *   * `['case', condition1, output1, ...conditionN, outputN, fallback]` selects the first output whose corresponding\n *     condition evaluates to `true`. If no match is found, returns the `fallback` value.\n *     All conditions should be `boolean`, output and fallback can be any kind.\n *   * `['match', input, match1, output1, ...matchN, outputN, fallback]` compares the `input` value against all\n *     provided `matchX` values, returning the output associated with the first valid match. If no match is found,\n *     returns the `fallback` value.\n *     `input` and `matchX` values must all be of the same type, and can be `number` or `string`. `outputX` and\n *     `fallback` values must be of the same type, and can be of any kind.\n *   * `['interpolate', interpolation, input, stop1, output1, ...stopN, outputN]` returns a value by interpolating between\n *     pairs of inputs and outputs; `interpolation` can either be `['linear']` or `['exponential', base]` where `base` is\n *     the rate of increase from stop A to stop B (i.e. power to which the interpolation ratio is raised); a value\n *     of 1 is equivalent to `['linear']`.\n *     `input` and `stopX` values must all be of type `number`. `outputX` values can be `number` or `color` values.\n *     Note: `input` will be clamped between `stop1` and `stopN`, meaning that all output values will be comprised\n *     between `output1` and `outputN`.\n *   * `['string', value1, value2, ...]` returns the first value in the list that evaluates to a string.\n *     An example would be to provide a default value for get: `['string', ['get', 'propertyname'], 'default value']]`\n *     (Canvas only).\n *   * `['number', value1, value2, ...]` returns the first value in the list that evaluates to a number.\n *     An example would be to provide a default value for get: `['string', ['get', 'propertyname'], 42]]`\n *     (Canvas only).\n *   * `['coalesce', value1, value2, ...]` returns the first value in the list which is not null or undefined.\n *     An example would be to provide a default value for get: `['coalesce', ['get','propertyname'], 'default value']]`\n *     (Canvas only).\n *\n * * Logical operators:\n *   * `['<', value1, value2]` returns `true` if `value1` is strictly lower than `value2`, or `false` otherwise.\n *   * `['<=', value1, value2]` returns `true` if `value1` is lower than or equals `value2`, or `false` otherwise.\n *   * `['>', value1, value2]` returns `true` if `value1` is strictly greater than `value2`, or `false` otherwise.\n *   * `['>=', value1, value2]` returns `true` if `value1` is greater than or equals `value2`, or `false` otherwise.\n *   * `['==', value1, value2]` returns `true` if `value1` equals `value2`, or `false` otherwise.\n *   * `['!=', value1, value2]` returns `true` if `value1` does not equal `value2`, or `false` otherwise.\n *   * `['!', value1]` returns `false` if `value1` is `true` or greater than `0`, or `true` otherwise.\n *   * `['all', value1, value2, ...]` returns `true` if all the inputs are `true`, `false` otherwise.\n *   * `['any', value1, value2, ...]` returns `true` if any of the inputs are `true`, `false` otherwise.\n *   * `['has', attributeName, keyOrArrayIndex, ...]` returns `true` if feature properties include the (nested) key `attributeName`,\n *     `false` otherwise.\n *   * `['between', value1, value2, value3]` returns `true` if `value1` is contained between `value2` and `value3`\n *     (inclusively), or `false` otherwise.\n *   * `['in', needle, haystack]` returns `true` if `needle` is found in `haystack`, and\n *     `false` otherwise.\n *     This operator has the following limitations:\n *     * `haystack` has to be an array of numbers or strings (searching for a substring in a string is not supported yet)\n *     * Only literal arrays are supported as `haystack` for now; this means that `haystack` cannot be the result of an\n *     expression. If `haystack` is an array of strings, use the `literal` operator to disambiguate from an expression:\n *     `['literal', ['abc', 'def', 'ghi']]`\n *\n * * Conversion operators:\n *   * `['array', value1, ...valueN]` creates a numerical array from `number` values; please note that the amount of\n *     values can currently only be 2, 3 or 4 (WebGL only).\n *   * `['color', red, green, blue, alpha]` or `['color', shade, alpha]` creates a `color` value from `number` values;\n *     the `alpha` parameter is optional; if not specified, it will be set to 1 (WebGL only).\n *     Note: `red`, `green` and `blue` or `shade` components must be values between 0 and 255; `alpha` between 0 and 1.\n *   * `['palette', index, colors]` picks a `color` value from an array of colors using the given index; the `index`\n *     expression must evaluate to a number; the items in the `colors` array must be strings with hex colors\n *     (e.g. `'#86A136'`), colors using the rgba[a] functional notation (e.g. `'rgb(134, 161, 54)'` or `'rgba(134, 161, 54, 1)'`),\n *     named colors (e.g. `'red'`), or array literals with 3 ([r, g, b]) or 4 ([r, g, b, a]) values (with r, g, and b\n *     in the 0-255 range and a in the 0-1 range) (WebGL only).\n *   * `['to-string', value]` converts the input value to a string. If the input is a boolean, the result is \"true\" or \"false\".\n *     If the input is a number, it is converted to a string as specified by the \"NumberToString\" algorithm of the ECMAScript\n *     Language Specification. If the input is a color, it is converted to a string of the form \"rgba(r,g,b,a)\". (Canvas only)\n *\n * Values can either be literals or another operator, as they will be evaluated recursively.\n * Literal values can be of the following types:\n * * `boolean`\n * * `number`\n * * `number[]` (number arrays can only have a length of 2, 3 or 4)\n * * `string`\n * * {@link module:ol/color~Color}\n *\n * @typedef {Array<*>|import(\"../color.js\").Color|string|number|boolean} ExpressionValue\n * @api\n */\n\nlet numTypes = 0;\nexport const NoneType = 0;\nexport const BooleanType = 1 << numTypes++;\nexport const NumberType = 1 << numTypes++;\nexport const StringType = 1 << numTypes++;\nexport const ColorType = 1 << numTypes++;\nexport const NumberArrayType = 1 << numTypes++;\nexport const SizeType = 1 << numTypes++;\nexport const AnyType = Math.pow(2, numTypes) - 1;\n\nconst typeNames = {\n  [BooleanType]: 'boolean',\n  [NumberType]: 'number',\n  [StringType]: 'string',\n  [ColorType]: 'color',\n  [NumberArrayType]: 'number[]',\n  [SizeType]: 'size',\n};\n\nconst namedTypes = Object.keys(typeNames).map(Number).sort(ascending);\n\n/**\n * @param {number} type The type.\n * @return {boolean} The type is one of the specific types (not any or a union type).\n */\nfunction isSpecific(type) {\n  return type in typeNames;\n}\n\n/**\n * Get a string representation for a type.\n * @param {number} type The type.\n * @return {string} The type name.\n */\nexport function typeName(type) {\n  const names = [];\n  for (const namedType of namedTypes) {\n    if (includesType(type, namedType)) {\n      names.push(typeNames[namedType]);\n    }\n  }\n  if (names.length === 0) {\n    return 'untyped';\n  }\n  if (names.length < 3) {\n    return names.join(' or ');\n  }\n  return names.slice(0, -1).join(', ') + ', or ' + names[names.length - 1];\n}\n\n/**\n * @param {number} broad The broad type.\n * @param {number} specific The specific type.\n * @return {boolean} The broad type includes the specific type.\n */\nexport function includesType(broad, specific) {\n  return (broad & specific) === specific;\n}\n\n/**\n * @param {number} oneType One type.\n * @param {number} otherType Another type.\n * @return {boolean} The set of types overlap (share a common specific type)\n */\nexport function overlapsType(oneType, otherType) {\n  return !!(oneType & otherType);\n}\n\n/**\n * @param {number} type The type.\n * @param {number} expected The expected type.\n * @return {boolean} The given type is exactly the expected type.\n */\nexport function isType(type, expected) {\n  return type === expected;\n}\n\n/**\n * @typedef {boolean|number|string|Array<number>} LiteralValue\n */\n\nexport class LiteralExpression {\n  /**\n   * @param {number} type The value type.\n   * @param {LiteralValue} value The literal value.\n   */\n  constructor(type, value) {\n    if (!isSpecific(type)) {\n      throw new Error(\n        `literal expressions must have a specific type, got ${typeName(type)}`,\n      );\n    }\n    this.type = type;\n    this.value = value;\n  }\n}\n\nexport class CallExpression {\n  /**\n   * @param {number} type The return type.\n   * @param {string} operator The operator.\n   * @param {...Expression} args The arguments.\n   */\n  constructor(type, operator, ...args) {\n    this.type = type;\n    this.operator = operator;\n    this.args = args;\n  }\n}\n\n/**\n * @typedef {LiteralExpression|CallExpression} Expression\n */\n\n/**\n * @typedef {Object} ParsingContext\n * @property {Set<string>} variables Variables referenced with the 'var' operator.\n * @property {Set<string>} properties Properties referenced with the 'get' operator.\n * @property {boolean} featureId The style uses the feature id.\n * @property {boolean} geometryType The style uses the feature geometry type.\n * @property {boolean} mapState The style uses the map state (view state or time elapsed).\n */\n\n/**\n * @return {ParsingContext} A new parsing context.\n */\nexport function newParsingContext() {\n  return {\n    variables: new Set(),\n    properties: new Set(),\n    featureId: false,\n    geometryType: false,\n    mapState: false,\n  };\n}\n\n/**\n * @typedef {LiteralValue|Array} EncodedExpression\n */\n\n/**\n * @param {EncodedExpression} encoded The encoded expression.\n * @param {number} expectedType The expected type.\n * @param {ParsingContext} context The parsing context.\n * @return {Expression} The parsed expression result.\n */\nexport function parse(encoded, expectedType, context) {\n  switch (typeof encoded) {\n    case 'boolean': {\n      if (isType(expectedType, StringType)) {\n        return new LiteralExpression(StringType, encoded ? 'true' : 'false');\n      }\n      if (!includesType(expectedType, BooleanType)) {\n        throw new Error(\n          `got a boolean, but expected ${typeName(expectedType)}`,\n        );\n      }\n      return new LiteralExpression(BooleanType, encoded);\n    }\n    case 'number': {\n      if (isType(expectedType, SizeType)) {\n        return new LiteralExpression(SizeType, toSize(encoded));\n      }\n      if (isType(expectedType, BooleanType)) {\n        return new LiteralExpression(BooleanType, !!encoded);\n      }\n      if (isType(expectedType, StringType)) {\n        return new LiteralExpression(StringType, encoded.toString());\n      }\n      if (!includesType(expectedType, NumberType)) {\n        throw new Error(`got a number, but expected ${typeName(expectedType)}`);\n      }\n      return new LiteralExpression(NumberType, encoded);\n    }\n    case 'string': {\n      if (isType(expectedType, ColorType)) {\n        return new LiteralExpression(ColorType, colorFromString(encoded));\n      }\n      if (isType(expectedType, BooleanType)) {\n        return new LiteralExpression(BooleanType, !!encoded);\n      }\n      if (!includesType(expectedType, StringType)) {\n        throw new Error(`got a string, but expected ${typeName(expectedType)}`);\n      }\n      return new LiteralExpression(StringType, encoded);\n    }\n    default: {\n      // pass\n    }\n  }\n\n  if (!Array.isArray(encoded)) {\n    throw new Error('expression must be an array or a primitive value');\n  }\n\n  if (encoded.length === 0) {\n    throw new Error('empty expression');\n  }\n\n  if (typeof encoded[0] === 'string') {\n    return parseCallExpression(encoded, expectedType, context);\n  }\n\n  for (const item of encoded) {\n    if (typeof item !== 'number') {\n      throw new Error('expected an array of numbers');\n    }\n  }\n\n  if (isType(expectedType, SizeType)) {\n    if (encoded.length !== 2) {\n      throw new Error(\n        `expected an array of two values for a size, got ${encoded.length}`,\n      );\n    }\n    return new LiteralExpression(SizeType, encoded);\n  }\n\n  if (isType(expectedType, ColorType)) {\n    if (encoded.length === 3) {\n      return new LiteralExpression(ColorType, [...encoded, 1]);\n    }\n    if (encoded.length === 4) {\n      return new LiteralExpression(ColorType, encoded);\n    }\n    throw new Error(\n      `expected an array of 3 or 4 values for a color, got ${encoded.length}`,\n    );\n  }\n\n  if (!includesType(expectedType, NumberArrayType)) {\n    throw new Error(\n      `got an array of numbers, but expected ${typeName(expectedType)}`,\n    );\n  }\n\n  return new LiteralExpression(NumberArrayType, encoded);\n}\n\n/**\n * @type {Object<string, string>}\n */\nexport const Ops = {\n  Get: 'get',\n  Var: 'var',\n  Concat: 'concat',\n  GeometryType: 'geometry-type',\n  LineMetric: 'line-metric',\n  Any: 'any',\n  All: 'all',\n  Not: '!',\n  Resolution: 'resolution',\n  Zoom: 'zoom',\n  Time: 'time',\n  Equal: '==',\n  NotEqual: '!=',\n  GreaterThan: '>',\n  GreaterThanOrEqualTo: '>=',\n  LessThan: '<',\n  LessThanOrEqualTo: '<=',\n  Multiply: '*',\n  Divide: '/',\n  Add: '+',\n  Subtract: '-',\n  Clamp: 'clamp',\n  Mod: '%',\n  Pow: '^',\n  Abs: 'abs',\n  Floor: 'floor',\n  Ceil: 'ceil',\n  Round: 'round',\n  Sin: 'sin',\n  Cos: 'cos',\n  Atan: 'atan',\n  Sqrt: 'sqrt',\n  Match: 'match',\n  Between: 'between',\n  Interpolate: 'interpolate',\n  Coalesce: 'coalesce',\n  Case: 'case',\n  In: 'in',\n  Number: 'number',\n  String: 'string',\n  Array: 'array',\n  Color: 'color',\n  Id: 'id',\n  Band: 'band',\n  Palette: 'palette',\n  ToString: 'to-string',\n  Has: 'has',\n};\n\n/**\n * @typedef {function(Array, number, ParsingContext):Expression} Parser\n *\n * Second argument is the expected type.\n */\n\n/**\n * @type {Object<string, Parser>}\n */\nconst parsers = {\n  [Ops.Get]: createCallExpressionParser(hasArgsCount(1, Infinity), withGetArgs),\n  [Ops.Var]: createCallExpressionParser(hasArgsCount(1, 1), withVarArgs),\n  [Ops.Has]: createCallExpressionParser(hasArgsCount(1, Infinity), withGetArgs),\n  [Ops.Id]: createCallExpressionParser(usesFeatureId, withNoArgs),\n  [Ops.Concat]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfType(StringType),\n  ),\n  [Ops.GeometryType]: createCallExpressionParser(usesGeometryType, withNoArgs),\n  [Ops.LineMetric]: createCallExpressionParser(withNoArgs),\n  [Ops.Resolution]: createCallExpressionParser(usesMapState, withNoArgs),\n  [Ops.Zoom]: createCallExpressionParser(usesMapState, withNoArgs),\n  [Ops.Time]: createCallExpressionParser(usesMapState, withNoArgs),\n  [Ops.Any]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfType(BooleanType),\n  ),\n  [Ops.All]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfType(BooleanType),\n  ),\n  [Ops.Not]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(BooleanType),\n  ),\n  [Ops.Equal]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(AnyType),\n  ),\n  [Ops.NotEqual]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(AnyType),\n  ),\n  [Ops.GreaterThan]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.GreaterThanOrEqualTo]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.LessThan]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.LessThanOrEqualTo]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Multiply]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfReturnType,\n  ),\n  [Ops.Coalesce]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfReturnType,\n  ),\n  [Ops.Divide]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Add]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Subtract]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Clamp]: createCallExpressionParser(\n    hasArgsCount(3, 3),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Mod]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Pow]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Abs]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Floor]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Ceil]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Round]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Sin]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Cos]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Atan]: createCallExpressionParser(\n    hasArgsCount(1, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Sqrt]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Match]: createCallExpressionParser(\n    hasArgsCount(4, Infinity),\n    hasEvenArgs,\n    withMatchArgs,\n  ),\n  [Ops.Between]: createCallExpressionParser(\n    hasArgsCount(3, 3),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Interpolate]: createCallExpressionParser(\n    hasArgsCount(6, Infinity),\n    hasEvenArgs,\n    withInterpolateArgs,\n  ),\n  [Ops.Case]: createCallExpressionParser(\n    hasArgsCount(3, Infinity),\n    hasOddArgs,\n    withCaseArgs,\n  ),\n  [Ops.In]: createCallExpressionParser(hasArgsCount(2, 2), withInArgs),\n  [Ops.Number]: createCallExpressionParser(\n    hasArgsCount(1, Infinity),\n    withArgsOfType(AnyType),\n  ),\n  [Ops.String]: createCallExpressionParser(\n    hasArgsCount(1, Infinity),\n    withArgsOfType(AnyType),\n  ),\n  [Ops.Array]: createCallExpressionParser(\n    hasArgsCount(1, Infinity),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Color]: createCallExpressionParser(\n    hasArgsCount(1, 4),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Band]: createCallExpressionParser(\n    hasArgsCount(1, 3),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Palette]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withPaletteArgs,\n  ),\n  [Ops.ToString]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(BooleanType | NumberType | StringType | ColorType),\n  ),\n};\n\n/**\n * @typedef {function(Array<EncodedExpression>, number, ParsingContext):Array<Expression>|void} ArgValidator\n *\n * An argument validator applies various checks to an encoded expression arguments and\n * returns the parsed arguments if any.  The second argument is the return type of the call expression.\n */\n\n/**\n * @type {ArgValidator}\n */\nfunction withGetArgs(encoded, returnType, context) {\n  const argsCount = encoded.length - 1;\n  const args = new Array(argsCount);\n  for (let i = 0; i < argsCount; ++i) {\n    const key = encoded[i + 1];\n    switch (typeof key) {\n      case 'number': {\n        args[i] = new LiteralExpression(NumberType, key);\n        break;\n      }\n      case 'string': {\n        args[i] = new LiteralExpression(StringType, key);\n        break;\n      }\n      default: {\n        throw new Error(\n          `expected a string key or numeric array index for a get operation, got ${key}`,\n        );\n      }\n    }\n    if (i === 0) {\n      context.properties.add(String(key));\n    }\n  }\n  return args;\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withVarArgs(encoded, returnType, context) {\n  const name = encoded[1];\n  if (typeof name !== 'string') {\n    throw new Error('expected a string argument for var operation');\n  }\n  context.variables.add(name);\n\n  return [new LiteralExpression(StringType, name)];\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction usesFeatureId(encoded, returnType, context) {\n  context.featureId = true;\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction usesGeometryType(encoded, returnType, context) {\n  context.geometryType = true;\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction usesMapState(encoded, returnType, context) {\n  context.mapState = true;\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withNoArgs(encoded, returnType, context) {\n  const operation = encoded[0];\n  if (encoded.length !== 1) {\n    throw new Error(`expected no arguments for ${operation} operation`);\n  }\n  return [];\n}\n\n/**\n * @param {number} minArgs The minimum number of arguments.\n * @param {number} maxArgs The maximum number of arguments.\n * @return {ArgValidator} The argument validator\n */\nfunction hasArgsCount(minArgs, maxArgs) {\n  return function (encoded, returnType, context) {\n    const operation = encoded[0];\n    const argCount = encoded.length - 1;\n    if (minArgs === maxArgs) {\n      if (argCount !== minArgs) {\n        const plural = minArgs === 1 ? '' : 's';\n        throw new Error(\n          `expected ${minArgs} argument${plural} for ${operation}, got ${argCount}`,\n        );\n      }\n    } else if (argCount < minArgs || argCount > maxArgs) {\n      const range =\n        maxArgs === Infinity\n          ? `${minArgs} or more`\n          : `${minArgs} to ${maxArgs}`;\n      throw new Error(\n        `expected ${range} arguments for ${operation}, got ${argCount}`,\n      );\n    }\n  };\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withArgsOfReturnType(encoded, returnType, context) {\n  const argCount = encoded.length - 1;\n  /**\n   * @type {Array<Expression>}\n   */\n  const args = new Array(argCount);\n  for (let i = 0; i < argCount; ++i) {\n    const expression = parse(encoded[i + 1], returnType, context);\n    args[i] = expression;\n  }\n  return args;\n}\n\n/**\n * @param {number} argType The argument type.\n * @return {ArgValidator} The argument validator\n */\nfunction withArgsOfType(argType) {\n  return function (encoded, returnType, context) {\n    const argCount = encoded.length - 1;\n    /**\n     * @type {Array<Expression>}\n     */\n    const args = new Array(argCount);\n    for (let i = 0; i < argCount; ++i) {\n      const expression = parse(encoded[i + 1], argType, context);\n      args[i] = expression;\n    }\n    return args;\n  };\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction hasOddArgs(encoded, returnType, context) {\n  const operation = encoded[0];\n  const argCount = encoded.length - 1;\n  if (argCount % 2 === 0) {\n    throw new Error(\n      `expected an odd number of arguments for ${operation}, got ${argCount} instead`,\n    );\n  }\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction hasEvenArgs(encoded, returnType, context) {\n  const operation = encoded[0];\n  const argCount = encoded.length - 1;\n  if (argCount % 2 === 1) {\n    throw new Error(\n      `expected an even number of arguments for operation ${operation}, got ${argCount} instead`,\n    );\n  }\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withMatchArgs(encoded, returnType, context) {\n  const argsCount = encoded.length - 1;\n\n  const inputType = StringType | NumberType | BooleanType;\n\n  const input = parse(encoded[1], inputType, context);\n\n  const fallback = parse(encoded[encoded.length - 1], returnType, context);\n\n  const args = new Array(argsCount - 2);\n  for (let i = 0; i < argsCount - 2; i += 2) {\n    try {\n      const match = parse(encoded[i + 2], input.type, context);\n      args[i] = match;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 1} of match expression: ${err.message}`,\n      );\n    }\n    try {\n      const output = parse(encoded[i + 3], fallback.type, context);\n      args[i + 1] = output;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 2} of match expression: ${err.message}`,\n      );\n    }\n  }\n\n  return [input, ...args, fallback];\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withInterpolateArgs(encoded, returnType, context) {\n  const interpolationType = encoded[1];\n  /**\n   * @type {number}\n   */\n  let base;\n  switch (interpolationType[0]) {\n    case 'linear':\n      base = 1;\n      break;\n    case 'exponential':\n      const b = interpolationType[1];\n      if (typeof b !== 'number' || b <= 0) {\n        throw new Error(\n          `expected a number base for exponential interpolation` +\n            `, got ${JSON.stringify(b)} instead`,\n        );\n      }\n      base = b;\n      break;\n    default:\n      throw new Error(\n        `invalid interpolation type: ${JSON.stringify(interpolationType)}`,\n      );\n  }\n\n  const interpolation = new LiteralExpression(NumberType, base);\n\n  let input;\n  try {\n    input = parse(encoded[2], NumberType, context);\n  } catch (err) {\n    throw new Error(\n      `failed to parse argument 1 in interpolate expression: ${err.message}`,\n    );\n  }\n\n  const args = new Array(encoded.length - 3);\n  for (let i = 0; i < args.length; i += 2) {\n    try {\n      const stop = parse(encoded[i + 3], NumberType, context);\n      args[i] = stop;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 2} for interpolate expression: ${err.message}`,\n      );\n    }\n    try {\n      const output = parse(encoded[i + 4], returnType, context);\n      args[i + 1] = output;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 3} for interpolate expression: ${err.message}`,\n      );\n    }\n  }\n\n  return [interpolation, input, ...args];\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withCaseArgs(encoded, returnType, context) {\n  const fallback = parse(encoded[encoded.length - 1], returnType, context);\n\n  const args = new Array(encoded.length - 1);\n  for (let i = 0; i < args.length - 1; i += 2) {\n    try {\n      const condition = parse(encoded[i + 1], BooleanType, context);\n      args[i] = condition;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i} of case expression: ${err.message}`,\n      );\n    }\n    try {\n      const output = parse(encoded[i + 2], fallback.type, context);\n      args[i + 1] = output;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 1} of case expression: ${err.message}`,\n      );\n    }\n  }\n\n  args[args.length - 1] = fallback;\n  return args;\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withInArgs(encoded, returnType, context) {\n  let haystack = encoded[2];\n  if (!Array.isArray(haystack)) {\n    throw new Error(\n      `the second argument for the \"in\" operator must be an array`,\n    );\n  }\n  /**\n   * @type {number}\n   */\n  let needleType;\n  if (typeof haystack[0] === 'string') {\n    if (haystack[0] !== 'literal') {\n      throw new Error(\n        `for the \"in\" operator, a string array should be wrapped in a \"literal\" operator to disambiguate from expressions`,\n      );\n    }\n    if (!Array.isArray(haystack[1])) {\n      throw new Error(\n        `failed to parse \"in\" expression: the literal operator must be followed by an array`,\n      );\n    }\n    haystack = haystack[1];\n    needleType = StringType;\n  } else {\n    needleType = NumberType;\n  }\n\n  const args = new Array(haystack.length);\n  for (let i = 0; i < args.length; i++) {\n    try {\n      const arg = parse(haystack[i], needleType, context);\n      args[i] = arg;\n    } catch (err) {\n      throw new Error(\n        `failed to parse haystack item ${i} for \"in\" expression: ${err.message}`,\n      );\n    }\n  }\n\n  const needle = parse(encoded[1], needleType, context);\n  return [needle, ...args];\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withPaletteArgs(encoded, returnType, context) {\n  let index;\n  try {\n    index = parse(encoded[1], NumberType, context);\n  } catch (err) {\n    throw new Error(\n      `failed to parse first argument in palette expression: ${err.message}`,\n    );\n  }\n  const colors = encoded[2];\n  if (!Array.isArray(colors)) {\n    throw new Error('the second argument of palette must be an array');\n  }\n  const parsedColors = new Array(colors.length);\n  for (let i = 0; i < parsedColors.length; i++) {\n    let color;\n    try {\n      color = parse(colors[i], ColorType, context);\n    } catch (err) {\n      throw new Error(\n        `failed to parse color at index ${i} in palette expression: ${err.message}`,\n      );\n    }\n    if (!(color instanceof LiteralExpression)) {\n      throw new Error(\n        `the palette color at index ${i} must be a literal value`,\n      );\n    }\n    parsedColors[i] = color;\n  }\n  return [index, ...parsedColors];\n}\n\n/**\n * @param {Array<ArgValidator>} validators A chain of argument validators.  The last validator is expected\n * to return the parsed arguments.\n * @return {Parser} The parser.\n */\nfunction createCallExpressionParser(...validators) {\n  return function (encoded, returnType, context) {\n    const operator = encoded[0];\n\n    /**\n     * @type {Array<Expression>}\n     */\n    let args;\n    for (let i = 0; i < validators.length; i++) {\n      const parsed = validators[i](encoded, returnType, context);\n      if (i == validators.length - 1) {\n        if (!parsed) {\n          throw new Error(\n            'expected last argument validator to return the parsed args',\n          );\n        }\n        args = parsed;\n      }\n    }\n    return new CallExpression(returnType, operator, ...args);\n  };\n}\n\n/**\n * @param {Array} encoded The encoded expression.\n * @param {number} returnType The expected return type of the call expression.\n * @param {ParsingContext} context The parsing context.\n * @return {Expression} The parsed expression.\n */\nfunction parseCallExpression(encoded, returnType, context) {\n  const operator = encoded[0];\n\n  const parser = parsers[operator];\n  if (!parser) {\n    throw new Error(`unknown operator: ${operator}`);\n  }\n  return parser(encoded, returnType, context);\n}\n\n/**\n * Returns a simplified geometry type suited for the `geometry-type` operator\n * @param {import('../geom/Geometry.js').default|import('../render/Feature.js').default} geometry Geometry object\n * @return {'Point'|'LineString'|'Polygon'|''} Simplified geometry type; empty string of no geometry found\n */\nexport function computeGeometryType(geometry) {\n  if (!geometry) {\n    return '';\n  }\n  const type = geometry.getType();\n  switch (type) {\n    case 'Point':\n    case 'LineString':\n    case 'Polygon':\n      return type;\n    case 'MultiPoint':\n    case 'MultiLineString':\n    case 'MultiPolygon':\n      return /** @type {'Point'|'LineString'|'Polygon'} */ (type.substring(5));\n    case 'Circle':\n      return 'Polygon';\n    case 'GeometryCollection':\n      return computeGeometryType(\n        /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries()[0],\n      );\n    default:\n      return '';\n  }\n}\n","/**\n * @module ol/expr/cpu\n */\n\nimport {\n  fromString,\n  lchaToRgba,\n  rgbaToLcha,\n  toString,\n  withAlpha,\n} from '../color.js';\nimport {ColorType, LiteralExpression, Ops, parse} from './expression.js';\n\n/**\n * @fileoverview This module includes functions to build expressions for evaluation on the CPU.\n * Building is composed of two steps: parsing and compiling.  The parsing step takes an encoded\n * expression and returns an instance of one of the expression classes.  The compiling step takes\n * the expression instance and returns a function that can be evaluated in to return a literal\n * value.  The evaluator function should do as little allocation and work as possible.\n */\n\n/**\n * @typedef {Object} EvaluationContext\n * @property {Object} properties The values for properties used in 'get' expressions.\n * @property {Object} variables The values for variables used in 'var' expressions.\n * @property {number} resolution The map resolution.\n * @property {string|number|null} featureId The feature id.\n * @property {string} geometryType Geometry type of the current object.\n */\n\n/**\n * @return {EvaluationContext} A new evaluation context.\n */\nexport function newEvaluationContext() {\n  return {\n    variables: {},\n    properties: {},\n    resolution: NaN,\n    featureId: null,\n    geometryType: '',\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):import(\"./expression.js\").LiteralValue} ExpressionEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):boolean} BooleanEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):number} NumberEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):string} StringEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>|string)} ColorLikeEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):Array<number>} NumberArrayEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):Array<number>} CoordinateEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>)} SizeEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>|number)} SizeLikeEvaluator\n */\n\n/**\n * @param {import('./expression.js').EncodedExpression} encoded The encoded expression.\n * @param {number} type The expected type.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The expression evaluator.\n */\nexport function buildExpression(encoded, type, context) {\n  const expression = parse(encoded, type, context);\n  return compileExpression(expression, context);\n}\n\n/**\n * @param {import(\"./expression.js\").Expression} expression The expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileExpression(expression, context) {\n  if (expression instanceof LiteralExpression) {\n    // convert colors to array if possible\n    if (expression.type === ColorType && typeof expression.value === 'string') {\n      const colorValue = fromString(expression.value);\n      return function () {\n        return colorValue;\n      };\n    }\n    return function () {\n      return expression.value;\n    };\n  }\n  const operator = expression.operator;\n  switch (operator) {\n    case Ops.Number:\n    case Ops.String:\n    case Ops.Coalesce: {\n      return compileAssertionExpression(expression, context);\n    }\n    case Ops.Get:\n    case Ops.Var:\n    case Ops.Has: {\n      return compileAccessorExpression(expression, context);\n    }\n    case Ops.Id: {\n      return (context) => context.featureId;\n    }\n    case Ops.GeometryType: {\n      return (context) => context.geometryType;\n    }\n    case Ops.Concat: {\n      const args = expression.args.map((e) => compileExpression(e, context));\n      return (context) =>\n        ''.concat(...args.map((arg) => arg(context).toString()));\n    }\n    case Ops.Resolution: {\n      return (context) => context.resolution;\n    }\n    case Ops.Any:\n    case Ops.All:\n    case Ops.Between:\n    case Ops.In:\n    case Ops.Not: {\n      return compileLogicalExpression(expression, context);\n    }\n    case Ops.Equal:\n    case Ops.NotEqual:\n    case Ops.LessThan:\n    case Ops.LessThanOrEqualTo:\n    case Ops.GreaterThan:\n    case Ops.GreaterThanOrEqualTo: {\n      return compileComparisonExpression(expression, context);\n    }\n    case Ops.Multiply:\n    case Ops.Divide:\n    case Ops.Add:\n    case Ops.Subtract:\n    case Ops.Clamp:\n    case Ops.Mod:\n    case Ops.Pow:\n    case Ops.Abs:\n    case Ops.Floor:\n    case Ops.Ceil:\n    case Ops.Round:\n    case Ops.Sin:\n    case Ops.Cos:\n    case Ops.Atan:\n    case Ops.Sqrt: {\n      return compileNumericExpression(expression, context);\n    }\n    case Ops.Case: {\n      return compileCaseExpression(expression, context);\n    }\n    case Ops.Match: {\n      return compileMatchExpression(expression, context);\n    }\n    case Ops.Interpolate: {\n      return compileInterpolateExpression(expression, context);\n    }\n    case Ops.ToString: {\n      return compileConvertExpression(expression, context);\n    }\n    default: {\n      throw new Error(`Unsupported operator ${operator}`);\n    }\n    // TODO: unimplemented\n    // Ops.Zoom\n    // Ops.Time\n    // Ops.Array\n    // Ops.Color\n    // Ops.Band\n    // Ops.Palette\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileAssertionExpression(expression, context) {\n  const type = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (type) {\n    case Ops.Coalesce: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          const value = args[i](context);\n          if (typeof value !== 'undefined' && value !== null) {\n            return value;\n          }\n        }\n        throw new Error('Expected one of the values to be non-null');\n      };\n    }\n    case Ops.Number:\n    case Ops.String: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          const value = args[i](context);\n          if (typeof value === type) {\n            return value;\n          }\n        }\n        throw new Error(`Expected one of the values to be a ${type}`);\n      };\n    }\n    default: {\n      throw new Error(`Unsupported assertion operator ${type}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileAccessorExpression(expression, context) {\n  const nameExpression = /** @type {LiteralExpression} */ (expression.args[0]);\n  const name = /** @type {string} */ (nameExpression.value);\n  switch (expression.operator) {\n    case Ops.Get: {\n      return (context) => {\n        const args = expression.args;\n        let value = context.properties[name];\n        for (let i = 1, ii = args.length; i < ii; ++i) {\n          const keyExpression = /** @type {LiteralExpression} */ (args[i]);\n          const key = /** @type {string|number} */ (keyExpression.value);\n          value = value[key];\n        }\n        return value;\n      };\n    }\n    case Ops.Var: {\n      return (context) => context.variables[name];\n    }\n    case Ops.Has: {\n      return (context) => {\n        const args = expression.args;\n        if (!(name in context.properties)) {\n          return false;\n        }\n        let value = context.properties[name];\n        for (let i = 1, ii = args.length; i < ii; ++i) {\n          const keyExpression = /** @type {LiteralExpression} */ (args[i]);\n          const key = /** @type {string|number} */ (keyExpression.value);\n          if (!value || !Object.hasOwn(value, key)) {\n            return false;\n          }\n          value = value[key];\n        }\n        return true;\n      };\n    }\n    default: {\n      throw new Error(`Unsupported accessor operator ${expression.operator}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {BooleanEvaluator} The evaluator function.\n */\nfunction compileComparisonExpression(expression, context) {\n  const op = expression.operator;\n  const left = compileExpression(expression.args[0], context);\n  const right = compileExpression(expression.args[1], context);\n  switch (op) {\n    case Ops.Equal: {\n      return (context) => left(context) === right(context);\n    }\n    case Ops.NotEqual: {\n      return (context) => left(context) !== right(context);\n    }\n    case Ops.LessThan: {\n      return (context) => left(context) < right(context);\n    }\n    case Ops.LessThanOrEqualTo: {\n      return (context) => left(context) <= right(context);\n    }\n    case Ops.GreaterThan: {\n      return (context) => left(context) > right(context);\n    }\n    case Ops.GreaterThanOrEqualTo: {\n      return (context) => left(context) >= right(context);\n    }\n    default: {\n      throw new Error(`Unsupported comparison operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {BooleanEvaluator} The evaluator function.\n */\nfunction compileLogicalExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.Any: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          if (args[i](context)) {\n            return true;\n          }\n        }\n        return false;\n      };\n    }\n    case Ops.All: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          if (!args[i](context)) {\n            return false;\n          }\n        }\n        return true;\n      };\n    }\n    case Ops.Between: {\n      return (context) => {\n        const value = args[0](context);\n        const min = args[1](context);\n        const max = args[2](context);\n        return value >= min && value <= max;\n      };\n    }\n    case Ops.In: {\n      return (context) => {\n        const value = args[0](context);\n        for (let i = 1; i < length; ++i) {\n          if (value === args[i](context)) {\n            return true;\n          }\n        }\n        return false;\n      };\n    }\n    case Ops.Not: {\n      return (context) => !args[0](context);\n    }\n    default: {\n      throw new Error(`Unsupported logical operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {NumberEvaluator} The evaluator function.\n */\nfunction compileNumericExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.Multiply: {\n      return (context) => {\n        let value = 1;\n        for (let i = 0; i < length; ++i) {\n          value *= args[i](context);\n        }\n        return value;\n      };\n    }\n    case Ops.Divide: {\n      return (context) => args[0](context) / args[1](context);\n    }\n    case Ops.Add: {\n      return (context) => {\n        let value = 0;\n        for (let i = 0; i < length; ++i) {\n          value += args[i](context);\n        }\n        return value;\n      };\n    }\n    case Ops.Subtract: {\n      return (context) => args[0](context) - args[1](context);\n    }\n    case Ops.Clamp: {\n      return (context) => {\n        const value = args[0](context);\n        const min = args[1](context);\n        if (value < min) {\n          return min;\n        }\n        const max = args[2](context);\n        if (value > max) {\n          return max;\n        }\n        return value;\n      };\n    }\n    case Ops.Mod: {\n      return (context) => args[0](context) % args[1](context);\n    }\n    case Ops.Pow: {\n      return (context) => Math.pow(args[0](context), args[1](context));\n    }\n    case Ops.Abs: {\n      return (context) => Math.abs(args[0](context));\n    }\n    case Ops.Floor: {\n      return (context) => Math.floor(args[0](context));\n    }\n    case Ops.Ceil: {\n      return (context) => Math.ceil(args[0](context));\n    }\n    case Ops.Round: {\n      return (context) => Math.round(args[0](context));\n    }\n    case Ops.Sin: {\n      return (context) => Math.sin(args[0](context));\n    }\n    case Ops.Cos: {\n      return (context) => Math.cos(args[0](context));\n    }\n    case Ops.Atan: {\n      if (length === 2) {\n        return (context) => Math.atan2(args[0](context), args[1](context));\n      }\n      return (context) => Math.atan(args[0](context));\n    }\n    case Ops.Sqrt: {\n      return (context) => Math.sqrt(args[0](context));\n    }\n    default: {\n      throw new Error(`Unsupported numeric operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileCaseExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    for (let i = 0; i < length - 1; i += 2) {\n      const condition = args[i](context);\n      if (condition) {\n        return args[i + 1](context);\n      }\n    }\n    return args[length - 1](context);\n  };\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileMatchExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    const value = args[0](context);\n    for (let i = 1; i < length; i += 2) {\n      if (value === args[i](context)) {\n        return args[i + 1](context);\n      }\n    }\n    return args[length - 1](context);\n  };\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileInterpolateExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    const base = args[0](context);\n    const value = args[1](context);\n\n    let previousInput;\n    let previousOutput;\n    for (let i = 2; i < length; i += 2) {\n      const input = args[i](context);\n      let output = args[i + 1](context);\n      const isColor = Array.isArray(output);\n      if (isColor) {\n        output = withAlpha(output);\n      }\n      if (input >= value) {\n        if (i === 2) {\n          return output;\n        }\n        if (isColor) {\n          return interpolateColor(\n            base,\n            value,\n            previousInput,\n            previousOutput,\n            input,\n            output,\n          );\n        }\n        return interpolateNumber(\n          base,\n          value,\n          previousInput,\n          previousOutput,\n          input,\n          output,\n        );\n      }\n      previousInput = input;\n      previousOutput = output;\n    }\n    return previousOutput;\n  };\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileConvertExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.ToString: {\n      return (context) => {\n        const value = args[0](context);\n        if (expression.args[0].type === ColorType) {\n          return toString(value);\n        }\n        return value.toString();\n      };\n    }\n    default: {\n      throw new Error(`Unsupported convert operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {number} base The base.\n * @param {number} value The value.\n * @param {number} input1 The first input value.\n * @param {number} output1 The first output value.\n * @param {number} input2 The second input value.\n * @param {number} output2 The second output value.\n * @return {number} The interpolated value.\n */\nfunction interpolateNumber(base, value, input1, output1, input2, output2) {\n  const delta = input2 - input1;\n  if (delta === 0) {\n    return output1;\n  }\n  const along = value - input1;\n  const factor =\n    base === 1\n      ? along / delta\n      : (Math.pow(base, along) - 1) / (Math.pow(base, delta) - 1);\n  return output1 + factor * (output2 - output1);\n}\n\n/**\n * @param {number} base The base.\n * @param {number} value The value.\n * @param {number} input1 The first input value.\n * @param {import('../color.js').Color} rgba1 The first output value.\n * @param {number} input2 The second input value.\n * @param {import('../color.js').Color} rgba2 The second output value.\n * @return {import('../color.js').Color} The interpolated color.\n */\nfunction interpolateColor(base, value, input1, rgba1, input2, rgba2) {\n  const delta = input2 - input1;\n  if (delta === 0) {\n    return rgba1;\n  }\n  const lcha1 = rgbaToLcha(rgba1);\n  const lcha2 = rgbaToLcha(rgba2);\n  let deltaHue = lcha2[2] - lcha1[2];\n  if (deltaHue > 180) {\n    deltaHue -= 360;\n  } else if (deltaHue < -180) {\n    deltaHue += 360;\n  }\n\n  const lcha = [\n    interpolateNumber(base, value, input1, lcha1[0], input2, lcha2[0]),\n    interpolateNumber(base, value, input1, lcha1[1], input2, lcha2[1]),\n    lcha1[2] + interpolateNumber(base, value, input1, 0, input2, deltaHue),\n    interpolateNumber(base, value, input1, rgba1[3], input2, rgba2[3]),\n  ];\n  return lchaToRgba(lcha);\n}\n","/**\n * @module ol/render/canvas/style\n */\n\nimport {NO_COLOR} from '../../color.js';\nimport {buildExpression, newEvaluationContext} from '../../expr/cpu.js';\nimport {\n  BooleanType,\n  ColorType,\n  NumberArrayType,\n  NumberType,\n  StringType,\n  computeGeometryType,\n  newParsingContext,\n} from '../../expr/expression.js';\nimport {isEmpty} from '../../obj.js';\nimport {toSize} from '../../size.js';\nimport Circle from '../../style/Circle.js';\nimport Fill from '../../style/Fill.js';\nimport Icon from '../../style/Icon.js';\nimport RegularShape from '../../style/RegularShape.js';\nimport Stroke from '../../style/Stroke.js';\nimport Style from '../../style/Style.js';\nimport Text from '../../style/Text.js';\n\n/**\n * @fileoverview This module includes functions to build styles for the canvas renderer.  Building\n * is composed of two steps: parsing and compiling.  The parsing step takes an encoded expression\n * and returns an instance of one of the expression classes.  The compiling step takes the\n * expression instance and returns a function that can be evaluated to return a literal value.  The\n * evaluator function should do as little allocation and work as possible.\n */\n\n/**\n * @typedef {import(\"../../style/flat.js\").FlatStyle} FlatStyle\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").EncodedExpression} EncodedExpression\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").ParsingContext} ParsingContext\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").CallExpression} CallExpression\n */\n\n/**\n * @typedef {import(\"../../expr/cpu.js\").EvaluationContext} EvaluationContext\n */\n\n/**\n * @typedef {import(\"../../expr/cpu.js\").ExpressionEvaluator} ExpressionEvaluator\n */\n\n/**\n * @param {EvaluationContext} context The evaluation context.\n * @return {boolean} Always true.\n */\nfunction always(context) {\n  return true;\n}\n\n/**\n * This function adapts a rule evaluator to the existing style function interface.\n * After we have deprecated the style function, we can use the compiled rules directly\n * and pass a more complete evaluation context (variables, zoom, time, etc.).\n *\n * @param {Array<import('../../style/flat.js').Rule>} rules The rules.\n * @return {import('../../style/Style.js').StyleFunction} A style function.\n */\nexport function rulesToStyleFunction(rules) {\n  const parsingContext = newParsingContext();\n  const evaluator = buildRuleSet(rules, parsingContext);\n  const evaluationContext = newEvaluationContext();\n  return function (feature, resolution) {\n    evaluationContext.properties = feature.getPropertiesInternal();\n    evaluationContext.resolution = resolution;\n    if (parsingContext.featureId) {\n      const id = feature.getId();\n      if (id !== undefined) {\n        evaluationContext.featureId = id;\n      } else {\n        evaluationContext.featureId = null;\n      }\n    }\n    if (parsingContext.geometryType) {\n      evaluationContext.geometryType = computeGeometryType(\n        feature.getGeometry(),\n      );\n    }\n    return evaluator(evaluationContext);\n  };\n}\n\n/**\n * This function adapts a style evaluator to the existing style function interface.\n * After we have deprecated the style function, we can use the compiled rules directly\n * and pass a more complete evaluation context (variables, zoom, time, etc.).\n *\n * @param {Array<import('../../style/flat.js').FlatStyle>} flatStyles The flat styles.\n * @return {import('../../style/Style.js').StyleFunction} A style function.\n */\nexport function flatStylesToStyleFunction(flatStyles) {\n  const parsingContext = newParsingContext();\n  const length = flatStyles.length;\n\n  /**\n   * @type {Array<StyleEvaluator>}\n   */\n  const evaluators = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    evaluators[i] = buildStyle(flatStyles[i], parsingContext);\n  }\n  const evaluationContext = newEvaluationContext();\n\n  /**\n   * @type {Array<Style>}\n   */\n  const styles = new Array(length);\n\n  return function (feature, resolution) {\n    evaluationContext.properties = feature.getPropertiesInternal();\n    evaluationContext.resolution = resolution;\n    if (parsingContext.featureId) {\n      const id = feature.getId();\n      if (id !== undefined) {\n        evaluationContext.featureId = id;\n      } else {\n        evaluationContext.featureId = null;\n      }\n    }\n    let nonNullCount = 0;\n    for (let i = 0; i < length; ++i) {\n      const style = evaluators[i](evaluationContext);\n      if (style) {\n        styles[nonNullCount] = style;\n        nonNullCount += 1;\n      }\n    }\n    styles.length = nonNullCount;\n    return styles;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Array<Style>} RuleSetEvaluator\n */\n\n/**\n * @typedef {Object} CompiledRule\n * @property {ExpressionEvaluator} filter The compiled filter evaluator.\n * @property {Array<StyleEvaluator>} styles The list of compiled style evaluators.\n */\n\n/**\n * @param {Array<import('../../style/flat.js').Rule>} rules The rules.\n * @param {ParsingContext} context The parsing context.\n * @return {RuleSetEvaluator} The evaluator function.\n */\nexport function buildRuleSet(rules, context) {\n  const length = rules.length;\n\n  /**\n   * @type {Array<CompiledRule>}\n   */\n  const compiledRules = new Array(length);\n\n  for (let i = 0; i < length; ++i) {\n    const rule = rules[i];\n    const filter =\n      'filter' in rule\n        ? buildExpression(rule.filter, BooleanType, context)\n        : always;\n\n    /**\n     * @type {Array<StyleEvaluator>}\n     */\n    let styles;\n    if (Array.isArray(rule.style)) {\n      const styleLength = rule.style.length;\n      styles = new Array(styleLength);\n      for (let j = 0; j < styleLength; ++j) {\n        styles[j] = buildStyle(rule.style[j], context);\n      }\n    } else {\n      styles = [buildStyle(rule.style, context)];\n    }\n\n    compiledRules[i] = {filter, styles};\n  }\n\n  return function (context) {\n    /**\n     * @type {Array<Style>}\n     */\n    const styles = [];\n\n    let someMatched = false;\n    for (let i = 0; i < length; ++i) {\n      const filterEvaluator = compiledRules[i].filter;\n      if (!filterEvaluator(context)) {\n        continue;\n      }\n      if (rules[i].else && someMatched) {\n        continue;\n      }\n      someMatched = true;\n      for (const styleEvaluator of compiledRules[i].styles) {\n        const style = styleEvaluator(context);\n        if (!style) {\n          continue;\n        }\n        styles.push(style);\n      }\n    }\n\n    return styles;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Style|null} StyleEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle A flat style literal.\n * @param {ParsingContext} context The parsing context.\n * @return {StyleEvaluator} A function that evaluates to a style.  The style returned by\n * this function will be reused between invocations.\n */\nexport function buildStyle(flatStyle, context) {\n  const evaluateFill = buildFill(flatStyle, '', context);\n  const evaluateStroke = buildStroke(flatStyle, '', context);\n  const evaluateText = buildText(flatStyle, context);\n  const evaluateImage = buildImage(flatStyle, context);\n  const evaluateZIndex = numberEvaluator(flatStyle, 'z-index', context);\n\n  if (\n    !evaluateFill &&\n    !evaluateStroke &&\n    !evaluateText &&\n    !evaluateImage &&\n    !isEmpty(flatStyle)\n  ) {\n    // assume this is a user error\n    // would be nice to check the properties and suggest \"did you mean...\"\n    throw new Error(\n      'No fill, stroke, point, or text symbolizer properties in style: ' +\n        JSON.stringify(flatStyle),\n    );\n  }\n\n  const style = new Style();\n  return function (context) {\n    let empty = true;\n    if (evaluateFill) {\n      const fill = evaluateFill(context);\n      if (fill) {\n        empty = false;\n      }\n      style.setFill(fill);\n    }\n    if (evaluateStroke) {\n      const stroke = evaluateStroke(context);\n      if (stroke) {\n        empty = false;\n      }\n      style.setStroke(stroke);\n    }\n    if (evaluateText) {\n      const text = evaluateText(context);\n      if (text) {\n        empty = false;\n      }\n      style.setText(text);\n    }\n    if (evaluateImage) {\n      const image = evaluateImage(context);\n      if (image) {\n        empty = false;\n      }\n      style.setImage(image);\n    }\n    if (evaluateZIndex) {\n      style.setZIndex(evaluateZIndex(context));\n    }\n    if (empty) {\n      return null;\n    }\n    return style;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Fill|null} FillEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @param {ParsingContext} context The parsing context.\n * @return {FillEvaluator?} A function that evaluates to a fill.\n */\nfunction buildFill(flatStyle, prefix, context) {\n  let evaluateColor;\n  if (prefix + 'fill-pattern-src' in flatStyle) {\n    evaluateColor = patternEvaluator(flatStyle, prefix + 'fill-', context);\n  } else {\n    if (flatStyle[prefix + 'fill-color'] === 'none') {\n      // avoids hit detection\n      return (context) => null;\n    }\n\n    evaluateColor = colorLikeEvaluator(\n      flatStyle,\n      prefix + 'fill-color',\n      context,\n    );\n  }\n  if (!evaluateColor) {\n    return null;\n  }\n\n  const fill = new Fill();\n  return function (context) {\n    const color = evaluateColor(context);\n    if (color === NO_COLOR) {\n      return null;\n    }\n    fill.setColor(color);\n    return fill;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Stroke|null} StrokeEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @param {ParsingContext} context The parsing context.\n * @return {StrokeEvaluator?} A function the evaluates to a stroke.\n */\nfunction buildStroke(flatStyle, prefix, context) {\n  const evaluateWidth = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-width',\n    context,\n  );\n\n  const evaluateColor = colorLikeEvaluator(\n    flatStyle,\n    prefix + 'stroke-color',\n    context,\n  );\n\n  if (!evaluateWidth && !evaluateColor) {\n    return null;\n  }\n\n  const evaluateLineCap = stringEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-cap',\n    context,\n  );\n\n  const evaluateLineJoin = stringEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-join',\n    context,\n  );\n\n  const evaluateLineDash = numberArrayEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-dash',\n    context,\n  );\n\n  const evaluateLineDashOffset = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-dash-offset',\n    context,\n  );\n\n  const evaluateMiterLimit = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-miter-limit',\n    context,\n  );\n\n  const stroke = new Stroke();\n  return function (context) {\n    if (evaluateColor) {\n      const color = evaluateColor(context);\n      if (color === NO_COLOR) {\n        return null;\n      }\n      stroke.setColor(color);\n    }\n\n    if (evaluateWidth) {\n      stroke.setWidth(evaluateWidth(context));\n    }\n\n    if (evaluateLineCap) {\n      const lineCap = evaluateLineCap(context);\n      if (lineCap !== 'butt' && lineCap !== 'round' && lineCap !== 'square') {\n        throw new Error('Expected butt, round, or square line cap');\n      }\n      stroke.setLineCap(lineCap);\n    }\n\n    if (evaluateLineJoin) {\n      const lineJoin = evaluateLineJoin(context);\n      if (\n        lineJoin !== 'bevel' &&\n        lineJoin !== 'round' &&\n        lineJoin !== 'miter'\n      ) {\n        throw new Error('Expected bevel, round, or miter line join');\n      }\n      stroke.setLineJoin(lineJoin);\n    }\n\n    if (evaluateLineDash) {\n      stroke.setLineDash(evaluateLineDash(context));\n    }\n\n    if (evaluateLineDashOffset) {\n      stroke.setLineDashOffset(evaluateLineDashOffset(context));\n    }\n\n    if (evaluateMiterLimit) {\n      stroke.setMiterLimit(evaluateMiterLimit(context));\n    }\n\n    return stroke;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Text} TextEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {TextEvaluator?} A function that evaluates to a text symbolizer.\n */\nfunction buildText(flatStyle, context) {\n  const prefix = 'text-';\n\n  // Currently, an Array<string> may be used for rich text support.  This doesn't\n  // work with our expression syntax where arrays of strings are interpreted as\n  // call expressions.  To support rich text, we could add a 'strings' operator\n  // where all the following arguments would be string values.\n  const evaluateValue = stringEvaluator(flatStyle, prefix + 'value', context);\n  if (!evaluateValue) {\n    return null;\n  }\n\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n\n  const evaluateBackgroundFill = buildFill(\n    flatStyle,\n    prefix + 'background-',\n    context,\n  );\n\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n\n  const evaluateBackgroundStroke = buildStroke(\n    flatStyle,\n    prefix + 'background-',\n    context,\n  );\n\n  const evaluateFont = stringEvaluator(flatStyle, prefix + 'font', context);\n\n  const evaluateMaxAngle = numberEvaluator(\n    flatStyle,\n    prefix + 'max-angle',\n    context,\n  );\n\n  const evaluateOffsetX = numberEvaluator(\n    flatStyle,\n    prefix + 'offset-x',\n    context,\n  );\n\n  const evaluateOffsetY = numberEvaluator(\n    flatStyle,\n    prefix + 'offset-y',\n    context,\n  );\n\n  const evaluateOverflow = booleanEvaluator(\n    flatStyle,\n    prefix + 'overflow',\n    context,\n  );\n\n  const evaluatePlacement = stringEvaluator(\n    flatStyle,\n    prefix + 'placement',\n    context,\n  );\n\n  const evaluateRepeat = numberEvaluator(flatStyle, prefix + 'repeat', context);\n\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n\n  const evaluateAlign = stringEvaluator(flatStyle, prefix + 'align', context);\n\n  const evaluateJustify = stringEvaluator(\n    flatStyle,\n    prefix + 'justify',\n    context,\n  );\n\n  const evaluateBaseline = stringEvaluator(\n    flatStyle,\n    prefix + 'baseline',\n    context,\n  );\n\n  const evaluateKeepUpright = booleanEvaluator(\n    flatStyle,\n    prefix + 'keep-upright',\n    context,\n  );\n\n  const evaluatePadding = numberArrayEvaluator(\n    flatStyle,\n    prefix + 'padding',\n    context,\n  );\n\n  // The following properties are not currently settable\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const text = new Text({declutterMode});\n\n  return function (context) {\n    text.setText(evaluateValue(context));\n\n    if (evaluateFill) {\n      text.setFill(evaluateFill(context));\n    }\n\n    if (evaluateBackgroundFill) {\n      text.setBackgroundFill(evaluateBackgroundFill(context));\n    }\n\n    if (evaluateStroke) {\n      text.setStroke(evaluateStroke(context));\n    }\n\n    if (evaluateBackgroundStroke) {\n      text.setBackgroundStroke(evaluateBackgroundStroke(context));\n    }\n\n    if (evaluateFont) {\n      text.setFont(evaluateFont(context));\n    }\n\n    if (evaluateMaxAngle) {\n      text.setMaxAngle(evaluateMaxAngle(context));\n    }\n\n    if (evaluateOffsetX) {\n      text.setOffsetX(evaluateOffsetX(context));\n    }\n\n    if (evaluateOffsetY) {\n      text.setOffsetY(evaluateOffsetY(context));\n    }\n\n    if (evaluateOverflow) {\n      text.setOverflow(evaluateOverflow(context));\n    }\n\n    if (evaluatePlacement) {\n      const placement = evaluatePlacement(context);\n      if (placement !== 'point' && placement !== 'line') {\n        throw new Error('Expected point or line for text-placement');\n      }\n      text.setPlacement(placement);\n    }\n\n    if (evaluateRepeat) {\n      text.setRepeat(evaluateRepeat(context));\n    }\n\n    if (evaluateScale) {\n      text.setScale(evaluateScale(context));\n    }\n\n    if (evaluateRotateWithView) {\n      text.setRotateWithView(evaluateRotateWithView(context));\n    }\n\n    if (evaluateRotation) {\n      text.setRotation(evaluateRotation(context));\n    }\n\n    if (evaluateAlign) {\n      const textAlign = evaluateAlign(context);\n      if (\n        textAlign !== 'left' &&\n        textAlign !== 'center' &&\n        textAlign !== 'right' &&\n        textAlign !== 'end' &&\n        textAlign !== 'start'\n      ) {\n        throw new Error(\n          'Expected left, right, center, start, or end for text-align',\n        );\n      }\n      text.setTextAlign(textAlign);\n    }\n\n    if (evaluateJustify) {\n      const justify = evaluateJustify(context);\n      if (justify !== 'left' && justify !== 'right' && justify !== 'center') {\n        throw new Error('Expected left, right, or center for text-justify');\n      }\n      text.setJustify(justify);\n    }\n\n    if (evaluateBaseline) {\n      const textBaseline = evaluateBaseline(context);\n      if (\n        textBaseline !== 'bottom' &&\n        textBaseline !== 'top' &&\n        textBaseline !== 'middle' &&\n        textBaseline !== 'alphabetic' &&\n        textBaseline !== 'hanging'\n      ) {\n        throw new Error(\n          'Expected bottom, top, middle, alphabetic, or hanging for text-baseline',\n        );\n      }\n      text.setTextBaseline(textBaseline);\n    }\n\n    if (evaluatePadding) {\n      text.setPadding(evaluatePadding(context));\n    }\n\n    if (evaluateKeepUpright) {\n      text.setKeepUpright(evaluateKeepUpright(context));\n    }\n\n    return text;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):import(\"../../style/Image.js\").default} ImageEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator?} A function that evaluates to an image symbolizer.\n */\nfunction buildImage(flatStyle, context) {\n  if ('icon-src' in flatStyle) {\n    return buildIcon(flatStyle, context);\n  }\n\n  if ('shape-points' in flatStyle) {\n    return buildShape(flatStyle, context);\n  }\n\n  if ('circle-radius' in flatStyle) {\n    return buildCircle(flatStyle, context);\n  }\n\n  return null;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to an image symbolizer.\n */\nfunction buildIcon(flatStyle, context) {\n  const prefix = 'icon-';\n\n  // required property\n  const srcName = prefix + 'src';\n  const src = requireString(flatStyle[srcName], srcName);\n\n  // settable properties\n  const evaluateAnchor = coordinateEvaluator(\n    flatStyle,\n    prefix + 'anchor',\n    context,\n  );\n\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n\n  const evaluateOpacity = numberEvaluator(\n    flatStyle,\n    prefix + 'opacity',\n    context,\n  );\n\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context,\n  );\n\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  // the remaining symbolizer properties are not currently settable\n  const anchorOrigin = optionalIconOrigin(flatStyle, prefix + 'anchor-origin');\n  const anchorXUnits = optionalIconAnchorUnits(\n    flatStyle,\n    prefix + 'anchor-x-units',\n  );\n  const anchorYUnits = optionalIconAnchorUnits(\n    flatStyle,\n    prefix + 'anchor-y-units',\n  );\n  const color = optionalColorLike(flatStyle, prefix + 'color');\n  const crossOrigin = optionalString(flatStyle, prefix + 'cross-origin');\n  const offset = optionalNumberArray(flatStyle, prefix + 'offset');\n  const offsetOrigin = optionalIconOrigin(flatStyle, prefix + 'offset-origin');\n  const width = optionalNumber(flatStyle, prefix + 'width');\n  const height = optionalNumber(flatStyle, prefix + 'height');\n  const size = optionalSize(flatStyle, prefix + 'size');\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const icon = new Icon({\n    src,\n    anchorOrigin,\n    anchorXUnits,\n    anchorYUnits,\n    color,\n    crossOrigin,\n    offset,\n    offsetOrigin,\n    height,\n    width,\n    size,\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateOpacity) {\n      icon.setOpacity(evaluateOpacity(context));\n    }\n\n    if (evaluateDisplacement) {\n      icon.setDisplacement(evaluateDisplacement(context));\n    }\n\n    if (evaluateRotation) {\n      icon.setRotation(evaluateRotation(context));\n    }\n\n    if (evaluateRotateWithView) {\n      icon.setRotateWithView(evaluateRotateWithView(context));\n    }\n\n    if (evaluateScale) {\n      icon.setScale(evaluateScale(context));\n    }\n\n    if (evaluateAnchor) {\n      icon.setAnchor(evaluateAnchor(context));\n    }\n    return icon;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to an icon symbolizer.\n */\nfunction buildShape(flatStyle, context) {\n  const prefix = 'shape-';\n\n  // required property\n  const pointsName = prefix + 'points';\n  const radiusName = prefix + 'radius';\n  const points = requireNumber(flatStyle[pointsName], pointsName);\n  const radius = requireNumber(flatStyle[radiusName], radiusName);\n\n  // settable properties\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context,\n  );\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  // the remaining properties are not currently settable\n  const radius2 = optionalNumber(flatStyle, prefix + 'radius2');\n  const angle = optionalNumber(flatStyle, prefix + 'angle');\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const shape = new RegularShape({\n    points,\n    radius,\n    radius2,\n    angle,\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateFill) {\n      shape.setFill(evaluateFill(context));\n    }\n    if (evaluateStroke) {\n      shape.setStroke(evaluateStroke(context));\n    }\n    if (evaluateDisplacement) {\n      shape.setDisplacement(evaluateDisplacement(context));\n    }\n    if (evaluateRotation) {\n      shape.setRotation(evaluateRotation(context));\n    }\n    if (evaluateRotateWithView) {\n      shape.setRotateWithView(evaluateRotateWithView(context));\n    }\n    if (evaluateScale) {\n      shape.setScale(evaluateScale(context));\n    }\n\n    return shape;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to a circle symbolizer.\n */\nfunction buildCircle(flatStyle, context) {\n  const prefix = 'circle-';\n\n  // settable properties\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n  const evaluateRadius = numberEvaluator(flatStyle, prefix + 'radius', context);\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context,\n  );\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  // the remaining properties are not currently settable\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const circle = new Circle({\n    radius: 5, // this is arbitrary, but required - the evaluated radius is used below\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateRadius) {\n      circle.setRadius(evaluateRadius(context));\n    }\n    if (evaluateFill) {\n      circle.setFill(evaluateFill(context));\n    }\n    if (evaluateStroke) {\n      circle.setStroke(evaluateStroke(context));\n    }\n    if (evaluateDisplacement) {\n      circle.setDisplacement(evaluateDisplacement(context));\n    }\n    if (evaluateRotation) {\n      circle.setRotation(evaluateRotation(context));\n    }\n    if (evaluateRotateWithView) {\n      circle.setRotateWithView(evaluateRotateWithView(context));\n    }\n    if (evaluateScale) {\n      circle.setScale(evaluateScale(context));\n    }\n\n    return circle;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').NumberEvaluator|undefined} The expression evaluator or undefined.\n */\nfunction numberEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return undefined;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberType, context);\n  return function (context) {\n    return requireNumber(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').StringEvaluator?} The expression evaluator.\n */\nfunction stringEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], StringType, context);\n  return function (context) {\n    return requireString(evaluator(context), name);\n  };\n}\n\nfunction patternEvaluator(flatStyle, prefix, context) {\n  const srcEvaluator = stringEvaluator(\n    flatStyle,\n    prefix + 'pattern-src',\n    context,\n  );\n  const offsetEvaluator = sizeEvaluator(\n    flatStyle,\n    prefix + 'pattern-offset',\n    context,\n  );\n  const patternSizeEvaluator = sizeEvaluator(\n    flatStyle,\n    prefix + 'pattern-size',\n    context,\n  );\n  const colorEvaluator = colorLikeEvaluator(\n    flatStyle,\n    prefix + 'color',\n    context,\n  );\n  return function (context) {\n    return {\n      src: srcEvaluator(context),\n      offset: offsetEvaluator && offsetEvaluator(context),\n      size: patternSizeEvaluator && patternSizeEvaluator(context),\n      color: colorEvaluator && colorEvaluator(context),\n    };\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').BooleanEvaluator?} The expression evaluator.\n */\nfunction booleanEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], BooleanType, context);\n  return function (context) {\n    const value = evaluator(context);\n    if (typeof value !== 'boolean') {\n      throw new Error(`Expected a boolean for ${name}`);\n    }\n    return value;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').ColorLikeEvaluator?} The expression evaluator.\n */\nfunction colorLikeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], ColorType, context);\n  return function (context) {\n    return requireColorLike(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').NumberArrayEvaluator?} The expression evaluator.\n */\nfunction numberArrayEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    return requireNumberArray(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').CoordinateEvaluator?} The expression evaluator.\n */\nfunction coordinateEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    const array = requireNumberArray(evaluator(context), name);\n    if (array.length !== 2) {\n      throw new Error(`Expected two numbers for ${name}`);\n    }\n    return array;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').SizeEvaluator?} The expression evaluator.\n */\nfunction sizeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    return requireSize(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').SizeLikeEvaluator?} The expression evaluator.\n */\nfunction sizeLikeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(\n    flatStyle[name],\n    NumberArrayType | NumberType,\n    context,\n  );\n  return function (context) {\n    return requireSizeLike(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {number|undefined} A number or undefined.\n */\nfunction optionalNumber(flatStyle, property) {\n  const value = flatStyle[property];\n  if (value === undefined) {\n    return undefined;\n  }\n  if (typeof value !== 'number') {\n    throw new Error(`Expected a number for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../size.js\").Size|undefined} A size or undefined.\n */\nfunction optionalSize(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded === 'number') {\n    return toSize(encoded);\n  }\n  if (!Array.isArray(encoded)) {\n    throw new Error(`Expected a number or size array for ${property}`);\n  }\n  if (\n    encoded.length !== 2 ||\n    typeof encoded[0] !== 'number' ||\n    typeof encoded[1] !== 'number'\n  ) {\n    throw new Error(`Expected a number or size array for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {string|undefined} A string or undefined.\n */\nfunction optionalString(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../style/Icon.js\").IconOrigin|undefined} An icon origin or undefined.\n */\nfunction optionalIconOrigin(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (\n    encoded !== 'bottom-left' &&\n    encoded !== 'bottom-right' &&\n    encoded !== 'top-left' &&\n    encoded !== 'top-right'\n  ) {\n    throw new Error(\n      `Expected bottom-left, bottom-right, top-left, or top-right for ${property}`,\n    );\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../style/Icon.js\").IconAnchorUnits|undefined} Icon anchor units or undefined.\n */\nfunction optionalIconAnchorUnits(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (encoded !== 'pixels' && encoded !== 'fraction') {\n    throw new Error(`Expected pixels or fraction for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {Array<number>|undefined} An array of numbers or undefined.\n */\nfunction optionalNumberArray(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  return requireNumberArray(encoded, property);\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import('../../style/Style.js').DeclutterMode} Icon declutter mode.\n */\nfunction optionalDeclutterMode(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  if (encoded !== 'declutter' && encoded !== 'obstacle' && encoded !== 'none') {\n    throw new Error(`Expected declutter, obstacle, or none for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {string|Array<number>|undefined} A string or an array of color values or undefined.\n */\nfunction optionalColorLike(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  return requireColorLike(encoded, property);\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>} An array of numbers.\n */\nfunction requireNumberArray(value, property) {\n  if (!Array.isArray(value)) {\n    throw new Error(`Expected an array for ${property}`);\n  }\n  const length = value.length;\n  for (let i = 0; i < length; ++i) {\n    if (typeof value[i] !== 'number') {\n      throw new Error(`Expected an array of numbers for ${property}`);\n    }\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {string} A string.\n */\nfunction requireString(value, property) {\n  if (typeof value !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {number} A number.\n */\nfunction requireNumber(value, property) {\n  if (typeof value !== 'number') {\n    throw new Error(`Expected a number for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>|string} A color.\n */\nfunction requireColorLike(value, property) {\n  if (typeof value === 'string') {\n    return value;\n  }\n  const array = requireNumberArray(value, property);\n  const length = array.length;\n  if (length < 3 || length > 4) {\n    throw new Error(`Expected a color with 3 or 4 values for ${property}`);\n  }\n  return array;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>} A number or an array of two numbers.\n */\nfunction requireSize(value, property) {\n  const size = requireNumberArray(value, property);\n  if (size.length !== 2) {\n    throw new Error(`Expected an array of two numbers for ${property}`);\n  }\n  return size;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {number|Array<number>} A number or an array of two numbers.\n */\nfunction requireSizeLike(value, property) {\n  if (typeof value === 'number') {\n    return value;\n  }\n  return requireSize(value, property);\n}\n","/**\n * @module ol/layer/BaseVector\n */\nimport RBush from 'rbush';\nimport {\n  flatStylesToStyleFunction,\n  rulesToStyleFunction,\n} from '../render/canvas/style.js';\nimport Style, {\n  createDefaultStyle,\n  toFunction as toStyleFunction,\n} from '../style/Style.js';\nimport Layer from './Layer.js';\n\n/***\n * @template T\n * @typedef {T extends import(\"../source/Vector.js\").default<infer U extends import(\"../Feature.js\").FeatureLike> ? U : never} ExtractedFeatureType\n */\n\n/**\n * @template {import('../Feature').FeatureLike} FeatureType\n * @template {import(\"../source/Vector.js\").default<FeatureType>|import(\"../source/VectorTile.js\").default<FeatureType>} VectorSourceType<FeatureType>\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean|string|number} [declutter=false] Declutter images and text. Any truthy value will enable\n * decluttering. Within a layer, a feature rendered before another has higher priority. All layers with the\n * same `declutter` value will be decluttered together. The priority is determined by the drawing order of the\n * layers with the same `declutter` value. Higher in the layer stack means higher priority. To declutter distinct\n * layers or groups of layers separately, use different truthy values for `declutter`.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder',\n};\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import('../Feature').FeatureLike} FeatureType\n * @template {import(\"../source/Vector.js\").default<FeatureType>|import(\"../source/VectorTile.js\").default<FeatureType>} VectorSourceType<FeatureType>\n * @extends {Layer<VectorSourceType, RendererType>}\n * @template {import(\"../renderer/canvas/VectorLayer.js\").default|import(\"../renderer/canvas/VectorTileLayer.js\").default|import(\"../renderer/canvas/VectorImageLayer.js\").default|import(\"../renderer/webgl/PointsLayer.js\").default} RendererType\n * @api\n */\nclass BaseVectorLayer extends Layer {\n  /**\n   * @param {Options<FeatureType, VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.declutter_ = options.declutter ? String(options.declutter) : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderBuffer_ =\n      options.renderBuffer !== undefined ? options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileAnimating_ =\n      options.updateWhileAnimating !== undefined\n        ? options.updateWhileAnimating\n        : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileInteracting_ =\n      options.updateWhileInteracting !== undefined\n        ? options.updateWhileInteracting\n        : false;\n  }\n\n  /**\n   * @return {string} Declutter group.\n   * @override\n   */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in [map.getFeaturesAtPixel()]{@link import(\"../Map.js\").default#getFeaturesAtPixel}.\n   * Text is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with an array of features.\n   * @api\n   * @override\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n   * @return {import(\"../render.js\").OrderFunction|null|undefined} Render order.\n   */\n  getRenderOrder() {\n    return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (\n      this.get(Property.RENDER_ORDER)\n    );\n  }\n\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null|undefined} Layer style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../layer/Layer.js\").State} layerState Layer state.\n   * @override\n   */\n  renderDeclutter(frameState, layerState) {\n    const declutterGroup = this.getDeclutter();\n    if (declutterGroup in frameState.declutter === false) {\n      frameState.declutter[declutterGroup] = new RBush(9);\n    }\n    this.getRenderer().renderDeclutter(frameState, layerState);\n  }\n\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If set to `null`, the layer has no style (a `null` style),\n   * so only features that have their own styles will be rendered in the layer. Call\n   * `setStyle()` without arguments to reset to the default style. See\n   * [the ol/style/Style module]{@link module:ol/style/Style~Style} for information on the default style.\n   *\n   * If your layer has a static style, you can use [flat style]{@link module:ol/style/flat~FlatStyle} object\n   * literals instead of using the `Style` and symbolizer constructors (`Fill`, `Stroke`, etc.):\n   * ```js\n   * vectorLayer.setStyle({\n   *   \"fill-color\": \"yellow\",\n   *   \"stroke-color\": \"black\",\n   *   \"stroke-width\": 4\n   * })\n   * ```\n   *\n   * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n   * @api\n   */\n  setStyle(style) {\n    this.style_ = style === undefined ? createDefaultStyle : style;\n    const styleLike = toStyleLike(style);\n    this.styleFunction_ =\n      style === null ? undefined : toStyleFunction(styleLike);\n    this.changed();\n  }\n\n  /**\n   * @param {boolean|string|number} declutter Declutter images and text.\n   * @api\n   */\n  setDeclutter(declutter) {\n    this.declutter_ = declutter ? String(declutter) : undefined;\n    this.changed();\n  }\n}\n\n/**\n * Coerce the allowed style types into a shorter list of types.  Flat styles, arrays of flat\n * styles, and arrays of rules are converted into style functions.\n *\n * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n * @return {import(\"../style/Style.js\").StyleLike|null} The style.\n */\nfunction toStyleLike(style) {\n  if (style === undefined) {\n    return createDefaultStyle;\n  }\n  if (!style) {\n    return null;\n  }\n  if (typeof style === 'function') {\n    return style;\n  }\n  if (style instanceof Style) {\n    return style;\n  }\n  if (!Array.isArray(style)) {\n    return flatStylesToStyleFunction([style]);\n  }\n  if (style.length === 0) {\n    return [];\n  }\n\n  const length = style.length;\n  const first = style[0];\n\n  if (first instanceof Style) {\n    /**\n     * @type {Array<Style>}\n     */\n    const styles = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      const candidate = style[i];\n      if (!(candidate instanceof Style)) {\n        throw new Error('Expected a list of style instances');\n      }\n      styles[i] = candidate;\n    }\n    return styles;\n  }\n\n  if ('style' in first) {\n    /**\n     * @type {Array<import(\"../style/flat.js\").Rule>}\n     */\n    const rules = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      const candidate = style[i];\n      if (!('style' in candidate)) {\n        throw new Error('Expected a list of rules with a style property');\n      }\n      rules[i] = candidate;\n    }\n    return rulesToStyleFunction(rules);\n  }\n\n  const flatStyles =\n    /** @type {Array<import(\"../style/flat.js\").FlatStyle>} */ (style);\n  return flatStylesToStyleFunction(flatStyles);\n}\n\nexport default BaseVectorLayer;\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../Map.js\").FrameState} [frameState] Frame state.\n   * @param {?(CanvasRenderingContext2D|WebGLRenderingContext)} [context] Context.\n   */\n  constructor(type, inversePixelTransform, frameState, context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../Map.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. For Canvas 2D layers,\n     * the context will be the 2D rendering context.  For WebGL layers, the context will be the WebGL\n     * context.\n     * @type {CanvasRenderingContext2D|WebGLRenderingContext|undefined}\n     * @api\n     */\n    this.context = context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/Feature\n */\nimport BaseObject from './Object.js';\nimport {assert} from './asserts.js';\nimport EventType from './events/EventType.js';\nimport {listen, unlistenByKey} from './events.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:geometry', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types\n *     |'change:geometry', Return>} FeatureOnSignature\n */\n\n/***\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n * @typedef {Object<string, *> & { geometry?: Geometry }} ObjectWithGeometry\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object~BaseObject} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature.js';\n * import Polygon from 'ol/geom/Polygon.js';\n * import Point from 'ol/geom/Point.js';\n *\n * const feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon',\n * });\n *\n * // get the polygon geometry\n * const poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * const point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n */\nclass Feature extends BaseObject {\n  /**\n   * @param {Geometry|ObjectWithGeometry<Geometry>} [geometryOrProperties]\n   *     You may pass a Geometry object directly, or an object literal containing\n   *     properties. If you pass an object literal, you may include a Geometry\n   *     associated with a `geometry` key.\n   */\n  constructor(geometryOrProperties) {\n    super();\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {FeatureOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n\n    if (geometryOrProperties) {\n      if (\n        typeof (\n          /** @type {?} */ (geometryOrProperties).getSimplifiedGeometry\n        ) === 'function'\n      ) {\n        const geometry = /** @type {Geometry} */ (geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        const properties = geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature<Geometry>} The clone.\n   * @api\n   */\n  clone() {\n    const clone = /** @type {Feature<Geometry>} */ (\n      new Feature(this.hasProperties() ? this.getProperties() : null)\n    );\n    clone.setGeometryName(this.getGeometryName());\n    const geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(/** @type {Geometry} */ (geometry.clone()));\n    }\n    const style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  }\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {Geometry|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  getGeometry() {\n    return /** @type {Geometry|undefined} */ (this.get(this.geometryName_));\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  getGeometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike|undefined} The feature style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChanged_() {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    const geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(\n        geometry,\n        EventType.CHANGE,\n        this.handleGeometryChange_,\n        this,\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {Geometry|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  setGeometry(geometry) {\n    this.set(this.geometryName_, geometry);\n  }\n\n  /**\n   * Set the style for the feature to override the layer style.  This can be a\n   * single style object, an array of styles, or a function that takes a\n   * resolution and returns an array of styles. To unset the feature style, call\n   * `setStyle()` without arguments or a falsey value.\n   * @param {import(\"./style/Style.js\").StyleLike} [style] Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setStyle(style) {\n    this.style_ = style;\n    this.styleFunction_ = !style ? undefined : createStyleFunction(style);\n    this.changed();\n  }\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setId(id) {\n    this.id_ = id;\n    this.changed();\n  }\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  setGeometryName(name) {\n    this.removeChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.geometryName_ = name;\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.handleGeometryChanged_();\n  }\n}\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  }\n  /**\n   * @type {Array<import(\"./style/Style.js\").default>}\n   */\n  let styles;\n  if (Array.isArray(obj)) {\n    styles = obj;\n  } else {\n    assert(\n      typeof (/** @type {?} */ (obj).getZIndex) === 'function',\n      'Expected an `ol/style/Style` or an array of `ol/style/Style.js`',\n    );\n    const style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n    styles = [style];\n  }\n  return function () {\n    return styles;\n  };\n}\nexport default Feature;\n","/**\n * @module ol/geom/flat/length\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n","/**\n * @module ol/geom/LineString\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineString} from './flat/intersectsextent.js';\nimport {lineStringLength} from './flat/length.js';\nimport {forEach as forEachSegment} from './flat/segments.js';\nimport {douglasPeucker} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nclass LineString extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.flatMidpoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatMidpointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Append the passed coordinate to the coordinates of the linestring.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @api\n   */\n  appendCoordinate(coordinate) {\n    extend(this.flatCoordinates, coordinate);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LineString} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const lineString = new LineString(\n      this.flatCoordinates.slice(),\n      this.layout,\n    );\n    lineString.applyProperties(this);\n    return lineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * Iterate over each segment, calling the provided callback.\n   * If the callback returns a truthy value the function returns that\n   * value immediately. Otherwise the function returns `false`.\n   *\n   * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n   *     called for each segment. The function will receive two arguments, the start and end coordinates of the segment.\n   * @return {T|boolean} Value.\n   * @template T,S\n   * @api\n   */\n  forEachSegment(callback) {\n    return forEachSegment(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      callback,\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate) {\n    if (this.layout != 'XYM' && this.layout != 'XYZM') {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    return lineStringCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      m,\n      extrapolate,\n    );\n  }\n\n  /**\n   * Return the coordinates of the linestring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * Return the coordinate at the provided fraction along the linestring.\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\n   * linestring and 1 is the end.\n   * @param {number} fraction Fraction.\n   * @param {import(\"../coordinate.js\").Coordinate} [dest] Optional coordinate whose values will\n   *     be modified. If not provided, a new coordinate will be returned.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n   * @api\n   */\n  getCoordinateAt(fraction, dest) {\n    return interpolatePoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      fraction,\n      dest,\n      this.stride,\n    );\n  }\n\n  /**\n   * Return the length of the linestring on projected plane.\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  getLength() {\n    return lineStringLength(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (this.flatMidpointRevision_ != this.getRevision()) {\n      this.flatMidpoint_ = this.getCoordinateAt(\n        0.5,\n        this.flatMidpoint_ ?? undefined,\n      );\n      this.flatMidpointRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.flatMidpoint_);\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} Simplified LineString.\n   * @protected\n   * @override\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n    );\n    return new LineString(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'LineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return intersectsLineString(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent,\n      this.getExtent(),\n    );\n  }\n\n  /**\n   * Set the coordinates of the linestring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default LineString;\n","/**\n * @module ol/geom/MultiPoint\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport {squaredDistance as squaredDx} from '../math.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {inflateCoordinates} from './flat/inflate.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nclass MultiPoint extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    if (layout && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Append the passed point to this multipoint.\n   * @param {Point} point Point.\n   * @api\n   */\n  appendPoint(point) {\n    extend(this.flatCoordinates, point.getFlatCoordinates());\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPoint} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const multiPoint = new MultiPoint(\n      this.flatCoordinates.slice(),\n      this.layout,\n    );\n    multiPoint.applyProperties(this);\n    return multiPoint;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const squaredDistance = squaredDx(\n        x,\n        y,\n        flatCoordinates[i],\n        flatCoordinates[i + 1],\n      );\n      if (squaredDistance < minSquaredDistance) {\n        minSquaredDistance = squaredDistance;\n        for (let j = 0; j < stride; ++j) {\n          closestPoint[j] = flatCoordinates[i + j];\n        }\n        closestPoint.length = stride;\n      }\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinates of the multipoint.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * Return the point at the specified index.\n   * @param {number} index Index.\n   * @return {Point} Point.\n   * @api\n   */\n  getPoint(index) {\n    const n = this.flatCoordinates.length / this.stride;\n    if (index < 0 || n <= index) {\n      return null;\n    }\n    return new Point(\n      this.flatCoordinates.slice(\n        index * this.stride,\n        (index + 1) * this.stride,\n      ),\n      this.layout,\n    );\n  }\n\n  /**\n   * Return the points of this multipoint.\n   * @return {Array<Point>} Points.\n   * @api\n   */\n  getPoints() {\n    const flatCoordinates = this.flatCoordinates;\n    const layout = this.layout;\n    const stride = this.stride;\n    /** @type {Array<Point>} */\n    const points = [];\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const point = new Point(flatCoordinates.slice(i, i + stride), layout);\n      points.push(point);\n    }\n    return points;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'MultiPoint';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      if (containsXY(extent, x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the multipoint.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default MultiPoint;\n","/**\n * @module ol/geom/MultiLineString\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport LineString from './LineString.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {\n  interpolatePoint,\n  lineStringsCoordinateAtM,\n} from './flat/interpolate.js';\nimport {intersectsLineStringArray} from './flat/intersectsextent.js';\nimport {douglasPeuckerArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nclass MultiLineString extends SimpleGeometry {\n  /**\n   * @param {Array<Array<import(\"../coordinate.js\").Coordinate>|LineString>|Array<number>} coordinates\n   *     Coordinates or LineString geometries. (For internal use, flat coordinates in\n   *     combination with `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Flat coordinate ends for internal use.\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (Array.isArray(coordinates[0])) {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    } else if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n      this.ends_ = ends;\n    } else {\n      const lineStrings = /** @type {Array<LineString>} */ (coordinates);\n      /** @type {Array<number>} */\n      const flatCoordinates = [];\n      const ends = [];\n      for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n        const lineString = lineStrings[i];\n        extend(flatCoordinates, lineString.getFlatCoordinates());\n        ends.push(flatCoordinates.length);\n      }\n      const layout =\n        lineStrings.length === 0\n          ? this.getLayout()\n          : lineStrings[0].getLayout();\n      this.setFlatCoordinates(layout, flatCoordinates);\n      this.ends_ = ends;\n    }\n  }\n\n  /**\n   * Append the passed linestring to the multilinestring.\n   * @param {LineString} lineString LineString.\n   * @api\n   */\n  appendLineString(lineString) {\n    extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiLineString} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const multiLineString = new MultiLineString(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice(),\n    );\n    multiLineString.applyProperties(this);\n    return multiLineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * `interpolate` controls interpolation between consecutive LineStrings\n   * within the MultiLineString. If `interpolate` is `true` the coordinates\n   * will be linearly interpolated between the last coordinate of one LineString\n   * and the first coordinate of the next LineString.  If `interpolate` is\n   * `false` then the function will return `null` for Ms falling between\n   * LineStrings.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @param {boolean} [interpolate] Interpolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate, interpolate) {\n    if (\n      (this.layout != 'XYM' && this.layout != 'XYZM') ||\n      this.flatCoordinates.length === 0\n    ) {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    interpolate = interpolate !== undefined ? interpolate : false;\n    return lineStringsCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      m,\n      extrapolate,\n      interpolate,\n    );\n  }\n\n  /**\n   * Return the coordinates of the multilinestring.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates() {\n    return inflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n    );\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Return the linestring at the specified index.\n   * @param {number} index Index.\n   * @return {LineString} LineString.\n   * @api\n   */\n  getLineString(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LineString(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index],\n      ),\n      this.layout,\n    );\n  }\n\n  /**\n   * Return the linestrings of this multilinestring.\n   * @return {Array<LineString>} LineStrings.\n   * @api\n   */\n  getLineStrings() {\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const layout = this.layout;\n    /** @type {Array<LineString>} */\n    const lineStrings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const lineString = new LineString(\n        flatCoordinates.slice(offset, end),\n        layout,\n      );\n      lineStrings.push(lineString);\n      offset = end;\n    }\n    return lineStrings;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    /** @type {Array<number>} */\n    const midpoints = [];\n    const flatCoordinates = this.flatCoordinates;\n    let offset = 0;\n    const ends = this.ends_;\n    const stride = this.stride;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const midpoint = interpolatePoint(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        0.5,\n      );\n      extend(midpoints, midpoint);\n      offset = end;\n    }\n    return midpoints;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiLineString} Simplified MultiLineString.\n   * @protected\n   * @override\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = douglasPeuckerArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds,\n    );\n    return new MultiLineString(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'MultiLineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return intersectsLineStringArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * Set the coordinates of the multilinestring.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_,\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default MultiLineString;\n","/**\n * @module ol/geom/MultiPolygon\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport MultiPoint from './MultiPoint.js';\nimport Polygon from './Polygon.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {linearRingss as linearRingssArea} from './flat/area.js';\nimport {linearRingss as linearRingssCenter} from './flat/center.js';\nimport {\n  assignClosestMultiArrayPoint,\n  multiArrayMaxSquaredDelta,\n} from './flat/closest.js';\nimport {linearRingssContainsXY} from './flat/contains.js';\nimport {deflateMultiCoordinatesArray} from './flat/deflate.js';\nimport {inflateMultiCoordinatesArray} from './flat/inflate.js';\nimport {getInteriorPointsOfMultiArray} from './flat/interiorpoint.js';\nimport {intersectsLinearRingMultiArray} from './flat/intersectsextent.js';\nimport {\n  linearRingssAreOriented,\n  orientLinearRingsArray,\n} from './flat/orient.js';\nimport {quantizeMultiArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nclass MultiPolygon extends SimpleGeometry {\n  /**\n   * @param {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>|Polygon>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` and `endss` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<Array<number>>} [endss] Array of ends for internal use with flat coordinates.\n   */\n  constructor(coordinates, layout, endss) {\n    super();\n\n    /**\n     * @type {Array<Array<number>>}\n     * @private\n     */\n    this.endss_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointsRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (!endss && !Array.isArray(coordinates[0])) {\n      const polygons = /** @type {Array<Polygon>} */ (coordinates);\n      /** @type {Array<number>} */\n      const flatCoordinates = [];\n      const thisEndss = [];\n      for (let i = 0, ii = polygons.length; i < ii; ++i) {\n        const polygon = polygons[i];\n        const offset = flatCoordinates.length;\n        const ends = polygon.getEnds();\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] += offset;\n        }\n        extend(flatCoordinates, polygon.getFlatCoordinates());\n        thisEndss.push(ends);\n      }\n      layout =\n        polygons.length === 0 ? this.getLayout() : polygons[0].getLayout();\n      coordinates = flatCoordinates;\n      endss = thisEndss;\n    }\n    if (layout !== undefined && endss) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n      this.endss_ = endss;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Append the passed polygon to this multipolygon.\n   * @param {Polygon} polygon Polygon.\n   * @api\n   */\n  appendPolygon(polygon) {\n    /** @type {Array<number>} */\n    let ends;\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = polygon.getFlatCoordinates().slice();\n      ends = polygon.getEnds().slice();\n      this.endss_.push();\n    } else {\n      const offset = this.flatCoordinates.length;\n      extend(this.flatCoordinates, polygon.getFlatCoordinates());\n      ends = polygon.getEnds().slice();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] += offset;\n      }\n    }\n    this.endss_.push(ends);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPolygon} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const len = this.endss_.length;\n    const newEndss = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      newEndss[i] = this.endss_[i].slice();\n    }\n\n    const multiPolygon = new MultiPolygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      newEndss,\n    );\n    multiPolygon.applyProperties(this);\n\n    return multiPolygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        multiArrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.endss_,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestMultiArrayPoint(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   * @override\n   */\n  containsXY(x, y) {\n    return linearRingssContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      x,\n      y,\n    );\n  }\n\n  /**\n   * Return the area of the multipolygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingssArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for multi-polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRingsArray(\n        flatCoordinates,\n        0,\n        this.endss_,\n        this.stride,\n        right,\n      );\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateMultiCoordinatesArray(\n      flatCoordinates,\n      0,\n      this.endss_,\n      this.stride,\n    );\n  }\n\n  /**\n   * @return {Array<Array<number>>} Endss.\n   */\n  getEndss() {\n    return this.endss_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n      const flatCenters = linearRingssCenter(\n        this.flatCoordinates,\n        0,\n        this.endss_,\n        this.stride,\n      );\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.endss_,\n        this.stride,\n        flatCenters,\n      );\n      this.flatInteriorPointsRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.flatInteriorPoints_);\n  }\n\n  /**\n   * Return the interior points as {@link module:ol/geom/MultiPoint~MultiPoint multipoint}.\n   * @return {MultiPoint} Interior points as XYM coordinates, where M is\n   * the length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoints() {\n    return new MultiPoint(this.getFlatInteriorPoints().slice(), 'XYM');\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (\n        linearRingssAreOriented(flatCoordinates, 0, this.endss_, this.stride)\n      ) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRingsArray(\n          this.orientedFlatCoordinates_,\n          0,\n          this.endss_,\n          this.stride,\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.orientedFlatCoordinates_);\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiPolygon} Simplified MultiPolygon.\n   * @protected\n   * @override\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    /** @type {Array<Array<number>>} */\n    const simplifiedEndss = [];\n    simplifiedFlatCoordinates.length = quantizeMultiArray(\n      this.flatCoordinates,\n      0,\n      this.endss_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEndss,\n    );\n    return new MultiPolygon(simplifiedFlatCoordinates, 'XY', simplifiedEndss);\n  }\n\n  /**\n   * Return the polygon at the specified index.\n   * @param {number} index Index.\n   * @return {Polygon} Polygon.\n   * @api\n   */\n  getPolygon(index) {\n    if (index < 0 || this.endss_.length <= index) {\n      return null;\n    }\n    let offset;\n    if (index === 0) {\n      offset = 0;\n    } else {\n      const prevEnds = this.endss_[index - 1];\n      offset = prevEnds[prevEnds.length - 1];\n    }\n    const ends = this.endss_[index].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] -= offset;\n      }\n    }\n    return new Polygon(\n      this.flatCoordinates.slice(offset, end),\n      this.layout,\n      ends,\n    );\n  }\n\n  /**\n   * Return the polygons of this multipolygon.\n   * @return {Array<Polygon>} Polygons.\n   * @api\n   */\n  getPolygons() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const endss = this.endss_;\n    const polygons = [];\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      const ends = endss[i].slice();\n      const end = ends[ends.length - 1];\n      if (offset !== 0) {\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] -= offset;\n        }\n      }\n      const polygon = new Polygon(\n        flatCoordinates.slice(offset, end),\n        layout,\n        ends,\n      );\n      polygons.push(polygon);\n      offset = end;\n    }\n    return polygons;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'MultiPolygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingMultiArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * Set the coordinates of the multipolygon.\n   * @param {!Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = deflateMultiCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.endss_,\n    );\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length =\n        lastEnds.length === 0 ? 0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n}\n\nexport default MultiPolygon;\n","/**\n * @module ol/format/Feature\n */\nimport Feature from '../Feature.js';\nimport {\n  linearRingsAreOriented,\n  linearRingssAreOriented,\n  orientLinearRings,\n  orientLinearRingsArray,\n} from '../geom/flat/orient.js';\nimport {\n  GeometryCollection,\n  LineString,\n  MultiLineString,\n  MultiPoint,\n  MultiPolygon,\n  Point,\n  Polygon,\n} from '../geom.js';\nimport {\n  equivalent as equivalentProjection,\n  get as getProjection,\n  getTransform,\n  transformExtent,\n} from '../proj.js';\nimport RenderFeature from '../render/Feature.js';\nimport {abstract} from '../util.js';\n\n/**\n * @typedef {Object} ReadOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are reading.\n * If not provided, the projection will be derived from the data (where possible) or\n * the `dataProjection` of the format is assigned (where set). If the projection\n * can not be derived from the data and if no `dataProjection` is set for a format,\n * the features will not be reprojected.\n * @property {import(\"../extent.js\").Extent} [extent] Tile extent in map units of the tile being read.\n * This is only required when reading data with tile pixels as geometry units. When configured,\n * a `dataProjection` with `TILE_PIXELS` as `units` and the tile's pixel extent as `extent` needs to be\n * provided.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * created by the format reader. If not provided, features will be returned in the\n * `dataProjection`.\n */\n\n/**\n * @typedef {Object} WriteOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are writing.\n * If not provided, the `dataProjection` of the format is assigned (where set).\n * If no `dataProjection` is set for a format, the features will be returned\n * in the `featureProjection`.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * that will be serialized by the format writer. If not provided, geometries are assumed\n * to be in the `dataProjection` if that is set; in other words, they are not transformed.\n * @property {boolean} [rightHanded] When writing geometries, follow the right-hand\n * rule for linear ring orientation.  This means that polygons will have counter-clockwise\n * exterior rings and clockwise interior rings.  By default, coordinates are serialized\n * as they are provided at construction.  If `true`, the right-hand rule will\n * be applied.  If `false`, the left-hand rule will be applied (clockwise for\n * exterior and counter-clockwise for interior rings).  Note that not all\n * formats support this.  The GeoJSON format does use this property when writing\n * geometries.\n * @property {number} [decimals] Maximum number of decimal places for coordinates.\n * Coordinates are stored internally as floats, but floating-point arithmetic can create\n * coordinates with a large number of decimal places, not generally wanted on output.\n * Set a number here to round coordinates. Can also be used to ensure that\n * coordinates read in can be written back out with the same number of decimals.\n * Default is no rounding.\n */\n\n/**\n * @typedef {'arraybuffer' | 'json' | 'text' | 'xml'} Type\n */\n\n/**\n * @typedef {Object} SimpleGeometryObject\n * @property {import('../geom/Geometry.js').Type} type Type.\n * @property {Array<number>} flatCoordinates Flat coordinates.\n * @property {Array<number>|Array<Array<number>>} [ends] Ends or endss.\n * @property {import('../geom/Geometry.js').GeometryLayout} [layout] Layout.\n */\n\n/**\n * @typedef {Array<GeometryObject>} GeometryCollectionObject\n */\n\n/**\n * @typedef {SimpleGeometryObject|GeometryCollectionObject} GeometryObject\n */\n\n/**\n * @typedef {Object} FeatureObject\n * @property {string|number} [id] Id.\n * @property {GeometryObject} [geometry] Geometry.\n * @property {Object<string, *>} [properties] Properties.\n */\n\n/***\n * @template {import('../Feature.js').FeatureLike} T\n * @typedef {T extends RenderFeature ? typeof RenderFeature : typeof Feature} FeatureToFeatureClass\n */\n\n/***\n * @template {import(\"../Feature.js\").FeatureClass} T\n * @typedef {T[keyof T] extends RenderFeature ? RenderFeature : Feature} FeatureClassToFeature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for feature formats.\n * {@link module:ol/format/Feature~FeatureFormat} subclasses provide the ability to decode and encode\n * {@link module:ol/Feature~Feature} objects from a variety of commonly used geospatial\n * file formats.  See the documentation for each format for more details.\n *\n * @template {import('../Feature.js').FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n * @abstract\n * @api\n */\nclass FeatureFormat {\n  constructor() {\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.dataProjection = undefined;\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.defaultFeatureProjection = undefined;\n\n    /**\n     * @protected\n     * @type {FeatureToFeatureClass<FeatureType>}\n     */\n    this.featureClass = /** @type {FeatureToFeatureClass<FeatureType>} */ (\n      Feature\n    );\n\n    /**\n     * A list media types supported by the format in descending order of preference.\n     * @type {Array<string>}\n     */\n    this.supportedMediaTypes = null;\n  }\n\n  /**\n   * Adds the data projection to the read options.\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Options.\n   * @return {ReadOptions|undefined} Options.\n   * @protected\n   */\n  getReadOptions(source, options) {\n    if (options) {\n      let dataProjection = options.dataProjection\n        ? getProjection(options.dataProjection)\n        : this.readProjection(source);\n      if (\n        options.extent &&\n        dataProjection &&\n        dataProjection.getUnits() === 'tile-pixels'\n      ) {\n        dataProjection = getProjection(dataProjection);\n        dataProjection.setWorldExtent(options.extent);\n      }\n      options = {\n        dataProjection: dataProjection,\n        featureProjection: options.featureProjection,\n      };\n    }\n    return this.adaptOptions(options);\n  }\n\n  /**\n   * Sets the `dataProjection` on the options, if no `dataProjection`\n   * is set.\n   * @param {WriteOptions|ReadOptions|undefined} options\n   *     Options.\n   * @protected\n   * @return {WriteOptions|ReadOptions|undefined}\n   *     Updated options.\n   */\n  adaptOptions(options) {\n    return Object.assign(\n      {\n        dataProjection: this.dataProjection,\n        featureProjection: this.defaultFeatureProjection,\n        featureClass: this.featureClass,\n      },\n      options,\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Type} The format type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Read a single feature from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {FeatureType|Array<FeatureType>} Feature.\n   */\n  readFeature(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read all features from a source.\n   *\n   * @abstract\n   * @param {Document|Element|ArrayBuffer|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {Array<FeatureType>} Features.\n   */\n  readFeatures(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read a single geometry from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometry(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default|undefined} Projection.\n   */\n  readProjection(source) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature in this format.\n   *\n   * @abstract\n   * @param {Feature} feature Feature.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeature(feature, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features in this format.\n   *\n   * @abstract\n   * @param {Array<Feature>} features Features.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeatures(features, options) {\n    return abstract();\n  }\n\n  /**\n   * Write a single geometry in this format.\n   *\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeGeometry(geometry, options) {\n    return abstract();\n  }\n}\n\nexport default FeatureFormat;\n\n/**\n * @template {import(\"../geom/Geometry.js\").default|RenderFeature} T\n * @param {T} geometry Geometry.\n * @param {boolean} write Set to true for writing, false for reading.\n * @param {WriteOptions|ReadOptions} [options] Options.\n * @return {T} Transformed geometry.\n */\nexport function transformGeometryWithOptions(geometry, write, options) {\n  const featureProjection = options\n    ? getProjection(options.featureProjection)\n    : null;\n  const dataProjection = options ? getProjection(options.dataProjection) : null;\n\n  let transformed = geometry;\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    if (write) {\n      transformed = /** @type {T} */ (geometry.clone());\n    }\n    const fromProjection = write ? featureProjection : dataProjection;\n    const toProjection = write ? dataProjection : featureProjection;\n    if (fromProjection.getUnits() === 'tile-pixels') {\n      transformed.transform(fromProjection, toProjection);\n    } else {\n      transformed.applyTransform(getTransform(fromProjection, toProjection));\n    }\n  }\n  if (\n    write &&\n    options &&\n    /** @type {WriteOptions} */ (options).decimals !== undefined\n  ) {\n    const power = Math.pow(10, /** @type {WriteOptions} */ (options).decimals);\n    // if decimals option on write, round each coordinate appropriately\n    /**\n     * @param {Array<number>} coordinates Coordinates.\n     * @return {Array<number>} Transformed coordinates.\n     */\n    const transform = function (coordinates) {\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = Math.round(coordinates[i] * power) / power;\n      }\n      return coordinates;\n    };\n    if (transformed === geometry) {\n      transformed = /** @type {T} */ (geometry.clone());\n    }\n    transformed.applyTransform(transform);\n  }\n  return transformed;\n}\n\n/**\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {ReadOptions} [options] Read options.\n * @return {import(\"../extent.js\").Extent} Transformed extent.\n */\nexport function transformExtentWithOptions(extent, options) {\n  const featureProjection = options\n    ? getProjection(options.featureProjection)\n    : null;\n  const dataProjection = options ? getProjection(options.dataProjection) : null;\n\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    return transformExtent(extent, dataProjection, featureProjection);\n  }\n  return extent;\n}\n\nconst GeometryConstructor = {\n  Point: Point,\n  LineString: LineString,\n  Polygon: Polygon,\n  MultiPoint: MultiPoint,\n  MultiLineString: MultiLineString,\n  MultiPolygon: MultiPolygon,\n};\n\nfunction orientFlatCoordinates(flatCoordinates, ends, stride) {\n  if (Array.isArray(ends[0])) {\n    // MultiPolagon\n    if (!linearRingssAreOriented(flatCoordinates, 0, ends, stride)) {\n      flatCoordinates = flatCoordinates.slice();\n      orientLinearRingsArray(flatCoordinates, 0, ends, stride);\n    }\n    return flatCoordinates;\n  }\n  if (!linearRingsAreOriented(flatCoordinates, 0, ends, stride)) {\n    flatCoordinates = flatCoordinates.slice();\n    orientLinearRings(flatCoordinates, 0, ends, stride);\n  }\n  return flatCoordinates;\n}\n\n/**\n * @param {FeatureObject} object Feature object.\n * @param {WriteOptions|ReadOptions} [options] Options.\n * @return {RenderFeature|Array<RenderFeature>} Render feature.\n */\nexport function createRenderFeature(object, options) {\n  const geometry = object.geometry;\n  if (!geometry) {\n    return [];\n  }\n  if (Array.isArray(geometry)) {\n    return geometry\n      .map((geometry) => createRenderFeature({...object, geometry}))\n      .flat();\n  }\n\n  const geometryType =\n    geometry.type === 'MultiPolygon' ? 'Polygon' : geometry.type;\n  if (geometryType === 'GeometryCollection' || geometryType === 'Circle') {\n    throw new Error('Unsupported geometry type: ' + geometryType);\n  }\n\n  const stride = geometry.layout.length;\n  return transformGeometryWithOptions(\n    new RenderFeature(\n      geometryType,\n      geometryType === 'Polygon'\n        ? orientFlatCoordinates(geometry.flatCoordinates, geometry.ends, stride)\n        : geometry.flatCoordinates,\n      geometry.ends?.flat(),\n      stride,\n      object.properties || {},\n      object.id,\n    ).enableSimplifyTransformed(),\n    false,\n    options,\n  );\n}\n\n/**\n * @param {GeometryObject|null} object Geometry object.\n * @param {WriteOptions|ReadOptions} [options] Options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nexport function createGeometry(object, options) {\n  if (!object) {\n    return null;\n  }\n  if (Array.isArray(object)) {\n    const geometries = object.map((geometry) =>\n      createGeometry(geometry, options),\n    );\n    return new GeometryCollection(geometries);\n  }\n  const Geometry = GeometryConstructor[object.type];\n  return transformGeometryWithOptions(\n    new Geometry(object.flatCoordinates, object.layout || 'XY', object.ends),\n    false,\n    options,\n  );\n}\n","\nconst SHIFT_LEFT_32 = (1 << 16) * (1 << 16);\nconst SHIFT_RIGHT_32 = 1 / SHIFT_LEFT_32;\n\n// Threshold chosen based on both benchmarking and knowledge about browser string\n// data structures (which currently switch structure types at 12 bytes or more)\nconst TEXT_DECODER_MIN_LENGTH = 12;\nconst utf8TextDecoder = typeof TextDecoder === 'undefined' ? null : new TextDecoder('utf-8');\n\nconst PBF_VARINT  = 0; // varint: int32, int64, uint32, uint64, sint32, sint64, bool, enum\nconst PBF_FIXED64 = 1; // 64-bit: double, fixed64, sfixed64\nconst PBF_BYTES   = 2; // length-delimited: string, bytes, embedded messages, packed repeated fields\nconst PBF_FIXED32 = 5; // 32-bit: float, fixed32, sfixed32\n\nexport default class Pbf {\n    /**\n     * @param {Uint8Array | ArrayBuffer} [buf]\n     */\n    constructor(buf = new Uint8Array(16)) {\n        this.buf = ArrayBuffer.isView(buf) ? buf : new Uint8Array(buf);\n        this.dataView = new DataView(this.buf.buffer);\n        this.pos = 0;\n        this.type = 0;\n        this.length = this.buf.length;\n    }\n\n    // === READING =================================================================\n\n    /**\n     * @template T\n     * @param {(tag: number, result: T, pbf: Pbf) => void} readField\n     * @param {T} result\n     * @param {number} [end]\n     */\n    readFields(readField, result, end = this.length) {\n        while (this.pos < end) {\n            const val = this.readVarint(),\n                tag = val >> 3,\n                startPos = this.pos;\n\n            this.type = val & 0x7;\n            readField(tag, result, this);\n\n            if (this.pos === startPos) this.skip(val);\n        }\n        return result;\n    }\n\n    /**\n     * @template T\n     * @param {(tag: number, result: T, pbf: Pbf) => void} readField\n     * @param {T} result\n     */\n    readMessage(readField, result) {\n        return this.readFields(readField, result, this.readVarint() + this.pos);\n    }\n\n    readFixed32() {\n        const val = this.dataView.getUint32(this.pos, true);\n        this.pos += 4;\n        return val;\n    }\n\n    readSFixed32() {\n        const val = this.dataView.getInt32(this.pos, true);\n        this.pos += 4;\n        return val;\n    }\n\n    // 64-bit int handling is based on github.com/dpw/node-buffer-more-ints (MIT-licensed)\n\n    readFixed64() {\n        const val = this.dataView.getUint32(this.pos, true) + this.dataView.getUint32(this.pos + 4, true) * SHIFT_LEFT_32;\n        this.pos += 8;\n        return val;\n    }\n\n    readSFixed64() {\n        const val = this.dataView.getUint32(this.pos, true) + this.dataView.getInt32(this.pos + 4, true) * SHIFT_LEFT_32;\n        this.pos += 8;\n        return val;\n    }\n\n    readFloat() {\n        const val = this.dataView.getFloat32(this.pos, true);\n        this.pos += 4;\n        return val;\n    }\n\n    readDouble() {\n        const val = this.dataView.getFloat64(this.pos, true);\n        this.pos += 8;\n        return val;\n    }\n\n    /**\n     * @param {boolean} [isSigned]\n     */\n    readVarint(isSigned) {\n        const buf = this.buf;\n        let val, b;\n\n        b = buf[this.pos++]; val  =  b & 0x7f;        if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 7;  if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 14; if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 21; if (b < 0x80) return val;\n        b = buf[this.pos];   val |= (b & 0x0f) << 28;\n\n        return readVarintRemainder(val, isSigned, this);\n    }\n\n    readVarint64() { // for compatibility with v2.0.1\n        return this.readVarint(true);\n    }\n\n    readSVarint() {\n        const num = this.readVarint();\n        return num % 2 === 1 ? (num + 1) / -2 : num / 2; // zigzag encoding\n    }\n\n    readBoolean() {\n        return Boolean(this.readVarint());\n    }\n\n    readString() {\n        const end = this.readVarint() + this.pos;\n        const pos = this.pos;\n        this.pos = end;\n\n        if (end - pos >= TEXT_DECODER_MIN_LENGTH && utf8TextDecoder) {\n            // longer strings are fast with the built-in browser TextDecoder API\n            return utf8TextDecoder.decode(this.buf.subarray(pos, end));\n        }\n        // short strings are fast with our custom implementation\n        return readUtf8(this.buf, pos, end);\n    }\n\n    readBytes() {\n        const end = this.readVarint() + this.pos,\n            buffer = this.buf.subarray(this.pos, end);\n        this.pos = end;\n        return buffer;\n    }\n\n    // verbose for performance reasons; doesn't affect gzipped size\n\n    /**\n     * @param {number[]} [arr]\n     * @param {boolean} [isSigned]\n     */\n    readPackedVarint(arr = [], isSigned) {\n        const end = this.readPackedEnd();\n        while (this.pos < end) arr.push(this.readVarint(isSigned));\n        return arr;\n    }\n    /** @param {number[]} [arr] */\n    readPackedSVarint(arr = []) {\n        const end = this.readPackedEnd();\n        while (this.pos < end) arr.push(this.readSVarint());\n        return arr;\n    }\n    /** @param {boolean[]} [arr] */\n    readPackedBoolean(arr = []) {\n        const end = this.readPackedEnd();\n        while (this.pos < end) arr.push(this.readBoolean());\n        return arr;\n    }\n    /** @param {number[]} [arr] */\n    readPackedFloat(arr = []) {\n        const end = this.readPackedEnd();\n        while (this.pos < end) arr.push(this.readFloat());\n        return arr;\n    }\n    /** @param {number[]} [arr] */\n    readPackedDouble(arr = []) {\n        const end = this.readPackedEnd();\n        while (this.pos < end) arr.push(this.readDouble());\n        return arr;\n    }\n    /** @param {number[]} [arr] */\n    readPackedFixed32(arr = []) {\n        const end = this.readPackedEnd();\n        while (this.pos < end) arr.push(this.readFixed32());\n        return arr;\n    }\n    /** @param {number[]} [arr] */\n    readPackedSFixed32(arr = []) {\n        const end = this.readPackedEnd();\n        while (this.pos < end) arr.push(this.readSFixed32());\n        return arr;\n    }\n    /** @param {number[]} [arr] */\n    readPackedFixed64(arr = []) {\n        const end = this.readPackedEnd();\n        while (this.pos < end) arr.push(this.readFixed64());\n        return arr;\n    }\n    /** @param {number[]} [arr] */\n    readPackedSFixed64(arr = []) {\n        const end = this.readPackedEnd();\n        while (this.pos < end) arr.push(this.readSFixed64());\n        return arr;\n    }\n    readPackedEnd() {\n        return this.type === PBF_BYTES ? this.readVarint() + this.pos : this.pos + 1;\n    }\n\n    /** @param {number} val */\n    skip(val) {\n        const type = val & 0x7;\n        if (type === PBF_VARINT) while (this.buf[this.pos++] > 0x7f) {}\n        else if (type === PBF_BYTES) this.pos = this.readVarint() + this.pos;\n        else if (type === PBF_FIXED32) this.pos += 4;\n        else if (type === PBF_FIXED64) this.pos += 8;\n        else throw new Error(`Unimplemented type: ${type}`);\n    }\n\n    // === WRITING =================================================================\n\n    /**\n     * @param {number} tag\n     * @param {number} type\n     */\n    writeTag(tag, type) {\n        this.writeVarint((tag << 3) | type);\n    }\n\n    /** @param {number} min */\n    realloc(min) {\n        let length = this.length || 16;\n\n        while (length < this.pos + min) length *= 2;\n\n        if (length !== this.length) {\n            const buf = new Uint8Array(length);\n            buf.set(this.buf);\n            this.buf = buf;\n            this.dataView = new DataView(buf.buffer);\n            this.length = length;\n        }\n    }\n\n    finish() {\n        this.length = this.pos;\n        this.pos = 0;\n        return this.buf.subarray(0, this.length);\n    }\n\n    /** @param {number} val */\n    writeFixed32(val) {\n        this.realloc(4);\n        this.dataView.setInt32(this.pos, val, true);\n        this.pos += 4;\n    }\n\n    /** @param {number} val */\n    writeSFixed32(val) {\n        this.realloc(4);\n        this.dataView.setInt32(this.pos, val, true);\n        this.pos += 4;\n    }\n\n    /** @param {number} val */\n    writeFixed64(val) {\n        this.realloc(8);\n        this.dataView.setInt32(this.pos, val & -1, true);\n        this.dataView.setInt32(this.pos + 4, Math.floor(val * SHIFT_RIGHT_32), true);\n        this.pos += 8;\n    }\n\n    /** @param {number} val */\n    writeSFixed64(val) {\n        this.realloc(8);\n        this.dataView.setInt32(this.pos, val & -1, true);\n        this.dataView.setInt32(this.pos + 4, Math.floor(val * SHIFT_RIGHT_32), true);\n        this.pos += 8;\n    }\n\n    /** @param {number} val */\n    writeVarint(val) {\n        val = +val || 0;\n\n        if (val > 0xfffffff || val < 0) {\n            writeBigVarint(val, this);\n            return;\n        }\n\n        this.realloc(4);\n\n        this.buf[this.pos++] =           val & 0x7f  | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] =   (val >>> 7) & 0x7f;\n    }\n\n    /** @param {number} val */\n    writeSVarint(val) {\n        this.writeVarint(val < 0 ? -val * 2 - 1 : val * 2);\n    }\n\n    /** @param {boolean} val */\n    writeBoolean(val) {\n        this.writeVarint(+val);\n    }\n\n    /** @param {string} str */\n    writeString(str) {\n        str = String(str);\n        this.realloc(str.length * 4);\n\n        this.pos++; // reserve 1 byte for short string length\n\n        const startPos = this.pos;\n        // write the string directly to the buffer and see how much was written\n        this.pos = writeUtf8(this.buf, str, this.pos);\n        const len = this.pos - startPos;\n\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n        // finally, write the message length in the reserved place and restore the position\n        this.pos = startPos - 1;\n        this.writeVarint(len);\n        this.pos += len;\n    }\n\n    /** @param {number} val */\n    writeFloat(val) {\n        this.realloc(4);\n        this.dataView.setFloat32(this.pos, val, true);\n        this.pos += 4;\n    }\n\n    /** @param {number} val */\n    writeDouble(val) {\n        this.realloc(8);\n        this.dataView.setFloat64(this.pos, val, true);\n        this.pos += 8;\n    }\n\n    /** @param {Uint8Array} buffer */\n    writeBytes(buffer) {\n        const len = buffer.length;\n        this.writeVarint(len);\n        this.realloc(len);\n        for (let i = 0; i < len; i++) this.buf[this.pos++] = buffer[i];\n    }\n\n    /**\n     * @template T\n     * @param {(obj: T, pbf: Pbf) => void} fn\n     * @param {T} obj\n     */\n    writeRawMessage(fn, obj) {\n        this.pos++; // reserve 1 byte for short message length\n\n        // write the message directly to the buffer and see how much was written\n        const startPos = this.pos;\n        fn(obj, this);\n        const len = this.pos - startPos;\n\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n        // finally, write the message length in the reserved place and restore the position\n        this.pos = startPos - 1;\n        this.writeVarint(len);\n        this.pos += len;\n    }\n\n    /**\n     * @template T\n     * @param {number} tag\n     * @param {(obj: T, pbf: Pbf) => void} fn\n     * @param {T} obj\n     */\n    writeMessage(tag, fn, obj) {\n        this.writeTag(tag, PBF_BYTES);\n        this.writeRawMessage(fn, obj);\n    }\n\n    /**\n     * @param {number} tag\n     * @param {number[]} arr\n     */\n    writePackedVarint(tag, arr) {\n        if (arr.length) this.writeMessage(tag, writePackedVarint, arr);\n    }\n    /**\n     * @param {number} tag\n     * @param {number[]} arr\n     */\n    writePackedSVarint(tag, arr) {\n        if (arr.length) this.writeMessage(tag, writePackedSVarint, arr);\n    }\n    /**\n     * @param {number} tag\n     * @param {boolean[]} arr\n     */\n    writePackedBoolean(tag, arr) {\n        if (arr.length) this.writeMessage(tag, writePackedBoolean, arr);\n    }\n    /**\n     * @param {number} tag\n     * @param {number[]} arr\n     */\n    writePackedFloat(tag, arr) {\n        if (arr.length) this.writeMessage(tag, writePackedFloat, arr);\n    }\n    /**\n     * @param {number} tag\n     * @param {number[]} arr\n     */\n    writePackedDouble(tag, arr) {\n        if (arr.length) this.writeMessage(tag, writePackedDouble, arr);\n    }\n    /**\n     * @param {number} tag\n     * @param {number[]} arr\n     */\n    writePackedFixed32(tag, arr) {\n        if (arr.length) this.writeMessage(tag, writePackedFixed32, arr);\n    }\n    /**\n     * @param {number} tag\n     * @param {number[]} arr\n     */\n    writePackedSFixed32(tag, arr) {\n        if (arr.length) this.writeMessage(tag, writePackedSFixed32, arr);\n    }\n    /**\n     * @param {number} tag\n     * @param {number[]} arr\n     */\n    writePackedFixed64(tag, arr) {\n        if (arr.length) this.writeMessage(tag, writePackedFixed64, arr);\n    }\n    /**\n     * @param {number} tag\n     * @param {number[]} arr\n     */\n    writePackedSFixed64(tag, arr) {\n        if (arr.length) this.writeMessage(tag, writePackedSFixed64, arr);\n    }\n\n    /**\n     * @param {number} tag\n     * @param {Uint8Array} buffer\n     */\n    writeBytesField(tag, buffer) {\n        this.writeTag(tag, PBF_BYTES);\n        this.writeBytes(buffer);\n    }\n    /**\n     * @param {number} tag\n     * @param {number} val\n     */\n    writeFixed32Field(tag, val) {\n        this.writeTag(tag, PBF_FIXED32);\n        this.writeFixed32(val);\n    }\n    /**\n     * @param {number} tag\n     * @param {number} val\n     */\n    writeSFixed32Field(tag, val) {\n        this.writeTag(tag, PBF_FIXED32);\n        this.writeSFixed32(val);\n    }\n    /**\n     * @param {number} tag\n     * @param {number} val\n     */\n    writeFixed64Field(tag, val) {\n        this.writeTag(tag, PBF_FIXED64);\n        this.writeFixed64(val);\n    }\n    /**\n     * @param {number} tag\n     * @param {number} val\n     */\n    writeSFixed64Field(tag, val) {\n        this.writeTag(tag, PBF_FIXED64);\n        this.writeSFixed64(val);\n    }\n    /**\n     * @param {number} tag\n     * @param {number} val\n     */\n    writeVarintField(tag, val) {\n        this.writeTag(tag, PBF_VARINT);\n        this.writeVarint(val);\n    }\n    /**\n     * @param {number} tag\n     * @param {number} val\n     */\n    writeSVarintField(tag, val) {\n        this.writeTag(tag, PBF_VARINT);\n        this.writeSVarint(val);\n    }\n    /**\n     * @param {number} tag\n     * @param {string} str\n     */\n    writeStringField(tag, str) {\n        this.writeTag(tag, PBF_BYTES);\n        this.writeString(str);\n    }\n    /**\n     * @param {number} tag\n     * @param {number} val\n     */\n    writeFloatField(tag, val) {\n        this.writeTag(tag, PBF_FIXED32);\n        this.writeFloat(val);\n    }\n    /**\n     * @param {number} tag\n     * @param {number} val\n     */\n    writeDoubleField(tag, val) {\n        this.writeTag(tag, PBF_FIXED64);\n        this.writeDouble(val);\n    }\n    /**\n     * @param {number} tag\n     * @param {boolean} val\n     */\n    writeBooleanField(tag, val) {\n        this.writeVarintField(tag, +val);\n    }\n};\n\n/**\n * @param {number} l\n * @param {boolean | undefined} s\n * @param {Pbf} p\n */\nfunction readVarintRemainder(l, s, p) {\n    const buf = p.buf;\n    let h, b;\n\n    b = buf[p.pos++]; h  = (b & 0x70) >> 4;  if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 3;  if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 10; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 17; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 24; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x01) << 31; if (b < 0x80) return toNum(l, h, s);\n\n    throw new Error('Expected varint not more than 10 bytes');\n}\n\n/**\n * @param {number} low\n * @param {number} high\n * @param {boolean} [isSigned]\n */\nfunction toNum(low, high, isSigned) {\n    return isSigned ? high * 0x100000000 + (low >>> 0) : ((high >>> 0) * 0x100000000) + (low >>> 0);\n}\n\n/**\n * @param {number} val\n * @param {Pbf} pbf\n */\nfunction writeBigVarint(val, pbf) {\n    let low, high;\n\n    if (val >= 0) {\n        low  = (val % 0x100000000) | 0;\n        high = (val / 0x100000000) | 0;\n    } else {\n        low  = ~(-val % 0x100000000);\n        high = ~(-val / 0x100000000);\n\n        if (low ^ 0xffffffff) {\n            low = (low + 1) | 0;\n        } else {\n            low = 0;\n            high = (high + 1) | 0;\n        }\n    }\n\n    if (val >= 0x10000000000000000 || val < -0x10000000000000000) {\n        throw new Error('Given varint doesn\\'t fit into 10 bytes');\n    }\n\n    pbf.realloc(10);\n\n    writeBigVarintLow(low, high, pbf);\n    writeBigVarintHigh(high, pbf);\n}\n\n/**\n * @param {number} high\n * @param {number} low\n * @param {Pbf} pbf\n */\nfunction writeBigVarintLow(low, high, pbf) {\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos]   = low & 0x7f;\n}\n\n/**\n * @param {number} high\n * @param {Pbf} pbf\n */\nfunction writeBigVarintHigh(high, pbf) {\n    const lsb = (high & 0x07) << 4;\n\n    pbf.buf[pbf.pos++] |= lsb         | ((high >>>= 3) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f;\n}\n\n/**\n * @param {number} startPos\n * @param {number} len\n * @param {Pbf} pbf\n */\nfunction makeRoomForExtraLength(startPos, len, pbf) {\n    const extraLen =\n        len <= 0x3fff ? 1 :\n        len <= 0x1fffff ? 2 :\n        len <= 0xfffffff ? 3 : Math.floor(Math.log(len) / (Math.LN2 * 7));\n\n    // if 1 byte isn't enough for encoding message length, shift the data to the right\n    pbf.realloc(extraLen);\n    for (let i = pbf.pos - 1; i >= startPos; i--) pbf.buf[i + extraLen] = pbf.buf[i];\n}\n\n/**\n * @param {number[]} arr\n * @param {Pbf} pbf\n */\nfunction writePackedVarint(arr, pbf) {\n    for (let i = 0; i < arr.length; i++) pbf.writeVarint(arr[i]);\n}\n/**\n * @param {number[]} arr\n * @param {Pbf} pbf\n */\nfunction writePackedSVarint(arr, pbf) {\n    for (let i = 0; i < arr.length; i++) pbf.writeSVarint(arr[i]);\n}\n/**\n * @param {number[]} arr\n * @param {Pbf} pbf\n */\nfunction writePackedFloat(arr, pbf) {\n    for (let i = 0; i < arr.length; i++) pbf.writeFloat(arr[i]);\n}\n/**\n * @param {number[]} arr\n * @param {Pbf} pbf\n */\nfunction writePackedDouble(arr, pbf) {\n    for (let i = 0; i < arr.length; i++) pbf.writeDouble(arr[i]);\n}\n/**\n * @param {boolean[]} arr\n * @param {Pbf} pbf\n */\nfunction writePackedBoolean(arr, pbf) {\n    for (let i = 0; i < arr.length; i++) pbf.writeBoolean(arr[i]);\n}\n/**\n * @param {number[]} arr\n * @param {Pbf} pbf\n */\nfunction writePackedFixed32(arr, pbf) {\n    for (let i = 0; i < arr.length; i++) pbf.writeFixed32(arr[i]);\n}\n/**\n * @param {number[]} arr\n * @param {Pbf} pbf\n */\nfunction writePackedSFixed32(arr, pbf) {\n    for (let i = 0; i < arr.length; i++) pbf.writeSFixed32(arr[i]);\n}\n/**\n * @param {number[]} arr\n * @param {Pbf} pbf\n */\nfunction writePackedFixed64(arr, pbf) {\n    for (let i = 0; i < arr.length; i++) pbf.writeFixed64(arr[i]);\n}\n/**\n * @param {number[]} arr\n * @param {Pbf} pbf\n */\nfunction writePackedSFixed64(arr, pbf) {\n    for (let i = 0; i < arr.length; i++) pbf.writeSFixed64(arr[i]);\n}\n\n// Buffer code below from https://github.com/feross/buffer, MIT-licensed\n\n/**\n * @param {Uint8Array} buf\n * @param {number} pos\n * @param {number} end\n */\nfunction readUtf8(buf, pos, end) {\n    let str = '';\n    let i = pos;\n\n    while (i < end) {\n        const b0 = buf[i];\n        let c = null; // codepoint\n        let bytesPerSequence =\n            b0 > 0xEF ? 4 :\n            b0 > 0xDF ? 3 :\n            b0 > 0xBF ? 2 : 1;\n\n        if (i + bytesPerSequence > end) break;\n\n        let b1, b2, b3;\n\n        if (bytesPerSequence === 1) {\n            if (b0 < 0x80) {\n                c = b0;\n            }\n        } else if (bytesPerSequence === 2) {\n            b1 = buf[i + 1];\n            if ((b1 & 0xC0) === 0x80) {\n                c = (b0 & 0x1F) << 0x6 | (b1 & 0x3F);\n                if (c <= 0x7F) {\n                    c = null;\n                }\n            }\n        } else if (bytesPerSequence === 3) {\n            b1 = buf[i + 1];\n            b2 = buf[i + 2];\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80) {\n                c = (b0 & 0xF) << 0xC | (b1 & 0x3F) << 0x6 | (b2 & 0x3F);\n                if (c <= 0x7FF || (c >= 0xD800 && c <= 0xDFFF)) {\n                    c = null;\n                }\n            }\n        } else if (bytesPerSequence === 4) {\n            b1 = buf[i + 1];\n            b2 = buf[i + 2];\n            b3 = buf[i + 3];\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80) {\n                c = (b0 & 0xF) << 0x12 | (b1 & 0x3F) << 0xC | (b2 & 0x3F) << 0x6 | (b3 & 0x3F);\n                if (c <= 0xFFFF || c >= 0x110000) {\n                    c = null;\n                }\n            }\n        }\n\n        if (c === null) {\n            c = 0xFFFD;\n            bytesPerSequence = 1;\n\n        } else if (c > 0xFFFF) {\n            c -= 0x10000;\n            str += String.fromCharCode(c >>> 10 & 0x3FF | 0xD800);\n            c = 0xDC00 | c & 0x3FF;\n        }\n\n        str += String.fromCharCode(c);\n        i += bytesPerSequence;\n    }\n\n    return str;\n}\n\n/**\n * @param {Uint8Array} buf\n * @param {string} str\n * @param {number} pos\n */\nfunction writeUtf8(buf, str, pos) {\n    for (let i = 0, c, lead; i < str.length; i++) {\n        c = str.charCodeAt(i); // code point\n\n        if (c > 0xD7FF && c < 0xE000) {\n            if (lead) {\n                if (c < 0xDC00) {\n                    buf[pos++] = 0xEF;\n                    buf[pos++] = 0xBF;\n                    buf[pos++] = 0xBD;\n                    lead = c;\n                    continue;\n                } else {\n                    c = lead - 0xD800 << 10 | c - 0xDC00 | 0x10000;\n                    lead = null;\n                }\n            } else {\n                if (c > 0xDBFF || (i + 1 === str.length)) {\n                    buf[pos++] = 0xEF;\n                    buf[pos++] = 0xBF;\n                    buf[pos++] = 0xBD;\n                } else {\n                    lead = c;\n                }\n                continue;\n            }\n        } else if (lead) {\n            buf[pos++] = 0xEF;\n            buf[pos++] = 0xBF;\n            buf[pos++] = 0xBD;\n            lead = null;\n        }\n\n        if (c < 0x80) {\n            buf[pos++] = c;\n        } else {\n            if (c < 0x800) {\n                buf[pos++] = c >> 0x6 | 0xC0;\n            } else {\n                if (c < 0x10000) {\n                    buf[pos++] = c >> 0xC | 0xE0;\n                } else {\n                    buf[pos++] = c >> 0x12 | 0xF0;\n                    buf[pos++] = c >> 0xC & 0x3F | 0x80;\n                }\n                buf[pos++] = c >> 0x6 & 0x3F | 0x80;\n            }\n            buf[pos++] = c & 0x3F | 0x80;\n        }\n    }\n    return pos;\n}\n","/**\n * @module ol/format/MVT\n */\n//FIXME Implement projection handling\n\nimport PBF from 'pbf';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {inflateEnds} from '../geom/flat/orient.js';\nimport Projection from '../proj/Projection.js';\nimport {get} from '../proj.js';\nimport RenderFeature from '../render/Feature.js';\nimport FeatureFormat, {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../render/Feature.js\").default]\n * @typedef {Object} Options\n * @property {import('./Feature.js').FeatureToFeatureClass<FeatureType>} [featureClass] Class for features returned by\n * {@link module:ol/format/MVT~MVT#readFeatures}. Set to {@link module:ol/Feature~Feature} to get full editing and geometry\n * support at the cost of decreased rendering performance. The default is\n * {@link module:ol/render/Feature~RenderFeature}, which is optimized for rendering and hit detection.\n * @property {string} [geometryName='geometry'] Geometry name to use when creating features.\n * @property {string} [layerName='layer'] Name of the feature attribute that holds the layer name.\n * @property {Array<string>} [layers] Layers to read features from. If not provided, features will be read from all\n * @property {string} [idProperty] Optional property that will be assigned as the feature id and removed from the properties.\n * layers.\n */\n\n/**\n * @classdesc\n * Feature format for reading data in the Mapbox MVT format.\n *\n * @template {import('../Feature.js').FeatureLike} [FeatureType=RenderFeature]\n * @extends {FeatureFormat<FeatureType>}\n * @api\n */\nclass MVT extends FeatureFormat {\n  /**\n   * @param {Options<FeatureType>} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {Projection}\n     */\n    this.dataProjection = new Projection({\n      code: '',\n      units: 'tile-pixels',\n    });\n\n    this.featureClass = options.featureClass\n      ? options.featureClass\n      : /** @type {import('./Feature.js').FeatureToFeatureClass<FeatureType>} */ (\n          RenderFeature\n        );\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.layerName_ = options.layerName ? options.layerName : 'layer';\n\n    /**\n     * @private\n     * @type {Array<string>|null}\n     */\n    this.layers_ = options.layers ? options.layers : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.idProperty_ = options.idProperty;\n\n    this.supportedMediaTypes = [\n      'application/vnd.mapbox-vector-tile',\n      'application/x-protobuf',\n    ];\n  }\n\n  /**\n   * Read the raw geometry from the pbf offset stored in a raw feature's geometry\n   * property.\n   * @param {PBF} pbf PBF.\n   * @param {Object} feature Raw feature.\n   * @param {Array<number>} flatCoordinates Array to store flat coordinates in.\n   * @param {Array<number>} ends Array to store ends in.\n   * @private\n   */\n  readRawGeometry_(pbf, feature, flatCoordinates, ends) {\n    pbf.pos = feature.geometry;\n\n    const end = pbf.readVarint() + pbf.pos;\n    let cmd = 1;\n    let length = 0;\n    let x = 0;\n    let y = 0;\n    let coordsLen = 0;\n    let currentEnd = 0;\n\n    while (pbf.pos < end) {\n      if (!length) {\n        const cmdLen = pbf.readVarint();\n        cmd = cmdLen & 0x7;\n        length = cmdLen >> 3;\n      }\n\n      length--;\n\n      if (cmd === 1 || cmd === 2) {\n        x += pbf.readSVarint();\n        y += pbf.readSVarint();\n\n        if (cmd === 1) {\n          // moveTo\n          if (coordsLen > currentEnd) {\n            ends.push(coordsLen);\n            currentEnd = coordsLen;\n          }\n        }\n\n        flatCoordinates.push(x, y);\n        coordsLen += 2;\n      } else if (cmd === 7) {\n        if (coordsLen > currentEnd) {\n          // close polygon\n          flatCoordinates.push(\n            flatCoordinates[currentEnd],\n            flatCoordinates[currentEnd + 1],\n          );\n          coordsLen += 2;\n        }\n      } else {\n        throw new Error('Invalid command found in the PBF');\n      }\n    }\n\n    if (coordsLen > currentEnd) {\n      ends.push(coordsLen);\n      currentEnd = coordsLen;\n    }\n  }\n\n  /**\n   * @private\n   * @param {PBF} pbf PBF\n   * @param {Object} rawFeature Raw Mapbox feature.\n   * @param {import(\"./Feature.js\").ReadOptions} options Read options.\n   * @return {FeatureType|null} Feature.\n   */\n  createFeature_(pbf, rawFeature, options) {\n    const type = rawFeature.type;\n    if (type === 0) {\n      return null;\n    }\n\n    let feature;\n    const values = rawFeature.properties;\n\n    let id;\n    if (!this.idProperty_) {\n      id = rawFeature.id;\n    } else {\n      id = values[this.idProperty_];\n      delete values[this.idProperty_];\n    }\n\n    values[this.layerName_] = rawFeature.layer.name;\n\n    const flatCoordinates = /** @type {Array<number>} */ ([]);\n    const ends = /** @type {Array<number>} */ ([]);\n    this.readRawGeometry_(pbf, rawFeature, flatCoordinates, ends);\n\n    const geometryType = getGeometryType(type, ends.length);\n\n    if (this.featureClass === RenderFeature) {\n      feature =\n        new /** @type {import('./Feature.js').FeatureToFeatureClass<RenderFeature>} */ (\n          this.featureClass\n        )(geometryType, flatCoordinates, ends, 2, values, id);\n      feature.transform(options.dataProjection);\n    } else {\n      let geom;\n      if (geometryType == 'Polygon') {\n        const endss = inflateEnds(flatCoordinates, ends);\n        geom =\n          endss.length > 1\n            ? new MultiPolygon(flatCoordinates, 'XY', endss)\n            : new Polygon(flatCoordinates, 'XY', ends);\n      } else {\n        geom =\n          geometryType === 'Point'\n            ? new Point(flatCoordinates, 'XY')\n            : geometryType === 'LineString'\n              ? new LineString(flatCoordinates, 'XY')\n              : geometryType === 'MultiPoint'\n                ? new MultiPoint(flatCoordinates, 'XY')\n                : geometryType === 'MultiLineString'\n                  ? new MultiLineString(flatCoordinates, 'XY', ends)\n                  : null;\n      }\n      const ctor = /** @type {typeof import(\"../Feature.js\").default} */ (\n        this.featureClass\n      );\n      feature = new ctor();\n      if (this.geometryName_) {\n        feature.setGeometryName(this.geometryName_);\n      }\n      const geometry = transformGeometryWithOptions(geom, false, options);\n      feature.setGeometry(geometry);\n      if (id !== undefined) {\n        feature.setId(id);\n      }\n      feature.setProperties(values, true);\n    }\n\n    return /** @type {FeatureType} */ (feature);\n  }\n\n  /**\n   * @return {import(\"./Feature.js\").Type} Format.\n   * @override\n   */\n  getType() {\n    return 'arraybuffer';\n  }\n\n  /**\n   * Read all features.\n   *\n   * @param {ArrayBuffer} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {Array<FeatureType>} Features.\n   * @api\n   * @override\n   */\n  readFeatures(source, options) {\n    const layers = this.layers_;\n    options = this.adaptOptions(options);\n    const dataProjection = get(options.dataProjection);\n    dataProjection.setWorldExtent(options.extent);\n    options.dataProjection = dataProjection;\n\n    const pbf = new PBF(/** @type {ArrayBuffer} */ (source));\n    const pbfLayers = pbf.readFields(layersPBFReader, {});\n    const features = [];\n    for (const name in pbfLayers) {\n      if (layers && !layers.includes(name)) {\n        continue;\n      }\n      const pbfLayer = pbfLayers[name];\n\n      const extent = pbfLayer ? [0, 0, pbfLayer.extent, pbfLayer.extent] : null;\n      dataProjection.setExtent(extent);\n\n      for (let i = 0, ii = pbfLayer.length; i < ii; ++i) {\n        const rawFeature = readRawFeature(pbf, pbfLayer, i);\n        const feature = this.createFeature_(pbf, rawFeature, options);\n        if (feature !== null) {\n          features.push(feature);\n        }\n      }\n    }\n\n    return /** @type {Array<FeatureType>} */ (features);\n  }\n\n  /**\n   * Read the projection from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   * @override\n   */\n  readProjection(source) {\n    return this.dataProjection;\n  }\n\n  /**\n   * Sets the layers that features will be read from.\n   * @param {Array<string>} layers Layers.\n   * @api\n   */\n  setLayers(layers) {\n    this.layers_ = layers;\n  }\n}\n\n/**\n * Reader callback for parsing layers.\n * @param {number} tag The tag.\n * @param {Object} layers The layers object.\n * @param {PBF} pbf The PBF.\n */\nfunction layersPBFReader(tag, layers, pbf) {\n  if (tag === 3) {\n    const layer = {\n      keys: [],\n      values: [],\n      features: [],\n    };\n    const end = pbf.readVarint() + pbf.pos;\n    pbf.readFields(layerPBFReader, layer, end);\n    layer.length = layer.features.length;\n    if (layer.length) {\n      layers[layer.name] = layer;\n    }\n  }\n}\n\n/**\n * Reader callback for parsing layer.\n * @param {number} tag The tag.\n * @param {Object} layer The layer object.\n * @param {PBF} pbf The PBF.\n */\nfunction layerPBFReader(tag, layer, pbf) {\n  if (tag === 15) {\n    layer.version = pbf.readVarint();\n  } else if (tag === 1) {\n    layer.name = pbf.readString();\n  } else if (tag === 5) {\n    layer.extent = pbf.readVarint();\n  } else if (tag === 2) {\n    layer.features.push(pbf.pos);\n  } else if (tag === 3) {\n    layer.keys.push(pbf.readString());\n  } else if (tag === 4) {\n    let value = null;\n    const end = pbf.readVarint() + pbf.pos;\n    while (pbf.pos < end) {\n      tag = pbf.readVarint() >> 3;\n      value =\n        tag === 1\n          ? pbf.readString()\n          : tag === 2\n            ? pbf.readFloat()\n            : tag === 3\n              ? pbf.readDouble()\n              : tag === 4\n                ? pbf.readVarint64()\n                : tag === 5\n                  ? pbf.readVarint()\n                  : tag === 6\n                    ? pbf.readSVarint()\n                    : tag === 7\n                      ? pbf.readBoolean()\n                      : null;\n    }\n    layer.values.push(value);\n  }\n}\n\n/**\n * Reader callback for parsing feature.\n * @param {number} tag The tag.\n * @param {Object} feature The feature object.\n * @param {PBF} pbf The PBF.\n */\nfunction featurePBFReader(tag, feature, pbf) {\n  if (tag == 1) {\n    feature.id = pbf.readVarint();\n  } else if (tag == 2) {\n    const end = pbf.readVarint() + pbf.pos;\n    while (pbf.pos < end) {\n      const key = feature.layer.keys[pbf.readVarint()];\n      const value = feature.layer.values[pbf.readVarint()];\n      feature.properties[key] = value;\n    }\n  } else if (tag == 3) {\n    feature.type = pbf.readVarint();\n  } else if (tag == 4) {\n    feature.geometry = pbf.pos;\n  }\n}\n\n/**\n * Read a raw feature from the pbf offset stored at index `i` in the raw layer.\n * @param {PBF} pbf PBF.\n * @param {Object} layer Raw layer.\n * @param {number} i Index of the feature in the raw layer's `features` array.\n * @return {Object} Raw feature.\n */\nfunction readRawFeature(pbf, layer, i) {\n  pbf.pos = layer.features[i];\n  const end = pbf.readVarint() + pbf.pos;\n\n  const feature = {\n    layer: layer,\n    type: 0,\n    properties: {},\n  };\n  pbf.readFields(featurePBFReader, feature, end);\n  return feature;\n}\n\n/**\n * @param {number} type The raw feature's geometry type\n * @param {number} numEnds Number of ends of the flat coordinates of the\n * geometry.\n * @return {import(\"../render/Feature.js\").Type} The geometry type.\n */\nfunction getGeometryType(type, numEnds) {\n  /** @type {import(\"../render/Feature.js\").Type} */\n  let geometryType;\n  if (type === 1) {\n    geometryType = numEnds === 1 ? 'Point' : 'MultiPoint';\n  } else if (type === 2) {\n    geometryType = numEnds === 1 ? 'LineString' : 'MultiLineString';\n  } else if (type === 3) {\n    geometryType = 'Polygon';\n    // MultiPolygon not relevant for rendering - winding order determines\n    // outer rings of polygons.\n  }\n  return geometryType;\n}\n\nexport default MVT;\n","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nclass VectorContext {\n  /**\n   * Render a geometry with a custom renderer.\n   *\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   * @param {number} [index] Render order index.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer, index) {}\n\n  /**\n   * Render a geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n   */\n  drawGeometry(geometry) {}\n\n  /**\n   * Set the rendering style.\n   *\n   * @param {import(\"../style/Style.js\").default} style The rendering style.\n   */\n  setStyle(style) {}\n\n  /**\n   * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawCircle(circleGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../style/Style.js\").default} style Style.\n   * @param {number} [index] Render order index.\n   */\n  drawFeature(feature, style, index) {}\n\n  /**\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawGeometryCollection(geometryCollectionGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawLineString(lineStringGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiPoint(multiPointGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawPoint(pointGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawPolygon(polygonGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawText(geometry, feature, index) {}\n\n  /**\n   * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {}\n\n  /**\n   * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with a text style.\n   */\n  setImageStyle(imageStyle, declutterImageWithText) {}\n\n  /**\n   * @param {import(\"../style/Text.js\").default} textStyle Text style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with an image style.\n   */\n  setTextStyle(textStyle, declutterImageWithText) {}\n}\n\nexport default VectorContext;\n","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12,\n};\n\n/**\n * @type {Array<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\nexport default Instruction;\n","/**\n * @module ol/render/canvas/Builder\n */\nimport {equals, reverseSubArray} from '../../array.js';\nimport {asColorLike} from '../../colorlike.js';\nimport Relationship from '../../extent/Relationship.js';\nimport {\n  buffer,\n  clone,\n  containsCoordinate,\n  coordinateRelationship,\n} from '../../extent.js';\nimport {\n  inflateCoordinates,\n  inflateCoordinatesArray,\n  inflateMultiCoordinatesArray,\n} from '../../geom/flat/inflate.js';\nimport VectorContext from '../VectorContext.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../canvas.js';\nimport CanvasInstruction from './Instruction.js';\n\nclass CanvasBuilder extends VectorContext {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.tmpCoordinate_ = [];\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n  }\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  applyPixelRatio(dashArray) {\n    const pixelRatio = this.pixelRatio;\n    return pixelRatio == 1\n      ? dashArray\n      : dashArray.map(function (dash) {\n          return dash * pixelRatio;\n        });\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @protected\n   * @return {number} My end\n   */\n  appendFlatPointCoordinates(flatCoordinates, stride) {\n    const extent = this.getBufferedMaxExtent();\n    const tmpCoord = this.tmpCoordinate_;\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      tmpCoord[0] = flatCoordinates[i];\n      tmpCoord[1] = flatCoordinates[i + 1];\n      if (containsCoordinate(extent, tmpCoord)) {\n        coordinates[myEnd++] = tmpCoord[0];\n        coordinates[myEnd++] = tmpCoord[1];\n      }\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  appendFlatLineCoordinates(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    closed,\n    skipFirst,\n  ) {\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    const extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    let lastXCoord = flatCoordinates[offset];\n    let lastYCoord = flatCoordinates[offset + 1];\n    const nextCoord = this.tmpCoordinate_;\n    let skipped = true;\n\n    let i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          coordinates[myEnd++] = lastXCoord;\n          coordinates[myEnd++] = lastYCoord;\n          skipped = false;\n        }\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n      } else if (nextRel === Relationship.INTERSECTING) {\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastXCoord = nextCoord[0];\n      lastYCoord = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      coordinates[myEnd++] = lastXCoord;\n      coordinates[myEnd++] = lastYCoord;\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} builderEnds Builder ends.\n   * @return {number} Offset.\n   */\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, builderEnds) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        false,\n        false,\n      );\n      builderEnds.push(builderEnd);\n      offset = end;\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer, index) {\n    this.beginGeometry(geometry, feature, index);\n\n    const type = geometry.getType();\n    const stride = geometry.getStride();\n    const builderBegin = this.coordinates.length;\n\n    let flatCoordinates, builderEnd, builderEnds, builderEndss;\n    let offset;\n\n    switch (type) {\n      case 'MultiPolygon':\n        flatCoordinates =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getOrientedFlatCoordinates();\n        builderEndss = [];\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        offset = 0;\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          const myEnds = [];\n          offset = this.drawCustomCoordinates_(\n            flatCoordinates,\n            offset,\n            endss[i],\n            stride,\n            myEnds,\n          );\n          builderEndss.push(myEnds);\n        }\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          renderer,\n          inflateMultiCoordinatesArray,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateMultiCoordinatesArray,\n          index,\n        ]);\n        break;\n      case 'Polygon':\n      case 'MultiLineString':\n        builderEnds = [];\n        flatCoordinates =\n          type == 'Polygon'\n            ? /** @type {import(\"../../geom/Polygon.js\").default} */ (\n                geometry\n              ).getOrientedFlatCoordinates()\n            : geometry.getFlatCoordinates();\n        offset = this.drawCustomCoordinates_(\n          flatCoordinates,\n          0,\n          /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ).getEnds(),\n          stride,\n          builderEnds,\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          renderer,\n          inflateCoordinatesArray,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinatesArray,\n          index,\n        ]);\n        break;\n      case 'LineString':\n      case 'Circle':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatLineCoordinates(\n          flatCoordinates,\n          0,\n          flatCoordinates.length,\n          stride,\n          false,\n          false,\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          inflateCoordinates,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinates,\n          index,\n        ]);\n        break;\n      case 'MultiPoint':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n\n        if (builderEnd > builderBegin) {\n          this.instructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            renderer,\n            inflateCoordinates,\n            index,\n          ]);\n          this.hitDetectionInstructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            hitDetectionRenderer || renderer,\n            inflateCoordinates,\n            index,\n          ]);\n        }\n        break;\n      case 'Point':\n        flatCoordinates = geometry.getFlatCoordinates();\n        this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n        builderEnd = this.coordinates.length;\n\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          undefined,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          undefined,\n          index,\n        ]);\n        break;\n      default:\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} index Render order index\n   */\n  beginGeometry(geometry, feature, index) {\n    this.beginGeometryInstruction1_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n      index,\n    ];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n      index,\n    ];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    return {\n      instructions: this.instructions,\n      hitDetectionInstructions: this.hitDetectionInstructions,\n      coordinates: this.coordinates,\n    };\n  }\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  reverseHitDetectionInstructions() {\n    const hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    let i;\n    const n = hitDetectionInstructions.length;\n    let instruction;\n    let type;\n    let begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import('../canvas.js').FillStrokeState} [state] State.\n   * @return {import('../canvas.js').FillStrokeState} State.\n   */\n  fillStyleToState(\n    fillStyle,\n    state = /** @type {import('../canvas.js').FillStrokeState} */ ({}),\n  ) {\n    if (fillStyle) {\n      const fillStyleColor = fillStyle.getColor();\n      state.fillPatternScale =\n        fillStyleColor &&\n        typeof fillStyleColor === 'object' &&\n        'src' in fillStyleColor\n          ? this.pixelRatio\n          : 1;\n      state.fillStyle = asColorLike(\n        fillStyleColor ? fillStyleColor : defaultFillStyle,\n      );\n    } else {\n      state.fillStyle = undefined;\n    }\n    return state;\n  }\n\n  /**\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {import(\"../canvas.js\").FillStrokeState} State.\n   */\n  strokeStyleToState(\n    strokeStyle,\n    state = /** @type {import('../canvas.js').FillStrokeState} */ ({}),\n  ) {\n    if (strokeStyle) {\n      const strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(\n        strokeStyleColor ? strokeStyleColor : defaultStrokeStyle,\n      );\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap =\n        strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash.slice()\n        : defaultLineDash;\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset\n        ? strokeStyleLineDashOffset\n        : defaultLineDashOffset;\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin =\n        strokeStyleLineJoin !== undefined\n          ? strokeStyleLineJoin\n          : defaultLineJoin;\n      const strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth =\n        strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit =\n        strokeStyleMiterLimit !== undefined\n          ? strokeStyleMiterLimit\n          : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n    return state;\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   * @override\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    const state = this.state;\n    this.fillStyleToState(fillStyle, state);\n    this.strokeStyleToState(strokeStyle, state);\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Fill instruction.\n   */\n  createFill(state) {\n    const fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align and scale it!\n      fillInstruction.push(state.fillPatternScale);\n    }\n    return fillInstruction;\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    this.instructions.push(this.createStroke(state));\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  createStroke(state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle,\n      state.lineWidth * this.pixelRatio,\n      state.lineCap,\n      state.lineJoin,\n      state.miterLimit,\n      state.lineDash ? this.applyPixelRatio(state.lineDash) : null,\n      state.lineDashOffset * this.pixelRatio,\n    ];\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n   */\n  updateFillStyle(state, createFill) {\n    const fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n   */\n  updateStrokeStyle(state, applyStroke) {\n    const strokeStyle = state.strokeStyle;\n    const lineCap = state.lineCap;\n    const lineDash = state.lineDash;\n    const lineDashOffset = state.lineDashOffset;\n    const lineJoin = state.lineJoin;\n    const lineWidth = state.lineWidth;\n    const miterLimit = state.miterLimit;\n    if (\n      state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash &&\n        !equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit\n    ) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  endGeometry(feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  }\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  getBufferedMaxExtent() {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        const width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  }\n}\n\nexport default CanvasBuilder;\n","/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport {containsCoordinate} from '../../extent.js';\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\n\nclass CanvasImageBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.imagePixelRatio_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n    /**\n     * @private\n     * @type {import('../../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = undefined;\n\n    /**\n     * Data shared with a text builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawPoint(pointGeometry, feature, index) {\n    if (\n      !this.image_ ||\n      (this.maxExtent &&\n        !containsCoordinate(this.maxExtent, pointGeometry.getFlatCoordinates()))\n    ) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature, index);\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\n    const stride = pointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      1,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawMultiPoint(multiPointGeometry, feature, index) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature, index);\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    const filteredFlatCoordinates = [];\n    for (\n      let i = 0, ii = flatCoordinates.length;\n      i < ii;\n      i += multiPointGeometry.getStride()\n    ) {\n      if (\n        !this.maxExtent ||\n        containsCoordinate(this.maxExtent, flatCoordinates.slice(i, i + 2))\n      ) {\n        filteredFlatCoordinates.push(\n          flatCoordinates[i],\n          flatCoordinates[i + 1],\n        );\n      }\n    }\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(filteredFlatCoordinates, 2);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      1,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   * @override\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.imagePixelRatio_ = undefined;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @param {Object} [sharedData] Shared data.\n   * @override\n   */\n  setImageStyle(imageStyle, sharedData) {\n    const anchor = imageStyle.getAnchor();\n    const size = imageStyle.getSize();\n    const origin = imageStyle.getOrigin();\n    this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.hitDetectionImage_ = imageStyle.getHitDetectionImage();\n    this.image_ = imageStyle.getImage(this.pixelRatio);\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScaleArray();\n    this.width_ = size[0];\n    this.declutterMode_ = imageStyle.getDeclutterMode();\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasImageBuilder;\n","/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport {defaultLineDash, defaultLineDashOffset} from '../canvas.js';\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  strokeInstruction,\n} from './Instruction.js';\n\nclass CanvasLineStringBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatLineCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      false,\n      false,\n    );\n    const moveToLineToInstruction = [\n      CanvasInstruction.MOVE_TO_LINE_TO,\n      myBegin,\n      myEnd,\n    ];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  }\n\n  /**\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawLineString(lineStringGeometry, feature, index) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature, index);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction,\n    );\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n    );\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawMultiLineString(multiLineStringGeometry, feature, index) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature, index);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction,\n    );\n    const ends = multiLineStringGeometry.getEnds();\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(\n        flatCoordinates,\n        offset,\n        /** @type {number} */ (ends[i]),\n        stride,\n      );\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   * @override\n   */\n  finish() {\n    const state = this.state;\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @override\n   */\n  applyStroke(state) {\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    super.applyStroke(state);\n    this.instructions.push(beginPathInstruction);\n  }\n}\n\nexport default CanvasLineStringBuilder;\n","/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport {snap} from '../../geom/flat/simplify.js';\nimport {\n  defaultFillStyle,\n  defaultLineDash,\n  defaultLineDashOffset,\n} from '../canvas.js';\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  closePathInstruction,\n  fillInstruction,\n  strokeInstruction,\n} from './Instruction.js';\n\nclass CanvasPolygonBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\n    const state = this.state;\n    const fill = state.fillStyle !== undefined;\n    const stroke = state.strokeStyle !== undefined;\n    const numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (let i = 0; i < numEnds; ++i) {\n      const end = ends[i];\n      const myBegin = this.coordinates.length;\n      const myEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        true,\n        !stroke,\n      );\n      const moveToLineToInstruction = [\n        CanvasInstruction.MOVE_TO_LINE_TO,\n        myBegin,\n        myEnd,\n      ];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawCircle(circleGeometry, feature, index) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(circleGeometry, feature, index);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const flatCoordinates = circleGeometry.getFlatCoordinates();\n    const stride = circleGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    this.appendFlatLineCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      false,\n      false,\n    );\n    const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawPolygon(polygonGeometry, feature, index) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(polygonGeometry, feature, index);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const ends = polygonGeometry.getEnds();\n    const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    const stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(\n      flatCoordinates,\n      0,\n      /** @type {Array<number>} */ (ends),\n      stride,\n    );\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature, index) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(multiPolygonGeometry, feature, index);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const endss = multiPolygonGeometry.getEndss();\n    const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    const stride = multiPolygonGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(\n        flatCoordinates,\n        offset,\n        endss[i],\n        stride,\n      );\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   * @override\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    const tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      const coordinates = this.coordinates;\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n    return super.finish();\n  }\n\n  /**\n   * @private\n   */\n  setFillStrokeStyles_() {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  }\n}\n\nexport default CanvasPolygonBuilder;\n","import {lerp} from '../../math.js';\n\n/**\n * Creates chunks of equal length from a linestring\n * @param {number} chunkLength Length of each chunk.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @return {Array<Array<number>>} Chunks of linestrings with stride 2.\n */\nexport function lineChunk(chunkLength, flatCoordinates, offset, end, stride) {\n  const chunks = [];\n  let cursor = offset;\n  let chunkM = 0;\n  let currentChunk = flatCoordinates.slice(offset, 2);\n  while (chunkM < chunkLength && cursor + stride < end) {\n    const [x1, y1] = currentChunk.slice(-2);\n    const x2 = flatCoordinates[cursor + stride];\n    const y2 = flatCoordinates[cursor + stride + 1];\n    const segmentLength = Math.sqrt(\n      (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1),\n    );\n    chunkM += segmentLength;\n    if (chunkM >= chunkLength) {\n      const m = (chunkLength - chunkM + segmentLength) / segmentLength;\n      const x = lerp(x1, x2, m);\n      const y = lerp(y1, y2, m);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      if (chunkM == chunkLength) {\n        cursor += stride;\n      }\n      chunkM = 0;\n    } else if (chunkM < chunkLength) {\n      currentChunk.push(\n        flatCoordinates[cursor + stride],\n        flatCoordinates[cursor + stride + 1],\n      );\n      cursor += stride;\n    } else {\n      const missing = segmentLength - chunkM;\n      const x = lerp(x1, x2, missing / segmentLength);\n      const y = lerp(y1, y2, missing / segmentLength);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      chunkM = 0;\n      cursor += stride;\n    }\n  }\n  if (chunkM > 0) {\n    chunks.push(currentChunk);\n  }\n  return chunks;\n}\n","/**\n * @module ol/geom/flat/straightchunk\n */\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n","/**\n * @module ol/render/canvas/TextBuilder\n */\nimport {asColorLike} from '../../colorlike.js';\nimport {intersects} from '../../extent.js';\nimport {lineChunk} from '../../geom/flat/linechunk.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\nimport {getUid} from '../../util.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultPadding,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n  registerFont,\n} from '../canvas.js';\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\n/**\n * @const\n * @type {{left: 0, center: 0.5, right: 1, top: 0, middle: 0.5, hanging: 0.2, alphabetic: 0.8, ideographic: 0.8, bottom: 1}}\n */\nexport const TEXT_ALIGN = {\n  'left': 0,\n  'center': 0.5,\n  'right': 1,\n  'top': 0,\n  'middle': 0.5,\n  'hanging': 0.2,\n  'alphabetic': 0.8,\n  'ideographic': 0.8,\n  'bottom': 1,\n};\n\nclass CanvasTextBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string|Array<string>}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textKeepUpright_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n    this.fillStates[defaultFillStyle] = {fillStyle: defaultFillStyle};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * @private\n     * @type {import('../../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = undefined;\n\n    /**\n     * Data shared with an image builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   * @override\n   */\n  finish() {\n    const instructions = super.finish();\n    instructions.textStates = this.textStates;\n    instructions.fillStates = this.fillStates;\n    instructions.strokeStates = this.strokeStates;\n    return instructions;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawText(geometry, feature, index) {\n    const fillState = this.textFillState_;\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    const coordinates = this.coordinates;\n    let begin = coordinates.length;\n\n    const geometryType = geometry.getType();\n    let flatCoordinates = null;\n    let stride = geometry.getStride();\n\n    if (\n      textState.placement === 'line' &&\n      (geometryType == 'LineString' ||\n        geometryType == 'MultiLineString' ||\n        geometryType == 'Polygon' ||\n        geometryType == 'MultiPolygon')\n    ) {\n      if (!intersects(this.maxExtent, geometry.getExtent())) {\n        return;\n      }\n      let ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      if (geometryType == 'LineString') {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == 'MultiLineString') {\n        ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry\n        ).getEnds();\n      } else if (geometryType == 'Polygon') {\n        ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n          .getEnds()\n          .slice(0, 1);\n      } else if (geometryType == 'MultiPolygon') {\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        ends = [];\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature, index);\n      const repeat = textState.repeat;\n      const textAlign = repeat ? undefined : textState.textAlign;\n      // No `justify` support for line placement.\n      let flatOffset = 0;\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\n        let chunks;\n        if (repeat) {\n          chunks = lineChunk(\n            repeat * this.resolution,\n            flatCoordinates,\n            flatOffset,\n            ends[o],\n            stride,\n          );\n        } else {\n          chunks = [flatCoordinates.slice(flatOffset, ends[o])];\n        }\n        for (let c = 0, cc = chunks.length; c < cc; ++c) {\n          const chunk = chunks[c];\n          let chunkBegin = 0;\n          let chunkEnd = chunk.length;\n          if (textAlign == undefined) {\n            const range = matchingChunk(\n              textState.maxAngle,\n              chunk,\n              0,\n              chunk.length,\n              2,\n            );\n            chunkBegin = range[0];\n            chunkEnd = range[1];\n          }\n          for (let i = chunkBegin; i < chunkEnd; i += stride) {\n            coordinates.push(chunk[i], chunk[i + 1]);\n          }\n          const end = coordinates.length;\n          flatOffset = ends[o];\n          this.drawChars_(begin, end);\n          begin = end;\n        }\n      }\n      this.endGeometry(feature);\n    } else {\n      let geometryWidths = textState.overflow ? null : [];\n      switch (geometryType) {\n        case 'Point':\n        case 'MultiPoint':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n              geometry\n            ).getFlatCoordinates();\n          break;\n        case 'LineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/LineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoint();\n          break;\n        case 'Circle':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Circle.js\").default} */ (\n              geometry\n            ).getCenter();\n          break;\n        case 'MultiLineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoints();\n          stride = 2;\n          break;\n        case 'Polygon':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Polygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoint();\n          if (!textState.overflow) {\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\n          }\n          stride = 3;\n          break;\n        case 'MultiPolygon':\n          const interiorPoints =\n            /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (let i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (!textState.overflow) {\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n            }\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n          if (flatCoordinates.length === 0) {\n            return;\n          }\n          stride = 2;\n          break;\n        default:\n      }\n      const end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (end === begin) {\n        return;\n      }\n      if (\n        geometryWidths &&\n        (end - begin) / 2 !== flatCoordinates.length / stride\n      ) {\n        let beg = begin / 2;\n        geometryWidths = geometryWidths.filter((w, i) => {\n          const keep =\n            coordinates[(beg + i) * 2] === flatCoordinates[i * stride] &&\n            coordinates[(beg + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n          if (!keep) {\n            --beg;\n          }\n          return keep;\n        });\n      }\n\n      this.saveTextStates_();\n\n      const backgroundFill = textState.backgroundFill\n        ? this.createFill(this.fillStyleToState(textState.backgroundFill))\n        : null;\n      const backgroundStroke = textState.backgroundStroke\n        ? this.createStroke(this.strokeStyleToState(textState.backgroundStroke))\n        : null;\n\n      this.beginGeometry(geometry, feature, index);\n\n      // adjust padding for negative scale\n      let padding = textState.padding;\n      if (\n        padding != defaultPadding &&\n        (textState.scale[0] < 0 || textState.scale[1] < 0)\n      ) {\n        let p0 = textState.padding[0];\n        let p1 = textState.padding[1];\n        let p2 = textState.padding[2];\n        let p3 = textState.padding[3];\n        if (textState.scale[0] < 0) {\n          p1 = -p1;\n          p3 = -p3;\n        }\n        if (textState.scale[1] < 0) {\n          p0 = -p0;\n          p2 = -p2;\n        }\n        padding = [p0, p1, p2, p3];\n      }\n\n      // The image is unknown at this stage so we pass null; it will be computed at render time.\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n      // render time.\n      const pixelRatio = this.pixelRatio;\n      this.instructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [1, 1],\n        NaN,\n        this.declutterMode_,\n        this.declutterImageWithText_,\n        padding == defaultPadding\n          ? defaultPadding\n          : padding.map(function (p) {\n              return p * pixelRatio;\n            }),\n        backgroundFill,\n        backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      const scale = 1 / pixelRatio;\n      // Set default fill for hit detection background\n      const hitDetectionBackgroundFill = backgroundFill\n        ? backgroundFill.slice(0)\n        : null;\n      if (hitDetectionBackgroundFill) {\n        hitDetectionBackgroundFill[1] = defaultFillStyle;\n      }\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [scale, scale],\n        NaN,\n        this.declutterMode_,\n        this.declutterImageWithText_,\n        padding,\n        hitDetectionBackgroundFill,\n        backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_ ? defaultFillStyle : this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n\n      this.endGeometry(feature);\n    }\n  }\n\n  /**\n   * @private\n   */\n  saveTextStates_() {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    const fillState = this.textFillState_;\n\n    const strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = {\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash,\n        };\n      }\n    }\n    const textKey = this.textKey_;\n    if (!(textKey in this.textStates)) {\n      this.textStates[textKey] = {\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        justify: textState.justify,\n        textBaseline: textState.textBaseline || defaultTextBaseline,\n        scale: textState.scale,\n      };\n    }\n    const fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = {\n          fillStyle: fillState.fillStyle,\n        };\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  drawChars_(begin, end) {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n\n    const strokeKey = this.strokeKey_;\n    const textKey = this.textKey_;\n    const fillKey = this.fillKey_;\n    this.saveTextStates_();\n\n    const pixelRatio = this.pixelRatio;\n    const baseline = TEXT_ALIGN[textState.textBaseline];\n\n    const offsetY = this.textOffsetY_ * pixelRatio;\n    const text = this.text_;\n    const strokeWidth = strokeState\n      ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n      : 0;\n\n    this.instructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1,\n      this.declutterMode_,\n      this.textKeepUpright_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey ? defaultFillStyle : fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1 / pixelRatio,\n      this.declutterMode_,\n      this.textKeepUpright_,\n    ]);\n  }\n\n  /**\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @param {Object} [sharedData] Shared data.\n   * @override\n   */\n  setTextStyle(textStyle, sharedData) {\n    let textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = null;\n        this.textFillState_ = fillState;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n          this.textFillState_ = fillState;\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle,\n        );\n      }\n\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = null;\n        this.textStrokeState_ = strokeState;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n          this.textStrokeState_ = strokeState;\n        }\n        const lineDash = textStrokeStyle.getLineDash();\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\n        const lineWidth = textStrokeStyle.getWidth();\n        const miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle,\n        );\n      }\n\n      textState = this.textState_;\n      const font = textStyle.getFont() || defaultFont;\n      registerFont(font);\n      const textScale = textStyle.getScaleArray();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.repeat = textStyle.getRepeat();\n      textState.justify = textStyle.getJustify();\n      textState.textBaseline =\n        textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? [1, 1] : textScale;\n\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textKeepUpright = textStyle.getKeepUpright();\n      const textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ =\n        textRotateWithView === undefined ? false : textRotateWithView;\n      this.textKeepUpright_ =\n        textKeepUpright === undefined ? true : textKeepUpright;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState\n        ? (typeof strokeState.strokeStyle == 'string'\n            ? strokeState.strokeStyle\n            : getUid(strokeState.strokeStyle)) +\n          strokeState.lineCap +\n          strokeState.lineDashOffset +\n          '|' +\n          strokeState.lineWidth +\n          strokeState.lineJoin +\n          strokeState.miterLimit +\n          '[' +\n          strokeState.lineDash.join() +\n          ']'\n        : '';\n      this.textKey_ =\n        textState.font +\n        textState.scale +\n        (textState.textAlign || '?') +\n        (textState.repeat || '?') +\n        (textState.justify || '?') +\n        (textState.textBaseline || '?');\n      this.fillKey_ =\n        fillState && fillState.fillStyle\n          ? typeof fillState.fillStyle == 'string'\n            ? fillState.fillStyle\n            : '|' + getUid(fillState.fillStyle)\n          : '';\n    }\n    this.declutterMode_ = textStyle.getDeclutterMode();\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasTextBuilder;\n","/**\n * @module ol/render/canvas/BuilderGroup\n */\n\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n\n/**\n * @type {Object<import(\"../canvas.js\").BuilderType, typeof Builder>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder,\n};\n\nclass BuilderGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n\n  /**\n   * @return {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  finish() {\n    const builderInstructions = {};\n    for (const zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      const builders = this.buildersByZIndex_[zKey];\n      for (const builderKey in builders) {\n        const builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  }\n\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"../canvas.js\").BuilderType} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  getBuilder(zIndex, builderType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[builderType];\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(\n        this.tolerance_,\n        this.maxExtent_,\n        this.resolution_,\n        this.pixelRatio_,\n      );\n      replays[builderType] = replay;\n    }\n    return replay;\n  }\n}\n\nexport default BuilderGroup;\n","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\nimport {rotate} from './transform.js';\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @param {boolean} keepUpright Whether the text needs to be kept upright\n * @return {Array<Array<*>>|null} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  text,\n  startM,\n  maxAngle,\n  scale,\n  measureAndCacheTextWidth,\n  font,\n  cache,\n  rotation,\n  keepUpright = true,\n) {\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let x1 = 0;\n  let y1 = 0;\n  let segmentLength = 0;\n  let segmentM = 0;\n\n  function advance() {\n    x1 = x2;\n    y1 = y2;\n    offset += stride;\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    segmentM += segmentLength;\n    segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  }\n  do {\n    advance();\n  } while (offset < end - stride && segmentM + segmentLength < startM);\n\n  let interpolate =\n    segmentLength === 0 ? 0 : (startM - segmentM) / segmentLength;\n  const beginX = lerp(x1, x2, interpolate);\n  const beginY = lerp(y1, y2, interpolate);\n\n  const startOffset = offset - stride;\n  const startLength = segmentM;\n  const endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\n  while (offset < end - stride && segmentM + segmentLength < endM) {\n    advance();\n  }\n  interpolate = segmentLength === 0 ? 0 : (endM - segmentM) / segmentLength;\n  const endX = lerp(x1, x2, interpolate);\n  const endY = lerp(y1, y2, interpolate);\n\n  // Keep text upright if the option is selected\n  let reverse = false;\n  if (keepUpright) {\n    if (rotation) {\n      const flat = [beginX, beginY, endX, endY];\n      rotate(flat, 0, 4, 2, rotation, flat, flat);\n      reverse = flat[0] > flat[2];\n    } else {\n      reverse = beginX > endX;\n    }\n  }\n\n  const PI = Math.PI;\n  const result = [];\n  const singleSegment = startOffset + stride === offset;\n\n  offset = startOffset;\n  segmentLength = 0;\n  segmentM = startLength;\n  x2 = flatCoordinates[offset];\n  y2 = flatCoordinates[offset + 1];\n\n  let previousAngle;\n  // All on the same segment\n  if (singleSegment) {\n    advance();\n\n    previousAngle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      previousAngle += previousAngle > 0 ? -PI : PI;\n    }\n    const x = (endX + beginX) / 2;\n    const y = (endY + beginY) / 2;\n    result[0] = [x, y, (endM - startM) / 2, previousAngle, text];\n    return result;\n  }\n\n  // rendering across line segments\n  text = text.replace(/\\n/g, ' '); // ensure rendering in single-line as all calculations below don't handle multi-lines\n\n  for (let i = 0, ii = text.length; i < ii; ) {\n    advance();\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -PI : PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    previousAngle = angle;\n\n    const iStart = i;\n    let charLength = 0;\n    for (; i < ii; ++i) {\n      const index = reverse ? ii - i - 1 : i;\n      const len = scale * measureAndCacheTextWidth(font, text[index], cache);\n      if (\n        offset + stride < end &&\n        segmentM + segmentLength < startM + charLength + len / 2\n      ) {\n        break;\n      }\n      charLength += len;\n    }\n    if (i === iStart) {\n      continue;\n    }\n    const chars = reverse\n      ? text.substring(ii - iStart, ii - i)\n      : text.substring(iStart, i);\n    interpolate =\n      segmentLength === 0\n        ? 0\n        : (startM + charLength / 2 - segmentM) / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    result.push([x, y, charLength / 2, angle, chars]);\n    startM += charLength;\n  }\n  return result;\n}\n","/**\n * @module ol/render/canvas/ZIndexContext\n */\n\nimport {getSharedCanvasContext2D} from '../../dom.js';\n\n/** @typedef {CanvasRenderingContext2D & {globalAlpha: any}} ZIndexContextProxy */\n\n/**\n * @extends {CanvasRenderingContext2D}\n */\nclass ZIndexContext {\n  constructor() {\n    /**\n     * @private\n     * @type {Array<Array<*>>}\n     */\n    this.instructions_ = [];\n    /**\n     * @type {number}\n     */\n    this.zIndex = 0;\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offset_ = 0;\n\n    /**\n     * @private\n     * @type {ZIndexContextProxy}\n     */\n    this.context_ = /** @type {ZIndexContextProxy} */ (\n      new Proxy(getSharedCanvasContext2D(), {\n        get: (target, property) => {\n          if (\n            typeof (/** @type {*} */ (getSharedCanvasContext2D())[property]) !==\n            'function'\n          ) {\n            // we only accept calling functions on the proxy, not accessing properties\n            return undefined;\n          }\n          if (!this.instructions_[this.zIndex + this.offset_]) {\n            this.instructions_[this.zIndex + this.offset_] = [];\n          }\n          this.instructions_[this.zIndex + this.offset_].push(property);\n          return this.pushMethodArgs_;\n        },\n        set: (target, property, value) => {\n          if (!this.instructions_[this.zIndex + this.offset_]) {\n            this.instructions_[this.zIndex + this.offset_] = [];\n          }\n          this.instructions_[this.zIndex + this.offset_].push(property, value);\n          return true;\n        },\n      })\n    );\n  }\n\n  /**\n   * @private\n   * @param {...*} args Args.\n   * @return {ZIndexContext} This.\n   */\n  pushMethodArgs_ = (...args) => {\n    this.instructions_[this.zIndex + this.offset_].push(args);\n    return this;\n  };\n\n  /**\n   * Push a function that renders to the context directly.\n   * @param {function(CanvasRenderingContext2D): void} render Function.\n   */\n  pushFunction(render) {\n    this.instructions_[this.zIndex + this.offset_].push(render);\n  }\n\n  /**\n   * Get a proxy for CanvasRenderingContext2D which does not support getting state\n   * (e.g. `context.globalAlpha`, which will return `undefined`). To set state, if it relies on a\n   * previous state (e.g. `context.globalAlpha = context.globalAlpha / 2`), set a function,\n   * e.g. `context.globalAlpha = (context) => context.globalAlpha / 2`.\n   * @return {ZIndexContextProxy} Context.\n   */\n  getContext() {\n    return this.context_;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  draw(context) {\n    this.instructions_.forEach((instructionsAtIndex) => {\n      for (let i = 0, ii = instructionsAtIndex.length; i < ii; ++i) {\n        const property = instructionsAtIndex[i];\n        if (typeof property === 'function') {\n          property(context);\n          continue;\n        }\n        const instructionAtIndex = instructionsAtIndex[++i];\n        if (typeof (/** @type {*} */ (context)[property]) === 'function') {\n          /** @type {*} */ (context)[property](...instructionAtIndex);\n        } else {\n          if (typeof instructionAtIndex === 'function') {\n            /** @type {*} */ (context)[property] = instructionAtIndex(context);\n            continue;\n          }\n          /** @type {*} */ (context)[property] = instructionAtIndex;\n        }\n      }\n    });\n  }\n\n  clear() {\n    this.instructions_.length = 0;\n    this.zIndex = 0;\n    this.offset_ = 0;\n  }\n\n  /**\n   * Offsets the zIndex by the highest current zIndex. Useful for rendering multiple worlds or tiles, to\n   * avoid conflicting context.clip() or context.save()/restore() calls.\n   */\n  offset() {\n    this.offset_ = this.instructions_.length;\n    this.zIndex = 0;\n  }\n}\n\nexport default ZIndexContext;\n","/**\n * @module ol/render/canvas/Executor\n */\nimport {equals} from '../../array.js';\nimport {createEmpty, createOrUpdate, intersects} from '../../extent.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  setFromArray as transformSetFromArray,\n} from '../../transform.js';\nimport ZIndexContext from '../canvas/ZIndexContext.js';\nimport {\n  defaultPadding,\n  defaultTextAlign,\n  defaultTextBaseline,\n  drawImageOrLabel,\n  getTextDimensions,\n  measureAndCacheTextWidth,\n} from '../canvas.js';\nimport CanvasInstruction from './Instruction.js';\nimport {TEXT_ALIGN} from './TextBuilder.js';\n\n/**\n * @typedef {import('../../structs/RBush.js').Entry<import('../../Feature.js').FeatureLike>} DeclutterEntry\n */\n\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX DrawImageX.\n * @property {number} drawImageY DrawImageY.\n * @property {number} drawImageW DrawImageW.\n * @property {number} drawImageH DrawImageH.\n * @property {number} originX OriginX.\n * @property {number} originY OriginY.\n * @property {Array<number>} scale Scale.\n * @property {DeclutterEntry} declutterBox DeclutterBox.\n * @property {import(\"../../transform.js\").Transform} canvasTransform CanvasTransform.\n */\n\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: import('../../size.js').Size, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, import(\"../../style/Style.js\").DeclutterMode): T} FeatureCallback\n */\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nconst tmpExtent = createEmpty();\n\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p4 = [];\n\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {DeclutterEntry} Declutter rbush entry.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n  return replayImageOrLabelArgs[3].declutterBox;\n}\n\nconst rtlRegEx = new RegExp(\n  /* eslint-disable prettier/prettier */\n  '[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n  ']'\n  /* eslint-enable prettier/prettier */\n);\n\n/**\n * @param {string} text Text.\n * @param {CanvasTextAlign} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n  if (align === 'start') {\n    align = rtlRegEx.test(text) ? 'right' : 'left';\n  } else if (align === 'end') {\n    align = rtlRegEx.test(text) ? 'left' : 'right';\n  }\n  return TEXT_ALIGN[align];\n}\n\n/**\n * @param {Array<string>} acc Accumulator.\n * @param {string} line Line of text.\n * @param {number} i Index\n * @return {Array<string>} Accumulator.\n */\nfunction createTextChunks(acc, line, i) {\n  if (i > 0) {\n    acc.push('\\n', '');\n  }\n  acc.push(line, '');\n  return acc;\n}\n\nclass Executor {\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions.\n   * @param {boolean} [deferredRendering] Enable deferred rendering.\n   */\n  constructor(\n    resolution,\n    pixelRatio,\n    overlaps,\n    instructions,\n    deferredRendering,\n  ) {\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.alignAndScaleFill_;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = instructions.instructions;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = instructions.coordinates;\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = instructions.fillStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = instructions.strokeStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = instructions.textStates || {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../canvas.js\").Label>}\n     */\n    this.labels_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas/ZIndexContext.js\").default}\n     */\n    this.zIndexContext_ = deferredRendering ? new ZIndexContext() : null;\n  }\n\n  /**\n   * @return {ZIndexContext} ZIndex context.\n   */\n  getZIndexContext() {\n    return this.zIndexContext_;\n  }\n\n  /**\n   * @param {string|Array<string>} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {import(\"../canvas.js\").Label} Label.\n   */\n  createLabel(text, textKey, fillKey, strokeKey) {\n    const key = text + textKey + fillKey + strokeKey;\n    if (this.labels_[key]) {\n      return this.labels_[key];\n    }\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n    const fillState = fillKey ? this.fillStates[fillKey] : null;\n    const textState = this.textStates[textKey];\n    const pixelRatio = this.pixelRatio;\n    const scale = [\n      textState.scale[0] * pixelRatio,\n      textState.scale[1] * pixelRatio,\n    ];\n    const align = textState.justify\n      ? TEXT_ALIGN[textState.justify]\n      : horizontalTextAlign(\n          Array.isArray(text) ? text[0] : text,\n          textState.textAlign || defaultTextAlign,\n        );\n    const strokeWidth =\n      strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const chunks = Array.isArray(text)\n      ? text\n      : String(text).split('\\n').reduce(createTextChunks, []);\n\n    const {width, height, widths, heights, lineWidths} = getTextDimensions(\n      textState,\n      chunks,\n    );\n    const renderWidth = width + strokeWidth;\n    const contextInstructions = [];\n    // make canvas 2 pixels wider to account for italic text width measurement errors\n    const w = (renderWidth + 2) * scale[0];\n    const h = (height + strokeWidth) * scale[1];\n    /** @type {import(\"../canvas.js\").Label} */\n    const label = {\n      width: w < 0 ? Math.floor(w) : Math.ceil(w),\n      height: h < 0 ? Math.floor(h) : Math.ceil(h),\n      contextInstructions: contextInstructions,\n    };\n    if (scale[0] != 1 || scale[1] != 1) {\n      contextInstructions.push('scale', scale);\n    }\n    if (strokeKey) {\n      contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n      contextInstructions.push('lineWidth', strokeWidth);\n      contextInstructions.push('lineCap', strokeState.lineCap);\n      contextInstructions.push('lineJoin', strokeState.lineJoin);\n      contextInstructions.push('miterLimit', strokeState.miterLimit);\n      contextInstructions.push('setLineDash', [strokeState.lineDash]);\n      contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n    }\n    if (fillKey) {\n      contextInstructions.push('fillStyle', fillState.fillStyle);\n    }\n    contextInstructions.push('textBaseline', 'middle');\n    contextInstructions.push('textAlign', 'center');\n    const leftRight = 0.5 - align;\n    let x = align * renderWidth + leftRight * strokeWidth;\n    const strokeInstructions = [];\n    const fillInstructions = [];\n    let lineHeight = 0;\n    let lineOffset = 0;\n    let widthHeightIndex = 0;\n    let lineWidthIndex = 0;\n    let previousFont;\n    for (let i = 0, ii = chunks.length; i < ii; i += 2) {\n      const text = chunks[i];\n      if (text === '\\n') {\n        lineOffset += lineHeight;\n        lineHeight = 0;\n        x = align * renderWidth + leftRight * strokeWidth;\n        ++lineWidthIndex;\n        continue;\n      }\n      const font = chunks[i + 1] || textState.font;\n      if (font !== previousFont) {\n        if (strokeKey) {\n          strokeInstructions.push('font', font);\n        }\n        if (fillKey) {\n          fillInstructions.push('font', font);\n        }\n        previousFont = font;\n      }\n      lineHeight = Math.max(lineHeight, heights[widthHeightIndex]);\n      const fillStrokeArgs = [\n        text,\n        x +\n          leftRight * widths[widthHeightIndex] +\n          align * (widths[widthHeightIndex] - lineWidths[lineWidthIndex]),\n        0.5 * (strokeWidth + lineHeight) + lineOffset,\n      ];\n      x += widths[widthHeightIndex];\n      if (strokeKey) {\n        strokeInstructions.push('strokeText', fillStrokeArgs);\n      }\n      if (fillKey) {\n        fillInstructions.push('fillText', fillStrokeArgs);\n      }\n      ++widthHeightIndex;\n    }\n    Array.prototype.push.apply(contextInstructions, strokeInstructions);\n    Array.prototype.push.apply(contextInstructions, fillInstructions);\n    this.labels_[key] = label;\n    return label;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  replayTextBackground_(\n    context,\n    p1,\n    p2,\n    p3,\n    p4,\n    fillInstruction,\n    strokeInstruction,\n  ) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignAndScaleFill_ = /** @type {number} */ (fillInstruction[2]);\n      context.fillStyle = /** @type {string} */ (fillInstruction[1]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(\n        context,\n        /** @type {Array<*>} */ (strokeInstruction),\n      );\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} sheetWidth Width of the sprite sheet.\n   * @param {number} sheetHeight Height of the sprite sheet.\n   * @param {number} centerX X.\n   * @param {number} centerY Y.\n   * @param {number} width Width.\n   * @param {number} height Height.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {Array<number>} padding Padding.\n   * @param {boolean} fillStroke Background fill or stroke.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n   */\n  calculateImageOrLabelDimensions_(\n    sheetWidth,\n    sheetHeight,\n    centerX,\n    centerY,\n    width,\n    height,\n    anchorX,\n    anchorY,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    padding,\n    fillStroke,\n    feature,\n  ) {\n    anchorX *= scale[0];\n    anchorY *= scale[1];\n    let x = centerX - anchorX;\n    let y = centerY - anchorY;\n\n    const w = width + originX > sheetWidth ? sheetWidth - originX : width;\n    const h = height + originY > sheetHeight ? sheetHeight - originY : height;\n    const boxW = padding[3] + w * scale[0] + padding[1];\n    const boxH = padding[0] + h * scale[1] + padding[2];\n    const boxX = x - padding[3];\n    const boxY = y - padding[0];\n\n    if (fillStroke || rotation !== 0) {\n      p1[0] = boxX;\n      p4[0] = boxX;\n      p1[1] = boxY;\n      p2[1] = boxY;\n      p2[0] = boxX + boxW;\n      p3[0] = p2[0];\n      p3[1] = boxY + boxH;\n      p4[1] = p3[1];\n    }\n\n    let transform;\n    if (rotation !== 0) {\n      transform = composeTransform(\n        createTransform(),\n        centerX,\n        centerY,\n        1,\n        1,\n        rotation,\n        -centerX,\n        -centerY,\n      );\n\n      applyTransform(transform, p1);\n      applyTransform(transform, p2);\n      applyTransform(transform, p3);\n      applyTransform(transform, p4);\n      createOrUpdate(\n        Math.min(p1[0], p2[0], p3[0], p4[0]),\n        Math.min(p1[1], p2[1], p3[1], p4[1]),\n        Math.max(p1[0], p2[0], p3[0], p4[0]),\n        Math.max(p1[1], p2[1], p3[1], p4[1]),\n        tmpExtent,\n      );\n    } else {\n      createOrUpdate(\n        Math.min(boxX, boxX + boxW),\n        Math.min(boxY, boxY + boxH),\n        Math.max(boxX, boxX + boxW),\n        Math.max(boxY, boxY + boxH),\n        tmpExtent,\n      );\n    }\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    return {\n      drawImageX: x,\n      drawImageY: y,\n      drawImageW: w,\n      drawImageH: h,\n      originX: originX,\n      originY: originY,\n      declutterBox: {\n        minX: tmpExtent[0],\n        minY: tmpExtent[1],\n        maxX: tmpExtent[2],\n        maxY: tmpExtent[3],\n        value: feature,\n      },\n      canvasTransform: transform,\n      scale: scale,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scaled canvas size.\n   * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n   * @param {ImageOrLabelDimensions} dimensions Dimensions.\n   * @param {number} opacity Opacity.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   * @return {boolean} The image or label was rendered.\n   */\n  replayImageOrLabel_(\n    context,\n    scaledCanvasSize,\n    imageOrLabel,\n    dimensions,\n    opacity,\n    fillInstruction,\n    strokeInstruction,\n  ) {\n    const fillStroke = !!(fillInstruction || strokeInstruction);\n\n    const box = dimensions.declutterBox;\n    const strokePadding = strokeInstruction\n      ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n      : 0;\n    const intersects =\n      box.minX - strokePadding <= scaledCanvasSize[0] &&\n      box.maxX + strokePadding >= 0 &&\n      box.minY - strokePadding <= scaledCanvasSize[1] &&\n      box.maxY + strokePadding >= 0;\n\n    if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(\n          context,\n          p1,\n          p2,\n          p3,\n          p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction),\n        );\n      }\n      drawImageOrLabel(\n        context,\n        dimensions.canvasTransform,\n        opacity,\n        imageOrLabel,\n        dimensions.originX,\n        dimensions.originY,\n        dimensions.drawImageW,\n        dimensions.drawImageH,\n        dimensions.drawImageX,\n        dimensions.drawImageY,\n        dimensions.scale,\n      );\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  fill_(context) {\n    const alignAndScale = this.alignAndScaleFill_;\n    if (alignAndScale) {\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\n      const repeatSize = 512 * this.pixelRatio;\n      context.save();\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      if (alignAndScale !== 1) {\n        context.scale(alignAndScale, alignAndScale);\n      }\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (alignAndScale) {\n      context.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  setStrokeStyle_(context, instruction) {\n    context.strokeStyle =\n      /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    context.lineDashOffset = /** @type {number} */ (instruction[7]);\n    context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n  }\n\n  /**\n   * @private\n   * @param {string|Array<string>} text The text to draw.\n   * @param {string} textKey The key of the text state.\n   * @param {string} strokeKey The key for the stroke state.\n   * @param {string} fillKey The key for the fill state.\n   * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n   */\n  drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey) {\n    const textState = this.textStates[textKey];\n\n    const label = this.createLabel(text, textKey, fillKey, strokeKey);\n\n    const strokeState = this.strokeStates[strokeKey];\n    const pixelRatio = this.pixelRatio;\n    const align = horizontalTextAlign(\n      Array.isArray(text) ? text[0] : text,\n      textState.textAlign || defaultTextAlign,\n    );\n    const baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n    const strokeWidth =\n      strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    // Remove the 2 pixels we added in createLabel() for the anchor\n    const width = label.width / pixelRatio - 2 * textState.scale[0];\n    const anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n    const anchorY =\n      (baseline * label.height) / pixelRatio +\n      2 * (0.5 - baseline) * strokeWidth;\n\n    return {\n      label: label,\n      anchorX: anchorX,\n      anchorY: anchorY,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scaled canvas size\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @param {import(\"rbush\").default<DeclutterEntry>} [declutterTree] Declutter tree.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  execute_(\n    context,\n    scaledCanvasSize,\n    transform,\n    instructions,\n    snapToPixel,\n    featureCallback,\n    hitExtent,\n    declutterTree,\n  ) {\n    const zIndexContext = this.zIndexContext_;\n    /** @type {Array<number>} */\n    let pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates,\n        0,\n        this.coordinates.length,\n        2,\n        transform,\n        this.pixelCoordinates_,\n      );\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    let i = 0; // instruction index\n    const ii = instructions.length; // end of instructions\n    let d = 0; // data index\n    let dd; // end of per-instruction data\n    let anchorX,\n      anchorY,\n      /** @type {import('../../style/Style.js').DeclutterMode} */\n      declutterMode,\n      prevX,\n      prevY,\n      roundX,\n      roundY,\n      image,\n      text,\n      textKey,\n      strokeKey,\n      fillKey;\n    let pendingFill = 0;\n    let pendingStroke = 0;\n    const coordinateCache = this.coordinateCache_;\n    const viewRotation = this.viewRotation_;\n    const viewRotationFromTransform =\n      Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n\n    const state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation,\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    const batchSize =\n      this.instructions != instructions || this.overlaps ? 0 : 200;\n    let /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n    let x, y, currentGeometry;\n    while (i < ii) {\n      const instruction = instructions[i];\n      const type = /** @type {import(\"./Instruction.js\").default} */ (\n        instruction[0]\n      );\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n            instruction[1]\n          );\n          currentGeometry = instruction[3];\n          if (!feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (\n            hitExtent !== undefined &&\n            !intersects(hitExtent, currentGeometry.getExtent())\n          ) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          if (zIndexContext) {\n            zIndexContext.zIndex = instruction[4];\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = NaN;\n            prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          const x1 = pixelCoordinates[d];\n          const y1 = pixelCoordinates[d + 1];\n          const x2 = pixelCoordinates[d + 2];\n          const y2 = pixelCoordinates[d + 3];\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          const geometry =\n            /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (\n              instruction[3]\n            );\n          const renderer = instruction[4];\n          const fn = instruction[5];\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          const coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          if (zIndexContext) {\n            zIndexContext.zIndex = instruction[6];\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image =\n            /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (\n              instruction[3]\n            );\n\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          let height = /** @type {number} */ (instruction[6]);\n          const opacity = /** @type {number} */ (instruction[7]);\n          const originX = /** @type {number} */ (instruction[8]);\n          const originY = /** @type {number} */ (instruction[9]);\n          const rotateWithView = /** @type {boolean} */ (instruction[10]);\n          let rotation = /** @type {number} */ (instruction[11]);\n          const scale = /** @type {import(\"../../size.js\").Size} */ (\n            instruction[12]\n          );\n          let width = /** @type {number} */ (instruction[13]);\n          declutterMode = instruction[14] || 'declutter';\n          const declutterImageWithText =\n            /** @type {{args: import(\"../canvas.js\").DeclutterImageWithText, declutterMode: import('../../style/Style.js').DeclutterMode}} */ (\n              instruction[15]\n            );\n\n          if (!image && instruction.length >= 20) {\n            // create label images\n            text = /** @type {string} */ (instruction[19]);\n            textKey = /** @type {string} */ (instruction[20]);\n            strokeKey = /** @type {string} */ (instruction[21]);\n            fillKey = /** @type {string} */ (instruction[22]);\n            const labelWithAnchor = this.drawLabelWithPointPlacement_(\n              text,\n              textKey,\n              strokeKey,\n              fillKey,\n            );\n            image = labelWithAnchor.label;\n            instruction[3] = image;\n            const textOffsetX = /** @type {number} */ (instruction[23]);\n            anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n            instruction[4] = anchorX;\n            const textOffsetY = /** @type {number} */ (instruction[24]);\n            anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n            instruction[5] = anchorY;\n            height = image.height;\n            instruction[6] = height;\n            width = image.width;\n            instruction[13] = width;\n          }\n\n          let geometryWidths;\n          if (instruction.length > 25) {\n            geometryWidths = /** @type {number} */ (instruction[25]);\n          }\n\n          let padding, backgroundFillInstruction, backgroundStrokeInstruction;\n          if (instruction.length > 17) {\n            padding = /** @type {Array<number>} */ (instruction[16]);\n            backgroundFillInstruction = /** @type {Array<*>} */ (\n              instruction[17]\n            );\n            backgroundStrokeInstruction = /** @type {Array<*>} */ (\n              instruction[18]\n            );\n          } else {\n            padding = defaultPadding;\n            backgroundFillInstruction = null;\n            backgroundStrokeInstruction = null;\n          }\n\n          if (rotateWithView && viewRotationFromTransform) {\n            // Canvas is expected to be rotated to reverse view rotation.\n            rotation += viewRotation;\n          } else if (!rotateWithView && !viewRotationFromTransform) {\n            // Canvas is not rotated, images need to be rotated back to be north-up.\n            rotation -= viewRotation;\n          }\n          let widthIndex = 0;\n          for (; d < dd; d += 2) {\n            if (\n              geometryWidths &&\n              geometryWidths[widthIndex++] < width / this.pixelRatio\n            ) {\n              continue;\n            }\n            const dimensions = this.calculateImageOrLabelDimensions_(\n              image.width,\n              image.height,\n              pixelCoordinates[d],\n              pixelCoordinates[d + 1],\n              width,\n              height,\n              anchorX,\n              anchorY,\n              originX,\n              originY,\n              rotation,\n              scale,\n              snapToPixel,\n              padding,\n              !!backgroundFillInstruction || !!backgroundStrokeInstruction,\n              feature,\n            );\n            /** @type {ReplayImageOrLabelArgs} */\n            const args = [\n              context,\n              scaledCanvasSize,\n              image,\n              dimensions,\n              opacity,\n              backgroundFillInstruction,\n              backgroundStrokeInstruction,\n            ];\n            if (declutterTree) {\n              let imageArgs, imageDeclutterMode, imageDeclutterBox;\n              if (declutterImageWithText) {\n                const index = dd - d;\n                if (!declutterImageWithText[index]) {\n                  // We now have the image for an image+text combination.\n                  declutterImageWithText[index] = {args, declutterMode};\n                  // Don't render anything for now, wait for the text.\n                  continue;\n                }\n                const imageDeclutter = declutterImageWithText[index];\n                imageArgs = imageDeclutter.args;\n                imageDeclutterMode = imageDeclutter.declutterMode;\n                delete declutterImageWithText[index];\n                imageDeclutterBox = getDeclutterBox(imageArgs);\n              }\n              // We now have image and text for an image+text combination.\n              let renderImage, renderText;\n              if (\n                imageArgs &&\n                (imageDeclutterMode !== 'declutter' ||\n                  !declutterTree.collides(imageDeclutterBox))\n              ) {\n                renderImage = true;\n              }\n              if (\n                declutterMode !== 'declutter' ||\n                !declutterTree.collides(dimensions.declutterBox)\n              ) {\n                renderText = true;\n              }\n              if (\n                imageDeclutterMode === 'declutter' &&\n                declutterMode === 'declutter'\n              ) {\n                const render = renderImage && renderText;\n                renderImage = render;\n                renderText = render;\n              }\n              if (renderImage) {\n                if (imageDeclutterMode !== 'none') {\n                  declutterTree.insert(imageDeclutterBox);\n                }\n                this.replayImageOrLabel_.apply(this, imageArgs);\n              }\n              if (renderText) {\n                if (declutterMode !== 'none') {\n                  declutterTree.insert(dimensions.declutterBox);\n                }\n                this.replayImageOrLabel_.apply(this, args);\n              }\n            } else {\n              this.replayImageOrLabel_.apply(this, args);\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          const begin = /** @type {number} */ (instruction[1]);\n          const end = /** @type {number} */ (instruction[2]);\n          const baseline = /** @type {number} */ (instruction[3]);\n          const overflow = /** @type {number} */ (instruction[4]);\n          fillKey = /** @type {string} */ (instruction[5]);\n          const maxAngle = /** @type {number} */ (instruction[6]);\n          const measurePixelRatio = /** @type {number} */ (instruction[7]);\n          const offsetY = /** @type {number} */ (instruction[8]);\n          strokeKey = /** @type {string} */ (instruction[9]);\n          const strokeWidth = /** @type {number} */ (instruction[10]);\n          text = /** @type {string} */ (instruction[11]);\n          textKey = /** @type {string} */ (instruction[12]);\n          const pixelRatioScale = [\n            /** @type {number} */ (instruction[13]),\n            /** @type {number} */ (instruction[13]),\n          ];\n          declutterMode = instruction[14] || 'declutter';\n\n          const textKeepUpright = /** @type {boolean} */ (instruction[15]);\n          const textState = this.textStates[textKey];\n          const font = textState.font;\n          const textScale = [\n            textState.scale[0] * measurePixelRatio,\n            textState.scale[1] * measurePixelRatio,\n          ];\n\n          let cachedWidths;\n          if (font in this.widths_) {\n            cachedWidths = this.widths_[font];\n          } else {\n            cachedWidths = {};\n            this.widths_[font] = cachedWidths;\n          }\n\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          const textLength =\n            Math.abs(textScale[0]) *\n            measureAndCacheTextWidth(font, text, cachedWidths);\n          if (overflow || textLength <= pathLength) {\n            const textAlign = this.textStates[textKey].textAlign;\n            const startM =\n              (pathLength - textLength) * horizontalTextAlign(text, textAlign);\n            const parts = drawTextOnPath(\n              pixelCoordinates,\n              begin,\n              end,\n              2,\n              text,\n              startM,\n              maxAngle,\n              Math.abs(textScale[0]),\n              measureAndCacheTextWidth,\n              font,\n              cachedWidths,\n              viewRotationFromTransform ? 0 : this.viewRotation_,\n              textKeepUpright,\n            );\n            drawChars: if (parts) {\n              /** @type {Array<ReplayImageOrLabelArgs>} */\n              const replayImageOrLabelArgs = [];\n              let c, cc, chars, label, part;\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, '', strokeKey);\n                  anchorX =\n                    /** @type {number} */ (part[2]) +\n                    (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                  anchorY =\n                    baseline * label.height +\n                    ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                      textScale[0] -\n                    offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature,\n                  );\n                  if (\n                    declutterTree &&\n                    declutterMode === 'declutter' &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    scaledCanvasSize,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature,\n                  );\n                  if (\n                    declutterTree &&\n                    declutterMode === 'declutter' &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    scaledCanvasSize,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (declutterTree && declutterMode !== 'none') {\n                declutterTree.load(replayImageOrLabelArgs.map(getDeclutterBox));\n              }\n              for (let i = 0, ii = replayImageOrLabelArgs.length; i < ii; ++i) {\n                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i]);\n              }\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n              instruction[1]\n            );\n            const result = featureCallback(\n              feature,\n              currentGeometry,\n              declutterMode,\n            );\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          context.moveTo(x, y);\n          prevX = (x + 0.5) | 0;\n          prevY = (y + 0.5) | 0;\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          this.alignAndScaleFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          /** @type {import(\"../../colorlike.js\").ColorLike} */\n          context.fillStyle = instruction[1];\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default: // consume the instruction anyway, to avoid an infinite loop\n          ++i;\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scaled canvas size.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {import(\"rbush\").default<DeclutterEntry>} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    scaledCanvasSize,\n    transform,\n    viewRotation,\n    snapToPixel,\n    declutterTree,\n  ) {\n    this.viewRotation_ = viewRotation;\n    this.execute_(\n      context,\n      scaledCanvasSize,\n      transform,\n      this.instructions,\n      snapToPixel,\n      undefined,\n      undefined,\n      declutterTree,\n    );\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  executeHitDetection(\n    context,\n    transform,\n    viewRotation,\n    featureCallback,\n    hitExtent,\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.execute_(\n      context,\n      [context.canvas.width, context.canvas.height],\n      transform,\n      this.hitDetectionInstructions,\n      true,\n      featureCallback,\n      hitExtent,\n    );\n  }\n}\n\nexport default Executor;\n","/**\n * @module ol/render/canvas/ExecutorGroup\n */\n\nimport {ascending, descending} from '../../array.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {isEmpty} from '../../obj.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport Executor from './Executor.js';\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nexport const ALL = [\n  'Polygon',\n  'Circle',\n  'LineString',\n  'Image',\n  'Text',\n  'Default',\n];\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nexport const DECLUTTER = ['Image', 'Text'];\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nexport const NON_DECLUTTER = ALL.filter(\n  (builderType) => !DECLUTTER.includes(builderType),\n);\n\nclass ExecutorGroup {\n  /**\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n   * `maxExtent` was set on the Builder for this executor group, the same `maxExtent`\n   * should be set here, unless the target context does not exceed that extent (which\n   * can be the case when rendering to tiles).\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The executor group can have overlapping geometries.\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n   * The serializable instructions.\n   * @param {number} [renderBuffer] Optional rendering buffer.\n   * @param {boolean} [deferredRendering] Enable deferred rendering with renderDeferred().\n   */\n  constructor(\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    allInstructions,\n    renderBuffer,\n    deferredRendering,\n  ) {\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<string, import(\"./Executor\").default>>}\n     */\n    this.executorsByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.renderedContext_ = null;\n\n    /**\n     * @private\n     * @type {Object<number, Array<import(\"./ZIndexContext.js\").default>>}\n     */\n    this.deferredZIndexContexts_ = {};\n\n    this.createExecutors_(allInstructions, deferredRendering);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  clip(context, transform) {\n    const flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  }\n\n  /**\n   * Create executors and populate them using the provided instructions.\n   * @private\n   * @param {!Object<string, !Object<string, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n   * @param {boolean} deferredRendering Enable deferred rendering.\n   */\n  createExecutors_(allInstructions, deferredRendering) {\n    for (const zIndex in allInstructions) {\n      let executors = this.executorsByZIndex_[zIndex];\n      if (executors === undefined) {\n        executors = {};\n        this.executorsByZIndex_[zIndex] = executors;\n      }\n      const instructionByZindex = allInstructions[zIndex];\n      for (const builderType in instructionByZindex) {\n        const instructions = instructionByZindex[builderType];\n        executors[builderType] = new Executor(\n          this.resolution_,\n          this.pixelRatio_,\n          this.overlaps_,\n          instructions,\n          deferredRendering,\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Array<import(\"../canvas.js\").BuilderType>} executors Executors.\n   * @return {boolean} Has executors of the provided types.\n   */\n  hasExecutors(executors) {\n    for (const zIndex in this.executorsByZIndex_) {\n      const candidates = this.executorsByZIndex_[zIndex];\n      for (let i = 0, ii = executors.length; i < ii; ++i) {\n        if (executors[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n   * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    callback,\n    declutteredFeatures,\n  ) {\n    hitTolerance = Math.round(hitTolerance);\n    const contextSize = hitTolerance * 2 + 1;\n    const transform = composeTransform(\n      this.hitDetectionTransform_,\n      hitTolerance + 0.5,\n      hitTolerance + 0.5,\n      1 / resolution,\n      -1 / resolution,\n      -rotation,\n      -coordinate[0],\n      -coordinate[1],\n    );\n\n    const newContext = !this.hitDetectionContext_;\n    if (newContext) {\n      this.hitDetectionContext_ = createCanvasContext2D(\n        contextSize,\n        contextSize,\n        undefined,\n        {willReadFrequently: true},\n      );\n    }\n    const context = this.hitDetectionContext_;\n\n    if (\n      context.canvas.width !== contextSize ||\n      context.canvas.height !== contextSize\n    ) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else if (!newContext) {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /** @type {import(\"../../extent.js\").Extent|undefined} */\n    let hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(\n        hitExtent,\n        resolution * (this.renderBuffer_ + hitTolerance),\n        hitExtent,\n      );\n    }\n\n    const indexes = getPixelIndexArray(hitTolerance);\n\n    /** @type {import(\"../canvas.js\").BuilderType} */\n    let builderType;\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {import('../../style/Style.js').DeclutterMode} declutterMode Declutter mode.\n     * @return {T|undefined} Callback result.\n     */\n    function featureCallback(feature, geometry, declutterMode) {\n      const imageData = context.getImageData(\n        0,\n        0,\n        contextSize,\n        contextSize,\n      ).data;\n      for (let i = 0, ii = indexes.length; i < ii; i++) {\n        if (imageData[indexes[i]] > 0) {\n          if (\n            !declutteredFeatures ||\n            declutterMode === 'none' ||\n            (builderType !== 'Image' && builderType !== 'Text') ||\n            declutteredFeatures.includes(feature)\n          ) {\n            const idx = (indexes[i] - 3) / 4;\n            const x = hitTolerance - (idx % contextSize);\n            const y = hitTolerance - ((idx / contextSize) | 0);\n            const result = callback(feature, geometry, x * x + y * y);\n            if (result) {\n              return result;\n            }\n          }\n          context.clearRect(0, 0, contextSize, contextSize);\n          break;\n        }\n      }\n      return undefined;\n    }\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    let i, j, executors, executor, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      const zIndexKey = zs[i].toString();\n      executors = this.executorsByZIndex_[zIndexKey];\n      for (j = ALL.length - 1; j >= 0; --j) {\n        builderType = ALL[j];\n        executor = executors[builderType];\n        if (executor !== undefined) {\n          result = executor.executeHitDetection(\n            context,\n            transform,\n            rotation,\n            featureCallback,\n            hitExtent,\n          );\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>|null} Clip coordinates.\n   */\n  getClipCoords(transform) {\n    const maxExtent = this.maxExtent_;\n    if (!maxExtent) {\n      return null;\n    }\n    const minX = maxExtent[0];\n    const minY = maxExtent[1];\n    const maxX = maxExtent[2];\n    const maxY = maxExtent[3];\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.executorsByZIndex_);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} targetContext Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<import(\"../canvas.js\").BuilderType>} [builderTypes] Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ALL}\n   * @param {import(\"rbush\").default<import('./Executor.js').DeclutterEntry>|null} [declutterTree] Declutter tree.\n   *     When set to null, no decluttering is done, even when the executor group has a `ZIndexContext`.\n   */\n  execute(\n    targetContext,\n    scaledCanvasSize,\n    transform,\n    viewRotation,\n    snapToPixel,\n    builderTypes,\n    declutterTree,\n  ) {\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(declutterTree ? descending : ascending);\n\n    builderTypes = builderTypes ? builderTypes : ALL;\n    const maxBuilderTypes = ALL.length;\n    for (let i = 0, ii = zs.length; i < ii; ++i) {\n      const zIndexKey = zs[i].toString();\n      const replays = this.executorsByZIndex_[zIndexKey];\n      for (let j = 0, jj = builderTypes.length; j < jj; ++j) {\n        const builderType = builderTypes[j];\n        const replay = replays[builderType];\n        if (replay !== undefined) {\n          const zIndexContext =\n            declutterTree === null ? undefined : replay.getZIndexContext();\n          const context = zIndexContext\n            ? zIndexContext.getContext()\n            : targetContext;\n          const requireClip =\n            this.maxExtent_ &&\n            builderType !== 'Image' &&\n            builderType !== 'Text';\n          if (requireClip) {\n            context.save();\n            // setup clipping so that the parts of over-simplified geometries are not\n            // visible outside the current extent when panning\n            this.clip(context, transform);\n          }\n          if (\n            !zIndexContext ||\n            builderType === 'Text' ||\n            builderType === 'Image'\n          ) {\n            replay.execute(\n              context,\n              scaledCanvasSize,\n              transform,\n              viewRotation,\n              snapToPixel,\n              declutterTree,\n            );\n          } else {\n            zIndexContext.pushFunction((context) =>\n              replay.execute(\n                context,\n                scaledCanvasSize,\n                transform,\n                viewRotation,\n                snapToPixel,\n                declutterTree,\n              ),\n            );\n          }\n          if (requireClip) {\n            context.restore();\n          }\n          if (zIndexContext) {\n            zIndexContext.offset();\n            const index = zs[i] * maxBuilderTypes + j;\n            if (!this.deferredZIndexContexts_[index]) {\n              this.deferredZIndexContexts_[index] = [];\n            }\n            this.deferredZIndexContexts_[index].push(zIndexContext);\n          }\n        }\n      }\n    }\n\n    this.renderedContext_ = targetContext;\n  }\n\n  getDeferredZIndexContexts() {\n    return this.deferredZIndexContexts_;\n  }\n\n  getRenderedContext() {\n    return this.renderedContext_;\n  }\n\n  renderDeferred() {\n    const deferredZIndexContexts = this.deferredZIndexContexts_;\n    const zs = Object.keys(deferredZIndexContexts).map(Number).sort(ascending);\n    for (let i = 0, ii = zs.length; i < ii; ++i) {\n      deferredZIndexContexts[zs[i]].forEach((zIndexContext) => {\n        zIndexContext.draw(this.renderedContext_); // FIXME Pass clip to replay for temporarily enabling clip\n        zIndexContext.clear();\n      });\n      deferredZIndexContexts[zs[i]].length = 0;\n    }\n  }\n}\n\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nconst circlePixelIndexArrayCache = {};\n\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @return {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n  if (circlePixelIndexArrayCache[radius] !== undefined) {\n    return circlePixelIndexArrayCache[radius];\n  }\n\n  const size = radius * 2 + 1;\n  const maxDistanceSq = radius * radius;\n  const distances = new Array(maxDistanceSq + 1);\n  for (let i = 0; i <= radius; ++i) {\n    for (let j = 0; j <= radius; ++j) {\n      const distanceSq = i * i + j * j;\n      if (distanceSq > maxDistanceSq) {\n        break;\n      }\n      let distance = distances[distanceSq];\n      if (!distance) {\n        distance = [];\n        distances[distanceSq] = distance;\n      }\n      distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n      if (i > 0) {\n        distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n      }\n      if (j > 0) {\n        distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n        if (i > 0) {\n          distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n        }\n      }\n    }\n  }\n\n  const pixelIndex = [];\n  for (let i = 0, ii = distances.length; i < ii; ++i) {\n    if (distances[i]) {\n      pixelIndex.push(...distances[i]);\n    }\n  }\n\n  circlePixelIndexArrayCache[radius] = pixelIndex;\n  return pixelIndex;\n}\n\nexport default ExecutorGroup;\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport {equals} from '../../array.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {intersects} from '../../extent.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {toFixed} from '../../math.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport VectorContext from '../VectorContext.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n} from '../canvas.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext~VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number} [squaredTolerance] Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction} [userTransform] Transform from user to view projection.\n   */\n  constructor(\n    context,\n    pixelRatio,\n    extent,\n    transform,\n    viewRotation,\n    squaredTolerance,\n    userTransform,\n  ) {\n    super();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.transformRotation_ = transform\n      ? toFixed(Math.atan2(transform[1], transform[0]), 10)\n      : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_ = squaredTolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n    this.userTransform_ = userTransform;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.imageScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.textScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_,\n    );\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (\n        rotation !== 0 ||\n        this.imageScale_[0] != 1 ||\n        this.imageScale_[1] != 1\n      ) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(\n          localTransform,\n          centerX,\n          centerY,\n          1,\n          1,\n          rotation,\n          -centerX,\n          -centerY,\n        );\n        context.save();\n        context.transform.apply(context, localTransform);\n        context.translate(centerX, centerY);\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          -this.imageAnchorX_,\n          -this.imageAnchorY_,\n          this.imageWidth_,\n          this.imageHeight_,\n        );\n        context.restore();\n      } else {\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          x,\n          y,\n          this.imageWidth_,\n          this.imageHeight_,\n        );\n      }\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_,\n    );\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (\n        rotation !== 0 ||\n        this.textScale_[0] != 1 ||\n        this.textScale_[1] != 1\n      ) {\n        context.save();\n        context.translate(x - this.textOffsetX_, y - this.textOffsetY_);\n        context.rotate(rotation);\n        context.translate(this.textOffsetX_, this.textOffsetY_);\n        context.scale(this.textScale_[0], this.textScale_[1]);\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, 0, 0);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, 0, 0);\n        }\n        context.restore();\n      } else {\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, x, y);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, x, y);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_,\n    );\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(\n        flatCoordinates,\n        offset,\n        ends[i],\n        stride,\n        true,\n      );\n    }\n    return offset;\n  }\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @api\n   * @override\n   */\n  drawCircle(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Circle.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(\n        geometry,\n        this.transform_,\n        this.pixelCoordinates_,\n      );\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0],\n        pixelCoordinates[1],\n        radius,\n        0,\n        2 * Math.PI,\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @api\n   * @override\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  setTransform(transform) {\n    this.transform_ = transform;\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate~CanvasImmediateRenderer#setStyle renderer.setStyle()} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @api\n   * @override\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case 'Point':\n        this.drawPoint(\n          /** @type {import(\"../../geom/Point.js\").default} */ (geometry),\n        );\n        break;\n      case 'LineString':\n        this.drawLineString(\n          /** @type {import(\"../../geom/LineString.js\").default} */ (geometry),\n        );\n        break;\n      case 'Polygon':\n        this.drawPolygon(\n          /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry),\n        );\n        break;\n      case 'MultiPoint':\n        this.drawMultiPoint(\n          /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry),\n        );\n        break;\n      case 'MultiLineString':\n        this.drawMultiLineString(\n          /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ),\n        );\n        break;\n      case 'MultiPolygon':\n        this.drawMultiPolygon(\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ),\n        );\n        break;\n      case 'GeometryCollection':\n        this.drawGeometryCollection(\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          ),\n        );\n        break;\n      case 'Circle':\n        this.drawCircle(\n          /** @type {import(\"../../geom/Circle.js\").default} */ (geometry),\n        );\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @api\n   * @override\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   * @override\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   * @override\n   */\n  drawPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   * @override\n   */\n  drawMultiPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   * @override\n   */\n  drawLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        geometry.getStride(),\n        false,\n      );\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   * @override\n   */\n  drawMultiLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry =\n        /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry.simplifyTransformed(\n            this.squaredTolerance_,\n            this.userTransform_,\n          )\n        );\n    }\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(\n          flatCoordinates,\n          offset,\n          ends[i],\n          stride,\n          false,\n        );\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   * @override\n   */\n  drawPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(\n        geometry.getOrientedFlatCoordinates(),\n        0,\n        /** @type {Array<number>} */ (geometry.getEnds()),\n        geometry.getStride(),\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   * @override\n   */\n  drawMultiPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle,\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      context.setLineDash(strokeState.lineDash);\n      context.lineDashOffset = strokeState.lineDashOffset;\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle,\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n      if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n        context.setLineDash(\n          (contextStrokeState.lineDash = strokeState.lineDash),\n        );\n      }\n      if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n        contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign\n      ? textState.textAlign\n      : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = textAlign;\n      context.textBaseline = textState.textBaseline;\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline,\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = textAlign;\n        context.textAlign = textAlign;\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = textState.textBaseline;\n        context.textBaseline = textState.textBaseline;\n      }\n    }\n  }\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   * @override\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(\n          fillStyleColor ? fillStyleColor : defaultFillStyle,\n        ),\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      const lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash\n        : defaultLineDash;\n      this.strokeState_ = {\n        lineCap:\n          strokeStyleLineCap !== undefined\n            ? strokeStyleLineCap\n            : defaultLineCap,\n        lineDash:\n          this.pixelRatio_ === 1\n            ? lineDash\n            : lineDash.map((n) => n * this.pixelRatio_),\n        lineDashOffset:\n          (strokeStyleLineDashOffset\n            ? strokeStyleLineDashOffset\n            : defaultLineDashOffset) * this.pixelRatio_,\n        lineJoin:\n          strokeStyleLineJoin !== undefined\n            ? strokeStyleLineJoin\n            : defaultLineJoin,\n        lineWidth:\n          (strokeStyleWidth !== undefined\n            ? strokeStyleWidth\n            : defaultLineWidth) * this.pixelRatio_,\n        miterLimit:\n          strokeStyleMiterLimit !== undefined\n            ? strokeStyleMiterLimit\n            : defaultMiterLimit,\n        strokeStyle: asColorLike(\n          strokeStyleColor ? strokeStyleColor : defaultStrokeStyle,\n        ),\n      };\n    }\n  }\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @override\n   */\n  setImageStyle(imageStyle) {\n    let imageSize;\n    if (!imageStyle || !(imageSize = imageStyle.getSize())) {\n      this.image_ = null;\n      return;\n    }\n    const imagePixelRatio = imageStyle.getPixelRatio(this.pixelRatio_);\n    const imageAnchor = imageStyle.getAnchor();\n    const imageOrigin = imageStyle.getOrigin();\n    this.image_ = imageStyle.getImage(this.pixelRatio_);\n    this.imageAnchorX_ = imageAnchor[0] * imagePixelRatio;\n    this.imageAnchorY_ = imageAnchor[1] * imagePixelRatio;\n    this.imageHeight_ = imageSize[1] * imagePixelRatio;\n    this.imageOpacity_ = imageStyle.getOpacity();\n    this.imageOriginX_ = imageOrigin[0];\n    this.imageOriginY_ = imageOrigin[1];\n    this.imageRotateWithView_ = imageStyle.getRotateWithView();\n    this.imageRotation_ = imageStyle.getRotation();\n    const imageScale = imageStyle.getScaleArray();\n    this.imageScale_ = [\n      (imageScale[0] * this.pixelRatio_) / imagePixelRatio,\n      (imageScale[1] * this.pixelRatio_) / imagePixelRatio,\n    ];\n    this.imageWidth_ = imageSize[0] * imagePixelRatio;\n  }\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @override\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(\n            textFillStyleColor ? textFillStyleColor : defaultFillStyle,\n          ),\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset =\n          textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap:\n            textStrokeStyleLineCap !== undefined\n              ? textStrokeStyleLineCap\n              : defaultLineCap,\n          lineDash: textStrokeStyleLineDash\n            ? textStrokeStyleLineDash\n            : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset\n            ? textStrokeStyleLineDashOffset\n            : defaultLineDashOffset,\n          lineJoin:\n            textStrokeStyleLineJoin !== undefined\n              ? textStrokeStyleLineJoin\n              : defaultLineJoin,\n          lineWidth:\n            textStrokeStyleWidth !== undefined\n              ? textStrokeStyleWidth\n              : defaultLineWidth,\n          miterLimit:\n            textStrokeStyleMiterLimit !== undefined\n              ? textStrokeStyleMiterLimit\n              : defaultMiterLimit,\n          strokeStyle: asColorLike(\n            textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle,\n          ),\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScaleArray();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ? textFont : defaultFont,\n        textAlign:\n          textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n        textBaseline:\n          textTextBaseline !== undefined\n            ? textTextBaseline\n            : defaultTextBaseline,\n      };\n      this.text_ =\n        textText !== undefined\n          ? Array.isArray(textText)\n            ? textText.reduce((acc, t, i) => (acc += i % 2 ? ' ' : t), '')\n            : textText\n          : '';\n      this.textOffsetX_ =\n        textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n      this.textOffsetY_ =\n        textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n      this.textRotateWithView_ =\n        textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = [\n        this.pixelRatio_ * textScale[0],\n        this.pixelRatio_ * textScale[1],\n      ];\n    }\n  }\n}\n\nexport default CanvasImmediateRenderer;\n","/**\n * @module ol/render/canvas/hitdetect\n */\n\nimport {ascending} from '../../array.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\nimport {clamp} from '../../math.js';\nimport {\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n} from '../../proj.js';\nimport {Icon} from '../../style.js';\nimport CanvasImmediateRenderer from './Immediate.js';\n\nexport const HIT_DETECT_RESOLUTION = 0.5;\n\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent in render projection.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {number} [squaredTolerance] Squared tolerance.\n * @param {import(\"../../proj/Projection.js\").default} [projection] Render projection.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(\n  size,\n  transforms,\n  features,\n  styleFunction,\n  extent,\n  resolution,\n  rotation,\n  squaredTolerance,\n  projection,\n) {\n  const userExtent = projection ? toUserExtent(extent, projection) : extent;\n  const width = size[0] * HIT_DETECT_RESOLUTION;\n  const height = size[1] * HIT_DETECT_RESOLUTION;\n  const context = createCanvasContext2D(width, height);\n  context.imageSmoothingEnabled = false;\n  const canvas = context.canvas;\n  const renderer = new CanvasImmediateRenderer(\n    context,\n    HIT_DETECT_RESOLUTION,\n    extent,\n    null,\n    rotation,\n    squaredTolerance,\n    projection\n      ? getTransformFromProjections(getUserProjection(), projection)\n      : null,\n  );\n  const featureCount = features.length;\n  // Stretch hit detection index to use the whole available color range\n  const indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n  const featuresByZIndex = {};\n  for (let i = 1; i <= featureCount; ++i) {\n    const feature = features[i - 1];\n    const featureStyleFunction = feature.getStyleFunction() || styleFunction;\n    if (!featureStyleFunction) {\n      continue;\n    }\n    let styles = featureStyleFunction(feature, resolution);\n    if (!styles) {\n      continue;\n    }\n    if (!Array.isArray(styles)) {\n      styles = [styles];\n    }\n    const index = i * indexFactor;\n    const color = index.toString(16).padStart(7, '#00000');\n    for (let j = 0, jj = styles.length; j < jj; ++j) {\n      const originalStyle = styles[j];\n      const geometry = originalStyle.getGeometryFunction()(feature);\n      if (!geometry || !intersects(userExtent, geometry.getExtent())) {\n        continue;\n      }\n      const style = originalStyle.clone();\n      const fill = style.getFill();\n      if (fill) {\n        fill.setColor(color);\n      }\n      const stroke = style.getStroke();\n      if (stroke) {\n        stroke.setColor(color);\n        stroke.setLineDash(null);\n      }\n      style.setText(undefined);\n      const image = originalStyle.getImage();\n      if (image) {\n        const imgSize = image.getImageSize();\n        if (!imgSize) {\n          continue;\n        }\n\n        const imgContext = createCanvasContext2D(\n          imgSize[0],\n          imgSize[1],\n          undefined,\n          {alpha: false},\n        );\n        const img = imgContext.canvas;\n        imgContext.fillStyle = color;\n        imgContext.fillRect(0, 0, img.width, img.height);\n        style.setImage(\n          new Icon({\n            img: img,\n            anchor: image.getAnchor(),\n            anchorXUnits: 'pixels',\n            anchorYUnits: 'pixels',\n            offset: image.getOrigin(),\n            opacity: 1,\n            size: image.getSize(),\n            scale: image.getScale(),\n            rotation: image.getRotation(),\n            rotateWithView: image.getRotateWithView(),\n          }),\n        );\n      }\n      const zIndex = style.getZIndex() || 0;\n      let byGeometryType = featuresByZIndex[zIndex];\n      if (!byGeometryType) {\n        byGeometryType = {};\n        featuresByZIndex[zIndex] = byGeometryType;\n        byGeometryType['Polygon'] = [];\n        byGeometryType['Circle'] = [];\n        byGeometryType['LineString'] = [];\n        byGeometryType['Point'] = [];\n      }\n      const type = geometry.getType();\n      if (type === 'GeometryCollection') {\n        const geometries =\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          ).getGeometriesArrayRecursive();\n        for (let i = 0, ii = geometries.length; i < ii; ++i) {\n          const geometry = geometries[i];\n          byGeometryType[geometry.getType().replace('Multi', '')].push(\n            geometry,\n            style,\n          );\n        }\n      } else {\n        byGeometryType[type.replace('Multi', '')].push(geometry, style);\n      }\n    }\n  }\n\n  const zIndexKeys = Object.keys(featuresByZIndex).map(Number).sort(ascending);\n  for (let i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n    const byGeometryType = featuresByZIndex[zIndexKeys[i]];\n    for (const type in byGeometryType) {\n      const geomAndStyle = byGeometryType[type];\n      for (let j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n        renderer.setStyle(geomAndStyle[j + 1]);\n        for (let k = 0, kk = transforms.length; k < kk; ++k) {\n          renderer.setTransform(transforms[k]);\n          renderer.drawGeometry(geomAndStyle[j]);\n        }\n      }\n    }\n  }\n  return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<F>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<F>} Features.\n * @template {import(\"../../Feature.js\").FeatureLike} F\n */\nexport function hitDetect(pixel, features, imageData) {\n  /** @type {Array<F>} */\n  const resultFeatures = [];\n  if (imageData) {\n    const x = Math.floor(Math.round(pixel[0]) * HIT_DETECT_RESOLUTION);\n    const y = Math.floor(Math.round(pixel[1]) * HIT_DETECT_RESOLUTION);\n    // The pixel coordinate is clamped down to the hit-detect canvas' size to account\n    // for browsers returning coordinates slightly larger than the actual canvas size\n    // due to a non-integer pixel ratio.\n    const index =\n      (clamp(x, 0, imageData.width - 1) +\n        clamp(y, 0, imageData.height - 1) * imageData.width) *\n      4;\n    const r = imageData.data[index];\n    const g = imageData.data[index + 1];\n    const b = imageData.data[index + 2];\n    const i = b + 256 * (g + 256 * r);\n    const indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n    if (i && i % indexFactor === 0) {\n      resultFeatures.push(features[i / indexFactor - 1]);\n    }\n  }\n  return resultFeatures;\n}\n","/**\n * @module ol/renderer/vector\n */\nimport ImageState from '../ImageState.js';\nimport {getUid} from '../util.js';\n\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature~Feature feature} or {@link module:ol/render/Feature~RenderFeature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry~SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n/**\n * @const\n * @type {Object<import(\"../geom/Geometry.js\").Type,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry,\n};\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderCircleGeometry(builderGroup, geometry, style, feature, index) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = builderGroup.getBuilder(style.getZIndex(), 'Circle');\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n * @param {boolean} [declutter] Enable decluttering.\n * @param {number} [index] Render order index..\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  listener,\n  transform,\n  declutter,\n  index,\n) {\n  const loadingPromises = [];\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    let loading = true;\n    const imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      loading = false;\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n    }\n    if (loading) {\n      loadingPromises.push(imageStyle.ready());\n    }\n  }\n  const fillStyle = style.getFill();\n  if (fillStyle && fillStyle.loading()) {\n    loadingPromises.push(fillStyle.ready());\n  }\n  const loading = loadingPromises.length > 0;\n  if (loading) {\n    Promise.all(loadingPromises).then(() => listener(null));\n  }\n  renderFeatureInternal(\n    replayGroup,\n    feature,\n    style,\n    squaredTolerance,\n    transform,\n    declutter,\n    index,\n  );\n\n  return loading;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n * @param {boolean} [declutter] Enable decluttering.\n * @param {number} [index] Render order index..\n */\nfunction renderFeatureInternal(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  transform,\n  declutter,\n  index,\n) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.simplifyTransformed(\n    squaredTolerance,\n    transform,\n  );\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature, index);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(\n      replayGroup,\n      simplifiedGeometry,\n      style,\n      feature,\n      index,\n      declutter,\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature, index) {\n  if (geometry.getType() == 'GeometryCollection') {\n    const geometries =\n      /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n        geometry\n      ).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature, index);\n    }\n    return;\n  }\n  const replay = replayGroup.getBuilder(style.getZIndex(), 'Default');\n  replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry),\n    feature,\n    style.getRenderer(),\n    style.getHitDetectionRenderer(),\n    index,\n  );\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n * @param {number} [index] Render order index.\n */\nfunction renderGeometryCollectionGeometry(\n  replayGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup,\n  index,\n) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(\n      replayGroup,\n      geometries[i],\n      style,\n      feature,\n      declutterBuilderGroup,\n      index,\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString',\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderMultiLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString',\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderMultiPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n * @param {boolean} [declutter] Enable decluttering.\n */\nfunction renderPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n  declutter,\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  const hasText = textStyle && textStyle.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  const declutterImageWithText =\n    declutter && imageStyle && hasText ? {} : undefined;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(style.getZIndex(), 'Image');\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawPoint(geometry, feature, index);\n  }\n  if (hasText) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n * @param {boolean} [declutter] Enable decluttering.\n */\nfunction renderMultiPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n  declutter,\n) {\n  const imageStyle = style.getImage();\n  const hasImage = imageStyle && imageStyle.getOpacity() !== 0;\n  const textStyle = style.getText();\n  const hasText = textStyle && textStyle.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  const declutterImageWithText =\n    declutter && hasImage && hasText ? {} : undefined;\n  if (hasImage) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(style.getZIndex(), 'Image');\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawMultiPoint(geometry, feature, index);\n  }\n  if (hasText) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderPolygonGeometry(builderGroup, geometry, style, feature, index) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n","/**\n * @module ol/renderer/Layer\n */\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport EventType from '../events/EventType.js';\nimport {abstract} from '../util.js';\n\nconst maxStaleKeys = 5;\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /**\n     * The renderer is initialized and ready to render.\n     * @type {boolean}\n     */\n    this.ready = true;\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @private\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {Array<string>}\n     * @private\n     */\n    this.staleKeys_ = new Array();\n\n    /**\n     * @type {number}\n     * @protected\n     */\n    this.maxStaleKeys = maxStaleKeys;\n  }\n\n  /**\n   * @return {Array<string>} Get the list of stale keys.\n   */\n  getStaleKeys() {\n    return this.staleKeys_;\n  }\n\n  /**\n   * @param {string} key The new stale key.\n   */\n  prependStaleKey(key) {\n    this.staleKeys_.unshift(key);\n    if (this.staleKeys_.length > this.maxStaleKeys) {\n      this.staleKeys_.length = this.maxStaleKeys;\n    }\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    return null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement|null} target Target that may be used to render content to.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches,\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (\n      image.getState() === ImageState.LOADED ||\n      image.getState() === ImageState.ERROR\n    ) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../Image.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer && layer.getVisible() && layer.getSourceState() === 'ready') {\n      layer.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeferred(frameState) {}\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    delete this.layer_;\n    super.disposeInternal();\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport {equals} from '../../array.js';\nimport {asArray} from '../../color.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {\n  getBottomLeft,\n  getBottomRight,\n  getHeight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n} from '../../extent.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport ZIndexContext from '../../render/canvas/ZIndexContext.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  makeInverse,\n  toString as toTransformString,\n} from '../../transform.js';\nimport LayerRenderer from '../Layer.js';\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet pixelContext = null;\n\nfunction createPixelContext() {\n  pixelContext = createCanvasContext2D(1, 1, undefined, {\n    willReadFrequently: true,\n  });\n}\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @private\n     * @type {ZIndexContext}\n     */\n    this.deferredContext_ = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../Map.js\").FrameState|null}\n     */\n    this.frameState = null;\n  }\n\n  /**\n   * @param {import('../../DataTile.js').ImageLike} image Image.\n   * @param {number} col The column index.\n   * @param {number} row The row index.\n   * @return {Uint8ClampedArray|null} The image data.\n   */\n  getImageData(image, col, row) {\n    if (!pixelContext) {\n      createPixelContext();\n    }\n    pixelContext.clearRect(0, 0, 1, 1);\n\n    let data;\n    try {\n      pixelContext.drawImage(image, col, row, 1, 1, 0, 0, 1, 1);\n      data = pixelContext.getImageData(0, 0, 1, 1).data;\n    } catch {\n      pixelContext = null;\n      return null;\n    }\n    return data;\n  }\n\n  /**\n   * @param {import('../../Map.js').FrameState} frameState Frame state.\n   * @return {string} Background color.\n   */\n  getBackground(frameState) {\n    const layer = this.getLayer();\n    let background = layer.getBackground();\n    if (typeof background === 'function') {\n      background = background(frameState.viewState.resolution);\n    }\n    return background || undefined;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {string} [backgroundColor] Background color.\n   */\n  useContainer(target, transform, backgroundColor) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.className === layerClassName &&\n      (!backgroundColor ||\n        (target &&\n          target.style.backgroundColor &&\n          equals(\n            asArray(target.style.backgroundColor),\n            asArray(backgroundColor),\n          )))\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (context && context.canvas.style.transform === transform) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    } else if (this.container) {\n      this.container.style.backgroundColor = null;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n    if (\n      !this.containerReused &&\n      backgroundColor &&\n      !this.container.style.backgroundColor\n    ) {\n      this.container.style.backgroundColor = backgroundColor;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @protected\n   */\n  prepareContainer(frameState, target) {\n    const extent = frameState.extent;\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / pixelRatio,\n      1 / pixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2,\n    );\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n\n    if (!this.containerReused) {\n      const canvas = this.context.canvas;\n      if (canvas.width != width || canvas.height != height) {\n        canvas.width = width;\n        canvas.height = height;\n      } else {\n        this.context.clearRect(0, 0, width, height);\n      }\n      if (canvasTransform !== canvas.style.transform) {\n        canvas.style.transform = canvasTransform;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context,\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.frameState = frameState;\n    if (frameState.declutter) {\n      return;\n    }\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    if (frameState.declutter) {\n      return;\n    }\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeferredInternal(frameState) {}\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {import('../../render/canvas/ZIndexContext.js').ZIndexContextProxy} Context.\n   */\n  getRenderContext(frameState) {\n    if (frameState.declutter && !this.deferredContext_) {\n      this.deferredContext_ = new ZIndexContext();\n    }\n    return frameState.declutter\n      ? this.deferredContext_.getContext()\n      : this.context;\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @override\n   */\n  renderDeferred(frameState) {\n    if (!frameState.declutter) {\n      return;\n    }\n    this.dispatchRenderEvent_(\n      RenderEventType.PRERENDER,\n      this.context,\n      frameState,\n    );\n    if (frameState.declutter && this.deferredContext_) {\n      this.deferredContext_.draw(this.context);\n      this.deferredContext_.clear();\n    }\n    this.renderDeferredInternal(frameState);\n    this.dispatchRenderEvent_(\n      RenderEventType.POSTRENDER,\n      this.context,\n      frameState,\n    );\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX,\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2,\n    );\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    delete this.frameState;\n    super.disposeInternal();\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/DataTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\n\n/**\n * @typedef {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement|ImageBitmap} ImageLike\n */\n\n/**\n * @typedef {Uint8Array|Uint8ClampedArray|Float32Array|DataView} ArrayLike\n */\n\n/**\n * Data that can be used with a DataTile.\n * @typedef {ArrayLike|ImageLike} Data\n */\n\n/**\n * @param {Data} data Tile data.\n * @return {ImageLike|null} The image-like data.\n */\nexport function asImageLike(data) {\n  return data instanceof Image ||\n    data instanceof HTMLCanvasElement ||\n    data instanceof HTMLVideoElement ||\n    data instanceof ImageBitmap\n    ? data\n    : null;\n}\n\n/**\n * @param {Data} data Tile data.\n * @return {ArrayLike|null} The array-like data.\n */\nexport function asArrayLike(data) {\n  return data instanceof Uint8Array ||\n    data instanceof Uint8ClampedArray ||\n    data instanceof Float32Array ||\n    data instanceof DataView\n    ? data\n    : null;\n}\n\n/**\n * This is set as the cancellation reason when a tile is disposed.\n */\nexport const disposedError = new Error('disposed');\n\n/**\n * @type {CanvasRenderingContext2D|null}\n */\nlet sharedContext = null;\n\n/**\n * @param {ImageLike} image The image.\n * @return {Uint8ClampedArray} The data.\n */\nexport function toArray(image) {\n  if (!sharedContext) {\n    sharedContext = createCanvasContext2D(\n      image.width,\n      image.height,\n      undefined,\n      {willReadFrequently: true},\n    );\n  }\n  const canvas = sharedContext.canvas;\n  const width = image.width;\n  if (canvas.width !== width) {\n    canvas.width = width;\n  }\n  const height = image.height;\n  if (canvas.height !== height) {\n    canvas.height = height;\n  }\n  sharedContext.clearRect(0, 0, width, height);\n  sharedContext.drawImage(image, 0, 0);\n  return sharedContext.getImageData(0, 0, width, height).data;\n}\n\n/**\n * @type {import('./size.js').Size}\n */\nconst defaultSize = [256, 256];\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @property {function(): Promise<Data>} loader Data loader.  For loaders that generate images,\n * the promise should not resolve until the image is loaded.\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @property {import('./size.js').Size} [size=[256, 256]] Tile size.\n * @property {AbortController} [controller] An abort controller.\n * @api\n */\n\nclass DataTile extends Tile {\n  /**\n   * @param {Options} options Tile options.\n   */\n  constructor(options) {\n    const state = TileState.IDLE;\n\n    super(options.tileCoord, state, {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    });\n\n    /**\n     * @type {function(): Promise<Data>}\n     * @private\n     */\n    this.loader_ = options.loader;\n\n    /**\n     * @type {Data}\n     * @private\n     */\n    this.data_ = null;\n\n    /**\n     * @type {Error}\n     * @private\n     */\n    this.error_ = null;\n\n    /**\n     * @type {import('./size.js').Size|null}\n     * @private\n     */\n    this.size_ = options.size || null;\n\n    /**\n     * @type {AbortController|null}\n     * @private\n     */\n    this.controller_ = options.controller || null;\n  }\n\n  /**\n   * Get the tile size.\n   * @return {import('./size.js').Size} Tile size.\n   */\n  getSize() {\n    if (this.size_) {\n      return this.size_;\n    }\n    const imageData = asImageLike(this.data_);\n    if (imageData) {\n      return [imageData.width, imageData.height];\n    }\n    return defaultSize;\n  }\n\n  /**\n   * Get the data for the tile.\n   * @return {Data} Tile data.\n   * @api\n   */\n  getData() {\n    return this.data_;\n  }\n\n  /**\n   * Get any loading error.\n   * @return {Error} Loading error.\n   * @api\n   */\n  getError() {\n    return this.error_;\n  }\n\n  /**\n   * Load the tile data.\n   * @api\n   * @override\n   */\n  load() {\n    if (this.state !== TileState.IDLE && this.state !== TileState.ERROR) {\n      return;\n    }\n    this.state = TileState.LOADING;\n    this.changed();\n\n    const self = this;\n    this.loader_()\n      .then(function (data) {\n        self.data_ = data;\n        self.state = TileState.LOADED;\n        self.changed();\n      })\n      .catch(function (error) {\n        self.error_ = error;\n        self.state = TileState.ERROR;\n        self.changed();\n      });\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    if (this.controller_) {\n      this.controller_.abort(disposedError);\n      this.controller_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default DataTile;\n","/**\n * @module ol/ImageTile\n */\nimport {listenImage} from './Image.js';\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\n\nclass ImageTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, src, crossOrigin, tileLoadFunction, options) {\n    super(tileCoord, state, options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    this.key = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n  }\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Sets an HTML image element for this tile (may be a Canvas or preloaded Image).\n   * @param {HTMLCanvasElement|HTMLImageElement} element Element.\n   */\n  setImage(element) {\n    this.image_ = element;\n    this.state = TileState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    const image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   *\n   * To retry loading tiles on failed requests, use a custom `tileLoadFunction`\n   * that checks for error status codes and reloads only when the status code is\n   * 408, 429, 500, 502, 503 and 504, and only when not too many retries have been\n   * made already:\n   *\n   * ```js\n   * const retryCodes = [408, 429, 500, 502, 503, 504];\n   * const retries = {};\n   * source.setTileLoadFunction((tile, src) => {\n   *   const image = tile.getImage();\n   *   fetch(src)\n   *     .then((response) => {\n   *       if (retryCodes.includes(response.status)) {\n   *         retries[src] = (retries[src] || 0) + 1;\n   *         if (retries[src] <= 3) {\n   *           setTimeout(() => tile.load(), retries[src] * 1000);\n   *         }\n   *         return Promise.reject();\n   *       }\n   *       return response.blob();\n   *     })\n   *     .then((blob) => {\n   *       const imageUrl = URL.createObjectURL(blob);\n   *       image.src = imageUrl;\n   *       setTimeout(() => URL.revokeObjectURL(imageUrl), 5000);\n   *     })\n   *     .catch(() => tile.setState(3)); // error\n   * });\n   * ```\n   * @api\n   * @override\n   */\n  load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this),\n      );\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n\n  /**\n   * @override\n   */\n  disposeInternal() {\n    this.unlistenImage_();\n    this.image_ = null;\n    super.disposeInternal();\n  }\n}\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange} [tileRange] TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  }\n  return new TileRange(minX, maxX, minY, maxY);\n}\n\nexport default TileRange;\n","/**\n * @module ol/reproj\n */\nimport {createCanvasContext2D, releaseCanvas} from './dom.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  extend,\n  forEachCorner,\n  getCenter,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from './extent.js';\nimport {solveLinearSystem} from './math.js';\nimport {getPointResolution, transform} from './proj.js';\n\nlet brokenDiagonalRendering_;\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(u1, v1);\n  ctx.lineTo(u2, v2);\n  ctx.closePath();\n  ctx.save();\n  ctx.clip();\n  ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n  ctx.restore();\n}\n\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n  // the values ought to be close to the rgba(210, 0, 0, 0.75)\n  return (\n    Math.abs(data[offset * 4] - 210) > 2 ||\n    Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2\n  );\n}\n\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n  if (brokenDiagonalRendering_ === undefined) {\n    const ctx = createCanvasContext2D(6, 6, canvasPool);\n    ctx.globalCompositeOperation = 'lighter';\n    ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n    drawTestTriangle(ctx, 4, 5, 4, 0);\n    drawTestTriangle(ctx, 4, 5, 0, 5);\n    const data = ctx.getImageData(0, 0, 3, 3).data;\n    brokenDiagonalRendering_ =\n      verifyBrokenDiagonalRendering(data, 0) ||\n      verifyBrokenDiagonalRendering(data, 4) ||\n      verifyBrokenDiagonalRendering(data, 8);\n    releaseCanvas(ctx);\n    canvasPool.push(ctx.canvas);\n  }\n\n  return brokenDiagonalRendering_;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(\n  sourceProj,\n  targetProj,\n  targetCenter,\n  targetResolution,\n) {\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(\n    targetProj,\n    targetResolution,\n    targetCenter,\n  );\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor =\n      getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n      sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(\n  sourceProj,\n  targetProj,\n  targetExtent,\n  targetResolution,\n) {\n  const targetCenter = getCenter(targetExtent);\n  let sourceResolution = calculateSourceResolution(\n    sourceProj,\n    targetProj,\n    targetCenter,\n    targetResolution,\n  );\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    forEachCorner(targetExtent, function (corner) {\n      sourceResolution = calculateSourceResolution(\n        sourceProj,\n        targetProj,\n        corner,\n        targetResolution,\n      );\n      return isFinite(sourceResolution) && sourceResolution > 0;\n    });\n  }\n\n  return sourceResolution;\n}\n\n/**\n * @typedef {Object} ImageExtent\n * @property {import(\"./extent.js\").Extent} extent Extent.\n * @property {import(\"./extent.js\").Extent} [clipExtent] Clip extent.\n * @property {import('./DataTile.js').ImageLike} image Image.\n */\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation Calculated triangulation.\n * @param {Array<ImageExtent>} sources Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean} [renderEdges] Render reprojection edges.\n * @param {boolean} [interpolate] Use linear interpolation when resampling.\n * @param {boolean} [drawSingle] Draw single source images directly without stitchContext.\n * @param {boolean} [clipExtent] Clip stitchContext to sourceExtent.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(\n  width,\n  height,\n  pixelRatio,\n  sourceResolution,\n  sourceExtent,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  renderEdges,\n  interpolate,\n  drawSingle,\n  clipExtent,\n) {\n  const context = createCanvasContext2D(\n    Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height),\n    canvasPool,\n  );\n\n  if (!interpolate) {\n    context.imageSmoothingEnabled = false;\n  }\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  function pixelRound(value) {\n    return Math.round(value * pixelRatio) / pixelRatio;\n  }\n\n  context.globalCompositeOperation = 'lighter';\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  let stitchContext;\n  const stitchScale = pixelRatio / sourceResolution;\n  // Round up Float32 scale values to prevent interpolation in Firefox.\n  const inverseScale = (interpolate ? 1 : 1 + Math.pow(2, -24)) / stitchScale;\n\n  if (!drawSingle || sources.length !== 1 || gutter !== 0) {\n    stitchContext = createCanvasContext2D(\n      Math.round(getWidth(sourceDataExtent) * stitchScale),\n      Math.round(getHeight(sourceDataExtent) * stitchScale),\n      canvasPool,\n    );\n\n    if (!interpolate) {\n      stitchContext.imageSmoothingEnabled = false;\n    }\n    if (sourceExtent && clipExtent) {\n      const xPos = (sourceExtent[0] - sourceDataExtent[0]) * stitchScale;\n      const yPos = -(sourceExtent[3] - sourceDataExtent[3]) * stitchScale;\n      const width = getWidth(sourceExtent) * stitchScale;\n      const height = getHeight(sourceExtent) * stitchScale;\n      stitchContext.rect(xPos, yPos, width, height);\n      stitchContext.clip();\n    }\n\n    sources.forEach(function (src, i, arr) {\n      // This test should never fail -- but it does. Need to find a fix the upstream condition\n      if (src.image.width > 0 && src.image.height > 0) {\n        if (src.clipExtent) {\n          stitchContext.save();\n          const xPos = (src.clipExtent[0] - sourceDataExtent[0]) * stitchScale;\n          const yPos = -(src.clipExtent[3] - sourceDataExtent[3]) * stitchScale;\n          const width = getWidth(src.clipExtent) * stitchScale;\n          const height = getHeight(src.clipExtent) * stitchScale;\n          stitchContext.rect(\n            interpolate ? xPos : Math.round(xPos),\n            interpolate ? yPos : Math.round(yPos),\n            interpolate ? width : Math.round(xPos + width) - Math.round(xPos),\n            interpolate ? height : Math.round(yPos + height) - Math.round(yPos),\n          );\n          stitchContext.clip();\n        }\n\n        const xPos = (src.extent[0] - sourceDataExtent[0]) * stitchScale;\n        const yPos = -(src.extent[3] - sourceDataExtent[3]) * stitchScale;\n        const srcWidth = getWidth(src.extent) * stitchScale;\n        const srcHeight = getHeight(src.extent) * stitchScale;\n        stitchContext.drawImage(\n          src.image,\n          gutter,\n          gutter,\n          src.image.width - 2 * gutter,\n          src.image.height - 2 * gutter,\n          interpolate ? xPos : Math.round(xPos),\n          interpolate ? yPos : Math.round(yPos),\n          interpolate\n            ? srcWidth\n            : Math.round(xPos + srcWidth) - Math.round(xPos),\n          interpolate\n            ? srcHeight\n            : Math.round(yPos + srcHeight) - Math.round(yPos),\n        );\n\n        if (src.clipExtent) {\n          stitchContext.restore();\n        }\n      }\n    });\n  }\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function (triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0],\n      y0 = source[0][1];\n    let x1 = source[1][0],\n      y1 = source[1][1];\n    let x2 = source[2][0],\n      y2 = source[2][1];\n    // Make sure that everything is on pixel boundaries\n    const u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n    const v0 = pixelRound(\n      -(target[0][1] - targetTopLeft[1]) / targetResolution,\n    );\n    const u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n    const v1 = pixelRound(\n      -(target[1][1] - targetTopLeft[1]) / targetResolution,\n    );\n    const u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n    const v2 = pixelRound(\n      -(target[2][1] - targetTopLeft[1]) / targetResolution,\n    );\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0],\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n\n    if (isBrokenDiagonalRendering() || !interpolate) {\n      // Make sure that all lines are horizontal or vertical\n      context.moveTo(u1, v1);\n      // This is the diagonal line. Do it in 4 steps\n      const steps = 4;\n      const ud = u0 - u1;\n      const vd = v0 - v1;\n      for (let step = 0; step < steps; step++) {\n        // Go horizontally\n        context.lineTo(\n          u1 + pixelRound(((step + 1) * ud) / steps),\n          v1 + pixelRound((step * vd) / (steps - 1)),\n        );\n        // Go vertically\n        if (step != steps - 1) {\n          context.lineTo(\n            u1 + pixelRound(((step + 1) * ud) / steps),\n            v1 + pixelRound(((step + 1) * vd) / (steps - 1)),\n          );\n        }\n      }\n      // We are almost at u0r, v0r\n      context.lineTo(u2, v2);\n    } else {\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n    }\n\n    context.clip();\n\n    context.transform(\n      affineCoefs[0],\n      affineCoefs[2],\n      affineCoefs[1],\n      affineCoefs[3],\n      u0,\n      v0,\n    );\n\n    context.translate(\n      sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY,\n    );\n\n    let image;\n    if (stitchContext) {\n      image = stitchContext.canvas;\n      context.scale(inverseScale, -inverseScale);\n    } else {\n      const source = sources[0];\n      const extent = source.extent;\n      image = source.image;\n      context.scale(\n        getWidth(extent) / image.width,\n        -getHeight(extent) / image.height,\n      );\n    }\n\n    context.drawImage(image, 0, 0);\n    context.restore();\n  });\n\n  if (stitchContext) {\n    releaseCanvas(stitchContext);\n    canvasPool.push(stitchContext.canvas);\n  }\n\n  if (renderEdges) {\n    context.save();\n\n    context.globalCompositeOperation = 'source-over';\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {\n  boundingExtent,\n  createEmpty,\n  extendCoordinate,\n  getArea,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n  intersects,\n} from '../extent.js';\nimport {modulo} from '../math.js';\nimport {\n  createTransformFromCoordinateTransform,\n  getTransform,\n  transform,\n} from '../proj.js';\nimport {apply as applyMatrix} from '../transform.js';\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source Source.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target Target.\n */\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   * @param {?number} destinationResolution The (optional) resolution of the destination.\n   * @param {import(\"../transform.js\").Transform} [sourceMatrix] Source transform matrix.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    maxSourceExtent,\n    errorThreshold,\n    destinationResolution,\n    sourceMatrix,\n  ) {\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = sourceMatrix\n      ? createTransformFromCoordinateTransform((input) =>\n          applyMatrix(\n            sourceMatrix,\n            transform(input, this.targetProj_, this.sourceProj_),\n          ),\n        )\n      : getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function (c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array<Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ =\n      this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      getWidth(maxSourceExtent) >= getWidth(this.sourceProj_.getExtent());\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n      ? getWidth(this.sourceProj_.getExtent())\n      : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent()\n      ? getWidth(this.targetProj_.getExtent())\n      : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    /*\n     * The maxSubdivision controls how many splittings of the target area can\n     * be done. The idea here is to do a linear mapping of the target areas\n     * but the actual overall reprojection (can be) extremely non-linear. The\n     * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n     * tile size. However this function is also called to remap canvas rendered\n     * layers which can be much larger. This calculation increases the maxSubdivision\n     * value by the right factor so that each 256x256 pixel area has\n     * MAX_SUBDIVISION divisions.\n     */\n    const maxSubdivision =\n      MAX_SUBDIVISION +\n      (destinationResolution\n        ? Math.max(\n            0,\n            Math.ceil(\n              Math.log2(\n                getArea(targetExtent) /\n                  (destinationResolution * destinationResolution * 256 * 256),\n              ),\n            ),\n          )\n        : 0);\n\n    this.addQuad_(\n      destinationTopLeft,\n      destinationTopRight,\n      destinationBottomRight,\n      destinationBottomLeft,\n      sourceTopLeft,\n      sourceTopRight,\n      sourceBottomRight,\n      sourceBottomLeft,\n      maxSubdivision,\n    );\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function (triangle, i, arr) {\n        leftBound = Math.min(\n          leftBound,\n          triangle.source[0][0],\n          triangle.source[1][0],\n          triangle.source[2][0],\n        );\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach((triangle) => {\n        if (\n          Math.max(\n            triangle.source[0][0],\n            triangle.source[1][0],\n            triangle.source[2][0],\n          ) -\n            leftBound >\n          this.sourceWorldWidth_ / 2\n        ) {\n          const newTriangle = [\n            [triangle.source[0][0], triangle.source[0][1]],\n            [triangle.source[1][0], triangle.source[1][1]],\n            [triangle.source[2][0], triangle.source[2][1]],\n          ];\n          if (newTriangle[0][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[0][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[1][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[1][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[2][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[2][0] -= this.sourceWorldWidth_;\n          }\n\n          // Rarely (if the extent contains both the dateline and prime meridian)\n          // the shift can in turn break some triangles.\n          // Detect this here and don't shift in such cases.\n          const minX = Math.min(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0],\n          );\n          const maxX = Math.max(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0],\n          );\n          if (maxX - minX < this.sourceWorldWidth_ / 2) {\n            triangle.source = newTriangle;\n          }\n        }\n      });\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c],\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_\n      ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n      : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX =\n      this.sourceProj_.canWrapX() &&\n      sourceCoverageX > 0.5 &&\n      sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX =\n          getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision =\n          targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision =\n          sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (\n        isFinite(sourceQuadExtent[0]) &&\n        isFinite(sourceQuadExtent[1]) &&\n        isFinite(sourceQuadExtent[2]) &&\n        isFinite(sourceQuadExtent[3])\n      ) {\n        if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n          // whole quad outside source projection extent -> ignore\n          return;\n        }\n      }\n    }\n\n    let isNotFinite = 0;\n\n    if (!needsSubdivision) {\n      if (\n        !isFinite(aSrc[0]) ||\n        !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) ||\n        !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) ||\n        !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) ||\n        !isFinite(dSrc[1])\n      ) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          // It might be the case that only 1 of the points is infinite. In this case\n          // we can draw a single triangle with the other three points\n          isNotFinite =\n            (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n          if (\n            isNotFinite != 1 &&\n            isNotFinite != 2 &&\n            isNotFinite != 4 &&\n            isNotFinite != 8\n          ) {\n            return;\n          }\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n              modulo(cSrc[0], sourceWorldWidth)) /\n            2;\n          dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a,\n            b,\n            bc,\n            da,\n            aSrc,\n            bSrc,\n            bcSrc,\n            daSrc,\n            maxSubdivision - 1,\n          );\n          this.addQuad_(\n            da,\n            bc,\n            c,\n            d,\n            daSrc,\n            bcSrc,\n            cSrc,\n            dSrc,\n            maxSubdivision - 1,\n          );\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a,\n            ab,\n            cd,\n            d,\n            aSrc,\n            abSrc,\n            cdSrc,\n            dSrc,\n            maxSubdivision - 1,\n          );\n          this.addQuad_(\n            ab,\n            b,\n            c,\n            cd,\n            abSrc,\n            bSrc,\n            cSrc,\n            cdSrc,\n            maxSubdivision - 1,\n          );\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    // Exactly zero or one of *Src is not finite\n    // The triangles must have the diagonal line as the first side\n    // This is to allow easy code in reproj.s to make it straight for broken\n    // browsers that can't handle diagonal clipping\n    if ((isNotFinite & 0xb) == 0) {\n      this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    }\n    if ((isNotFinite & 0xe) == 0) {\n      this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n    }\n    if (isNotFinite) {\n      // Try the other two triangles\n      if ((isNotFinite & 0xd) == 0) {\n        this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n      }\n      if ((isNotFinite & 0x7) == 0) {\n        this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n      }\n    }\n  }\n\n  /**\n   * Calculates extent of the `source` coordinates from all the triangles.\n   *\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function (triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array<Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n","/**\n * @module ol/reproj/Tile\n */\n\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport {releaseCanvas} from '../dom.js';\nimport EventType from '../events/EventType.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {getArea, getIntersection, getWidth, wrapAndSliceX} from '../extent.js';\nimport {clamp} from '../math.js';\nimport {\n  calculateSourceExtentResolution,\n  canvasPool,\n  render as renderReprojected,\n} from '../reproj.js';\nimport Triangulation from './Triangulation.js';\nimport {ERROR_THRESHOLD} from './common.js';\n\n/**\n * @typedef {function(number, number, number, number) : (import(\"../ImageTile.js\").default)} FunctionType\n */\n\n/**\n * @typedef {Object} TileOffset\n * @property {import(\"../ImageTile.js\").default} tile Tile.\n * @property {number} offset Offset.\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nclass ReprojTile extends Tile {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n   * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} gutter Gutter of the source tiles.\n   * @param {FunctionType} getTileFunction\n   *     Function returning source tiles (z, x, y, pixelRatio).\n   * @param {number} [errorThreshold] Acceptable reprojection error (in px).\n   * @param {boolean} [renderEdges] Render reprojection edges.\n   * @param {import(\"../Tile.js\").Options} [options] Tile options.\n   */\n  constructor(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    errorThreshold,\n    renderEdges,\n    options,\n  ) {\n    super(tileCoord, TileState.IDLE, options);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = renderEdges !== undefined ? renderEdges : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<TileOffset>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.clipExtent_ = sourceProj.canWrapX()\n      ? sourceProj.getExtent()\n      : undefined;\n\n    const targetExtent = targetTileGrid.getTileCoordExtent(\n      this.wrappedTileCoord_,\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0],\n    );\n\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution,\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      errorThreshold !== undefined ? errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution,\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3],\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3],\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      let worldWidth = 0;\n      let worldsAway = 0;\n      if (sourceProj.canWrapX()) {\n        worldWidth = getWidth(sourceProjExtent);\n        worldsAway = Math.floor(\n          (sourceExtent[0] - sourceProjExtent[0]) / worldWidth,\n        );\n      }\n\n      const sourceExtents = wrapAndSliceX(\n        sourceExtent.slice(),\n        sourceProj,\n        true,\n      );\n      sourceExtents.forEach((extent) => {\n        const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n          extent,\n          this.sourceZ_,\n        );\n\n        for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n          for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n            const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n            if (tile) {\n              const offset = worldsAway * worldWidth;\n              this.sourceTiles_.push({tile, offset});\n            }\n          }\n        }\n        ++worldsAway;\n      });\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sources = [];\n    this.sourceTiles_.forEach((source) => {\n      const tile = source.tile;\n      if (tile && tile.getState() == TileState.LOADED) {\n        const extent = this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord);\n        extent[0] += source.offset;\n        extent[2] += source.offset;\n        const clipExtent = this.clipExtent_?.slice();\n        if (clipExtent) {\n          clipExtent[0] += source.offset;\n          clipExtent[2] += source.offset;\n        }\n        sources.push({\n          extent: extent,\n          clipExtent: clipExtent,\n          image: tile.getImage(),\n        });\n      }\n    });\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const width = typeof size === 'number' ? size : size[0];\n      const height = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_,\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_,\n      );\n\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        this.renderEdges_,\n        this.interpolate,\n      );\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @override\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      let leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach(({tile}) => {\n        const state = tile.getState();\n        if (state == TileState.IDLE || state == TileState.LOADING) {\n          leftToLoad++;\n\n          const sourceListenKey = listen(tile, EventType.CHANGE, (e) => {\n            const state = tile.getState();\n            if (\n              state == TileState.LOADED ||\n              state == TileState.ERROR ||\n              state == TileState.EMPTY\n            ) {\n              unlistenByKey(sourceListenKey);\n              leftToLoad--;\n              if (leftToLoad === 0) {\n                this.unlistenSources_();\n                this.reproject_();\n              }\n            }\n          });\n          this.sourcesListenerKeys_.push(sourceListenKey);\n        }\n      });\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      } else {\n        this.sourceTiles_.forEach(function ({tile}, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE) {\n            tile.load();\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   * @override\n   */\n  release() {\n    if (this.canvas_) {\n      releaseCanvas(this.canvas_.getContext('2d'));\n      canvasPool.push(this.canvas_);\n      this.canvas_ = null;\n    }\n    super.release();\n  }\n}\n\nexport default ReprojTile;\n","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n","/**\n * @module ol/structs/LRUCache\n */\n\nimport Disposable from '../Disposable.js';\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Entry|null} newer Newer.\n * @property {Entry|null} older Older.\n * @property {*} value_ Value.\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n  /**\n   * @param {number} [highWaterMark] High water mark.\n   */\n  constructor(highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark = highWaterMark !== undefined ? highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n\n  deleteOldest() {\n    const entry = this.pop();\n    if (entry instanceof Disposable) {\n      entry.dispose();\n    }\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  }\n\n  /**\n   * Expire the cache. When the cache entry is a {@link module:ol/Disposable~Disposable},\n   * the entry will be disposed.\n   * @param {!Object<string, boolean>} [keep] Keys to keep. To be implemented by subclasses.\n   */\n  expireCache(keep) {\n    while (this.canExpireCache()) {\n      this.deleteOldest();\n    }\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    while (this.oldest_) {\n      this.deleteOldest();\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {*} [options] Options (reserved for subclasses).\n   * @return {T} Value.\n   */\n  get(key, options) {\n    const entry = this.entries_[key];\n    assert(\n      entry !== undefined,\n      'Tried to get a value for a key that does not exist in the cache',\n    );\n    if (entry === this.newest_) {\n      return entry.value_;\n    }\n    if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(\n      entry !== undefined,\n      'Tried to get a value for a key that does not exist in the cache',\n    );\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n  /**\n   * Return an entry without updating least recently used time.\n   * @param {string} key Key.\n   * @return {T|undefined} Value.\n   */\n  peek(key) {\n    return this.entries_[key]?.value_;\n  }\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(\n      !(key in this.entries_),\n      'Tried to set a value for a key that is used already',\n    );\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value,\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n}\n\nexport default LRUCache;\n","/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord} [tileCoord] Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, tileCoord) {\n  if (tileCoord !== undefined) {\n    tileCoord[0] = z;\n    tileCoord[1] = x;\n    tileCoord[2] = y;\n    return tileCoord;\n  }\n  return [z, x, y];\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get the tile cache key for a tile key obtained through `tile.getKey()`.\n * @param {string} tileKey The tile key.\n * @return {string} The cache key.\n */\nexport function getCacheKeyForTileKey(tileKey) {\n  const [z, x, y] = tileKey\n    .substring(tileKey.lastIndexOf('/') + 1, tileKey.length)\n    .split(',')\n    .map(Number);\n  return getKeyZXY(z, x, y);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return hashZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * @param {number} z The tile z coordinate.\n * @param {number} x The tile x coordinate.\n * @param {number} y The tile y coordinate.\n * @return {number} Hash.\n */\nexport function hashZXY(z, x, y) {\n  return (x << z) + y;\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  }\n  return tileRange.containsXY(x, y);\n}\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport DataTile, {asImageLike} from '../../DataTile.js';\nimport ImageTile from '../../ImageTile.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {ascending} from '../../array.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  equals,\n  getIntersection,\n  getRotatedViewport,\n  getTopLeft,\n  intersects,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\nimport ReprojTile from '../../reproj/Tile.js';\nimport {toSize} from '../../size.js';\nimport LRUCache from '../../structs/LRUCache.js';\nimport {createOrUpdate as createTileCoord, getKeyZXY} from '../../tilecoord.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n} from '../../transform.js';\nimport {getUid} from '../../util.js';\nimport CanvasLayerRenderer from './Layer.js';\n\n/**\n * @param {string} sourceKey The source key.\n * @param {number} z The tile z level.\n * @param {number} x The tile x level.\n * @param {number} y The tile y level.\n * @return {string} The cache key.\n */\nfunction getCacheKey(sourceKey, z, x, y) {\n  return `${sourceKey},${getKeyZXY(z, x, y)}`;\n}\n\n/**\n * @typedef {Object<number, Set<import(\"../../Tile.js\").default>>} TileLookup\n */\n\n/**\n * Add a tile to the lookup.\n * @param {TileLookup} tilesByZ Lookup of tiles by zoom level.\n * @param {import(\"../../Tile.js\").default} tile A tile.\n * @param {number} z The zoom level.\n * @return {boolean} The tile was added to the lookup.\n */\nfunction addTileToLookup(tilesByZ, tile, z) {\n  if (!(z in tilesByZ)) {\n    tilesByZ[z] = new Set([tile]);\n    return true;\n  }\n  const set = tilesByZ[z];\n  const existing = set.has(tile);\n  if (!existing) {\n    set.add(tile);\n  }\n  return !existing;\n}\n\n/**\n * Remove a tile from the lookup.\n * @param {TileLookup} tilesByZ Lookup of tiles by zoom level.\n * @param {import(\"../../Tile.js\").default} tile A tile.\n * @param {number} z The zoom level.\n * @return {boolean} The tile was removed from the lookup.\n */\nfunction removeTileFromLookup(tilesByZ, tile, z) {\n  const set = tilesByZ[z];\n  if (set) {\n    return set.delete(tile);\n  }\n  return false;\n}\n\n/**\n * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n * @param {import(\"../../extent.js\").Extent} extent The frame extent.\n * @return {import(\"../../extent.js\").Extent} Frame extent intersected with layer extents.\n */\nfunction getRenderExtent(frameState, extent) {\n  const layerState = frameState.layerStatesArray[frameState.layerIndex];\n  if (layerState.extent) {\n    extent = getIntersection(\n      extent,\n      fromUserExtent(layerState.extent, frameState.viewState.projection),\n    );\n  }\n  const source = /** @type {import(\"../../source/Tile.js\").default} */ (\n    layerState.layer.getRenderSource()\n  );\n  if (!source.getWrapX()) {\n    const gridExtent = source\n      .getTileGridForProjection(frameState.viewState.projection)\n      .getExtent();\n    if (gridExtent) {\n      extent = getIntersection(extent, gridExtent);\n    }\n  }\n  return extent;\n}\n\n/**\n * @typedef {Object} Options\n * @property {number} [cacheSize=512] The cache size.\n */\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n * @template {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default} [LayerType=import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default]\n * @extends {CanvasLayerRenderer<LayerType>}\n */\nclass CanvasTileLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {LayerType} tileLayer Tile layer.\n   * @param {Options} [options] Options.\n   */\n  constructor(tileLayer, options) {\n    super(tileLayer);\n\n    options = options || {};\n\n    /**\n     * Rendered extent has changed since the previous `renderFrame()` call\n     * @type {boolean}\n     */\n    this.extentChanged = true;\n\n    /**\n     * The last call to `renderFrame` was completed with all tiles loaded\n     * @type {boolean}\n     */\n    this.renderComplete = false;\n\n    /**\n     * @private\n     * @type {?import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedPixelRatio;\n\n    /**\n     * @protected\n     * @type {import(\"../../proj/Projection.js\").default|null}\n     */\n    this.renderedProjection = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.renderedSourceKey_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedSourceRevision_;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tempExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tempTileRange_ = new TileRange(0, 0, 0, 0);\n\n    /**\n     * @type {import(\"../../tilecoord.js\").TileCoord}\n     * @private\n     */\n    this.tempTileCoord_ = createTileCoord(0, 0, 0);\n\n    const cacheSize = options.cacheSize !== undefined ? options.cacheSize : 512;\n\n    /**\n     * @type {import(\"../../structs/LRUCache.js\").default<import(\"../../Tile.js\").default>}\n     * @private\n     */\n    this.tileCache_ = new LRUCache(cacheSize);\n\n    this.maxStaleKeys = cacheSize * 0.5;\n  }\n\n  /**\n   * @return {LRUCache} Tile cache.\n   */\n  getTileCache() {\n    return this.tileCache_;\n  }\n\n  /**\n   * Get a tile from the cache or create one if needed.\n   *\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {import(\"../../Tile.js\").default|null} Tile (or null if outside source extent).\n   * @protected\n   */\n  getOrCreateTile(z, x, y, frameState) {\n    const tileCache = this.tileCache_;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const cacheKey = getCacheKey(tileSource.getKey(), z, x, y);\n\n    /** @type {import(\"../../Tile.js\").default} */\n    let tile;\n\n    if (tileCache.containsKey(cacheKey)) {\n      tile = tileCache.get(cacheKey);\n    } else {\n      tile = tileSource.getTile(\n        z,\n        x,\n        y,\n        frameState.pixelRatio,\n        frameState.viewState.projection,\n      );\n      if (!tile) {\n        return null;\n      }\n      tileCache.set(cacheKey, tile);\n    }\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {import(\"../../Tile.js\").default|null} Tile (or null if outside source extent).\n   * @protected\n   */\n  getTile(z, x, y, frameState) {\n    const tile = this.getOrCreateTile(z, x, y, frameState);\n    if (!tile) {\n      return null;\n    }\n    return tile;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   * @override\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice(),\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const viewState = frameState.viewState;\n    const source = layer.getRenderSource();\n    const tileGrid = source.getTileGridForProjection(viewState.projection);\n    const tilePixelRatio = source.getTilePixelRatio(frameState.pixelRatio);\n\n    for (\n      let z = tileGrid.getZForResolution(viewState.resolution);\n      z >= tileGrid.getMinZoom();\n      --z\n    ) {\n      const tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n      const tile = this.getTile(z, tileCoord[1], tileCoord[2], frameState);\n      if (!tile || tile.getState() !== TileState.LOADED) {\n        continue;\n      }\n\n      const tileOrigin = tileGrid.getOrigin(z);\n      const tileSize = toSize(tileGrid.getTileSize(z));\n      const tileResolution = tileGrid.getResolution(z);\n\n      /**\n       * @type {import('../../DataTile.js').ImageLike}\n       */\n      let image;\n      if (tile instanceof ImageTile || tile instanceof ReprojTile) {\n        image = tile.getImage();\n      } else if (tile instanceof DataTile) {\n        image = asImageLike(tile.getData());\n        if (!image) {\n          continue;\n        }\n      } else {\n        continue;\n      }\n\n      const col = Math.floor(\n        tilePixelRatio *\n          ((coordinate[0] - tileOrigin[0]) / tileResolution -\n            tileCoord[1] * tileSize[0]),\n      );\n\n      const row = Math.floor(\n        tilePixelRatio *\n          ((tileOrigin[1] - coordinate[1]) / tileResolution -\n            tileCoord[2] * tileSize[1]),\n      );\n\n      const gutter = Math.round(\n        tilePixelRatio * source.getGutterForProjection(viewState.projection),\n      );\n\n      return this.getImageData(image, col + gutter, row + gutter);\n    }\n\n    return null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   * @override\n   */\n  prepareFrame(frameState) {\n    if (!this.renderedProjection) {\n      this.renderedProjection = frameState.viewState.projection;\n    } else if (frameState.viewState.projection !== this.renderedProjection) {\n      this.tileCache_.clear();\n      this.renderedProjection = frameState.viewState.projection;\n    }\n\n    const source = this.getLayer().getSource();\n    if (!source) {\n      return false;\n    }\n    const sourceRevision = source.getRevision();\n    if (!this.renderedRevision_) {\n      this.renderedRevision_ = sourceRevision;\n    } else if (this.renderedRevision_ !== sourceRevision) {\n      this.renderedRevision_ = sourceRevision;\n      if (this.renderedSourceKey_ === source.getKey()) {\n        this.tileCache_.clear();\n      }\n    }\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent The extent to be rendered.\n   * @param {number} initialZ The zoom level.\n   * @param {TileLookup} tilesByZ Lookup of tiles by zoom level.\n   * @param {number} preload Number of additional levels to load.\n   */\n  enqueueTiles(frameState, extent, initialZ, tilesByZ, preload) {\n    const viewState = frameState.viewState;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getRenderSource();\n    const tileGrid = tileSource.getTileGridForProjection(viewState.projection);\n\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n\n    const map = tileLayer.getMapInternal();\n    const minZ = Math.max(\n      initialZ - preload,\n      tileGrid.getMinZoom(),\n      tileGrid.getZForResolution(\n        Math.min(\n          tileLayer.getMaxResolution(),\n          map\n            ? map\n                .getView()\n                .getResolutionForZoom(Math.max(tileLayer.getMinZoom(), 0))\n            : tileGrid.getResolution(0),\n        ),\n        tileSource.zDirection,\n      ),\n    );\n    const rotation = viewState.rotation;\n    const viewport = rotation\n      ? getRotatedViewport(\n          viewState.center,\n          viewState.resolution,\n          rotation,\n          frameState.size,\n        )\n      : undefined;\n    for (let z = initialZ; z >= minZ; --z) {\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(\n        extent,\n        z,\n        this.tempTileRange_,\n      );\n\n      const tileResolution = tileGrid.getResolution(z);\n\n      for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (\n            rotation &&\n            !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n          ) {\n            continue;\n          }\n          const tile = this.getTile(z, x, y, frameState);\n          if (!tile) {\n            continue;\n          }\n          const added = addTileToLookup(tilesByZ, tile, z);\n          if (!added) {\n            continue;\n          }\n\n          const tileQueueKey = tile.getKey();\n          wantedTiles[tileQueueKey] = true;\n\n          if (tile.getState() === TileState.IDLE) {\n            if (!frameState.tileQueue.isKeyQueued(tileQueueKey)) {\n              const tileCoord = createTileCoord(z, x, y, this.tempTileCoord_);\n              frameState.tileQueue.enqueue([\n                tile,\n                tileSourceKey,\n                tileGrid.getTileCoordCenter(tileCoord),\n                tileResolution,\n              ]);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Look for tiles covering the provided tile coordinate at an alternate\n   * zoom level.  Loaded tiles will be added to the provided tile texture lookup.\n   * @param {import(\"../../tilecoord.js\").TileCoord} tileCoord The target tile coordinate.\n   * @param {TileLookup} tilesByZ Lookup of tiles by zoom level.\n   * @return {boolean} The tile coordinate is covered by loaded tiles at the alternate zoom level.\n   * @private\n   */\n  findStaleTile_(tileCoord, tilesByZ) {\n    const tileCache = this.tileCache_;\n    const z = tileCoord[0];\n    const x = tileCoord[1];\n    const y = tileCoord[2];\n    const staleKeys = this.getStaleKeys();\n    for (let i = 0; i < staleKeys.length; ++i) {\n      const cacheKey = getCacheKey(staleKeys[i], z, x, y);\n      if (tileCache.containsKey(cacheKey)) {\n        const tile = tileCache.peek(cacheKey);\n        if (tile.getState() === TileState.LOADED) {\n          tile.endTransition(getUid(this));\n          addTileToLookup(tilesByZ, tile, z);\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Look for tiles covering the provided tile coordinate at an alternate\n   * zoom level.  Loaded tiles will be added to the provided tile texture lookup.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid The tile grid.\n   * @param {import(\"../../tilecoord.js\").TileCoord} tileCoord The target tile coordinate.\n   * @param {number} altZ The alternate zoom level.\n   * @param {TileLookup} tilesByZ Lookup of tiles by zoom level.\n   * @return {boolean} The tile coordinate is covered by loaded tiles at the alternate zoom level.\n   * @private\n   */\n  findAltTiles_(tileGrid, tileCoord, altZ, tilesByZ) {\n    const tileRange = tileGrid.getTileRangeForTileCoordAndZ(\n      tileCoord,\n      altZ,\n      this.tempTileRange_,\n    );\n\n    if (!tileRange) {\n      return false;\n    }\n\n    let covered = true;\n    const tileCache = this.tileCache_;\n    const source = this.getLayer().getRenderSource();\n    const sourceKey = source.getKey();\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        const cacheKey = getCacheKey(sourceKey, altZ, x, y);\n        let loaded = false;\n        if (tileCache.containsKey(cacheKey)) {\n          const tile = tileCache.peek(cacheKey);\n          if (tile.getState() === TileState.LOADED) {\n            addTileToLookup(tilesByZ, tile, altZ);\n            loaded = true;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * Render the layer.\n   *\n   * The frame rendering logic has three parts:\n   *\n   *  1. Enqueue tiles\n   *  2. Find alt tiles for those that are not yet loaded\n   *  3. Render loaded tiles\n   *\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   * @override\n   */\n  renderFrame(frameState, target) {\n    let allTilesIdle = true;\n    this.renderComplete = true;\n\n    /**\n     * TODO:\n     *  maybe skip transition when not fully opaque\n     *  decide if this.renderComplete is useful\n     */\n\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const viewResolution = viewState.resolution;\n    const viewCenter = viewState.center;\n    const pixelRatio = frameState.pixelRatio;\n\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n\n    const sourceKey = tileSource.getKey();\n    if (!this.renderedSourceKey_) {\n      this.renderedSourceKey_ = sourceKey;\n    } else if (this.renderedSourceKey_ !== sourceKey) {\n      this.prependStaleKey(this.renderedSourceKey_);\n      this.renderedSourceKey_ = sourceKey;\n    }\n\n    let frameExtent = frameState.extent;\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n\n    this.prepareContainer(frameState, target);\n\n    // desired dimensions of the canvas in pixels\n    const width = this.context.canvas.width;\n    const height = this.context.canvas.height;\n\n    const layerExtent =\n      layerState.extent && fromUserExtent(layerState.extent, projection);\n    if (layerExtent) {\n      frameExtent = getIntersection(\n        frameExtent,\n        fromUserExtent(layerState.extent, projection),\n      );\n    }\n\n    const dx = (tileResolution * width) / 2 / tilePixelRatio;\n    const dy = (tileResolution * height) / 2 / tilePixelRatio;\n    const canvasExtent = [\n      viewCenter[0] - dx,\n      viewCenter[1] - dy,\n      viewCenter[0] + dx,\n      viewCenter[1] + dy,\n    ];\n\n    /**\n     * @type {TileLookup}\n     */\n    const tilesByZ = {};\n\n    this.renderedTiles.length = 0;\n\n    /**\n     * Part 1: Enqueue tiles\n     */\n\n    const preload = tileLayer.getPreload();\n    if (frameState.nextExtent) {\n      const targetZ = tileGrid.getZForResolution(\n        viewState.nextResolution,\n        tileSource.zDirection,\n      );\n      const nextExtent = getRenderExtent(frameState, frameState.nextExtent);\n      this.enqueueTiles(frameState, nextExtent, targetZ, tilesByZ, preload);\n    }\n\n    const renderExtent = getRenderExtent(frameState, frameExtent);\n    this.enqueueTiles(frameState, renderExtent, z, tilesByZ, 0);\n    if (preload > 0) {\n      setTimeout(() => {\n        this.enqueueTiles(\n          frameState,\n          renderExtent,\n          z - 1,\n          tilesByZ,\n          preload - 1,\n        );\n      }, 0);\n    }\n\n    if (!(z in tilesByZ)) {\n      return this.container;\n    }\n\n    /**\n     * Part 2: Find alt tiles for those that are not yet loaded\n     */\n\n    const uid = getUid(this);\n    const time = frameState.time;\n\n    // look for cached tiles to use if a target tile is not ready\n    for (const tile of tilesByZ[z]) {\n      const tileState = tile.getState();\n      if (tileState === TileState.EMPTY) {\n        continue;\n      }\n      const tileCoord = tile.tileCoord;\n\n      if (tileState === TileState.LOADED) {\n        const alpha = tile.getAlpha(uid, time);\n        if (alpha === 1) {\n          // no need to look for alt tiles\n          tile.endTransition(uid);\n          continue;\n        }\n      }\n      if (tileState !== TileState.IDLE) {\n        allTilesIdle = false;\n      }\n      if (tileState !== TileState.ERROR) {\n        this.renderComplete = false;\n      }\n\n      const hasStaleTile = this.findStaleTile_(tileCoord, tilesByZ);\n      if (hasStaleTile) {\n        // use the stale tile before the new tile's transition has completed\n        removeTileFromLookup(tilesByZ, tile, z);\n        frameState.animate = true;\n        continue;\n      }\n\n      // first look for child tiles (at z + 1)\n      const coveredByChildren = this.findAltTiles_(\n        tileGrid,\n        tileCoord,\n        z + 1,\n        tilesByZ,\n      );\n\n      if (coveredByChildren) {\n        continue;\n      }\n\n      // next look for parent tiles\n      const minZoom = tileGrid.getMinZoom();\n      for (let parentZ = z - 1; parentZ >= minZoom; --parentZ) {\n        const coveredByParent = this.findAltTiles_(\n          tileGrid,\n          tileCoord,\n          parentZ,\n          tilesByZ,\n        );\n\n        if (coveredByParent) {\n          break;\n        }\n      }\n    }\n\n    /**\n     * Part 3: Render loaded tiles\n     */\n\n    const canvasScale =\n      ((tileResolution / viewResolution) * pixelRatio) / tilePixelRatio;\n\n    const context = this.getRenderContext(frameState);\n\n    // set scale transform for calculating tile positions on the canvas\n    composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      canvasScale,\n      canvasScale,\n      0,\n      -width / 2,\n      -height / 2,\n    );\n\n    if (layerState.extent) {\n      this.clipUnrotated(context, frameState, layerExtent);\n    }\n\n    if (!tileSource.getInterpolate()) {\n      context.imageSmoothingEnabled = false;\n    }\n\n    this.preRender(context, frameState);\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(tilesByZ).map(Number);\n    zs.sort(ascending);\n\n    let currentClip;\n    const clips = [];\n    const clipZs = [];\n    for (let i = zs.length - 1; i >= 0; --i) {\n      const currentZ = zs[i];\n      const currentTilePixelSize = tileSource.getTilePixelSize(\n        currentZ,\n        pixelRatio,\n        projection,\n      );\n      const currentResolution = tileGrid.getResolution(currentZ);\n      const currentScale = currentResolution / tileResolution;\n      const dx = currentTilePixelSize[0] * currentScale * canvasScale;\n      const dy = currentTilePixelSize[1] * currentScale * canvasScale;\n      const originTileCoord = tileGrid.getTileCoordForCoordAndZ(\n        getTopLeft(canvasExtent),\n        currentZ,\n      );\n      const originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n      const origin = applyTransform(this.tempTransform, [\n        (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n          tileResolution,\n        (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n          tileResolution,\n      ]);\n      const tileGutter =\n        tilePixelRatio * tileSource.getGutterForProjection(projection);\n      for (const tile of tilesByZ[currentZ]) {\n        if (tile.getState() !== TileState.LOADED) {\n          continue;\n        }\n        const tileCoord = tile.tileCoord;\n\n        // Calculate integer positions and sizes so that tiles align\n        const xIndex = originTileCoord[1] - tileCoord[1];\n        const nextX = Math.round(origin[0] - (xIndex - 1) * dx);\n        const yIndex = originTileCoord[2] - tileCoord[2];\n        const nextY = Math.round(origin[1] - (yIndex - 1) * dy);\n        const x = Math.round(origin[0] - xIndex * dx);\n        const y = Math.round(origin[1] - yIndex * dy);\n        const w = nextX - x;\n        const h = nextY - y;\n        const transition = zs.length === 1;\n\n        let contextSaved = false;\n\n        // Clip mask for regions in this tile that already filled by a higher z tile\n        currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n        for (let i = 0, ii = clips.length; i < ii; ++i) {\n          if (!transition && currentZ < clipZs[i]) {\n            const clip = clips[i];\n            if (\n              intersects(\n                [x, y, x + w, y + h],\n                [clip[0], clip[3], clip[4], clip[7]],\n              )\n            ) {\n              if (!contextSaved) {\n                context.save();\n                contextSaved = true;\n              }\n              context.beginPath();\n              // counter-clockwise (outer ring) for current tile\n              context.moveTo(currentClip[0], currentClip[1]);\n              context.lineTo(currentClip[2], currentClip[3]);\n              context.lineTo(currentClip[4], currentClip[5]);\n              context.lineTo(currentClip[6], currentClip[7]);\n              // clockwise (inner ring) for higher z tile\n              context.moveTo(clip[6], clip[7]);\n              context.lineTo(clip[4], clip[5]);\n              context.lineTo(clip[2], clip[3]);\n              context.lineTo(clip[0], clip[1]);\n              context.clip();\n            }\n          }\n        }\n        clips.push(currentClip);\n        clipZs.push(currentZ);\n\n        this.drawTile(tile, frameState, x, y, w, h, tileGutter, transition);\n        if (contextSaved) {\n          context.restore();\n        }\n        this.renderedTiles.unshift(tile);\n\n        // TODO: decide if this is necessary\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n      }\n    }\n\n    this.renderedResolution = tileResolution;\n    this.extentChanged =\n      !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n    this.renderedExtent_ = canvasExtent;\n    this.renderedPixelRatio = pixelRatio;\n\n    this.postRender(this.context, frameState);\n\n    if (layerState.extent) {\n      context.restore();\n    }\n    context.imageSmoothingEnabled = true;\n\n    if (this.renderComplete) {\n      /**\n       * @param {import(\"../../Map.js\").default} map Map.\n       * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n       */\n      const postRenderFunction = (map, frameState) => {\n        const tileSourceKey = getUid(tileSource);\n        const wantedTiles = frameState.wantedTiles[tileSourceKey];\n        const tilesCount = wantedTiles ? Object.keys(wantedTiles).length : 0;\n        this.updateCacheSize(tilesCount);\n        this.tileCache_.expireCache();\n      };\n\n      frameState.postRenderFunctions.push(postRenderFunction);\n    }\n    if (!this.renderComplete && !allTilesIdle) {\n      frameState.animate = true;\n    }\n\n    return this.container;\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   */\n  updateCacheSize(tileCount) {\n    this.tileCache_.highWaterMark = Math.max(\n      this.tileCache_.highWaterMark,\n      tileCount * 2,\n    );\n  }\n\n  /**\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   * @protected\n   */\n  drawTile(tile, frameState, x, y, w, h, gutter, transition) {\n    let image;\n    if (tile instanceof DataTile) {\n      image = asImageLike(tile.getData());\n      if (!image) {\n        throw new Error('Rendering array data is not yet supported');\n      }\n    } else {\n      image = this.getTileImage(\n        /** @type {import(\"../../ImageTile.js\").default} */ (tile),\n      );\n    }\n    if (!image) {\n      return;\n    }\n    const context = this.getRenderContext(frameState);\n    const uid = getUid(this);\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const alpha =\n      layerState.opacity *\n      (transition ? tile.getAlpha(uid, frameState.time) : 1);\n    const alphaChanged = alpha !== context.globalAlpha;\n    if (alphaChanged) {\n      context.save();\n      context.globalAlpha = alpha;\n    }\n    context.drawImage(\n      image,\n      gutter,\n      gutter,\n      image.width - 2 * gutter,\n      image.height - 2 * gutter,\n      x,\n      y,\n      w,\n      h,\n    );\n\n    if (alphaChanged) {\n      context.restore();\n    }\n    if (alpha !== layerState.opacity) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image\n   */\n  getImage() {\n    const context = this.context;\n    return context ? context.canvas : null;\n  }\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  getTileImage(tile) {\n    return tile.getImage();\n  }\n\n  /**\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import('../../Tile.js').default} tile Tile.\n   * @protected\n   */\n  updateUsedTiles(usedTiles, tileSource, tile) {\n    // FIXME should we use tilesToDrawByZ instead?\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in usedTiles)) {\n      usedTiles[tileSourceKey] = {};\n    }\n    usedTiles[tileSourceKey][tile.getKey()] = true;\n  }\n}\n\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/renderer/canvas/VectorTileLayer\n */\nimport TileState from '../../TileState.js';\nimport ViewHint from '../../ViewHint.js';\nimport {ascending} from '../../array.js';\nimport {wrapX} from '../../coordinate.js';\nimport {\n  boundingExtent,\n  buffer,\n  containsExtent,\n  equals,\n  getIntersection,\n  getTopLeft,\n  intersects,\n} from '../../extent.js';\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasExecutorGroup, {\n  DECLUTTER,\n} from '../../render/canvas/ExecutorGroup.js';\nimport ZIndexContext from '../../render/canvas/ZIndexContext.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {toSize} from '../../size.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n  multiply,\n  reset as resetTransform,\n  scale,\n  scale as scaleTransform,\n  translate as translateTransform,\n} from '../../transform.js';\nimport {getUid} from '../../util.js';\nimport {\n  getSquaredTolerance as getSquaredRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport CanvasTileLayerRenderer from './TileLayer.js';\n\n/**\n * @type {!Object<string, Array<import(\"../../render/canvas.js\").BuilderType>>}\n */\nconst IMAGE_REPLAYS = {\n  'image': ['Polygon', 'Circle', 'LineString', 'Image', 'Text'],\n  'hybrid': ['Polygon', 'LineString'],\n  'vector': [],\n};\n\n/**\n * @type {!Object<string, Array<import(\"../../render/canvas.js\").BuilderType>>}\n */\nconst VECTOR_REPLAYS = {\n  'hybrid': ['Image', 'Text', 'Default'],\n  'vector': ['Polygon', 'Circle', 'LineString', 'Image', 'Text', 'Default'],\n};\n\n/**\n * @classdesc\n * Canvas renderer for vector tile layers.\n * @api\n * @extends {CanvasTileLayerRenderer<import(\"../../layer/VectorTile.js\").default<import('../../source/VectorTile.js').default<import('../../Feature.js').FeatureLike>>>}\n */\nclass CanvasVectorTileLayerRenderer extends CanvasTileLayerRenderer {\n  /**\n   * @param {import(\"../../layer/VectorTile.js\").default} layer VectorTile layer.\n   * @param {import(\"./TileLayer.js\").Options} options Options.\n   */\n  constructor(layer, options) {\n    super(layer, options);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedLayerRevision_;\n\n    /**\n     * @private\n     * @type {import(\"../../transform\").Transform}\n     */\n    this.renderedPixelToCoordinateTransform_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedOpacity_ = 1;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {Array<ZIndexContext>}\n     */\n    this.tileClipContexts_ = null;\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   * @override\n   */\n  drawTile(tile, frameState, x, y, w, h, gutter, transition) {\n    this.updateExecutorGroup_(\n      tile,\n      frameState.pixelRatio,\n      frameState.viewState.projection,\n    );\n    if (this.tileImageNeedsRender_(tile)) {\n      this.renderTileImage_(tile, frameState);\n    }\n    super.drawTile(tile, frameState, x, y, w, h, gutter, transition);\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {import(\"../../Tile.js\").default|null} Tile (or null if outside source extent).\n   * @override\n   */\n  getTile(z, x, y, frameState) {\n    const tile = /** @type {import(\"../../VectorRenderTile.js\").default} */ (\n      this.getOrCreateTile(z, x, y, frameState)\n    );\n    if (!tile) {\n      return null;\n    }\n\n    const viewState = frameState.viewState;\n    const resolution = viewState.resolution;\n    const viewHints = frameState.viewHints;\n    const hifi = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    if (hifi || !tile.wantedResolution) {\n      tile.wantedResolution = resolution;\n    }\n    return tile;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   * @override\n   */\n  prepareFrame(frameState) {\n    const layerRevision = this.getLayer().getRevision();\n    if (this.renderedLayerRevision_ !== layerRevision) {\n      this.renderedLayerRevision_ = layerRevision;\n      this.renderedTiles.length = 0;\n    }\n    return super.prepareFrame(frameState);\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @private\n   */\n  updateExecutorGroup_(tile, pixelRatio, projection) {\n    const layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (\n      this.getLayer()\n    );\n    const revision = layer.getRevision();\n    const renderOrder = layer.getRenderOrder() || null;\n\n    const resolution = tile.wantedResolution;\n    const builderState = tile.getReplayState(layer);\n    if (\n      !builderState.dirty &&\n      builderState.renderedResolution === resolution &&\n      builderState.renderedRevision == revision &&\n      builderState.renderedRenderOrder == renderOrder\n    ) {\n      return;\n    }\n\n    const source = layer.getSource();\n    const declutter = !!layer.getDeclutter();\n    const sourceTileGrid = source.getTileGrid();\n    const tileGrid = source.getTileGridForProjection(projection);\n    const tileExtent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n\n    const sourceTiles = source.getSourceTiles(pixelRatio, projection, tile);\n    const layerUid = getUid(layer);\n    delete tile.hitDetectionImageData[layerUid];\n    tile.executorGroups[layerUid] = [];\n    builderState.dirty = false;\n    for (let t = 0, tt = sourceTiles.length; t < tt; ++t) {\n      const sourceTile = sourceTiles[t];\n      if (sourceTile.getState() != TileState.LOADED) {\n        continue;\n      }\n      const sourceTileCoord = sourceTile.tileCoord;\n      const sourceTileExtent =\n        sourceTileGrid.getTileCoordExtent(sourceTileCoord);\n      const sharedExtent = getIntersection(tileExtent, sourceTileExtent);\n      const builderExtent = buffer(\n        sharedExtent,\n        layer.getRenderBuffer() * resolution,\n        this.tempExtent,\n      );\n      const bufferedExtent = equals(sourceTileExtent, sharedExtent)\n        ? null\n        : builderExtent;\n      const builderGroup = new CanvasBuilderGroup(\n        0,\n        sharedExtent,\n        resolution,\n        pixelRatio,\n      );\n      const squaredTolerance = getSquaredRenderTolerance(\n        resolution,\n        pixelRatio,\n      );\n\n      /**\n       * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n       * @param {number} [index] Render order index.\n       * @this {CanvasVectorTileLayerRenderer}\n       */\n      const render = function (feature, index) {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || layer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            builderGroup,\n            declutter,\n            index,\n          );\n          builderState.dirty = builderState.dirty || dirty;\n        }\n      };\n\n      const features = sourceTile.getFeatures();\n      if (renderOrder && renderOrder !== builderState.renderedRenderOrder) {\n        features.sort(renderOrder);\n      }\n      for (let i = 0, ii = features.length; i < ii; ++i) {\n        const feature = features[i];\n        if (\n          !bufferedExtent ||\n          intersects(bufferedExtent, feature.getGeometry().getExtent())\n        ) {\n          render.call(this, feature, i);\n        }\n      }\n      const executorGroupInstructions = builderGroup.finish();\n      // no need to clip when the render tile is covered by a single source tile\n      const replayExtent =\n        layer.getRenderMode() !== 'vector' &&\n        declutter &&\n        sourceTiles.length === 1\n          ? null\n          : sharedExtent;\n      const renderingReplayGroup = new CanvasExecutorGroup(\n        replayExtent,\n        resolution,\n        pixelRatio,\n        source.getOverlaps(),\n        executorGroupInstructions,\n        layer.getRenderBuffer(),\n        true,\n      );\n      tile.executorGroups[layerUid].push(renderingReplayGroup);\n    }\n    builderState.renderedRevision = revision;\n    builderState.renderedRenderOrder = renderOrder;\n    builderState.renderedResolution = resolution;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   * @override\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches,\n  ) {\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    hitTolerance = hitTolerance == undefined ? 0 : hitTolerance;\n    const layer = this.getLayer();\n    const source = layer.getSource();\n    const tileGrid = source.getTileGridForProjection(\n      frameState.viewState.projection,\n    );\n\n    const hitExtent = boundingExtent([coordinate]);\n    buffer(hitExtent, resolution * hitTolerance, hitExtent);\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position.\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      let key = feature.getId();\n      if (key === undefined) {\n        key = getUid(feature);\n      }\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          }),\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    const renderedTiles =\n      /** @type {Array<import(\"../../VectorRenderTile.js\").default>} */ (\n        this.renderedTiles\n      );\n    const layerUid = getUid(layer);\n    const declutter = layer.getDeclutter();\n    const declutteredFeatures = declutter\n      ? frameState.declutter?.[declutter]?.all().map((item) => item.value)\n      : null;\n    let found;\n    foundFeature: for (let i = 0, ii = renderedTiles.length; i < ii; ++i) {\n      const tile = renderedTiles[i];\n      const tileExtent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n      if (!intersects(tileExtent, hitExtent)) {\n        continue;\n      }\n\n      const executorGroups = tile.executorGroups[layerUid];\n      for (let t = 0, tt = executorGroups.length; t < tt; ++t) {\n        found = executorGroups[t].forEachFeatureAtCoordinate(\n          coordinate,\n          resolution,\n          rotation,\n          hitTolerance,\n          featureCallback,\n          declutteredFeatures,\n        );\n        if (found) {\n          break foundFeature;\n        }\n      }\n    }\n    return found;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature.js\").FeatureLike>>} Promise that resolves with an array of features.\n   * @override\n   */\n  getFeatures(pixel) {\n    if (this.renderedTiles.length === 0) {\n      return Promise.resolve([]);\n    }\n    return new Promise((resolve, reject) => {\n      const layer = this.getLayer();\n      const source = layer.getSource();\n      const projection = this.renderedProjection;\n      const projectionExtent = projection.getExtent();\n      const resolution = this.renderedResolution;\n      const tileGrid = source.getTileGridForProjection(projection);\n      const coordinate = applyTransform(\n        this.renderedPixelToCoordinateTransform_,\n        pixel.slice(),\n      );\n      const tileCoordString = tileGrid\n        .getTileCoordForCoordAndResolution(coordinate, resolution)\n        .toString();\n      const tile =\n        /** @type {Array<import(\"../../VectorRenderTile.js\").default>} */ (\n          this.renderedTiles\n        ).find(\n          (tile) =>\n            tile.tileCoord.toString() === tileCoordString &&\n            tile.getState() === TileState.LOADED,\n        );\n      if (!tile || tile.loadingSourceTiles > 0) {\n        resolve([]);\n        return;\n      }\n      if (\n        source.getWrapX() &&\n        projection.canWrapX() &&\n        !containsExtent(\n          projectionExtent,\n          tileGrid.getTileCoordExtent(tile.tileCoord),\n        )\n      ) {\n        wrapX(coordinate, projection);\n      }\n      const layerUid = getUid(layer);\n      const extent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n      const corner = getTopLeft(extent);\n      const tilePixel = [\n        (coordinate[0] - corner[0]) / resolution,\n        (corner[1] - coordinate[1]) / resolution,\n      ];\n      const features = tile\n        .getSourceTiles()\n        .reduce(\n          (accumulator, sourceTile) =>\n            accumulator.concat(sourceTile.getFeatures()),\n          /** @type {Array<import(\"../../Feature.js\").FeatureLike>} */ ([]),\n        );\n      let hitDetectionImageData = tile.hitDetectionImageData[layerUid];\n      if (!hitDetectionImageData) {\n        const tileSize = toSize(\n          tileGrid.getTileSize(\n            tileGrid.getZForResolution(resolution, source.zDirection),\n          ),\n        );\n        const rotation = this.renderedRotation_;\n        const transforms = [\n          this.getRenderTransform(\n            tileGrid.getTileCoordCenter(tile.wrappedTileCoord),\n            resolution,\n            0,\n            HIT_DETECT_RESOLUTION,\n            tileSize[0] * HIT_DETECT_RESOLUTION,\n            tileSize[1] * HIT_DETECT_RESOLUTION,\n            0,\n          ),\n        ];\n        hitDetectionImageData = createHitDetectionImageData(\n          tileSize,\n          transforms,\n          features,\n          layer.getStyleFunction(),\n          tileGrid.getTileCoordExtent(tile.wrappedTileCoord),\n          tile.getReplayState(layer).renderedResolution,\n          rotation,\n        );\n        tile.hitDetectionImageData[layerUid] = hitDetectionImageData;\n      }\n      resolve(hitDetect(tilePixel, features, hitDetectionImageData));\n    });\n  }\n\n  /**\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @return {Array<import('../../Feature.js').FeatureLike>} Features.\n   */\n  getFeaturesInExtent(extent) {\n    /** @type {Array<import('../../Feature.js').FeatureLike>} */\n    const features = [];\n    const tileCache = this.getTileCache();\n    if (tileCache.getCount() === 0) {\n      return features;\n    }\n    const source = this.getLayer().getSource();\n    const tileGrid = source.getTileGridForProjection(\n      this.frameState.viewState.projection,\n    );\n    const z = tileGrid.getZForResolution(this.renderedResolution);\n    /** @type {Object<string, true>} */\n    const visitedSourceTiles = {};\n    tileCache.forEach((tile) => {\n      if (tile.tileCoord[0] !== z || tile.getState() !== TileState.LOADED) {\n        return;\n      }\n      const sourceTiles = tile.getSourceTiles();\n      for (let i = 0, ii = sourceTiles.length; i < ii; ++i) {\n        const sourceTile = sourceTiles[i];\n        const key = sourceTile.getKey();\n        if (key in visitedSourceTiles) {\n          continue;\n        }\n        visitedSourceTiles[key] = true;\n        const tileCoord = sourceTile.tileCoord;\n        if (intersects(extent, tileGrid.getTileCoordExtent(tileCoord))) {\n          const tileFeatures = sourceTile.getFeatures();\n          if (tileFeatures) {\n            for (let j = 0, jj = tileFeatures.length; j < jj; ++j) {\n              const candidate = tileFeatures[j];\n              const geometry = candidate.getGeometry();\n              if (intersects(extent, geometry.getExtent())) {\n                features.push(candidate);\n              }\n            }\n          }\n        }\n      }\n    });\n    return features;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @override\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.renderedLayerRevision_ !== undefined) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../layer/Layer.js\").State} layerState Layer state.\n   */\n  renderDeclutter(frameState, layerState) {\n    const context = this.context;\n    const alpha = context.globalAlpha;\n    context.globalAlpha = layerState.opacity;\n    const viewHints = frameState.viewHints;\n    const hifi = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const scaledCanvasSize = [\n      this.context.canvas.width,\n      this.context.canvas.height,\n    ];\n    const declutter = this.getLayer().getDeclutter();\n    const declutterTree = declutter\n      ? frameState.declutter?.[declutter]\n      : undefined;\n    const layerUid = getUid(this.getLayer());\n    const tiles =\n      /** @type {Array<import(\"../../VectorRenderTile.js\").default>} */ (\n        this.renderedTiles\n      );\n    for (let i = 0, ii = tiles.length; i < ii; ++i) {\n      const tile = tiles[i];\n      const executorGroups = tile.executorGroups[layerUid];\n      if (executorGroups) {\n        for (let j = executorGroups.length - 1; j >= 0; --j) {\n          executorGroups[j].execute(\n            this.context,\n            scaledCanvasSize,\n            this.getTileRenderTransform(tile, frameState),\n            frameState.viewState.rotation,\n            hifi,\n            DECLUTTER,\n            declutterTree,\n          );\n        }\n      }\n    }\n    context.globalAlpha = alpha;\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @override\n   */\n  renderDeferredInternal(frameState) {\n    const tiles =\n      /** @type {Array<import(\"../../VectorRenderTile.js\").default>} */ (\n        this.renderedTiles\n      );\n    const layerUid = getUid(this.getLayer());\n    const executorGroups = tiles.reduce((acc, tile, index) => {\n      tile.executorGroups[layerUid].forEach((executorGroup) =>\n        acc.push({\n          executorGroup,\n          index,\n        }),\n      );\n      return acc;\n    }, /** @type {Array<{executorGroup: CanvasExecutorGroup, index: number}>} */ ([]));\n\n    const executorGroupZIndexContexts = executorGroups.map(({executorGroup}) =>\n      executorGroup.getDeferredZIndexContexts(),\n    );\n    /** @type {Object<number, true>} */\n    const usedZIndices = {};\n    for (let i = 0, ii = executorGroups.length; i < ii; ++i) {\n      const executorGroupZindexContext =\n        executorGroups[i].executorGroup.getDeferredZIndexContexts();\n      for (const key in executorGroupZindexContext) {\n        usedZIndices[key] = true;\n      }\n    }\n    const zIndexKeys = Object.keys(usedZIndices).map(Number).sort(ascending);\n    zIndexKeys.forEach((zIndex) => {\n      executorGroupZIndexContexts.forEach((zIndexContexts, i) => {\n        if (!zIndexContexts[zIndex]) {\n          return;\n        }\n        zIndexContexts[zIndex].forEach((zIndexContext) => {\n          const {executorGroup, index} = executorGroups[i];\n          const context = executorGroup.getRenderedContext();\n          const alpha = context.globalAlpha;\n          context.globalAlpha = this.renderedOpacity_;\n          const tileClipContext = this.tileClipContexts_[index];\n          if (tileClipContext) {\n            tileClipContext.draw(context);\n          }\n          zIndexContext.draw(context);\n          if (tileClipContext) {\n            context.restore();\n          }\n          context.globalAlpha = alpha;\n          zIndexContext.clear();\n        });\n        zIndexContexts[zIndex].length = 0;\n      });\n    });\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile The tile\n   * @param {import('../../Map.js').FrameState} frameState Current frame state\n   * @return {import('../../transform.js').Transform} Transform to use to render this tile\n   */\n  getTileRenderTransform(tile, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const rotation = viewState.rotation;\n    const size = frameState.size;\n    const width = Math.round(size[0] * pixelRatio);\n    const height = Math.round(size[1] * pixelRatio);\n\n    const source = this.getLayer().getSource();\n    const tileGrid = source.getTileGridForProjection(\n      frameState.viewState.projection,\n    );\n    const tileCoord = tile.tileCoord;\n    const tileExtent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n    const worldOffset =\n      tileGrid.getTileCoordExtent(tileCoord, this.tempExtent)[0] -\n      tileExtent[0];\n    const transform = multiply(\n      scale(this.inversePixelTransform.slice(), 1 / pixelRatio, 1 / pixelRatio),\n      this.getRenderTransform(\n        center,\n        resolution,\n        rotation,\n        pixelRatio,\n        width,\n        height,\n        worldOffset,\n      ),\n    );\n    return transform;\n  }\n\n  /**\n   * Render the vectors for this layer.\n   * @param {CanvasRenderingContext2D} context Target context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @override\n   */\n  postRender(context, frameState) {\n    const viewHints = frameState.viewHints;\n    const hifi = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n\n    this.renderedPixelToCoordinateTransform_ =\n      frameState.pixelToCoordinateTransform.slice();\n    this.renderedRotation_ = frameState.viewState.rotation;\n    this.renderedOpacity_ =\n      frameState.layerStatesArray[frameState.layerIndex].opacity;\n\n    const layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (\n      this.getLayer()\n    );\n    const renderMode = layer.getRenderMode();\n    const alpha = context.globalAlpha;\n    context.globalAlpha = this.renderedOpacity_;\n    const declutter = layer.getDeclutter();\n    const replayTypes = declutter\n      ? VECTOR_REPLAYS[renderMode].filter((type) => !DECLUTTER.includes(type))\n      : VECTOR_REPLAYS[renderMode];\n    const viewState = frameState.viewState;\n    const rotation = viewState.rotation;\n    const tileSource = layer.getSource();\n    const tileGrid = tileSource.getTileGridForProjection(viewState.projection);\n    const z = tileGrid.getZForResolution(\n      viewState.resolution,\n      tileSource.zDirection,\n    );\n\n    const tiles =\n      /** @type {Array<import(\"../../VectorRenderTile.js\").default>} */ (\n        this.renderedTiles\n      );\n    const clips = [];\n    const clipZs = [];\n    const tileClipContexts = [];\n    const layerUid = getUid(layer);\n    let ready = true;\n    for (let i = tiles.length - 1; i >= 0; --i) {\n      const tile = tiles[i];\n      ready = ready && !tile.getReplayState(layer).dirty;\n      const executorGroups = tile.executorGroups[layerUid].filter((group) =>\n        group.hasExecutors(replayTypes),\n      );\n      if (executorGroups.length === 0) {\n        continue;\n      }\n      const transform = this.getTileRenderTransform(tile, frameState);\n      const currentZ = tile.tileCoord[0];\n      let contextSaved = false;\n      // Clip mask for regions in this tile that already filled by a higher z tile\n      const currentClip = executorGroups[0].getClipCoords(transform);\n      let clipContext = context;\n      let tileClipContext;\n      if (currentClip) {\n        tileClipContext = new ZIndexContext();\n        clipContext = tileClipContext.getContext();\n        for (let j = 0, jj = clips.length; j < jj; ++j) {\n          if (z !== currentZ && currentZ < clipZs[j]) {\n            const clip = clips[j];\n            if (\n              intersects(\n                [\n                  currentClip[0],\n                  currentClip[3],\n                  currentClip[4],\n                  currentClip[7],\n                ],\n                [clip[0], clip[3], clip[4], clip[7]],\n              )\n            ) {\n              if (!contextSaved) {\n                clipContext.save();\n                contextSaved = true;\n              }\n              clipContext.beginPath();\n              // counter-clockwise (outer ring) for current tile\n              clipContext.moveTo(currentClip[0], currentClip[1]);\n              clipContext.lineTo(currentClip[2], currentClip[3]);\n              clipContext.lineTo(currentClip[4], currentClip[5]);\n              clipContext.lineTo(currentClip[6], currentClip[7]);\n              // clockwise (inner ring) for higher z tile\n              clipContext.moveTo(clip[6], clip[7]);\n              clipContext.lineTo(clip[4], clip[5]);\n              clipContext.lineTo(clip[2], clip[3]);\n              clipContext.lineTo(clip[0], clip[1]);\n              clipContext.clip();\n            }\n          }\n        }\n        clips.push(currentClip);\n        clipZs.push(currentZ);\n      }\n      for (let t = 0, tt = executorGroups.length; t < tt; ++t) {\n        const executorGroup = executorGroups[t];\n        executorGroup.execute(\n          context,\n          [context.canvas.width, context.canvas.height],\n          transform,\n          rotation,\n          hifi,\n          replayTypes,\n          frameState.declutter?.[declutter],\n        );\n      }\n      if (contextSaved) {\n        if (clipContext === context) {\n          clipContext.restore();\n        } else {\n          tileClipContexts[i] = tileClipContext;\n        }\n      }\n    }\n    context.globalAlpha = alpha;\n    this.ready = ready;\n    this.tileClipContexts_ = tileClipContexts;\n    if (!frameState.declutter) {\n      this.renderDeferredInternal(frameState);\n    }\n\n    super.postRender(context, frameState);\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n   * @param {boolean} [declutter] Enable decluttering.\n   * @param {number} [index] Render order index.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    declutter,\n    index,\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            undefined,\n            declutter,\n            index,\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        undefined,\n        declutter,\n        index,\n      );\n    }\n    return loading;\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @return {boolean} A new tile image was rendered.\n   * @private\n   */\n  tileImageNeedsRender_(tile) {\n    const layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (\n      this.getLayer()\n    );\n    if (layer.getRenderMode() === 'vector') {\n      return false;\n    }\n    const replayState = tile.getReplayState(layer);\n    const revision = layer.getRevision();\n    const resolution = tile.wantedResolution;\n    return (\n      replayState.renderedTileResolution !== resolution ||\n      replayState.renderedTileRevision !== revision\n    );\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @param {import(\"../../Map\").FrameState} frameState Frame state.\n   * @private\n   */\n  renderTileImage_(tile, frameState) {\n    const layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (\n      this.getLayer()\n    );\n    const replayState = tile.getReplayState(layer);\n    const revision = layer.getRevision();\n    const executorGroups = tile.executorGroups[getUid(layer)];\n    replayState.renderedTileRevision = revision;\n\n    const tileCoord = tile.wrappedTileCoord;\n    const z = tileCoord[0];\n    const source = layer.getSource();\n    let pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const tileGrid = source.getTileGridForProjection(projection);\n    const tileResolution = tileGrid.getResolution(tile.tileCoord[0]);\n    const renderPixelRatio =\n      (frameState.pixelRatio / tile.wantedResolution) * tileResolution;\n    const resolution = tileGrid.getResolution(z);\n    const context = tile.getContext();\n\n    // Increase tile size when overzooming for low pixel ratio, to avoid blurry tiles\n    pixelRatio = Math.round(\n      Math.max(pixelRatio, renderPixelRatio / pixelRatio),\n    );\n    const size = source.getTilePixelSize(z, pixelRatio, projection);\n    context.canvas.width = size[0];\n    context.canvas.height = size[1];\n    const renderScale = pixelRatio / renderPixelRatio;\n    if (renderScale !== 1) {\n      const canvasTransform = resetTransform(this.tmpTransform_);\n      scaleTransform(canvasTransform, renderScale, renderScale);\n      context.setTransform.apply(context, canvasTransform);\n    }\n    const tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tempExtent);\n    const pixelScale = renderPixelRatio / resolution;\n    const transform = resetTransform(this.tmpTransform_);\n    scaleTransform(transform, pixelScale, -pixelScale);\n    translateTransform(transform, -tileExtent[0], -tileExtent[3]);\n    for (let i = 0, ii = executorGroups.length; i < ii; ++i) {\n      const executorGroup = executorGroups[i];\n      executorGroup.execute(\n        context,\n        [\n          context.canvas.width * renderScale,\n          context.canvas.height * renderScale,\n        ],\n        transform,\n        0,\n        true,\n        IMAGE_REPLAYS[layer.getRenderMode()],\n        null,\n      );\n    }\n    replayState.renderedTileResolution = tile.wantedResolution;\n  }\n}\n\nexport default CanvasVectorTileLayerRenderer;\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n","/**\n * @module ol/layer/VectorTile\n */\nimport {assert} from '../asserts.js';\nimport CanvasVectorTileLayerRenderer from '../renderer/canvas/VectorTileLayer.js';\nimport BaseVectorLayer from './BaseVector.js';\nimport TileProperty from './TileProperty.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *     import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} VectorTileLayerOnSignature\n */\n\n/**\n * @typedef {'hybrid' | 'vector'} VectorTileRenderType\n */\n\n/***\n * @template T\n * @typedef {T extends import(\"../source/VectorTile.js\").default<infer U extends import(\"../Feature.js\").FeatureLike> ? U : never} ExtractedFeatureType\n */\n\n/**\n * @template {import(\"../source/VectorTile.js\").default<FeatureType>} [VectorTileSourceType=import(\"../source/VectorTile.js\").default<*>]\n * @template {import(\"../Feature\").FeatureLike} [FeatureType=ExtractedFeatureType<VectorTileSourceType>]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the tile extent used by the\n * renderer when getting features from the vector tile for the rendering or hit-detection.\n * Recommended value: Vector tiles are usually generated with a buffer, so this value should match\n * the largest possible buffer of the used tiles. It should be at least the size of the largest\n * point symbol or line width.\n * @property {VectorTileRenderType} [renderMode='hybrid'] Render mode for vector tiles:\n *  `'hybrid'`: Polygon and line elements are rendered as images, so pixels are scaled during zoom\n *    animations. Point symbols and texts are accurately rendered as vectors and can stay upright on\n *    rotated views, but get lifted above all polygon and line elements.\n *  `'vector'`: Everything is rendered as vectors and the original render order is maintained. Use\n *    this mode for improved performance and visual epxerience on vector tile layers with not too many\n *    rendered features (e.g. for highlighting a subset of features of another layer with the same\n *    source).\n * @property {VectorTileSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean|string|number} [declutter=false] Declutter images and text. Any truthy value will enable\n * decluttering. Within a layer, a feature rendered before another has higher priority. All layers with the\n * same `declutter` value will be decluttered together. The priority is determined by the drawing order of the\n * layers with the same `declutter` value. Higher in the layer stack means higher priority. To declutter distinct\n * layers or groups of layers separately, use different truthy values for `declutter`.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer\n * style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no\n * background will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will be\n * recreated during animations. This means that no vectors will be shown clipped, but the setting\n * will have a performance impact for large amounts of vector data. When set to `false`, batches\n * will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will be\n * recreated during interactions. See also `updateWhileAnimating`.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {boolean} [useInterimTilesOnError=true] Deprecated.  Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n * @property {number} [cacheSize=0] The internal tile cache size.  If too small, this will auto-grow to hold\n * two zoom levels worth of tiles.\n */\n\n/**\n * @classdesc\n * Layer for vector tile data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/VectorTile.js\").default<FeatureType>} [VectorTileSourceType=import(\"../source/VectorTile.js\").default<*>]\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=ExtractedFeatureType<VectorTileSourceType>]\n * @extends {BaseVectorLayer<FeatureType, VectorTileSourceType, CanvasVectorTileLayerRenderer>}\n * @api\n */\nclass VectorTileLayer extends BaseVectorLayer {\n  /**\n   * @param {Options<VectorTileSourceType, FeatureType>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n    delete baseOptions.preload;\n    const cacheSize = options.cacheSize === undefined ? 0 : options.cacheSize;\n    delete options.cacheSize;\n    delete baseOptions.useInterimTilesOnError;\n\n    super(baseOptions);\n\n    /***\n     * @type {VectorTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {VectorTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {VectorTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.cacheSize_ = cacheSize;\n\n    const renderMode = options.renderMode || 'hybrid';\n    assert(\n      renderMode == 'hybrid' || renderMode == 'vector',\n      \"`renderMode` must be `'hybrid'` or `'vector'`\",\n    );\n\n    /**\n     * @private\n     * @type {VectorTileRenderType}\n     */\n    this.renderMode_ = renderMode;\n\n    this.setPreload(options.preload ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true,\n    );\n\n    /**\n     * @return {import(\"./Base.js\").BackgroundColor} Background color.\n     * @function\n     * @api\n     */\n    this.getBackground;\n\n    /**\n     * @param {import(\"./Base.js\").BackgroundColor} background Background color.\n     * @function\n     * @api\n     */\n    this.setBackground;\n  }\n\n  /**\n   * @override\n   */\n  createRenderer() {\n    return new CanvasVectorTileLayerRenderer(this, {\n      cacheSize: this.cacheSize_,\n    });\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in [map.getFeaturesAtPixel()]{@link import(\"../Map.js\").default#getFeaturesAtPixel}.\n   * Text is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with an array of features.\n   * @api\n   * @override\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * Get features whose bounding box intersects the provided extent. Only features for cached\n   * tiles for the last rendered zoom level are available in the source. So this method is only\n   * suitable for requesting tiles for extents that are currently rendered.\n   *\n   * Features are returned in random tile order and as they are included in the tiles. This means\n   * they can be clipped, duplicated across tiles, and simplified to the render resolution.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<FeatureType>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent) {\n    return /** @type {Array<FeatureType>} */ (\n      /** @type {*} */ (this.getRenderer().getFeaturesInExtent(extent))\n    );\n  }\n\n  /**\n   * @return {VectorTileRenderType} The render mode.\n   */\n  getRenderMode() {\n    return this.renderMode_;\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Deprecated.  Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Deprecated.  Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n}\n\nexport default VectorTileLayer;\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {'undefined' | 'loading' | 'ready' | 'error'} State\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\n\n/**\n * A function that takes a {@link import(\"../View.js\").ViewStateLayerStateExtent} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../View.js\").ViewStateLayerStateExtent): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * a simple string (e.g. `'© Acme Inc.'`)\n * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./Source.js\").State} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|null}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ = options.attributionsCollapsible ?? true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./Source.js\").State}\n     */\n    this.state_ = options.state !== undefined ? options.state : 'ready';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = !!options.interpolate;\n\n    /**\n     * @protected\n     * @type {function(import(\"../View.js\").ViewOptions):void}\n     */\n    this.viewResolver = null;\n\n    /**\n     * @protected\n     * @type {function(Error):void}\n     */\n    this.viewRejector = null;\n\n    const self = this;\n    /**\n     * @private\n     * @type {Promise<import(\"../View.js\").ViewOptions>}\n     */\n    this.viewPromise_ = new Promise(function (resolve, reject) {\n      self.viewResolver = resolve;\n      self.viewRejector = reject;\n    });\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   * @api\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   * @api\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default|null} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    return null;\n  }\n\n  /**\n   * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n   */\n  getView() {\n    return this.viewPromise_;\n  }\n\n  /**\n   * Get the state of the source, see {@link import(\"./Source.js\").State} for possible states.\n   * @return {import(\"./Source.js\").State} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {boolean} Use linear interpolation when resampling.\n   */\n  getInterpolate() {\n    return this.interpolate_;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./Source.js\").State} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {Attribution|null} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n  if (!Array.isArray(attributionLike)) {\n    attributionLike = [attributionLike];\n  }\n  return (frameState) => attributionLike;\n}\n\nexport default Source;\n","/**\n * @module ol/net\n */\nimport {getUid} from './util.js';\n\n/**\n * Simple JSONP helper. Supports error callbacks and a custom callback param.\n * The error callback will be called when no JSONP is executed after 10 seconds.\n *\n * @param {string} url Request url. A 'callback' query parameter will be\n *     appended.\n * @param {Function} callback Callback on success.\n * @param {Function} [errback] Callback on error.\n * @param {string} [callbackParam] Custom query parameter for the JSONP\n *     callback. Default is 'callback'.\n */\nexport function jsonp(url, callback, errback, callbackParam) {\n  const script = document.createElement('script');\n  const key = 'olc_' + getUid(callback);\n  function cleanup() {\n    delete window[key];\n    script.parentNode.removeChild(script);\n  }\n  script.async = true;\n  script.src =\n    url +\n    (url.includes('?') ? '&' : '?') +\n    (callbackParam || 'callback') +\n    '=' +\n    key;\n  const timer = setTimeout(function () {\n    cleanup();\n    if (errback) {\n      errback();\n    }\n  }, 10000);\n  window[key] = function (data) {\n    clearTimeout(timer);\n    cleanup();\n    callback(data);\n  };\n  document.head.appendChild(script);\n}\n\nexport class ResponseError extends Error {\n  /**\n   * @param {XMLHttpRequest} response The XHR object.\n   */\n  constructor(response) {\n    const message = 'Unexpected response status: ' + response.status;\n    super(message);\n\n    /**\n     * @type {string}\n     */\n    this.name = 'ResponseError';\n\n    /**\n     * @type {XMLHttpRequest}\n     */\n    this.response = response;\n  }\n}\n\nexport class ClientError extends Error {\n  /**\n   * @param {XMLHttpRequest} client The XHR object.\n   */\n  constructor(client) {\n    super('Failed to issue request');\n\n    /**\n     * @type {string}\n     */\n    this.name = 'ClientError';\n\n    /**\n     * @type {XMLHttpRequest}\n     */\n    this.client = client;\n  }\n}\n\n/**\n * @param {string} url The URL.\n * @return {Promise<Object>} A promise that resolves to the JSON response.\n */\nexport function getJSON(url) {\n  return new Promise(function (resolve, reject) {\n    /**\n     * @param {ProgressEvent<XMLHttpRequest>} event The load event.\n     */\n    function onLoad(event) {\n      const client = event.target;\n      // status will be 0 for file:// urls\n      if (!client.status || (client.status >= 200 && client.status < 300)) {\n        let data;\n        try {\n          data = JSON.parse(client.responseText);\n        } catch (err) {\n          const message = 'Error parsing response text as JSON: ' + err.message;\n          reject(new Error(message));\n          return;\n        }\n        resolve(data);\n        return;\n      }\n\n      reject(new ResponseError(client));\n    }\n\n    /**\n     * @param {ProgressEvent<XMLHttpRequest>} event The error event.\n     */\n    function onError(event) {\n      reject(new ClientError(event.target));\n    }\n\n    const client = new XMLHttpRequest();\n    client.addEventListener('load', onLoad);\n    client.addEventListener('error', onError);\n    client.open('GET', url);\n    client.setRequestHeader('Accept', 'application/json');\n    client.send();\n  });\n}\n\n/**\n * @param {string} base The base URL.\n * @param {string} url The potentially relative URL.\n * @return {string} The full URL.\n */\nexport function resolveUrl(base, url) {\n  if (url.includes('://')) {\n    return url;\n  }\n  return new URL(url, base).href;\n}\n\nlet originalXHR;\nexport function overrideXHR(xhr) {\n  if (typeof XMLHttpRequest !== 'undefined') {\n    originalXHR = XMLHttpRequest;\n  }\n  global.XMLHttpRequest = xhr;\n}\n\nexport function restoreXHR() {\n  global.XMLHttpRequest = originalXHR;\n}\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, {\n  createOrUpdate as createOrUpdateTileRange,\n} from '../TileRange.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {assert} from '../asserts.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {intersectsLinearRing} from '../geom/flat/intersectsextent.js';\nimport {ceil, clamp, floor} from '../math.js';\nimport {toSize} from '../size.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\nimport {DEFAULT_TILE_SIZE} from './common.js';\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nconst DECIMALS = 5;\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile~TileSource} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<number|import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(\n      isSorted(\n        this.resolutions_,\n        /**\n         * @param {number} a First resolution\n         * @param {number} b Second resolution\n         * @return {number} Comparison result\n         */\n        (a, b) => b - a,\n        true,\n      ),\n      '`resolutions` must be sorted in descending order',\n    );\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(\n        this.origins_.length == this.resolutions_.length,\n        'Number of `origins` and `resolutions` must be equal',\n      );\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined && !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      'Either `origin` or `origins` must be configured, never both',\n    );\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(\n        this.tileSizes_.length == this.resolutions_.length,\n        'Number of `tileSizes` and `resolutions` must be equal',\n      );\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ =\n      options.tileSize !== undefined\n        ? options.tileSize\n        : !this.tileSizes_\n          ? DEFAULT_TILE_SIZE\n          : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      'Either `tileSize` or `tileSizes` must be configured, never both',\n    );\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = [0, 0, 0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map((size, z) => {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]),\n          Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]),\n          Math.max(size[1] - 1, -1),\n        );\n        if (extent) {\n          const restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n          tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n          tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n          tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n          tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n        }\n        return tileRange;\n      });\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(\n    tileCoord,\n    callback,\n    tempTileRange,\n    tempExtent,\n  ) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, tempExtent);\n    }\n    while (z >= this.minZoom) {\n      if (x !== undefined && y !== undefined) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, tempTileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(\n          tileCoordExtent,\n          z,\n          tempTileRange,\n        );\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    return this.origins_[z];\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, tempTileRange, tempExtent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(\n          minX,\n          minX + 1,\n          minY,\n          minY + 1,\n          tempTileRange,\n        );\n      }\n      const tileCoordExtent = this.getTileCoordExtent(\n        tileCoord,\n        tempExtent || this.tmpExtent_,\n      );\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent,\n        tileCoord[0] + 1,\n        tempTileRange,\n      );\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileRangeForTileCoordAndZ(tileCoord, z, tempTileRange) {\n    if (z > this.maxZoom || z < this.minZoom) {\n      return null;\n    }\n\n    const tileCoordZ = tileCoord[0];\n    const tileCoordX = tileCoord[1];\n    const tileCoordY = tileCoord[2];\n\n    if (z === tileCoordZ) {\n      return createOrUpdateTileRange(\n        tileCoordX,\n        tileCoordY,\n        tileCoordX,\n        tileCoordY,\n        tempTileRange,\n      );\n    }\n\n    if (this.zoomFactor_) {\n      const factor = Math.pow(this.zoomFactor_, z - tileCoordZ);\n      const minX = Math.floor(tileCoordX * factor);\n      const minY = Math.floor(tileCoordY * factor);\n      if (z < tileCoordZ) {\n        return createOrUpdateTileRange(minX, minX, minY, minY, tempTileRange);\n      }\n\n      const maxX = Math.floor(factor * (tileCoordX + 1)) - 1;\n      const maxY = Math.floor(factor * (tileCoordY + 1)) - 1;\n      return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n    }\n\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    return this.getTileRangeForExtentAndZ(tileCoordExtent, z, tempTileRange);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, tempTileRange) {\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tmpTileCoord);\n    const minX = tmpTileCoord[1];\n    const minY = tmpTileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tmpTileCoord);\n    const maxX = tmpTileCoord[1];\n    const maxY = tmpTileCoord[2];\n    return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, tempExtent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, tempExtent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0],\n      coordinate[1],\n      resolution,\n      false,\n      opt_tileCoord,\n    );\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(\n    x,\n    y,\n    resolution,\n    reverseIntersectionPolicy,\n    opt_tileCoord,\n  ) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (scale * (x - origin[0])) / resolution / tileSize[0];\n    let tileCoordY = (scale * (origin[1] - y)) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (x - origin[0]) / resolution / tileSize[0];\n    let tileCoordY = (origin[1] - y) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Integer zoom level, e.g. the result of a `getZForResolution()` method call\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0],\n      coordinate[1],\n      z,\n      false,\n      opt_tileCoord,\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an {@link import(\"../size.js\").Size}, run the result through {@link module:ol/size.toSize}.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    }\n    return this.tileSizes_[z];\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default|null} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return this.extent_\n        ? this.getTileRangeForExtentAndZ(this.extent_, z)\n        : null;\n    }\n    return this.fullTileRanges_[z];\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number|import(\"../array.js\").NearestDirectionFunction} [opt_direction]\n   *     If 0, the nearest resolution will be used.\n   *     If 1, the nearest higher resolution (lower Z) will be used. If -1, the\n   *     nearest lower resolution (higher Z) will be used. Default is 0.\n   *     Use a {@link module:ol/array~NearestDirectionFunction} for more precise control.\n   *\n   * For example to change tile Z at the midpoint of zoom levels\n   * ```js\n   * function(value, high, low) {\n   *   return value - low * Math.sqrt(high / low);\n   * }\n   * ```\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(\n      this.resolutions_,\n      resolution,\n      opt_direction || 0,\n    );\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * The tile with the provided tile coordinate intersects the given viewport.\n   * @param {import('../tilecoord.js').TileCoord} tileCoord Tile coordinate.\n   * @param {Array<number>} viewport Viewport as returned from {@link module:ol/extent.getRotatedViewport}.\n   * @return {boolean} The tile with the provided tile coordinate intersects the given viewport.\n   */\n  tileCoordIntersectsViewport(tileCoord, viewport) {\n    return intersectsLinearRing(\n      viewport,\n      0,\n      viewport.length,\n      2,\n      this.getTileCoordExtent(tileCoord),\n    );\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\nexport default TileGrid;\n","/**\n * @module ol/tilegrid\n */\nimport {\n  containsCoordinate,\n  createOrUpdate,\n  getCorner,\n  getHeight,\n  getWidth,\n} from './extent.js';\nimport {METERS_PER_UNIT, get as getProjection} from './proj.js';\nimport {toSize} from './size.js';\nimport TileGrid from './tilegrid/TileGrid.js';\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\n\nexport {TileGrid};\nexport {default as WMTS} from './tilegrid/WMTS.js';\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil(\n      (projectionExtent[0] - center[0]) / worldWidth,\n    );\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  }\n  return tileCoord;\n}\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, maxZoom, tileSize, corner) {\n  corner = corner !== undefined ? corner : 'top-left';\n\n  const resolutions = resolutionsFromExtent(extent, maxZoom, tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: tileSize,\n  });\n}\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions} [options] Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(options) {\n  const xyzOptions = options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize,\n      xyzOptions.maxResolution,\n    ),\n  };\n  return new TileGrid(gridOptions);\n}\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number} [maxResolution] Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, maxZoom, tileSize, maxResolution) {\n  maxZoom = maxZoom !== undefined ? maxZoom : DEFAULT_MAX_ZOOM;\n  tileSize = toSize(tileSize !== undefined ? tileSize : DEFAULT_TILE_SIZE);\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  maxResolution =\n    maxResolution > 0\n      ? maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, maxZoom, tileSize, corner) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, maxZoom, tileSize, corner);\n}\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half =\n      (180 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/uri\n */\n\nimport {modulo} from './math.js';\nimport {hashZXY} from './tilecoord.js';\n\n/**\n * Appends query parameters to a URI.\n *\n * @param {string} uri The original URI, which may already have query data.\n * @param {!Object} params An object where keys are URI-encoded parameter keys,\n *     and the values are arbitrary types or arrays.\n * @return {string} The new URI.\n */\nexport function appendParams(uri, params) {\n  /** @type {Array<string>} */\n  const keyParams = [];\n  // Skip any null or undefined parameter values\n  Object.keys(params).forEach(function (k) {\n    if (params[k] !== null && params[k] !== undefined) {\n      keyParams.push(k + '=' + encodeURIComponent(params[k]));\n    }\n  });\n  const qs = keyParams.join('&');\n  // remove any trailing ? or &\n  uri = uri.replace(/[?&]$/, '');\n  // append ? or & depending on whether uri has existing parameters\n  uri += uri.includes('?') ? '&' : '?';\n  return uri + qs;\n}\n\nconst zRegEx = /\\{z\\}/g;\nconst xRegEx = /\\{x\\}/g;\nconst yRegEx = /\\{y\\}/g;\nconst dashYRegEx = /\\{-y\\}/g;\n\n/**\n * @param {string} template The URL template.  Should have `{x}`, `{y}`, and `{z}` placeholders.  If\n * the template has a `{-y}` placeholder, the `maxY` parameter must be supplied.\n * @param {number} z The tile z coordinate.\n * @param {number} x The tile x coordinate.\n * @param {number} y The tile y coordinate.\n * @param {number} [maxY] The maximum y coordinate at the given z level.\n * @return {string} The URL.\n */\nexport function renderXYZTemplate(template, z, x, y, maxY) {\n  return template\n    .replace(zRegEx, z.toString())\n    .replace(xRegEx, x.toString())\n    .replace(yRegEx, y.toString())\n    .replace(dashYRegEx, function () {\n      if (maxY === undefined) {\n        throw new Error(\n          'If the URL template has a {-y} placeholder, the grid extent must be known',\n        );\n      }\n      return (maxY - y).toString();\n    });\n}\n\n/**\n * @param {Array<string>} urls List of URLs.\n * @param {number} z The tile z coordinate.\n * @param {number} x The tile x coordinate.\n * @param {number} y The tile y coordinate.\n * @return {string} The chosen URL.\n */\nexport function pickUrl(urls, z, x, y) {\n  const hash = hashZXY(z, x, y);\n  const index = modulo(hash, urls.length);\n  return urls[index];\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","/**\n * @module ol/tileurlfunction\n */\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\nimport {renderXYZTemplate} from './uri.js';\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default|null} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      let maxY;\n      const z = tileCoord[0];\n      if (tileGrid) {\n        // The `{-y}` placeholder only works for sources that have a tile grid at construction\n        const range = tileGrid.getFullTileRange(z);\n        if (range) {\n          maxY = range.getHeight() - 1;\n        }\n      }\n      return renderXYZTemplate(template, z, tileCoord[1], tileCoord[2], maxY);\n    }\n  );\n}\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      const h = tileCoordHash(tileCoord);\n      const index = modulo(h, tileUrlFunctions.length);\n      return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n    }\n  );\n}\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n","/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport {scale as scaleSize, toSize} from '../size.js';\nimport {withinExtentAndZ} from '../tilecoord.js';\nimport {\n  getForProjection as getTileGridForProjection,\n  wrapX,\n} from '../tilegrid.js';\nimport {abstract, getUid} from '../util.js';\nimport Source from './Source.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./TileEventType\").TileSourceEventTypes, TileSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./TileEventType\").TileSourceEventTypes, Return>} TileSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Deprecated.  Use the cacheSize option on the layer instead.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n *\n * @template {import(\"../Tile.js\").default} [TileType=import(\"../Tile.js\").default]\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX,\n      interpolate: options.interpolate,\n    });\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {TileSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ =\n      options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n\n    /**\n     * @type {import(\"../tilegrid/TileGrid.js\").default|null}\n     * @protected\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    const tileSize = [256, 256];\n    if (this.tileGrid) {\n      toSize(this.tileGrid.getTileSize(this.tileGrid.getMinZoom()), tileSize);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || getUid(this);\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    };\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number|import(\"../array.js\").NearestDirectionFunction}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   * @override\n   */\n  getResolutions(projection) {\n    const tileGrid = projection\n      ? this.getTileGridForProjection(projection)\n      : this.tileGrid;\n    if (!tileGrid) {\n      return null;\n    }\n    return tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {TileType|null} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default|null} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    }\n    return this.tileGrid;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    }\n    return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, projection) {\n    const gridProjection =\n      projection !== undefined ? projection : this.getProjection();\n    const tileGrid =\n      projection !== undefined\n        ? this.getTileGridForProjection(gridProjection)\n        : this.tileGrid || this.getTileGridForProjection(gridProjection);\n    if (this.getWrapX() && gridProjection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, gridProjection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached reprojected tiles from the source. The next render cycle will create new tiles.\n   * @api\n   */\n  clear() {}\n\n  /**\n   * @override\n   */\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n}\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n  }\n}\n\nexport default TileSource;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error. Note that this is not the\n   * right place to re-fetch tiles. See {@link module:ol/ImageTile~ImageTile#load}\n   * for details.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n\n/**\n * @typedef {'tileloadstart'|'tileloadend'|'tileloaderror'} TileSourceEventTypes\n */\n","/**\n * @module ol/source/UrlTile\n */\nimport TileState from '../TileState.js';\nimport {createFromTemplates} from '../tileurlfunction.js';\nimport {expandUrl} from '../uri.js';\nimport {getUid} from '../util.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileEventType from './TileEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Deprecated.  Use the cacheSize option on the layer instead.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Deprecated.  Use an ImageTile source and provide a function\n * for the url option instead.\n * @property {string} [url] Url.\n * @property {Array<string>} [urls] Urls.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @deprecated Use the ol/source/ImageTile.js instead.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate: options.interpolate,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ =\n      this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    if (options.tileUrlFunction) {\n      this.tileUrlFunction = options.tileUrlFunction;\n    }\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n      ? this.tileUrlFunction.bind(this)\n      : this.tileUrlFunction;\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n            ? TileEventType.TILELOADEND\n            : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string} [key] Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = expandUrl(url);\n    this.urls = urls;\n    this.setUrls(urls);\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string|undefined} Tile URL.\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n  }\n}\n\nexport default UrlTile;\n","/**\n * @module ol/featureloader\n */\n\n/**\n *\n * @type {boolean}\n * @private\n */\nlet withCredentials = false;\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * load features.\n *\n * This function takes up to 5 arguments. These are an {@link module:ol/extent~Extent} representing\n * the area to be loaded, a `{number}` representing the resolution (map units per pixel), a\n * {@link module:ol/proj/Projection~Projection} for the projection, an optional success callback that should get\n * the loaded features passed as an argument and an optional failure callback with no arguments. If\n * the callbacks are not used, the corresponding vector source will not fire `'featuresloadend'` and\n * `'featuresloaderror'` events. `this` within the function is bound to the\n * {@link module:ol/source/Vector~VectorSource} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n *\n * @template {import(\"./Feature.js\").FeatureLike} [FeatureType=import(\"./Feature.js\").FeatureLike]\n * @typedef {(\n *           extent: import(\"./extent.js\").Extent,\n *           resolution: number,\n *           projection: import(\"./proj/Projection.js\").default,\n *           success?: (features: Array<FeatureType>) => void,\n *           failure?: () => void) => void} FeatureLoader\n * @api\n */\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection~Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n/**\n * @template {import(\"./Feature.js\").FeatureLike} [FeatureType=import(\"./Feature.js\").default]\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default<FeatureType>} format Feature format.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {function(Array<FeatureType>, import(\"./proj/Projection.js\").default): void} success Success\n *      Function called with the loaded features and optionally with the data projection.\n * @param {function(): void} failure Failure\n *      Function called when loading failed.\n */\nexport function loadFeaturesXhr(\n  url,\n  format,\n  extent,\n  resolution,\n  projection,\n  success,\n  failure,\n) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\n    'GET',\n    typeof url === 'function' ? url(extent, resolution, projection) : url,\n    true,\n  );\n  if (format.getType() == 'arraybuffer') {\n    xhr.responseType = 'arraybuffer';\n  }\n  xhr.withCredentials = withCredentials;\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  xhr.onload = function (event) {\n    // status will be 0 for file:// urls\n    if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {\n      const type = format.getType();\n      try {\n        /** @type {Document|Node|Object|string|undefined} */\n        let source;\n        if (type == 'text' || type == 'json') {\n          source = xhr.responseText;\n        } else if (type == 'xml') {\n          source = xhr.responseXML || xhr.responseText;\n        } else if (type == 'arraybuffer') {\n          source = /** @type {ArrayBuffer} */ (xhr.response);\n        }\n        if (source) {\n          success(\n            /** @type {Array<FeatureType>} */\n            (\n              format.readFeatures(source, {\n                extent: extent,\n                featureProjection: projection,\n              })\n            ),\n            format.readProjection(source),\n          );\n        } else {\n          failure();\n        }\n      } catch {\n        failure();\n      }\n    } else {\n      failure();\n    }\n  };\n  /**\n   * @private\n   */\n  xhr.onerror = failure;\n  xhr.send();\n}\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n *\n * @template {import(\"./Feature.js\").FeatureLike} [FeatureType=import(\"./Feature.js\").default]\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default<FeatureType>} format Feature format.\n * @return {FeatureLoader<FeatureType>} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"./proj/Projection.js\").default} projection Projection.\n   * @param {function(Array<FeatureType>): void} [success] Success\n   *      Function called when loading succeeded.\n   * @param {function(): void} [failure] Failure\n   *      Function called when loading failed.\n   * @this {import(\"./source/Vector.js\").default<FeatureType>}\n   */\n  return function (extent, resolution, projection, success, failure) {\n    loadFeaturesXhr(\n      url,\n      format,\n      extent,\n      resolution,\n      projection,\n      /**\n       * @param {Array<FeatureType>} features The loaded features.\n       * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n       * projection.\n       */\n      (features, dataProjection) => {\n        this.addFeatures(features);\n        if (success !== undefined) {\n          success(features);\n        }\n      },\n      () => {\n        this.changed();\n        if (failure !== undefined) {\n          failure();\n        }\n      },\n    );\n  };\n}\n\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n  withCredentials = xhrWithCredentials;\n}\n","/**\n * @module ol/VectorRenderTile\n */\nimport Tile from './Tile.js';\nimport {createCanvasContext2D, releaseCanvas} from './dom.js';\nimport {getUid} from './util.js';\n\n/**\n * @typedef {Object} ReplayState\n * @property {boolean} dirty Dirty.\n * @property {null|import(\"./render.js\").OrderFunction} renderedRenderOrder RenderedRenderOrder.\n * @property {number} renderedTileRevision RenderedTileRevision.\n * @property {number} renderedResolution RenderedResolution.\n * @property {number} renderedRevision RenderedRevision.\n * @property {number} renderedTileResolution RenderedTileResolution.\n * @property {number} renderedTileZ RenderedTileZ.\n */\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nconst canvasPool = [];\n\nclass VectorRenderTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {import(\"./tilecoord.js\").TileCoord} urlTileCoord Wrapped tile coordinate for source urls.\n   * @param {function(VectorRenderTile):Array<import(\"./VectorTile\").default>} getSourceTiles Function.\n   * @param {function(VectorRenderTile):void} removeSourceTiles Function.\n   */\n  constructor(\n    tileCoord,\n    state,\n    urlTileCoord,\n    getSourceTiles,\n    removeSourceTiles,\n  ) {\n    super(tileCoord, state, {transition: 0});\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D|null}\n     */\n    this.context_ = null;\n\n    /**\n     * Executor groups. Read/written by the renderer.\n     * @type {Object<string, Array<import(\"./render/canvas/ExecutorGroup.js\").default>>}\n     */\n    this.executorGroups = {};\n\n    /**\n     * Number of loading source tiles. Read/written by the source.\n     * @type {number}\n     */\n    this.loadingSourceTiles = 0;\n\n    /**\n     * @type {Object<string, ImageData>}\n     */\n    this.hitDetectionImageData = {};\n\n    /**\n     * @private\n     * @type {!Object<string, ReplayState>}\n     */\n    this.replayState_ = {};\n\n    /**\n     * @type {Array<import(\"./VectorTile.js\").default>}\n     */\n    this.sourceTiles = [];\n\n    /**\n     * @type {Object<string, boolean>}\n     */\n    this.errorTileKeys = {};\n\n    /**\n     * @type {number}\n     */\n    this.wantedResolution;\n\n    /**\n     * @type {!function():Array<import(\"./VectorTile.js\").default>}\n     */\n    this.getSourceTiles = getSourceTiles.bind(undefined, this);\n\n    /**\n     * @type {!function(VectorRenderTile):void}\n     * @private\n     */\n    this.removeSourceTiles_ = removeSourceTiles;\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord = urlTileCoord;\n  }\n\n  /**\n   * @return {CanvasRenderingContext2D} The rendering context.\n   */\n  getContext() {\n    if (!this.context_) {\n      this.context_ = createCanvasContext2D(1, 1, canvasPool);\n    }\n    return this.context_;\n  }\n\n  /**\n   * @return {boolean} Tile has a rendering context.\n   */\n  hasContext() {\n    return !!this.context_;\n  }\n\n  /**\n   * Get the Canvas for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.hasContext() ? this.getContext().canvas : null;\n  }\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {ReplayState} The replay state.\n   */\n  getReplayState(layer) {\n    const key = getUid(layer);\n    if (!(key in this.replayState_)) {\n      this.replayState_[key] = {\n        dirty: false,\n        renderedRenderOrder: null,\n        renderedResolution: NaN,\n        renderedRevision: -1,\n        renderedTileResolution: NaN,\n        renderedTileRevision: -1,\n        renderedTileZ: -1,\n      };\n    }\n    return this.replayState_[key];\n  }\n\n  /**\n   * Load the tile.\n   * @override\n   */\n  load() {\n    this.getSourceTiles();\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   * @override\n   */\n  release() {\n    if (this.context_) {\n      releaseCanvas(this.context_);\n      canvasPool.push(this.context_.canvas);\n      this.context_ = null;\n    }\n    this.removeSourceTiles_(this);\n    this.sourceTiles.length = 0;\n    super.release();\n  }\n}\n\nexport default VectorRenderTile;\n","/**\n * @module ol/source/VectorTile\n */\n\nimport TileState from '../TileState.js';\nimport VectorRenderTile from '../VectorRenderTile.js';\nimport Tile from '../VectorTile.js';\nimport EventType from '../events/EventType.js';\nimport {\n  buffer as bufferExtent,\n  getIntersection,\n  intersects,\n} from '../extent.js';\nimport {loadFeaturesXhr} from '../featureloader.js';\nimport {isEmpty} from '../obj.js';\nimport {toSize} from '../size.js';\nimport TileGrid from '../tilegrid/TileGrid.js';\nimport {DEFAULT_MAX_ZOOM} from '../tilegrid/common.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\nimport UrlTile from './UrlTile.js';\n\n/**\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../render/Feature.js\").default]\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least twice the number of tiles in the viewport.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {import(\"../format/Feature.js\").default<FeatureType>} [format] Feature format for tiles. Used and required by the default.\n * @property {boolean} [overlaps=true] This source may have overlapping geometries. Setting this\n * to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection of the tile grid.\n * @property {import(\"./Source.js\").State} [state] Source state.\n * @property {typeof import(\"../VectorTile.js\").default} [tileClass] Class used to instantiate tiles.\n * Default is {@link module:ol/VectorTile~VectorTile}.\n * @property {number} [maxZoom=22] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number|import(\"../size.js\").Size} [tileSize=512] Optional tile size. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction]\n * Optional function to load a tile given a URL. Could look like this for pbf tiles:\n * ```js\n * function(tile, url) {\n *   tile.setLoader(function(extent, resolution, projection) {\n *     fetch(url).then(function(response) {\n *       response.arrayBuffer().then(function(data) {\n *         const format = tile.getFormat() // ol/format/MVT configured as source format\n *         const features = format.readFeatures(data, {\n *           extent: extent,\n *           featureProjection: projection\n *         });\n *         tile.setFeatures(features);\n *       });\n *     });\n *   });\n * }\n * ```\n * If you do not need extent, resolution and projection to get the features for a tile (e.g.\n * for GeoJSON tiles), your `tileLoadFunction` does not need a `setLoader()` call. Only make sure\n * to call `setFeatures()` on the tile:\n * ```js\n * const format = new GeoJSON({featureProjection: map.getView().getProjection()});\n * async function tileLoadFunction(tile, url) {\n *   const response = await fetch(url);\n *   const data = await response.json();\n *   tile.setFeatures(format.readFeatures(data));\n * }\n * ```\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {number} [transition] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * When set to `false`, only one world\n * will be rendered. When set to `true`, tiles will be wrapped horizontally to\n * render multiple worlds.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=1]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Class for layer sources providing vector data divided into a tile grid, to be\n * used with {@link module:ol/layer/VectorTile~VectorTileLayer}. Although this source receives tiles\n * with vector features from the server, it is not meant for feature editing.\n * Features are optimized for rendering, their geometries are clipped at or near\n * tile boundaries and simplified for a view resolution. See\n * {@link module:ol/source/Vector~VectorSource} for vector sources that are suitable for feature\n * editing.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../render/Feature.js\").default]\n */\nclass VectorTile extends UrlTile {\n  /**\n   * @param {!Options<FeatureType>} options Vector tile options.\n   */\n  constructor(options) {\n    const projection = options.projection || 'EPSG:3857';\n\n    const extent = options.extent || extentFromProjection(projection);\n\n    const tileGrid =\n      options.tileGrid ||\n      createXYZ({\n        extent: extent,\n        maxResolution: options.maxResolution,\n        maxZoom: options.maxZoom !== undefined ? options.maxZoom : 22,\n        minZoom: options.minZoom,\n        tileSize: options.tileSize || 512,\n      });\n\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      cacheSize: options.cacheSize,\n      interpolate: true,\n      projection: projection,\n      state: options.state,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultLoadFunction,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX === undefined ? true : options.wrapX,\n      transition: options.transition,\n      zDirection: options.zDirection === undefined ? 1 : options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default<FeatureType>|null}\n     */\n    this.format_ = options.format ? options.format : null;\n\n    /**\n     * @type {Object<string, Array<string>>}\n     * @private\n     */\n    this.tileKeysBySourceTileUrl_ = {};\n\n    /**\n     @type {Object<string, Tile<FeatureType>>}\n     */\n    this.sourceTiles_ = {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps == undefined ? true : options.overlaps;\n\n    /**\n     * @protected\n     * @type {typeof import(\"../VectorTile.js\").default}\n     */\n    this.tileClass = options.tileClass ? options.tileClass : Tile;\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGrids_ = {};\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection\").default} projection Projection.\n   * @param {VectorRenderTile} tile Vector render tile.\n   * @return {Array<import(\"../VectorTile\").default>} Tile keys.\n   */\n  getSourceTiles(pixelRatio, projection, tile) {\n    if (tile.getState() === TileState.IDLE) {\n      tile.setState(TileState.LOADING);\n      const urlTileCoord = tile.wrappedTileCoord;\n      const tileGrid = this.getTileGridForProjection(projection);\n      const extent = tileGrid.getTileCoordExtent(urlTileCoord);\n      const z = urlTileCoord[0];\n      const resolution = tileGrid.getResolution(z);\n      // make extent 1 pixel smaller so we don't load tiles for < 0.5 pixel render space\n      bufferExtent(extent, -resolution, extent);\n      const sourceTileGrid = this.tileGrid;\n      const sourceExtent = sourceTileGrid.getExtent();\n      if (sourceExtent) {\n        getIntersection(extent, sourceExtent, extent);\n      }\n      const sourceZ = sourceTileGrid.getZForResolution(\n        resolution,\n        this.zDirection,\n      );\n\n      sourceTileGrid.forEachTileCoord(extent, sourceZ, (sourceTileCoord) => {\n        const tileUrl = this.tileUrlFunction(\n          sourceTileCoord,\n          pixelRatio,\n          projection,\n        );\n        if (!this.sourceTiles_[tileUrl]) {\n          this.sourceTiles_[tileUrl] = new this.tileClass(\n            sourceTileCoord,\n            tileUrl ? TileState.IDLE : TileState.EMPTY,\n            tileUrl,\n            this.format_,\n            this.tileLoadFunction,\n          );\n        }\n        const sourceTile = this.sourceTiles_[tileUrl];\n        tile.sourceTiles.push(sourceTile);\n        if (!this.tileKeysBySourceTileUrl_[tileUrl]) {\n          this.tileKeysBySourceTileUrl_[tileUrl] = [];\n        }\n        this.tileKeysBySourceTileUrl_[tileUrl].push(tile.getKey());\n        const sourceTileState = sourceTile.getState();\n        if (sourceTileState < TileState.LOADED) {\n          const listenChange = (event) => {\n            this.handleTileChange(event);\n            const state = sourceTile.getState();\n            if (state === TileState.LOADED || state === TileState.ERROR) {\n              const sourceTileKey = sourceTile.getKey();\n              if (sourceTileKey in tile.errorTileKeys) {\n                if (sourceTile.getState() === TileState.LOADED) {\n                  delete tile.errorTileKeys[sourceTileKey];\n                }\n              } else {\n                tile.loadingSourceTiles--;\n              }\n              if (state === TileState.ERROR) {\n                tile.errorTileKeys[sourceTileKey] = true;\n              } else {\n                sourceTile.removeEventListener(EventType.CHANGE, listenChange);\n              }\n              if (tile.loadingSourceTiles === 0) {\n                tile.setState(\n                  isEmpty(tile.errorTileKeys)\n                    ? TileState.LOADED\n                    : TileState.ERROR,\n                );\n              }\n            }\n          };\n          sourceTile.addEventListener(EventType.CHANGE, listenChange);\n          tile.loadingSourceTiles++;\n        }\n        if (sourceTileState === TileState.IDLE) {\n          sourceTile.extent =\n            sourceTileGrid.getTileCoordExtent(sourceTileCoord);\n          sourceTile.projection = projection;\n          sourceTile.resolution = sourceTileGrid.getResolution(\n            sourceTileCoord[0],\n          );\n          sourceTile.load();\n        }\n      });\n      if (!tile.loadingSourceTiles) {\n        tile.setState(\n          tile.sourceTiles.some(\n            (sourceTile) => sourceTile.getState() === TileState.ERROR,\n          )\n            ? TileState.ERROR\n            : TileState.LOADED,\n        );\n      }\n    }\n\n    return tile.sourceTiles;\n  }\n\n  /**\n   * @param {VectorRenderTile} tile Vector render tile.\n   */\n  removeSourceTiles(tile) {\n    const tileKey = tile.getKey();\n    const sourceTiles = tile.sourceTiles;\n    for (let i = 0, ii = sourceTiles.length; i < ii; ++i) {\n      const sourceTileUrl = sourceTiles[i].getTileUrl();\n      if (!this.tileKeysBySourceTileUrl_[sourceTileUrl]) {\n        return;\n      }\n      const index =\n        this.tileKeysBySourceTileUrl_[sourceTileUrl].indexOf(tileKey);\n      if (index === -1) {\n        continue;\n      }\n      this.tileKeysBySourceTileUrl_[sourceTileUrl].splice(index, 1);\n      if (this.tileKeysBySourceTileUrl_[sourceTileUrl].length === 0) {\n        delete this.tileKeysBySourceTileUrl_[sourceTileUrl];\n        delete this.sourceTiles_[sourceTileUrl];\n      }\n    }\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!VectorRenderTile} Tile.\n   * @override\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const tileCoord = [z, x, y];\n    let urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection,\n    );\n    const sourceExtent = this.getTileGrid().getExtent();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (urlTileCoord && sourceExtent) {\n      const tileExtent = tileGrid.getTileCoordExtent(urlTileCoord);\n      // make extent 1 pixel smaller so we don't load tiles for < 0.5 pixel render space\n      bufferExtent(tileExtent, -tileGrid.getResolution(z), tileExtent);\n      if (!intersects(sourceExtent, tileExtent)) {\n        urlTileCoord = null;\n      }\n    }\n    let empty = true;\n    if (urlTileCoord !== null) {\n      const sourceTileGrid = this.tileGrid;\n      const resolution = tileGrid.getResolution(z);\n      const sourceZ = sourceTileGrid.getZForResolution(resolution, 1);\n      // make extent 1 pixel smaller so we don't load tiles for < 0.5 pixel render space\n      const extent = tileGrid.getTileCoordExtent(urlTileCoord);\n      bufferExtent(extent, -resolution, extent);\n      sourceTileGrid.forEachTileCoord(extent, sourceZ, (sourceTileCoord) => {\n        empty =\n          empty &&\n          !this.tileUrlFunction(sourceTileCoord, pixelRatio, projection);\n      });\n    }\n    const newTile = new VectorRenderTile(\n      tileCoord,\n      empty ? TileState.EMPTY : TileState.IDLE,\n      urlTileCoord,\n      this.getSourceTiles.bind(this, pixelRatio, projection),\n      this.removeSourceTiles.bind(this),\n    );\n    newTile.key = this.getKey();\n    return newTile;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   * @override\n   */\n  getTileGridForProjection(projection) {\n    const code = projection.getCode();\n    let tileGrid = this.tileGrids_[code];\n    if (!tileGrid) {\n      // A tile grid that matches the tile size of the source tile grid is more\n      // likely to have 1:1 relationships between source tiles and rendered tiles.\n      const sourceTileGrid = this.tileGrid;\n      const resolutions = sourceTileGrid.getResolutions().slice();\n      const origins = resolutions.map(function (resolution, z) {\n        return sourceTileGrid.getOrigin(z);\n      });\n      const tileSizes = resolutions.map(function (resolution, z) {\n        return sourceTileGrid.getTileSize(z);\n      });\n      const length = DEFAULT_MAX_ZOOM + 1;\n      for (let z = resolutions.length; z < length; ++z) {\n        resolutions.push(resolutions[z - 1] / 2);\n        origins.push(origins[z - 1]);\n        tileSizes.push(tileSizes[z - 1]);\n      }\n      tileGrid = new TileGrid({\n        extent: sourceTileGrid.getExtent(),\n        origins: origins,\n        resolutions: resolutions,\n        tileSizes: tileSizes,\n      });\n      this.tileGrids_[code] = tileGrid;\n    }\n    return tileGrid;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   * @override\n   */\n  getTilePixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   * @override\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    return [\n      Math.round(tileSize[0] * pixelRatio),\n      Math.round(tileSize[1] * pixelRatio),\n    ];\n  }\n\n  /**\n   * @param {boolean} overlaps The source has overlapping geometries.\n   */\n  setOverlaps(overlaps) {\n    this.overlaps_ = overlaps;\n    this.changed();\n  }\n}\n\nexport default VectorTile;\n\n/**\n * Sets the loader for a tile.\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../render/Feature.js\").default]\n * @param {import(\"../VectorTile.js\").default<FeatureType>} tile Vector tile.\n * @param {string} url URL.\n */\nexport function defaultLoadFunction(tile, url) {\n  tile.setLoader(\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     */\n    function (extent, resolution, projection) {\n      loadFeaturesXhr(\n        url,\n        tile.getFormat(),\n        extent,\n        resolution,\n        projection,\n        tile.onLoad.bind(tile),\n        tile.onError.bind(tile),\n      );\n    },\n  );\n}\n","import {stylefunction} from 'ol-mapbox-style';\nimport TileQueue, {\n  getTilePriority as tilePriorityFunction,\n} from '../src/ol/TileQueue.js';\nimport MVT from '../src/ol/format/MVT.js';\nimport {inView} from '../src/ol/layer/Layer.js';\nimport VectorTileLayer from '../src/ol/layer/VectorTile.js';\nimport {get} from '../src/ol/proj.js';\nimport VectorTileSource from '../src/ol/source/VectorTile.js';\n\nconst key = 'get_your_own_D6rA4zTHduk6KOKTXzGB';\n\n/** @type {any} */\nconst worker = self;\n\nlet frameState, pixelRatio, rendererTransform;\nconst canvas = new OffscreenCanvas(1, 1);\n// OffscreenCanvas does not have a style, so we mock it\ncanvas.style = {};\nconst context = canvas.getContext('2d');\n\nconst sources = {\n  landcover: new VectorTileSource({\n    maxZoom: 9,\n    format: new MVT(),\n    url: 'https://api.maptiler.com/tiles/landcover/{z}/{x}/{y}.pbf?key=' + key,\n  }),\n  contours: new VectorTileSource({\n    minZoom: 9,\n    maxZoom: 14,\n    format: new MVT(),\n    url: 'https://api.maptiler.com/tiles/contours/{z}/{x}/{y}.pbf?key=' + key,\n  }),\n  maptiler_planet: new VectorTileSource({\n    format: new MVT(),\n    maxZoom: 14,\n    url: 'https://api.maptiler.com/tiles/v3/{z}/{x}/{y}.pbf?key=' + key,\n  }),\n};\nconst layers = [];\n\n// Font replacement so we do not need to load web fonts in the worker\nfunction getFont(font) {\n  return font[0].replace('Noto Sans', 'serif').replace('Roboto', 'sans-serif');\n}\n\nfunction loadStyles() {\n  const styleUrl =\n    'https://api.maptiler.com/maps/streets-v2/style.json?key=' + key;\n\n  fetch(styleUrl)\n    .then((data) => data.json())\n    .then((styleJson) => {\n      const buckets = [];\n      let currentSource;\n      styleJson.layers.forEach((layer) => {\n        if (!layer.source) {\n          return;\n        }\n        if (currentSource !== layer.source) {\n          currentSource = layer.source;\n          buckets.push({\n            source: layer.source,\n            layers: [],\n          });\n        }\n        buckets[buckets.length - 1].layers.push(layer.id);\n      });\n\n      const spriteUrl =\n        styleJson.sprite + (pixelRatio > 1 ? '@2x' : '') + '.json';\n      const spriteImageUrl =\n        styleJson.sprite + (pixelRatio > 1 ? '@2x' : '') + '.png';\n      fetch(spriteUrl)\n        .then((data) => data.json())\n        .then((spriteJson) => {\n          buckets.forEach((bucket) => {\n            const source = sources[bucket.source];\n            if (!source) {\n              return;\n            }\n            const layer = new VectorTileLayer({\n              declutter: true,\n              source,\n              minZoom: source.getTileGrid().getMinZoom(),\n            });\n            layer.getRenderer().useContainer = function (target, transform) {\n              this.containerReused = this.getLayer() !== layers[0];\n              this.canvas = canvas;\n              this.context = context;\n              this.container = {\n                firstElementChild: canvas,\n                style: {\n                  opacity: String(layer.getOpacity()),\n                },\n              };\n              rendererTransform = transform;\n            };\n            stylefunction(\n              layer,\n              styleJson,\n              bucket.layers,\n              undefined,\n              spriteJson,\n              spriteImageUrl,\n              getFont,\n            );\n            layers.push(layer);\n          });\n          worker.postMessage({action: 'requestRender'});\n        });\n    });\n}\n\n// Minimal map-like functionality for rendering\nconst tileQueue = new TileQueue(\n  (tile, tileSourceKey, tileCenter, tileResolution) =>\n    tilePriorityFunction(\n      frameState,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution,\n    ),\n  () => worker.postMessage({action: 'requestRender'}),\n);\n\nconst maxTotalLoading = 8;\nconst maxNewLoads = 2;\n\nworker.addEventListener('message', (event) => {\n  if (event.data.action === 'requestFeatures') {\n    const layersInView = layers.filter((l) =>\n      inView(l.getLayerState(), frameState.viewState),\n    );\n    const observables = layersInView.map((l) =>\n      l.getFeatures(event.data.pixel),\n    );\n    Promise.all(observables).then((res) => {\n      const features = res.flat();\n      worker.postMessage({\n        action: 'getFeatures',\n        features: features.map((e) => e.getProperties()),\n      });\n    });\n    return;\n  }\n\n  if (event.data.action !== 'render') {\n    return;\n  }\n  frameState = event.data.frameState;\n  if (!pixelRatio) {\n    pixelRatio = frameState.pixelRatio;\n    loadStyles();\n  }\n  frameState.tileQueue = tileQueue;\n  frameState.viewState.projection = get('EPSG:3857');\n  frameState.layerStatesArray = layers.map((l) => l.getLayerState());\n  layers.forEach((layer) => {\n    if (inView(layer.getLayerState(), frameState.viewState)) {\n      const renderer = layer.getRenderer();\n      if (!renderer.prepareFrame(frameState)) {\n        return;\n      }\n      if (layer.getDeclutter() && !frameState.declutterTree) {\n        frameState.declutter = {};\n      }\n      renderer.renderFrame(frameState, canvas);\n    }\n  });\n  layers.forEach((layer) => {\n    if (!layer.getRenderer().context) {\n      return;\n    }\n    layer.renderDeclutter(frameState, layer.getLayerState());\n    layer.renderDeferred(frameState);\n  });\n  frameState.postRenderFunctions.forEach((fn) => fn(null, frameState));\n  if (tileQueue.getTilesLoading() < maxTotalLoading) {\n    tileQueue.reprioritize();\n    tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n  }\n  const imageData = canvas.transferToImageBitmap();\n  worker.postMessage(\n    {\n      action: 'rendered',\n      imageData: imageData,\n      transform: rendererTransform,\n      frameState: {\n        viewState: {\n          center: frameState.viewState.center.slice(0),\n          resolution: frameState.viewState.resolution,\n          rotation: frameState.viewState.rotation,\n        },\n        pixelRatio: frameState.pixelRatio,\n        size: frameState.size.slice(0),\n        extent: frameState.extent.slice(0),\n        coordinateToPixelTransform:\n          frameState.coordinateToPixelTransform.slice(0),\n        pixelToCoordinateTransform:\n          frameState.pixelToCoordinateTransform.slice(0),\n      },\n    },\n    [imageData],\n  );\n});\n"],"names":["v8Spec","$version","$root","version","required","type","values","name","metadata","center","value","centerAltitude","zoom","bearing","period","units","pitch","roll","light","sky","projection","terrain","sources","sprite","glyphs","transition","layers","source","source_vector","vector","url","tiles","bounds","length","scheme","xyz","tms","minzoom","maxzoom","attribution","promoteId","volatile","source_raster","raster","tileSize","source_raster_dem","encoding","terrarium","mapbox","custom","redFactor","blueFactor","greenFactor","baseShift","source_geojson","geojson","data","buffer","maximum","minimum","filter","tolerance","cluster","clusterRadius","clusterMaxZoom","clusterMinPoints","clusterProperties","lineMetrics","generateId","source_video","video","urls","coordinates","source_image","image","layer","id","fill","line","symbol","circle","heatmap","hillshade","background","layout","paint","layout_background","visibility","visible","none","layout_fill","expression","interpolated","parameters","layout_circle","layout_heatmap","layout_line","butt","round","square","bevel","miter","requires","layout_symbol","point","auto","never","always","cooperative","map","viewport","width","height","both","tokens","left","right","top","bottom","horizontal","vertical","uppercase","lowercase","layout_raster","layout_hillshade","filter_operator","all","any","has","geometry_type","Point","LineString","Polygon","stops","base","property","identity","exponential","interval","categorical","colorSpace","rgb","lab","hcl","function_stop","anchor","position","color","intensity","exaggeration","paint_fill","paint_line","paint_circle","paint_heatmap","paint_symbol","overridable","paint_raster","linear","nearest","paint_hillshade","paint_background","duration","delay","constant","refProperties","deref","parent","result","k","forEach","ValidationError","constructor","key","message","identifier","this","__line__","extendBy","output","inputs","input","ExpressionParsingError","Error","super","Scope","bindings","concat","get","NullType","kind","NumberType","StringType","BooleanType","ColorType","ProjectionDefinitionType","ObjectType","ValueType","CollatorType","FormattedType","PaddingType","ResolvedImageType","VariableAnchorOffsetCollectionType","array","itemType","N","typeToString","valueMemberTypes","checkSubtype","expected","t","memberType","isValidType","provided","allowedTypes","some","isValidNativeType","Array","isArray","verifyType","sample","Xn","Yn","Zn","t0","t1","t2","t3","deg2rad","Math","PI","rad2deg","constrainAngle","angle","rgbToLab","r","g","b","alpha","x","z","y","xyz2lab","rgb2xyz","l","pow","labToRgb","a","isNaN","lab2xyz","xyz2rgb","parseCssColor","toLowerCase","trim","namedColorsMatch","namedColors","startsWith","test","step","i","parseHex","slice","rgbRegExp","rgbMatch","match","_","rp","f1","gp","f2","bp","f3","ap","argFormat","join","valFormat","maxValue","rgba","parseAlpha","validateNumbers","hslMatch","h","s","hsla","f","n","min","max","hslToRgb","hex","parseInt","padEnd","asPercentage","Number","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","interpolateNumber","from","to","interpolateArray","d","Color","premultiplied","overwriteGetter","parse","Infinity","rgbColor","c","sqrt","atan2","NaN","rgbToHcl","getterKey","lazyValue","Object","defineProperty","toString","interpolate","spaceKey","hue0","chroma0","light0","alphaF","hue1","chroma1","light1","alphaT","hue","chroma","dh","cos","sin","hclToRgb","transparent","Collator","caseSensitive","diacriticSensitive","locale","sensitivity","collator","Intl","usage","compare","lhs","rhs","resolvedLocale","resolvedOptions","VERTICAL_ALIGN_OPTIONS","FormattedSection","text","scale","fontStack","textColor","verticalAlign","Formatted","sections","fromString","unformatted","isEmpty","section","factory","Padding","val","JSON","stringify","RuntimeError","toJSON","Set","VariableAnchorOffsetCollection","anchorValue","offsetValue","fromValues","toValues","push","fx","fy","tx","ty","ResolvedImage","options","available","ProjectionDefinition","validateRGBA","isValue","mixed","item","typeOf","valueToString","String","Literal","args","context","error","expectedType","evaluate","eachChild","outputDefined","types$1","string","number","boolean","object","Assertion","floor","parsed","ctx","fn","every","arg","types","Coercion","Boolean","parseColor","pad","coll","num","geometryTypes","EvaluationContext","globals","feature","featureState","formattedSection","_parseColorCache","availableImages","canonical","geometryType","geometry","canonicalID","properties","cached","ParsingContext","registry","isConstantFunc","path","scope","errors","part","_isConstant","expr","index","_parse","annotate","typeAnnotation","op","Expr","actual","ec","e","keys","Let","binding","Var","boundExpression","At","In","needle","haystack","indexOf","IndexOf","fromIndex","rawIndex","Match","inputType","outputType","cases","outputs","otherwise","labels","labelContext","label","abs","MAX_SAFE_INTEGER","out","Case","branches","Slice","beginIndex","endIndex","findStopLessThanOrEqualTo","lastIndex","currentValue","nextValue","lowerIndex","upperIndex","currentIndex","Step","labelKey","valueKey","stopCount","getDefaultExportFromCjs","__esModule","prototype","hasOwnProperty","call","unitbezier","hasRequiredUnitbezier","unitbezierExports","UnitBezier","p1x","p1y","p2x","p2y","cx","bx","ax","cy","by","ay","sampleCurveX","sampleCurveY","sampleCurveDerivativeX","solveCurveX","epsilon","undefined","x2","d2","solve","requireUnitbezier","Interpolate","operator","interpolation","interpolationFactor","lower","upper","exponentialInterpolation","controlPoints","rest","outputLower","outputUpper","lowerValue","upperValue","difference","progress","Coalesce","parsedArgs","needsAnnotation","requestedImageName","argCount","isComparableType","eqCollate","makeComparison","compareBasic","compareWithCollator","isOrderComparison","Comparison","hasUntypedArgument","lt","rt","Equals","NotEquals","LessThan","GreaterThan","LessThanOrEqual","GreaterThanOrEqual","CollatorExpression","NumberFormat","currency","minFractionDigits","maxFractionDigits","style","minimumFractionDigits","maximumFractionDigits","format","FormatExpression","firstArg","nextTokenMayBeObject","font","includes","lastExpression","content","evaluatedContent","ImageExpression","evaluatedImageName","Length","EXTENT","getTileCoordinates","p","lat","log","tilesAtZoom","getLngLatFromTileCoord","coord","mercatorX","mercatorY","atan","exp","updateBBox","bbox","boxWithinBox","bbox1","bbox2","rayIntersect","p1","p2","pointOnBoundary","x1","y1","y2","segmentIntersectSegment","vectorP","vectorQ","v1","v2","twoSided","lineIntersectPolygon","polygon","ring","j","pointWithinPolygon","rings","trueIfOnBoundary","inside","pointWithinPolygons","polygons","lineStringWithinPolygon","lineStringWithinPolygons","q1","q2","x3","y3","det1","det2","getTilePolygon","getTilePolygons","updatePoint","polyBBox","worldSize","halfWorldSize","shift","getTilePoints","pointBBox","shifts","tilePoints","points","getTileLines","lineBBox","tileLines","tileLine","resetBBox","Within","geometries","polygonsCoords","features","polygonGeometry","tilePolygon","tilePolygons","pointsWithinPolygons","linesWithinPolygons","TinyQueue","_down","_up","pop","peek","pos","current","halfLength","bestChild","quickselect","arr","defaultCompare","m","sd","swap","tmp","compareAreas","area","calculateSignedArea","sum","len","FE","E2","RAD","CheapRuler","coslat","w2","w","kx","ky","distance","dx","wrap","dy","pointOnLine","minX","minY","minI","minT","minDist","sqDist","deg","MinPointsSize","MinLinePointsSize","compareDistPair","getRangeSize","range","isRangeSafe","threshold","splitRange","isLine","size","size1","getBBox","coords","getPolygonBBox","isValidBBox","bboxToBBoxDistance","ruler","pointToLineDistance","nearestPoint","segmentToSegmentDistance","dist1","dist2","lineToLineDistance","line1","range1","line2","range2","dist","pointsToPointsDistance","points1","points2","pointToPolygonDistance","front","back","lineToPolygonDistance","polygonIntersect","poly1","poly2","polygonToPolygonDistance","polygon1","polygon2","currentMiniDist","ring1","len1","ring2","len2","updateQueue","distQueue","miniDist","rangeA","tempDist","updateQueueTwoSets","pointSet1","pointSet2","pointsToPolygonDistance","distPair","newRangesA","pointSetToPointSetDistance","isLine1","isLine2","rangeB","threshold1","threshold2","sublibe","newRangesB","polygonToGeometryDistance","maxRings","ccw","classifyRings","toSimpleGeometry","lineString","Distance","flat","pointPosition","pointToGeometryDistance","linePositions","lineStringToGeometryDistance","expressions$1","CompoundExpression","_evaluate","definition","definitions","availableOverloads","overloads","signature","signatureContext","params","isExpressionConstant","argParseFailed","signatures","stringifySignature","actualTypes","register","obj","v","varargs","isTypeAnnotation","childrenConstant","child","isFeatureConstant","isGlobalPropertyConstant","isStateConstant","success","supportsPropertyExpression","spec","supportsZoomExpression","supportsInterpolation","getType","isFunction$1","heatmapDensity","lineProgress","accumulated","LN2","E","LN10","asin","acos","ceil","binarySearch","isSupportedScript","toUpperCase","StyleExpression","propertySpec","_warningHistory","_evaluator","_defaultValue","default","_enumValues","evaluateWithoutErrorHandling","console","warn","isExpression","createExpression","parser","enum","formatted","padding","projectionDefinition","resolvedImage","variableAnchorOffsetCollection","getExpectedType","ZoomConstantExpression","_styleExpression","isStateDependent","ZoomDependentExpression","zoomStops","interpolationType","createPropertyExpression","expressionInput","isFeatureConstantResult","isZoomConstant","zoomCurve","findZoomCurve","childResult","isExpressionFilter","filterSpec","featureFilter","needGeometry","convertFilter$1","compiled","err","globalProperties","geometryNeeded","filters","convertComparisonOp$1","convertNegation","convertInOp$1","convertHasOp$1","sort","convertLiteral","convertFunction","splice","convertIdentityFunction","zoomAndFeatureDependent","featureDependent","zoomDependent","stop","convertTokenString","featureFunctionParameters","featureFunctionStops","functionType","getFunctionType","getInterpolateOperator","appendStopPair","convertPropertyFunction","fixupDegenerateStepCurve","convertZoomAndPropertyFunction","isStep","convertZoomFunction","getFallback","defaultValue","curve","re","exec","literal","validateConstants","constants","unbundle","valueOf","deepUnbundle","unbundledValue","validateObject","elementSpecs","valueSpec","elementValidators","objectElementValidators","styleSpec","validateSpec","objectKey","elementSpecKey","split","elementSpec","validateElement","validateArray","arraySpec","validateArrayElement","arrayElementValidator","arrayElementSpec","function","arrayIndex","validateNumber","validateFunction","functionValueSpec","stopKeyType","previousStopDomainValue","previousStopDomainZoom","stopDomainValues","isZoomFunction","isPropertyFunction","isZoomAndPropertyFunction","validateFunctionStop","validateStopDomainValue","reportValue","isFinite","validateExpression","expressionContext","expressionObj","propertyKey","propertyType","validateEnum","validateFilter","validateNonExpressionFilter","validateProperty","layerSpec","layerType","transitionMatch","tokenMatch","validatePaintProperty","validateLayoutProperty","validateLayer","ref","layerId","otherLayer","sourceType","validateString","prop","validateSource","replace","_a","sourceName","rasterDEM","rasterDEMSpec","rootType","isCustomEncoding","customEncodingKeys","encodingName","validateRasterDEMSource","mapExpr","reduceExpr","validateLight","lightSpec","validateSky","skySpec","validateTerrain","terrainSpec","validateSprite","allSpriteIds","allSpriteURLs","pairSpec","VALIDATORS","projectionSpec","isProjectionDefinitionValue","isPropertyValueSpecification","validate","validateGlyphsUrl","validateStyleMin","sortErrors","injectValidateSpec","validator","wrapCleanErrors","inner","apply","paintProperty","layoutProperty","v8","fontWeights","thin","hairline","book","regular","normal","plain","roman","standard","medium","bold","heavy","fat","poster","sp","italicRE","fontCache","fonts","lineHeight","cssData","haveWeight","haveStyle","weight","fontFamilies","ii","parts","maybeWeight","previousPart","fontFamily","ascending","descending","linearFindNearest","target","direction","candidate","reverseSubArray","begin","end","extension","equals","arr1","arr2","VOID","memoizeOne","lastResult","lastArgs","lastThis","nextArgs","arguments","toPromise","getter","Promise","reject","resolve","promiseGetter","UNKNOWN","INTERSECTING","ABOVE","RIGHT","BELOW","LEFT","boundingExtent","extent","createEmpty","extendCoordinate","dest","clone","closestSquaredDistanceXY","containsCoordinate","coordinate","containsXY","containsExtent","extent1","extent2","coordinateRelationship","maxX","maxY","relationship","Relationship","createOrUpdate","createOrUpdateEmpty","createOrUpdateFromCoordinate","createOrUpdateFromFlatCoordinates","flatCoordinates","offset","stride","extendFlatCoordinates","extendXY","forEachCorner","callback","getBottomLeft","getBottomRight","getTopRight","getTopLeft","getArea","getHeight","getCorner","corner","getForViewAndSize","resolution","rotation","x0","y0","getRotatedViewport","cosRotation","sinRotation","xCos","xSin","yCos","ySin","getIntersection","intersection","intersects","applyTransform","transformFn","xs","ys","_boundingExtentXYs","wrapX","projectionExtent","getExtent","canWrapX","worldWidth","wrapAndSliceX","multiWorld","linearRingss","endss","flatCenters","ends","linearRingContainsExtent","linearRingContainsXY","wn","linearRingsContainsXY","getInteriorPointOfArray","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","segmentLength","getInteriorPointsOfMultiArray","interiorPoints","squaredSegmentDistance","angleInRadians","angleInDegrees","lerp","decimals","factor","interpolatePoint","fraction","dimension","o","cumulativeLengths","comparator","mid","cmp","low","high","found","lineStringCoordinateAtM","extrapolate","lo","hi","m0","linearRingIsClockwise","edge","linearRingsAreOriented","isClockwise","linearRingssAreOriented","orientLinearRings","orientLinearRingsArray","startOrientation","prevEndIndex","orientation","douglasPeucker","squaredTolerance","simplifiedFlatCoordinates","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","squaredDistance","douglasPeuckerArray","simplifiedEnds","snap","quantize","dx1","dy1","dx2","dy2","quantizeArray","transform2D","transform","destinationStride","rotate","anchorX","anchorY","deltaX","deltaY","levels","info","level","coordinate1","coordinate2","cosAngle","sinAngle","worldsAway","sourceExtentWidth","code_","code","units_","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","getCode","getUnits","getMetersPerUnit","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setExtent","setWorldExtent","setGetPointResolution","func","getPointResolutionFunc","RADIUS","HALF_SIZE","WORLD_EXTENT","MAX_SAFE_Y","EPSG3857Projection","cosh","PROJECTIONS","fromEPSG4326","toEPSG4326","EPSG4326Projection","cache","transforms","destination","sourceCode","destinationCode","K0","E3","E_P2","SQRT_E","_E","_E2","_E3","_E4","_E5","M1","M2","M3","M4","P2","P3","P4","P5","R","toLonLat","easting","northing","zone","mu","north","pRad","pSin","pSin2","pCos","pTan","pTan2","pTan4","epSin","epSinSqrt","c2","d3","d4","d5","latitude","longitude","zoneToCentralLongitude","MIN_LATITUDE","MAX_LATITUDE","MIN_LONGITUDE","MAX_LONGITUDE","latRad","latSin","latCos","latTan","latTan2","latTan4","lonRad","centralLonRad","a2","a3","a4","a5","a6","epsgRegExes","zoneFromCode","epsgId","makeTransformFunction","transformer","DEFAULT_RADIUS","getDistance","c1","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","transformFactories","forward","inverse","projectionFactories","showCoordinateWarning","disableCoordinateWarning","disable","cloneTransform","addProjection","projectionLike","makeProjection","pointResolution","projUnits","getTransformFromProjections","vertices","addEquivalentProjections","projections","addProjections","createProjection","defaultCode","createTransformFromCoordinateTransform","coordTransform","pointLength","jj","equivalent","projection1","projection2","equalUnits","transformFunc","sourceTransforms","destinationTransforms","makeTransforms","intermediateCode","composeTransformFuncs","fromSource","toDestination","dimensions","getTransform","userProjection","getUserProjection","toUserCoordinate","sourceProjection","fromUserCoordinate","destProjection","projections2","forwardTransform","inverseTransform","assertion","errorMessage","tmp_","set","multiply","transform1","transform2","a1","b1","d1","e1","b2","e2","compose","sx","sy","makeInverse","det","mat","matrixPrecision","tmpTransform","RenderFeature","styleFunction","id_","type_","flatCoordinates_","flatInteriorPoints_","flatMidpoints_","ends_","properties_","squaredTolerance_","stride_","simplifiedGeometry_","getFlatInteriorPoint","flatCenter","getFlatInteriorPoints","getFlatMidpoint","getFlatMidpoints","midpoint","getId","getOrientedFlatCoordinates","getGeometry","getSimplifiedGeometry","simplifyTransformed","getProperties","getPropertiesInternal","getStride","getStyleFunction","pixelExtent","projectedExtent","assign","getEnds","enableSimplifyTransformed","getFlatCoordinates","IDLE","LOADING","LOADED","ERROR","EMPTY","ua","navigator","userAgent","WORKER_OFFSCREEN_CANVAS","devicePixelRatio","WorkerGlobalScope","OffscreenCanvas","self","Image","decode","passive","window","addEventListener","removeEventListener","canvasPool","settings","canvas","document","createElement","getContext","sharedCanvasContext","getSharedCanvasContext2D","releaseCanvas","clearRect","NO_COLOR","colorParseContext","rgbModernRegEx","rgbLegacyAbsoluteRegEx","rgbLegacyPercentageRegEx","hexRegEx","toColorComponent","divider","endsWith","substring","throwInvalidColor","parseRgba","rgbDivider","colorFromHex","colorComponent","willReadFrequently","desynchronized","fillStyle","invalidCheckFillStyle","colorString","fillRect","colorFromImage","getImageData","MAX_CACHE_SIZE","cacheSize","withAlpha","rgbaToLcha","q","asArray","disposed","dispose","disposeInternal","propagationStopped","defaultPrevented","preventDefault","stopPropagation","eventTarget_","pendingRemovals_","dispatching_","listeners_","listener","listeners","listenersForType","dispatchEvent","event","isString","evt","Event","dispatching","pendingRemovals","propagate","handleEvent","pr","getListeners","hasListener","listen","thisArg","once","originalListener","bind","eventsKey","listenOnce","unlistenByKey","decodeFallback","src","then","catch","complete","handleLoad","unlisten","handleError","load","IconImageCache","cache_","patternCache_","cacheSize_","maxCacheSize_","clear","canExpireCache","expire","iconImage","crossOrigin","getCacheKey","getPattern","pattern","update","getImageState","ImageState","ready","createPattern","getImage","setSize","maxCacheSize","shared","taintedTestContext","IconImage","imageState","hitDetectionImage_","image_","crossOrigin_","canvas_","color_","imageState_","size_","src_","tainted_","ready_","initializeImage_","isTainted_","drawImage","dispatchChangeEvent_","EventType","handleImageError_","handleImageLoad_","pixelRatio","replaceColor_","getPixelRatio","getHitDetectionImage","getSize","getSrc","HTMLImageElement","globalCompositeOperation","onChange","cacheKey","asColorLike","canvasPattern","patternCanvasContext","asCanvasPattern","Observable","on","un","revision_","changed","getRevision","onInternal","onceInternal","ol_key","unInternal","unByKey","uidCounter_","getUid","ol_uid","ObjectEvent","oldValue","values_","setProperties","getKeys","hasProperties","notify","eventType","ObjectEventType","addChangeListener","removeChangeListener","silent","applyProperties","unset","fontRegEx","RegExp","fontRegExMatchIndex","getFontParameters","fontSpec","variant","families","family","defaultFont","defaultFillStyle","defaultLineCap","defaultLineDash","defaultLineJoin","defaultStrokeStyle","defaultTextAlign","defaultTextBaseline","defaultPadding","checkedFonts","measureFont","measureContext","textHeights","registerFont","referenceFonts","referenceWidth","isAvailable","fontStyle","fontWeight","referenceFont","measureTextWidth","check","done","clearInterval","setInterval","measureTextHeight","measureElement","metrics","measureText","actualBoundingBoxAscent","actualBoundingBoxDescent","innerHTML","minHeight","maxHeight","border","display","body","appendChild","offsetHeight","removeChild","measureAndCacheTextWidth","reduce","prev","curr","drawImageOrLabel","opacity","labelOrImage","originX","originY","save","globalAlpha","contextInstructions","translate","executeLabelInstructions","restore","toSize","ImageStyle","opacity_","rotateWithView_","rotateWithView","rotation_","scale_","scaleArray_","displacement_","displacement","declutterMode_","declutterMode","getScale","getOpacity","getRotation","getRotateWithView","getDisplacement","getDeclutterMode","getScaleArray","getAnchor","getImageSize","getOrigin","setDisplacement","setOpacity","setRotateWithView","setRotation","setScale","listenImageChange","unlistenImageChange","RegularShape","hitDetectionCanvas_","fill_","origin_","points_","radius2_","radius2","angle_","stroke_","stroke","renderOptions_","loading","render","getFill","getPoints","getRadius","getRadius2","getAngle","getStroke","setFill","createHitDetectionCanvas_","fillKey","getKey","renderOptions","draw_","setStroke","calculateLineJoinSize_","lineJoin","strokeWidth","miterLimit","r1","r2","miterRatio","bevelAdd","aa","dd","innerMiterRatio","innerLength","createRenderOptions","strokeStyle","lineCap","lineDash","lineDashOffset","getColor","getWidth","getLineDash","getLineDashOffset","getLineJoin","getLineCap","getMiterLimit","add","maxRadius","createPath_","lineWidth","setLineDash","drawHitDetectionCanvas_","arc","startAngle","angle0","radiusC","lineTo","closePath","setRadius","patternImage_","setColor","patternImage","CanvasPattern","CanvasGradient","calculateScale","wantedWidth","wantedHeight","Icon","anchor_","normalizedAnchor_","anchorOrigin_","anchorOrigin","anchorXUnits_","anchorXUnits","anchorYUnits_","anchorYUnits","img","iconImage_","offset_","offsetOrigin_","offsetOrigin","initialOptions_","onload","imageSize","setAnchor","iconImageSize","lineCap_","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","width_","setLineCap","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","Style","geometry_","geometryFunction_","defaultGeometryFunction","setGeometry","renderer_","renderer","hitDetectionRenderer_","hitDetectionRenderer","text_","zIndex_","zIndex","getRenderer","getText","getZIndex","setRenderer","setHitDetectionRenderer","getHitDetectionRenderer","getGeometryFunction","setImage","setText","setZIndex","defaultStyles","createDefaultStyle","Circle","Text","font_","keepUpright_","keepUpright","textAlign_","textAlign","justify_","justify","repeat_","repeat","textBaseline_","textBaseline","maxAngle_","maxAngle","placement_","placement","overflow_","overflow","offsetX_","offsetX","offsetY_","offsetY","backgroundFill_","backgroundFill","backgroundStroke_","backgroundStroke","padding_","getFont","getPlacement","getRepeat","getMaxAngle","getOverflow","getKeepUpright","getTextAlign","getJustify","getTextBaseline","getOffsetX","getOffsetY","getBackgroundFill","getBackgroundStroke","getPadding","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setRepeat","setKeepUpright","setTextAlign","setJustify","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","easeIn","easeOut","inAndOut","tileCoord","state","transition_","transitionStarts_","release","setState","TileState","getTileCoord","getState","getAlpha","time","start","delta","inTransition","endTransition","tileLoadFunction","format_","features_","loader_","tileLoadFunction_","url_","getTileUrl","getFormat","getFeatures","onLoad","dataProjection","setFeatures","onError","setLoader","loader","functionCacheByStyleId","filterCacheByStyleId","styleId","getStyleId","glStyle","degrees","resolutions","res","createCanvas","zoomFactor","drawIconHalo","spriteImage","spriteImageData","haloWidth","haloColor","imgSize","imageCanvas","imageContext","imageData","smoothstep","drawSDF","gamma","putImageData","hairSpacePool","applyLetterSpacing","letterSpacing","textWithLetterSpacing","lines","joinSpaceString","ll","getMeasureContext","measureCache","wrapText","em","hardLines","wrappedText","words","maxWidth","word","testLine","prevWidth","nextWidth","next","lineWords","lastWord","expressionData","rawExpression","compiledExpression","emptyObj","zoomObj","renderFeatureCoordinates","renderFeature","layoutOrPaint","functionCache","functions","isExpr","prefix","evaluateFilter","filterCache","renderTransparentEnabled","colorWithOpacity","templateRegEx","fromTemplate","recordLayer","stylefunction","olLayer","sourceOrLayers","spriteData","spriteImageUrl","getFonts","spriteImageSize","spriteImageUnSDFed","blobUrl","Request","fetch","response","blob","URL","createObjectURL","revokeObjectURL","worker","postMessage","action","allLayers","create","layersBySourceLayer","mapboxLayers","iconImageCache","patternCache","mapboxSource","sourceLayer","textHalo","styles","onlyLayer","featureBelongsToLayer","stylesLength","layerData","strokeColor","fillIcon","icon","icon_cache_key","iconImg","skipLabel","textLineHeight","textSize","maxTextWidth","hasImage","placementAngle","styleGeom","imageElement","iconRotationAlignment","geom","xM","dotProduct","iconSize","iconColor","iconCacheKey","iconOptions","sdf","circleRadius","circleStrokeColor","circleTranslate","circleColor","circleStrokeWidth","cache_key","fontArray","textField","acc","chunk","chunkFont","textTransform","wrappedLabel","textAnchor","symbolSpacing","textHaloWidth","textOffset","textTranslate","vOffset","hOffset","textRotationAlignment","textJustify","halfTextSize","textPadding","setStyle","DROP","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","element","siftUp_","elementKey","enqueue","priority","siftDown_","getCount","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isKeyQueued","isQueued","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","tilePriorityFunction","tileChangeCallback","boundHandleTileChange_","handleTileChange","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","getTilesLoading","tile","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","getTilePriority","frameState","tileSourceKey","tileCenter","tileResolution","wantedTiles","viewState","CENTER","RESOLUTION","ROTATION","createExtent","onlyCenter","smooth","isMoving","centerShift","viewWidth","viewHeight","shiftX","shiftY","ratio","tmpPoint","extentRevision_","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","simplifyTransformedInternal","revision","closestPointXY","closestPoint","minSquaredDistance","MIN_VALUE","getClosestPoint","intersectsCoordinate","computeExtent","returnOrUpdate","simplify","intersectsExtent","sourceProj","inCoordinates","outCoordinates","transformed","projTransform","getLayoutForStride","getStrideForLayout","getCoordinates","getFirstCoordinate","getLastCoordinate","getLayout","simplifiedGeometry","getSimplifiedGeometryInternal","setFlatCoordinates","setCoordinates","setLayout","nesting","linearRing","twiceArea","linearRings","assignClosest","offset1","offset2","maxSquaredDelta","squaredDelta","arrayMaxSquaredDelta","assignClosestPoint","maxDelta","isRing","assignClosestArrayPoint","deflateCoordinates","deflateCoordinatesArray","coordinatess","deflateMultiCoordinatesArray","coordinatesss","inflateCoordinates","inflateCoordinatesArray","inflateMultiCoordinatesArray","LinearRing","maxDelta_","maxDeltaRevision_","deflateCoordinate","ret","intersectsLineString","coordinatesExtent","point1","point2","startRel","endRel","startX","startY","endX","endY","slope","intersectsSegment","intersectsLinearRing","intersectsLinearRingArray","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","appendLinearRing","getInteriorPoint","getLinearRingCount","getLinearRing","getLinearRings","fromExtent","getViewportClampedResolution","maxExtent","viewportSize","showFullExtent","xResolution","yResolution","getSmoothClampedResolution","maxResolution","minResolution","createMinMaxResolution","cappedMaxRes","DEFAULT_MAX_ZOOM","DEFAULT_TILE_SIZE","animationCallback","returnValue","setTimeout","isNoopAnimation","animation","sourceCenter","targetCenter","sourceResolution","targetResolution","sourceRotation","targetRotation","calculateCenterOn","rotX","rotY","hints_","animations_","updateAnimationKey_","projection_","viewportSize_","targetCenter_","targetResolution_","targetRotation_","nextCenter_","nextResolution_","nextRotation_","cancelAnchor_","applyOptions_","ViewProperty","resolutionConstraintInfo","resolutionConstraint","defaultMaxZoom","defaultZoomFactor","minZoom","maxZoom","smoothResolutionConstraint","projExtent","constrainOnlyCenter","constrainResolution","capped","createSnapToResolutions","defaultMaxResolution","defaultMinResolution","power","minZoomLevel","cappedZoomLevel","zoomLevel","createSnapToPower","constraint","createResolutionConstraint","maxResolution_","minResolution_","zoomFactor_","resolutions_","minZoom_","centerConstraint","smoothExtentConstraint","createCenterConstraint","rotationConstraint","enableRotation","constrainRotation","createSnapToZero","theta","createSnapToN","createRotationConstraint","constraints_","setCenterInternal","setResolution","setZoom","oldPadding","getCenterInternal","newPadding","getResolution","getUpdatedOptions_","newOptions","getZoom","animate","var_args","isDef","getAnimating","resolveConstraints","getProjection","animateInternal","animationCount","Date","now","series","easing","getResolutionForZoom","setHint","ViewHint","updateAnimations_","getInteracting","cancelAnimations","cancelAnimationFrame","more","seriesComplete","elapsed","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","requestAnimationFrame","currentCenter","currentResolution","setViewportSize","getCenter","getConstraints","getConstrainResolution","getHints","hints","calculateExtent","calculateExtentInternal","getViewportSizeMinusPadding_","getMaxResolution","getMinResolution","getMaxZoom","getZoomForResolution","setMaxZoom","getMinZoom","setMinZoom","setConstrainResolution","enabled","getResolutions","getResolutionForExtent","getResolutionForExtentInternal","getResolutionForValueFunction","getConstrainedResolution","getValueForResolutionFunction","logPower","reducedSize","nextCenter","nextResolution","nextRotation","getViewStateAndExtent","baseLevel","fit","geometryOrExtent","fitInternal","rotatedExtentForGeometry","minRotX","minRotY","maxRotX","maxRotY","rotatedExtent","centerRot","centerX","centerY","getConstrainedCenter","centerOn","centerOnInternal","calculateCenterShift","shiftedCenter","adjustCenter","deltaCoordinates","setCenter","adjustCenterInternal","adjustResolution","adjustResolutionInternal","newResolution","adjustZoom","adjustRotation","adjustRotationInternal","newRotation","hint","doNotCancelAnims","forceMoving","newCenter","resolutionDirection","beginInteraction","endInteraction","endInteractionInternal","getConstrainedZoom","targetZoom","targetRes","background_","className_","className","state_","getBackground","getClassName","getLayerState","managed","getVisible","getLayersArray","getLayerStatesArray","states","getSourceState","setBackground","setMaxResolution","setMinResolution","setVisible","zindex","inView","layerState","Base","baseOptions","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","sourceReady_","rendered","setMap","handleSourcePropertyChange_","setSource","getSource","getRenderSource","handleSourceChange_","clearRenderer","pixel","getData","isVisible","view","getMapInternal","getView","layerStatesArray","getLayerGroup","find","layerExtent","getAttributions","attributions","layerRenderer","prepareFrame","renderFrame","unrender","getDeclutter","renderDeclutter","renderDeferred","setMapInternal","handlePrecompose_","renderEvent","arrayLayerState","createRenderer","hasRenderer","maxEntries","_maxEntries","_minEntries","_all","search","node","toBBox","nodesToSearch","children","childBBox","leaf","contains","collides","insert","_build","_splitRoot","tmpNode","_insert","createNode","remove","equalsFn","indexes","goingUp","findItem","_condense","compareMinX","compareMinY","fromJSON","items","M","calcBBox","N2","N1","multiSelect","right2","right3","_chooseSubtree","targetNode","minArea","minEnlargement","bboxArea","enlargement","isNode","insertPath","_split","_adjustParentBBoxes","_chooseSplitAxis","splitIndex","_chooseSplitIndex","newNode","minOverlap","distBBox","overlap","intersectionArea","compareNodeMinX","compareNodeMinY","_allDistMargin","leftBBox","rightBBox","margin","bboxMargin","siblings","destNode","numTypes","NumberArrayType","SizeType","AnyType","typeNames","namedTypes","typeName","names","namedType","includesType","broad","specific","isType","LiteralExpression","isSpecific","CallExpression","newParsingContext","variables","featureId","mapState","encoded","returnType","parsers","parseCallExpression","Ops","Get","Concat","GeometryType","LineMetric","Any","All","Not","Resolution","Zoom","Time","Equal","NotEqual","GreaterThanOrEqualTo","LessThanOrEqualTo","Multiply","Divide","Add","Subtract","Clamp","Mod","Pow","Abs","Floor","Ceil","Round","Sin","Cos","Atan","Sqrt","Between","Id","Band","Palette","ToString","Has","createCallExpressionParser","hasArgsCount","withGetArgs","withNoArgs","withArgsOfType","usesMapState","withArgsOfReturnType","hasEvenArgs","argsCount","fallback","operation","condition","needleType","colors","parsedColors","minArgs","maxArgs","argType","validators","computeGeometryType","getGeometries","buildExpression","compileExpression","colorValue","compileAssertionExpression","nameExpression","hasOwn","compileAccessorExpression","compileLogicalExpression","compileComparisonExpression","compileNumericExpression","compileCaseExpression","compileMatchExpression","previousInput","previousOutput","isColor","interpolateColor","compileInterpolateExpression","compileConvertExpression","input1","output1","input2","output2","along","rgba1","rgba2","lcha1","lcha2","deltaHue","lchaToRgba","rulesToStyleFunction","rules","parsingContext","evaluator","compiledRules","rule","styleLength","buildStyle","someMatched","filterEvaluator","else","styleEvaluator","buildRuleSet","evaluationContext","flatStylesToStyleFunction","flatStyles","evaluators","nonNullCount","flatStyle","evaluateFill","buildFill","evaluateStroke","buildStroke","evaluateText","evaluateValue","stringEvaluator","evaluateBackgroundFill","evaluateBackgroundStroke","evaluateFont","evaluateMaxAngle","numberEvaluator","evaluateOffsetX","evaluateOffsetY","evaluateOverflow","booleanEvaluator","evaluatePlacement","evaluateRepeat","evaluateScale","sizeLikeEvaluator","evaluateRotateWithView","evaluateRotation","evaluateAlign","evaluateJustify","evaluateBaseline","evaluateKeepUpright","evaluatePadding","numberArrayEvaluator","optionalDeclutterMode","buildText","evaluateImage","srcName","requireString","evaluateAnchor","coordinateEvaluator","evaluateOpacity","evaluateDisplacement","optionalIconOrigin","optionalIconAnchorUnits","requireColorLike","optionalColorLike","optionalString","requireNumberArray","optionalNumberArray","optionalNumber","optionalSize","buildIcon","pointsName","radiusName","requireNumber","shape","buildShape","evaluateRadius","buildCircle","buildImage","evaluateZIndex","empty","evaluateColor","srcEvaluator","offsetEvaluator","sizeEvaluator","patternSizeEvaluator","colorEvaluator","colorLikeEvaluator","patternEvaluator","evaluateWidth","evaluateLineCap","evaluateLineJoin","evaluateLineDash","evaluateLineDashOffset","evaluateMiterLimit","requireSize","requireSizeLike","renderBuffer","updateWhileAnimating","updateWhileInteracting","declutter_","declutter","renderBuffer_","style_","styleFunction_","updateWhileAnimating_","updateWhileInteracting_","getRenderBuffer","getRenderOrder","getStyle","getUpdateWhileAnimating","getUpdateWhileInteracting","declutterGroup","setRenderOrder","renderOrder","styleLike","toStyleLike","setDeclutter","inversePixelTransform","geometryOrProperties","geometryName_","geometryChangeKey_","handleGeometryChanged_","setGeometryName","getGeometryName","handleGeometryChange_","createStyleFunction","setId","lineStringLength","flatMidpoint_","flatMidpointRevision_","appendCoordinate","forEachSegment","getCoordinateAtM","getCoordinateAt","getLength","appendPoint","multiPoint","getPoint","lineStrings","appendLineString","multiLineString","lineStringsCoordinateAtM","getLineString","getLineStrings","midpoints","intersectsLineStringArray","endss_","flatInteriorPointsRevision_","thisEndss","appendPolygon","newEndss","multiPolygon","multiArrayMaxSquaredDelta","assignClosestMultiArrayPoint","linearRingssContainsXY","getEndss","getInteriorPoints","simplifiedEndss","quantizeMultiArray","getPolygon","prevEnds","getPolygons","intersectsLinearRingMultiArray","lastEnds","defaultFeatureProjection","featureClass","supportedMediaTypes","getReadOptions","readProjection","featureProjection","adaptOptions","readFeature","readFeatures","readGeometry","writeFeature","writeFeatures","writeGeometry","transformGeometryWithOptions","write","fromProjection","toProjection","SHIFT_LEFT_32","SHIFT_RIGHT_32","utf8TextDecoder","TextDecoder","Pbf","buf","Uint8Array","ArrayBuffer","isView","dataView","DataView","readFields","readField","readVarint","tag","startPos","skip","readMessage","readFixed32","getUint32","readSFixed32","getInt32","readFixed64","readSFixed64","readFloat","getFloat32","readDouble","getFloat64","isSigned","toNum","readVarintRemainder","readVarint64","readSVarint","readBoolean","readString","subarray","str","b0","b3","bytesPerSequence","fromCharCode","readUtf8","readBytes","readPackedVarint","readPackedEnd","readPackedSVarint","readPackedBoolean","readPackedFloat","readPackedDouble","readPackedFixed32","readPackedSFixed32","readPackedFixed64","readPackedSFixed64","writeTag","writeVarint","realloc","finish","writeFixed32","setInt32","writeSFixed32","writeFixed64","writeSFixed64","pbf","writeBigVarintLow","lsb","writeBigVarintHigh","writeBigVarint","writeSVarint","writeBoolean","writeString","lead","charCodeAt","writeUtf8","makeRoomForExtraLength","writeFloat","setFloat32","writeDouble","setFloat64","writeBytes","writeRawMessage","writeMessage","writePackedVarint","writePackedSVarint","writePackedBoolean","writePackedFloat","writePackedDouble","writePackedFixed32","writePackedSFixed32","writePackedFixed64","writePackedSFixed64","writeBytesField","writeFixed32Field","writeSFixed32Field","writeFixed64Field","writeSFixed64Field","writeVarintField","writeSVarintField","writeStringField","writeFloatField","writeDoubleField","writeBooleanField","extraLen","layersPBFReader","layerPBFReader","featurePBFReader","readRawFeature","geometryName","layerName_","layerName","layers_","idProperty_","idProperty","readRawGeometry_","cmd","coordsLen","currentEnd","cmdLen","createFeature_","rawFeature","numEnds","getGeometryType","ctor","pbfLayers","pbfLayer","setLayers","drawCustom","drawGeometry","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","drawText","setFillStrokeStyle","setImageStyle","imageStyle","declutterImageWithText","setTextStyle","textStyle","Instruction","BEGIN_GEOMETRY","BEGIN_PATH","CIRCLE","CLOSE_PATH","CUSTOM","DRAW_CHARS","DRAW_IMAGE","END_GEOMETRY","FILL","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","STROKE","fillInstruction","strokeInstruction","beginPathInstruction","closePathInstruction","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","tmpCoordinate_","hitDetectionInstructions","applyPixelRatio","dashArray","dash","appendFlatPointCoordinates","getBufferedMaxExtent","tmpCoord","myEnd","appendFlatLineCoordinates","closed","skipFirst","lastXCoord","lastYCoord","nextCoord","lastRel","nextRel","skipped","drawCustomCoordinates_","builderEnds","builderEnd","beginGeometry","builderBegin","builderEndss","myEnds","endGeometry","reverseHitDetectionInstructions","reverse","instruction","fillStyleToState","fillStyleColor","fillPatternScale","strokeStyleToState","strokeStyleColor","strokeStyleLineCap","strokeStyleLineDash","strokeStyleLineDashOffset","strokeStyleLineJoin","strokeStyleWidth","strokeStyleMiterLimit","createFill","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","imagePixelRatio_","anchorX_","anchorY_","height_","originX_","originY_","declutterImageWithText_","myBegin","filteredFlatCoordinates","sharedData","origin","drawFlatCoordinates_","moveToLineToInstruction","lastStroke","drawFlatCoordinatess_","setFillStrokeStyles_","circleInstruction","lineChunk","chunkLength","chunks","cursor","chunkM","currentChunk","missing","matchingChunk","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","TEXT_ALIGN","labels_","textOffsetX_","textOffsetY_","textRotateWithView_","textKeepUpright_","textRotation_","textFillState_","fillStates","textStrokeState_","strokeStates","textState_","textStates","textKey_","fillKey_","strokeKey_","fillState","strokeState","textState","geometryWidths","beg","keep","saveTextStates_","p0","p3","hitDetectionBackgroundFill","flatOffset","oo","cc","chunkBegin","drawChars_","strokeKey","textKey","baseline","textFillStyle","textStrokeStyle","textScale","textOffsetX","textOffsetY","textRotateWithView","textKeepUpright","textRotation","BATCH_CONSTRUCTORS","PolygonBuilder","Builder","ImageBuilder","LineStringBuilder","TextBuilder","tolerance_","maxExtent_","pixelRatio_","resolution_","buildersByZIndex_","builderInstructions","zKey","builders","builderKey","builderInstruction","getBuilder","builderType","zIndexKey","replays","replay","Constructor","drawTextOnPath","startM","segmentM","advance","beginX","beginY","startOffset","startLength","endM","singleSegment","previousAngle","iStart","charLength","chars","instructions_","context_","Proxy","pushMethodArgs_","pushFunction","draw","instructionsAtIndex","instructionAtIndex","tmpExtent","p4","getDeclutterBox","replayImageOrLabelArgs","declutterBox","rtlRegEx","horizontalTextAlign","align","createTextChunks","overlaps","deferredRendering","alignAndScaleFill_","coordinateCache_","renderedTransform_","pixelCoordinates_","viewRotation_","widths_","zIndexContext_","getZIndexContext","createLabel","widths","heights","lineWidths","baseStyle","currentWidth","currentHeight","getTextDimensions","renderWidth","leftRight","strokeInstructions","fillInstructions","previousFont","lineOffset","widthHeightIndex","lineWidthIndex","fillStrokeArgs","replayTextBackground_","beginPath","moveTo","setStrokeStyle_","calculateImageOrLabelDimensions_","sheetWidth","sheetHeight","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","drawImageX","drawImageY","drawImageW","drawImageH","canvasTransform","replayImageOrLabel_","scaledCanvasSize","imageOrLabel","box","strokePadding","alignAndScale","repeatSize","drawLabelWithPointPlacement_","execute_","featureCallback","hitExtent","declutterTree","zIndexContext","pixelCoordinates","prevX","prevY","roundX","roundY","pendingFill","pendingStroke","coordinateCache","viewRotation","viewRotationFromTransform","batchSize","currentGeometry","labelWithAnchor","backgroundFillInstruction","backgroundStrokeInstruction","widthIndex","imageArgs","imageDeclutterMode","imageDeclutterBox","renderImage","renderText","imageDeclutter","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","textLength","drawChars","execute","executeHitDetection","ALL","DECLUTTER","circlePixelIndexArrayCache","allInstructions","overlaps_","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","renderedContext_","deferredZIndexContexts_","createExecutors_","clip","flatClipCoords","getClipCoords","executors","instructionByZindex","hasExecutors","candidates","forEachFeatureAtCoordinate","hitTolerance","declutteredFeatures","contextSize","newContext","maxDistanceSq","distances","distanceSq","pixelIndex","getPixelIndexArray","idx","zs","executor","targetContext","builderTypes","maxBuilderTypes","requireClip","getDeferredZIndexContexts","getRenderedContext","deferredZIndexContexts","userTransform","transform_","transformRotation_","userTransform_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","textScale_","tmpLocalTransform_","drawImages_","localTransform","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","drawRings_","simpleGeometry","transformGeom2D","setTransform","getGeometriesArray","flatMidpoint","geometryExtent","flatMidpoints","flatInteriorPoint","flatInteriorPoints","contextFillState","contextStrokeState","contextTextState","imagePixelRatio","imageAnchor","imageOrigin","imageScale","textFillStyleColor","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textText","textTextAlign","textTextBaseline","HIT_DETECT_RESOLUTION","createHitDetectionImageData","userExtent","imageSmoothingEnabled","featureCount","indexFactor","featuresByZIndex","featureStyleFunction","padStart","originalStyle","imgContext","byGeometryType","getGeometriesArrayRecursive","zIndexKeys","geomAndStyle","kk","hitDetect","resultFeatures","SIMPLIFY_TOLERANCE","GEOMETRY_RENDERERS","builderGroup","hasText","imageReplay","textReplay","lineStringReplay","polygonReplay","replayGroup","declutterBuilderGroup","geometryRenderer","circleReplay","getSquaredTolerance","getTolerance","loadingPromises","renderGeometry","renderFeatureInternal","boundHandleImageChange_","handleImageChange_","layer_","staleKeys_","maxStaleKeys","getStaleKeys","prependStaleKey","unshift","matches","getLayer","handleFontsChanged","renderIfReadyAndVisible","loadImage","pixelContext","container","renderedResolution","tempTransform","pixelTransform","deferredContext_","containerReused","col","row","useContainer","backgroundColor","layerClassName","firstElementChild","HTMLCanvasElement","transformOrigin","clipUnrotated","topLeft","topRight","bottomRight","bottomLeft","coordinateToPixelTransform","inverted","prepareContainer","dispatchRenderEvent_","preRender","postRender","renderDeferredInternal","getRenderContext","getRenderTransform","asImageLike","HTMLVideoElement","ImageBitmap","disposedError","defaultSize","data_","error_","controller_","controller","getError","abort","unlisten_","unlistenImage_","getBlankImage","naturalWidth","naturalHeight","loadHandler","errorHandler","listening","decoding","loaded","listenerKeys","listenImage","TileRange","containsTileRange","tileRange","extend","brokenDiagonalRendering_","drawTestTriangle","u1","u2","verifyBrokenDiagonalRendering","calculateSourceResolution","targetProj","targetMetersPerUnit","sourceMetersPerUnit","sourceExtent","compensationFactor","targetExtent","triangulation","gutter","renderEdges","drawSingle","clipExtent","pixelRound","sourceDataExtent","stitchContext","stitchScale","inverseScale","xPos","yPos","rect","srcWidth","srcHeight","targetTopLeft","getTriangles","triangle","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","affineCoefs","maxRow","maxEl","absValue","coef","solveLinearSystem","isBrokenDiagonalRendering","steps","ud","vd","maxSourceExtent","errorThreshold","destinationResolution","sourceMatrix","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","log2","addQuad_","leftBound","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","isNotFinite","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","sourceTileGrid","targetTileGrid","wrappedTileCoord","getTileFunction","renderEdges_","gutter_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","clipExtent_","getTileCoordExtent","maxTargetExtent","limitedTargetExtent","sourceProjExtent","calculateSourceExtentResolution","errorThresholdInPixels","triangulation_","getZForResolution","sourceRange","getTileRangeForExtentAndZ","srcX","srcY","reproject_","getTileSize","leftToLoad","sourceListenKey","unlistenSources_","highWaterMark","count_","entries_","oldest_","newest_","deleteOldest","entry","expireCache","containsKey","value_","key_","newer","older","getValues","peekLast","peekLastKey","peekFirstKey","getKeyZXY","sourceKey","addTileToLookup","tilesByZ","existing","removeTileFromLookup","delete","getRenderExtent","layerIndex","getWrapX","gridExtent","getTileGridForProjection","tileLayer","extentChanged","renderComplete","renderedExtent_","renderedPixelRatio","renderedProjection","renderedRevision_","renderedTiles","renderedSourceKey_","renderedSourceRevision_","tempExtent","tempTileRange_","tempTileCoord_","tileCache_","getTileCache","getOrCreateTile","tileCache","tileSource","getTile","pixelToCoordinateTransform","tilePixelRatio","getTilePixelRatio","getTileCoordForCoordAndZ","tileOrigin","getGutterForProjection","sourceRevision","enqueueTiles","initialZ","preload","minZ","zDirection","tileCoordIntersectsViewport","tileQueueKey","tileQueue","getTileCoordCenter","findStaleTile_","staleKeys","findAltTiles_","altZ","getTileRangeForTileCoordAndZ","covered","allTilesIdle","viewResolution","viewCenter","frameExtent","canvasExtent","getPreload","nextExtent","targetZ","renderExtent","uid","tileState","parentZ","canvasScale","getInterpolate","currentClip","clips","clipZs","currentZ","currentTilePixelSize","getTilePixelSize","currentScale","originTileCoord","originTileExtent","tileGutter","xIndex","nextX","yIndex","nextY","contextSaved","drawTile","updateUsedTiles","usedTiles","postRenderFunction","tilesCount","updateCacheSize","postRenderFunctions","tileCount","getTileImage","alphaChanged","IMAGE_REPLAYS","VECTOR_REPLAYS","boundHandleStyleImageChange_","handleStyleImageChange_","renderedLayerRevision_","renderedPixelToCoordinateTransform_","renderedRotation_","renderedOpacity_","tmpTransform_","tileClipContexts_","updateExecutorGroup_","tileImageNeedsRender_","renderTileImage_","viewHints","wantedResolution","layerRevision","builderState","getReplayState","dirty","renderedRevision","renderedRenderOrder","getTileGrid","tileExtent","sourceTiles","getSourceTiles","layerUid","hitDetectionImageData","executorGroups","tt","sourceTile","sourceTileCoord","sourceTileExtent","sharedExtent","builderExtent","bufferedExtent","executorGroupInstructions","replayExtent","getRenderMode","renderingReplayGroup","getOverlaps","lastIndexOf","foundFeature","tileCoordString","getTileCoordForCoordAndResolution","loadingSourceTiles","tilePixel","accumulator","getFeaturesInExtent","visitedSourceTiles","tileFeatures","hifi","getTileRenderTransform","executorGroup","executorGroupZIndexContexts","usedZIndices","executorGroupZindexContext","zIndexContexts","tileClipContext","worldOffset","renderMode","replayTypes","tileClipContexts","group","clipContext","replayState","renderedTileResolution","renderedTileRevision","renderPixelRatio","renderScale","pixelScale","BaseVector","useInterimTilesOnError","renderMode_","setPreload","setUseInterimTilesOnError","TileProperty","getUseInterimTilesOnError","adaptAttributions","attributionLike","attributions_","attributionsCollapsible_","attributionsCollapsible","wrapX_","interpolate_","viewResolver","viewRejector","viewPromise_","getAttributionsCollapsible","refresh","setAttributions","tmpTileCoord","strict","currentVal","isSorted","origins","origins_","tileSizes_","tileSizes","tileSize_","fullTileRanges_","tmpSize_","tmpExtent_","sizes","restrictedTileRange","calculateTileRanges_","forEachTileCoord","forEachTileCoordParentTileRange","tempTileRange","tileCoordExtent","getTileCoordChildTileRange","tileCoordZ","tileCoordX","tileCoordY","getTileCoordForXYAndZ_","opt_tileCoord","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","getTileCoordResolution","getFullTileRange","opt_direction","fullTileRanges","getForProjection","extentFromProjection","resolutionsFromExtent","createForExtent","createForProjection","createXYZ","xyzOptions","gridOptions","half","zRegEx","xRegEx","yRegEx","dashYRegEx","createFromTemplate","template","renderXYZTemplate","createFromTemplates","templates","tileUrlFunctions","createFromTileUrlFunctions","TileSourceEvent","tilePixelRatio_","tmpSize","tileOptions","setKey","getTileCoordForTileUrlFunction","gridProjection","withinExtentAndZ","UrlTile","generateTileUrlFunction_","tileUrlFunction","setUrls","setUrl","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","getPrototypeOf","getUrls","TileEventType","setTileLoadFunction","setTileUrlFunction","startCharCode","stopCharCode","charCode","expandUrl","withCredentials","loadFeaturesXhr","failure","xhr","XMLHttpRequest","open","responseType","status","responseText","responseXML","onerror","send","urlTileCoord","removeSourceTiles","replayState_","errorTileKeys","removeSourceTiles_","hasContext","renderedTileZ","defaultLoadFunction","tileKeysBySourceTileUrl_","tileClass","tileGrids_","sourceZ","tileUrl","sourceTileState","listenChange","sourceTileKey","sourceTileUrl","newTile","setOverlaps","rendererTransform","landcover","contours","maptiler_planet","observables","json","styleJson","buckets","currentSource","spriteUrl","spriteJson","bucket","transferToImageBitmap"],"sourceRoot":""}